<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 10 Jan 2024 06:15:24 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[中文 JDK 教程網站正式上線，助力開發者掌握 Java 編程語言]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#d1d5db; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">為了滿足日益增長的 Java 開發者學習需求，對官方英文文檔理解困難，致力於提供優質編程教育的網站《存在碼》宣佈推出全新的中文 JDK 教程網站。這一網站的上線標誌着學習 Java 編程語言的全新起點，為開發者們提供了豐富而易於理解的學習資源。</span></p><p style="color:#d1d5db; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><strong>網站特色：</strong></span></p><ol><li><p style="margin-left:0; margin-right:0"><strong>全面教程：</strong> 中文 JDK 教程網站提供了覆蓋 Java 各個方面的詳盡教程，旨在幫助開發者建立堅實的編程基礎。</p></li><li><p style="margin-left:0; margin-right:0"><strong>實用示例：</strong> 數百個實用的示例代碼將幫助開發者深入理解 Java 語言的概念和技巧，實踐中學習。</p></li><li><p style="margin-left:0; margin-right:0"><strong>學習路徑：</strong> 精心設計的學習路徑，從入門到精通，讓開發者能夠有系統地提升技能水平。</p></li><li><p style="margin-left:0; margin-right:0"><strong>及時更新：</strong> 網站內容將根據 Java 平台的最新發展和技術趨勢進行及時翻譯更新，確保學習者始終保持與行業同步。</p></li></ol><p style="color:#d1d5db; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><strong>網站創始人表示：</strong>「我們創建這個網站的目標是為中文用戶提供一個高質量、易於理解的 Java 教育平台。我們深知學習編程的挑戰，希望通過這個平台讓更多人輕鬆入門，深入學習 Java 編程語言。」</span></p><p style="color:#d1d5db; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">現在，開發者們可以通過訪問 </span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjava.cunzaima.cn" target="_blank">中文 JDK 教程網站</a><span style="color:#000000">開始他們的 Java 編程之旅。</span></p><p style="color:#d1d5db; margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><strong>關於中文 JDK 教程網站：</strong> 中文 JDK 教程網站是一個專注於為中文用戶提供 Java 編程語言教育的在線學習平台。通過清晰易懂的教程和實用的示例代碼，我們致力於幫助開發者輕鬆學習 Java，並在編程領域取得成功。訪問我們的網站：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjava.cunzaima.cn" target="_blank"><span style="color:#2980b9">https://java.cunzaima.cn/</span></a></p><p><strong>網站截圖：</strong></p><p><img height="763" src="https://oscimg.oschina.net/oscnet/up-a4908099ab2cb02c513eecfbe99f50213fd.png" width="1050" referrerpolicy="no-referrer"></p><p><img height="852" src="https://oscimg.oschina.net/oscnet/up-2059c6f708e6ff8119fcdbb4866fa34a17c.png" width="1888" referrerpolicy="no-referrer"></p><p><img height="733" src="https://oscimg.oschina.net/oscnet/up-d84726feca2fd514680bc5a7aaf4848b0a0.png" width="1910" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 05:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275053</guid>
            <link>https://www.oschina.net/news/275053</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[上海 AI 實驗室聯合港中大（深圳）開源音頻生成平台 Amphion]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>上海人工智能實驗室（上海 AI 實驗室）與香港中文大學（深圳）聯合團隊<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FCjsutc54MgqANMtZj3pOKg" target="_blank">推出</a> AI 音頻生成平台安菲翁（Amphion）。現已開源並提供免費商用。</p><p>其不僅具備語音及歌聲合成轉換、音效及音樂生成等多種能力，更可實現轉換過程可視化，有效地降低了應用門檻，助力更廣泛的開發者進行 AI 音頻研發。</p><p>Amphion 為古希臘神話中的傳奇音樂家，傳説其彈奏的優美琴聲可讓頑石感靈。上海 AI 實驗室聯合團隊藉此為 AI 音頻生成平台命名，希望通過 AI 技術的創新為音頻領域注入全新的研究思路，開源開放，「聲」生不息。</p><p><img height="195" src="https://oscimg.oschina.net/oscnet/up-50aec28c64a629ade537a270d95c38ed10e.png" width="500" referrerpolicy="no-referrer"></p><h4><strong>集成經典模型架構，實現多項生成任務</strong></h4><p>為幫助初級開發者入門 AI 音頻生成研究並使研究過程可復現，Amphion 將當前多個經典模型架構集中於統一平台，使其可實現多項音頻生成任務。</p><p><strong>歌聲轉換 （SVC, Singing Voice Conversion）</strong></p><p>歌聲轉換是指通過 AI 技術，將一位演唱者的音色轉變為另一位演唱者。該技術涉及信號處理、機器學習、深度學習等領域。</p><p>Amphion 系統集成了經典的特徵提取模型用於 SVC 任務，包括經典的擴散模型、VITS 模型及 OpenAI 的 Whisper 模型等。基於擴散的架構使用雙向擴張 CNN 作為後端，並支持 DDPM、DDIM、PNDM 等多種採樣算法。此外，Amphion 還支持基於一致性模型的單步推理。</p><p>目前，Amphion 的特徵設計已被當前業內流行的音頻生成項目 So-VITS-SVC 5.0 借鑑。</p><p><img height="213" src="https://oscimg.oschina.net/oscnet/up-43ddb9355908a681234f663d7e8c32eb864.png" width="700" referrerpolicy="no-referrer"></p><p><strong>文生語音（TTS, Text To Speech）</strong></p><p>文生語音即輸入文字轉成相應語音的技術。當前，該模塊主要採用了深度學習技術，將文本轉換成自然流暢的高擬真度語音。在 TTS 任務模塊，Amphion 系統集成了經典 FastSpeech2 模型、VITS 模型以及 zero-shot 語音合成技術，即 Vall-E，NaturalSpeech2。</p><p><img height="196" src="https://oscimg.oschina.net/oscnet/up-34bba51d4fba3469ce72f4d2904a953e523.png" width="700" referrerpolicy="no-referrer"></p><p><strong>文生音頻（TTA, Text To Audio）</strong></p><p>文生音頻指將文字輸入轉為音樂、場景音效等特定音頻的技術。Amphion 集成了當下主流的文本驅動音頻生成模型架構，即基於 VAE Encoder、Decoder 和 Latent Diffusion 的文本驅動的音頻生成算法。在該架構下，Latent Diffusion 擴散模型以 T5 編碼後的文本為輸入，根據文本的指引生成對應的音頻效果。</p><p>文生音頻模型或將對文化創作產生積極深遠的影響，從業者或可利用此項技術，根據特定需求生成場景音效，省去從頭採集環節，提升生產效率。</p><p><img height="166" src="https://oscimg.oschina.net/oscnet/up-5675245eb7699e52230f19025f4a496385e.png" width="500" referrerpolicy="no-referrer"></p><p>聲碼器（Vocoder）是產生高質量音頻信號的重要模塊。為確保所生成音頻的高音質輸出，Amphion 集成了目前廣泛使用的神經聲碼器（Neural Vocoders），包括 BigVGAN、HiFi-GAN、DiffWave 等主流聲碼器。</p><p>技術報告顯示，Amphion 中的 HiFi-GAN 聲碼器在多項指標上領先於當前熱門開源工具。</p><p><img height="189" src="https://oscimg.oschina.net/oscnet/up-df33b9c0a05c5f8d220f0d8aaf44e960d53.png" width="500" referrerpolicy="no-referrer"></p><h4><strong>可視化功能</strong></h4><p>與傳統的音頻開源工具不同，Amphion 提供了生成過程可視化及音頻可視化功能。聯合團隊旨在通過可視化，使初級開發者者更好地理解模型的原理和細節。下圖為在擴散模型中的 SVC 任務，形象地呈現出由一位歌手音色轉換為另外一位歌手音色的漸變過程。</p><p><img height="242" src="https://oscimg.oschina.net/oscnet/up-a8cbbee92c42b4d6f600a91d234509595e5.png" width="500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 03:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275031</guid>
            <link>https://www.oschina.net/news/275031</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Solus 4.5 發佈，棄用 MATE 轉向 XFCE 版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Solus 4.5 「Resilience」 現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgetsol.us%2F2024%2F01%2F08%2Fsolus-4-5-released%2F" target="_blank">發佈</a>。此版本帶來了更新的應用程序和內核、更新的軟件堆棧、新的安裝程序以及採用 XFCE 桌面環境的新 ISO 版本。</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-23a81b7291d2daba437ec478767f1973ee5.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">Solus 4.5 帶來了使用 Calamares 安裝程序的全新安裝體驗。與此前相比，現在利用 Calamares 可以更輕鬆地在不同配置中設置 Solus，例如 Btrfs 根文件系統和其他配置。這也是擺脫舊版 os-installer 所使用的 Python 2 的重要一步。</span></p><p><span style="color:#000000">與此同時，新版本默認使用 Pipewire 媒體框架取代了 JACK 和 PulseAudio；UI 方面不會產生太大差異，但是會帶來一些性能方面的改進，例如更好、更可靠的藍牙音頻。以及：</span></p><ul><li><span style="color:#000000">為使用受支持的 AMD 硬件的用戶打包了 ROCm 5.5。</span></li><li><span style="color:#000000">附帶 Linux kernel 6.6.9 以提供最新的硬件支持。</span></li><li><span style="color:#000000">Mesa 已升級至 23.3.2，以提供最新的開源圖形驅動程序</span></li></ul><p><span style="color:#000000">桌面環境方面，Solus 4.5 提供了最新版本的 Budgie / GNOME / Plasma，並針對這些桌面環境提供了許多更新；同時發佈了 XFCE 的第一個版本。Solus 4.4 發佈公告曾宣佈計劃棄用 MATE 版本，轉而使用新的 XFCE 版本。XFCE 版的目標是填補與 MATE 版相同的空白：喜歡更輕量級桌面體驗的用戶。</span></p><p><span style="color:#000000">鑑於這是 XFCE 版本的首次發佈，可能會存在一些明顯的不足，所以官方將 4.5 版 XFCE 定義為 beta 版本。新的 XFCE 版本包括：</span></p><ul><li><span style="color:#000000">XFCE version 4.18</span></li><li><span style="color:#000000">Mousepad 0.6.1</span></li><li><span style="color:#000000">Parole 4.18.0</span></li><li><span style="color:#000000">Ristretto 0.13.1</span></li><li><span style="color:#000000">Thunar 4.18.6</span></li><li><span style="color:#000000">Whiskermenu 2.8.0</span></li></ul><p><span style="color:#000000">XFCE 版本採用傳統的桌面佈局，帶有底部面板和 Whiskermenu 作為應用程序菜單。使用 Qogir GTK 主題和 Papirus 圖標主題，打造時尚現代的外觀。並已安裝 Blueman，可滿足用戶對藍牙的所有需求。「這一版本耗費了大量心血，我們很高興能與大家分享！」</span></p><p><span style="color:#000000">此外，官方仍在努力為 MATE 桌面的現有用戶提供無縫過渡路徑。從廣義上講，將為用戶提供一種將其 MATE 安裝遷移到 Budgie 或 XFCE 的方法。在成熟的過渡計劃出爐之前，MATE 將繼續為現有用戶提供支持。</span></p><p>展望 2024，項目團隊計劃在 Plasma 中提供 Discover，並在 GNOME 中提供 Software Center，以實現具有集成 Flatpak 支持的軟件管理。以及將通過修復錯誤、更新系統組件和完成從 python2 的遷移來償還技術債務。還計劃探索如何開始遷移到 Serpent 工具，為 5.0 版本做好準備。</p><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgetsol.us%2F2024%2F01%2F08%2Fsolus-4-5-released%2F" target="_blank">查看官方公告</a>。</p><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgetsol.us%2Fdownload" target="_blank">下載</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 02:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275026/solus-4-5-released</guid>
            <link>https://www.oschina.net/news/275026/solus-4-5-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GitHub 多項服務出現故障]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>GitHub 多項服務昨天出現了故障，具體表現為眾多 API 都出現了 HTTP 5xx 錯誤，錯誤率上升了 1%~5%，涉及的服務包括但不限於：</p><ul><li>Codespaces</li><li>Packages</li><li>Webhooks</li><li>Git 操作</li><li>Pages</li><li>API 請求</li><li>Actions</li><li>Pull Requests</li></ul><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.githubstatus.com%2Fincidents%2Fpxg3dz4yg7lp" target="_blank">從事故報告頁面來看</a></u>，GitHub 當時的解決方案是<strong>將相關問題隔離到一個數據中心進行處理</strong>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-ed70f2066fa0d8193dd82f9badfeb155b0a.png" referrerpolicy="no-referrer"></p><p>不知道 GitHub 最近頻發故障是否跟升級 MySQL 有關？<br><u><em><a href="https://www.oschina.net/news/270460/upgrading-github-com-to-mysql-8-0" target="news">GitHub.com 跑了 1200 多台 MySQL 主機，如何無縫升級到 8.0？</a></em></u></p><p><em>延伸閲讀：<u><a href="https://www.oschina.net/news/188164/github-recent-service-disruptions" target="news">GitHub 解釋近期頻繁宕機原因：MySQL 不堪重負</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 02:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275025/github-incident-20230109</guid>
            <link>https://www.oschina.net/news/275025/github-incident-20230109</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Extism v1.0.0 發佈， WebAssembly 插件實現框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Extism v1.0.0 已正式發佈。Extism 是一個 WebAssembly 插件實現框架，它可以給你的應用開發出各種各樣的 WebAssembly 插件，支持多種編程語言。</p><p><img src="https://oscimg.oschina.net/oscnet/up-5d37397b3cababa42f8754739726d916b86.png" referrerpolicy="no-referrer"></p><p>新版本主要變化：</p><ul><li>採用 Go 重寫新的 Extism CLI</li><li>Rust SDK 和 C SDK 仍保留在<code>extism/extism</code></li><li>Go SDK 通過 Wazero、JS SDK 使用原生 WASM 引擎來運行 JS 運行時（node、deno、bun、瀏覽器）</li><li>Extism 主機函數的模塊命名空間已更改為&nbsp;<code>extism:host/env</code>&nbsp;，用戶定義的主機函數現在默認位於&nbsp;<code>extism:host/user</code>&nbsp;中</li></ul><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fextism%2Fextism%2Freleases%2Ftag%2Fv1.0.0" target="_blank">詳情</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 02:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275021/extism-1-0-0</guid>
            <link>https://www.oschina.net/news/275021/extism-1-0-0</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[全球領先的向量數據庫公司，過去一年都做了哪些事情？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img src="https://oscimg.oschina.net/oscnet/up-2c30b522dd3a9e1d13170c70fc3ed0b22c3.png" alt="" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-41ac69b2f61c0f7f629df531803918e3884.png" alt="" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-4b03e70caa6f70b95fe4992b8e5ab15d675.png" alt="" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 02:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4209276/blog/10740359</guid>
            <link>https://my.oschina.net/u/4209276/blog/10740359</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Jan —— ChatGPT 的開源替代軟件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Jan 是 ChatGPT 的開源替代軟件，可在電腦上 100% 離線運行。</p><p>Jan 可以在任何硬件上運行。從 PC 到多 GPU 集羣，Jan 支持通用架構：</p><ul><li>Nvidia GPUs (fast)</li><li>Apple M-series (fast)</li><li>Apple Intel</li><li>Linux Debian</li><li>Windows x64</li></ul><p><strong>桌面應用程序</strong></p><p>通過可定製的 AI &nbsp;助手、全局熱鍵和內聯 AI 將工作效率提高 10 倍。</p><p><strong>移動應用（即將推出）</strong></p><p>隨身攜帶你的人工智能助手。具有優雅的功能，無縫集成到你的移動工作流程中 。</p><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:rgb(0 0 0/var(--tw-text-opacity))"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span>兼容 OpenAI</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="margin-left:0px; margin-right:0px; text-align:left">Jan 在&nbsp;<strong style="color:#52525b">localhost:&nbsp;</strong><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><strong><span style="background-color:rgb(37 99 235/var(--tw-bg-opacity))"><span style="color:rgb(255 255 255/var(--tw-text-opacity))"><span><span><span><span><span><span><span><span><span><span><span><span><span>1337&nbsp;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>提供了一個與 OpenAI 等效的 API 服務器，可以用作兼容應用程序的直接替代品。</p><p style="margin-left:0px; margin-right:0px; text-align:left"><img height="339" src="https://static.oschina.net/uploads/space/2024/0104/164324_Vw4l_4252687.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:left"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#1c1e21"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>從本質上講，Jan 是一個跨平台、本地優先的 AI 原生框架，可用於構建任何東西。事實上，當前的功能都是在此核心 SDK 之上作為第三方擴展實現的。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0px; margin-right:0px; text-align:left"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#1c1e21"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>項目團隊的目標是建立一個類似 VSCode 或 Obsidian 的框架，允許開發人員在 15 分鐘內根據其特定需求構建和定製複雜的 AI 應用程序。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>&nbsp;</p></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 02:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/jan</guid>
            <link>https://www.oschina.net/p/jan</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 面向 C# 程序員的 Visual Studio 效率提升器 Codist]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-codist" class="anchor" href="https://gitee.com/wmjordan/Codist#codist"></a>Codist</h1><p><em>Codist</em> is a Visual Studio extension which strives to provide better coding experience and productivity for C# programmers.
Codist 是一個致力於為 C# 程序員提供更佳的編碼體驗和效率的 Visual Studio 擴展。</p><h1><a id="user-content-features" class="anchor" href="https://gitee.com/wmjordan/Codist#features"></a>Features</h1><p>Here's a brief but not complete demonstration of <em>Codist</em>'s enhancement to Visual Studio.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/preview.png" alt="Feature overview" referrerpolicy="no-referrer"></p><p>Check out this list to see what <em>Codist</em> can do for you.</p><ul><li><a href="https://gitee.com/wmjordan/Codist#advanced-c-syntax-highlight">Advanced Syntax Highlight</a> ANY LANGUAGES, and <a href="https://gitee.com/wmjordan/Codist#comment-tagger-and-styles"><em>Comment Tagger</em></a> highlights <code>to-do</code> style comments
<img src="https://gitee.com/wmjordan/Codist/raw/master/doc/feature-brief-syntax-highlight.png" alt="" referrerpolicy="no-referrer"></li><li><a href="https://gitee.com/wmjordan/Codist#super-quick-info">Super Quick Info</a> with extended XML Doc, symbol tool-tips, selectable contents, appearance customization, etc.
<img src="https://gitee.com/wmjordan/Codist/raw/master/doc/feature-brief-super-quick-info.png" alt="Feature Brief Super Quick Info" referrerpolicy="no-referrer"></li><li><a href="https://gitee.com/wmjordan/Codist#navigation-bar">Navigation Bar</a> with a drag-and-drop and filter enabled member list
<img src="https://gitee.com/wmjordan/Codist/raw/master/doc/feature-brief-navigation-bar.png" alt="Feature Brief Navigation Bar" referrerpolicy="no-referrer"></li><li><a href="https://gitee.com/wmjordan/Codist#smart-bar">Smart Bar</a> with common edit commands, C# code refactoring and symbol reference analyzers
<img src="https://gitee.com/wmjordan/Codist/raw/master/doc/feature-brief-smart-bar.png" alt="Feature Brief Smart Bar" referrerpolicy="no-referrer"></li><li><a href="https://gitee.com/wmjordan/Codist#scrollbar-marker">Scrollbar Marker</a> draws a powerful mini code map
<img src="https://gitee.com/wmjordan/Codist/raw/master/doc/feature-brief-scrollbar-marker.png" alt="Feature Brief Scrollbar Marker" referrerpolicy="no-referrer"></li><li><a href="https://gitee.com/wmjordan/Codist#auto-changing-version-numbers">Auto Changing Version Numbers</a></li><li><a href="https://gitee.com/wmjordan/Codist#display-enhancements">Display Enhancements</a></li><li><a href="https://gitee.com/wmjordan/Codist#jump-list-shortcuts">Jump List Shortcuts</a></li><li><a href="https://gitee.com/wmjordan/Codist#auto-pair-punctuations">Auto Pair Punctuations</a></li><li><a href="https://gitee.com/wmjordan/Codist#codist-in-your-language">Codist in Your Language</a></li><li><a href="https://gitee.com/wmjordan/Codist#other-features">Others</a></li><li><a href="https://gitee.com/wmjordan/Codist#feature-control">Comprehensive Configurations</a></li><li><a href="https://gitee.com/wmjordan/Codist#acknowledgements">Acknowledgements</a></li><li><a href="https://gitee.com/wmjordan/Codist#license">License</a>, <a href="https://gitee.com/wmjordan/Codist#bugs-and-suggestions">Bugs and Suggestions</a>, <a href="https://gitee.com/wmjordan/Codist#support-codist-by-donation">Donate</a></li></ul><p><em>Codist</em> supports localization into other languages and it has both English and Chinese now.</p><h2><a id="user-content-advanced-c-syntax-highlight" class="anchor" href="https://gitee.com/wmjordan/Codist#advanced-c-syntax-highlight"></a>Advanced C# Syntax Highlight</h2><p>The advanced syntax highlight function highlights every aspect of C# language elements with diverse styles, including using various font families and text styles, underline styles, enlarging or shrinking font sizes, changing foreground or background colors and transparency.</p><p>You can change syntax highlight styles in any languages, such as Visual BASIC, F#, SASS, and so on, even if they are not recognized by Codist.</p><p>The following screenshots of the <code>TestPage.cs</code> file in the source code project demonstrates possible syntax highlight effects in the Light theme.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/highlight1.png" alt="Syntax highlight" referrerpolicy="no-referrer"></p><ul><li>The font size and font family for each syntax style can be changed, so it is much easier to spot them. This feature is helpful for color-blind people.</li><li>Syntax highlight can be applied to braces and parentheses.</li><li>Various syntax identifiers have different styles, temporary elements such as method parameters and local variables are italic, <code>static</code> symbols are underlined.</li><li>Comment content can be tagged (e.g. <em>todo</em>, <em>note</em>) and highlighted with individual style.</li><li>Unnecessary code can be marked strike-through.</li><li>Keywords are categorized and highlighted with various styles (e.g. <code>abstract</code> and <code>sealed</code>, <code>return</code> and <code>throw</code>, etc.).</li><li>Overriding members (such as <code>ToString</code>) can be painted with gradient background color, so at a glance we know that the marked implementations have overridden their base classes.</li><li>Imported symbols (from external assemblies, e.g. <code>NotImplementedException</code>, <code>ToString</code>) can be marked with a different style (bold here), distinguishing from symbols defined in your code.</li><li>All the above styles are customizable.</li></ul><h3><a id="user-content-default-syntax-highlight-themes" class="anchor" href="https://gitee.com/wmjordan/Codist#default-syntax-highlight-themes"></a>Default Syntax Highlight Themes</h3><p>To quickly get started with advanced syntax highlight, open a C# project, then click the <em>Customize Codist Syntax Highlighting</em> command under the <em>Tools</em> menu.</p><p>A window will pop up, click buttons at the left side of the dialog under the <strong>Predefined themes</strong> and see changes in effect. The styles on the right of the dialog immediately lists effects of corresponding syntax elements. Don't forget to click the <em>Save</em> button at the bottom of the dialog to confirm the changes.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/syntax-highlight-customization-window.png" alt="Load Theme" referrerpolicy="no-referrer"></p><p>With the <strong>Save</strong> and <strong>Load</strong> buttons, you can backup and share your own syntax highlight settings.</p><p>If you mess up your syntax highlight styles, you can press the <strong>Reset</strong> button to reset all settings to default, or reapply predefined themes by clicking buttons at the left bottom.</p><p><strong>Note</strong>: There is a known issue in <em>Codist</em> that <strong>if you change the theme of Visual Studio, you may have to restart it to make syntax highlight settings to work properly</strong>. If the <strong>Reset</strong> button does not work, please try restarting Visual Studio.</p><h3><a id="user-content-customization-of-syntax-highlight-styles" class="anchor" href="https://gitee.com/wmjordan/Codist#customization-of-syntax-highlight-styles"></a>Customization of Syntax Highlight Styles</h3><p>To customize and tweak the desired syntax highlight styles, click or select the text in the document window, and click the <em>Customize Codist Syntax Highlighting</em> command under the <em>Tools</em> menu.</p><p>The customization window will pop up and listing syntax classifications applied to the active text.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/syntax-highlight-customizing-selected.png" alt="Syntax Highlight Customizing Selected" referrerpolicy="no-referrer"></p><p>Click the style in the Syntax Styles list, adjustment controls will be displayed at the bottom of the dialog, where you can change the style. As you change the style, you can immediately see how it appears in the code document window.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/syntax-highlight-customization-preview.png" alt="Syntax Highlight Customization Preview" referrerpolicy="no-referrer"></p><p>Underline styles can be customized. Firstly assign a color for the <strong>Line</strong>, afterwards, more configuration elements will appear.</p><p>If you want to change another syntax element, click on the place where it is applied in the code document window. If the customization window is still opened, and the <em>Selected Code</em> section under <em>Syntax Categories</em> is selected, the list will display the corresponding syntax styles for the place you clicked immediately.</p><p>You can explore other syntax categories by clicking the list on the left of the dialog.</p><p>Syntax definitions in the <em>All languages</em> section will list all syntax styles for any languages installed; those under <em>Tagged comments</em> section apply to <a href="https://gitee.com/wmjordan/Codist#comment-tagger-and-styles">comment taggers</a>, others apply to corresponding languages accordingly.</p><p><strong>Note</strong>: <em>Font size</em> is relative value to editor default font size. Partially checked checkboxes denote default syntax styles are used.</p><p><strong>A Side Note for Editor Font</strong>: You may consider substituting the font used by Visual Studio code editor with professionally designed fonts for programming, for instance, <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FIBM%2Fplex">IBM Plex Mono</a>, <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftonsky%2FFiraCode">Fira Code</a>, etc. Employing <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fsnowie2000%2Fmactype">MacType</a> can significantly enhance system-wide textual display quality, especially for Chinese, Japanese and Korean programmers.</p><h3><a id="user-content-my-symbols-and-external-symbols" class="anchor" href="https://gitee.com/wmjordan/Codist#my-symbols-and-external-symbols"></a>My Symbols and External Symbols</h3><p><em>Codist</em> can identify symbols which are defined in your source C# code and which are imported from external assemblies. This feature is so unique that you may not find it elsewhere.</p><p>You can customize it in the <em>symbol markers</em> section under the <em>C#</em> section in the <em>Syntax Highlight Configurations</em> dialog. Style <em>C#: User symbol</em> is used for symbols from your code, and <em>C#: Metadata symbol</em> is used for symbols imported from external assemblies.</p><p><strong>Note</strong>: some predefined themes have defined external symbols with <strong>bold</strong> style, as the above screenshot shows.</p><h2><a id="user-content-comment-tagger-and-styles" class="anchor" href="https://gitee.com/wmjordan/Codist#comment-tagger-and-styles"></a>Comment Tagger and Styles</h2><ul><li><p>The comment tagger highlights comments to your specific styles, according to the first token inside the comment.</p><p>Here are the effects how they are applied.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/syntax-highlight-comments.png" alt="Comment syntax highlight" referrerpolicy="no-referrer"></p><p>To configure the comment tags, which identify comment types, click the <em>tags</em> section, under the <em>Tagged comments</em> section in the <em>Syntax Highlight Configurations</em> dialog, where you can add, remove or modify comment tags.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/syntax-highlight-comment-tags.png" alt="Syntax Highlight Comment Tags" referrerpolicy="no-referrer"></p><p>To disable comment tagger, open the <em>Options</em> dialog, find the <em>Codist/Syntax Highlight</em> section and  uncheck the check box labeled <em>Enable comment tagger</em> in the <em>Syntax Highlight</em> option page.</p></li></ul><h2><a id="user-content-super-quick-info" class="anchor" href="https://gitee.com/wmjordan/Codist#super-quick-info"></a>Super Quick Info</h2><p>The quick info (the tool-tip shown when you hover your mouse pointer on your C# source code) can be enhanced by <em>Codist</em>.</p><h3><a id="user-content-general-quick-info" class="anchor" href="https://gitee.com/wmjordan/Codist#general-quick-info"></a>General Quick Info</h3><p>To customize the <em>Super Quick Info</em>, adjust the settings in the options page.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-options.png" alt="Super Quick Info Options" referrerpolicy="no-referrer"></p><p>Options in the <em>General</em> page apply to all code editor windows.</p><ul><li><p><strong>Hide Quick Info until Shift key is pressed</strong></p><p>By default, <em>Quick Info</em> appears when you hover your mouse over a symbol or syntax token in code editor. Some programmers think this behavior interferes their workflow. Checking this option will suppress the <em>Quick Info</em> until Shift key is pressed.</p></li><li><p><strong>Selection info</strong></p><p>This option will show how many characters and lines in your selection (if your selection spans over multiple lines). So you don't have to count characters one by one.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-selection-length.png" alt="Super Quick Info Selection Length" referrerpolicy="no-referrer"></p></li><li><p><strong>Color info</strong></p><p>This option enables you preview color values. It works for hex color values (such as <code>#00FF00</code>，<code>#33993300</code>), named colors (such as <code>Black</code>, <code>White</code>, etc.). The 12 sample blocks under color values list the color as the foreground or background against various gray scale colors to help designers to determine the best readability.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-color.png" alt="Super Quick Info - Color" referrerpolicy="no-referrer"></p><p>In C# code editor, Codist can also analyze system colors (such as <code>SystemColors.WindowColor</code>, <code>SystemColors.Control</code>, etc.), <code>Color.FromArgb</code> or <code>Color.FromRgb</code> expression with constant values as well.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-csharp-color.png" alt="Super Quick Info - C# Color" referrerpolicy="no-referrer"></p><p>The color info not only works in code windows, but also in debugger <em>Watch</em> window.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-debugger-watch.png" alt="Super Quick Info - Color" referrerpolicy="no-referrer"></p></li><li><p><strong>Quick Info size</strong></p><p>From version 7.5 on, it is possible to limit the size of the Quick Info popup, so the window won't cover your whole screen.</p><p>By default, <em>Codist</em> does not apply size limitations. You must manually set the <em>Max width</em> and <em>Max height</em> here. If the contents exceed the width, they are wrapped, and scrollbars will appear when necessary, as the screenshot below demonstrates.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-size.png" alt="Super Quick Info - Size" referrerpolicy="no-referrer"></p></li><li><p><strong>Display Delay</strong></p><p>From version 7.5 on, Codist can delay the display of Quick Info, so it won't get into your way when you move your mouse in the document window.</p></li><li><p><strong>Background</strong></p><p>The background color of the Quick Info can be changed. Click the <strong>Background</strong> button and pick your favorite color.</p></li></ul><h3><a id="user-content-c-quick-info" class="anchor" href="https://gitee.com/wmjordan/Codist#c-quick-info"></a>C# Quick Info</h3><p><em>Super Quick Info</em> especially enhances programming experience for C# programmers. There are plenty of options available in the options page.</p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-csharp-options.png" title="" alt="Super Quick Info - Options" width="617" referrerpolicy="no-referrer"><ul><li><p><strong>Use enhanced symbol signature style</strong> is a new setting in version 6.6, enabled by default, which optimizes the display of symbol signatures with a reorganized layout. The layout is especially optimized for long and complex signatures, yet ordinary short symbols can also benefit from it. The following is an example for the style. A large icon on the top-left part of the quick info can be clicked and brings out a menu for symbol analysis. Next to the icon is the name of the symbol standing out with larger text. Clicking on the name can jump to its definition. The parameters for the method are listed next. The reorganized layout never breaks the parameter type from its name, so it is easier to find out and locate each parameter type and name. Beneath the signature is the containing type of the symbol, as well the kind of the symbol. And the member type (return value) of the symbol is under the containing type.
<img src="https://gitee.com/wmjordan/Codist/raw/master/doc/csharp-optimized-quick-info.png" alt="C# optimized quick info" referrerpolicy="no-referrer"></p></li><li><p><strong>Highlight current syntax node in code editor</strong> will draw polygonal markers the syntax node related to the place where Quick Info is triggered.</p></li><li><p>A <strong>Context menu</strong> with many symbol analysis commands will show up when you right click the signature of the symbol definition or any symbol that appears in the Super Quick Info.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-csharp-menu.png" alt="Super Quick Info Csharp Menu" referrerpolicy="no-referrer"></p></li><li><p><strong>Override XML Documentation</strong></p><p>The overridden XML Documentation makes the following changes to displayed documentation.</p><ul><li>More syntax colors (adopting syntax highlight colors) for symbols.</li><li>Icons for documentation parts.</li><li>Selectable content of the documentation.</li><li>Copyable quick info content (First select text with your mouse, then press <code>Ctrl + C</code> shortcut key, or right click to show up a context menu with Copy command).</li><li>Concise form of members (without leading namespace or containing type names, hover your mouse over a symbol to view its full definition).</li><li>Extra tags, such as <code>&lt;b&gt;</code> (for bold), <code>&lt;i&gt;</code> (for italic) and <code>&lt;u&gt;</code> (for underline) are supported.</li><li>Extra information from documentations (see below).</li></ul></li></ul><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-override-doc.png" alt="Super Quick Info Override Doc" referrerpolicy="no-referrer"></p><p>When <em>Override XML Documentation</em> checkbox is checked in the options page, it is also possible to activate options under it.</p><ul><li><p><strong>Inherit from base type or interfaces</strong> option will show documentation description from base <code>class</code>es or implemented <code>interface</code>s if the XML Doc description of the current symbol is absent.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-inherit-base.png" alt="Super Quick Info - Inherit Base" referrerpolicy="no-referrer"></p></li><li><p><strong>Inherit from <code>&lt;inheritdoc cref="MemberName"/&gt;</code> target</strong> option will borrow description from the referenced <code>MemberName</code>.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-inheritdoc.png" alt="Super Quick Info Inheritdoc" referrerpolicy="no-referrer"></p></li><li><p><strong>Show <code>&lt;returns&gt;</code> XML Doc</strong> and <strong>Show <code>&lt;remarks&gt;</code> XML Doc</strong> will add content of those tags.</p></li><li><p><strong>Override <code>&lt;exception&gt;</code> XML Doc</strong> option adds back documentations for exceptions to the Quick Info.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-override-exception.png" alt="Super Quick Info - Override Exception" referrerpolicy="no-referrer"></p></li></ul><p><em>Codist</em> shows XML Doc for those <code>namespace</code>s with an embedded <code>NamespaceDoc</code> class, like what is done in <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FEWSoftware%2FSHFB">SandCastle</a>.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-csharp-namespace.png" alt="Super Quick Info Csharp Namespace" referrerpolicy="no-referrer"></p><h3><a id="user-content-additional-quick-info-items" class="anchor" href="https://gitee.com/wmjordan/Codist#additional-quick-info-items"></a>Additional Quick Info Items</h3><p>A dozen of additional quick info items could be displayed in the <em>Additional Quick Info Items</em> options page.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-csharp-items.png" alt="Super Quick Info Csharp Items" referrerpolicy="no-referrer"></p><ul><li><p><strong>Attributes</strong> option shows attributes of a symbol.</p></li><li><p><strong>Base type</strong> and <strong>Interfaces</strong> options shows inheritance and implementation info of a type. It is recommended to check <strong>All ancestor types</strong> and <strong>Inherited interfaces</strong> to display the complete info of the hierarchy of a type.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-attribute-base-interface.png" alt="Super Quick Info Attribute Base Interface" referrerpolicy="no-referrer"></p><p><strong>Note</strong>: the <code>IDisposable</code> interface has special importance in .NET programming, thus it is assigned a special icon and pinned to the top of the interface list.</p></li><li><p><strong>Declaration</strong> option shows modifiers to a symbol when it is not a public instance one.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-declaration.png" alt="Super Quick Info Declaration" referrerpolicy="no-referrer"></p></li><li><p><strong>Interface implementation</strong> option shows if a member implements any interface.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-interface-implementation.png" alt="Super Quick Info Interface Implementation" referrerpolicy="no-referrer"></p></li><li><p><strong>Method overload</strong> options shows possible overloads of a method (including applicable extension methods).</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-method-overloads.png" alt="Super Quick Info - Method Overloads" referrerpolicy="no-referrer"></p><p>This option also helps you find out correct overloads when any argument passed to a method is incorrect.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-param-candidate.png" alt="Super Quick Info Param Candidate" referrerpolicy="no-referrer"></p></li><li><p><strong>Parameter of method</strong> options shows whether a token or an expression is the parameter of a method in the argument list. What is more, the documentation of the parameter is also displayed.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-param.png" alt="Super Quick Info - Param" referrerpolicy="no-referrer"></p></li><li><p><strong>Type parameter</strong> option shows information and documentation about type parameters.</p></li><li><p><strong>Symbol location</strong> shows where a symbol is defined.</p></li><li><p><strong>Numeric forms</strong> shows decimal, hexadecimal and binary forms for constant integer and <code>Enum</code> values.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-const.png" alt="Super Quick Info Const" referrerpolicy="no-referrer"></p><p>The binary form is useful when working with bit flags.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/super-quick-info-enum.png" alt="Super Quick Info Enum" referrerpolicy="no-referrer"></p></li><li><p><strong>String length and Hash codes</strong> for string constants.
(Hint: We can use Hash codes to quickly compare whether two strings that look alike are identical)</p></li></ul><h2><a id="user-content-navigation-bar" class="anchor" href="https://gitee.com/wmjordan/Codist#navigation-bar"></a>Navigation Bar</h2><p><em>Navigation bar</em> locates at the top of the code editor window. It overrides the original navigation bar. When the <em>Navigation Bar</em> is loaded, it hides two drop-down lists on the original Navigation Bar, but preserves the project drop-down list.</p><p>Basically, the <em>Navigation Bar</em> serves the same purpose of the original one comes with Visual Studio, displaying symbol information where the caret is placed.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/navigation-bar-overview.png" alt="Navigation Bar Overview" referrerpolicy="no-referrer"></p><p><strong>Note</strong>: Navigation Bar works with both C# code documents and Markdown documents.</p><p>Nodes on the <em>Navigation Bar</em> are clickable.</p><ol><li><p>Clicking on the left-most <strong>Search Document node</strong> will popup a menu, displaying namespaces and types defined in the active document.</p><p>On top of the menu, there is a <strong>Search Declaration</strong> box, within which you can type and search declarations.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/navigation-bar-search.png" alt="Navigation Bar Namespace Types" referrerpolicy="no-referrer"></p><p>Besides the <em>Search Declaration</em> box, there are three buttons. The first one is pressed by default, which restricts the search scope to active document. If the second one is pressed, it pops up the first button and expands the search scope to current project (see screen shot below). The third button clears the search box and reverts the items back to unfiltered namespaces and types.</p><p><strong>Note</strong>: Press <code>-</code> or <code>=</code> key on keyboard to switch search scope between current document and current project.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/navigation-bar-search-declaration.png" alt="Navigation Bar Search Declaration" referrerpolicy="no-referrer"></p><p><strong>Note</strong>: If the first character in the search box is an upper case one, the search will be <strong>case-sensitive</strong>, otherwise, it is case-insensitive.</p><p>You can <strong>drag and drop</strong> items in the menu to reorder types within the document.</p></li><li><p>Clicking on the <strong>global namespace node</strong>, which has a house as the icon, will popup a menu, displaying all root namespaces defined in the project and referenced assemblies, as well as types without any namespace. You can click namespaces to check out its sub-namespaces and types.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/navigation-bar-global-namespaces.png" alt="Global namespaces" referrerpolicy="no-referrer"></p><p>There is also a search box in this menu, which filters content of the menu.</p><p>There are several buttons beside the search box. Numbers on the buttons counts corresponding items within the type. Hover your mouse cursor over the button, you can read meanings of them. Pressing down those buttons filters members within the menu to corresponding ones.</p><p>You can right click items on the menu to bring out a context menu for corresponding members.</p></li><li><p>Clicking a <strong>Namespace node</strong> which follows the Document node will popup a menu, displaying namespaces and types defined in the corresponding namespace. You can click on those items and jump to the beginning of corresponding definitions.</p></li><li><p>Clicking on a <strong>Type node</strong> will popup a menu, displaying members and regions defined within the type. You can click on those items and jump to the definition of the corresponding member.</p><p>You can <strong>drag and drop</strong> items in the menu to reorder members, nested types and <code>#region</code>s within the document. If a <code>partial</code> type spans over several code files, it is also possible to rearrange members among them.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/navigation-bar-fields.png" alt="Navigation Bar Fields" referrerpolicy="no-referrer"></p><p>The current symbol where the caret is on is highlighted.</p><p>Field values and auto-property expressions are also displayed on this menu. So, you can read the initial value of fields immediately.</p><p>You can right click items to bring out a context menu for the symbol.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/navigation-bar-context-menu.png" alt="Navigation Bar Fields" referrerpolicy="no-referrer"></p><ol start="5"><li><p>Clicking on a <strong>Member node</strong> will select the whole member. If you have the <em>Smart Bar</em> feature on and let it appear when selection is changed, <em>Smart Bar</em> will be displayed and let you perform actions onto the member.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/navigation-bar-select.png" alt="Navigation Bar Select" referrerpolicy="no-referrer"></p></li></ol></li></ol><h3><a id="user-content-customization" class="anchor" href="https://gitee.com/wmjordan/Codist#customization"></a>Customization</h3><p>The <em>Navigation Bar</em> can be configure via the options page.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/navigation-bar-options.png" alt="Navigation Bar Options" referrerpolicy="no-referrer"></p><ul><li><p>If <strong>Syntax detail</strong> option is set, the <em>Navigation Bar</em> not only shows available types and declarations in the code window like the original navigation bar, but also syntax nodes such as statements and expressions containing the caret.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/navigation-bar-syntax-details.png" alt="Navigation Bar Syntax Details" referrerpolicy="no-referrer"></p></li><li><p>If <strong>Symbol info tip</strong> option is set, you can read information about a symbol when you hover your mouse onto a node.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/navigation-bar-symbol-info.png" alt="Navigation Bar Symbol Info" referrerpolicy="no-referrer"></p></li><li><p>If <strong>Highlight syntax range</strong> option is set, when you hover the mouse over the node on the bar, corresponding span of the node will be highlighted in the editor.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/navigation-bar-node-range.png" alt="Navigation Bar Node Range" referrerpolicy="no-referrer"></p><ul><li>If <strong>Region</strong> option is set, <code>#region</code> names will be displayed on the Navigation Bar. If you pad region names with some non-alphabetic characters like "<code>#region [====== private methods ======]</code>", you can check the <strong>Trim non-letter characters in region</strong> checkbox so only alphabetic part like "<code>private methods</code>" will be displayed on the <em>Navigation Bar</em>.</li></ul><p>To customize drop-down menus of the <em>Navigation Bar,</em> change options in the <em>Drop-down Menu</em> tab.</p></li></ul><h3><a id="user-content-markdown-navigation-bar" class="anchor" href="https://gitee.com/wmjordan/Codist#markdown-navigation-bar"></a>Markdown Navigation Bar</h3><p>The Markdown navigation bar lists all titles appear in a Markdown document.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/navigation-bar-markdown.png" alt="Navigation Bar Markdown" referrerpolicy="no-referrer"></p><p>Similarly, you can type in the search box to filter down the titles.</p><p>From version 7.8 on, there are buttons near the search box to limit displaying titles to specific levels.</p><h2><a id="user-content-smart-bar" class="anchor" href="https://gitee.com/wmjordan/Codist#smart-bar"></a>Smart Bar</h2><p>The <em>Smart Bar</em> is a context-aware tool bar that appears automatically when you select some text, or double tap the <em>Shift</em> key on your keyboard.</p><p>There are two toolbars on <em>Smart Bar</em>. The top bar contains general editing commands for all file types. Buttons on the bottom bar changes according to file types.</p><p>Buttons on the <em>Smart Bar</em> changes according to your selection, typical buttons are editing operations (e.g. <em>Cut</em>, <em>Copy</em>, <em>Paste</em>,  <em>Delete</em>, <em>Duplicate</em>, <em>Formatting</em>, <em>Find</em>, etc.), code analysis operations (e.g. <em>Go to definition</em>, <em>Find references</em>), refactoring operations (e.g. <em>Rename</em>, <em>Extract method</em>, etc.)</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar.png" alt="Smart Bar" referrerpolicy="no-referrer"></p><p>Each button on <em>Smart Bar</em> usually has multiple functions. Left clicking, right clicking, Ctrl+clicking and Shift+clicking trigger different commands. For details, see the tool-tip for the buttons. Right clicking a button usually expands the effective range of a command to the whole line, or brings out a pop-up menu for more commands.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar-2.png" alt="Smart Bar" referrerpolicy="no-referrer"></p><p>There are multiple predefined <strong>web search</strong> commands in the menu when you right click the Find button, which will launch your browser to search the text you select in document window. So, it is handier to look for answers from the web or find code examples in <em>GitHub</em>.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar-search.png" alt="Smart Bar Search" referrerpolicy="no-referrer"></p><p>You can specify what browser you prefer to use in the options page.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar-search-options.png" alt="Smart Bar Search Options" referrerpolicy="no-referrer"></p><h3><a id="user-content-c-specific-commands" class="anchor" href="https://gitee.com/wmjordan/Codist#c-specific-commands"></a>C# Specific Commands</h3><p>When you select a symbol, you may probably see a <em>Smart Bar</em> like below.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar.png" alt="Smart Bar" referrerpolicy="no-referrer"></p><p>The C# commands are on the second row.</p><p>The first one is <strong>Go to Definition</strong>, that behaves the same as the keyboard <code>F12</code> command. With this, you no longer need hitting the <code>F12</code> key to go to definition.</p><p>The second one is the <strong>Analyze symbol...</strong> button, a menu will pop up showing possible symbol analysis commands for the symbol. Since some commands require considerable amount of calculation, items ending with "..." will require a mouse click to expand. For instance, clicking the <strong>Find Callers</strong> command in the following screen shot will search the source code and list at what places are calling the selected method in a symbol list. In the symbol list, you can filter items like the what you can do in the <em>Navigation Bar</em>, click items on the sub-menu and jump to the corresponding location.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar-symbol-analysis.png" alt="Smart Bar Symbol Analysis" referrerpolicy="no-referrer"></p><p>Various commands will be conditionally listed under the <strong>Analyze symbol...</strong> menu. Here is a list of commands for an interface.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar-symbol-analysis-2.png" alt="Smart Bar Symbol Analysis 2" referrerpolicy="no-referrer"></p><p>The <strong>Find Members</strong> command under <strong>Analyze symbol...</strong> lists all members defined within a type. For some special types, for instance, <code>SystemColors</code>, <code>Colors</code>, <code>Brushes</code>, etc. The preview is shown on the list.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar-member-colors.png" alt="Smart Bar Member Colors" referrerpolicy="no-referrer"></p><p>For Visual Studio extension developers, the preview offers more, for instances, it allows previewing images of <code>KnownImageIds</code>, colors in <code>VsBrush</code>, etc.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar-member-knownimageids.png" alt="Smart Bar Member KnownImageIds" referrerpolicy="no-referrer"></p><p>The <strong>Find Implementations</strong> command for an interface type will display all types that implement that interface. The same command will also appear for interface members, which finds out corresponding members that implement the specific interface member.</p><p>When we begin to work with new libraries, we usually have to learn new types and APIs. Two typical scenario are that "<em>what methods, properties return specific instance of a type?</em>" and "<em>what methods can an instance of a given type can be passed into?</em>". Thus, <em>Smart Bar</em> provides <em>Find Instance Producer</em> and <em>Find Instance as Parameter</em> for type names. The following screen shot demonstrates the result of finding instance producers which returns an instance of <code>IWpfTextView</code>.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar-instance-producer.png" alt="Smart Bar Instance Producer" referrerpolicy="no-referrer"></p><p>There are two buttons on the top right corner in the result list of symbol analysis commands. The <em>Pin</em> button will keep the list on the screen. And you can use your mouse to drag those lists around.</p><h3><a id="user-content-code-refactorings" class="anchor" href="https://gitee.com/wmjordan/Codist#code-refactorings"></a>Code Refactorings</h3><p>From version 7.0 on, quite a few code refactorings are provided via a button on the C# Smart Bar.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar-refactoring.png" alt="Smart Bar Code Refactoring" referrerpolicy="no-referrer"></p><p>You can access the menu from keyboard by assigning a shortcut key to the <code>Refactor.RefactoringCode</code> command.</p><h3><a id="user-content-symbol-marker" class="anchor" href="https://gitee.com/wmjordan/Codist#symbol-marker"></a>Symbol Marker</h3><p><em>Symbol marker</em> draws markers for C# symbols.</p><p>Typically, you can double click a symbol in the C# source code, select the <em>Mark Symbol</em> command on the <em>Smart Bar</em> and choose the desired highlight marker on the drop-down menu.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/symbolmarker.png" alt="Symbol Marker" referrerpolicy="no-referrer"></p><p>After applying the command, all occurrences of the marked symbol will be marked with a different style.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/symbolmarker-effect.png" alt="Symbol Marker Effect" referrerpolicy="no-referrer"></p><p>To remove symbol marker, click the <em>Remove symbol mark</em> command in the drop-down menu of the <em>Mark symbol</em> command.</p><p>Symbol markers will be cleared when the solution is unloaded.</p><p><strong>Note</strong>: The style of symbol markers can be customized in the <em>Syntax highlight Configurations</em> dialog. The default colors are listed below. You also need to turn on the <em>Syntax Highlight</em> feature in order to make this feature work.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/symbolmarker-options.png" alt="Symbol marker Options" referrerpolicy="no-referrer"></p><h3><a id="user-content-behavior-of-smart-bar" class="anchor" href="https://gitee.com/wmjordan/Codist#behavior-of-smart-bar"></a>Behavior of Smart Bar</h3><p>By default, <em>Smart Bar</em> appears after selection changes, you can alter the behavior in the options page by unchecking the <em>Show Smart Bar when selection is changed</em> checkbox.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar-options.png" alt="Smart Bar Options" referrerpolicy="no-referrer"></p><p><em>Smart Bar</em> automatically disappears when you move your mouse cursor away from it, or execute a certain commands on the <em>Smart Bar</em>, or click somewhere else in the code editor window, emptying the selection.</p><p>To make the <em>Smart Bar</em> reappear, you can tap the <code>Shift</code> key on your keyboard twice within a second. This behavior can also be suppressed by unchecking the <strong>Show/hide Smart Bar with Shift key</strong> checkbox.</p><h3><a id="user-content-smart-bar-in-other-windows" class="anchor" href="https://gitee.com/wmjordan/Codist#smart-bar-in-other-windows"></a>Smart Bar in Other Windows</h3><p><em>Smart Bar</em> also works on <em>Output</em>, <em>C# Interactive</em>, <em>Immediate (Debug)</em>, <em>Find Results</em> and some other text selectable window panes. If you select a path within those windows, extra commands will pop up allowing you to open it directly or locate it in <em>Windows Explorer</em>.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/smart-bar-file-operations.png" alt="Smart Bar File Operations" referrerpolicy="no-referrer"></p><h2><a id="user-content-scrollbar-marker" class="anchor" href="https://gitee.com/wmjordan/Codist#scrollbar-marker"></a>Scrollbar Marker</h2><p><em>Scrollbar Marker</em> draws extra glyphs and shapes on the vertical scrollbar for the following syntax elements:</p><ul><li><strong>Line numbers</strong> (marked with gray dashed lines and numbers, from version 7.4 on, total line count is displayed at the bottom of the scroll bar)</li><li>Selection range (marked with semi-transparent color blocks over the bar)</li><li>Special comments tagged by comment tagger (marked with small squares)</li><li>C# <code>class</code>/<code>struct</code>/<code>interface</code>/<code>enum</code><strong>declarations</strong> (marked with lines indicating their ranges and a square, and their names indicating their declaration locations)</li><li>C# compiler directives, e.g. <code>#if</code>, <code>#else</code>, <code>#region</code>, <code>#pragma</code>, etc. (marked with a gray spot)</li><li>C# symbol match marker (matches symbol under the caret, marked with an aqua square)</li></ul><p>Please see the first screenshot of this article. The markers can be toggled via the options page.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/scrollbar-marker-options.png" alt="Scrollbar Marker Options" referrerpolicy="no-referrer"></p><h2><a id="user-content-auto-changing-version-numbers" class="anchor" href="https://gitee.com/wmjordan/Codist#auto-changing-version-numbers"></a>Auto Changing Version Numbers</h2><p>Codist can automatically change version numbers for output assemblies before build.</p><p>To activate the behavior, right click the project in the Solution Explorer and select the <em>Auto Build Version Numbers...</em> command.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/auto-version.png" alt="Auto Build Version" referrerpolicy="no-referrer"></p><p>On the left side of the dialog, build configurations are listed. "&lt;Any&gt;" configuration applies to all build configuration scenarios. Others applies to the corresponding scenarios respectively.</p><p>On the right side of the dialog, current version numbers are listed. And four drop-down list controls specify the behavior how version number parts are changed.</p><p>Once you change the drop-down list control to a value rather than "Unchanged", the new version number will be displayed next to the current version number as a preview how it will be changed before next build.</p><p>Press the "Save" button to save the settings and Codist will change build numbers for you before future builds.</p><p><strong>Note</strong>: The build settings are saved in the <em>obj</em> folder where the project file locates.</p><h2><a id="user-content-display-enhancements" class="anchor" href="https://gitee.com/wmjordan/Codist#display-enhancements"></a>Display Enhancements</h2><p>In the <em>Display</em> tab of the <em>General</em> options page, several display enhancement options are offered.</p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/display-options.png" title="" alt="General Options Display" width="783" referrerpolicy="no-referrer"><p>Within the <em>Extra line margins</em> group box, you can adjust margins between lines to make code lines more readable.</p><p>Programmers who do not like <em>ClearType</em> rendering, which made text blurry and colorful, may want to try <em>Force Grayscale Text Rendering</em> options.</p><p>From version 6.6 on, resource monitors can be used to monitorCPU, disk and memory usage via the status bar on Visual Studio. Checking the <em>Monitor CPU</em>, <em>Monitor disk</em> or <em>Monitor memory</em> check box enables the corresponding monitors.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/resource-monitors.png" alt="Resource Monitors" referrerpolicy="no-referrer"></p><p>It is possible to use Compact menu like <em>Visual Studio 2019</em> in <em>Visual Studio 2017</em>. Simply checking the <em>Move main menu to title bar</em> option will do.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/compact-menu.png" alt="Compact Menu" referrerpolicy="no-referrer"></p><p>By checking the check boxes started with "Hide...", it is possible to hide some elements from the user interface of Visual Studio from options under the <em>Layout Override</em> section.</p><h2><a id="user-content-jump-list-shortcuts" class="anchor" href="https://gitee.com/wmjordan/Codist#jump-list-shortcuts"></a>Jump List Shortcuts</h2><p>Jump List is a menu section that appears when you right click the Visual Studio button on the task bar. It lists your recently opened solutions, projects or documents.</p><p>If you are using Open-Shell or other similar Start Menu applications, Codist can add three shortcuts to the Quick Start list of Visual Studio when you check the <em>Jump List Shortcuts</em> option. Those shortcuts start Visual Studio in a special mode.</p><ol><li><em>Non-scaling mode</em>: disables DPI-awareness of Visual Studio and let you design WinForm applications with 100% scaling.</li><li><em>Safe mode</em>: disables most extensions in Visual Studio. If an extension keeps crashing the development environment, you can use the Safe mode to enter Visual Studio to disable or uninstall it.</li><li><em>Presentation mode</em>: opens a particular instance of Visual Studio which has its own settings and layouts.</li></ol><h2><a id="user-content-auto-pair-punctuations" class="anchor" href="https://gitee.com/wmjordan/Codist#auto-pair-punctuations"></a>Auto Pair Punctuations</h2><p>From version 7.6 on, Codist can automatically "pair" punctuations around selections.</p><p>To make this work, follow the steps below:</p><ol><li>Check the <em>Auto Pair Punctuation</em> option in the option page, which is off by default.</li><li>Select some text in the code editor.</li><li>Type an "opening" punctuation, for instance, <code>(</code>, <code>&lt;</code>, <code>{</code>, <code>[</code>, <code>"</code> or <code>'</code>.</li><li>When this option is turned off, the typed character will replace the selection; when this option is turned on, typed character will be inserted in front of the selection, and their counterpart--that is, <code>)</code>, <code>&gt;</code>, <code>}</code>, <code>]</code>, <code>"</code> or <code>'</code>--will be appended behind the selection. For example, if you select <code>abc</code> in the code, and type <code>"</code>, you will get <code>"abc"</code>; if you select <code>x + y</code> in the code, and type <code>(</code>, you will get <code>(x + y)</code>.</li><li>Once the first character is typed,
a. If you actually want the typed character to replace the selection, press the <em>Delete</em> or <em>Backspace</em> key, the selection and the automatically inserted counterpart will be erased;
b. If more characters are to be inserted after the first character, just keep typing, the not-yet-removed content as well as the punctuation counterpart will be replaced.
c. If the automatically inserted paired punctuation is what you need, that is what you get now.</li><li>When we edit Markdown documents, the <tt>`</tt>, <code>*</code>, <code>_</code> and <code>~</code> are also auto-paired.</li><li>For Chinese users, Chinese full width punctuations are also auto-paired.</li></ol><p>You can always turn off this feature by unchecking the <em>Auto Pair Punctuation</em> option in the option page.</p><h2><a id="user-content-codist-in-your-language" class="anchor" href="https://gitee.com/wmjordan/Codist#codist-in-your-language"></a>Codist in Your Language</h2><p>It is possible to localize <em>Codist</em> to other language. Simplified Chinese (簡體中文) and English are provided by default.</p><p>The interface of <em>Codist</em> will change according to the <em>International</em> settings of <em>Visual Studio</em>.</p><h2><a id="user-content-other-features" class="anchor" href="https://gitee.com/wmjordan/Codist#other-features"></a>Other Features</h2><p>From version 7.4 on, extra menu commands to open build output target folder are added to the <em>Build</em> menu.</p><p>It is possible to output a time stamp after each build.</p><p>For VSIX developers, there is also an option to automatically increment version number for your VSIX manifest file.</p><h1><a id="user-content-feature-control" class="anchor" href="https://gitee.com/wmjordan/Codist#feature-control"></a>Feature Control</h1><p>Open the <em>Codist</em> section in the <em>Tools-&gt;Options</em> dialog. In the <em>General</em> section you can toggle features of <em>Codist</em>.</p><p><img src="https://gitee.com/wmjordan/Codist/raw/master/doc/general-options.png" alt="General customization" referrerpolicy="no-referrer"></p><ol><li><p><em>Feature controllers</em> contains check boxes which can be used to enable/disable features of <em>Codist</em>.</p><p>Someone who does not like the syntax highlight or use another syntax highlighter can also turn off the <em>Syntax Highlight</em> feature individually here.</p><p>These <strong>options will take effect on new document windows</strong>. Existing document windows won't be affected.</p></li><li><p>To share or backup your settings of Codist, you can use the <em>Save</em> and <em>Load</em> buttons.</p></li></ol><h1><a id="user-content-acknowledgements" class="anchor" href="https://gitee.com/wmjordan/Codist#acknowledgements"></a>Acknowledgements</h1><p>I have learned a lot from the following extension projects (sorted by the time when I learned from them). Codist would not be what you see today without them.</p><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fmhoumann%2FCommentsPlus">CommentsPlus</a>, <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fomsharp%2FBetterComments">Better comments</a>, <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fjgyo%2Fremarker">Remarker</a>: syntax tagger</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FOceanware%2FFontSizer">Font Sizer</a>: changing font size in syntax styles</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FMicrosoft%2FVS-PPT">Visual Studio Productivity Power Tools</a>: extending code window margin</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Ftunnelvisionlabs%2FInheritanceMargin">Inheritance Margin</a>: extending code window margin</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FGeorgeAlexandria%2FCoCo">CoCo</a>: extensive syntax highlighting</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FKhaosCoders%2FVSCodeBlockEndTag">CodeBlockEndTag</a>: adornments</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fcpmcgrath%2FUntabifyReplacement">UntabifyReplacement</a>: replacing text in code window</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fmadskristensen%2FExtensibilityTools">Extensibility Tools</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fcodecadwallader%2Fcodemaid">CodeMaid</a>: how to support multi-language localization</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2F2mas%2FSelectNextOccurrence">Select Next Occurrence</a>: code navigation</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fmike-ward%2FVSColorOutput">VSColorOutput</a>: extending output window pane</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FNuGet%2FNuGet.Build.Packaging">NuGet</a>: build events</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FGordianDotNet%2FGoToImplementation">GoToImplementation</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fdotnet%2Froslyn">Roslyn</a>: lots about code analysis</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FVsixCommunity%2FCommunity.VisualStudio.Toolkit">Community.VisualStudio.Toolkit</a>: VS extension points</li><li>ReviewBoard: code.google.com/p/reviewboardvsx</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fmadskristensen%2FTweakster">Tweaks</a>: VS tweaks</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fmadskristensen%2FVsStatus">VsStatus</a>: hacking the status bar</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FJosefPihrt%2FRoslynator">Roslynator</a>: hundreds of code refactorings and analyzers</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fmadskristensen%2FShowTheShortcut">ShowTheShortcut</a>: discovering identifiers of executed commands</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3DMadsKristensen.CopyNice">Copy Nice</a>: copying text without indentation</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.codeproject.com%2FArticles%2F131708%2FWPF-Color-Picker-Construction-Kit">WPF Color Picker Construction Kit</a>: color picker with spectrum</li></ul><p>And thank you, every donators, beta testers, feedback providers to this project.</p><h1><a id="user-content-license" class="anchor" href="https://gitee.com/wmjordan/Codist#license"></a>License</h1><p><em>Codist</em> comes from the open source community and it goes back to the community.</p><p><em>Codist</em> is <strong>free</strong> software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</p><p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p><p>You should have received a copy of the GNU General Public License along with this program. If not, see "<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.gnu.org%2Flicenses">https://www.gnu.org/licenses</a>".</p><h1><a id="user-content-bugs-and-suggestions" class="anchor" href="https://gitee.com/wmjordan/Codist#bugs-and-suggestions"></a>Bugs and Suggestions</h1><p>Please <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwmjordan%2FCodist%2Fissues">post New Issue</a> in the <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwmjordan%2FCodist">GitHub project</a> if you find any bug or have any suggestion.</p><p>Your vote and feedback on the <a href="https://gitee.com/link?target=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3Dwmj.Codist">Visual Studio Extension Marketplace</a> are also welcomed.</p><h1><a id="user-content-support-codist-by-donation" class="anchor" href="https://gitee.com/wmjordan/Codist#support-codist-by-donation"></a>Support Codist by Donation</h1><p>If you like <em>Codist</em>, consider <a href="https://gitee.com/link?target=https%3A%2F%2Fpaypal.me%2Fwmzuo%2F19.99">buying me a cup of Chinese tea</a>.</p><p>You can donate any amount of money as you like. The recommended amount of donation is <code>$19.99</code>.</p><p>6 donations have been received so far :)</p><p>Well, you have already reached here. Why not give Codist a ★★★★★ rating on the <a href="https://gitee.com/link?target=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3Dwmj.Codist">Visual Studio Extension Marketplace</a>?</p>]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 01:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/wmjordan/Codist</guid>
            <link>https://gitee.com/wmjordan/Codist</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | DDD 落地實踐 - 架構師眼中的餐廳]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="100019057" data-ratio="0.22676579925650558" src="https://oscimg.oschina.net/oscnet/be541383-3ac2-4c3d-ab96-d48400b38902.gif" data-type="gif" data-w="1076" style="" referrerpolicy="no-referrer"></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">本文以餐廳場景為敍事主線，以領域驅動為核心思想，結合架構設計與功能設計方法論。是從領域分析到落地的全過程案例，內容偏重於落地，因此不乏一些探討，歡迎指正。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">文章較長、全程乾貨、耐心讀完、必有收穫。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">本文不針對餐廳的實現細節，重在探討設計思想和方法。</span></p><span id="OSC_h1_1"></span><h1 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">1、領域設計</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h1><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">讓我們拋開技術人員的本能技術視角、<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">站在純業務視角來分析領域問題</span>。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">領域設計的核心是分而治之，<span style="font-size: 15px;color: rgb(0, 82, 255);">目的是<span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">實現業務領域的自治性</span>。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">就像你平時不會將枕頭和被子放在廚房或衞生間一樣，你的牀上不會放着大米白麪，否則你想睡覺是一件很複雜的事情，軟件系統也是如此，這就是我們要解決的問題。</span><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><span id="OSC_h2_2"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">1.1 宏觀流程</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">假如我要設計一個餐廳，<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">由於分而治之的需要，我會首先從宏觀流程去分析</span>，</span>可以幫我們迅速找到重要的區域。</span></p><p><img class="rich_pages wxw-img" data-imgfileid="100024662" data-ratio="0.1361111111111111" src="https://oscimg.oschina.net/oscnet/1995e109-8620-4e1e-841d-607a4bc8a114.png" data-type="png" data-w="1080" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"><span style="font-size: 15px;letter-spacing: 0.034em;">﻿﻿</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">因此會得到幾個明確的行為區域，我將餐廳劃分為「菜品域」，「訂單域」，「廚房域」，「用餐域」，這是業務級別的領域劃分，後續應該針對每個區域單獨分析。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物是：宏觀流程和參與角色</span></p><span id="OSC_h2_3"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">1.2 統一語言</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">語言貫穿於整個開發過程，從需求分析到設計、從設計到編碼，因此好的語言非常重要，好的語言<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">體現了清晰的業務概念</span>。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">在這個階段，我們需要通過梳理，找到業務中都有哪些實體與行為，對其做一些歸納。我們的核心問題是：<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">「誰」通過什麼「行為」影響了「誰」</span>，</span>其中的三個要素分別是：角色、行為、實體。我的建議是先<span style="font-size: 15px;color: rgb(0, 82, 255);">找到 「角色」、「實體」、「行為」，並對其歸類，</span>我常常關注角色以及具體身份、實體以及實體實例，功能以及包含的重要步驟。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">角色：是施事主語、是名詞，是主動發起行為的一類實體。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">行為：是動詞、是做了什麼事情，是行為本身。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">實體：是名詞，是除「角色」之外的其他實體。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">推薦使用腦圖畫出來，我認為歸納後的腦圖有助於我們識別根本要素，有利於抽象。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物是：名詞、概念定義、相關腦圖。</span></p><p><img class="rich_pages wxw-img" data-imgfileid="100024663" data-ratio="0.8055555555555556" src="https://oscimg.oschina.net/oscnet/3a551592-572d-4f16-bb95-006b67d18d1d.png" data-type="png" data-w="1080" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><span id="OSC_h2_4"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">1.3 用例分析</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">在這一步、我們使用相對宏觀的分析，不需要進入用例的細節分析，<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">掌握角色與行為之間的關係，理清誰在做什麼，角色的職責差異是什麼</span>。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物：用例圖</span><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">以做菜為例，如圖</span></p><p><img class="rich_pages wxw-img" data-imgfileid="100024666" data-ratio="0.7333333333333333" src="https://oscimg.oschina.net/oscnet/719968e8-a2f2-4e2f-94ab-5d80df8c3497.png" data-type="png" data-w="1080" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"></p><span id="OSC_h2_5"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">1.4 領域劃分</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">我們在分析宏觀流程時，劃分了幾個行為區域，但那是業務級別的。在那基礎之上，我們需要拉進某個區域的視角，再結合之前的用例分析，<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">按照「功能相關性」、「角色相關性」進一步劃分領域</span>。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">功能相關性：是<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">用例與領域之間的關係</span>，</span>任何業務的領域都是由一套用例組成的，所以領域劃分以功能相關性為主，例如與做菜相關的用例都應該歸屬於廚房，所以我們確認了廚房域，確認了廚房域包含的用例，這是很自然的事。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">角色相關性：其次是角色，常用於劃分子域，某個區域涉及多個角色參與，可以按照角色的分工，拆分為多個子域，從而滿足不同角色的個性化需要。例如廚房的採購人員負責買菜、刀工負責切菜、大廚負責烹飪。我們就會考慮將廚房劃分為「採購域」、「加工域」、「烹飪域」。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">通常來説，<span style="font-size: 15px;color: rgb(0, 82, 255);">子域不具備獨立的問題空間，不會作為獨立的領域存在。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物：領域、子域</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">以廚房域為例，如圖</span></p><p><img class="rich_pages wxw-img" data-imgfileid="100024665" data-ratio="0.6148148148148148" src="https://oscimg.oschina.net/oscnet/47930a5b-4f34-4ab2-9f17-d9d4163e22b7.png" data-type="png" data-w="1080" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><span id="OSC_h2_6"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">1.5 領域建模</span></strong></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">這是大家比較熟知的階段，<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">重點分析實體與領域之間關係（領域聚合），實體與實體的關係（OO 聚合）</span>。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">領域模型是實現功能的基石、需要有對功能的本質理解，才能找到最核心的實體，<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">實體之間的 OO 聚合關係決定了功能的擴展性</span>，</span>OO 聚合是最重要的核心點。</span></p><p><img class="rich_pages wxw-img" data-imgfileid="100024664" data-ratio="0.7805555555555556" src="https://oscimg.oschina.net/oscnet/e4372046-ee12-481f-a38b-f2d3b8549773.png" data-type="png" data-w="1080" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">組合、聚合</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">聚合（aggregation）：聚合關係是一種弱的關係，整體和部分可以相互獨立。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">組合（composition）：組合關係是一種強的整體和部分的關係，整體和部分具有相同的生命週期。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">可以使用如下案例，既能表達領域聚合，又能表達 OO 聚合的關係。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">﻿</span></p><p><img class="rich_pages wxw-img" data-imgfileid="100024669" data-ratio="0.8277511961722488" src="https://oscimg.oschina.net/oscnet/0d0f7028-5be7-4b87-a5c8-62f466df112a.png" data-type="png" data-w="836" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物：聚合、實體、值對象、實體的屬性</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">（領域服務和事件在後續的功能設計中提供）</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><br></p><span id="OSC_h2_7"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">1.6 領域上下游</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">領域上下游關係，不是領域的依賴關係，依賴關係指的是能力的依賴，是共用了某些能力，依賴關係是固定的。領域上下游關係，也不是調用關係，調用關係是與用例相關的，並非描述領域處境的。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);color: rgb(0, 82, 255);">領域上下游關係指的是影響力的關係，</span><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">上游影響下游，影響力分為「邏輯影響」和「數據影響」，一般説來我們更應該關注「數據影響」，所以<span style="font-size: 15px;color: rgb(0, 82, 255);">領域上下游關係是一種數據流向的限定，是業務發生的順序限定，</span>用於規定該領域所使用的數據，是下游領域依賴上游領域「準備就緒」的體現。合理的上下游限定，有助於減少領域之間的不必要依賴，有利於數據的複用並減少重複計算。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);color: rgb(0, 82, 255);">領域上下游是與場景相關的，</span><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">並不是一成不變的，不同的場景存在不同的上下游，各場景應該獨立説明。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物：各場景的上下游説明</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">例：在【菜品管理】場景下</span></strong></p><p><img class="rich_pages wxw-img" data-imgfileid="100024670" data-ratio="0.15065502183406113" src="https://oscimg.oschina.net/oscnet/dae06ae3-c3f4-4895-af71-27f6442af29d.png" data-type="png" data-w="916" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">如果廚房的某些食材不足了，或者某個廚師休假了，就會影響到菜品的展示，從而影響到客戶的訂單。</span><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">例：在【客戶消費】場景下</span></strong></p><p><img class="rich_pages wxw-img" data-imgfileid="100024668" data-ratio="0.29259259259259257" src="https://oscimg.oschina.net/oscnet/a4ffc3a9-e55e-4ee4-811a-5e6adfe115c2.png" data-type="png" data-w="1080" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">客戶的訂單、影響廚房生產的菜，從而影響刀工的行為，也影響到了採購。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">請對比下面兩個圖，用於理解領域的上下游</span></strong></p><p><img class="rich_pages wxw-img" data-imgfileid="100024671" data-ratio="0.37222222222222223" src="https://oscimg.oschina.net/oscnet/e785c504-4faf-4ccb-b87e-b7151c9bbcb0.png" data-type="png" data-w="1080" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"></p><p><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">﻿﻿</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">實際上，廚師不應該依賴採購人員的採購功能，也不依賴刀工的切菜功能，他只是依賴「初加工食材」而已，而「初加工食材」就是被處理好的數據，廚師在做飯時，「初加工食材」就已經被處理好了，上面的圖例只是為了説明一個關於領域上下游的問題，這是業務<strong><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">發生順序</span></strong>以及<strong><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">數據來源</span></strong>的問題。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">我們常常使用領域事件串聯業務流程，<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">在使用領域事件時，不止要關注點對點的解耦，更應該使業務流程符合領域上下游限定</span>，</span>讓各個領域獨立運行，減少領域之間的功能依賴，降低領域之間的耦合，減少業務變化帶來的影響。</span></p><span id="OSC_h1_8"></span><h1 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">2、架構設計</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h1><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">架構設計是為了<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">解決軟件系統複雜度帶來的問題，找到系統中的元素並搞清楚他們之間關係</span>。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">架構的目標是用於管理複雜性、易變性和不確定性，以確保在長期的系統演化過程中，一部分架構的變化不會對其它部分產生不必要的負面影響。這樣做可以確保業務和研發效率的敏捷，讓應用的易變部分能夠頻繁地變化，對應用的其它部分的影響儘可能地小。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(0, 82, 255);">架構設計三原則：合適原則、簡單原則、演化原則</span><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></p><span id="OSC_h2_9"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">2.1 分層架構</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">我們需要<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">按照，接口層、領域層（領域用例層、領域模型層）</span>、<span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">依賴層、基礎層，構建架構模型</span>。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">接口層：</span></strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">為外部提供服務的入口，是適配層的北向網關。不實現任何業務邏輯，也不處理事務，是跨領域的，是流程編排層，是門面服務。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">領域用例層：</span></strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">是領域服務層，是領域用例的實現層、隸屬於某個領域、是業務邏輯層，是事務層，業務邏輯應該在這層完整體現，不要分散到其他層級。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">領域模型層：</span></strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">是領域模型（實體、值對象、聚合）的所在位置，專注於領域模型自身的能力，不包含業務功能，可以處理事務，是原子化的能力，是領域對象的自我實現<em style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">。</em></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">依賴層：</span></strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">是連接外部服務的出口，是適配層的南向網關。包括倉儲，端點、RPC 等，主要作用是領域和外部解耦，用於保持領域的獨立性，是跨領域的。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">基礎層：</span></strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">與業務無關的，與領域無關的，通用的技術能力，技術組件等。</span></p><span id="OSC_h2_10"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">2.2 架構映射</span></strong></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">架構的視角，從大到小依次是：系統-&gt;應用（微服務）-&gt;模塊（包）-&gt;子模塊，這樣的從大到小的層級。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">業務領域映射：</span></strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">我們將劃分好的領域，按照對應的視角映射為對應的元素，領域模型映射到架構模型時，<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">應該是視角對等的</span>，</span>如果餐廳是系統、那麼廚房就是應用，如果餐廳是應用、那麼廚房就是模塊。<span style="font-size: 15px;color: rgb(0, 82, 255);">也應該層級匹配的，</span>將用例的實現映射到用例層，將領域模型的實現映射到領域模型層。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">技術和抽象問題：</span></strong><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">有時候、業務領域分析不能體現那些共性的技術問題，所以需要適當結合技術視角，可能需要對領域模型微調。同時、我們需要找到共同需要的基礎能力，例如「水」、「電」、「煤氣」等等，將這些作為額外的考慮因素，要做到<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">業務問題與技術問題解耦，不要將技術問題和業務邏輯揉成一團</span>。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">領域設計，類似餐廳設計師，他設計餐廳有幾個區域，區域的用途是什麼。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">架構設計，類似建築設計師，他設計如何走水電煤氣、如何施工等。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(0, 82, 255);">產出物：分層架構圖</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">以廚房為視角，其架構如下</span></strong></p><p><img class="rich_pages wxw-img" data-imgfileid="100024667" data-ratio="0.568039950062422" src="https://oscimg.oschina.net/oscnet/27a6f4f5-c098-49fd-b107-29a2889433ed.png" data-type="png" data-w="801" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">以餐廳為視角，其架構如下</span></strong></p><p><img class="rich_pages wxw-img" data-imgfileid="100024672" data-ratio="0.5816203143893591" src="https://oscimg.oschina.net/oscnet/57e1f389-d39a-4c65-a624-60ea4946afc6.png" data-type="png" data-w="827" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"><span style="font-size: 15px;letter-spacing: 0.034em;">﻿﻿</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">分層架構圖，體現邏輯上的層級分佈，而不是代表組件的具體含義，組件是應用還是模塊、需要結合實際情況而定。</span></p><span id="OSC_h2_11"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">2.3 必要的約束</span></strong></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">1、分層架構越往下層就越是穩定的：下層是被上層依賴的，下層不可以反向依賴上層（擴展點除外）。因為分層架構的核心原則是將容易變化的邏輯上浮，將共性的、原子化的、通用的邏輯下沉，被依賴的下層應該是穩定的，這要求上層承接更多業務變化。下層離開上層應該是可以獨立存在的，例如在接口層定義的 DTO 不可以在下層被使用，但領域層定義的實體可以被上層使用。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">2、<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">在使用充血模型時，應該符合面向對象編程原則</span>：</span>不要隨意的將一些能力都充到領域實體模型中。以「菜」為例，重量和規格是「菜」的自身的屬性，激發味蕾是「菜」的能力，「菜」可以維護自身的持久化狀態。但是、請注意、「菜」不可以「炒菜」，因為「炒菜」的時候，「菜」還沒有出現呢，「菜」不是自己的上帝，「菜」需要被做出來，所以「菜」被做出來之前是沒有「菜」的，這是個時間上的概念，不要錯把「炒菜」的能力放在「菜」的身上。「炒菜」用到的「水+電+氣+食材+調料+廚具」不應該是「菜」的屬性範圍，這些元素都在「廚房」的範圍中，<span style="font-size: 15px;color: rgb(0, 82, 255);">不要讓領域的模型包含不屬於自身的元素，領域的實體模型只是領域的一部分，只用於實現通用的模型能力。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">3、<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">接口層和依賴層是與領域無關的</span>：</span>他們是與技術相關的層級，不屬於任何領域，這兩層不能包含業務邏輯。有時候我們可以把接口層拆為兩層（接口層+應用層），也可以把依賴層拆分為兩個（模型依賴、服務依賴）。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">4、<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">領域層是與環境無關的</span>：</span>無論某個領域是應用還是模塊，都應該具備獨立的用例層和獨立的模型層，即使多個領域在同一個應用當中，也要按照他們是分別獨立去看待，無論某個領域是應用還是模塊，<span style="font-size: 15px;color: rgb(0, 82, 255);">領域對外部的交互，不可以繞過依賴層和接口層。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">5、<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">領域應該是最小完備的</span>：</span>把一個領域拆分為子域、子子域、子子子...... 無限拆分，拆分到一定程度之後，某個子域就不完整了，<span style="font-size: 15px;color: rgb(0, 82, 255);">不完整的子域是不可以獨立存在的。</span>拆分不不夠或者過度拆分，都是不符合低耦合高內聚原則的。<span style="font-size: 15px;color: rgb(0, 82, 255);">當一個領域的內部子域不具備獨立性時，他們之間不必嚴格解耦，不需要通過依賴層訪問本領域的其他子域，他們之間可以直接調用。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">6、<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">領域服務層就是領域用例層</span>：</span>他們倆是同一回事兒，都是用於實現領域內的用例的。<span style="font-size: 15px;color: rgb(0, 82, 255);">不要將領域服務與領域用例視為兩個獨立的層，也不要將領域服務與領域模型視為同一層，</span>否則會導致邏輯的分散（一部分在領域服務層、一部分在領域模型層、還有一部分可能在用例層），也會導致每個層的職責不明確，容易搞亂。如果將業務邏輯寫在領域模型中，會導致業務邏輯進一步下沉，業務邏輯的不確定性太大，是不適合下沉的，是違反分層架構原則的。<span style="font-size: 15px;color: rgb(0, 82, 255);">領域模型對應的是實體、領域服務對應的是用例。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">7、<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">領域用例層只能承接符合自身領域的用例</span>：</span>我們劃分出領域的目的，就是為了區分每個領域的職責所在，因此他們必須嚴格按照職責辦事，我們在之前已明確了用例和領域之間的關係，需要嚴格遵守。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">8、<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">領域模型層遵循最小依賴原則</span>：</span>只可以依賴必要的資源，必要資源指的是領域模型實現自身能力需要的資源，不包括實現業務邏輯包含的資源。例如領域模型需要依賴 DB 完成持久化，可以依賴數據訪問資源，但不應該依賴其他領域資源、不可以依賴 RPC 資源等。</span></p><span id="OSC_h2_12"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">2.4 微服務劃分</span></strong></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">服務劃分以領域劃分為參考，主要看我們要拆分到什麼粒度，這 <span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">應該符合低耦合高內聚原則，不破壞領域實體的聚合關係</span>。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物：微服務</span><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">例如餐廳：是有必要拆分的，餐廳的「菜品域」，「訂單域」，「廚房域」有獨立的問題空間。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">例如廚房：是沒有必要拆分的，廚師與刀工的耦合非常高，他們都在做飯，分開之後是不完整的，分開就是沒有必要的。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">所以餐廳被拆分為：廚房（Kitchen）、菜品（Category）、訂單（Order）三個微服務。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">基於此、我們單獨拿出<strong><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">餐廳門面服務</span></strong>作為接口層應用，再單獨拿出<strong><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">餐廳基礎服務</span></strong>作為水電煤氣的應用。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(0, 82, 255);">一般情況下，依賴層不會作為單獨的服務提供，會被以組件的形式嵌入到其他服務中。</span></p><p><img class="rich_pages wxw-img" data-imgfileid="100024673" data-ratio="0.4546296296296296" src="https://oscimg.oschina.net/oscnet/a75f1afb-0c1f-4d71-8cb5-b6e8c1b0bfec.png" data-type="png" data-w="1080" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"></p><span id="OSC_h1_13"></span><h1 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">3、功能設計（用例實現）</span></strong></h1><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">如果説領域設計是餐廳的設計師、架構設計是餐廳的建築師、那麼功能設計就是餐廳的廚師或服務員。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">任何設計都要落地到功能設計，如果廚師不守規則，偏偏要去洗手間洗菜，最後的結果依然是一團亂，最終會導致設計無法落地。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(0, 82, 255);">功能設計是實現 「面向擴展開放、面向修改關閉」 的途徑，是指導研發落地必備環節。</span></p><span id="OSC_h2_14"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">3.1 功能的概念</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">功能迭代時，功能會發生一些變化，所以他的含義是可能變化的，所以我們需要再次審視功能的概念，及時加以調整。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">例如、我們實現了一個「做蛋炒飯」的功能，後來又實現了一個「做辣椒炒蛋」的功能，那麼我們應該將功能升級為「炒菜」，甚至是「製作菜品」等。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(0, 82, 255);">明確功能的概念，是功能設計的前提。</span><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物：更新語言庫，更新腦圖</span></p><span id="OSC_h2_15"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">3.2 用例的位置</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">我們在領域分析章節，已明確了<span style="font-size: 15px;color: rgb(0, 82, 255);"><span data-slate-leaf="true" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">用例與角色的關係，用例與領域的關係</span>。</span></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">然而一個新功能的加入，我們仍然要再次評估，以確保他處於正確的位置。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物：更新用例圖</span><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><span id="OSC_h2_16"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">3.3 事件風暴</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">我們需要深入功能的細節，首推的方法是事件風暴，適用於解構複雜功能。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">事件風暴的作用並不限於功能分析，只是我覺得很適用於功能分析，事件風暴的一張圖包含很多內容，正好是功能設計所需要的。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);color: rgb(0, 82, 255);">將功能拆分為多個子功能（步驟）。</span><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">（在後續使用）</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);color: rgb(0, 82, 255);">確認參與該步驟的角色和領域。</span><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">（在後續的 3.6 章節落地）</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);color: rgb(0, 82, 255);">確認步驟的串聯流程和領域事件。</span><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">（在後續的 3.6 章節落地）</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);color: rgb(0, 82, 255);">確認參與該步驟的領域實體。</span><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">（在後續的 3.7 章節落地）</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物：事件風暴模型</span></p><span id="OSC_h2_17"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">3.4 用例分析</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">我們暫且收回思路，首先要關注共性和差異問題，以確保功能的擴展性。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(0, 82, 255);">確認用例的泛化+差異點，實現功能的擴展。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(0, 82, 255);">尋找共同包含的步驟，實現邏輯的複用。</span><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(0, 82, 255);"></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物：用例分析圖</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">例：製作菜品（做大拌菜、做鐵鍋燉、做炒雞蛋、做蒸米飯、做炒米飯）</span></strong></p><p><img class="rich_pages wxw-img" data-imgfileid="100024674" data-ratio="0.590443686006826" src="https://oscimg.oschina.net/oscnet/3d972a5e-7349-4ac8-b30a-4da19b1aa1d5.png" data-type="png" data-w="879" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"></p><p><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">﻿﻿</span><strong style="font-size: 16px;letter-spacing: 0.034em;"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">3.5 用例實現類（領域服務類）結構圖</span></strong></p><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">專注於用例層的類設計，實現「面相修改關閉，面相擴展開放」。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);color: rgb(0, 82, 255);">用例的類結構圖是用例分析圖的一種映射。</span><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">出物：用例層的類結構圖</span></p><p><img class="rich_pages wxw-img" data-imgfileid="100024676" data-ratio="0.7601851851851852" src="https://oscimg.oschina.net/oscnet/efec1931-71d9-4241-9f9b-dfc1c268782f.png" data-type="png" data-w="1080" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><span id="OSC_h2_18"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">3.6 用例流程圖</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">我們接回思路，更進一步，將事件風暴模型落實到代碼層面。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">我們<span style="font-size: 15px;color: rgb(0, 82, 255);">將步驟分配到實現類中、步驟就是該類的一個方法，</span>進一步明確由哪個類和方法來實現該步驟，從而就規定了步驟所在的領域。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">我們<span style="font-size: 15px;color: rgb(0, 82, 255);">將步驟和領域事件串聯起來，規定了業務實現流程。</span>推薦使用泳道圖表達上述內容。泳道的縱向組件是用例的實現類。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);color: rgb(0, 82, 255);">這是真實業務流程的映射。</span><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物：用例流程圖</span><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">以炒雞蛋為例，其用例流程圖如下</span></strong><span style="font-size: var(--articleFontsize);letter-spacing: 0.034em;"></span></p><p><img class="rich_pages wxw-img" data-imgfileid="100024675" data-ratio="0.5287037037037037" src="https://oscimg.oschina.net/oscnet/0fdde59e-7025-468d-89b7-746265e0220c.png" data-type="png" data-w="1080" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><span id="OSC_h2_19"></span><h2 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">3.7 活動圖（時序圖）</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h2><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="font-size: 15px;border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">我們進一步將事件風暴模型落實到代碼層面，我們<span style="font-size: 15px;color: rgb(0, 82, 255);">使用時序圖，體現依賴和調用關係，規定了步驟與領域實體模型的關係，</span>進一步説明用例是如何實現的。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">這時候，為了簡便、我們可以收起領域服務類（用例層）的泳道。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(217, 33, 66);">產出物：時序圖、活動圖</span></p><p><img class="rich_pages wxw-img" data-imgfileid="100024677" data-ratio="0.7818361303060217" src="https://oscimg.oschina.net/oscnet/6cbb7948-b8d2-4075-aeab-c0939bed59da.png" data-type="png" data-w="1013" style="border-width: 0px;border-style: none;border-color: rgb(235, 238, 245);" referrerpolicy="no-referrer"><span style="font-size: 15px;letter-spacing: 0.034em;">﻿</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"><em style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);">試想一下、假如把業務邏輯放在領域模型當中（例如聚合），如何實現「面相擴展開放、面相修改關閉」呢？</em></span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></p><span id="OSC_h1_20"></span><h1 data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">4、編碼實現</span></strong><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></h1><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">編碼實現...... &nbsp;我決定還是...... &nbsp;偷個懶吧...... &nbsp;哈哈哈。</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;">但是我們回顧一下之前的內容，是否足夠了？不同的研發人員依照設計去編碼，是否會寫出不一樣的代碼？</span></p><p data-slate-node="element" data-slate-inline="false" style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);"><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;color: rgb(0, 82, 255);">最後、我們的目標是「解決軟件複雜度帶來的問題」，而實現這個目標的途徑是「設計指導研發落地」。</span><span style="border-width: 0px;border-style: solid;border-color: rgb(235, 238, 245);font-size: 15px;"></span></p><p><br></p><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - 京東雲開發者（JDT_Developers）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 01:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10675650</guid>
            <link>https://my.oschina.net/u/4090830/blog/10675650</link>
            <author>
                <![CDATA[京東雲開發者]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[探索 Zadig 自測模式，一套環境多人協同，釋開發者創造力！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><div><div><div><div><p style="margin-left:0; margin-right:0"><img alt="" src="https://oscimg.oschina.net/oscnet/up-0d0eca0dd098c1cd307613306af4a974609.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">在日常開發中，研發工程師經常遇到環境不足、環境管理混亂以及互相搶佔環境的問題，這種情況不僅使得研發工程在等待環境準備和切換中花費大量寶貴的工作時間，無法充分發揮創造性，還直接影響了項目的進度和質量。對於業務架構簡單、服務數量較少的情況，往往會選擇擴展出一套完整的新環境來滿足不同研發同時自測聯調的訴求，減少不必要的等待時間。而面對複雜的業務場景，一套測試環境中可能包含成千上百個服務，額外搭建這樣一套完整的環境成本極高，甚至由於一些服務的基礎架構的原因，複製多套環境幾乎不可能。</p><div><img height="940" src="https://pic1.zhimg.com/80/v2-aaa680bac5f2ab99ffc7ac984730c2d4_1440w.webp" width="976" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">為了應對上述痛點問題，Zadig 提出了一種低成本搭建子環境的解決方案。在 Zadig 自測模式的子環境中，只需部署少量服務，並與基準服務進行交互，實現了更為高效的開發和聯調流程。</p><p style="margin-left:0; margin-right:0">在本文中，我們將深入探討 Zadig 自測模式的基本原理、應用場景、管理員操作細節和工程師在日常使用中的實際操作等。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><span id="OSC_h2_1"></span><h2><strong>基本原理</strong></h2><div><img src="https://pic4.zhimg.com/80/v2-3569090a3b2610750992ee5a07320383_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">自測模式是 Zadig 為降低環境管理複雜度和部署成本而推出的一種面向開發者的功能模塊。當開啓了環境的自測模式後，該環境則成為基準環境，該環境擁有完整的服務調用鏈。沒有灰度標的請求會在基準環境中進行調用，調用鏈路為<em><strong><span>&nbsp;</span><span style="background-color:#dddddd">A -&gt; B -&gt; C</span></strong></em>。</p><p style="margin-left:0; margin-right:0">當開發者需要進行開發、聯調時，比如涉及到到 A 和 C 兩個服務的變更，可以基於基準環境新建 dev1 子環境，該子環境中僅部署變更後的 A 和 C 服務，即 A' 和 C'。聯調時請求加上灰度標，如在 http header 中設定<strong><em><span>&nbsp;</span><span style="background-color:#dddddd">x-env=dev1&nbsp;</span></em></strong>的灰度標，此時請求會按照<span>&nbsp;</span><strong><em><span style="background-color:#dddddd">A' -&gt; B -&gt; C'</span></em></strong><span style="background-color:#dddddd">&nbsp;</span>進行。</p><p style="margin-left:0; margin-right:0">同理，當開發、聯調時僅涉及到 B 和 C 兩個服務的變更時，可以基於基準環境新建 dev2 子環境，該子環境僅部署變更後的 B 和 C 服務，即 B'' 和 C''。聯調時加上灰度標<span style="background-color:#dddddd">&nbsp;</span><em><strong><span style="background-color:#dddddd">x-env=dev2</span></strong></em>，這樣請求按照<span>&nbsp;</span><em><strong><span style="background-color:#dddddd">A -&gt; B'' -&gt; C''</span></strong></em><span style="background-color:#dddddd">&nbsp;</span>進行。</p><span id="OSC_h2_2"></span><h2>&nbsp;</h2><span id="OSC_h2_3"></span><h2><strong>應用場景</strong></h2><p style="margin-left:0; margin-right:0">Zadig 的自測模式支持用較低成本快速拉起包括部分服務的子環境，在子環境中開發、變更目標服務，並和包括全量服務的基準環境交互來實現自測聯調，企業可使用自測模式解決的問題包括但不限於：</p><p style="margin-left:0; margin-right:0">1. 開發頻率快，業務驗證需求旺盛，亟需小快跑的方式迭代業務，但缺乏相關工程底座建設。</p><p style="margin-left:0; margin-right:0">2. 微服務的數量大，業務複雜度高，導致建設一套完整的環境成本高，代價大。</p><p style="margin-left:0; margin-right:0">3. 部分微服務因基礎技術架構等原因，無法完整地複製出多套完整環境，導致多個團隊綁定在一個環境中，環境穩定性難保障。</p><p style="margin-left:0; margin-right:0">4. ......</p><p style="margin-left:0; margin-right:0">&nbsp;</p><span id="OSC_h2_4"></span><h2><strong>如何使用</strong></h2><p style="margin-left:0; margin-right:0">下面以<em><strong><span>&nbsp;</span><span style="color:#3498db"><span style="background-color:#dddddd">simple-service</span></span><span>&nbsp;</span></strong></em>為例來説明如何配置和使用 Zadig 自測模式。項目背景以及自測聯調需求説明如下：</p><p style="margin-left:0; margin-right:0">1. 項目中共包括 3 個微服務 a、b、c，服務調用鏈路：a -&gt; b -&gt; c</p><p style="margin-left:0; margin-right:0">2.<em>dev<span>&nbsp;</span></em>環境為日常完整穩定的測試環境，包括全部微服務 a、b、c</p><p style="margin-left:0; margin-right:0">3. 日常會對 a 服務進行高頻改動，希望能對 a 服務進行充分自測，確保其變更可交付</p><p style="margin-left:0; margin-right:0">&nbsp;</p><span id="OSC_h3_5"></span><h3><strong>管理員：配置自測模式</strong></h3><p style="margin-left:0; margin-right:0"><strong>步驟 1：開啓自測模式</strong></p><p style="margin-left:0; margin-right:0">訪問<span style="background-color:#dddddd">&nbsp;</span><em><strong><span style="background-color:#dddddd">dev</span></strong></em><span style="background-color:#dddddd">&nbsp;</span>環境 &gt; 更多 &gt; 點擊開啓自測模式</p><div><img src="https://pic4.zhimg.com/80/v2-7b890f74b62982518abdaf65c03685a7_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic2.zhimg.com/80/v2-86baeb0dc983dc5f93a90ed2feba0b81_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">這時會對自測模式的依賴條件做檢查：</p><p style="margin-left:0; margin-right:0">1. 業務架構實現全鏈路數據透傳能力或者使用 Tracing 組件。系統無法自動檢查，需要管理員自行確保，此處支持較為廣泛應用的 SkyWalking、Zipkin、Jaeger 等。</p><p style="margin-left:0; margin-right:0">2. 系統會對 Istio 是否安裝做自動檢查，如果沒有請在環境所在集羣進行安裝</p><p style="margin-left:0; margin-right:0">3. 服務調用鏈自動檢查，主要依據是有 K8s Service 類型的資源和服務 a、b、c 對應</p><p style="margin-left:0; margin-right:0">當開啓自測模式後，<em><span style="background-color:#dddddd">dev&nbsp;</span></em>環境即成為基準環境。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong>步驟 2：配置入口服務</strong></p><p style="margin-left:0; margin-right:0">若需要在子環境中添加並聯調入口服務，即本項目中<em><span>&nbsp;</span><strong><span style="background-color:#dddddd">a&nbsp;</span></strong></em>服務，則需要在基準環境中，配置入口服務的 Istio 網關。並將配置的訪問地址解析到集羣 istio-ingressgateway service 的外網訪問地址上，如下圖所示。</p><div><img src="https://pic2.zhimg.com/80/v2-7d041ec097ffe3fe94015bbe8f537165_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic2.zhimg.com/80/v2-14f4bd70d8f00152a5eb358b250679c9_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h3_6"></span><h3>&nbsp;</h3><span id="OSC_h3_7"></span><h3><strong>工程師：日常自測聯調</strong></h3><p style="margin-left:0; margin-right:0"><strong>創建子環境</strong></p><p style="margin-left:0; margin-right:0">在 dev 基準環境中通過點擊<span>&nbsp;</span><em><strong><span style="background-color:#dddddd">創建子環境</span></strong></em>，選擇 a 服務可創建包含 a 服務的子環境<span>&nbsp;</span><em><strong><span style="background-color:#dddddd">dev-subenv1</span></strong></em>。</p><div><img src="https://pic4.zhimg.com/80/v2-454a167d92a068bc2feea3a3c61556db_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic1.zhimg.com/80/v2-e68c0d0aab9efaf0e0a63f250860ada8_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic4.zhimg.com/80/v2-585b3bba48ecaf31b7c53f1454006177_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong>請求驗證</strong></p><p style="margin-left:0; margin-right:0">當需要請求服務 a 時，在請求頭部加入<span>&nbsp;</span><em><strong><span style="background-color:#dddddd">x-env=dev-subenv1</span></strong></em><span style="background-color:#dddddd">&nbsp;</span>即可將請求流量轉發到子環境<span>&nbsp;</span><em><strong><span style="background-color:#dddddd">dev-subenv1</span></strong></em><span style="background-color:#dddddd">&nbsp;</span>中，實現子環境和<strong><span>&nbsp;</span></strong><em><span style="background-color:#dddddd">dev</span></em><span>&nbsp;</span>環境的自測聯調。測試效果如下所示：</p><p style="margin-left:0; margin-right:0">1. 增加<span>&nbsp;</span><em><strong><span style="background-color:#dddddd">x-env=dev-subenv1</span></strong></em><span style="background-color:#dddddd">&nbsp;</span>請求頭訪問服務 a，子環境中的服務 a 會接收到請求並給出響應，對於請求鏈路上的 b 和 c 服務，<em><span style="background-color:#dddddd">dev</span></em><span>&nbsp;</span>環境中的服務會給出正常響應。</p><div><img src="https://pic1.zhimg.com/80/v2-f4d69dfe4cd4ba380ebc2f696852b2b4_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">子環境 dev-subenv1 中&nbsp;<em><strong><span style="background-color:#dddddd">a</span></strong><span style="background-color:#dddddd">&nbsp;</span></em>服務的日誌：</p><div><img src="https://pic2.zhimg.com/80/v2-2bbe8c22df5df855985ff74c49a765b9_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">2. 執行不帶任何頭部信息的請求，直接請求服務 a，<em><strong><span style="background-color:#dddddd">dev</span></strong><span>&nbsp;</span></em>環境中的服務 a、b、c 會處理請求，子環境中無請求流量輸入。</p><div><img src="https://pic4.zhimg.com/80/v2-a1d064a8b4dd98a88c0e72ff3a1820f3_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">基準環境 dev 中<em><strong><span>&nbsp;</span>a<span>&nbsp;</span></strong></em>服務的日誌：</p><div><img src="https://pic4.zhimg.com/80/v2-e770e666e0996145de47c3e3447f0817_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">Zadig 的自測模式是為開發者量身定製的解決方案，適用於多人協同開發、業務規模大、服務相互關聯、日常變更頻繁的場景。傳統測試環境所帶來的有限資源、高成本、複雜性等問題，在 Zadig 的自測模式下迎刃而解。</p><p style="margin-left:0; margin-right:0">通過低成本搭建子環境、靈活部署少量服務，Zadig 的自測模式使開發者能夠在獨立的測試環境中進行高效工作，擺脫了對同一測試環境的爭奪，提升了開發流程的質量和效率。</p><p style="margin-left:0; margin-right:0">歡迎大家下載試用，體驗更高效的開發方式！</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">立即體驗 Zadig V2.0 新架構，開啓高效交付之旅！🚀&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968">Zadig 開放，鏈接，專業</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-16e6b25cd9b3c92bc711c17b21e99e9b040.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491363%26idx%3D1%26sn%3Dd6ccb8938f4702f560f28d5b79324cf3%26chksm%3Dcfb45383f8c3da9540c0c3eb1080f729fa2545db2063159b5fb05ddeb818f082e21adb2f9189%26token%3D1376697300%26lang%3Dzh_CN%23rd" target="_blank" rel="nofollow">閲讀原文</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank" rel="nofollow">Zadig 在 Github</a>&nbsp;/&nbsp;<a href="https://gitee.com/koderover/zadig" rel="nofollow">Zadig 在 Gitee</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>推薦閲讀 :&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491441%26idx%3D1%26sn%3D3eb5d7125489434ff567d60ae48ef5e5%26chksm%3Dcfb453d1f8c3dac7a9ba2de20d6d8d37f94ea5a0812030843cde5d9512bd93deb208073ff1bf%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">只有大廠才可以有 DevOps 平台？</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490637%26idx%3D1%26sn%3D6e0498b37fb15f8b8903c4997e5611d8%26chksm%3Dcfb450edf8c3d9fb758d691081f09fd85d91dbb17534ba9c18c2300725462d3806581efbd237%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">Zadig vs. Jenkins 詳細比對：時代的選擇與開發者之選</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491437%26idx%3D1%26sn%3D4bfa94daef9e61087984cb2ab9e9a6d9%26chksm%3Dcfb453cdf8c3dadbaabff32876f84646767db645228c14c84279b706139db4de6081ed4376e6%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">基於 Istio + Zadig，零負擔實現雲原生全鏈路灰度發佈</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491474%26idx%3D1%26sn%3D5f7c40d430e16fcbfa69104c4a46a797%26chksm%3Dcfb45332f8c3da247c792998c84b0885a3b40a534cfd2011e0e7ea30a51cadeeabb37fdba14d%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">阿里雲 MSE + Zadig，面向開發者的全鏈路灰度發佈解決方案</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491336%26idx%3D1%26sn%3D805f7d2c44c96cab529ffef120d84ca0%26chksm%3Dcfb453a8f8c3dabe83163a873135f2a72cdddcb9faeecefe5e40f20a358681304484c56cce51%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">ZADIG 專家版傾情上線：一鍵高效發佈，119 元/人月起，社區老友享年終福利！</a></p></div></div></div></div></div></div></div><div>
  &nbsp; 
</div></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 01:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/10676758</guid>
            <link>https://my.oschina.net/koderover/blog/10676758</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[sms4j 3.1.0 終於發佈啦！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>📣📣sms4j 3.1.0 終於發佈啦！📣📣</h1><p>2023 年轉瞬即逝，sms4j 項目在這段時間裏取得了令人矚目的成就。截至目前，我們已經獲得了超過 1300 個 star，這離不開大家對 sms4j 項目的支持和關注，我代表整個開發團隊向大家表示衷心的感謝！</p><p>同時，我很高興地告訴大家，我們的開發團隊正在不斷壯大，並迎來了一批新的成員加入。他們的加入為項目注入了新的活力和創造力。此外，我們還收到了許多建設性的意見和建議，這些寶貴的反饋將有助於我們進一步提升 sms4j 的功能和性能。</p><p>接下來，讓我們一起來瞭解一下本次 3.1.0 版本的更新內容，以及認識一下團隊的新成員吧！在這個版本中，我們增加了一些新的特性和功能，以滿足用戶不斷增長的需求。同時，我們也修復了一些已知的問題和 bug，提升了系統的穩定性和可靠性。</p><p>如果我們的項目對你產生了幫助，或者你覺得還算值得鼓勵，請用你發財的小手幫助點上一個 start</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsms4j.com" target="_blank">官網地址</a></p><p><a href="https://gitee.com/dromara/sms4j">gitee 倉庫</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdromara%2Fsms4j" target="_blank">github 倉庫</a></p><h2>新增功能：</h2><ul><li><p>聯麓短信：我們新增了對聯麓短信的支持，現在可以像使用其他廠商一樣方便地進行使用。</p></li><li><p>鼎眾短信：我們還新增了對鼎眾短信的支持，鼎眾短信可以發送無模板短信，有需要的小夥伴可以嘗試一下。</p></li><li><p>OA 通知：在 3.1 版本中，我們正式加入了對 OA 通知的支持，兼容釘釘、飛書和企業微信。</p></li></ul><h2>優化功能：</h2><ul><li><p>郵件功能優化：現在郵件發送可以直接發送 HTML 字符串，並且可以存在模板變量。</p></li><li><p>標準短信方法優化：我們添加了一個方法，該方法用於發送固定模板下的多參數模板短信。</p></li><li><p>全局黑名單功能優化：在這次的更新中，我們重構了底層對於短信失敗重試和短信黑名單的功能，現在它變得更加輕量、更加穩定。</p></li><li><p>新增方法 reload 和 reloadAll：我們在覈心工廠類（SmsFactory）中新增了方法 reload 和 reloadAll，用於重新從接口實現中讀取並重新實例化短信對象。這樣可以極大地減少對於重新讀取配置的工作量。</p></li></ul><h2>修復問題：</h2><ul><li><p>合一短信 HMAC 模式下簽名無效的問題：我們修復了合一短信在 HMAC 模式下簽名無效的問題。</p></li><li><p>郵件插件 JDK17 的適配：我們修復了郵件插件在 JDK17 上的適配問題。</p></li><li><p>容聯雲短信發送失敗問題：我們修復了容聯雲短信發送失敗的問題。</p></li><li><p>阿里雲短信在個別情況下報簽名錯誤問題：我們修復了阿里雲短信在個別情況下報簽名錯誤的問題。</p></li><li><p>雲片短信在無模板下報錯的問題：我們修復了雲片短信在無模板下報錯的問題。</p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 10 Jan 2024 00:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275005/sms4j-3-1-0-released</guid>
            <link>https://www.oschina.net/news/275005/sms4j-3-1-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 年中國軟件名城評估結果公佈：深圳、杭州、北京獲得最高三星評級]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>工信部近日印發《工業和信息化部關於 2023 年中國軟件名城評估結果的通告》，<strong>確定了 2023 年中國軟件名城評估結果</strong>。</p><p>1、<strong><span style="background-color:#e67e22">深圳</span></strong>：★★★</p><p>2、<strong><span style="background-color:#e67e22">杭州</span></strong>：★★★</p><p>3、<strong><span style="background-color:#e67e22">北京</span></strong>：★★★</p><p>4、南京：★★</p><p>5、上海：★★</p><p>6、成都：★★</p><p>7、濟南：★★</p><p>8、武漢：★★</p><p>9、廣州：★★</p><p>10、蘇州：★★</p><p>11、青島：★★</p><p>12、廈門：★★</p><p>13、福州：★★</p><p>14、無錫：★★</p><hr><p>工信部 2017 年印發了《中國軟件名城創建管理辦法（試行）》，目前已授牌&nbsp;14 個名城。</p><p>申請創建中國軟件名城的城市需為<strong>地級及以上</strong>。同時需具備以下條件：</p><ul><li><p>一是軟件和信息技術服務業基礎良好、規模較大、發展潛力較強，對國民經濟的貢獻程度較高，擁有若干全國知名度較高的骨幹軟件企業和若干全國市場佔有率較高的軟件產品，創新能力較強，產業特色鮮明、生態較好；</p></li><li><p>二是軟件和信息技術服務業帶動效應明顯，對拉動經濟增長、促進就業、加速傳統行業數字化轉型，以及提升城市管理和社會服務水平具有重要支撐作用，對城市文化塑造及品牌提升具有積極影響；</p></li><li><p>三是產業政策支持力度較大，具有較為豐富的科技、教育、人才等資源條件和良好的城市人文環境，具有較為完善的適合軟件和信息技術服務業集聚發展的物理載體環境，產業基地園區、公共服務平台等建設情況良好。</p></li><li><p>此外，申請城市及所屬省級人民政府要對發展軟件和信息技術服務業高度重視，並積極主動開展名城創建工作。</p></li></ul><p>2022 年 12 月，<strong><u><a href="https://www.oschina.net/news/221868">工信部發布了關於印發中國軟件名城（園）管理辦法的通知</a></u></strong>，進一步規範名城、名園管理工作，新的管理辦法將對中國軟件名城、名園動態管理實行<strong>退出機制</strong>。</p><p>通過每年組織開展評估工作，以星級體現（最高級為三星，星級越高發展質量越好）評估結果，充分調動地方發展軟件和信息技術服務業的積極性。<strong>對評估結果為一星的名城、名園，工業和信息化部給予提醒，責令整改；對連續兩年評估結果為一星的，公告退出</strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 10:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274956</guid>
            <link>https://www.oschina.net/news/274956</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[工信部：到 2027 年，制定雲計算國家標準和行業標準達 50 項以上]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>工信部<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fgzcy%2Fyjzj%2Fart%2F2024%2Fart_0dba24687491428a8939060c79ee358a.html" target="_blank">徵集</a>對《雲計算綜合標準化體系建設指南》（徵求意見稿）（以下簡稱《指南》）的意見。</p><p><img height="264" src="https://oscimg.oschina.net/oscnet/up-249312eb4a023d062a0a406036a6f3ae7a6.png" width="500" referrerpolicy="no-referrer"></p><p>《指南》明確，到 2025 年，雲計算標準體系更加完善。推進修訂參考架構、術語等基礎標準，優先制定雲計算創新技術產品、新型服務應用和重要缺失領域的關鍵標準。開展雲原生、邊緣雲、混合雲、分佈式雲等重點技術與產品標準研製，制定一批新型雲服務標準，面向製造、軟件和信息技術服務、信息通信、金融、政務等重點行業領域開展應用標準建設。</p><p>到 2027 年，制定雲計算國家標準和行業標準達 50 項以上，基本覆蓋基礎、技術與產品、服務、應用、管理、安全等各類研製方向，有效滿足我國產業標準化新階段需求。結合雲計算產業發展情況及各行業用戶上雲用雲需求，推動雲計算國行團標落地實施。提高國際標準參與度與轉化率，協同推進互聯互通與標準開放。</p><p>《指南》指出，立足我國雲計算產業發展及生態系統建設新階段，總結現階段雲計算標準體系建設成效，結合國內外雲計算技術演進趨勢和關鍵挑戰，研究分析各領域方向的標準制定和缺失情況，在《雲計算綜合標準化體系建設指南》（工信廳信軟〔2015〕132 號）基礎上，修訂更新雲計算綜合標準化體系，以指導具體標準的立項與制定。修訂後的雲計算綜合標準化體系結構見圖 1，包括「01 基礎標準」、「02 技術與產品標準」、「03 服務標準」、「04 應用標準」、「05 管理標準」和「06 安全標準」六個部分。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 10:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274952</guid>
            <link>https://www.oschina.net/news/274952</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[雲原生週刊：K8sGPT 加入 CNCF]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>開源項目推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbackube%2Fvolsync" target="_blank">VolSync</a></h3><p>VolSync 使用 rsync 或 rclone 在集羣之間異步複製 Kubernetes 持久卷。它還支持通過 Restic 創建持久卷的備份。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenclarity%2Fkubeclarity" target="_blank">KubeClarity</a></h3><p>KubeClarity 是一種用於檢測和管理軟件物料清單 (SBOM) 以及容器映像和文件系統漏洞的工具。它掃描運行時 K8s 集羣和 CI/CD 管道，以增強軟件供應鏈的安全性。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmariadb-operator%2Fmariadb-operator" target="_blank">mariadb-operator</a></h3><p>以雲原生方式運行和操作 MariaDB。使用 Kubernetes CRD 而不是命令式命令以聲明方式管理 MariaDB 。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpadok-team%2Fburrito" target="_blank">Burrito</a></h3><p>Burrito 是 TACoS（Terraform 自動化協作軟件）Kubernetes 運營商。它解決了管理基礎架構狀態漂移、為 Terraform 編寫 CI/CD 流水線以及提供 Terraform 狀態修改可見性的挑戰。</p><h2>文章推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2F%40kylelzk%2Fkubernetes-theory-understanding-kubernetes-components-a-deep-dive-ac31b7463df2" target="_blank">理解 Kubernetes 組件：深入探討</a></h3><p>這篇文章深入介紹了 Kubernetes 組件，幫助讀者全面瞭解這個強大的容器編排平台。文章首先介紹了 Kubernetes 的架構，包括主要組件和它們的功能，如 kube-apiserver、etcd、kube-scheduler、kube-controller-manager 和 cloud-controller-manager。接下來，文章討論了運行在每個節點上的節點組件，如 kubelet、kube-proxy 和容器運行時。然後，文章介紹了一些附加組件，如 DNS、Web UI（Dashboard）、容器資源監控和集羣級別的日誌記錄。最後，文章討論了網絡組件和存儲組件，包括 CNI、Ingress、Service、Persistent Volumes 和 Storage Classes。通過深入瞭解這些組件的作用和功能，開發人員和管理員可以充分利用 Kubernetes 的功能，有效地管理和擴展他們的應用程序。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcollabnix.com%2Fwhats-new-in-kubernetes-1-29-mandala-the-universe%2F" target="_blank">Kubernetes 1.29 新增功能：PersistentVolume 訪問模式、節點卷擴展、KMS 加密、調度程序優化等</a></h3><p>這篇文章介紹了 Kubernetes 1.29 版本的新功能和改進。其中包括持久卷訪問模式、節點卷擴展、KMS 加密、調度器優化等方面的內容。文章強調了 Kubernetes 社區的協作精神，並概述了各個穩定、測試和實驗性功能的特點和用途。這些新功能提供了更好的持久性、存儲靈活性和加密能力，同時通過優化調度效率和改進節點生命週期管理，提升了集羣的性能和可靠性。全文通過 Mandala 主題來展示 Kubernetes 的發展和創新，鼓勵讀者參考官方發佈説明，全面瞭解 Kubernetes 1.29 版本的變化，並共同探索容器編排的未來。</p><h2>雲原生動態</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk8sgpt.ai%2Fblog%2Fpost-7%2F" target="_blank">K8sGPT 加入 CNCF</a></h3><p>K8sGPT 是一個用於掃描您的 Kubernetes 集羣、以簡單的英語診斷和處理問題的工具。它將 SRE 經驗編碼到其分析器中，並幫助提取最相關的信息，並結合人工智能來豐富分析結果。</p><p>K8sGPT 項目獲選加入 CNCF，成為第一個被接受的 AI + Kubernetes 工具。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpicluster.ricsanfre.com%2Fblog%2F2024%2F01%2F04%2Fannouncing-release-1.8%2F" target="_blank">Kubernetes Pi Cluster 發佈 v1.8</a></h3><p>Kubernetes Pi Cluster 項目的第八個版本（v1.8）發佈了。該版本的主要特性和改進包括：</p><ul><li>K3S 高可用配置：使用 3 個主節點實現高可用性部署，並採用嵌入式 etcd 數據存儲。為了提供 Kubernetes API 的高可用性，使用網絡負載均衡器 HAProxy。</li><li>遷移 Ingress Controller：從 Traefik 遷移到 NGINX。這個遷移的主要原因是使用標準的 Ingress 資源，簡化 Linkerd 集成配置。</li><li>單點登錄（Single Sign-on）：基於 OAuth2.0/OpenID Connect 標準，部署了一個基於 Keycloak 的單點登錄解決方案。Keycloak 是一個開源的身份訪問管理解決方案，支持集中身份驗證和授權服務。</li><li>新增 Kafka 服務：添加 Kafka 作為事件流平台，實現面向數據驅動的微服務架構。部署 Kafka Schema Registry，用於集中管理 Kafka 生產者和消費者的模式。</li></ul><blockquote><p>本文由博客一文多發平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 發佈！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 09:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10726775</guid>
            <link>https://my.oschina.net/u/4197945/blog/10726775</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 2.0 揭祕 | 新一代不可變系統探索]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">openKylin 不可變系統，由社區 UpdateManager &nbsp;SIG 基於 OStree 技術研發，目標是為用戶提供更加穩定、安全和高效的不可變系統架構，提高系統的安全性和穩定性，簡化系統管理。目前，大家可通過安裝 openKylin 2.0 Alpha 版本時勾選「不可變系統安裝」進行體驗，完整功能請期待 openKylin 2.0 正式版本上線！</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-715de6551bd2081ffda9898ef990c804ae4.png" width="940" referrerpolicy="no-referrer"></p><p style="text-align:center"><strong>什麼是不可變系統</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">不可變系統，是一種不可更改且只讀的操作系統，即用戶或應用程序不能直接修改正在運行的系統的核心文件和目錄，用戶通過原子更新實現系統的更新升級，<strong>在更新失敗時能夠迅速回滾，確保系統不會陷入異常狀態</strong>。應用程序通過容器技術與核心操作系統相互隔離，確保一個應用程序所做的更改不會影響核心系統。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong><span style="color:#000000">openKylin 不可變系統，採用 OStree 技術實現對新一代不可變系統的探索</span></strong><span style="color:#000000">。OStree 是一種用於操作系統的版本控制系統，它類似於 Git，用於整個操作系統文件系統樹的版本控制。OStree 允許用戶對整個操作系統進行版本控制，包括內核、庫、二進制文件和配置文件等，這使得系統升級、回滾變得更加容易。OStree 技術的另一個重要特點是不可變性。它將整個操作系統視為一個不可變的文件系統樹，每個版本都被視為一個不可變文件系統樹分支版本。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="text-align:center"><strong>openKylin 不可變系統技術優勢</strong></p><p><span><strong>強大的穩定性</strong></span></p><p style="margin-left:0px; margin-right:0px">藉助 OStree 技術，openKylin 不可變系統可實現系統架構的不可變性，確保每次系統更新都是無風險、原子級的操作，大大降低系統運行中出現問題的可能性，為用戶提供更加強大的穩定性保障。</p><p><span><strong>安全可靠</strong></span></p><p style="margin-left:0px; margin-right:0px">通過 openKylin 不可變系統架構，可有效應對惡意軟件和系統漏洞的威脅，為用戶數據和隱私安全提供堅實的保障，極大地提升系統的安全性。</p><p><span><strong>應用隔離</strong></span></p><p>通過容器化技術實現應用程序與核心操作系統隔離，確保應用程序所做的更改不會影響核心系統或其他應用程序。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">綜上所述，openKylin 基於 OStree 的不可變系統實現，確保系統核心不可變，將為用戶帶來更加穩定、安全的體驗。在後續揭祕中，我們也將對 openKylin 不可變系統方案特性進行詳細解讀，敬請期待！</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p><strong>關於 UpdateManager&nbsp;SIG</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">openKylin 社區 UpdateManager SIG 組致力於開發和維護 openKylin 系統升級機制，並探索和研發新一代不可變系統相關技術，包括系統架構、OStree、系統更新組件等，提供不可變系統相關的技術規劃、設計、開發、維護和系統升級方案。歡迎社區中對系統更新升級、不可變系統等技術領域感興趣的開發者加入我們！</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">SIG 主頁：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0b43d1">https://gitee.com/openkylin/community/tree/master/sig/UpdateManager</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 09:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274942</guid>
            <link>https://www.oschina.net/news/274942</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[LangChain 發佈首個穩定版 v0.1.0，構建 LLM 應用的開源工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>LangChain 發佈了首個穩定版 v0.1.0，團隊稱此版本完全向後兼容，同時提供對 Python 和 JavaScript 的支持，重點改進了功能和文檔。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1f71d07077c8a861e935cab5e2c3c2c998a.png" referrerpolicy="no-referrer"></p><p>LangChain 已發佈一年多，現已成為構建 LLM 應用程序的默認框架。其開發團隊最近決定對 LangChain 包架構進行重大更改，以便更好地組織項目並加強基礎。</p><p>具體來説包含兩項重大的架構更改：</p><ul><li>從&nbsp;<code>langchain</code>&nbsp;中將&nbsp;<code>langchain-core</code>&nbsp;獨立出來</li><li>拆分 partner 包，分為&nbsp;<code>langchain-community</code>&nbsp;，以及獨立的 partner 包</li></ul><p><code>langchain-core</code>&nbsp;包含了主要的抽象概念、接口和核心功能。這部分代碼已經非常穩定，並在過去一個多月裏遵循了更加嚴格的版本管理政策。</p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.langchain.dev%2Flangchain-v0-1-0%2F" target="_blank">詳情查看發佈公告</a></u></em>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 07:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274921/langchain-v0-1-0</guid>
            <link>https://www.oschina.net/news/274921/langchain-v0-1-0</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GTK 將採用「統一渲染器」取代 OpenGL 和 Vulkan]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>GTK 近日合併了名為「Add new unified renderer」的 PR。</p><blockquote><p style="margin-left:0; margin-right:0">GTK (GIMP Toolkit) 是一套跨多種平台的圖形工具包，最初為 GIMP 而寫，GIMP 是指 GNU 圖像處理程序 (GNU Image Manipulation Program)，GIMP 擁有幾乎所有圖象處理所需的功能，號稱 Linux 下的 Photoshop。GTK 後來發展成為 Linux 下開發圖形界面應用的主流開發工具。</p></blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-730b58563ec58c49ba1dd57df43a1e3cb9e.png" referrerpolicy="no-referrer"></p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitlab.gnome.org%2FGNOME%2Fgtk%2F-%2Fmerge_requests%2F6588" target="_blank">根據描述</a></u>，該 PR 添加了新的<strong><span style="background-color:#e67e22">統一渲染器 (unified renderer)</span></strong>，又稱「GPU 渲染器」。它取代了現有的 Vulkan 渲染器和 OpenGL 渲染器 —— 直接默認使用 Vulkan。此舉意味着 GTK 的現代 GPU 加速渲染向前邁出了一大步。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fnews%2FGTK-Unified-Renderer-Progress" target="_blank">據介紹</a>，GTK 統一渲染器的主要補丁集有 24.8k 行新代碼，同時刪除了 9.6k 行現有代碼。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 07:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274918/gtk-unified-renderer-progress</guid>
            <link>https://www.oschina.net/news/274918/gtk-unified-renderer-progress</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 稱《紐約時報》的版權訴訟毫無根據]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">《紐約時報》曾於去年 12 月起訴 OpenAI 和微軟公司，稱這兩家公司非法使用其受版權保護的材料來訓練 AI 模型。時至今日，OpenAI 公開回擊並發表了一篇<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fblog%2Fopenai-and-journalism" target="_blank">博文稱</a>：「我們支持新聞業，與新聞機構合作，並認為《紐約時報》的訴訟毫無根據。」</span></p><p><span style="color:#000000">該公司在博文中重申了以下四點立場：</span></p><ul><li><span style="color:#000000">我們與新聞機構合作並創造新的機會</span></li><li><span style="color:#000000">培訓屬於合理使用，但我們提供選擇退出的機會，因為這是正確的做法</span></li><li><span style="color:#000000">「反芻（Regurgitation）」是一種罕見的錯誤，我們正在努力將其降至為零</span></li><li><span style="color:#000000">《紐約時報》沒有講述完整的事實</span></li></ul><p><img height="312" src="https://oscimg.oschina.net/oscnet/up-2b1881fb593ade980a7bc0e1308304de93c.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">OpenAI 方面表示，其目標是支持健康的新聞生態系統、成為良好的合作伙伴、創造互利的機會；考慮到這一點，該公司一直在尋求與新聞機構建立合作伙伴關係。通過與美聯社、Axel Springer、American Journalism Project 和紐約大學的早期合作，他們已經對相關方法有了初步瞭解。</span></p><p><span style="color:#000000">該公司認為，一些已經普遍被接受的先例表明，使用公開可用的互聯網資料訓練 AI 模型是屬於合理使用範疇。「我們認為這一原則對創造者是公平的，對創新者是必要的，對美國的競爭力也是至關重要的。」</span></p><p><span style="color:#000000">而關於「反芻」問題，OpenAI 則解釋道，他們已經採取了措施來限制非故意記憶，並防止大模型輸出中的反芻現象。並指出，如果訓練數據來自單一來源（如《紐約時報》），則反芻的可能性較小；同時也敦促用戶"act responsibly"，避免故意促使其模型反芻。「故意操縱我們的模型進行反芻不是對我們技術的適當使用，也違反了我們的使用條款」。「反芻」是指特定內容在大模型的訓練數據中多次出現的一種現象。</span></p><p><span style="color:#000000">OpenAI 透露與《紐約時報》的最後一次溝通是在 2023 年 12 月 19 日，「我們與《紐約時報》的討論似乎取得了建設性進展......我們向《紐約時報》解釋説，與任何單一來源一樣，他們的內容對我們現有模型的訓練沒有任何有意義的貢獻，也不會對未來的訓練產生足夠的影響。但他們於 12 月 27 日提起了訴訟 —— 我們是也通過《紐約時報》才瞭解到的 —— 這令我們感到驚訝和失望。」</span></p><p><span style="color:#000000">值得一提的是，OpenAI 稱《紐約時報》在雙方的溝通過程中已經發現了一些內容的反芻，但卻在 OpenAI 承諾調查和解決任何問題的前提下，一再拒絕分享任何示例。</span></p><blockquote><p><span style="color:#000000">有趣的是，《紐約時報》<span style="background-color:#f8f9f9">提到的反芻</span>似乎來自於多個第三方網站上大量傳播的多年前的文章。為了讓我們的模型進行反芻，他們似乎有意篡改了提示語，通常包括冗長的文章節選。即使在使用此類提示時，我們的模型通常也不會像《紐約時報》影射的那樣，這表明他們要麼是指示模型進行反芻，要麼是從眾多嘗試中精心挑選了一些示例。</span></p><p><span style="color:#000000">儘管他們聲稱，這種誤用並非典型或允許的用戶行為，也不能替代《紐約時報》。但無論如何，我們都在不斷提高系統的抗逆向攻擊能力，以避免訓練數據被反芻，並在最近的模型中取得了很大進展。</span></p></blockquote><p><span style="color:#000000">在聲明的最後，OpenAI 表示，儘管他們<span style="background-color:#ffffff">認為《紐約時報》的訴訟毫無根據；但仍然對《紐約時報》保持尊重並希望與其建立建設性的合作伙伴關係。「我們期待與新聞機構繼續合作，通過實現 AI 的變革潛力，幫助他們提高生產高質量新聞的能力。」</span></span></p><p><span style="color:#000000">OpenAI 做出迴應之際，圍繞生成式 AI 的版權爭論正值白熱化。一些數據表明，公眾更傾向於站在媒體出版商這一方。The AI Policy Institute 最近的一項民意調查結果顯示，當得知《紐約時報》起訴 OpenAI 的詳情後，59% 的受訪者同意 AI 公司不應該被允許使用出版商的內容來訓練模型；70% 的受訪則表示，如果這些公司想在模型訓練中使用受版權保護的材料，就應該向出版商提供補償。</span></p><p><strong><span style="color:#000000">延伸閲讀：</span></strong></p><ul><li><a href="https://www.oschina.net/news/274326/openai-offers-publishers-little-1m" target="news">OpenAI 擬每年投入 100-500 萬美元，以獲取新聞使用許可</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 07:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274916/openai-and-journalism</guid>
            <link>https://www.oschina.net/news/274916/openai-and-journalism</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源神器 LSPosed 宣佈停更，作者稱遭受大量惡意攻擊]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Android 平台 Xposed Framework 的替代實現版本 LSPosed 宣佈停止維護，目前 LSPosed 的 GitHub 倉庫已經設置為只讀狀態。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">LSPosed 是一個 Magisk<span>&nbsp;</span><span><span><span>模塊，嘗試提供一個 ART hooking 框架，該框架提供與 OG Xposed 一致的 API，其利用 LSPlant hooking 框架。</span></span></span></p><p><img src="https://oscimg.oschina.net/oscnet/up-75beeed327a7d34771f31dd9958c3920723.png" referrerpolicy="no-referrer"></p><p><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLSPosed%2FLSPosed" target="_blank">https://github.com/LSPosed/LSPosed</a></em></u></p><p>對於停止開發的原因，開發者在其訂閲頻道中表示停止維護的主要原因是出現許多謠言、誹謗、種族主義和咒罵等。同時開發者也受到 Magisk 社區的一些咒罵，因此開發者決定休息，停止開發和維護。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c9dc6d212bdbe837a4322248a364756b5ff.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 03:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274877</guid>
            <link>https://www.oschina.net/news/274877</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[渠成開源社區 2023 年工作總結]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span>「道雖邇，不行不至；事雖小，不為不成。」2023 年，對渠成開源社區來説，是不平凡的一年，更是值得回味的一年。</span></p><p><span>這一年，我們從零搭建了渠成開源社區，確定了工作組成員；</span></p><p><span>這一年，我們鏈接了開源作者/開源社區，為他們提供了服務；</span></p><p><span>這一年，我們舉辦了多場活動，為更多用戶創建了彼此交流的機會；</span></p><p><span>……</span></p><p><span>回望 2023 年，渠成開源社區所經歷的驚喜與感動，都離不開社區中每位夥伴的陪伴和努力。我們不斷迭代、不斷創新，我們共同走過的每一個瞬間都值得紀念與慶賀。</span></p><p style="text-align:center"><span><strong>一、從 0 到 1 搭建社區</strong></span></p><p><strong><em>1&nbsp;</em>成立社區工作組</strong></p><p><span>2023 年 4 月，我們確定了<strong>渠成開源社區的工作組團隊</strong>，包括顧問專家、市場運營、產品規劃、網站開發、設計以及財務幾大角色。期間完善了社區相關運營機制，包括不限於確定社區 23 年的目標、完善社區的媒體賬號、確定社區對外信息公開機制等。</span></p><p><span>社區的對外信息公開機制，真正讓社區內每一次的會議、每一筆的支出都做到有跡可尋。在官網的「<strong>財務公開</strong>」版塊，現已公開了 2021 年 11 月-2023 年 11 月渠成開源社區的現金流水賬。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>2023 年，工作組共開展了<strong>13 場</strong>的會議，工作組成員在會上提出各項社區成員關注的問題，共同探討以提供相應的解決方案。往期會議詳情可在渠成開源社區官網查看：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qucheng.cc%2Fmeetings.html" target="_blank" rel="nofollow"><span>https://www.qucheng.cc/meetings.html</span></a></p><p><strong><em>2&nbsp;</em></strong><span><strong>搭建官方媒體矩陣</strong></span></p><p><span>2023 年 4 月，我們上線了<strong>渠成開源社區官網</strong>（</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qucheng.cc%2F" target="_blank" rel="nofollow"><span>https://www.qucheng.cc/</span></a><span>）</span><span>，詳細介紹了社區的定位、章程、會員入駐機制和會員權益等。同時，為了方便大家從多渠道、多途徑瞭解開源項目，我們還開通渠成開源社區的微信公眾號、視頻號、Bilibili、開源中國、知乎號、GitHub 等社媒賬號。</span></p><ul><li><p><span>微信公眾號：</span><strong>渠成開源社區</strong></p></li><li><p><span>視頻號、Bilibili、開源中國、知乎號：渠成開源社區</span></p></li><li><p><span>GitHub：</span><span>@QuCheng-OpenSource</span></p></li></ul><p style="margin-left:0px; margin-right:0px; text-align:center"><span><span><strong>二</strong><strong>、</strong></span><strong>鏈接開源生態中的各種角色</strong></span></p><p><strong><em>1&nbsp;</em></strong><span><strong>鏈接開源作者/開源社區</strong></span></p><ul><li><p><strong><span>持續邀請開源項目入駐社區</span></strong></p></li></ul><p><span>我們歡迎更多的開源項目可以入駐渠成開源社區，社區會為會員項目<strong>提供項目運營、周邊設計、贊助招募、法律諮詢以及商業化諮詢等多項服務。</strong></span></p><p><span>截至目前，已有<strong>39 個項目</strong>入駐渠成開源社區，成為了渠成開源社區的會員項目。會員項目可享受入駐渠成 Demo 中心的權益，讓所有人都能在線體驗會員項目的 Demo，輕鬆實現高可用。同時，渠成開源社區所接受的捐贈與贊助會根據捐贈方或贊助方的意願使用該資金，用於鼓勵、支持社區會員的開源項目。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="383" src="https://oscimg.oschina.net/oscnet/up-0a2fc114545f42267ae6fc4321861ef99e5.jpg" width="600" referrerpolicy="no-referrer"></p><ul><li><p><strong><span>持續設計開源周邊產品</span></strong></p></li></ul><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>為幫助各個開源項目提高知名度，同時讓更多開源軟件的粉絲獲取相關周邊產品，我們與國內外數十個開源項目聯絡，獲取各大開源項目的授權，使用其 Logo 設計出精美的周邊 T 恤。我們已將 T 恤設計稿開源至 GitHub，供大家下載與使用：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FQuCheng-OpenSource%2FT-shirt" target="_blank" rel="nofollow"><span>GitHub - QuCheng-OpenSource/T-shirt</span></a></p><ul><li><p><strong><span>打造社區禮品體系</span></strong></p></li></ul><p><span>渠成開源社區官網的「<strong>開源周邊</strong>」板塊已上架了我們為各開源項目設計的周邊 T 恤，用戶可以直接在線下單購買。周邊產品的所有銷售利潤，均會公開透明地用於到社區發展中。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="237" src="https://oscimg.oschina.net/oscnet/up-f3b16af9cf4e22ea243581eeac04c5bd5f0.jpg" width="600" referrerpolicy="no-referrer"></p><ul><li><p><strong><span>持續上線官網新版塊</span></strong></p></li></ul><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>2023 年，根據用戶反饋和日常討論，<strong>我們在官網上線了開源動態和社區活動兩個板塊。</strong>用戶可以在官網的「開源動態」板塊進行在線投稿。同時，社區公眾號邀請了眾多優秀開源作者開放白名單，以幫助轉發推廣文章與活動。</span></p><p><strong><em>2&nbsp;</em></strong><span><strong>傳遞社區價值主張</strong></span></p><ul><li><p><span><strong>發起「源來是你」系列欄目</strong></span></p></li></ul><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>本着為更多開源相關的用戶提供更好的服務原則，切實幫助每一個開源軟件實現商業化。我們蒐集了大家關心的各類問題。分別在北京、上海兩地分別<strong>舉辦了</strong><strong>2 場專場沙龍活動，開展了 4 期線上直播，涵蓋了商業溝通、產品定價、法律風險規避等多個主題。線上線下共參與人數達 1218 人。</strong></span></p><ul><li><p><strong><span>出品《開源商業化白皮書》</span></strong></p></li></ul><p><span>開源軟件發揮着越來越重要的作用，但國內沒有建立起一個開源軟件商業化的生態體系。為此，渠成開源社區組織撰寫了白皮書，<strong>探討了國內開源現狀、常見的開源商業模式、如何做開源商業化等多個方面</strong>，希望為開源軟件作者、貢獻者以及創業者提供了實際的商業化落地建議。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="385" src="https://oscimg.oschina.net/oscnet/up-376a4a0355e49acb1a584a0eac177637db7.jpg" width="600" referrerpolicy="no-referrer"></p><ul><li><p><strong><span>多次參與國內各項大會活動</span></strong></p></li></ul><p style="text-align:center"><img alt="" height="450" src="https://oscimg.oschina.net/oscnet/up-d2ba2578656efd103183dbb7237b299f6a6.jpg" width="600" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>渠成開源社區積極投入到國內的開源佈道，陸續參加了 2023 上海人工智能大會開源集市、開源社 2023 開源年會、DevOps 社區廣州峯會等活動，以傳遞社區的價值主張。<strong>為了能夠與眾多開源社區保持友好聯繫，我們創建了社區合作伙伴羣，持續分享有價值的開源信息，積極促成合作，共同推動開源事業的發展。</strong></span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><span><strong>三</strong></span><span><strong>、</strong></span><strong>歡迎入駐社區</strong></p><p><span>如果您正在經營一個開源項目，如果您有開源商業化的訴求，<strong>歡迎攜項目入駐渠成開源社區</strong></span><span>：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qucheng.cc%2Fproject.html" target="_blank" rel="nofollow"><strong><span>開源項目—項目入駐</span></strong></a><span>。審核通過後，我們將拉您進入項目作者羣。在這裏，您可以與各位開源創業者共同交流、共同成長。</span></p><p style="text-align:center"><strong>歡迎掃碼查看官網</strong></p><p style="text-align:center"><img alt="" height="300" src="https://oscimg.oschina.net/oscnet/up-ce97b5277dc03f6cb550c89d44660add1b3.png" width="300" referrerpolicy="no-referrer"></p><p><span>很多時候，我們會被星辰大海的征途所鼓動，進而熱血沸騰。可實際上，所有的大事都要從小事做起，從細節着手。渠成開源社區，一直秉承的就是這樣的態度，踏踏實實為中國開源軟件事業做貢獻。正因如此，渠成開源社區在 2023 年的努力得到了國內知名開源技術社區開源中國（OSCHINA）的肯定，榮獲 OSCHINA 2023 年度 「<strong>優秀開源技術團隊</strong>」榮譽稱號。</span></p><p><span>征途漫漫從頭越，奮楫揚帆向未來。2024 年，渠成開源社區將服務更多的開發者，幫助大家解決實實在在的問題。<strong>我們期待有更多的開源項目加入社區，也期待與各開源開發者一起攜手打造適閤中國國情的開源軟件生態。</strong>&nbsp;</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 09 Jan 2024 03:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6928219/blog/10712985</guid>
            <link>https://my.oschina.net/u/6928219/blog/10712985</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
    </channel>
</rss>
