<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 15 Mar 2024 15:38:11 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[禪道 20.0.beta2 發佈啦，修復 Bug，提升系統穩定性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>大家好，禪道<strong>20.0.beta2</strong>發佈啦，本次發佈修復了若干 Bug，提升了系統的穩定性。</p><p><strong>注意：該版本為 beta 版本，不建議用於生產環境，歡迎大家下載試用。</strong></p><p><strong>禪道 20 版本對代碼進行了大規模重構</strong>，從框架層到業務代碼都進行了大幅改進。禪道作為開源軟件，重構後二次開發更加友好且易於維護，也帶來了<strong>更好的產品性能和更強的安全性</strong>。20 版本主要的重構工作包括：<strong>新的 UI 庫</strong>，禪道 20 版本使用自主開發的 ZUI3 前端框架，無論是交互體驗和開發效率都有質的飛躍；<strong>全新的 ZIN 頁面開發模式</strong>，通過配置的方式按需調用前端組件，實現了頁面的快速開發，大幅提升了開發效率，全新的擴展機制，更方便對頁面進行修改定製；<strong>引入 PHP 的強類型檢查</strong>，大幅減少系統模塊間調用過程中潛在 Bug 的產生；<strong>單元測試用例覆蓋 Model 層的所有 3000+方法</strong>，代碼更健壯；<strong>增加大量註釋，代碼更易讀、</strong>功能描述更清晰； 業務模塊在 MVC 的基礎上增加 zen/tao 兩個層次，<strong>優化了代碼的封裝和組織。</strong></p><p><span style="color:#333333"><strong>禪道本次發佈數據如下：</strong></span></p><h2><strong>下載鏈接</strong></h2><table><tbody><tr><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><span>Windows 一鍵安裝包</span></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-zbox.win64.exe" target="_blank"><span><span>64 位</span></span></a></td></tr><tr><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><p><span>Linux 一鍵安裝包</span></p></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-zbox_amd64.tar.gz" target="_blank"><span>amd64 位</span></a><span>&nbsp;</span><br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-zbox_arm64.tar.gz" target="_blank"><span>arm64 位</span></a></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd; vertical-align:middle"><span style="color:#e53333">注：Linux 一鍵安裝包必須直接解壓到 /opt 目錄下。</span></td></tr><tr><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><span>安裝包下載（tar.xz）： 可以通過 tar 命令或者解壓工具解壓</span></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-php7.0.tar.xz" target="_blank"><span>php7.0</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-php7.1.tar.xz" target="_blank"><span>php7.1</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-php7.2_7.4.tar.xz" target="_blank"><span>php7.2_7.4</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-php8.1.tar.xz" target="_blank"><span>php8.1</span></a></td></tr><tr><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><span>安裝包下載（zip）</span></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-php7.0.zip" target="_blank"><span>php7.0</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-php7.1.zip" target="_blank"><span>php7.1</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-php7.2_7.4.zip" target="_blank"><span>php7.2_7.4</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-php8.1.zip" target="_blank"><span>php8.1</span></a></td></tr><tr><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><span>DEB 包下載：可以通過 dpkg 包管理器在 Ubuntu 和 Debian 系統下安裝</span></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS_20.0.beta2-php7.0-1_all.deb" target="_blank"><span>php7.0</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS_20.0.beta2-php7.1-1_all.deb" target="_blank"><span>php7.1</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS_20.0.beta2-php7.2_7.4-1_all.deb" target="_blank"><span>php7.2_7.4</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS_20.0.beta2-php8.1-1_all.deb" target="_blank"><span>php8.1</span></a></td></tr><tr><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><span>RPM 包下載：可以通過 rpm 包管理器在 Centos 系統下安裝</span></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-php7.0-1.noarch.rpm" target="_blank"><span>php7.0</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-php7.1-1.noarch.rpm" target="_blank"><span>php7.1</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-php7.2_7.4-1.noarch.rpm" target="_blank"><span>php7.2_7.4</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentao%2F20.0.beta2%2FZenTaoPMS-20.0.beta2-php8.1-1.noarch.rpm" target="_blank"><span>php8.1</span></a></td></tr><tr><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd; vertical-align:middle"><span>最新版禪道客戶端下載鏈接</span></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><span>Windows</span></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.0%2Fzentaoclient.win64.setup.exe" target="_blank"><span>安裝包</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.0%2Fzentaoclient.win64.zip" target="_blank"><span>壓縮包</span></a></td></tr><tr><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><span>Linux</span></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.0%2Fzentaoclient.linux64.deb" target="_blank"><span>安裝包</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.0%2Fzentaoclient.linux64.tar.gz" target="_blank"><span>壓縮包 (.tar.gz)</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.0%2Fzentaoclient.linux64.zip" target="_blank"><span>壓縮包 (.zip)</span></a></td></tr><tr><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><span>macOS</span></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.0%2Fzentaoclient.mac.dmg" target="_blank"><span>安裝包 (Intel)</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fzentaoclient%2F8.0%2Fzentaoclient.mac.m1.dmg" target="_blank"><span>安裝包 (Apple Silicon)</span></a></td></tr><tr></tr><tr></tr><tr><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><span>最新版禪道客戶端服務器下載鏈接</span></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fxuanxuan%2F8.0%2Fxxd.8.0.win64.zip" target="_blank"><span>Windows</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fxuanxuan%2F8.0%2Fxxd.8.0.linux.x64.tar.gz" target="_blank"><span>Linux</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fxuanxuan%2F8.0%2Fxxd.8.0.mac.tar.gz" target="_blank"><span>macOS</span></a></td></tr><tr><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><span>禪道 Gogs 安裝包下載鏈接</span></td><td style="border-image:initial; border-left:1px solid #dddddd; border-right:1px solid #dddddd; border-top:1px solid #dddddd"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fgogs%2F0.12%2Fgogs_darwin_amd64" target="_blank"><span>macOS amd64</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fgogs%2F0.12%2Fgogs_linux_amd64" target="_blank"><span>Linux amd64</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fgogs%2F0.12%2Fgogs_windows_amd64.exe" target="_blank"><span>Windows amd64</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fgogs%2F0.12%2Fgogs_darwin_arm64" target="_blank"><span>macOS arm64</span></a><span>&nbsp; &nbsp;&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdl.cnezsoft.com%2Fgogs%2F0.12%2Fgogs_linux_arm64" target="_blank"><span>Linux arm64</span></a></td></tr></tbody></table><h4><strong>Docker 鏡像:</strong><span style="color:#337fe5">&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhub.docker.com%2Fr%2Feasysoft%2Fzentao%2Ftags" target="_blank"><span style="color:#337fe5">點擊這裏</span></a></h4><h2><strong>幫助手冊</strong></h2><p>安裝文檔：<span style="color:#337fe5">https://www.zentao.net/book/zentaopms/455.html</span></p><p>升級文檔：<span style="color:#337fe5">https://www.zentao.net/book/zentaopms/460.html</span></p><p>&nbsp;</p><p><strong>持續優化，定期更新，禪道一直在路上。</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Mar 2024 14:41:22 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283264/zentao-20-0-beta2-released</guid>
            <link>https://www.oschina.net/news/283264/zentao-20-0-beta2-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[離職後可以刪除自己所編寫的軟件嗎？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">一名開發者近日在 StackExchange 問答社區的「法律」板塊發佈了一個<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flaw.stackexchange.com%2Fquestions%2F101283%2Fdeleting-software-i-wrote-upon-leaving-employment-of-a-company" target="_blank">求助帖</a>，諮詢「如果在從公司離職時，刪除了自己所編寫的軟件」是否要承擔相關的責任。</span></p><p><span style="color:#000000">根據這名開發者的表述，他現在住在美國，屬於自由職業者，不存在僱傭合同關係。但他年輕的時候，曾在一家倉庫以小時工的身份從事與庫存相關的工作。彼時，為了讓自己的工作更輕鬆，他編寫了一款可將大量的手工操作自動化的軟件。之後，與他同崗位的其他人也開始使用這一軟件來提升工作效率。</span></p><p><span style="color:#000000">但作為軟件作者的他基本屬於無償貢獻，公司從未給過他任何實際的回報或獎賞。時至今日，他也不再指望可以得到任何補償；不過卻萌生了一個想法：「如果我在離職時刪除了我的代碼，我會承擔責任嗎？」</span></p><p><img height="280" src="https://oscimg.oschina.net/oscnet/up-afef8f87a173dcede82e719d5c041831c0b.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">這一帖子在論壇引起了熱烈的討論，其中一個高贊回答對問題進行了分析，並言簡意賅的給出如下建議：</span></p><blockquote><p><span style="color:#000000">如果你是在工作時間（朝九晚五）寫的這個軟件，併為此獲得了報酬，那麼公司就擁有該軟件的所有權。即使他們不知道是你寫的。因此，刪除該軟件就是對公司財產的損害。</span></p><p><span style="color:#000000">如果軟件是你利用業餘時間編寫的，那麼在法律上就比較棘手了。你的工作性質會有不同。如果你沒有從中得到任何好處，我的建議是放棄該軟件。毀掉它只會給你帶來麻煩。</span></p></blockquote><p><span style="color:#000000">更多詳情<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flaw.stackexchange.com%2Fquestions%2F101283%2Fdeleting-software-i-wrote-upon-leaving-employment-of-a-company" target="_blank">可查看原貼</a>。&nbsp;</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Mar 2024 07:23:10 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283203/deleting-software-leaving-company</guid>
            <link>https://www.oschina.net/news/283203/deleting-software-leaving-company</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[阿里旗下 11 款應用啓動鴻蒙原生應用開發]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>3 月 14 日，阿里旗下多款應用與華為舉行鴻蒙合作簽約儀式，宣佈將基於 HarmonyOS NEXT 鴻蒙星河版，啓動閒魚、1688、飛豬、餓了麼、盒馬、菜鳥、點淘、淘寶特價版、大麥、淘票票、燈塔專業版共 11 款 App 的鴻蒙原生應用開發。</p><p><img height="250" src="https://oscimg.oschina.net/oscnet/up-79a1bd1023d178ca73674a0adce6feda9f3.png" width="500" referrerpolicy="no-referrer"></p><p>據瞭解，此前，釘釘、高德、淘寶、UC 瀏覽器、夸克等 app 應用已率先啓動鴻蒙原生應用的開發。此次合作，更是覆蓋電商、新零售、本地生活、旅遊服務、文化娛樂等多個領域，極大豐富了鴻蒙生態的應用版圖。雙方強強聯合，將滿足用戶在全場景下的多元化需求，為用戶提供更加流暢、智能、安全的服務體驗。</p><p>基於鴻蒙系統的生態，上述 11 款 app 應用能更好地實現跨設備、跨平台的數據共享和任務協同，提升用戶體驗，同時獲得更精準的服務分發。其次，鴻蒙系統中有元服務和原生應用等多種形態，在合適的時機為用戶提供服務，助力應用實現更高的用戶轉化率，更有效地吸引和留住用戶。值得一提的是，鴻蒙系統支持一次開發、多端部署，這意味着開發者只需要編寫一次代碼，就可以在多個終端設備上部署和運行應用，對於阿里集團這種擁有多個重要應用的公司來説，降低了開發成本和時間，提高開發效率。</p><p>據悉，鴻蒙生態已進入第二發展階段，如今，已有眾多來自各行各業的頭部夥伴啓動鴻蒙原生應用開發。未來，華為將與更多夥伴及開發者攜手，加速千行百業的應用鴻蒙化，共建鴻蒙花園。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Mar 2024 06:33:10 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283192</guid>
            <link>https://www.oschina.net/news/283192</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 出席 2024 玄鐵 RISC-V 生態大會 ，最新生態成果公佈！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><span>3 月 14 日，以「開放·連接」為主題的 2024</span><span style="color:var(--weui-LINK)">達摩院</span><span>「玄鐵 RISC-V 生態大會」在深圳精彩開幕。作為開年首場 RISC-V 產業國際化盛會，openKylin 社區受邀出席，與來自全球的多位產業專家、知名學者、企業決策者以及 RISC-V 社區開發者等產學研各界匯聚一堂，共同見證、參與並推動 RISC-V 生態的多元融合。</span></span></p><p><span style="color:#0052ff"><strong>openKylin 強「芯」助基，助力 RISC-V 生態建設發展</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">openKylin 社區生態委員會主任李震寧</span></strong></span><span style="color:#000000">受邀出席大會並做《openKylin 強「芯」助基，助力 RISC-V 生態建設發展》主題分享。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-67e03253c61c35c82a4f923605434ffdc7e.jpg" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000"><span>當前，RISC-V 的發展進入了高性能和軟硬件生態加速發展的新階段。openKylin 作為中國領先的</span><span style="color:var(--weui-LINK)">開源操作系統</span><span><span>根社區，自成立起，就十分關注並持續投入 RISC-V 架構生態建設，從源碼級別自主構建了 RISC-V 開源桌面操作系統版本，並已適配完成市場主流的 RISC-V 硬件平台。同時，與玄鐵、釘釘等軟硬件廠商開展深入合作，首次支撐實現了商用 IM（即時通訊）的順滑體驗。此外，社區研發團隊還基於 RISC-V</span><span style="color:var(--weui-LINK)">指令集</span><span><span>和 GPU 優化了 UKUI 桌面環境，提升用戶使用體驗，並通過適配 openKylin 自研軟件、上游</span><span style="color:var(--weui-LINK)">開源軟件</span><span>等常用軟件，滿足了用戶的基本使用需求。</span></span></span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="1243" src="https://oscimg.oschina.net/oscnet/up-3b910fb2918f4b7d00de8316e0f70881952.jpg" width="2211" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">在此基礎上，</span><strong><span style="color:#000000">基於玄鐵 C910 處理器+openKylin 操作系統的基礎平台，聯合福昕鯤鵬、上海韜略，於近期</span></strong><strong><span style="color:#000000">成功完成了</span></strong></span><span style="color:#000000"><strong><span><span>福昕</span><span style="color:var(--weui-LINK)">OFD</span><span>版式辦公套件軟件</span></span></strong><strong><span>和</span></strong><strong><span>搜狗輸入法</span></strong><strong><span>在 op</span></strong></span><span><strong><span style="color:#000000">enKylin RISC-V 版本上的遷移工作，這也是</span></strong></span><span style="color:#0052ff"><strong><span style="color:#0052ff">國際上</span></strong></span><span style="color:#0052ff"><strong><span>首次<span style="color:#0052ff"><strong><span>實現</span></strong></span>RISC-V 架構系統上辦公套件和輸入法的成功遷移</span></strong></span><span><strong><span style="color:#000000">，</span></strong></span><span style="color:#000000">其相關成果也將逐步合併到 openKylin 2.0 版本中。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p><span style="color:#0052ff"><strong>展示區：openKylin RISC-V 最新生態成果體驗</strong></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">在大會展區，<strong>openKylin 社區技術委員會委員王文竹博士</strong><strong>帶領 RV 版本團隊</strong>出席本次會議，為嘉賓和開發者介紹了 openKylin 在玄鐵系列產品上的最新進展，包括 openKylin 對玄鐵硬件產品的全面適配優化、openKylin 自研應用軟件、福昕 pdf 和搜狗輸入法商業軟件的最新移植成果等，以及 openKylin 對 RISC-V 開發者的支持，包括編程開發環境、AI 框架和基礎庫等，充分展示了 openKylin 社區在 RISC-V 生態發展中所取得的成績，<span style="color:#000000">獲得了現場參會者的高度關注和好評。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="1500" src="https://oscimg.oschina.net/oscnet/up-9ff8d56383f07d8e814b04fa8af7caa1f4b.jpg" width="2250" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000"><span style="color:#000000">眾多開發者和夥伴圍聚展台前諮詢互動，深入瞭解 openKylin 社區，交流開源技術，並申請</span><span style="color:#000000">簽署 CLA</span><span style="color:#000000">加入</span><span style="color:#000000">社區</span><span style="color:#000000">，</span><span style="color:#000000">暢享開源樂趣。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">開放連接促生態，技術交流共進步。未來，openKylin 社區將在 RISC-V 領域持續發力，打牢操作系統基座，聯合更多產、學、研、用夥伴，推動軟件發展技術創新，從可用到好用構築 RISC-V 架構新生態，為用戶及開發者創造全新體驗及價值。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Mar 2024 05:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283188</guid>
            <link>https://www.oschina.net/news/283188</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AMD 開源 HIP Ray-Tracing]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">AMD <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgpuopen.com%2Fhiprt%2F" target="_blank">宣佈</a>在 MIT 許可下正式開源 HIP Ray-Tracing (HIP RT)。HIP RT 是適用於 HIP 的光線跟蹤庫，可輕鬆在 HIP 中編寫光線跟蹤應用程序。其 API 和庫被設計得非常簡約，且易於使用並集成到任何現有的 HIP 應用程序中。</span></p><p><span style="color:#000000">目前，HIP RT 項目倉庫中只包含了一次 commit —— 即，將所有 HIP RT 2.3 源文件進行了上傳。而 GPUOpen 官網上現在顯示的最新版本是於去年 12 月份發佈的 HIP RT v2.2.0e68f54。</span></p><p><img height="252" src="https://oscimg.oschina.net/oscnet/up-495ab9ed99792b60558f96af11223340ea3.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><strong>要求</strong></span></p><p><span style="color:#000000">HIP RT 可在 AMD 和 NVIDIA GPU 上運行。HIP 和 CUDA API 是動態加載的，因此如果用戶在驅動程序軟件包中安裝了這些 dll，則無需安裝這些 SDK。硬件加速光線追蹤僅適用於 RDNA 2 GPU（Radeon RX 6000 系列或更新版本）。</span></p><p><span style="color:#000000">支持的 AMD GPU 架構系列包括：</span></p><ul><li><span style="color:#000000">Navi3x (Radeon RX 7000 系列)</span></li><li><span style="color:#000000">Navi2x (Radeon RX 6000 系列)</span></li><li><span style="color:#000000">Navi1x (Radeon RX 5000 系列)</span></li></ul><p><span style="color:#000000">此外，還需要 AMD 軟件： Windows 下需要 Adrenalin Edition 23.30 或更高版本，Linux 下需要 ROCm 5.7。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Mar 2024 05:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283187/amd-hip-ray-tracing</guid>
            <link>https://www.oschina.net/news/283187/amd-hip-ray-tracing</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[80 歲圖靈獎得主再度出山，打造基於數據庫的雲原生操作系統 DBOS]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>數據庫領域一共出了四位圖靈獎獲得者，按照先後順序分別是：</p><ol><li>開創數據庫品類的 Charles Bachman</li><li>發明數據庫關係模型的 Edgar F. Codd</li><li>實現第一個關係型數據庫系統 System R，引入 ACID 的 Jim Gray</li><li>以及本文的主人公 Michael Stonebraker，也是唯一健在的一位</li></ol><p>Stonebraker 教授之前在伯克利，現在在 MIT。他主要的貢獻來自於兩方面，一方面是在數據庫理論上，引入對象概念，如今知名的 PostgreSQL 數據庫的前身就是他發起的 Ingres 項目。Postgres 既是 Post-Ingres，後來加上了 SQL 層，才變成了今天的 PostgreSQL。另一方面是在工業界的實踐，教授是一名連續創業者。最早基於 Postgres 工作創立了 Illustra，賣給了當年的數據庫巨頭 Informix。後來又先後創立了 Vertica 以及 VoltDB。</p><p><img src="https://oscimg.oschina.net/oscnet/up-b5045fa7057d6a40319508573b8925b9496.png" alt="file" referrerpolicy="no-referrer"></p><p>本來以為教授該頤養天年了，沒想到以 80 歲高齡，再度出山。這次老爺子還跨界了，把手伸到了操作系統領域，要把操作系統建在數據庫上。通常的認知裏，數據庫是建在操作系統之上的，而教授則要乾坤反轉。大概是下面這個架構。</p><p><img src="https://oscimg.oschina.net/oscnet/up-42e08249dfc21af8b69346e4b5ef17e7b91.png" alt="file" referrerpolicy="no-referrer"></p><p>來是一張更加具體的圖。</p><p><img src="https://oscimg.oschina.net/oscnet/up-47524f2503a534fa17981498352e707952f.png" alt="file" referrerpolicy="no-referrer"></p><p>是不是還是有點抽象，那就看下面這個例子，來自 IBM 古早的 AS/400 大型機。是的，這個架構在很早的 IBM 大型機裏就有了。</p><p><img src="https://oscimg.oschina.net/oscnet/up-2cbddd7b80375d623c6e0dede7d0c9ad1c0.png" alt="file" referrerpolicy="no-referrer"></p><p>上面這張圖是文件目錄，PEOPLE 是一個文本文件。QCSRC 也是一個文本文件，不過是代碼文件。而 HELLOWORLD 則是通過 QCSRC 編譯出的程序。這個看上去和我們現在熟悉的文件目錄類似，但其實這是一張數據庫的表，為什麼這麼説，我們看下面這張圖。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f2c15421e30bf609b34c51add752e3dc7b1.png" alt="file" referrerpolicy="no-referrer"></p><p>我們打開了 QCSRC 的源代碼文件，展示了 Hello world 的 C 代碼。但是這個打開的方式，不是 open file.c。而<strong>用的是 SQL 語言 SELECT * FROM qcsrc</strong>。仔細看的話，這其實是一樣表，每一行就是表的數據行。</p><p><img src="https://oscimg.oschina.net/oscnet/up-79b626defb31117d9f38591d7e9fb5eaf82.png" alt="file" referrerpolicy="no-referrer"></p><p>因為是一張表，所以我們<strong>也可以用 SELECT * FROM qcsrc ORDER BY scrdta 打開</strong>，這時你會看到行重新排列了。</p><p>作為當年的臥龍鳳雛，IBM 之外，微軟也曾經動過這個念頭。微軟歷史上 WinXP 大獲成功，而之後發佈的 Vista 不僅大大延期，發佈後還差評一片。其實在 WinXP 和 Vista 之間還有一個被砍掉的操作系統，代號 longhorn。配合 longhorn 還準備開發一個叫做 WinFS (Windows Future Storage) 的全新存儲系統。</p><p><img src="https://oscimg.oschina.net/oscnet/up-25995587986a177fde062481aa3626c1520.png" alt="file" referrerpolicy="no-referrer"></p><p>WinFS 看名字就知道被寄託了很大的希望，它的願景來自於比爾蓋茨，要把 WinFS 構建在 SQL Server 上，讓 Windows 也能做類似於 AS/400 那樣的操作。當然隨着 longhorn 的破產，WinFS 項目也就嘎然而止了。</p><p>DBOS 故名思義，基於 DB 的 OS，就是把數據庫作為操作系統的底層，這樣操作系統就獲得了數據庫的特性。比如事務性。像下面這個例子是確保一個客戶下單流程的事務性，可以處理各種異常情況。</p><p><img src="https://oscimg.oschina.net/oscnet/up-349fac505d65c405dd86f3042e734d47142.png" alt="file" referrerpolicy="no-referrer"></p><p>本來在應用層要妥善處理這樣涉及多個外部系統的工作流，會非常複雜。也誕生了像 Temporal 這樣專門解決這個問題的獨角獸公司。</p><p><img src="https://oscimg.oschina.net/oscnet/up-356b8a52d36fec47290b059c124445d0343.png" alt="file" referrerpolicy="no-referrer"></p><p>除了給操作系統原生的數據庫能力之外，DBOS 的另一個目標是做一個雲原生的操作系統。現在的操作系統都是面向單機的，然後在應用層用 Kubernetes 把這些單機的操作系統糊在一起。如果我們把分佈式，調度直接做到操作系統裏的話，就不需要 Kubernetes 了。而分佈式，調度這些正是分佈式數據庫的拿手好戲。</p><p><img src="https://oscimg.oschina.net/oscnet/up-b06408811aa2cd9e69ae1b23d0944d300ad.png" alt="file" referrerpolicy="no-referrer"></p><p>DBOS 這個項目 2022 年就啓動了，發起者中也有國人。考慮到 Stonebraker 教授的年齡，這也可能是他生涯最後一戰。教授乃是性情中人，當年 NoSQL 風頭正勁，大有要滅了關係型數據庫的勢頭。教授實在看不下去，下場寫了篇 what goes around comes around (因果報應)，給大家好好上了堂數據庫歷史課。</p><p><img src="https://oscimg.oschina.net/oscnet/up-1e998e9061635fdadceb3fcc6d6fe90022e.png" alt="file" referrerpolicy="no-referrer"></p><p>這次 DBOS 的願景和商業落地難度還要遠超教授之前的 Vertica 和 VoltDB。但作為數據庫領域當世第一戰神，幹就是了！</p><p><img src="" alt="Uploading file..." referrerpolicy="no-referrer"></p><hr><p>💡 更多資訊，請關注 Bytebase 公號：Bytebase</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Mar 2024 05:48:07 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/11047444</guid>
            <link>https://my.oschina.net/u/6148470/blog/11047444</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源日報 | 英特爾獲準繼續向華為出售芯片；明年 AI 將比任何人都聰明]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。</p><h3 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#e67e22"><strong># 2024.3.14</strong></span></h3><h2 style="margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#16a085">今日要點</span></strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>OpenSource Daily</strong></p><h3 style="margin-left:0; margin-right:0; text-align:left"><strong><a href="https://www.oschina.net/news/283003/ktor-roadmap-for-2024" target="_blank">JetBrains 公佈 Ktor 2024 路線圖</a></strong></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">JetBrains 公佈了 Ktor 的 0224 年開發路線圖。項目團隊將致力於在每個新版本中提高所提供功能的質量和性能，同時擴展 Ktor 插件生態系統。此舉將涉及引入新插件來簡化現有用例（例如事務處理）並添加對新用例（例如 Observability 和 gRPC）的支持。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">在改進核心產品的同時，還將為用戶提供更輕鬆的開發體驗。使插件生態系統更易於使用，並消除社區貢獻的障礙。以及致力於提高所提供文檔的範圍、質量和多樣性。並利用 Kotlin Multiplatform (KMP) 的穩定性和不斷髮展的多平台庫生態系統，讓 Ktor 開發人員能夠享受到 KMP 的優勢，創建多平台應用程序。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="281" src="https://oscimg.oschina.net/oscnet/up-085d99ec88e786fe7765205a2d60852b18c.png" width="500" referrerpolicy="no-referrer"></p><h3 style="margin-left:0px; margin-right:0px; text-align:start"><strong><a href="https://www.oschina.net/news/283043/linux-6-9-bcachefs-attempt" target="_blank">Linus Torvalds 不滿 Linux 6.9 中的一些 Bcachefs 代碼</a></strong></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Linus Torvalds 在，回 應，相 關 PR 時，表 示 ： 「 我，看 了，看 'make randombcachefs codebealibrary function' 的內容，覺得毫無意義，最終決定在沒有進一步解釋的情況下我不會使用它（老實説，我不認為這些解釋站得住腳）。」</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#000000">並直言 "stdio_redirect_printf ()" 和 darray_char 都很 「噁心」。建議 Overstreet 將其保留在自己的代碼中就好，不要試圖提交上來。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="318" src="https://oscimg.oschina.net/oscnet/up-87349de7cf38ec24e77d98c8c7165c68d31.png" width="500" referrerpolicy="no-referrer"></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#16a085">今日觀察</span></strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="129" src="https://oscimg.oschina.net/oscnet/up-951630ba9bded13190b3230241a09bf8d1e.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">- 微博 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F7327831653%2FO4XqOeiT7%3Frefer_flag%3D1001030103_" target="_blank"><em><u>呆哥説數碼</u></em></a></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="117" src="https://oscimg.oschina.net/oscnet/up-36f67e3ac79e16d93e738e920b56bfcb229.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">-<span>&nbsp;</span></span><u><em>I</em></u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fai.it168.com%2Fa2024%2F0314%2F6842%2F000006842281.shtml" target="_blank"><u><em>T168</em></u></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="117" src="https://oscimg.oschina.net/oscnet/up-3bd84c97f3cb00eeb0401a9c71f714049bd.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">-&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.cn%2Ftech%2F2024-03-14%2Fdetail-inanfxxv9807142.d.html%3Ffromtech%3D1" target="_blank"><em><u>快科技</u></em></a></span></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#16a085"><strong>今日推薦</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="405" src="https://oscimg.oschina.net/oscnet/up-76f71686b627fed56c16a9ad502002fda05.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fdevicescript" target="_blank">https://github.com/microsoft/devicescript</a></u></em></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#16a085"><strong>事件點評</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="520" src="https://oscimg.oschina.net/oscnet/up-3ca34c464e1495c52cf676a4e263bee9b05.png" width="500" referrerpolicy="no-referrer"></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#16a085"><strong>每日項目榜</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="background-color:#e67e22">每日 GitHub 精選</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="649" src="https://oscimg.oschina.net/oscnet/up-a8ef0d6a166332894be59186a1274bcba18.png" width="500" referrerpolicy="no-referrer"></p><blockquote><h4 style="margin-left:0; margin-right:0"><strong><span style="background-color:#e67e22">在線閲讀完整日報內容，訪問：</span></strong><br><em><u><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/71npja41p7l4ojy/29_risc_v_ai_smart_B3RnKR88Kl.pdf" target="_blank">開源日報第 029 期：英特爾獲準繼續向華為出售芯片；明年 AI 將比任何人都聰明</a></u></em></h4></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>往期回顧</strong></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/q35lx4s6qq9ls4r/28_cognition_labs_devin_Epbxne3xzN.pdf" target="_blank">開源日報第 028 期：全球首位 AI 軟件工程師 Devin；谷歌承認 「竊取」 OpenAI 模型關鍵信息</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/hh291xp9mxksc9i/27_ai_google_50_gpt_4_KfagjDXXfZ.pdf" target="_blank">開源日報第 027 期：AI 接連翻車的 Google 要變天了；互聯網大廠 50 款大模型及應用，能否全面超越 GPT-4？</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/uwsizmmsnhq8zdk/26_git_hub_22_web_os_22_vue_rolldown_FpVykoR7rJ.pdf" target="_blank">開源日報第 026 期：大模型替代程序員根本就是一個偽命題；GitHub 頂流 "Web OS"</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6ho57sxydzsh9jh/25_ai_5_ax1LWz5GP5.pdf" target="_blank">開源日報第 025 期：買手機送大模型；「釣魚式維權」 須遏制；「AI 原生」 騙局江湖</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/7xd6teyhekcvamw/24_risc_v_x86_arm_5LsjoStPUn.pdf" target="_blank">開源日報第 024 期：RISC-V 能否和 x86、Arm 一起成為三大主流架構；給閻王開發地府管理系統</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/svxac61bjmbmmw5/23_google_microsoft_cM5zZacKru.pdf" target="_blank">開源日報第 023 期：Google = 開源，好評；Microsoft = 閉源收入還低，差評</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/3vmzfjvp7mpvv26/22_sora_cuda_Syy7OJyUvc.pdf" target="_blank">開源日報第 022 期：輕鬆復現 Sora 模型；事關 CUDA 兼容，英偉達禁止了；百度還差一個 「遙遙領先」</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/z3rhs3qkyeqwoax/21_open_ai_JROaEZat3b.pdf" target="_blank">開源日報第 021 期：閉源模型就是比開源安全；起訴 OpenAI 不能更贊同</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/lv84pwvd03it00i/20_open_ai_pingora_yaml_mE5RuB20Vl.pdf" target="_blank">開源日報第 020 期：為什麼王炸都來自 OpenAI；Pingora 最好不要用 YAML 當配置文件</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/mx86z1dhywrw71p/19_ai_c_llm_IgpNOVZtCz.pdf" target="_blank">開源日報第 019 期：我讓 AI 用 C 語言寫一個算法；微軟三進制 LLM</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/qdljicvqiqsshd6/187ZiLwG48lc_CngfQJ1Qxs.pdf" target="_blank">開源日報第 018 期：蘋果十年造車夢碎；這個開源項目有點...「大膽」</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/7r8dkz3232v4e7a/17_maria_db_v_linux_GoyNoM85IZ.pdf">開源日報第 017 期：MariaDB 消亡史；寫代碼我有三不沾；V 神建議馬斯克用 Linux</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6typ9w3u98f5mxn/16_1_8_2efTeNfFjN.pdf">開源日報第 016 期：鴻蒙程序員平均月薪超 1 萬 8；中美 AI 差距有多大？</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/92n4c9ryegpcq1z/015_sora_KcAkRNX93Y.pdf">開源日報第 015 期：為什麼擋不住英偉達；Sora 不靠蠻力</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/s7n800w84o6guyv/014_kyezhNxOGD.pdf">開源日報第 014 期：目前的人工智能技術連貓的智能水平都沒達到</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC013%E6%9C%9F%EF%BC%9A%E7%AD%89%E5%88%B0%20Sora%20%E5%BC%80%E6%BA%90%E4%BA%86%E7%AB%8B%E5%88%BB%E6%8E%A8%E5%87%BA%E5%B1%9E%E4%BA%8E%E6%88%91%E4%BB%AC%E8%87%AA%E5%B7%B1%E7%9A%84%E5%A4%A7%E6%A8%A1%E5%9E%8B.pdf">開源日報第 013 期：等到 Sora 開源了立刻推出屬於我們自己的大模型</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC012%E6%9C%9F%EF%BC%9ASora%20%E7%BB%99%E4%B8%AD%E5%9B%BD%20AI%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9C%9F%E5%AE%9E%E5%8F%98%E5%8C%96%EF%BC%9BDart%203.3%20%E5%8F%91%E5%B8%83.pdf">開源日報第 012 期：Sora 給中國 AI 帶來的真實變化；Dart 3.3 發佈</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC11%E6%9C%9F%EF%BC%9A%E7%9B%AE%E5%89%8D%E8%BF%98%E6%B2%A1%E6%9C%89%E2%80%9C%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%89%88Linux%E2%80%9D.pdf">開源日報第 011 期：目前還沒有 「大模型版 Linux」</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC010%E6%9C%9F%EF%BC%9ATauri%20v2%20%E6%94%AF%E6%8C%81%20Android%20%E5%92%8C%20iOS%EF%BC%8C%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%96%B0%E9%80%89%E6%8B%A9.pdf">開源日報第 010 期：Tauri v2 支持 Android 和 iOS，跨平台開發新選擇</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5009%E6%9C%9F%EF%BC%9AVue.js%E8%AF%9E%E7%94%9F10%E5%91%A8%E5%B9%B4%EF%BC%9B%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC%E8%A7%A3%E9%87%8AMeta%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E6%BA%90%E5%85%B6AI%E6%8A%80%E6%9C%AF.pdf">開源日報第 009 期：Vue.js 誕生 10 週年；扎克伯格解釋 Meta 為什麼要開源其 AI 技術</a></li><li><a href="https://www.oschina.net/news/277585">開源日報第 008 期：推動中國開源軟硬件發展的經驗與建議</a></li><li><a href="https://www.oschina.net/news/277415">開源日報第 007 期：「Linux 中國」 開源社區宣佈停止運營</a></li><li><a href="https://www.oschina.net/news/277214">開源日報第 006 期：選擇技術棧一定要選擇開源的</a></li><li><a href="http://www.oschina.net/news/277040">開源日報第 005 期：RISC-V 萬兆開源交換機發售；npm 存在大量武林外傳視頻</a></li><li><a href="https://www.oschina.net/news/276864">開源日報第 004 期：百度輸入法在候選詞區域植入廣告；大神用 Excel 構建 CPU</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Mar 2024 03:22:50 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283165</guid>
            <link>https://www.oschina.net/news/283165</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2024 年人工智能安全報告 —— AI 技術是把雙刃劍]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#060607">奇安信近期發佈了《2024 年人工智能安全報告》，主要探討了人工智能（AI）技術在惡意活動中的應用，以及這些應用對網絡安全、物理安全、政治安全和軍事安全等方面的潛在威脅。</span></p><p><span style="background-color:#ffffff; color:#060607"><img alt="" height="396" src="https://static.oschina.net/uploads/space/2024/0315/104716_Of71_4700705.png" width="300" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:#060607">以下是報告的核心內容概要：</span></p><h3 style="text-align:start">1. AI 的定義和科技變革</h3><ul><li>AI 技術被定義為能夠執行智能任務的計算機系統，包括學習、推理、感知等能力。</li><li>AI 技術的發展帶來了效率提升、決策支持、新服務和產品創造、解決複雜問題和提升生活質量等多方面的變革。</li><li>AI 技術的應用範圍廣泛，從自動駕駛汽車到智能助手，再到醫療診斷和金融預測等。</li></ul><h3 style="text-align:start">2. AI 濫用風險</h3><ul><li>AI 技術的惡意使用可能導致政治安全、網絡安全、物理安全和軍事安全等方面的威脅。</li><li>報告顯示，基於 AI 的深度偽造和釣魚郵件數量急劇增長，國家背景的 APT 組織利用 AI 實施網絡攻擊。</li><li>AI 武器化趨勢顯現，可能導致道德和法律問題，如責任歸屬和國際人道法的遵守。</li></ul><h3 style="text-align:start">3. AI 普及引入的威脅</h3><ul><li><strong>深度偽造</strong>：利用 AI 合成圖像、音頻和視頻，用於虛假新聞、操縱輿論等。</li><li><strong>黑產大語言模型基礎設施</strong>：如 WormGPT 和 FraudGPT，用於網絡釣魚、惡意軟件製作等。</li><li><strong>自動化攻擊</strong>：AI 幫助攻擊者發現漏洞、定製攻擊和繞過安全措施。</li><li><strong>AI 武器化</strong>：AI 增強自主武器系統，可能在無人控制下攻擊目標。</li><li><strong>LLM 安全風險</strong>：大語言模型可能存在提示注入、數據泄漏等安全風險。</li><li><strong>惡意軟件</strong>：AI 增強的惡意軟件更難被檢測，更具破壞力。</li><li><strong>釣魚郵件</strong>：AI 技術提高釣魚郵件的真實性和針對性。</li><li><strong>口令爆破</strong>：AI 技術提高口令爆破的效率和成功率。</li><li><strong>驗證碼破解</strong>：AI 技術用於識別和解析驗證碼，繞過安全機制。</li><li><strong>社會工程學技術支持</strong>：AI 用於語音克隆、文本生成，提高社會工程攻擊的成功率。</li><li><strong>虛假內容和活動的生成</strong>：AI 生成虛假新聞、社交媒體帖子，用於輿論操控。</li><li><strong>硬件傳感器相關威脅</strong>：針對自動駕駛車輛的傳感器進行攻擊，可能導致安全事故。</li></ul><h3 style="text-align:start">4. 當前狀況總結</h3><ul><li>惡意行為者正在利用 AI 技術加強攻擊策略，提高攻擊成功率。</li><li>AI 技術推動了安全範式的變革，需要啓動人工智能網絡防禦推進計劃。</li></ul><h3 style="text-align:start">5. 應對措施建議</h3><ul><li><strong>安全行業</strong>：提升 AI 安全性，開發安全工具，監測 AI 惡意使用案例。</li><li><strong>監管機構</strong>：建立溝通平台，探索開放模式，創建和推廣安全制度。</li><li><strong>政企機構</strong>：部署 AI 安全框架和解決方案，教育和培訓員工，推動安全技術創新。</li><li><strong>網絡用戶</strong>：保持警惕，強化密碼管理，啓用雙因素認證，保持軟件更新，安裝安全軟件，備份數據，加密通信，保護個人隱私，定期培訓。</li></ul><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">報告強調了 AI 技術的雙刃劍特性，以及對 AI 技術濫用的監管和治理的重要性。同時，提出了多方面的建議，以應對 AI 技術可能帶來的安全挑戰。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">報告詳情可至<strong><span style="color:#333333"><span style="background-color:#f39c12">「開源中國 APP - 報告模塊」</span></span></strong>查看。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">APP 下載地址：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="300" src="https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png" width="300" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>（<em>目前僅提供 Android 版本）</em></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Mar 2024 02:47:50 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283161</guid>
            <link>https://www.oschina.net/news/283161</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Intel 6.2GHz 限量旗艦 i9-14900KS 正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Intel 正式發佈了酷睿 14 代家族的頂級限量版本，酷睿 i9-14900KS，國行定價 6299 元。它在歷史上第一次將 PC 處理器的加速頻率做到了驚人的 6.2GHz，比上代限量版 i9-13900KS 又高出 200MHz。</p><p><img height="281" src="https://oscimg.oschina.net/oscnet/up-31771afaf5580581d60e2cfd9446465afea.png" width="500" referrerpolicy="no-referrer"></p><p><img height="272" src="https://oscimg.oschina.net/oscnet/up-3349dddd8640fa732924019627a31b6f3c8.png" width="500" referrerpolicy="no-referrer"></p><p><img alt="" height="269" src="https://oscimg.oschina.net/oscnet/up-2223cd7c410d1d6eec8f6d01abf597a85d9.webp" width="500" referrerpolicy="no-referrer"></p><p>i9-14900KS 可以看作是 i9-14900K 的特挑加速版，同樣都是 8P+16E 24 核心 32 線程、32MB 二級緩存、36MB 三級緩存、UHD 770 核芯顯卡，內存支持 DDR4-3200、DDR5-5600，最大容量 192GB，擴展支持 16 條 PCIe 5.0、4 條 PCIe 4.0，兼容 Z690、Z790 主板。</p><p>變化的是頻率和功耗。</p><p>P 核基礎頻率還是 3.2GHz，睿頻 2.0 最高頻率還是 5.6GHz，睿頻 Max 3.0 最高頻率從 5.8GHz 提高到 5.9GHz，TVB 自適應睿頻的最高頻率從 6.0GHz 來到 6.2GHz。</p><p>E 核基礎頻率維持在 2.4GHz，最大睿頻從 4.4GHz 增至 4.5GHz。</p><p>基礎功耗從 125W 增加到 150W，但是最大睿頻功耗繼續標稱 253W，只是實測會遠高於此，已經達到了 432W。</p><p><img height="272" src="https://oscimg.oschina.net/oscnet/up-3cb48a2d218b2a83431865d27225b0265c1.png" width="500" referrerpolicy="no-referrer"></p><p>藉着 i9-14900KS 正式發佈的機會，Intel 再次更新了 APO 遊戲優化器技術的情況。</p><p>迄今為止，Intel APO 支持的遊戲已經達到 14 款，其中 12 款是近期新驗證的，官方測試可免費帶來多達 11％的性能增益 (有實測甚至可達 31％)。</p><p>Intel 此前曾確認，APO 技術會下放給 12/13 代酷睿，但尚未落地。</p><p><img height="282" src="https://oscimg.oschina.net/oscnet/up-48bd11bb2e62b5266bb8800c75722d86bd0.png" width="500" referrerpolicy="no-referrer"></p><p><img height="276" src="https://oscimg.oschina.net/oscnet/up-34955962f681689b7e680ef584e1f15b3d1.png" width="500" referrerpolicy="no-referrer"></p><p><img height="276" src="https://oscimg.oschina.net/oscnet/up-a086b7e488f812601bdc47bb31dfdd17bc6.png" width="500" referrerpolicy="no-referrer"></p><p><img height="278" src="https://oscimg.oschina.net/oscnet/up-610215b185f9d43c39257c3c5e6d8473b8f.png" width="500" referrerpolicy="no-referrer"></p><p><img height="274" src="https://oscimg.oschina.net/oscnet/up-01d84d8924afbfd9ade0bd7dd1d328fb1c7.png" width="500" referrerpolicy="no-referrer"></p><p>Intel 還公佈了 i9-14900KS 的一些性能對比數據，包括上一代 i9-13900KS，以及競品的鋭龍 9 7950X3D、鋭龍 9 7950X、鋭龍 7 7800X3D。</p><p><em>來源：快科技</em></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Mar 2024 02:41:50 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283159</guid>
            <link>https://www.oschina.net/news/283159</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[joshuto —— Rust 編寫的終端文件管理器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>joshuto 是一個用 Rust 編寫的類似 ranger 的終端文件管理器。</p><p><img alt="" height="275" src="https://static.oschina.net/uploads/space/2024/0315/103323_Sf0W_4252687.png" width="500" referrerpolicy="no-referrer"></p><p style="text-align:start"><strong>特性：</strong></p><ul><li>Tabs</li><li>Devicons</li><li><a href="https://github.com/junegunn/fzf">通過 fzf</a>&nbsp;進行模糊搜索</li><li>Ctrl/Shift/Alt 支持</li><li>批量重命名</li><li>文件預覽
	<ul><li>有關詳細信息，參閲<a href="https://github.com/kamiyaa/joshuto/blob/main/docs/image_previews.md">Image 預覽</a></li></ul></li><li>退出到當前目錄</li><li>異步文件 IO（剪切/複製/粘貼）</li><li>自定義顏色/主題</li><li>行號
	<ul><li>跳轉到號碼</li></ul></li><li>文件選擇器</li><li>Trash 支持</li></ul><p style="text-align:start"><strong>Dependencies</strong></p><ul><li><a href="https://github.com/rust-lang/cargo/">cargo</a><span>&nbsp;</span>&gt;= 1.55</li><li><a href="https://www.rust-lang.org/">rustc</a><span>&nbsp;</span>&gt;= 1.55</li><li>xsel/xclip/wl-clipboard (可選，用於支持剪貼板)</li><li>fzf (可選)</li><li>zoxide (可選)</li></ul><p style="color:#1f2328; text-align:start">也可參見<span>&nbsp;</span><a href="https://github.com/kamiyaa/joshuto/blob/main/Cargo.toml">Cargo.toml</a>。</p></div>
                                                                ]]>
            </description>
            <pubDate>Fri, 15 Mar 2024 02:32:50 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/joshuto</guid>
            <link>https://www.oschina.net/p/joshuto</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | Java 代碼實現調用 RapidOCR RapidOcr-Java]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-rapidocr-java" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#rapidocr-java"></a>RapidOcr-Java</h1><p><img src="https://gitee.com/lc_monster/rapid-ocr-java/raw/main/docs/img/line.png" alt="" referrerpolicy="no-referrer"></p><h2><a id="user-content--項目起源" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#-%E9%A1%B9%E7%9B%AE%E8%B5%B7%E6%BA%90"></a>😺 項目起源</h2><ul><li>現有的 JavaOCR 工具包識別效果差強人意，<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddleOCR">PaddleOCR</a>在實現前沿算法的基礎上，考慮精度與速度的平衡，進行模型瘦身和深度優化，使其儘可能滿足產業落地需求。</li><li>PaddleOCR 官方並未提供 Java 版本，而<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FRapidAI%2FRapidOCR">RapidOcr</a>解決了這個問題，其提供了 Kotlin 和 Java 混合版本的<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FRapidAI%2FRapidOcrOnnxJvm">Demo-onnx</a>和<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FRapidAI%2FRapidOcrNcnnJvm">Demo-ncnn</a></li><li>而實際使用過程中，項目中並<strong>不想再引入 Kotlin、不想了解 OCR 相關知識，開箱即用、不想額外再部署 OCR 服務</strong></li></ul><p>因此本項目將 Kotlin 部分移除，並在此基礎上加以完善且提供了更友好的的調用方法，更方便 java 開發者直接進行使用。</p><blockquote><p>✨如果該項目對您有幫助，您的 star 是我不斷優化的動力！！！</p><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FMyMonsterCat%2FRapidOcr-Java">github 點擊前往</a></li><li><a href="https://gitee.com/lc_monster/rapid-ocr-java">gitee 點擊前往</a></li></ul></blockquote><h2><a id="user-content--項目特點" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#-%E9%A1%B9%E7%9B%AE%E7%89%B9%E7%82%B9"></a>👏 項目特點</h2><ul><li>純 Java 代碼調用 RapidOcr</li><li>集成 ncnn 和 onnx 推理引擎方式</li><li>均使用 CPU 版本，GPU 版本請自行編譯</li><li>支持 Mac、Windows、Linux 等多平台，詳細支持的系統請查看<a href="https://gitee.com/lc_monster/rapid-ocr-java/blob/main/docs/ADVANCED.md">版本説明</a></li></ul><h2><a id="user-content--快速開始" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B"></a>🎉 快速開始</h2><p>項目提供了<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FMyMonsterCat%2Frapidocr-demo%2Ftree%2Fmain%2Fjava-ee">JavaEE</a> 和 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FMyMonsterCat%2Frapidocr-demo%2Ftree%2Fmain%2Fspring-boot">SpringBoot</a> 的使用 Demo，僅作參考（可以拉取下來運行試一下）</p><h3><a id="user-content-1️⃣-添加依賴" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#1%EF%B8%8F%E2%83%A3-%E6%B7%BB%E5%8A%A0%E4%BE%9D%E8%B5%96"></a>1️⃣ 添加依賴</h3><p>此種方式會根據你使用的系統自動使用對應的 jar 包，目前支持的系統請查看<a href="https://gitee.com/lc_monster/rapid-ocr-java/blob/main/docs/ADVANCED.md">版本説明</a></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c">&lt;!--  rapidocr 這個必須要引入     --&gt;</span></span><span id="LC2" class="line"><span class="c">&lt;!--  可前往 maven 中央倉庫 https://repo1.maven.org/maven2/io/github/mymonstercat/rapidocr/，查看版本      --&gt;</span></span><span id="LC3" class="line"><span class="nt">&lt;dependency&gt;</span></span><span id="LC4" class="line"><span class="nt">&lt;groupId&gt;</span>io.github.mymonstercat<span class="nt">&lt;/groupId&gt;</span></span><span id="LC5" class="line"><span class="nt">&lt;artifactId&gt;</span>rapidocr<span class="nt">&lt;/artifactId&gt;</span></span><span id="LC6" class="line"><span class="nt">&lt;version&gt;</span>0.0.7<span class="nt">&lt;/version&gt;</span></span><span id="LC7" class="line"><span class="nt">&lt;/dependency&gt;</span></span><span id="LC8" class="line"></span><span id="LC9" class="line"><span class="c">&lt;!--  一般只需要引入一個，CPU 端建議使用 onnx，移動端建議使用 ncnn     --&gt;</span></span><span id="LC10" class="line"><span class="c">&lt;!--  可前往 maven 中央倉庫 https://repo1.maven.org/maven2/io/github/mymonstercat/，查看版本      --&gt;</span></span><span id="LC11" class="line"><span class="nt">&lt;dependency&gt;</span></span><span id="LC12" class="line"><span class="nt">&lt;groupId&gt;</span>io.github.mymonstercat<span class="nt">&lt;/groupId&gt;</span></span><span id="LC13" class="line"><span class="nt">&lt;artifactId&gt;</span>rapidocr-onnx-platform<span class="nt">&lt;/artifactId&gt;</span></span><span id="LC14" class="line"><span class="nt">&lt;version&gt;</span>0.0.7<span class="nt">&lt;/version&gt;</span></span><span id="LC15" class="line"><span class="nt">&lt;/dependency&gt;</span></span><span id="LC16" class="line"></span><span id="LC17" class="line"><span class="nt">&lt;dependency&gt;</span></span><span id="LC18" class="line"><span class="nt">&lt;groupId&gt;</span>io.github.mymonstercat<span class="nt">&lt;/groupId&gt;</span></span><span id="LC19" class="line"><span class="nt">&lt;artifactId&gt;</span>rapidocr-ncnn-platform<span class="nt">&lt;/artifactId&gt;</span></span><span id="LC20" class="line"><span class="nt">&lt;version&gt;</span>0.0.7<span class="nt">&lt;/version&gt;</span></span><span id="LC21" class="line"><span class="nt">&lt;/dependency&gt;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-2️⃣-使用示例" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#2%EF%B8%8F%E2%83%A3-%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B"></a>2️⃣ 使用示例</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kd">public</span><span class="kd">class</span><span class="nc">Main</span><span class="o">{</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kd">static</span><span class="kt">void</span><span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span><span class="n">args</span><span class="o">)</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nc">InferenceEngine</span><span class="n">engine</span><span class="o">=</span><span class="nc">InferenceEngine</span><span class="o">.</span><span class="na">getInstance</span><span class="o">(</span><span class="nc">Model</span><span class="o">.</span><span class="na">ONNX_PPOCR_V3</span><span class="o">);</span></span><span id="LC4" class="line"><span class="nc">OcrResult</span><span class="n">ocrResult</span><span class="o">=</span><span class="n">engine</span><span class="o">.</span><span class="na">runOcr</span><span class="o">(</span><span class="s">"/images/test.png"</span><span class="o">);</span></span><span id="LC5" class="line"><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">ocrResult</span><span class="o">.</span><span class="na">getStrRes</span><span class="o">().</span><span class="na">trim</span><span class="o">());</span></span><span id="LC6" class="line"><span class="o">}</span></span><span id="LC7" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><blockquote><p>更多使用示例請參考<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FMyMonsterCat%2Frapidocr-demo%2Fblob%2Fmain%2Fjava-ee%2Fsrc%2Fmain%2Fjava%2Fio%2Fgithub%2Fmymonstercat%2FMain.java">使用示例</a></p></blockquote><h3><a id="user-content-3️⃣-添加打印日誌可選" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#3%EF%B8%8F%E2%83%A3-%E6%B7%BB%E5%8A%A0%E6%89%93%E5%8D%B0%E6%97%A5%E5%BF%97%E5%8F%AF%E9%80%89"></a>3️⃣ 添加打印日誌 (可選)</h3><p>項目中添加了日誌打印，方便打印 OCR 日誌，請自行添加日誌實現（springboot 自帶，可以不用添加）</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c">&lt;!-- 非 SpringBoot 項目：例如添加 slf4j-simple     --&gt;</span></span><span id="LC2" class="line"><span class="nt">&lt;dependency&gt;</span></span><span id="LC3" class="line"><span class="nt">&lt;groupId&gt;</span>org.slf4j<span class="nt">&lt;/groupId&gt;</span></span><span id="LC4" class="line"><span class="nt">&lt;artifactId&gt;</span>slf4j-simple<span class="nt">&lt;/artifactId&gt;</span></span><span id="LC5" class="line"><span class="nt">&lt;version&gt;</span>2.0.3<span class="nt">&lt;/version&gt;</span></span><span id="LC6" class="line"><span class="nt">&lt;/dependency&gt;</span></span><span id="LC7" class="line"><span class="c">&lt;!-- SpringBoot 項目：去除依賴，防止衝突     --&gt;</span></span><span id="LC8" class="line"><span class="nt">&lt;dependency&gt;</span></span><span id="LC9" class="line"><span class="nt">&lt;groupId&gt;</span>io.github.mymonstercat<span class="nt">&lt;/groupId&gt;</span></span><span id="LC10" class="line"><span class="nt">&lt;artifactId&gt;</span>rapidocr<span class="nt">&lt;/artifactId&gt;</span></span><span id="LC11" class="line"><span class="nt">&lt;exclusions&gt;</span></span><span id="LC12" class="line"><span class="nt">&lt;exclusion&gt;</span></span><span id="LC13" class="line"><span class="nt">&lt;artifactId&gt;</span>slf4j-api<span class="nt">&lt;/artifactId&gt;</span></span><span id="LC14" class="line"><span class="nt">&lt;groupId&gt;</span>org.slf4j<span class="nt">&lt;/groupId&gt;</span></span><span id="LC15" class="line"><span class="nt">&lt;/exclusion&gt;</span></span><span id="LC16" class="line"><span class="nt">&lt;/exclusions&gt;</span></span><span id="LC17" class="line"><span class="nt">&lt;/dependency&gt;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>添加後效果如下：</p><p><img src="https://gitee.com/lc_monster/rapid-ocr-java/raw/main/docs/img/run-result.png" alt="" referrerpolicy="no-referrer"></p><blockquote><p>⚠️ 注意：當前 JVM 啓動時<strong>只能同時啓動一種推理引擎</strong>，以第一次調用 runOcr 方法時的引擎配置為準</p></blockquote><h2><a id="user-content--進階使用" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#-%E8%BF%9B%E9%98%B6%E4%BD%BF%E7%94%A8"></a>🔝 進階使用</h2><ul><li><a href="https://gitee.com/lc_monster/rapid-ocr-java/blob/main/docs/ADVANCED.md">參數調優、版本説明、分支説明</a></li><li><a href="https://gitee.com/lc_monster/rapid-ocr-java/blob/main/docs/COMPILE_JAR.md">如何打包 jar 包在 Linux 系統上運行</a></li><li><a href="https://gitee.com/lc_monster/rapid-ocr-java/blob/main/docs/CentOS7.md">如何在 CentOS7 或其他低版本 Linux 系統上運行</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FMyMonsterCat%2Frapidocr-demo">SpringBoot 示例和普通 Java 程序示例</a></li><li><a href="https://gitee.com/lc_monster/rapid-ocr-java/blob/main/docs/COMPARE.md">JVM 下不同 PaddleOCR 調用方式性能比對👍</a></li></ul><h2><a id="user-content--todo" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#-todo"></a>📌 TODO</h2><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 根據系統版本自適應加載動態庫</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 動態庫集成到 jar 中</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 是否刪除臨時文件夾配置為可選項</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> jvm 未退出場景連續調用識別結果集亂碼<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FMyMonsterCat%2FRapidOcr-Java%2Fissues%2F1">#1</a></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 集成 ONNX<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FMyMonsterCat%2FRapidOcr-Java%2Fissues%2F2">#2</a>，感謝<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fnn200433">nn200433</a>及<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fnn200433%2Ftika-server">tika-server</a>👏</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 添加日誌，規範日誌打印</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> ONNX 支持 Mac-Arm64</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 支持 Docker 鏡像</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> Maven 倉庫提供 packages</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> SpringBoot 下，以配置文件方式改造</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 多模塊打包<a href="https://gitee.com/lc_monster/rapid-ocr-java/blob/main/%E5%8F%AF%E4%BB%A5%E5%90%A6%E5%B0%86dll%EF%BC%8C%E6%89%80%E4%BB%A5%E8%BF%98%E6%9C%89onnx%E6%96%87%E4%BB%B6%E5%88%86%E5%88%AB%E5%AD%98%E6%94%BE%E8%BF%9Bjar">#6</a></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 多線程情況下庫和模型可能重複加載、編譯目標 jdk 版本改為 1.8，感謝<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FFlyInWind1">FlyInWind1</a></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> CentOS7 升級指引</li></ul><h2><a id="user-content--faq" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#-faq"></a>🤔 FAQ</h2><h4><a id="user-content-q1centos7 無法運行" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#q1centos7%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8C"></a>Q1:CentOS7 無法運行？</h4><p>請參考<a href="https://gitee.com/lc_monster/rapid-ocr-java/blob/main/docs/CentOS7.md">CentOS7 升級 GCC</a></p><h4><a id="user-content-q2 如何使用自己編譯的動態庫和模型" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#q2%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%87%AA%E5%B7%B1%E7%BC%96%E8%AF%91%E7%9A%84%E5%8A%A8%E6%80%81%E5%BA%93%E5%92%8C%E6%A8%A1%E5%9E%8B"></a>Q2:如何使用自己編譯的動態庫和模型？</h4><p>自 0.0.5 版本開始，項目引入了多模塊打包，如果不喜歡這種方式，請使用 0.0.4-light</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nt">&lt;dependency&gt;</span></span><span id="LC2" class="line"><span class="nt">&lt;groupId&gt;</span>io.github.mymonstercat<span class="nt">&lt;/groupId&gt;</span></span><span id="LC3" class="line"><span class="nt">&lt;artifactId&gt;</span>rapidocr<span class="nt">&lt;/artifactId&gt;</span></span><span id="LC4" class="line"><span class="nt">&lt;version&gt;</span>0.0.4-light<span class="nt">&lt;/version&gt;</span></span><span id="LC5" class="line"><span class="nt">&lt;/dependency&gt;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>代碼位於<code>0.0.4-light 分支</code>，但該分支後續不進行維護。在該分支代碼下，你可能會需要以下幫助</p><ul><li><a href="https://gitee.com/lc_monster/rapid-ocr-java/blob/main/docs/UPDATE_MODEL.md">如何更新模型</a></li><li><a href="https://gitee.com/lc_monster/rapid-ocr-java/blob/main/docs/COMPILE_LIB.md">如何自行編譯動態庫</a></li></ul><blockquote><p>如有其他問題請提 issue，我會盡快解決。</p></blockquote><h2><a id="user-content-鳴謝" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#%E9%B8%A3%E8%B0%A2"></a>鳴謝</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FRapidAI%2FRapidOCR">RapidOCR</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FPaddlePaddle%2FPaddleOCR">PaddleOCR</a></li></ul><h2><a id="user-content-開源許可" class="anchor" href="https://gitee.com/lc_monster/rapid-ocr-java#%E5%BC%80%E6%BA%90%E8%AE%B8%E5%8F%AF"></a>開源許可</h2><p>使用 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FMyMonsterCat%2FDeviceTouch%2Fblob%2Fmain%2FLICENSE">Apache License 2.0</a></p>]]>
            </description>
            <pubDate>Fri, 15 Mar 2024 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/lc_monster/rapid-ocr-java</guid>
            <link>https://gitee.com/lc_monster/rapid-ocr-java</link>
        </item>
        <item>
            <title>
                <![CDATA[零一萬物 API 正式上線：支持輸入 30 萬漢字]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">零一萬物正式發佈了 Yi 大模型 API 開放平台。鏈接地址：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fplatform.lingyiwanwu.com%2F" target="_blank">https://platform.lingyiwanwu.com/</a></p><p><span style="color:#000000">此次 API 開放平台提供以下模型：</span></p><ul><li><span style="color:#000000">Yi-34B-Chat-0205：支持通用聊天、問答、對話、寫作、翻譯等功能。</span></li><li><span style="color:#000000">Yi-34B-Chat-200K：200K 上下文，多文檔閲讀理解、超長知識庫構建小能手。</span></li><li><span style="color:#000000">Yi-VL-Plus: 多模態模型，支持文本、視覺多模態輸入，中文圖表體驗超過 GPT-4V。</span></li></ul><p><img alt="" height="315" src="https://oscimg.oschina.net/oscnet/up-8e0007c7ff2ff5e986b65ba01b954470494.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">幾個亮點如下：</span></p><ul><li><span style="color:#000000">200K 上下文</span></li></ul><p><span style="color:#000000"><img alt="" height="311" src="https://oscimg.oschina.net/oscnet/up-7ced82363570b151be4c3fa25a05a3480de.png" width="300" referrerpolicy="no-referrer"></span></p><ul><li><span style="color:#000000">在 Yi-34B-Chat-0205、Yi-34B-Chat-200K 之外，零一萬物開放平台此次同期上新全新的多模態大模型 Yi-VL-Plus。Yi-VL-Plus 支持文本、視覺多模態輸入，面向實際場景大幅增強。多位用戶反饋：「中文體驗超過 GPT-4V。」</span></li><li><span style="color:#000000">零一萬物 Yi 大模型 API 開放平台和 OpenAI API 是兼容的，遷移絲滑。</span></li></ul><p><span style="color:#000000">零一萬物表示，近期將為開發者提供更多更強模型和 AI 開發框架。主要亮點包括：</span></p><ul><li><span style="color:#000000">推出一系列的模型 API，覆蓋更大的參數量、更強的多模態，更專業的代碼/數學推理模型等。</span></li><li><span style="color:#000000">突破更長的上下文，目標 100 萬 tokens；支持更快的推理速度，顯著降低推理成本。</span></li><li><span style="color:#000000">基於超長上下文能力，構建向量數據庫、RAG、Agent 架構在內的全新開發者 AI 框架。旨在提供更加豐富和靈活的開發工具，以適應多樣化的應用場景。</span></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 15 Mar 2024 02:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283139</guid>
            <link>https://www.oschina.net/news/283139</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中國 AIGC 產業全景報告：萬億市場潛力解析、全景圖譜揭祕及 50 家機構矚目亮相！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">《中國 AIGC 產業全景報告》（2023 年 3 月版）由量子位智庫出品。報告詳細分析了中國 AIGC（人工智能生成內容）產業的市場規模、產業全景圖譜、行業變革分析、代表案例以及值得關注的 AIGC 機構。</p><p style="color:#060607; margin-left:0; margin-right:0; text-align:start"><img height="787" src="https://static.oschina.net/uploads/space/2024/0314/165804_tahR_4700705.png" width="1119" referrerpolicy="no-referrer"></p><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">以下是報告的核心內容概要：</p><ol><li><p style="margin-left:0; margin-right:0"><strong>市場規模</strong>：</p><ul><li>預計到 2030 年，中國 AIGC 市場規模將達到萬億級別。</li><li>2023-2025 年為培育摸索期，2025-2027 年為應用蓬勃期，2028 年後為整體加速期。</li><li>AIGC 產業的營收模式主要包括 MaaS（Model as Service）、按產出內容量付費、軟件訂閲付費和模型定製開發費。</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>產業全景圖譜</strong>：</p><ul><li>AIGC 產業分為基礎設施層、模型層和應用層。</li><li>基礎設施層包括數據層、算力層、計算平台等。</li><li>模型層主要分為底層通用大模型和中間層模型。</li><li>應用層涉及直接生產可消費內容、結合底層系統生產高附加值內容、提供內容生產輔助工具和提供體系化解決方案。</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>行業變革分析</strong>：</p><ul><li>AIGC 技術將深刻影響線上遊戲、影視傳媒、內容資訊、電子商務等多個行業。</li><li>AIGC 技術的應用將提高創作靈活度、激發內容生產多樣性、降低內容創作門檻等。</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>代表案例</strong>：</p><ul><li>報告列舉了多家中國 AIGC 產業的代表性公司及其產品，如百度的「文心一言」、科大訊飛的 SMART-TTS 系統、阿里巴巴的達摩院和阿里雲、騰訊的 AlLab 等。</li><li>這些案例展示了 AIGC 技術在不同領域的應用，包括數字人生成、內容創作、虛擬主播、AI 寫作等。</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>中國最值得關注的 50 家 AIGC 機構（AIGC50）</strong>：</p><ul><li>報告評選出了中國最值得關注的 50 家 AIGC 機構，包括百度、阿里巴巴、騰訊、華為、京東科技、小冰公司等，這些機構在 AIGC 領域具有顯著的技術實力和市場影響力。</li></ul></li></ol><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">報告強調了 AIGC 產業的快速發展和巨大潛力，同時也指出了產業發展中的挑戰和機遇。通過對市場規模的預測、產業圖譜的梳理、行業變革的分析以及代表性案例的展示，報告為讀者提供了一個全面的中國 AIGC 產業現狀和未來趨勢的視角。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">報告詳情可至<strong><span style="color:#333333"><span style="background-color:#f39c12">「開源中國 APP - 報告模塊」</span></span></strong>查看。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">APP 下載地址：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="300" src="https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png" width="300" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>（<em>目前僅提供 Android 版本）</em></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Mar 2024 09:07:30 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283068</guid>
            <link>https://www.oschina.net/news/283068</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[VLC 下載量突破 50 億，計劃推出 Vision Pro 應用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">開發 VLC 及相關技術的非營利組織 VideoLAN 的總裁 Jean-Baptiste Kempf <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.lowpass.cc%2Fp%2Fvlc-five-billion-downloads-vision-pro-app" target="_blank">透露</a>，開源多媒體播放器 VLC 在桌面和移動平台上的下載量已超過了 50 億次。</span></p><p><span style="color:#000000">VLC 於 2001 年首次發佈，是有史以來最成功、最知名的開源桌面應用程序之一。2019 年初，該應用的下載量突破了 30 億次；儘管 Netflix 等流媒體服務近年來有所增長，但大眾對它的興趣依然濃厚。就 11 月發佈的最新 VLC 版本而言，僅桌面用戶的下載量就已達到了 3.35 億次。</span></p><p><img height="281" src="https://oscimg.oschina.net/oscnet/up-4d9be4beeb6dac65d1b5272e14016566b55.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">VLC 在移動設備上的使用量也在持續增加，Android 和 iOS 版本的應用程序總下載量約為 3.18 億次。Kempf 稱，「大家仍然在大量下載 VLC。」</span></p><p><span style="color:#000000">談到項目的未來規劃時，Videolan 團隊並不滿足於成為桌面設備上最受歡迎的多媒體播放器，並已經把目光投向了下一代平台。Kempf 表示，除了繼續開發 VLC 4.0，Videolan 團隊還在將 VLC 移植到蘋果的 Vision Pro 頭戴式耳機，未來甚至可能提供對 FAST 頻道和其他廣告支持的在線媒體的訪問。</span></p><p><span style="color:#000000">他們已經在 Vision Pro 上運行了一個版本的 VLC。不過，該應用程序尚未發佈。Kempf 稱，部分原因是潛在用戶羣仍然很小。「我還不確定是否有任何用例」。Kempf 表示，他也願意為 Meta 的 Quest 耳機開發一個版本，雖然該平台上已經有「許多優秀的播放器」可用。</span></p><p><span style="color:#000000">Kempf 還解釋道，VLC 4.0 版本原本應在前段時間發佈，但由於其複雜程度高於預期所以導致了推遲。「我們一直在重寫 VLC 的整個核心」。此外，Videolan 團隊還在開發 VLC 的 WebAssembly 版本。</span></p><p><span style="color:#000000">Videolan 4 的 Nightly 版本提供了一個更加以內容為中心的界面，它將默認播放器窗口替換成了 someone’s library。不過，Kempf 提醒道，其中一些改動很可能會在應用程序正式發佈前被還原。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Mar 2024 08:40:30 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283057/vlc-five-billion-downloads</guid>
            <link>https://www.oschina.net/news/283057/vlc-five-billion-downloads</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[System76 計劃 5 月底發佈 COSMIC Desktop Alpha]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>System76 原計劃在第一季度末發佈 Rust 編寫的 COSMIC 桌面環境的第一個 alpha 版本，但現在他們將時間推遲到了 5 月下旬，以便有時間完成新桌面應用程序的功能開發工作。</p><p>最初，System76 打算將其首個 COSMIC alpha 版本與 Pop!_OS 22.04 上的 GNOME 應用程序一起發佈，但隨着 COSMIC <span style="color:#121212">應用程序取得良好進展</span>，他們打算將 alpha 版本的發佈時間推遲兩個月，以便使其應用程序處於更好的狀態。</p><p>System76 在終端編輯器、文本編輯器、文件管理器和應用程序商店方面都取得了不錯的進展。雖然首個 alphas 版本已經推遲發佈，但 System76 的目標仍然是在今年發佈 COSMIC 桌面穩定版，同時發佈的還有基於 Ubuntu 24.04 LTS 的 Pop!_OS 24.04。</p><p>COSMIC 開發人員最近完成了混合圖形支持、窗口最小化和還原、新壁紙、平鋪小程序和輸入設備設置等方面的工作。COSMIC 今後的工作主要集中在應用程序、圖標和其他用戶界面方面。</p><p><img alt="" height="282" src="https://oscimg.oschina.net/oscnet/up-ac24e7f96ded9d378f335ac724fc52b08b7.webp" width="500" referrerpolicy="no-referrer"></p><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.system76.com%2Fpost%2Fcosmic-more-alpha-more-fun" target="_blank">查看官方博客</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Mar 2024 07:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283047/system76-cosmic-alpha-may</guid>
            <link>https://www.oschina.net/news/283047/system76-cosmic-alpha-may</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linus Torvalds 不滿 Linux 6.9 中的一些 Bcachefs 代碼]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Bcachefs 文件系統自從被納入 Linux 6.7 內核的上游版本以來，一直保持着良好的運行狀態。但現如今，隨着 Bcachefs 的功能更新被提交到 Linux 6.9 合併窗口，引發了 Linus Torvalds 對其中一些 proposed code 的不滿。</span></p><p><span style="color:#000000">維護者 Kent Overstreet 將針對 Linux 6.9 的 Bcachefs 改動的拉取請求<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2Flfypw4vqq3rkohlh2iwhub3igjopdy26lfforfcjws2dfizk7d%4032yk5dnemi4u%2F" target="_blank">總結為</a>：</span></p><ul><li><span style="color:#000000">Subvolume children btree；是為 walking subvolumes 提供用戶空間界面所必需的，計劃在稍後提供</span></li><li><span style="color:#000000">對目錄結構檢查進行了大量改進</span></li><li><span style="color:#000000">改進了日誌管道，顯着提高了 high iodepth write workloads 的性能</span></li><li><span style="color:#000000">Discard path 改進：Discard path 更加高效，並且不再不必要地刷新日誌</span></li><li><span style="color:#000000">Buffered write path 現在可以避免佔用 inode lock</span></li><li><span style="color:#000000">調出用於 XFS 的各種庫代碼：time stats、mean_and_variance、darray、eytzinger、thread_with_file</span></li><li><span style="color:#000000">新的 mm helper：memalloc_flags_{save|restore}</span></li><li><span style="color:#000000">mempool now does kvmalloc mempools</span></li></ul><p><span style="color:#000000">但讓 Linus Torvalds 感到不解的是，這些補丁把 Bcachefs 代碼中的一些元素移到了一些 library-type 的代碼中，以至於可以輕鬆地被其他文件系統重用。</span></p><p><span style="color:#000000">Linus Torvalds 在</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2FCAHk-%3Dwg3djFJMeN3L_zx3P-6eN978Y1JTssxy81RhAbxB%3D%3DL8Q%40mail.gmail.com%2F" target="_blank">迴應</a><span style="color:#000000">相關 PR 時表示：「我看了看'make random bcachefs code be a library function'的內容，覺得毫無意義，最終決定在沒有進一步解釋的情況下我不會使用它（老實説，我不認為這些解釋站得住腳）。」</span></p><p><span style="color:#000000">並直言 "stdio_redirect_printf() "和 darray_char 都很「噁心」。建議 Overstreet 將其保留在自己的代碼中就好，不要試圖提交上來。如果實在不死心的話，建議他先做好以下幾點：</span></p><ul><li><span style="color:#000000">多加解釋</span></li><li><span style="color:#000000">有更合理的命名，減少噁心和完全無意義的 interfaces ("DARRAY()")。</span></li></ul><p><img height="318" src="https://oscimg.oschina.net/oscnet/up-87349de7cf38ec24e77d98c8c7165c68d31.png" width="500" referrerpolicy="no-referrer"></p><blockquote><p><span style="color:#000000">而且，僅僅找到一個其他文件系統來共享這種代碼並不足以證明它是一個合理的 interfaces 和合理的命名。</span></p><p><span style="color:#000000">但是，最主要的問題是瘋狂的數學計算。該死的，我們很久以前就討論過"mean and variance"這種愚蠢的垃圾。當時就錯了，現在還是錯的。你沒有解釋為什麼它不能使用簡單得多的 MAD（<em>median absolute deviation</em>），而不是使用 variance。這個錯誤的決定直接導致無意義地使用過於複雜的 128 位數學。</span></p><p><span style="color:#000000">我當時稱其為瘋狂的過度工程化，而就我所知，除了一些輕微的類型名稱細節外，絕對沒有任何變化。</span></p><p><span style="color:#000000">只要你把它改成某種只適用於 bcachefs 的東西，我就不介意。但現在，你卻試圖把這些垃圾作為通用庫代碼推向市場，讓其他人也能使用，這就意味着，我會介意這種過度設計的 interfaces。</span></p><p><span style="color:#000000">在其他方面，time_stats 看上去就像是一個有名稱和用途的正常 interfaces，但使用了這種可怕的基礎架構後，它就變得不倫不類了。</span></p></blockquote><p><span style="color:#000000">在 Overstreet 爭辯之後，Linus 進一步</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2FCAHk-%3DwhbgtooUErM9bOP2iWimndpkPLaPy1YZmbmHACU07h3Mw%40mail.gmail.com%2F" target="_blank">補充道</a><span style="color:#000000">：</span></p><blockquote><p><span style="color:#000000">加權版本的代碼字面上沒有任何變化。</span></p><p><span style="color:#000000">variance value 是不同的，但 MAD 和 standard deviation&nbsp;之間的區別基本上只是一個 constant factor（不同的分佈會有所不同，但那又怎樣？任何特定情況都會有特定的分佈）。那麼，為什麼 constant factor&nbsp;會對指數加權產生任何影響呢？</span></p><p><span style="color:#000000">不管怎樣，請隨意將您的代碼保存在 bcachefs 中。也許 xfs 甚至想複製該代碼。我不在乎，這看起來很愚蠢，但這是文件系統的選擇。但如果我們要把它打造成一個通用的內核庫，它就必須是健全的。不要讓人們僅僅為了隨機統計元素而進行 64 位平方根和 128 位除法。</span></p></blockquote><p><span style="color:#000000">因此，就目前情況而言，Linus Torvalds 並沒有接受這個針對 Linux 6.9 內核的 Bcachefs 拉取請求。至於後續如何，就要看新的 PR 會不會放棄這些補丁或以其他方式重新修改以滿足&nbsp;Linus 的要求。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Mar 2024 07:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283043/linux-6-9-bcachefs-attempt</guid>
            <link>https://www.oschina.net/news/283043/linux-6-9-bcachefs-attempt</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[不卡科技系列全新 Logo 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="1395" src="https://oscimg.oschina.net/oscnet/up-d91ca53fe6e4275e089c404f966b1009a32.jpg" width="1073" referrerpolicy="no-referrer"></p><p>新 Logo 由前 vivo 官網設計師操刀，更加高端大氣上檔次，有圓角也有稜角，預示着產品有態度也有溫度。</p><p><img height="1298" src="https://oscimg.oschina.net/oscnet/up-0d5d0bafee553d66a62a40447c60c3e6116.png" width="2534" referrerpolicy="no-referrer"></p><p>也和官網整體風格匹配，更加成熟，商務和技術風格相融合，也是產品的基本調性。打造酷炫且實用的產品體驗。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Mar 2024 06:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283025</guid>
            <link>https://www.oschina.net/news/283025</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源日報 | 全球首位 AI 軟件工程師 Devin；谷歌承認「竊取」OpenAI 模型關鍵信息]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。</p><h3><span style="color:#e67e22"><strong># 2024.3.13</strong></span></h3><h2><strong><span style="color:#16a085">今日要點</span></strong></h2><p><strong>OpenSource Daily</strong></p><h3><strong><a href="https://www.oschina.net/news/282901/laravel-11-released" target="_blank">Laravel 11 正式發佈</a></strong></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">Laravel 11 和 Laravel Reverb 現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flaravel-news.com%2Flaravel-11" target="_blank">發佈</a>。Reverb 是 Laravel 生態系統的最新成員，是第一方、可擴展的 WebSocket 服務器，旨在為用戶的應用程序提供強大的實時功能。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">Laravel 11 引入了：極簡應用結構、默認使用 SQLite、實現 health routing、提供每秒速率限制、支持優雅的加密密鑰輪換、改進隊列測試、引入新的 Artisan 命令、添加 Resend 郵件傳輸、集成 Prompt validator、新的 Artisan commands、Model Casts 改進、The once function、改進了使用內存數據庫進行測試時的性能、改進了對 MariaDB 的支持等等。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="352" src="https://oscimg.oschina.net/oscnet/up-0453b972568e047b7d57af4dd0cf5cf3c7d.png" width="500" referrerpolicy="no-referrer"></p><h3><strong><a href="https://www.oschina.net/news/282895/cognition-labs-devin" target="_blank">全球首位 AI 軟件工程師 Devin：能自學新語言、開發迭代 App、自動 Debug</a></strong></h3><p>初創公司 Cognition 近日發佈公告，宣佈推出全球首個 AI 軟件工程師 Devin，並號稱會徹底改變人類構建，軟件的方式。官方描述如下：Devin 是一位不知疲倦、技術嫺熟的隊友，隨時準備與您並肩作戰，或獨立完成，任務供您審查。有了 Devin，工程師可以專注於更有趣的問題，工程團隊可以努力實現更遠大的目標。Devin 在 SWE-bench 編碼基準測試中取得了突破性的成功，展示了執行復雜任務的能力，甚至超越了頂尖的人類工師。</p><p><img height="287" src="https://oscimg.oschina.net/oscnet/up-9eca7b14f877d8f53cdbf3e675e1942c4a7.png" width="500" referrerpolicy="no-referrer"></p><hr><h2><strong><span style="color:#16a085">今日觀察</span></strong></h2><p><img height="160" src="https://oscimg.oschina.net/oscnet/up-4101ac3e993fdd0d11ceb478c4000751d2b.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">- 微信&nbsp;</span><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzU4ODQwNTIxMw%3D%3D%26mid%3D2247526466%26idx%3D1%26sn%3D50c1810505d13cd76439d7099e062905%26scene%3D0" target="_blank">人工智能產業鏈 union</a></em></u></p><p><img height="123" src="https://oscimg.oschina.net/oscnet/up-26d3c03709ed15944aee6780c7a432211d8.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">- </span><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fk.sina.cn%2Farticle_5182171545_134e1a99902001pzg3.html" target="_blank">界面新聞</a></em></u></p><p><img height="218" src="https://oscimg.oschina.net/oscnet/up-413b05deedd40f689af0d5326b693b401dc.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">- </span><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.cn%2Fusstock%2Fmggd%2F2024-03-13%2Fdetail-inanefqq3854800.d.html" target="_blank">環球市場播報</a></em></u></p><hr><h2><span style="color:#16a085"><strong>今日推薦</strong></span></h2><p><img height="401" src="https://oscimg.oschina.net/oscnet/up-1b97b2ca5e5274365ef49658a177ccdc3d9.png" width="500" referrerpolicy="no-referrer"></p><p><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftremorlabs%2Ftremor" target="_blank">https://github.com/tremorlabs/tremor</a></em></u></p><hr><h2><span style="color:#16a085"><strong>事件點評</strong></span></h2><p><img height="527" src="https://oscimg.oschina.net/oscnet/up-8c63b78a5992700821d2183b90b07e6027b.png" width="500" referrerpolicy="no-referrer"></p><hr><h2><span style="color:#16a085"><strong>每日項目榜</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="background-color:#e67e22">每日 GitHub 精選</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="659" src="https://oscimg.oschina.net/oscnet/up-07e7c0e0484d7ed9ad4c32f79130e119b77.png" width="500" referrerpolicy="no-referrer"></p><blockquote><h4><strong><span style="background-color:#e67e22">在線閲讀完整日報內容，訪問：</span></strong><br><em><u><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/q35lx4s6qq9ls4r/28_cognition_labs_devin_Epbxne3xzN.pdf" target="_blank">開源日報第 028 期：全球首位 AI 軟件工程師 Devin；谷歌承認「竊取」OpenAI 模型關鍵信息</a></u></em></h4></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>往期回顧</strong></p><ul><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/hh291xp9mxksc9i/27_ai_google_50_gpt_4_KfagjDXXfZ.pdf" target="_blank">開源日報第 027 期：AI 接連翻車的 Google 要變天了；互聯網大廠 50 款大模型及應用，能否全面超越 GPT-4？</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/uwsizmmsnhq8zdk/26_git_hub_22_web_os_22_vue_rolldown_FpVykoR7rJ.pdf" target="_blank">開源日報第 026 期：大模型替代程序員根本就是一個偽命題；GitHub 頂流 "Web OS"</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6ho57sxydzsh9jh/25_ai_5_ax1LWz5GP5.pdf" target="_blank">開源日報第 025 期：買手機送大模型；「釣魚式維權」 須遏制；「AI 原生」 騙局江湖</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/7xd6teyhekcvamw/24_risc_v_x86_arm_5LsjoStPUn.pdf" target="_blank">開源日報第 024 期：RISC-V 能否和 x86、Arm 一起成為三大主流架構；給閻王開發地府管理系統</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/svxac61bjmbmmw5/23_google_microsoft_cM5zZacKru.pdf" target="_blank">開源日報第 023 期：Google = 開源，好評；Microsoft = 閉源收入還低，差評</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/3vmzfjvp7mpvv26/22_sora_cuda_Syy7OJyUvc.pdf" target="_blank">開源日報第 022 期：輕鬆復現 Sora 模型；事關 CUDA 兼容，英偉達禁止了；百度還差一個 「遙遙領先」</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/z3rhs3qkyeqwoax/21_open_ai_JROaEZat3b.pdf" target="_blank">開源日報第 021 期：閉源模型就是比開源安全；起訴 OpenAI 不能更贊同</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/lv84pwvd03it00i/20_open_ai_pingora_yaml_mE5RuB20Vl.pdf" target="_blank">開源日報第 020 期：為什麼王炸都來自 OpenAI；Pingora 最好不要用 YAML 當配置文件</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/mx86z1dhywrw71p/19_ai_c_llm_IgpNOVZtCz.pdf" target="_blank">開源日報第 019 期：我讓 AI 用 C 語言寫一個算法；微軟三進制 LLM</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/qdljicvqiqsshd6/187ZiLwG48lc_CngfQJ1Qxs.pdf" target="_blank">開源日報第 018 期：蘋果十年造車夢碎；這個開源項目有點...「大膽」</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/7r8dkz3232v4e7a/17_maria_db_v_linux_GoyNoM85IZ.pdf">開源日報第 017 期：MariaDB 消亡史；寫代碼我有三不沾；V 神建議馬斯克用 Linux</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6typ9w3u98f5mxn/16_1_8_2efTeNfFjN.pdf">開源日報第 016 期：鴻蒙程序員平均月薪超 1 萬 8；中美 AI 差距有多大？</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/92n4c9ryegpcq1z/015_sora_KcAkRNX93Y.pdf">開源日報第 015 期：為什麼擋不住英偉達；Sora 不靠蠻力</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/s7n800w84o6guyv/014_kyezhNxOGD.pdf">開源日報第 014 期：目前的人工智能技術連貓的智能水平都沒達到</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC013%E6%9C%9F%EF%BC%9A%E7%AD%89%E5%88%B0%20Sora%20%E5%BC%80%E6%BA%90%E4%BA%86%E7%AB%8B%E5%88%BB%E6%8E%A8%E5%87%BA%E5%B1%9E%E4%BA%8E%E6%88%91%E4%BB%AC%E8%87%AA%E5%B7%B1%E7%9A%84%E5%A4%A7%E6%A8%A1%E5%9E%8B.pdf">開源日報第 013 期：等到 Sora 開源了立刻推出屬於我們自己的大模型</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC012%E6%9C%9F%EF%BC%9ASora%20%E7%BB%99%E4%B8%AD%E5%9B%BD%20AI%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9C%9F%E5%AE%9E%E5%8F%98%E5%8C%96%EF%BC%9BDart%203.3%20%E5%8F%91%E5%B8%83.pdf">開源日報第 012 期：Sora 給中國 AI 帶來的真實變化；Dart 3.3 發佈</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC11%E6%9C%9F%EF%BC%9A%E7%9B%AE%E5%89%8D%E8%BF%98%E6%B2%A1%E6%9C%89%E2%80%9C%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%89%88Linux%E2%80%9D.pdf">開源日報第 011 期：目前還沒有 「大模型版 Linux」</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC010%E6%9C%9F%EF%BC%9ATauri%20v2%20%E6%94%AF%E6%8C%81%20Android%20%E5%92%8C%20iOS%EF%BC%8C%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%96%B0%E9%80%89%E6%8B%A9.pdf">開源日報第 010 期：Tauri v2 支持 Android 和 iOS，跨平台開發新選擇</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5009%E6%9C%9F%EF%BC%9AVue.js%E8%AF%9E%E7%94%9F10%E5%91%A8%E5%B9%B4%EF%BC%9B%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC%E8%A7%A3%E9%87%8AMeta%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E6%BA%90%E5%85%B6AI%E6%8A%80%E6%9C%AF.pdf">開源日報第 009 期：Vue.js 誕生 10 週年；扎克伯格解釋 Meta 為什麼要開源其 AI 技術</a></li><li><a href="https://www.oschina.net/news/277585">開源日報第 008 期：推動中國開源軟硬件發展的經驗與建議</a></li><li><a href="https://www.oschina.net/news/277415">開源日報第 007 期：「Linux 中國」 開源社區宣佈停止運營</a></li><li><a href="https://www.oschina.net/news/277214">開源日報第 006 期：選擇技術棧一定要選擇開源的</a></li><li><a href="http://www.oschina.net/news/277040">開源日報第 005 期：RISC-V 萬兆開源交換機發售；npm 存在大量武林外傳視頻</a></li><li><a href="https://www.oschina.net/news/276864">開源日報第 004 期：百度輸入法在候選詞區域植入廣告；大神用 Excel 構建 CPU</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Mar 2024 06:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283024</guid>
            <link>https://www.oschina.net/news/283024</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[首款基於 RISC-V 的安卓設備將於 2024 年大規模商業化落地]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在阿里巴巴平頭哥玄鐵 RISC-V 生態大會上，阿里巴巴達摩院院長張建鋒在演講中指出，RISC-V 開源指令集架構發展迅速，在主流市場年平均增長率超過 40%，在主流應用佔比超過 30%，用 10 年時間完成了 Arm 30 年的歷史。 </span></p><p><span style="color:#000000">會上，達摩院還宣佈了多款玄鐵處理器的升級：玄鐵 C907 首次實現矩陣運算（Matrix）擴展，為未來 AI 加速計算提供更多選擇，並將集成到其他玄鐵處理器中；下一代旗艦處理器 C930 也將於年內推出。</span></p><p><img height="313" src="https://static.oschina.net/uploads/space/2024/0314/165521_cK51_4252687.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">據悉，首款基於 RISC-V 的安卓設備也將於 2024 年大規模商業化落地。目前，國際及國內主流操作系統已完成與 RISC-V 的全適配，包括安卓、Linux、OpenHarmony、Debian、Fedora、Gentoo、Ubuntu、龍蜥、統信、openKylin、創維酷開系統、RTT 等操作系統。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 14 Mar 2024 03:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283009</guid>
            <link>https://www.oschina.net/news/283009</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[互動遊戲團隊如何將性能體驗優化做到 TOP 級別]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/event/2331708?fr=news0304" target="_blank">3 月 16 日，北京源創會 —— 「數據庫，2024 開炫」 <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><span id="OSC_h1_1"></span><h1>一、背景</h1><p style="color:#24292f; text-align:start">隨着互動遊戲業務 DAU 量級增加，性能和體驗重要性也越發重要，好的性能和體驗不僅可以增加用戶使用體感，也可以增加用戶對於互動遊戲的使用粘性。</p><p style="color:#24292f; text-align:start">對現狀分析，主要存在首屏渲染速度慢、打開頁面存在白屏、頁面加載過多資源等問題，核心手段是增加骨架、接口優先級調整、預渲染、減小包體積等。</p><p style="color:#24292f; text-align:start">優化後，互動遊戲簽到功能做到同類業務性能體驗 Top 級別，下面是優化後數據：</p><ul><li>首屏渲染速度：優化後提升首屏渲染速度<span>&nbsp;</span><strong>39%</strong>。</li><li>首屏骨架：骨架體積大小減少<span>&nbsp;</span><strong>44%</strong>（壓縮後減少<span>&nbsp;</span><strong>50%</strong>）。</li><li>首次加載總資源：資源總體積優化後，大小減少<span>&nbsp;</span><strong>69%</strong>。</li></ul><span id="OSC_h1_2"></span><h1>二、骨架</h1><p style="color:#24292f; text-align:start">骨架屏是指在頁面加載時，臨時顯示出頁面的主要結構，可以讓用戶在等待頁面加載完成時，得到視覺上的反饋，提升頁面的用戶體驗。<img alt="100.jpeg" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/100.jpeg" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start"><strong>骨架示意圖 vs 數據渲染</strong><img alt="109.jpeg" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/109.jpeg" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start"><img alt="108.jpeg" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/108.jpeg" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start">可以看出在接口返回數據之前，可以先使用骨架得到一些界面反饋。</p><span id="OSC_h1_3"></span><h1>三、緩存</h1><p style="color:#24292f; text-align:start">雖然骨架屏可以讓用戶在視覺上得到反饋，畢竟不是真實的數據，總體還是有一些簡陋，用戶也可能並不知道這塊區域實際渲染的是什麼樣的內容，若是網絡環境不好，很可能會長時間的停留在骨架屏階段，為了增強一些體感，使用緩存進一步對頁面進行優化。<img alt="107.jpeg" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/107.jpeg" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start">使用緩存渲染具備以下優勢：</p><ul><li>與骨架屏相比，緩存渲染十分接近用戶最終所見，因為每次接口返回數據都會更新緩存，用戶再次進入時看到的都是自己上次進入時的數據。</li><li>當用戶處在弱網或者斷網等不可抗力的環境中時，可以得到較為完整的頁面數據展示，可以很好減弱用戶環境帶來的網絡營銷。</li></ul><p style="color:#24292f; text-align:start">使用緩存注意事項：</p><ul><li>一些緩存渲染應屏蔽事件響應，避免造成不必要的報錯和客訴。比如商品的緩存渲染，由於商品存在下架、優惠券調整等情況，緩存的數據和實際數據會存在一定的偏差。</li><li>緩存渲染邏輯需要更加前置，不應該將緩存渲染的邏輯放在原本的位置，這樣會拖慢渲染的時機。</li></ul><span id="OSC_h1_4"></span><h1>四、接口後置</h1><p style="color:#24292f; text-align:start">瀏覽器對同一時間內的請求數量是有限制的，既併發請求限制。當一個頁面首次渲染時需要瀏覽器發起很多接口請求，用於填充頁面渲染需要的數據，若是對於頁面渲染時的請求數量不加以控制，便可能導致一些問題出現。</p><p style="color:#24292f; text-align:start">現在有 home 和 info 兩個接口，home 接口返回的數據是<strong>首屏渲染需要依賴</strong>的，info 接口返回的數據則<strong>不是首屏必須依賴</strong>的。假設現在還有一些其他請求佔據了併發請求限制的數量，導致 home 接口請求變慢。<img alt="105.jpeg" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/105.jpeg" referrerpolicy="no-referrer">若是 info 接口響應慢，長時間佔據這瀏覽器的請求進程，會導致頁面首屏渲染速度更慢，那麼就需要有個一套方案可以根據接口的優先級進行加載順序控制，可以將順序變為如下。<img alt="104.jpeg" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/104.jpeg" referrerpolicy="no-referrer"><strong>方案：</strong><span>&nbsp;</span>當頁面加載完成後一定時間後，進行低優先級接口的請求，或者觸發頁面的滾動、點擊等時立即進行接口請求。</p><p style="color:#24292f; text-align:start">此方案適用於：確定接口延遲加載並不會阻塞用戶的交互和操作。</p><p style="color:#24292f; text-align:start">將其封裝為一個 hooks，便於複用，直接先看代碼再解釋：</p><pre><code>import { useRM, createRM } from 'xxx'

const listen = (type: string, listener: () =&gt; void) =&gt; {
  const l = () =&gt; {
    listener()
    document.removeEventListener(type, l)
  }
  document.addEventListener(type, l)
}

const pageFlowModule = createRM(
  {
    assemble(state) {
      const reactionObserver = () =&gt; {
        state.isUserReactioned = true
      }

      ;['scroll', 'mousedown', 'touchstart'].forEach((type) =&gt; {
        listen(type, reactionObserver)
      })
      setTimeout(reactionObserver, 4000)
    },
  },
  { isUserReactioned: false },
)

pageFlowModule.actions.assemble()

export const usePageFlow = () =&gt; {
  const [state] = useRM(pageFlowModule)
  return state
}
</code></pre><p style="color:#24292f; text-align:start">使用：</p><pre><code>import { usePageFlow } from 'xxx'

const Demo = () =&gt; {
    const { isUserReactioned } = usePageFlow()

    const fetchHanlder = useCallback(() =&gt; {
        // 接口請求數據
    }, [])

    useEffect(() =&gt; {
        if(isUserReactioned) {
            fetchHanlder()
        }
    }, [isUserReactioned, fetchHanlder])

    return &lt;div&gt;{/* 渲染接口返回的數據 */}&lt;/div&gt;
}
</code></pre><p style="color:#24292f; text-align:start">從上面代碼可以看到，會將一些非首屏需要的請求後置，後置的接口可以在頁面加載完成 4s 後自動觸發調用，也會在用戶有觸屏、滾動頁面等行為的時觸發接口的調用。</p><span id="OSC_h1_5"></span><h1>五、骨架優化</h1><p style="color:#24292f; text-align:start">簽到和許願樹目前主文檔中除了骨架部分還包含了一些公共的 JS 和 CSS，對不同資源類型進行拆分、彙總後發現，不管是簽到還是許願樹，實際包含 HTML + JS 部分僅佔極小比例，大量的流量消耗在了 CSS 上。</p><p style="color:#24292f; text-align:start">對 HTML 中 CSS 部分再進行梳理發現，文件中包含的除了骨架的 CSS 部分和公共組件庫的 CSS 部分之外，還包含了大量彈框的 CSS。這三類中，骨架的 CSS 要保留，公共組件庫的 CSS 可以拆分但是難度較大，剩下的就是彈框或者非骨架部分的 CSS。</p><ul><li>需要把彈框部分組件做異步加載，保證預渲染的時候這部分 CSS 文件不會被加載到。</li><li>拆分骨架組件，把骨架組件從業務組件中剝離，預渲染的時候只渲染和加載骨架部分，不加載其餘主文件部分 CSS，進一步縮小骨架。<img alt="102.jpeg" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/102.jpeg" referrerpolicy="no-referrer"></li></ul><span id="OSC_h1_6"></span><h1>六、localStorage 性能問題</h1><p style="color:#24292f; text-align:start">在做優化之前，並未意識到 localStorage 所隱藏的性能問題，業務中使用了大量的本地存儲，使用 Performance 記錄一下存儲消耗的時間。</p><p style="color:#24292f; text-align:start">記錄核心代碼：</p><pre><code>export const setMallFlowStoreData = (data: any) =&gt; {
  performance.mark('start_localstorage_operation')
  // localStorage 操作.....
  performance.mark('end_localstorage_operation')

  performance.measure('localstorage_operation_duration', 'start_localstorage_operation', 'end_localstorage_operation')
}
</code></pre><p style="color:#24292f; text-align:start">輸出記錄的時間：</p><pre><code>const entries = performance.getEntriesByName('localstorage_operation_duration')
const TOTAL_TIME = entries.reduce((current, next) =&gt; {
return current + next?.duration
}, 0)

console.log('全部記錄:', entries, '共耗時:', TOTAL_TIME)
</code></pre><p style="color:#24292f; text-align:start">輸出結果：</p><p style="color:#24292f; text-align:start">可以看到通過 localStorage 進行一次存儲操作，大致需要耗時<span>&nbsp;</span><strong>0.2-0.5ms</strong>之間，若是當頁面存在大量的前端的存儲操作時，低端機型在存儲操作上消耗甚至達到<span>&nbsp;</span><strong>10-20ms</strong>，若是代碼寫的不合理，導致頁面 reload、反覆觸發獲取操作等情況，這個時間又將會成倍的增加。</p><p style="color:#24292f; text-align:start">接下來先一起看看為何會存在性能方面的問題和解決方案。</p><span id="OSC_h2_7"></span><h2>存儲數據</h2><p style="color:#24292f; text-align:start"><strong>問題：</strong></p><p style="color:#24292f; text-align:start">localStorage 的存儲是同步的操作，因此在存儲大量數據時，可能會導致阻塞 UI 線程，影響用戶體驗。</p><p style="color:#24292f; text-align:start"><strong>方案：</strong></p><p style="color:#24292f; text-align:start">核心思路便是將同步操作轉換為異步操作，這樣就不會阻塞 UI 線程。</p><ul><li>使用 Web Worker ，會增加一些項目維護的複雜度，且其是 HTML5 標準中新增的技術，存在一定的兼容性（ChatGPT 給的，應該是錯誤答案，並未在 MDN 中看到）。</li></ul><p style="color:#24292f; text-align:start"><img alt="201.png" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/201.png" referrerpolicy="no-referrer"></p><ul><li><p>使用 setTimeout、setInterval，兼容性絕對的好，但是並未從根本解決問題。</p></li><li><p>不用 localStorage，直接上 IndexDB，但是由於代碼項目原因，不能改動原有的太多邏輯。</p></li></ul><p style="color:#24292f; text-align:start">綜合解決方案和歷史原因，只能退而求其次選擇 setTimeout 的方式解決這個問題。</p><span id="OSC_h2_8"></span><h2>讀取數據</h2><p style="color:#24292f; text-align:start"><strong>問題：</strong></p><p style="color:#24292f; text-align:start">每次讀取 localStorage 數據時，都需要從磁盤中讀取數據，因此在處理大量數據時，可能會出現性能問題。</p><p style="color:#24292f; text-align:start"><strong>方案：</strong></p><p style="color:#24292f; text-align:start">可以將數據進行放到內存中緩存處理，在用戶的整個操作週期內只從 localStorage 獲取一次數據，需要注意的是每次對數據進行操作時，需要將 localStorage 和內存緩存的數據同步更新。</p><span id="OSC_h2_9"></span><h2>數據類型轉換</h2><p style="color:#24292f; text-align:start"><strong>問題：</strong></p><p style="color:#24292f; text-align:start">在存儲和讀取數據時，需要將數據進行序列化和反序列化操作。這些操作可能會導致性能問題。</p><p style="color:#24292f; text-align:start"><strong>方案：</strong></p><p style="color:#24292f; text-align:start">使用 JSON.stringify() 和 JSON.parse() 函數來處理數據的序列化和反序列化。</p><p style="color:#24292f; text-align:start">經過對 localStorage 存儲優化以後，在紅米 note 11 上面進行了簡單測試，首屏打開速度提升，對於整體提升首屏提升約<span>&nbsp;</span><strong>2%</strong>。</p><span id="OSC_h1_10"></span><h1>七、動效執行時機</h1><p style="color:#24292f; text-align:start">頁面存在漸入漸現的動效，在頁面首次加載時，由於漸現動效的存在，會延遲用戶感知該模塊，從而導致感覺頁面存在更多時間的白屏，動效如下：<span>&nbsp;</span><img alt="203.gif" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/203.gif" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start">核心問題是首次渲染直出 DOM 結構，不走漸現動效便可，這個比較偏向於邏輯處理，屬於體驗優化的範疇，主打的就是在後續有相關首屏動效時，有意識對其做一下處理，保證首屏首次渲染的完整度。</p><span id="OSC_h1_11"></span><h1>八、渲染模塊的取捨</h1><p style="color:#24292f; text-align:start">首先看一下兩種狀態各自的樣式：未簽到 VS 已簽到。<img alt="204.png" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/204.png" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start">簽到業務的日曆會根據用戶當天簽到狀態進行渲染，存在已簽到和未簽到兩種渲染邏輯，由於當前的架構限制，並不能在預渲染時感用戶的簽到狀態，導致日曆部分的渲染會滯後，嚴重影響頁面的首屏渲染速度。</p><p style="color:#24292f; text-align:start"><strong>第一版本優化</strong></p><p style="color:#24292f; text-align:start">將簽到狀態進行緩存，當用戶進入簽到時的大致流程如下：<img alt="207.jpeg" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/207.jpeg" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start">當用戶進入頁面時，會優先獲取緩存中的數據進行渲染，確保用戶可以第一時間看到日曆部分的渲染，這裏需要注意：1. 緩存需要結合用戶 token 一起判斷，避免造成切換賬號時造成數據污染。2. 若是用戶第一次進入或者當天未簽到，會使用系統時間作為小日曆上的數字展示，當用戶修改了系統時間設置時，日期判斷會存在誤差。</p><p style="color:#24292f; text-align:start">緩存數據必然會先於接口響應數據，因此頁面第一時間看到的肯定是緩存數據（沒有緩存數據，會默認使用未簽到數據）所渲染的頁面，那麼當接口響應完成時，需要使用真實的數據觸發頁面的 rerender，需要注意處理，避免造成頁面閃爍。</p><p style="color:#24292f; text-align:start">雖然這樣做可以提高頁面的渲染體感，當進入頁面時，頂部區域還是會存在一定時間的空白，畢竟還是需要執行 JS 後才能執行骨架渲染邏輯，本質提升速度為：接口響應時間 - JS 執行時間，在低端機表現會較為好一些，高端機體感並非太明顯。</p><p style="color:#24292f; text-align:start"><strong>第二版優化</strong></p><p style="color:#24292f; text-align:start">日曆部分由於已簽到和未簽到的樣式存在着較大的出入，不能像某些競品一樣：已籤、未籤的整體頁面佈局並未有區分，使用一套公用的渲染邏輯，這樣也導致簽到業務需要將渲染日曆部分的動作滯後，那麼核心就是怎麼解決這個問題。</p><p style="color:#24292f; text-align:start">綜合考慮後，決定將未簽到樣式作為預渲染時直接生成 DOM，這樣可以保證用戶未簽到的狀態下進入到頁面可以第一時間對的狀態，也可以更快的完成首屏的渲染。</p><p style="color:#24292f; text-align:start">若是用戶已簽到，便在此基礎之上覆用今日簽到的邏輯，就是會在簽到完成後展示一個小的動效，將小日曆變成大日曆的樣式。這樣做的好處可以是獲取到用戶真實狀態後，自動切換到大日曆狀態，效果如下。<img alt="309.gif" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/309.gif" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start">結合用戶行為分析：多數用戶一天不會多次訪問，也就是在即不怎麼犧牲高頻率訪問用戶的體驗之下，提高了絕大多數用戶的體驗。</p><span id="OSC_h1_12"></span><h1>九、首屏數據優先請求</h1><p style="color:#24292f; text-align:start"><strong>前置小知識：最大併發請求數</strong></p><p style="color:#24292f; text-align:start">為了避免瀏覽器過度佔用系統資源，瀏覽器對於同一域名下的請求數量是有一定限制的，也就是常見的瀏覽器最大請求數量。</p><p style="color:#24292f; text-align:start">以 Chrome 瀏覽器舉例：同一域名下，HTTP 協議最多允許同時存在 6 個 TCP 連接進行，HTTPS 協議最多為 4 個。</p><p style="color:#24292f; text-align:start"><strong>業務現狀</strong></p><p style="color:#24292f; text-align:start">簽到進入頁面共計加載許多接口。</p><p style="color:#24292f; text-align:start">其中首屏渲染需要的幾個核心接口如圖紅色標記所示，核心的接口滯後會導致頁面數據渲染的更慢，嚴重影響體驗，那麼到底影響多少呢？可以在瀏覽器 Network 中查看 Waterfall。<img alt="304.png" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/304.png" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start">核心接口是在其他完成後開始，是因為其沒有趕上瀏覽器第一批次接口請求隊列中，需要等待前面某些接口結束後，才會將其放到請求隊列中。</p><p style="color:#24292f; text-align:start"><strong>動作</strong></p><p style="color:#24292f; text-align:start">有了問題，接下來便是如何做：</p><ul><li><p>首先是制定方案，如何確保接口的請求可以搭上瀏覽器請求隊列的第一班車，本質是將之前散落在各個組件內的 useEffect 中的初始化邏輯進行提取，統一觸發。</p></li><li><p>梳理接口和首屏渲染的關聯度，確定哪些接口的優先級權重更高。</p></li></ul><p style="color:#24292f; text-align:start">核心代碼如下：</p><pre><code>export const StartModule = createRM(
  {
    init() {
      SigninTopModule?.actions?.getHomeData()
      AdModule?.actions?.reqAdInfoList()
      HomeModule?.actions?.getBubbleList()
    },
  }
)
</code></pre><p style="color:#24292f; text-align:start">在頁面初始化時執行 StartModule?.actions?.init()，將核心接口優化執行，通過控制接口請求順序，簽到業務在此提升了大致<span>&nbsp;</span><strong>6-8%</strong><span>&nbsp;</span>的首屏渲染速度。</p><span id="OSC_h1_13"></span><h1>十、字體使用和優化</h1><p style="color:#24292f; text-align:start">字體加載和優化是前端開發中的一個重要問題，特別是在移動端和低網絡狀況下。下面是一些字體加載和優化的技巧。</p><p style="color:#24292f; text-align:start"><strong>FOUT 問題</strong></p><p style="color:#24292f; text-align:start">通過設置 Font-Display 屬性可以控制字體加載時的顯示效果，包括 Auto、Swap、Block、FallBack 和 Optional 幾種模式，可以減少字體加載時間和防止文本閃爍。</p><p style="color:#24292f; text-align:start">設置屬性為 FallBack 時效果：<span>&nbsp;</span><img alt="33.gif" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/33.gif" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start">可以看到日期存在明顯的 FOUT（無樣式文本閃現）問題，設置 Swap 也是類似效果，並不符合預期。</p><p style="color:#24292f; text-align:start">設置屬性為 Block 時效果：<span>&nbsp;</span><img alt="22.gif" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/22.gif" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start">可以看到第一時間並沒有渲染日期，而是有點的短暫空白，因為其可以避免 FOUT，字體文件必須在後台下載完全後，文本才能顯示。</p><p style="color:#24292f; text-align:start">最終選擇了 font-display: block；效果會更好一些。</p><p style="color:#24292f; text-align:start">注意，並不是整個頁面都使用 Block 屬性，對於一些非首屏關鍵渲染的樣式，使用 fallback 更為合適一些，因為其會使用瀏覽器默認字體，所以還是需要結合業務、場景合理使用。</p><p style="color:#24292f; text-align:start"><strong>字體庫大小，你得懂</strong></p><p style="color:#24292f; text-align:start">先看一個 GPT 對於簽到業務常用字體庫打下的統計：</p><blockquote><p>DIN Condensed 字體庫的大小在幾百 KB 到幾 MB 之間 Helvetica Neue 字體庫的大小在幾 MB 到十幾 MB 之間</p></blockquote><p style="color:#24292f; text-align:start">也就是這兩種字體的大小，如果不加以處理，全部加載的大小在<strong>幾 MB 到十幾 MB</strong><span>&nbsp;</span>之間，對於前端項目而言，這是挺誇張的一件事。</p><p style="color:#24292f; text-align:start">可以和設計人員溝通，將字體庫中常用的字體導出，前端項目僅僅引入需要的字體就好，比如 DIN Condensed 字體都是使用在阿拉伯數字上，並不會在其他字上使用，那麼只需要將阿拉伯數字導出即可。比如漢字，根據《現代漢語通用字表》（GB/T 13000-2018），常用漢字（包括簡體字和繁體字）共計 3500 個，其中常用的一般是指前 1000 個左右的漢字，那麼在使用字體庫的時候，是不是可以默認只需要導出部分即可。</p><p style="color:#24292f; text-align:start">經過處理後的字體庫大小如下圖：<img alt="0981.png" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/0981.png" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start"><strong>字體庫數量，你得控制</strong></p><p style="color:#24292f; text-align:start">上面説了一個字體庫的大小是多大，就算是經過處理，最少也會有 30KB 大小，所以項目引入的字體種類是需要控制的，不能設計同學使用了多少種類字體設計，我們就要照單全收。</p><p style="color:#24292f; text-align:start">當設計同學新增字體庫時，如果字體使用在 3 次以內，是不是可以使用圖片來代替文字，或者使用現有的字體庫來平替。</p><span id="OSC_h1_14"></span><h1>十一、慎用三方庫</h1><p style="color:#24292f; text-align:start">業務中存在一些簡單的校驗、轉換和動效並不需要引入三方庫，尤其是因為一個較為簡單的功能引入了一個較為大且冷門的庫時，不僅會增加項目的打包體積，還會增加項目後續維護的溝通、學習成本。</p><p style="color:#24292f; text-align:start">例如下面一個簡單切換動效：<span>&nbsp;</span><img alt="210.gif" src="https://h5cdn.dewu.com/efe/ctoo-open-blog-admin/10569101/210.gif" referrerpolicy="no-referrer"></p><p style="color:#24292f; text-align:start">是一個比較常規的切換動效，卻在項目中引入了一個第三方庫來實現，該庫的使用也是有一些學習成本，因為其具備實現比較複雜的動效能力，在業務動效具備一定複雜度且非首屏的場景下，是可以考慮引入使用的，否則類似這種首屏便需要加載的動效，還是慎重。</p><p style="color:#24292f; text-align:start">上述的切換動效 CSS 實現代碼如下：</p><pre><code>@keyframes bigScale {
  0% {
    opacity: 0;
    transform: scale(0.95);
  }

  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes smallScale {
  0% {
    transform: scale(1);
    opacity: 1;
  }

  to {
    transform: scale(0.95);
    opacity: 0;
  }
}

.squareInCenter {
  animation: 0.3s linear 0s 1 normal forwards running bigScale;
}

.squareOutCenter {
  animation: 0.3s linear 0s 1 normal forwards running smallScale;
}
</code></pre><p style="color:#24292f; text-align:start">在業務開發的過程中，尤其是 C 端的頁面，在實現功能時對於引入額外的庫是一件需要十分謹慎的事情，在內部就看到不少項目在引入關於日期處理方面的庫時，DayJS、MomentJS 同時都會引用到項目中，B 端項目都不能忍，更何況 C 端項目。</p><span id="OSC_h1_15"></span><h1>十二、總結</h1><p style="color:#24292f; text-align:start">本文僅僅介紹得物前端增長團隊在互動遊戲側一些體驗優化實踐心得，後續還在不斷迭代和優化，將實踐經驗應用擴大至多個業務中，將整個互動遊戲性能體驗優化至 TOP 級別。</p><p style="color:#24292f; text-align:start">*<strong>文/來駿</strong></p><p style="color:#24292f; text-align:start">&nbsp;</p><p style="color:#252933; text-align:start">本文屬得物技術原創，更多精彩文章請看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.dewu.com" rel="nofollow" target="_blank">得物技術官網</a></p><p style="color:#252933; text-align:start">未經得物技術許可嚴禁轉載，否則依法追究法律責任！</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 23 Feb 2024 06:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/11044519</guid>
            <link>https://my.oschina.net/u/5783135/blog/11044519</link>
            <author>
                <![CDATA[得物技術]]>
            </author>
        </item>
    </channel>
</rss>
