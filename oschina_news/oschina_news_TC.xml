<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 29 Jan 2024 07:26:35 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[百川智能發佈超千億大模型 Baichuan 3，中文評測超越 GPT-4]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>1 月 29 日，百川智能發佈超千億參數的大語言模型 Baichuan 3。</p><p>鏈接：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.baichuan-ai.com%2F" target="_blank">https://www.baichuan-ai.com/</a></u></em></p><p>據稱在多個權威通用能力評測如 CMMLU、GAOKAO 和 AGI-Eval 中，Baichuan 3 都展現了出色的能力，<strong>尤其在中文任務上更是超越了 GPT-4</strong>。而在數學和代碼專項評測如 MATH、HumanEval 和 MBPP 中同樣表現出色。</p><p><img src="https://oscimg.oschina.net/oscnet/up-4943e22112dc10bfbb4d4346b8b76cb1448.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-df748cfd41a08e601ad56b92c70ee27d974.png" referrerpolicy="no-referrer"></p><p>不僅如此，其在對邏輯推理能力及專業性要求極高的 MCMLE、MedExam、CMExam 等權威醫療評測上的中文效果同樣超過了 GPT-4，是中文醫療任務表現最佳的大模型。Baichuan 3 還突破「迭代式強化學習」技術，進一步提升了語義理解和生成能力，在詩詞創作的格式、韻律、表意等方面表現優異，領先於其他大模型。</p><p>在測試邏輯推理能力的 MCMLE、MedExam、CMExam 等醫療評測上，Baichuan 3 的中文效果同樣號稱超過了 GPT-4，是「中文醫療任務表現最佳的大模型」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c58c3189e812e73b513f6f5f311965c43f5.png" referrerpolicy="no-referrer"></p><p>據介紹，百川智能在 Baichuan 3 訓練過程中提出了「動態數據選擇」、「重要度保持」以及「異步 CheckPoint 存儲」等多種技術手段及方案，穩定訓練時間達到一個月以上，故障恢復時間不超過 10 分鐘。</p><p>百川智能表示，Baichuan 3 還突破「迭代式強化學習」技術，進一步提升了語義理解和生成能力，在詩詞創作的格式、韻律、表意等方面進行了提升，對於宋詞這種格式多變，結構深細、韻律豐富的高難度文體，生成的內容亦能工整對仗、韻腳和諧，讓每個人都能創作出詠物、寄思的五言律詩、七言絕句，寫下的言志、抒情的「沁園春」、「定風波」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-8959061fdec6f20cfdb40450da65be44c34.jpg" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-200b2ab4aedbbf84adc97af95557a2b8c51.jpg" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 06:57:22 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276843</guid>
            <link>https://www.oschina.net/news/276843</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 8 動態 PGO 簡析]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h2_1"></span><h2>原文：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fmp.weixin.qq.com%2Fs%253F__biz%253DMzg5NDYwNjU4MA%253D%253D%2526mid%253D2247486038%2526idx%253D1%2526sn%253D9c070c8e07acfe85269835a709cd5b6d%2526chksm%253Dc01c47cdf76bcedb8362846a829faf4c1853f4abcbe9708d6551264387f3795f7cb3e3e54828%2526token%253D1735800899%2526lang%253Dzh_CN%2523rd" target="_blank" rel="nofollow">.NET8 動態 PGO 簡析</a></u></h2><p><strong>作者：江湖評談，公眾號同名：江湖評談 (Jianghupt）,歡迎關注。</strong></p><p>&nbsp;</p><span id="OSC_h2_2"></span><h2><strong>前言</strong></h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">.NET8 在性能方面的驚人飛躍，遠超過去所取得成就，這在很大程度上歸功於動態 PGO。【 I dare say the improvements in .NET 8 in the JIT are an incredible leap beyond what was achieved in the past, in large part due to dynamic PGO…官方原話】</p><span id="OSC_h2_3"></span><h2><strong>詳細</strong></h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在早期的.NET 方法只編譯一次，在第一次調用該方法的時候，JIT 啓動以生成該方法的代碼。後續的調用以及當前的調用都會使用 JIT 生成的代碼來運行程序，這是一個簡單的無衝突的時代，但是也是一個原始的時代。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">簡單和原始在於，方法只編譯一次，再無其它可能性。無衝突在於，尤其是.NET 開源時代，分層，動態 PGO，OSR 等等都會破壞原有的代碼邏輯，造成一定的複雜度，而早期的.NET 不存在這種狀況。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">優化是編譯器裏面最耗時的操作，編譯器可以花費超長的時間來優化一段代碼或者一個指令集。但是程序使用者，或者軟件使用者，或者軟件開發者沒有超長的時間去等待編譯器慢慢的完成一個方法的編譯。這是很致命的。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">在編譯時間和代碼質量上需要權衡利益得失。好的代碼質量，需要更長的時間去編譯，差的代碼質量，則編譯更快。這取決於 JIT 本身是如何工作的。大量的事實證明，在程序中大部分方法都只是調用一次或者幾次，耗費很多的時間去優化這些方法。優化的時間反而超過了這些方法本身運行的時間，這完全是得不償失的。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">為瞭解決這種情況，.NET Core3.0 中引入了新的 JIT 功能，稱之為分層編譯。通過分層一個方法可能會被編譯多次，在第一次編譯的時候被編譯為 0 層 (tier0),在 0 層當中 JIT 優先考慮的是代碼編譯的速度，而不是質量。在 0 層的編譯特點是，最小優化 (min opts，但是依然會保持一些優化)，之所以這樣，是因為它需要更快速的編譯而不是更好質量的代碼。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">0 層之後，會有 1 層 (tier1)。這一層是基於 0 層的代碼運行情況而來，比如 JIT 收集到 0 層的某個方法，運行的時間超過了 60ms,運行的次數超過了 2 次 (.NET8 R2R 函數進入分層編譯隊列的閾值，比如 Console.ReadLine 方法)，那麼 JIT 就會把 0 層的這個方法放入到分層編譯隊列，進行編譯之後該方法就會進一步優化形成了 1 層 (tier1),此後調用該方法和當前調用該方法都會調用 1 層的代碼，而棄用了 0 層的代碼。</p><span id="OSC_h2_4"></span><h2><strong>神來之筆</strong></h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">這裏需要注意了，只有極少數的符合閾值的方法才能夠進入 1 層。這樣其實是 0 層和 1 層共生運行一個程序的過程，既保證了代碼的質量，又保證了程序運行的速度，這是.NET8 的一個神奇點。但是它的好處遠不止於此。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>神奇點 1</strong>，代碼從 0 層被優化到 1 層，JIT 在 0 層的時候就會收集到代碼的信息，並且在編譯到 1 層的時候，會進行相對應的優化。如果 JIT 直接從一開始把代碼編譯到 1 層，那麼可能無法擁有這樣的優化。舉個例子，比如 0 層有個方法，它裏面有個靜態只讀字段，0 層編譯的時候它一定被初始化過了。JIT 就可以根據它收集到的初始化的內容，在生成 1 層代碼的時候進行相對應的優化。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>神奇點 2</strong>，有一種情況，一個方法可能只運行了寥寥幾次或者只有一次。但是它裏面有 for 循環這種代碼，一直不停的運行。如果沒有分層編譯，它直接進入了 Tier1，這樣很粗暴的方式明顯不行。為瞭解決這個問題，.NET 中引入了 OSR(On-Stack Replacement)，當一個循環計數達到一定的閾值，JIT 將編譯該方法的新優化版本，此後從最小代碼優化版本調到新優化版本中繼續執行。非常巧妙的一個方式。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>神奇點 3，</strong>基於配置文件的靜態優化 (PGO) 已經存在了幾十年。適用於多種環境和語言，比如 C/C++,Python,Java 等等。這種原理主要是，在一些代碼關鍵地方收集信息，下次運行根據這些信息重新構建應用程序。因為做到這些需要一些編譯器或者其它一些配置，稱之為靜態 PGO。而通過分層，Tier0 優化到 Tier1 的基礎上，所有的都是 JIT 自行收集，自行判斷，自行優化，無須任何額外的開發工作，或者基礎設施的配置，它就是動態 PGO。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>神奇點 4，</strong>把 R2R 納入到分層編譯。R2R 是一個預編譯鏡像，它裏面存儲的 Native Header 是完全的二進制運行代碼，它跟 AOT 的不同在於它運行了一定的次數之後，會被 JIT 進行重新優化編譯。如果不把它納入到分層編譯，這對動態 PGO 的性能是一個很大的阻礙。</p><span id="OSC_h2_5"></span><h2><strong>編譯分支和例子</strong></h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">一般的來説，即時編譯分為兩個分支。即源碼編譯和 R2R(它大量的應用在 System.Private.CoreLib.dll 裏面) 預編譯 (AOT 不屬於即時編譯，這裏需要注意)。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">源碼編譯即所謂未 PreJIT 編譯，0 層一般都是未優化 (not optimized)，未檢查 (not instrumented)，在 0 層進行了檢查但是未優化，此後在 1 層生成優化性代碼。R2R 即所謂 PreJIT 編譯，因為 R2R 可能已經被優化過了。所以 0 層它是已優化，未檢查，會在 0 層進行檢查。到了 1 層已優化已檢查，然後會再次生成一個優化性的代碼，也稱之為 1 層 (但其實已經是 2 層，了)。參考如下圖:</p><div><img height="629" src="https://pic2.zhimg.com/80/v2-080f882fe065fc243c87fbd61f80c1f5_720w.webp" width="1080" referrerpolicy="no-referrer"></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">下面看下 Tier0 優化的一個例子，上面説到 Tier0 是確保編譯速度，而忽略代碼質量。但是不代表 Tier0 不進行代碼優化。下面就是 0 層代碼優化的例子。</p><div><pre><code class="language-text">// dotnet run -c Release -f net8.0

MaybePrint(42.0);

static void MaybePrint&lt;T&gt;(T value)
{
    if (value is int)
        Console.WriteLine(value);
}</code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">0 層 JIT 可以進行一定常量摺疊 (在編譯的時候評估常量而不是在運行的時候),這可以讓 0 層生成更少的代碼。一般的來説，0 層 JIT 大部分時間都是與虛擬機交互。如果能夠減少一些永遠不會使用的分支，可以大幅度提高編譯的時間，也能獲得更好的代碼質量。將 DOTNET_JitDisasm 設置為 MaybePrint，運行</p><div><pre><code class="language-text">dotnet run -c Release -f net7.0</code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">0 層代碼如下：</p><div><pre><code class="language-text"> Assembly listing for method Program:&lt;&lt;Main&gt;$&gt;g__MaybePrint|0_0[double](double)
; Emitting BLENDED_CODE for X64 CPU with AVX - Windows
; Tier-0 compilation
; MinOpts code
; rbp based frame
; partially interruptible

G_M000_IG01:                ;; offset=0000H
       55                   push     rbp
       4883EC30             sub      rsp, 48
       C5F877               vzeroupper
       488D6C2430           lea      rbp, [rsp+30H]
       33C0                 xor      eax, eax
       488945F8             mov      qword ptr [rbp-08H], rax
       C5FB114510           vmovsd   qword ptr [rbp+10H], xmm0

G_M000_IG02:                ;; offset=0018H
       33C9                 xor      ecx, ecx
       85C9                 test     ecx, ecx
       742D                 je       SHORT G_M000_IG03
       48B9B877CB99F97F0000 mov      rcx, 0x7FF999CB77B8
       E813C9AE5F           call     CORINFO_HELP_NEWSFAST
       488945F8             mov      gword ptr [rbp-08H], rax
       488B4DF8             mov      rcx, gword ptr [rbp-08H]
       C5FB104510           vmovsd   xmm0, qword ptr [rbp+10H]
       C5FB114108           vmovsd   qword ptr [rcx+08H], xmm0
       488B4DF8             mov      rcx, gword ptr [rbp-08H]
       FF15BFF72000         call     [System.Console:WriteLine(System.Object)]

G_M000_IG03:                ;; offset=0049H
       90                   nop

G_M000_IG04:                ;; offset=004AH
       4883C430             add      rsp, 48
       5D                   pop      rbp
       C3                   ret

; Total bytes of code 80</code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">System.Console:WriteLine 裏面的代碼都是可以進行優化的，但是.NET7 裏面 0 層它解析出了 MaybePrint，並未意識到其根本不會執行。現在在.NET8 裏面 JIT 意識到分支永遠不會執行，所以生成如下：</p><div><pre><code class="language-text">; Assembly listing for method Program:&lt;&lt;Main&gt;$&gt;g__MaybePrint|0_0[double](double) (Tier0)
; Emitting BLENDED_CODE for X64 with AVX - Windows
; Tier0 code
; rbp based frame
; partially interruptible

G_M000_IG01:                ;; offset=0x0000
       push     rbp
       mov      rbp, rsp
       vmovsd   qword ptr [rbp+0x10], xmm0

G_M000_IG02:                ;; offset=0x0009

G_M000_IG03:                ;; offset=0x0009
       pop      rbp
       ret

; Total bytes of code 11</code></pre></div><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h1_6"></span><h1>歡迎關注公眾號：<strong>江湖評談 (jianghupt）</strong></h1><h2><img alt="" height="430" src="https://oscimg.oschina.net/oscnet/up-011ec0cc18092e37225986048b70675dae9.png" width="430" referrerpolicy="no-referrer"></h2></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 06:42:22 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5407571/blog/10983721</guid>
            <link>https://my.oschina.net/u/5407571/blog/10983721</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 框架 Furion v4.9.1.27，組建團隊|多套商業應用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在 2023 年這一整年裏，全身心投入 Furion 研發工作，僅在幾個特定日子短暫離線，幾乎全年無休。每天都要處理來自三個微信平台的 3.5 萬 Furion 用戶（含重疊）的問題。儘管工作強度大，但樂在其中。為了服務好 Furion 的用戶，經常工作至凌晨 3 點，然後又在早晨 7、8 點起牀繼續工作。</p><p>在商業運營方面，Furion 也取得了顯著的成績。除了通過商業化運營獲得營收外，我們還獲得了四家企業的資金支持：一家企業捐贈了 10 萬人民幣，另一家給予了 18 萬人民幣，第三家國外企業慷慨地提供了 140 萬人民幣，最後一家企業更是投資了 800 萬人民幣與我們一起成立企業。這為我們提供了充足的資金，使得我們能夠組建 Furion 獨立企業和運營團隊，全職投入 Furion v5 版本的研發和全新的商業化產品——<strong>Furion 運維平台和 Furon ERP 平台</strong>的開發工作。</p><p>有了獨立團隊，我們堅信能為用戶提供更好的產品和服務，我們將繼續努力，不斷優化和完善 Furion 產品，以滿足用戶的需求和期望。</p><p><img height="1315" src="https://oscimg.oschina.net/oscnet/up-0fc26ab3650d1bd387c3a1503020f84ac37.png" width="1695" referrerpolicy="no-referrer"></p><h2>基於 Furion 新【應用產品】</h2><p><img src="https://foruda.gitee.com/images/1702051807491982108/c878412b_974299.png" referrerpolicy="no-referrer"></p><p><img height="969" src="https://oscimg.oschina.net/oscnet/up-138b284cc799264335cd162bd5b19a3bf94.png" width="1080" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-32bf9f7fe9a78e47b37f182b0579cd91103.jpg" width="1303" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-c4aff7a5a287df1b8a6032200fdaa702012.jpg" width="1679" referrerpolicy="no-referrer"></p><p><img src="https://foruda.gitee.com/images/1702051839269205309/8092dfcb_974299.png" referrerpolicy="no-referrer"></p><p><img height="1148" src="https://oscimg.oschina.net/oscnet/up-e5086f1e88986832d8a09e173382fd22759.png" width="1280" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-faa837fb48e4b82aed163253e612d44243d.jpg" width="1620" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-c36f80b6da89dd357e11876a7576cfdb262.jpg" width="1620" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-c57ab061d54fcb52ce2c8c4428d24e9622e.jpg" width="1620" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-af06e2d0e4bcf031d3fcbf087b56798455f.jpg" width="1620" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-d50ee6878a6bb36f8e1dd712430555d68b1.jpg" width="1620" referrerpolicy="no-referrer"></p><p><img height="867" src="https://oscimg.oschina.net/oscnet/up-25d5b79b4e4bddc657b44ada3dc1ebc5ee7.png" width="1540" referrerpolicy="no-referrer"></p><p><img height="1042" src="https://oscimg.oschina.net/oscnet/up-82e7e8baa0afe4cb5016b923b2309cb2aad.jpg" width="1398" referrerpolicy="no-referrer"></p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-62bef282dc23be0cdbe8fa45be715763838.jpg" width="1188" referrerpolicy="no-referrer"></p><p><img height="1513" src="https://oscimg.oschina.net/oscnet/up-45cf4bc15dd988f02b7c467a6441efa809c.png" width="685" referrerpolicy="no-referrer"></p><p><img height="7444" src="https://oscimg.oschina.net/oscnet/up-5947309d7b1bcd6751dee434527e12571e8.jpg" width="1080" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><img height="1321" src="https://oscimg.oschina.net/oscnet/up-a2ed7a6b24ec70ded231e12d741380b124a.png" width="1718" referrerpolicy="no-referrer"></p><h2>項目信息</h2><ul><li>Gitee：<strong><a href="https://gitee.com/dotnetchina/Furion">https://gitee.com/dotnetchina/Furion</a></strong></li><li>Github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FMonkSoul%2FFurion" target="_blank">https://github.com/MonkSoul/Furion</a></li><li>文檔：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffurion.net" target="_blank">https://furion.net</a></strong></li></ul><h2>本期更新</h2><ul><li><p><strong>新特性</strong></p><ul><li>[新增] 遠程請求支持自動處理狀態碼<span>&nbsp;</span><code>301、302</code><span>&nbsp;</span>和響應頭帶<span>&nbsp;</span><code>Location</code><span>&nbsp;</span>4.9.1.27<span>&nbsp;</span>⏱️2024.01.29<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/65aa221ee6b99904b5349dfdad34b701296c0f5c">65aa221</a></li><li>[新增]<span>&nbsp;</span><strong>事件總線支持配置處理程序只消費一次</strong><span>&nbsp;</span>4.9.1.24<span>&nbsp;</span>⏱️2024.01.19<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/dc882ebc8f8e37977b4a55963711b0fa86f2c741">dc882eb</a></li><li>[新增] 任務隊列支持配置重試次數、重試間隔<span>&nbsp;</span>4.9.1.24<span>&nbsp;</span>⏱️2023.01.19<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/1c274347517671e7611a8c578a05ce273248700d">1c27434</a></li><li>[新增] 監聽日誌<span>&nbsp;</span><code>Monitor</code><span>&nbsp;</span>可配置序列化是否處理<span>&nbsp;</span><code>long</code><span>&nbsp;</span>轉<span>&nbsp;</span><code>string</code><span>&nbsp;</span>4.9.1.23<span>&nbsp;</span>⏱️2023.01.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8WDH9">#I8WDH9</a></li><li>[新增]<span>&nbsp;</span><code>HTTP</code><span>&nbsp;</span>響應報文頭輸出<span>&nbsp;</span><code>Furion</code><span>&nbsp;</span>版本<span>&nbsp;</span>4.9.1.23<span>&nbsp;</span>⏱️2024.01.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/a4a49d68d0ad6f0473ba45090cc7881900d8ad2b">a4a49d6</a></li><li>[新增] 任務隊列支持配置<span>&nbsp;</span><code>Concurrent</code><span>&nbsp;</span>串行執行<span>&nbsp;</span>4.9.1.22<span>&nbsp;</span>⏱️2024.01.14<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8VXFV">#I8VXFV</a></li><li>[新增]<span>&nbsp;</span><code>Serve.RunAsync</code><span>&nbsp;</span>異步啓動主機方法支持<span>&nbsp;</span>4.9.1.21<span>&nbsp;</span>⏱️2024.01.12<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8V0J8">#I8V0J8</a></li><li>[新增]<span>&nbsp;</span><code>Oops.Text(errorCode)</code><span>&nbsp;</span>靜態方法，可根據錯誤碼獲取錯誤消息<span>&nbsp;</span>4.9.1.18<span>&nbsp;</span>⏱️2024.01.08<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/f25125c06d902709025be2420665cecb6e7fb520">f25125c</a></li><li>[新增] 定時任務<span>&nbsp;</span><code>IJobPersistence</code><span>&nbsp;</span>持久化接口<span>&nbsp;</span><code>OnExecutionRecord</code><span>&nbsp;</span>方法實現作業運行記錄持久化<span>&nbsp;</span>4.9.1.16<span>&nbsp;</span>⏱️2024.01.01<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4d4d492fc91fe312ca30770ec30a6f692fccbf0e">4d4d492</a></li><li>[新增] 定時任務作業調度計劃<span>&nbsp;</span><code>OnExecutionRecord</code><span>&nbsp;</span>事件，可監聽作業運行記錄<span>&nbsp;</span>4.9.1.16<span>&nbsp;</span>⏱️2024.01.01<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4d4d492fc91fe312ca30770ec30a6f692fccbf0e">4d4d492</a></li><li>[新增]<span>&nbsp;</span><code>EFCore</code><span>&nbsp;</span>數據庫操作<span>&nbsp;</span><code>EntityNotTenant</code><span>&nbsp;</span>和<span>&nbsp;</span><code>EntityBaseNotTenant</code><span>&nbsp;</span>實體基類<span>&nbsp;</span>4.9.1.11<span>&nbsp;</span>⏱️2023.12.04<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/b62bfb1a18d57f7fe3dd9548aa02372025dfed85">b62bfb1</a></li><li>[新增] 控制枱日誌支持啓動時同步<span>&nbsp;</span><code>ConsoleFormatterExtendOptions</code><span>&nbsp;</span>配置<span>&nbsp;</span>4.9.1.10<span>&nbsp;</span>⏱️2023.12.04<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/a96fe08336dbf99b7cf5cc5e6ec304adf7413a4b">a96fe08</a></li><li>[新增] 定時任務支持取消正在運行的作業程序<span>&nbsp;</span>4.9.1.9<span>&nbsp;</span>⏱️2023.12.03<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/3cc9be0da1eabc0f3baaa7801b115bb2909bb085">3cc9be0</a></li><li>[新增]<span>&nbsp;</span><code>JSON.IsValid(jsonString)</code><span>&nbsp;</span>判斷<span>&nbsp;</span><code>JSON</code><span>&nbsp;</span>字符串有效性<span>&nbsp;</span>4.9.1.8<span>&nbsp;</span>⏱️2023.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/22bc69bd4a445f81833c082da7c99f4a5c518012">22bc69b</a></li><li>[新增]<span>&nbsp;</span><code>axios-utils.ts</code><span>&nbsp;</span>解析<span>&nbsp;</span><code>token</code><span>&nbsp;</span>信息導出方法<span>&nbsp;</span>4.9.1.7<span>&nbsp;</span>⏱️2023.11.29<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/ae8c3e8c47494fa3ba37d2b076d54f9f2c016252">ae8c3e8</a></li><li>[新增] 規範化處理自動過濾<span>&nbsp;</span><code>SSE</code><span>&nbsp;</span>請求、文件請求、圖片請求<span>&nbsp;</span>4.9.1.6<span>&nbsp;</span>⏱️2023.11.22<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8IP6D">#I8IP6D</a></li><li>[新增]<span>&nbsp;</span><code>[AppDbContext]</code><span>&nbsp;</span>特性支持<span>&nbsp;</span><code>UseSnakeCaseNaming</code><span>&nbsp;</span>屬性配置表名使用蛇形命名<span>&nbsp;</span>4.9.1.5<span>&nbsp;</span>⏱️2023.11.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8HGR2">#I8HGR2</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/863">!863</a></li><li>[新增] 時間戳模型綁定器將時間戳轉換為<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>類型<span>&nbsp;</span>4.9.1.5<span>&nbsp;</span>⏱️2023.11.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/df3053cf081d5e4d8eb63d567ed95c45267e0969">df3053c</a></li><li>[新增]<span>&nbsp;</span><code>Newtonsoft.Json</code><span>&nbsp;</span>自動將時間戳轉換為<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>類型<span>&nbsp;</span>4.9.1.3<span>&nbsp;</span>⏱️2023.11.17<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/78a589d99eb5985b576e4c96acd6e4890391d6ff">78a589d</a></li><li>[新增]<span>&nbsp;</span><code>System.Text.Json</code><span>&nbsp;</span>自動將時間戳轉換為<span>&nbsp;</span><code>DateTime/DateTimeOffset</code><span>&nbsp;</span>類型<span>&nbsp;</span>4.9.1.2<span>&nbsp;</span>⏱️2023.11.17<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/abd5196f5c5160a5df96dad80c7c5aa51b96d5b9">abd5196</a></li><li>[新增]<span>&nbsp;</span><code>IRepositoryFactory&lt;TEntity, TDbContextLocator&gt;</code><span>&nbsp;</span>倉儲功能，解決在<span>&nbsp;</span><code>Blazor</code><span>&nbsp;</span>中使用<span>&nbsp;</span><code>EFCore</code><span>&nbsp;</span>問題<span>&nbsp;</span>4.9.1.1<span>&nbsp;</span>⏱️2023.11.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4285ec0b8debc2d71c7f978126cb3dc394a8ad30">4285ec0</a><span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Faspnet%2Fcore%2Fblazor%2Fblazor-ef-core%3Fview%3Daspnetcore-7.0" target="_blank">文檔説明</a></li><li>[新增] 補償策略模塊功能<span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/tree/v4/framework/Furion/RescuePolicy">【源碼地址】</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/dfc63e7f0ffd2e03653f11a3e49a21646902ddc4">dfc63e7</a></li></ul></li><li><p><strong>突破性變化</strong></p><ul><li>[新增]<span>&nbsp;</span><strong>事件總線支持配置處理程序只消費一次</strong><span>&nbsp;</span>4.9.1.24<span>&nbsp;</span>⏱️2024.01.19<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/dc882ebc8f8e37977b4a55963711b0fa86f2c741">dc882eb</a></li><li>[調整] 監聽日誌默認不進行序列化<span>&nbsp;</span><code>long</code><span>&nbsp;</span>轉<span>&nbsp;</span><code>string</code><span>&nbsp;</span>處理<span>&nbsp;</span>4.9.1.23<span>&nbsp;</span>⏱️2024.01.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8WDH9">#I8WDH9</a></li><li>[新增] 定時任務<span>&nbsp;</span><code>IJobPersistence</code><span>&nbsp;</span>持久化接口<span>&nbsp;</span><code>OnExecutionRecord</code><span>&nbsp;</span>方法實現作業運行記錄持久化<span>&nbsp;</span>4.9.1.16<span>&nbsp;</span>⏱️2024.01.01<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/4d4d492fc91fe312ca30770ec30a6f692fccbf0e">4d4d492</a></li><li>[調整]<span>&nbsp;</span><strong>動態<span>&nbsp;</span><code>WebAPI</code><span>&nbsp;</span>生成版本控制路由規則，版本分隔符默認由<span>&nbsp;</span><code>@</code><span>&nbsp;</span>調整為<span>&nbsp;</span><code>v</code></strong><span>&nbsp;</span>4.9.1.14<span>&nbsp;</span>⏱️2023.12.14<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/7677d0fa615d3ccdf784542b5702cd1d6165e78f">7677d0f</a></li><li>[升級]<span>&nbsp;</span><code>Serilog</code><span>&nbsp;</span>拓展包依賴至<span>&nbsp;</span><code>8.0.0</code><span>&nbsp;</span>版本，<strong>移除<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>的<span>&nbsp;</span><code>IWebHostBuilder.UseSerilogDefault</code><span>&nbsp;</span>拓展方法</strong><span>&nbsp;</span>4.9.1.1<span>&nbsp;</span>⏱️2023.11.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/5ab3e43722a298db56a86792dde301adf1f3fe7f">5ab3e43</a></li><li>[升級]<span>&nbsp;</span><strong>框架底層適配<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>正式版</strong><span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15</li><li>[升級]<span>&nbsp;</span><strong>框架腳手架適配<span>&nbsp;</span><code>.NET8.0</code><span>&nbsp;</span>正式版</strong><span>&nbsp;</span>4.9.1<span>&nbsp;</span>⏱️2023.11.15</li></ul></li><li><p><strong>問題修復</strong></p><ul><li>[修復] 動態<span>&nbsp;</span><code>WebAPI</code><span>&nbsp;</span>設置<span>&nbsp;</span><code>VersionInFront: false</code><span>&nbsp;</span>異常問題<span>&nbsp;</span>4.9.1.26<span>&nbsp;</span>⏱️2024.01.12<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8ZGGH">#I8ZGGH</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8ZDXD">#I8ZDXD</a><span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8ZFNG">#I8ZFNG</a></li><li>[修復] 啓用<span>&nbsp;</span><code>WithStackFrame</code><span>&nbsp;</span>配置後可能出現空異常問題<span>&nbsp;</span>4.9.1.21<span>&nbsp;</span>⏱️2024.01.12<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/c8be745dd119c73c9230dbfdf6150ddbfcd16e81">c8be745</a></li><li>[修復] 動態<span>&nbsp;</span><code>WebAPI</code><span>&nbsp;</span>配置<span>&nbsp;</span><code>ForceWithRoutePrefix</code><span>&nbsp;</span>不包含<span>&nbsp;</span><code>Module</code><span>&nbsp;</span>問題<span>&nbsp;</span>4.9.1.19<span>&nbsp;</span>⏱️2024.01.09<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/87849d1ef1dc098e702db66f47490bd7e75495d5">87849d1</a></li><li>[修復] 規範化文檔加載文檔註釋時如果存在類完全限定名一致出現重複鍵異常問題<span>&nbsp;</span>4.9.1.17<span>&nbsp;</span>⏱️2024.01.04<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8TJZ0">#I8TJZ0</a></li><li>[修復] 動態<span>&nbsp;</span><code>WebAPI</code><span>&nbsp;</span>因<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/d9810bece0a1d1108e134cfdae2fdd868554f769">1dc7ea7</a><span>&nbsp;</span>提交導致<span>&nbsp;</span><code>AsLowerCamelCase</code><span>&nbsp;</span>配置失效問題<span>&nbsp;</span>4.9.1.15<span>&nbsp;</span>⏱️2023.12.20<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/d9810bece0a1d1108e134cfdae2fdd868554f769">d9810be</a></li><li>[修復] 粘土對象轉換成<span>&nbsp;</span><code>Dictionary</code><span>&nbsp;</span>對象不支持遞歸問題<span>&nbsp;</span>4.9.1.13<span>&nbsp;</span>⏱️2023.12.11<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/issues/I8NFT4">#I8NFT4</a></li><li>[修復]<span>&nbsp;</span><code>Scoped.CreateAsync</code><span>&nbsp;</span>內部異常上層應用不能捕獲問題<span>&nbsp;</span>4.9.1.12<span>&nbsp;</span>⏱️2023.12.08<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/0a89a434223c45d84b8908f6aff1bf1d7528193a">0a89a43</a></li><li>[修復]<span>&nbsp;</span><code>Scoped.CreateUowAsync</code><span>&nbsp;</span>內部異常上層應用不能捕獲問題<span>&nbsp;</span>4.9.1.8<span>&nbsp;</span>⏱️2023.11.30<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/3c859e83c0ed6f07fcf191973fe465599a823224">3c859e8</a></li><li>[修復] 定時任務設置觸發器<span>&nbsp;</span><code>Result</code><span>&nbsp;</span>後作業執行異常不能重置問題<span>&nbsp;</span>4.9.1.7<span>&nbsp;</span>⏱️2023.11.24<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/147215f1631f58fca900f17cca5695f9431555e5">147215f</a></li><li>[修復]<span>&nbsp;</span><code>JWTEncryption.GetJWTSettings()</code><span>&nbsp;</span>獨立使用時無法獲取自定義配置<span>&nbsp;</span>4.9.1.4<span>&nbsp;</span>⏱️2023.11.18<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/c045e084670a98f71d5ea5ed55ca5cbbfc981e0b">c045e08</a></li></ul></li><li><p><strong>其他更改</strong></p><ul><li>[調整] 定時任務<span>&nbsp;</span><code>GC</code><span>&nbsp;</span>垃圾回收器回收時機，降低長時間內存佔用<span>&nbsp;</span>4.9.1.23<span>&nbsp;</span>⏱️2024.01.16<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/f43fc25dc59c5e539844048d2da4bce4153e3063">f43fc25</a></li><li>[調整] 模板引擎編譯性能，提升模板緩存解析速度<span>&nbsp;</span>4.9.1.16<span>&nbsp;</span>⏱️2023.12.27<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/commit/d7ea423f272de141a351d7f7f4fb29ae0d9b1df6">d7ea423</a></li></ul></li><li><p><strong>文檔</strong></p><ul><li>[更新] 倉儲文檔、<code>Db</code><span>&nbsp;</span>靜態類文檔、腳手架文檔、<code>.NET7</code><span>&nbsp;</span>升級<span>&nbsp;</span><code>.NET8</code><span>&nbsp;</span>文檔、<code>JSON</code><span>&nbsp;</span>序列化文檔、<code>Docker</code><span>&nbsp;</span>部署文檔、數據庫上下文文檔、虛擬文件文檔、遠程請求文檔、<code>HttpContext</code><span>&nbsp;</span>文檔、<code>JSON</code><span>&nbsp;</span>靜態類文檔、定時任務文檔、數據庫倉儲拓展文檔、數據庫實體文檔、規範化文檔、任務隊列文檔、虛擬文件系統文檔</li></ul></li><li><p><strong>貢獻者</strong></p><ul><li>zuohuaijun (<a href="https://gitee.com/zuohuaijun">@zuohuaijun</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/865">!865</a></li><li>anliuty (<a href="https://gitee.com/www.fengyunmy.com">@anliuty</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/863">!863</a></li><li>風雲明月 (<a href="https://gitee.com/www.fengyunmy.com">@www.fengyunmy.com</a>)<span>&nbsp;</span><a href="https://gitee.com/dotnetchina/Furion/pulls/862">!862</a></li></ul></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 04:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276833</guid>
            <link>https://www.oschina.net/news/276833</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[百度輸入法在候選詞區域植入廣告]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>V2EX 用戶發帖稱，百度輸入法最新版本在候選詞區域植入了廣告。</p><p>具體表現為，如果用戶要打「招商銀行」四個字，當輸入「招商」之後，候選詞的首位是「★熱門加盟店排行」的鏈接，點擊後會進入名為「加盟星榜單」的廣告頁面。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-0682b5080fc14f1967ebbe8ed9f2c741f2b.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.v2ex.com%2Ft%2F1011440" target="_blank">https://www.v2ex.com/t/1011440</a></u></em></p></blockquote><p>別的不説，想出這個功能的產品經理真是個人才，因此評論區有用戶感嘆道：</p><blockquote><p><em>不説用戶體驗怎麼樣，不得不説這個鍵盤的候選詞廣告想法確實超前，不光超前，還實現了。</em></p><p><em>根據輸入內容，直接用候選詞的方式推送廣告，從源頭出發拿到用戶的一手數據，直接甩掉了各種中間商。速度也更快，更精確的投送。</em></p><p><em>可以説是真 nb 呀</em></p></blockquote><p>知名科技博主闌夕評價道：「<em>你都打出招商兩個字了，一定是想加盟店鋪做生意吧？邏輯極其通順智能，對不對？這真的是人類能夠企及的創新嗎，太牛逼了。</em>」</p><blockquote><p><img height="604" src="https://oscimg.oschina.net/oscnet/up-9c82c56b05a42376a5e053f16691428897d.png" width="1270" referrerpolicy="no-referrer"></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 04:07:33 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276832</guid>
            <link>https://www.oschina.net/news/276832</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Katalyst v0.4.0 發佈：潮汐混部與資源超分]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img src="https://oscimg.oschina.net/oscnet/up-35370f991af6656824cb1bdd4d587fa5449.png" alt="" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzk0NDMzNjkxNw%3D%3D%26mid%3D2247485561%26idx%3D1%26sn%3Dc5a10a4f5e692568a60f76fb3bab67c2%26chksm%3Dc3277103f450f815423288c62b7f66d0a86a67f3820950c77acbf241cad0e2b56f1e0461bb5f%26scene%3D21%23wechat_redirect" target="_blank">Katalyst</a> 是字節跳動開源的成本優化實踐系統，致力於解決雲原生場景下的資源不合理利用問題，為資源管理和成本優化提供解決方案。</p><blockquote><p>來源&nbsp;| KubeWharf 社區</p><p>項目 |&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubewharf%2Fkatalyst-core" target="_blank">github.com/kubewharf/katalyst-core</a></p></blockquote><p>近日，Katalyst 社區完成了 0.4.0 版本發佈。除了持續優化 QoS 能力之外，我們還在新版本中提供了可以獨立在原生 Kubernetes 上使用的潮汐混部和資源超售能力。</p><p>和在離線常態混部一樣，這些能力是字節跳動在不同業務場景中實現降本增效的技術手段，我們在抽象出標準化能力之後也進行了開源，期望這些能力可以幫助用戶以更低的落地成本完成資源效能提升。</p><h1>潮汐混部</h1><h2>背景</h2><p>通過給應用分配差異化的 QoS 等級，Katalyst 可以基於資源隔離和動態調控能力實現在單機維度的在離線業務混部，即常態混部。這種混部模式雖然可以實現極致的資源效能提升，但是也增加了基礎設施的複雜度。同時因為引入了例如 Reclaimed 資源這樣的概念，要落地常態混部往往還需要做一些業務側的適配。</p><p>為了讓用戶可以以更低的成本落地混部能力，在 v0.4.0 中，Katalyst 提供了潮汐混部（Tidal Colocation）功能。</p><h2>技術解讀</h2><p>在潮汐混部中引入了潮汐節點池的概念，並且將集羣中的節點劃分為「在線」和「離線」兩種類型。潮汐混部主要分為兩個部分：</p><ul><li><strong>實例數管理</strong>：通過 HPA、CronHPA 等各種橫向擴縮能力來管理在線業務的實例數，在夜間可以騰出資源給離線業務使用</li><li><strong>潮汐節點池管理</strong>：Tidal Controller 基於設定好的策略對潮汐節點池中的節點做 binpacking，將騰出的資源摺合成整機出讓給離線業務</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-20c31affd845929187609604ca5d98f5d2a.png" alt="" referrerpolicy="no-referrer"></p><h2>使用</h2><ol><li>在集羣中選取加入潮汐節點池的節點，併為節點打上某個 Label</li></ol><pre><code>apiVersion: v1
kind: Node
metadata:
  ...
  labels:
    beta.kubernetes.io/arch: amd64
    beta.kubernetes.io/os: linux
    # 潮汐節點標識
    tidenodes: "true"
  name: 192.168.0.11
spec:
  ...
</code></pre><ol start="2"><li>創建潮汐節點池配置</li></ol><pre><code>apiVersion: tide.katalyst.kubewharf.io/v1alpha1
kind: TideNodePool
metadata:
  name: tidenodepool-example
spec:
  nodeConfigs:
    nodeSelector:
      # 與加入潮汐節點池的節點中的標籤匹配
      tidenodes: "true"
    # 配置潮汐節點池中為在線和離線節點預留的節點量
    reserve:
      offline: 25%
      online: 10%
</code></pre><ol start="3"><li>潮汐控制器為節點打上對應的標籤和污點，並且會根據各個節點的負載情況動態做 Binpacking 調整節點角色</li></ol><pre><code>apiVersion: v1
kind: Node
metadata:
  labels:
    beta.kubernetes.io/arch: amd64
    beta.kubernetes.io/os: linux
    tidenodes: "true"
    # 潮汐控制器為在線節點打上在線標籤，離線類似
    tide.katalyst.kubewharf.io/node-pool: tidenodepool-sample
    tide.katalyst.kubewharf.io/node-type: online
    tide.katalyst.kubewharf.io/reserve: "false"
    tide.katalyst.kubewharf.io/tide: "true"
  name: 192.168.0.11
spec:
  # 潮汐控制器為在線節點打上禁止離線調度的污點，離線類似
  taints:
  - effect: NoExecute
    key: tide.katalyst.kubewharf.io/offline-not-used
    value: "true"
  ...
</code></pre><ol start="4"><li>部署在線離線業務，為應用打上相應標籤和污點容忍，並配置 HPA 規則</li></ol><pre><code>kind: Deployment
apiVersion: apps/v1
metadata:
  name: tide-online
spec:
  replicas: 30
  selector:
    matchLabels:
      app: tide-online
  template:
    metadata:
      labels:
        # 標識在線
        tide.katalyst.kubewharf.io/pod-type: online
        app: tide-online
    spec:
      tolerations:
        # 容忍污點
      - key: "tide.katalyst.kubewharf.io/offline-not-used" 
        operator: "Exists"
      nodeSelector:
        # 選擇在線節點，包含預留+潮汐
        tide.katalyst.kubewharf.io/node-type: online
      containers:
      - name: busybox
        image: busybox
        command: ["sleep", "36000"]
        resources:
          requests:
            cpu: "4"
            memory: "8Gi"
</code></pre><h1>在線超分</h1><h2>背景</h2><p>在線業務的資源使用量往往會隨着訪問數量的波動而變化，具備明顯的潮汐特性。為了確保業務的穩定性，用戶通常會以峯值時消耗的資源量作為申請的依據，而且往往會有過度申請資源的傾向，這些資源會被浪費。</p><p>Katalyst 提供了在離線混部的能力作為解決上述問題的方式之一，但是在一些場景下，在離線混部可能不便於落地，比如：</p><ul><li>負載類型比較單一，只有在線業務</li><li>業務方不願意改變申請資源的協議來申請 Reclaimed 資源</li></ul><p>在新版本中，Katalyst 針對在線業務場景，提供了一種簡單的、對業務方無感的資源超分方案，便於用戶快速提升資源利用率。</p><h2>技術解讀</h2><ul><li><strong>Over-commit Webhook</strong>：劫持 kubelet 上報心跳的請求，並對 Allocatable 資源量進行放大</li><li><strong>Over-commit Controller</strong>：超分配置管理</li><li><strong>Katalyst Agent</strong>：通過幹擾檢測和驅逐，保障超分後節點的性能和穩定性；根據指標數據，計算並上報動態的超分比</li><li><strong>Katalyst Scheduler</strong>：對需要綁核的 Pod 進行准入，避免超分導致實際無法綁核而啓動失敗</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-15d23b597098e49126aa0ae68cb1b5f0d0c.png" alt="" referrerpolicy="no-referrer"></p><h2>使用</h2><ol><li>為需要超分的節點池的節點打上 Label</li></ol><pre><code>apiVersion: v1
kind: Node
metadata:
  annotations:
    # 超分節點池的標識
    katalyst.kubewharf.io/overcommit_node_pool: node-pool-1 
  name: 10.27.0.1
spec:
  ...
status:
  # 未超分時的資源量
  allocatable:
    cpu: 15900m
    memory: 32059820Ki
  capacity:
    cpu: 16
    memory: 32424364Ki
  ...
</code></pre><p>2.&nbsp;創建超分規則</p><pre><code>apiVersion: overcommit.katalyst.kubewharf.io/v1alpha1
kind: NodeOvercommitConfig
metadata:
  name: node-overcommit-config-1
spec:
  # 該規則匹配具有如下節點池 Label 的節點
  # katalyst.kubewharf.io/overcommit_node_pool=node-pool-1 
  nodeOvercommitSelectorVal: "node-pool-1"
  # 各種資源的超分比
  resourceOvercommitRatio:
    cpu: 2
status:
  # 該規則匹配的節點名稱列表
  matchedNodeList: 
    - 10.27.0.1
    - 10.27.0.2
    - 10.27.0.3
</code></pre><ol start="3"><li>觀察 Node 對象，發現 Katalyst 將超分比、未超分時的資源量更新到&nbsp;Annotation 中，並根據超分比對 Allocatable 和 Capacity 進行了放大</li></ol><pre><code>apiVersion: v1
kind: Node
metadata:
  annotations:
    katalyst.kubewharf.io/overcommit_node_pool: node-pool-1 
    # 以下字段由 Katalyst 添加
    # CPU 超分比
    katalyst.kubewharf.io/cpu-overcommit-ratio: "2"
    # Memory 超分比
    katalyst.kubewharf.io/memory-overcommit-ratio: "1"
    # 超分前的 CPU Capacity
    katalyst.kubewharf.io/original_capacity_cpu: "16"
    # 超分前的 Memory Capacity
    katalyst.kubewharf.io/original_capacity_memory: "32424364Ki"
    # 超分前的 CPU Allocatable
    katalyst.kubewharf.io/original_allocatable_cpu: "15900m"
    # 超分前的 Memory Allocatable
    katalyst.kubewharf.io/original_allocatable_memory: "32424364Ki"
  name: 10.27.0.1
spec:
  ...
status:
  # 超分後的資源量
  allocatable:
    cpu: 31800m
    memory: 32059820Ki
  capacity:
    cpu: 32
    memory: 32424364Ki
  ...
</code></pre><h1>NUMA 粒度混部內存管控框架</h1><h2>背景</h2><p>Katalyst 當前的混部策略只考慮整體機器的可用資源，導致離線任務在 NUMA 跨度申請內存時，內存容量和帶寬在各 NUMA 間分佈不均勻。這種情況下，當前的混部策略往往無法精確控制內存使用量，進而引起內存壓力。</p><p>針對這種情況，我們提出了一種精細化的 NUMA 粒度內存管控框架，旨在通過 sysadvisor 計算 memory provisions，並與 qrm memory plugin 交互，實現更細緻的 NUMA 內存管理。這將使 qrm memory plugin 能夠根據 memory provisions 進行 NUMA 細粒度內存控制。</p><h2>技術解讀</h2><p>在 Sysadvisor 的 Memory Plugin 中，我們引入了名為 memoryProvisioner 的插件，負責計算每個 NUMA 的內存供應邏輯。</p><p>為增強其可擴展性，我們設計了 ProvisionPolicy 接口，包含 Update 和 GetProvision 兩個方法，分別用於定期更新內存供應量和獲取 provision 建議。MemoryProvisioner 插件實現了 MemoryAdvisorPlugin 接口。</p><p>此策略基於 Memory Headroom 的 PolicyNUMAAware 策略，通過遍歷每個物理 NUMA 及其 pod，計算每個 NUMA 的內存供應量。具體計算邏輯包括分析 NUMA Exclusive 設置，獲取每個 NUMA 節點的空閒內存，並應用公式考慮 reclaimed cores、系統 scale_factor 和 reserved 內存，以實現更均衡的 NUMA 內存分配。</p><p><img src="https://oscimg.oschina.net/oscnet/up-5947a2be6ceb2494b055eb33148d597d250.png" alt="" referrerpolicy="no-referrer"></p><h2>使用</h2><p>katalyst-agent 添加了&nbsp;<code>memory-provision-policy</code>&nbsp;的啓動參數，用於指定計算策略，默認是 canonical。用法如下：</p><pre><code>katalyst-agent --kubeconfig=/root/.kube/config \
--memory-resource-plugin-advisor=true   \
--memory-advisor-plugins=memory-provisioner \
--memory-provision-policy=memory-provisioner-canonical \
...
</code></pre><h1>支持 OOM 優先級作為 QoS 增強</h1><h2>背景</h2><p>目前，Kubernetes 中 pod 的 OOM 優先級主要受其 QoS 級別與其對內存的申請量、使用量影響。然而，當前混部場景下，kubelet 原生的 oom_score_adj 計算策略已經不能很好的滿足需求，例如：</p><ul><li>需要給兩個都映射到原生的 Burstable 級別的 shared_cores pods 設定 OOM 優先級</li><li>需要在兩個原生都是 Guaranteed 級別的 dedicated_cores pod 和 shared_cores pod 之間設定 shared_cores pod 要早於 dedicated_cores pod OOM</li></ul><p>此外，當前 kubelet 中提供的靜態 oom_score_adj 計算機制，不支持 OOM 優先級的動態調整。因此 Katalyst 提供了一個關於 OOM 優先級的 QoS Enhancement，支持更加靈活地為 pods 設置 OOM 優先級。</p><h2>技術解讀</h2><p>Katalyst 通過在內核添加 ebpf 的方式實現用戶自定義的 OOM 策略注入，並在上層 qrm memory plugin 中完成用戶定義策略的解析以及 OOM Priority 的配置下發。</p><h2>使用</h2><p>OOM Priority 信息通過 annotaion 在 pod 上進行指定</p><pre><code>annotations:
    "katalyst.kubewharf.io/memory_enhancement":'{
    "numa_binding": "true", 
    "numa_exclusive": "true",
    "oom_priority": priorityValueInt,
    }'
</code></pre><p>priorityValueInt 的取值越大表示優先級越高，並且取值範圍受 pod 所指定的 QoS level 影響。</p><h1>支持拓撲感知調度</h1><p>在搜索、廣告、推薦、遊戲、AI 分佈式訓練等業務場景下，用戶對時延的敏感性較高，對容器在微拓撲級別的擺放方式存在要求。原生 K8s 的微拓撲管理能力存在一些侷限，調度器不感知微拓撲，可能導致出現較多的因不滿足 NUMA 親和要求而造成的 Admit 失敗。</p><p>因此，Katalyst 在 v0.4.0 實現了拓撲感知調度功能，支持兩種模式：</p><ul><li>Native 策略：兼容 K8s 原生的 NUMA 親和和綁核策略</li><li>Dynamic 策略：混部場景下增強的綁核策略，對於&nbsp;dedicated_cores&nbsp;QoS 級別，支持了 NUMA 親和 (numa_binding) 以及 NUMA 獨佔 (numa_exclusive) 兩種語義</li></ul><h1>其他</h1><ul><li>SysAdvisor 框架支持對接自定義業務模型，調優 rama provision policy 計算結果</li><li>QRM 支持設置整機和容器級別 TCP Memory 上限，緩解 TCP 內存滿導致的丟包問題</li><li>Eviction 集成 RootFS 驅逐能力，定製排序策略和 QoS 級別驅逐閾值</li><li>KCMAS 優化存儲數據結構和索引，支持多 tag 能力</li><li>ServiceProfilingDescriper (SPD) 支持服務維度的混部 baseline 和 per-pod 灰度能力</li><li>社區開發切換到基於 owner review 模式</li><li>基於超時實現死鎖檢測功能</li></ul><h2>新版本體驗路徑</h2><p>請參考社區官方文檔體驗 Katalyst 潮汐混部和資源超分能力:</p><ul><li>潮汐混部：gokatalyst.io/docs/user-guide/tidal-colocation/</li><li>資源超分：gokatalyst.io/docs/user-guide/resource-overcommitment/</li></ul><h2>感謝貢獻者</h2><p>在本次新版本的發佈過程中，社區也迎來了不少新的貢獻者，在此向他們的付出表示由衷感謝：</p><p><img src="https://oscimg.oschina.net/oscnet/up-83be15e44a1ec8ffe211a81ad949b4e8982.png" alt="" referrerpolicy="no-referrer"></p><p>非常期待更多開發者和用戶加入到 Katalyst 開源社區中，和我們一起交流和探討在離線混部以及資源效能的相關話題。</p><hr><p>項目地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubewharf%2Fkatalyst-core" target="_blank">github.com/kubewharf/katalyst-core</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 03:25:33 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6210722/blog/10979687</guid>
            <link>https://my.oschina.net/u/6210722/blog/10979687</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[文本檢索性能提升 40 倍，Apache Doris 倒排索引深度解讀]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在 OLAP 領域，Apache Doris 已成為高性能、高併發以及高時效性的代名詞。在面向海量數據的複雜查詢需求時，除硬件配置、集羣規模、網絡帶寬等因素外，提升性能的核心在於如何最大程度地降低 SQL 執行時的 CPU、內存和 IO 開銷，而這其中數據庫索引扮演着至關重要的角色。合理的索引結構設計可以跳過大量不必要的底層數據讀取、快速檢索定位到所需數據，並進一步提升後續計算的執行效率、降低查詢 SQL 的運行時間和資源消耗。</p><p>Apache Doris 提供了豐富的索引以加速數據的讀取和過濾，依據是否需要用戶手工創建，索引類型大體可以分為智能內建索引和用戶創建索引兩類，其中智能內建索引是指在數據寫入時自動生成的索引，無需用戶幹預，包括前綴索引和 ZoneMap 索引。用戶創建索引需要用戶根據業務特點手動創建，包括 Bloom Filter 索引和 2.0 版本新增的倒排索引與 NGram Bloom Filter 索引。</p><p>相較於用戶比較熟悉的前綴索引、Bloom Filter 索引，2.0 版本所新增的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg3Njc2NDAwOA%3D%3D%26mid%3D2247519079%26idx%3D1%26sn%3Da232a72695ff93eea0ffe79635936dcb%26chksm%3Dcf2f8560f8580c768bbde99ef8ca97d3a42ecc03b5d8d106b85f5474c90b6068781a79b3611e%26scene%3D21%23wechat_redirecthttp%3A%2F%2F" rel="nofollow" target="_blank">倒排索引</a>和 NGram Bloom Filter 在文本檢索、模糊匹配以及非主鍵列檢索等場景有着更為明顯的性能提升。本文將以 Amazon customer reviews 數據集為例，介紹 Apache Doris 在查詢該數據集以及類似場景中，如何充分利用倒排索引以及 NGram Bloom Filter 索引進行查詢加速，並詳細解析其工作原理與最佳實踐。</p><span id="OSC_h2_1"></span><h2>數據集樣例</h2><p>在本文中，我們使用的數據集包含約 1.3 億條亞馬遜產品的用戶評論信息。該數據集以 Snappy 壓縮的 Parquet 文件形式存在，總大小約為 37GB。以下為數據集的樣例：</p><p><img src="https://cdn.selectdb.com/static/_e5e3fca815.png" alt="數據集樣例.png" referrerpolicy="no-referrer"></p><p>在子集中，每行包含用戶 ID（<code>customer_id</code>）、評論 ID（<code>review_id</code>）、已購買產品 ID（<code>product_id</code>）、產品分類（<code>product_category</code>）、評分（<code>star_rating</code>）、評論標題（<code>review_headline</code>）、評論內容（<code>review_body</code>）等 15 列信息。 根據上述可知，列中包含了適用於索引加速的各種特徵。例如，<code>customer_id</code> 是高基數的數值列，<code>product_id</code> 是低基數的定長短文本列，<code>product_title</code> 是適合文本檢索的短文本列，<code>review_body</code> 則是適合文本搜索的長文本列。</p><p>通過這些列，我們可以模擬兩個典型索引查詢場景，具體如下：</p><ul><li>文本搜索查詢：搜索 <code>review body</code> 字段中包含特定內容的產品信息。</li><li>非主鍵列明細查詢：查詢特定產品 ID（<code>product_id</code>）或者特定用戶 ID（<code>customer_id</code>）的評論信息。</li></ul><p>接下來，我們將以文本搜索和非主鍵列明細查詢為主要方向，對比在有索引和無索引的情況下查詢性能的差異。同時，我們也將詳細解析索引減少查詢耗時、提高查詢效率的原理。</p><span id="OSC_h2_2"></span><h2>環境搭建</h2><p>為了快速搭建環境，並進行集羣創建和數據導入，我們使用單節點集羣（1FE、1BE）並按照以下步驟進行操作：</p><ol><li><p>搭建 Apache Doris ：具體操作請參考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoris.apache.org%2Fzh-CN%2Fdocs%2Fget-starting%2Fquick-start%2F" rel="nofollow" target="_blank">快速開始</a></p></li><li><p>創建數據表：按照下列建表語句進行數據表創建</p></li></ol><pre><code class="language-SQL">CREATE TABLE `amazon_reviews` (  
  `review_date` int(11) NULL,  
  `marketplace` varchar(20) NULL,  
  `customer_id` bigint(20) NULL,  
  `review_id` varchar(40) NULL,
  `product_id` varchar(10) NULL,
  `product_parent` bigint(20) NULL,
  `product_title` varchar(500) NULL,
  `product_category` varchar(50) NULL,
  `star_rating` smallint(6) NULL,
  `helpful_votes` int(11) NULL,
  `total_votes` int(11) NULL,
  `vine` boolean NULL,
  `verified_purchase` boolean NULL,
  `review_headline` varchar(500) NULL,
  `review_body` string NULL
) ENGINE=OLAP
DUPLICATE KEY(`review_date`)
COMMENT 'OLAP'
DISTRIBUTED BY HASH(`review_date`) BUCKETS 16
PROPERTIES (
"replication_allocation" = "tag.location.default: 1",
"compression" = "ZSTD"
);

</code></pre><p>3.下載數據集：從下方鏈接分別下載數據集，數據集為 Parque 格式，並經過 Snappy 壓縮，總大小約為 37GB</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatasets-documentation.s3.eu-west-3.amazonaws.com%2Famazon_reviews%2Famazon_reviews_2010.snappy.parquet" rel="nofollow" target="_blank">amazon_reviews_2010</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatasets-documentation.s3.eu-west-3.amazonaws.com%2Famazon_reviews%2Famazon_reviews_2011.snappy.parquet" rel="nofollow" target="_blank">amazon_reviews_2011</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatasets-documentation.s3.eu-west-3.amazonaws.com%2Famazon_reviews%2Famazon_reviews_2012.snappy.parquet" rel="nofollow" target="_blank">amazon_reviews_2012</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatasets-documentation.s3.eu-west-3.amazonaws.com%2Famazon_reviews%2Famazon_reviews_2013.snappy.parquet" rel="nofollow" target="_blank">amazon_reviews_2013</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatasets-documentation.s3.eu-west-3.amazonaws.com%2Famazon_reviews%2Famazon_reviews_2014.snappy.parquet" rel="nofollow" target="_blank">amazon_reviews_2014</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatasets-documentation.s3.eu-west-3.amazonaws.com%2Famazon_reviews%2Famazon_reviews_2015.snappy.parquet" rel="nofollow" target="_blank">amazon_reviews_2015</a></li></ul><p>4.導入數據集：下載完成後，分別執行以下命令，導入數據集</p><pre><code class="language-Bash">curl --location-trusted -u root: -T amazon_reviews_2010.snappy.parquet -H "format:parquet" http://${BE_IP}:${BE_PORT}/api/${DB}/amazon_reviews/_stream_load
curl --location-trusted -u root: -T amazon_reviews_2011.snappy.parquet -H "format:parquet" http://${BE_IP}:${BE_PORT}/api/${DB}/amazon_reviews/_stream_load
curl --location-trusted -u root: -T amazon_reviews_2012.snappy.parquet -H "format:parquet" http://${BE_IP}:${BE_PORT}/api/${DB}/amazon_reviews/_stream_load
curl --location-trusted -u root: -T amazon_reviews_2013.snappy.parquet -H "format:parquet" http://${BE_IP}:${BE_PORT}/api/${DB}/amazon_reviews/_stream_load
curl --location-trusted -u root: -T amazon_reviews_2014.snappy.parquet -H "format:parquet" http://${BE_IP}:${BE_PORT}/api/${DB}/amazon_reviews/_stream_load
curl --location-trusted -u root: -T amazon_reviews_2015.snappy.parquet -H "format:parquet" http://${BE_IP}:${BE_PORT}/api/${DB}/amazon_reviews/_stream_load


</code></pre><p>5.查看與驗證：完成上述步驟後，可以在 MySQL 客戶端執行以下語句，來查看導入的數據行數和所佔用空間。從下方代碼可知：共導入 135589433 行數據，在 Doris 中佔用空間 25.873GB，比壓縮後的 Parquet 列式存儲進一步降低了 30%。</p><pre><code class="language-SQL">mysql&gt; SELECT COUNT() FROM amazon_reviews;
+-----------+
| count(*)  |
+-----------+
| 135589433 |
+-----------+
1 row in set (0.02 sec)
mysql&gt; SHOW DATA FROM amazon_reviews;
+----------------+----------------+-----------+--------------+-----------+------------+
| TableName      | IndexName      | Size      | ReplicaCount | RowCount  | RemoteSize |
+----------------+----------------+-----------+--------------+-----------+------------+
| amazon_reviews | amazon_reviews | 25.873 GB | 16           | 135589433 | 0.000      |
|                | Total          | 25.873 GB | 16           |           | 0.000      |
+----------------+----------------+-----------+--------------+-----------+------------+
2 rows in set (0.00 sec)


</code></pre><span id="OSC_h2_3"></span><h2>文本搜索查詢加速</h2><span id="OSC_h3_4"></span><h3>無索引硬匹配</h3><p>環境及數據準備就緒後，我們嘗試對 <code>review_body</code> 列進行文本搜索查詢。具體需求是在數據集中查出評論中包含「is super awesome」關鍵字的前 5 種產品，並按照評論數量降序排列，查詢結果需顯示每種產品的 ID、隨機一個產品標題、平均星級評分以及評論總數。<code>review_body</code> 列的特徵是評論內容比較長，因此進行文本搜索會有一定的性能壓力。</p><p>首先我們直接進行查詢，以下是查詢的示例語句：</p><pre><code class="language-SQL">SELECT
    product_id,
    any(product_title),
    AVG(star_rating) AS rating,
    COUNT() AS count
FROM
    amazon_reviews
WHERE
    review_body LIKE '%is super awesome%'
GROUP BY
    product_id
ORDER BY
    count DESC,
    rating DESC,
    product_id
LIMIT 5;


</code></pre><p>執行結果如下，查詢耗時為 <strong>7.6 秒</strong></p><pre><code class="language-SQL">+------------+------------------------------------------+--------------------+-------+
| product_id | any_value(product_title)                 | rating             | count |
+------------+------------------------------------------+--------------------+-------+
| B00992CF6W | Minecraft                                | 4.8235294117647056 |    17 |
| B009UX2YAC | Subway Surfers                           | 4.7777777777777777 |     9 |
| B00DJFIMW6 | Minion Rush: Despicable Me Official Game |              4.875 |     8 |
| B0086700CM | Temple Run                               |                  5 |     6 |
| B00KWVZ750 | Angry Birds Epic RPG                     |                  5 |     6 |
+------------+------------------------------------------+--------------------+-------+
5 rows in set (7.60 sec)


</code></pre><span id="OSC_h3_5"></span><h3>利用 Ngram BloomFilter 索引加速查詢</h3><p>接下來，我們嘗試使用 Ngram BloomFilter 索引進行查詢加速</p><pre><code class="language-SQL">ALTER TABLE amazon_reviews ADD INDEX review_body_ngram_idx(review_body) USING NGRAM_BF PROPERTIES("gram_size"="10", "bf_size"="10240");


</code></pre><p>添加 Ngram BloomFilter 索引之後，再次執行相同的查詢。執行結果如下，<strong>查詢耗時縮短至 0.93 秒，相較於未開啓索引，查詢效率提高了 8 倍。</strong></p><pre><code class="language-SQL">+------------+------------------------------------------+--------------------+-------+
| product_id | any_value(product_title)                 | rating             | count |
+------------+------------------------------------------+--------------------+-------+
| B00992CF6W | Minecraft                                | 4.8235294117647056 |    17 |
| B009UX2YAC | Subway Surfers                           | 4.7777777777777777 |     9 |
| B00DJFIMW6 | Minion Rush: Despicable Me Official Game |              4.875 |     8 |
| B0086700CM | Temple Run                               |                  5 |     6 |
| B00KWVZ750 | Angry Birds Epic RPG                     |                  5 |     6 |
+------------+------------------------------------------+--------------------+-------+
5 rows in set (0.93 sec)


</code></pre><p>接下來，我們根據代碼示例展開説明。使用 <code>ALTER TABLE</code> 語句為表增加 Ngram BloomFilter 索引時，<code>gram_size</code> 和 <code>bf_size</code> 參數具有特定的含義：</p><ul><li><code>gram_size</code>：表示 n-gram 中的 n 值，即連續字符的長度。在上述代碼示例中，<code>"gram_size"="10"</code> 表示每個 n-gram 包含 10 個字符。這意味着文本將被切割成數個字符長度為 10 的字符串，這些字符串將用於構建索引。</li><li><code>bf_size</code>：表示 Bloom Filter 的大小，以字節（Byte）為單位。例如，<code>"bf_size"="10240"</code>表示所使用 Bloom Filter 數據大小佔用空間為 10240 字節。</li></ul><p>在瞭解基本的參數定義後，我們來探索 <strong>Ngram BloomFilter 加速查詢的原理：</strong></p><ul><li>Ngram 分詞：使用 <code>gram_size</code> 對每行數據進行分詞，當 <code>gram_size=5</code> 時，"hello world" 被切分為 ["hello"， "ello "， "llo w"， "lo wo"， "o wor"， " worl"， "world"]。這些子字符串經過哈希函數計算後，將被添加到相應大小（<code>bf_size</code>）的 Bloom Filter 中。由於 Doris 數據是按頁面（page）組織存儲，相應的 Bloom Filter 也會按頁面（page）生成。</li><li>查詢加速：以「hello」為例，在匹配過程中也將被切分並生成對應的 Bloom Filter，用於與各頁面的 Bloom Filter 進行對比。如果 Bloom Filter 判斷為包含匹配字符串（可能會出現假陽性），則加載相應的頁面以進一步匹配；否則，將跳過該頁面。其原理即通過跳過不需要加載的頁面（page），減少需要掃描的數據量，從而顯著降低了查詢延時。</li></ul><p><img src="https://cdn.selectdb.com/static/Apache_Doris_c50be251fc.png" alt="Apache Doris 數據存儲結構" referrerpolicy="no-referrer"></p><p>Ngram Bloom Filter 示意圖</p><p>通過上述原理描述可以看出，針對不同的場景合理的配置 Ngram BloomFilter 的參數會達到更好的效果， <code>gram_size</code> 的大小直接影響匹配時效率，而 <code>bf_size</code> 的大小影響存儲容量和誤判率。通常情況下，較大的 <code>bf_size</code> 可以降低誤判率，但這樣也會佔用更多的存儲空間。因此，我們建議從以下兩方面綜合考量配置參數：</p><p><strong>數據特性：</strong> 考慮要索引的數據類型。對於文本數據，需要根據文本的平均長度和字符分佈來確定。</p><ul><li>對於較短的文本（如單詞或短語）：較小的 <code>gram_size</code>（例如 2-4）和較小的 <code>bf_size</code> 可能更合適。</li><li>對於較長的文本（如句子或大段描述：較大的 <code>gram_size</code>（例如 5-10）和較大的 <code>bf_size</code> 可能更有效。</li></ul><p><strong>查詢模式：</strong> 考慮查詢的典型模式。</p><ul><li>如果查詢通常包含短語或接近完整的單詞，較大的 <code>gram_size</code> 可能更好。</li><li>對於模糊匹配或包含多種變化的查詢，較小的 <code>gram_size</code> 可以提供更靈活的匹配。</li></ul><span id="OSC_h3_6"></span><h3>利用倒排索引加速查詢</h3><p>除了採用 Ngram BloomFilter 索引進行查詢加速，還可以選擇基於 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg3Njc2NDAwOA%3D%3D%26mid%3D2247519079%26idx%3D1%26sn%3Da232a72695ff93eea0ffe79635936dcb%26chksm%3Dcf2f8560f8580c768bbde99ef8ca97d3a42ecc03b5d8d106b85f5474c90b6068781a79b3611e%26token%3D533653942%26lang%3Dzh_CN%23rd" rel="nofollow" target="_blank">倒排索引</a> 進一步加速文本搜索的效率。可以通過以下步驟來構建倒排索引：</p><p>1.<strong>新增倒排索引：</strong> 對 <code>amazon_reviews</code> 表的 <code>review_body</code> 列添加倒排索引，該索引採用英文分詞，並支持 Phrase 短語查詢，短語查詢即進行文本搜索時，分詞後的詞語順序將會影響搜索結果。 2.<strong>為歷史數據創建索引：</strong> 按照新增索引信息對歷史數據進行索引構建，使歷史數據就也可以使用倒排索引進行查詢。</p><pre><code class="language-SQL">ALTER TABLE amazon_reviews ADD INDEX review_body_inverted_idx(`review_body`) 
    USING INVERTED PROPERTIES("parser" = "english","support_phrase" = "true"); 
BUILD INDEX review_body_inverted_idx ON amazon_reviews;

</code></pre><p>3.<strong>查看及驗證：</strong> 構建完索引之後，可以通過以下方式對索引構建情況進行查看：</p><pre><code class="language-SQL">mysql&gt; show BUILD INDEX WHERE TableName="amazon_reviews";
+-------+----------------+----------------+-----------------------------------------------------------------------------------------------------------------------------------+-------------------------+-------------------------+---------------+----------+------+----------+
| JobId | TableName      | PartitionName  | AlterInvertedIndexes                                                                                                              | CreateTime              | FinishTime              | TransactionId | State    | Msg  | Progress |
+-------+----------------+----------------+-----------------------------------------------------------------------------------------------------------------------------------+-------------------------+-------------------------+---------------+----------+------+----------+
| 10152 | amazon_reviews | amazon_reviews | [ADD INDEX review_body_inverted_idx (
review_body
) USING INVERTED PROPERTIES("parser" = "english", "support_phrase" = "true")],  | 2024-01-23 15:42:28.658 | 2024-01-23 15:48:42.990 | 11            | FINISHED |      | NULL     |
+-------+----------------+----------------+-----------------------------------------------------------------------------------------------------------------------------------+-------------------------+-------------------------+---------------+----------+------+----------+
1 row in set (0.00 sec)


</code></pre><p>如果對分詞效果不確定，可以使用 TOKENIZE 函數進行分詞測試。TOKENIZE 函數接收兩個輸入：一個是需要進行分詞的文本，一個是分詞的屬性字段。</p><pre><code class="language-SQL">mysql&gt; SELECT TOKENIZE('I can honestly give the shipment and package 100%, it came in time that it was supposed to with no hasels, and the book was in PERFECT condition.
super awesome buy, and excellent for my college classs', '"parser" = "english","support_phrase" = "true"');
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| tokenize('I can honestly give the shipment and package 100%, it came in time that it was supposed to with no hasels, and the book was in PERFECT condition. super awesome buy, and excellent for my college classs', '"parser" = "english","support_phrase" = "true"')                                              |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| ["i", "can", "honestly", "give", "the", "shipment", "and", "package", "100", "it", "came", "in", "time", "that", "it", "was", "supposed", "to", "with", "no", "hasels", "and", "the", "book", "was", "in", "perfect", "condition", "super", "awesome", "buy", "and", "excellent", "for", "my", "college", "classs"] |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.05 sec)


</code></pre><p>在倒排索引創建完成後，我們使用 <code>MATCH_PHRASE</code> 來查詢包含關鍵詞"is super awesome"的產品評論信息（具體需求可回顧前文）。</p><pre><code class="language-SQL">SELECT
    product_id,
    any(product_title),
    AVG(star_rating) AS rating,
    COUNT() AS count
FROM
    amazon_reviews
WHERE
    review_body MATCH_PHRASE 'is super awesome'
GROUP BY
    product_id

ORDER BY
    count DESC,
    rating DESC,
    product_id
LIMIT 5;


</code></pre><p>以上述代碼示例進行説明，<code>review_body MATCH_PHRASE 'is super awesome'</code> 表示對 <code>review_body</code> 列進行短語匹配查詢。具體而言，查詢會在 <code>review_body</code> 中按照英文分詞後，尋找同時包含 "is"、"super" 和 "awesome" 這三個詞語的文本片段，同時要求這三個詞語的順序是 "is" 在前，"super" 在中間，"awesome" 在後，並且詞語之間沒有間隔（不區分大小寫）。</p><p>這裏需要説明的是，MATCH 與 LIKE 查詢的差異在於，MATCH 查詢時會忽略大小寫，把句子切分成一個個詞來匹配，能夠更快速定位符合條件的結果，特別是在大規模數據集情況下，MATCH 的效率提升更為明顯。</p><p>執行結果如下所示，<strong>開啓倒排索引後查詢耗時僅 0.19 秒，性能較僅開啓 Ngram BloomFilter 索引時提升了 4 倍，較未開啓索引時提升了近 40 倍，極大幅度提升了文本檢索的效率。</strong></p><pre><code class="language-SQL">+------------+------------------------------------------+-------------------+-------+
| product_id | any_value(product_title)                 | rating            | count |
+------------+------------------------------------------+-------------------+-------+
| B00992CF6W | Minecraft                                | 4.833333333333333 |    18 |
| B009UX2YAC | Subway Surfers                           |               4.7 |    10 |
| B00DJFIMW6 | Minion Rush: Despicable Me Official Game |                 5 |     7 |
| B0086700CM | Temple Run                               |                 5 |     6 |
| B00KWVZ750 | Angry Birds Epic RPG                     |                 5 |     6 |
+------------+------------------------------------------+-------------------+-------+
5 rows in set (0.19 sec)


</code></pre><p>究其加速原因可知，倒排索引是通過將文本分解為單詞，並建立從單詞到行號列表的映射。這些映射關係按照單詞進行排序，並構建跳錶索引。在查詢特定單詞時，可以通過跳錶索引和二分查找等方法，在有序的映射中快速定位到對應的行號列表，進而獲取行的內容。<strong>這種查詢方式避免了逐行匹配，將算法複雜度從 O（n） 降低到 O（logn），在處理大規模數據時能顯著提高查詢性能。</strong></p><p><img src="https://cdn.selectdb.com/static/_c6e7b4f9ab.png" alt="倒排索引原理示意圖" referrerpolicy="no-referrer"></p><p>為深入瞭解倒排索引的加速原理，需從倒排索引內部引讀寫邏輯説起。在 Doris 中，從邏輯角度來看，倒排索引應用於表的列級別，而從物理存儲和實現角度來看，倒排索引實際是建立在數據文件級別上的。具體如下：</p><ul><li><strong>寫入階段：</strong> 數據在寫入數據文件的同時，也將同步寫入排索引文件中，對於每個寫入數據的行號，均與倒排索引中的行號一一對應的。</li><li><strong>查詢階段：</strong> 如果查詢 <code>WHERE</code> 條件中包含已建立倒排索引的列，Doris 會自動查詢索引文件，返回滿足條件的行號列表，再利用 Doris 通用的行號過濾機制，跳過不必要的行和頁面，只讀取滿足條件的行，以達到查詢加速的效果。</li></ul><p>總的來説，Doris 的倒排索引機制在物理層面是通過數據文件和索引文件配合工作，而在邏輯層面則通過列和行的映射來實現高效的數據檢索和查詢加速。</p><span id="OSC_h2_7"></span><h2>非主鍵列查詢加速</h2><p>為了進一步驗證倒排索引對非主鍵列查詢加速的影響，我們選擇對產品 ID 和用戶 ID 的維度信息進行查詢。</p><span id="OSC_h3_8"></span><h3>未開啓倒排索引</h3><p>當查詢用戶 13916588 對產品 B002DMK1R0 的評論信息時，執行以下 SQL 語句進行查詢時，需要對全表數據進行掃描，<strong>查詢耗時為 1.81 秒。</strong></p><pre><code class="language-SQL">mysql&gt; SELECT product_title,review_headline,review_body,star_rating 
FROM amazon_reviews 
WHERE product_id='B002DMK1R0' AND customer_id=13916588;
+-----------------------------------------------------------------+----------------------+-----------------------------------------------------------------------------------------------------------------------------+-------------+
| product_title                                                   | review_headline      | review_body                                                                                                                 | star_rating |
+-----------------------------------------------------------------+----------------------+-----------------------------------------------------------------------------------------------------------------------------+-------------+
| Magellan Maestro 4700 4.7-Inch Bluetooth Portable GPS Navigator | Nice Features But... | This is a great GPS. Gets you where you are going. Don't forget to buy the seperate (grr!) cord for the traffic kit though! |           4 |
+-----------------------------------------------------------------+----------------------+-----------------------------------------------------------------------------------------------------------------------------+-------------+
1 row in set (1.81 sec)


</code></pre><span id="OSC_h3_9"></span><h3>倒排索引查詢加速</h3><p>接下來，我們為 <code>product_id</code> 和 <code>customer_id</code> 添加倒排索引。在這個場景中，倒排索引的使用與文本搜索時不同，該場景無需對 <code>product_id</code> 和 <code>customer_id</code> 進行分詞，只需對這兩列的 Value→RowID 的創建倒排映射表。</p><p>首先，通過執行以下 SQL 語句創建倒排索引：</p><pre><code class="language-SQL">ALTER TABLE amazon_reviews ADD INDEX product_id_inverted_idx(product_id) USING INVERTED ;
ALTER TABLE amazon_reviews ADD INDEX customer_id_inverted_idx(customer_id) USING INVERTED ;
BUILD INDEX product_id_inverted_idx ON amazon_reviews;
BUILD INDEX customer_id_inverted_idx ON amazon_reviews;


</code></pre><p>其次，當索引構建完成後，執行同樣的查詢語句，<strong>查詢耗時從 1.81 秒降到了 0.06 秒</strong>，查詢耗時顯著降低，相比未添加索引的情況，<strong>查詢效率提升了約 30 倍。</strong></p><pre><code class="language-SQL">mysql&gt; SELECT product_title,review_headline,review_body,star_rating FROM amazon_reviews WHERE product_id='B002DMK1R0' AND customer_id='13916588';
+-----------------------------------------------------------------+----------------------+-----------------------------------------------------------------------------------------------------------------------------+-------------+
| product_title                                                   | review_headline      | review_body                                                                                                                 | star_rating |
+-----------------------------------------------------------------+----------------------+-----------------------------------------------------------------------------------------------------------------------------+-------------+
| Magellan Maestro 4700 4.7-Inch Bluetooth Portable GPS Navigator | Nice Features But... | This is a great GPS. Gets you where you are going. Don't forget to buy the seperate (grr!) cord for the traffic kit though! |           4 |
+-----------------------------------------------------------------+----------------------+-----------------------------------------------------------------------------------------------------------------------------+-------------+
1 row in set (0.06 sec)

</code></pre><p>通過觀察可發現，倒排索引在於類似非主鍵列的維度查詢中具有非常出色的加速效果。為更深入且直觀的查看加速效果，可通過 Doris Profile 信息來進一步探索。</p><span id="OSC_h3_10"></span><h3>Profile 分析</h3><p>需要注意的是，在開啓查詢的 Profile 之前，需先在 MySQL 客戶端執行 <code>SET enable_profile=true;</code> 命令。完成後再執行查詢語句，並訪問 http://FE_IP:FE_HTTP_PORT/QueryProfile， 來查看與本次查詢相關的 Profile ID 以及詳細的 Profile 信息。</p><p>本文中僅截取一個特定片段的 SegmentIterator Profile 信息來説明倒排索引查詢加速原因。</p><pre><code class="language-YAML">SegmentIterator:
  - FirstReadSeekCount: 0
  - FirstReadSeekTime: 0ns
  - FirstReadTime: 13.119ms
  - IOTimer: 19.537ms
  - InvertedIndexQueryTime: 11.583ms
  - RawRowsRead: 1
  - RowsConditionsFiltered: 0
  - RowsInvertedIndexFiltered: 16.907403M (16907403)
  - RowsShortCircuitPredInput: 0
  - RowsVectorPredFiltered: 0
  - RowsVectorPredInput: 0
  - ShortPredEvalTime: 0ns
  - TotalPagesNum: 27
  - UncompressedBytesRead: 3.71 MB
  - VectorPredEvalTime: 0ns

</code></pre><p>從上述 Profile 中的 <code>RowsInvertedIndexFiltered: 16.907403M (16907403) 以及 RawRowsRead: 1</code>，我們可以觀察到：倒排索引過濾了 16907403 行數據，最終只保留 1 行數據（即命中的那條數據）。根據 <code>FirstReadTime: 13.119ms</code> 可知，在讀取這行數據所在的頁面（page）耗時 13.119 ms，而根據<code>InvertedIndexQueryTime: 11.583ms</code> 可知，倒排索引執行時間僅耗時 11.58 ms。<strong>這意味着倒排索引僅在 11.58 ms 內過濾了 16907403 行數據，執行效率非常高。</strong></p><p>為更直接對比，接下來展示未增加倒排索引情況下 SegmentIterator 的執行情況：</p><pre><code class="language-YAML">SegmentIterator:
  - FirstReadSeekCount: 9.374K (9374)
  - FirstReadSeekTime: 400.522ms
  - FirstReadTime: 3s144ms
  - IOTimer: 2s564ms
  - InvertedIndexQueryTime: 0ns
  - RawRowsRead: 16.680706M (16680706)
  - RowsConditionsFiltered: 226.698K (226698)
  - RowsInvertedIndexFiltered: 0
  - RowsShortCircuitPredInput: 1
  - RowsVectorPredFiltered: 16.680705M (16680705)
  - RowsVectorPredInput: 16.680706M (16680706)
  - RowsZonemapFiltered: 226.698K (226698)
  - ShortPredEvalTime: 2.723ms
  - TotalPagesNum: 5.421K (5421)
  - UncompressedBytesRead: 277.05 MB
  - VectorPredEvalTime: 8.114ms


</code></pre><p>根據上述 Profile 觀察可知，由於沒有索引進行過濾， FirstRead 需要花費 3.14s 的時間來加載 16680706 行數據，然後使用 Predicate Evaluate 進行條件過濾，過濾掉其中 16680705 行，而條件過濾本身只消耗了不到 10ms 的時間，由此可見，大部分時間被消耗在加載原始數據上。</p><p>通過對比可知，建立倒排索引可以大大減少加載原始數據的時間，提高查詢的執行效率。索引能夠快速定位滿足條件的行，從而減少不必要的數據加載和處理，節省時間和資源。</p><span id="OSC_h2_11"></span><h2>低基數文本列索引加速</h2><p>眾所周知，倒排索引對於高基數文本列的查詢來説，加速效果十分顯著。然而，在低基數列的情況下，可能由於需創建過多的索引項而導致更大的開銷，從而對查詢性能產生負面影響。接下來，我們將以 <code>product_category</code> 作為謂詞列進行過濾，來檢驗 Apache Doris 倒排索引在低基數文本列的加速效果如何。</p><pre><code class="language-SQL">mysql&gt; SELECT COUNT(DISTINCT product_category) FROM amazon_reviews ;
+----------------------------------+
| count(DISTINCT product_category) |
+----------------------------------+
|                               43 |
+----------------------------------+
1 row in set (0.57 sec)


</code></pre><p>通過上述操作可知，到 <code>product_category</code> 僅有 43 種分類，是一個典型的低基數文本列。接下來，我們對其增加倒排索引</p><pre><code class="language-SQL">ALTER TABLE amazon_reviews ADD INDEX product_category_inverted_idx(`product_category`) USING INVERTED;
BUILD INDEX product_category_inverted_idx ON amazon_reviews;

</code></pre><p>添加倒排索引之後，運行如下 SQL 查詢，指查詢產品分類為 Mobile_Electronics 產品中評價數量最多的前三名產品信息</p><pre><code class="language-SQL">SELECT 
    product_id,
    product_title,
    AVG(star_rating) AS rating,
    any(review_body),
    any(review_headline),
    COUNT(*) AS count 
FROM 
    amazon_reviews 
WHERE 
    product_category = 'Mobile_Electronics' 
GROUP BY 
    product_title, product_id 
ORDER BY 
    count DESC 
LIMIT 10;


</code></pre><p>從下方結果可知，增加倒排索引之後，查詢耗時為 1.54s。</p><pre><code class="language
| product_id | product_title                                                                                                                                                                                          | rating             | any_value(review_body)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | any_value(review_headline)      | count |

| B00J46XO9U | iXCC Lightning Cable 3ft, iPhone charger, for iPhone X, 8, 8 Plus, 7, 7 Plus, 6s, 6s Plus, 6, 6 Plus, SE 5s 5c 5, iPad Air 2 Pro, iPad mini 2 3 4, iPad 4th Gen [Apple MFi Certified](Black and White) | 4.3766233766233764 | Great cable and works well. Exact fit as Apple cable. I would recommend this to anyone who is looking to save money and for a quality cable.                                                                                                                                                                                                                                                                                                                                                             | Apple certified lightning cable |  1078 |
| B004911E9M | Wall AC Charger USB Sync Data Cable for iPhone 4, 3GS, and iPod                                                                                                                                        | 2.4281805745554035 | A total waste of money for me because I needed it for a iPhone 4.  The plug will only go in upside down and thus won't work at all.                                                                                                                                                                                                                                                                                                                                                                      | Won't work with a iPhone 4!     |   731 |
| B002D4IHYM | New Trent Easypak 7000mAh Portable Triple USB Port External Battery Charger/Power Pack for Smartphones, Tablets and more (w/built-in USB cable)                                                        | 4.5216095380029806 | I bought this product based on the reviews that i read and i am very glad that i did. I did have a problem with the product charging my itouch after i received it but i emailed the company and they corrected the problem immediately. VERY GOOD customer service, very prompt. The product itself is very good. It charges my power hungry itouch very quickly and the imax battery power lasts for a long time. All in all a very good purchase that i would recommend to anyone who owns an itouch. | Great product &amp; company         |   671 |

3 rows in set (1.54 sec)


</code></pre><p>接下來，我們關閉倒排索引，以觀察未加倒排索引時的查詢耗時。這裏需要説明的是，當需要關閉索引或在增加索引後發現效果不理想，可以在 MySQL 客戶端中執行 <code>set enable_inverted_index_query=false;</code>，便捷且快速地臨時關閉倒排索引。我們再次運行查詢 SQL，如下所示，查詢耗時為 1.8s。</p><pre><code class="language
| product_id | product_title                                                                                                                                                                                          | rating             | any_value(review_body| any_value(review_headline)            | count |

| B00J46XO9U | iXCC Lightning Cable 3ft, iPhone charger, for iPhone X, 8, 8 Plus, 7, 7 Plus, 6s, 6s Plus, 6, 6 Plus, SE 5s 5c 5, iPad Air 2 Pro, iPad mini 2 3 4, iPad 4th Gen [Apple MFi Certified](Black and White) | 4.3766233766233764 | These cables are great. They feel quality, and best of all, they work as they should. I have no issues with them whatsoever and will be buying more when needed| Just like the original from Apple     |  1078 |
| B004911E9M | Wall AC Charger USB Sync Data Cable for iPhone 4, 3GS, and iPod                                                                                                                                        | 2.4281805745554035 | I ordered two of these chargers for an Iphone 4. Then I started experiencing weird behavior from the touch screen. It would select the wrong area of the screen, or it would refuse to scroll beyond a certain point and jump back up to the top of the page. This behavior occurs whenever either of the two that I bought are attached and charging. When I remove them, it works fine once again. Needless to say, these items are being returned.                                                                                                                                                                                                                                                                                                                                                                              | Beware - these chargers are defective |   731 |
| B002D4IHYM | New Trent Easypak 7000mAh Portable Triple USB Port External Battery Charger/Power Pack for Smartphones, Tablets and more (w/built-in USB cable)                                                        | 4.5216095380029806 | I received this in the mail 4 days ago, and after charging it for 6 hours, I've been using it as the sole source for recharging my 3Gs to see how long it would work.  I use my Iphone A LOT every day and usually by the time I get home it's down to 50% or less.  After 4 days of using the IMAX to recharge my Iphone, it finally went from 3 bars to 4 this afternoon when I plugged my iphone in.  It charges the iphone very quickly, and I've been topping my phone off (stopping around 95% or so) twice a day.  This is a great product and the size is very similar to a deck of cards (not like an iphone that someone else posted) and is very easy to carry in a jacket pocket or back pack.  I bought this for a 4 day music festival I'm going to, and I have no worries at all of my iphone running out of juice! | FANTASTIC product!                    |   671 |

3 rows in set (1.80 sec)


</code></pre><p>綜上可知，倒排索引對於低基數列場景也有 15% 的查詢性能提升，雖不如高基數列場景的提升效果，但並未產生退化效果或負面影響。此外，Apache Doris 針對低基數列採用了較好的編碼（如字典編碼）方式和壓縮技術，並且可以通過內置索引（如 zonemap）進行有效過濾。因此，即使不添加倒排索引仍能展現較好的查詢效果。</p><span id="OSC_h2_12"></span><h2>總結語</h2><p>總而言之，Apache Doris 中的倒排索引顯著優化了針對謂詞列的過濾操作，即 SQL 查詢中的 Where 子句。通過精確匹配行號，減少了存儲層需要掃描的數據量，從而提高了查詢性能。即使在性能提升有限的情況下，倒排索引也不會對查詢效率產生負面影響。此外，倒排索引還支持輕量級的索引管理操作，如對增加或刪除索引（ADD/DROP INDEX）以及構建索引（BUILD INDEX）操作進行管理。同時，還提供了在 MySQL 客戶端便捷地啓用或關閉索引（enable_inverted_index_query=true/false）的功能，使用戶能夠輕鬆利用倒排索引來檢驗查詢加速效果。</p><p>倒排索引和 NGram Bloom Filter 索引為不同場景提供了查詢加速方案，在選擇索引類型時，數據集的特定特徵和查詢模式是關鍵考慮因素。以下是一些常見的適配場景：</p><ul><li><strong>大規模數據非主鍵列點查場景：</strong> 在這種場景下，往往存在大量分散的數值列在值，且查詢的值命中量很低。為了加速查詢，除了在建表時利用 Doris 內置的智能索引能力之外，還可以通過給對應的列增加倒排索引來加速查詢。倒排索引對字符類型、數值類型、日期等標量類型支持比較完整。</li><li><strong>短文本列的文本檢索場景：</strong> 如果短文本分佈比較離散（即文本之間相似度低），則適合使用 Ngram Bloom Filter 索引，能夠有效地處理短文本的模糊匹配查詢（LIKE）。同時，在短文本場景下 Apache Doris 的向量化處理能力可以得到更加充分和高效的應用和發揮。如果短文本分佈比較集中（如大量文本相似，少量文本不同），則適合使用倒排分詞索引，這樣可以保證詞典比較小，適合快速檢索獲取行號列表。</li><li><strong>長文本列的文本搜索場景：</strong> 針對長文本列，倒排分詞索引是更好的方案。相比於暴力字符串匹配，倒排索引提供了更高效的查詢性能，避免了大量的 CPU 資源消耗。</li></ul><p>自 Apache Doris 最早引入倒排索引至今已有近一年時間，從，早期 2.0 Preview 版本至最近發佈的 2.0.4，這一年間經歷了大量開源用戶在真實業務環境海量數據下的打磨和驗證，性能與穩定性已經得到充分驗證。而在後續的規劃中，我們也將持續在現有基礎上進行迭代和優化，包括：</p><ul><li><strong>自定義倒排索引分詞能力，</strong> 針對用戶在不同場景下分詞效果的需求，提供用戶對自定義分詞器。</li><li><strong>支持更多類型的倒排索引，</strong> 後續會增加對 Array、Map 等複雜數據類型的支持，以更全面地滿足各類查詢需求。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 03:12:56 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5735652/blog/10946708</guid>
            <link>https://my.oschina.net/u/5735652/blog/10946708</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[大神只用 Excel 就構建了一顆 CPU：具有 128kb RAM、配備彙編語言]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>YouTube 科技博主「Inkbox」近日發佈視頻介紹如何在 Microsoft Excel 的限制下構建功能齊全 CPU。Inkbox 稱沒有使用任何 Visual Basic 腳本或插件 —— 完全用 Excel 實現。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-b39e1a5e12f6b2b05206163af0964e75039.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D5rg7xvTJ8SU" target="_blank">https://www.youtube.com/watch?v=5rg7xvTJ8SU</a></u></em></p></blockquote><p>據介紹，這是一顆 16 位 CPU，在 Excel 中構建並以 3Hz 時鐘頻率運行，具有 128KB RAM、16 色 128x128 像素顯示屏和自定義彙編語言，所有這些都在 Excel 中運行。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-05bafb20ee50b854fae8d35fd3dd39d81d6.png" referrerpolicy="no-referrer"></p><p>這個 Excel CPU 項目最令人印象深刻的壯舉之一是 Inkbox 為其創建了功能完整的<strong>彙編語言 Excel-ASM16</strong>，它包含 23 種不同的指令，並支持變量、標籤，甚至二進制文件。雖然這些是彙編語言的基本功能，但對於在 Microsoft Excel 下運行的 16 位 CPU 的限制來説已經足夠了。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d48c1c2c41f8b1cdf10a21f3aeef8642108.png" referrerpolicy="no-referrer"></p><p>如果各位感興趣，可通過作者在 GitHub 提供的文件來嘗試：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FInkboxSoftware%2FexcelCPU" target="_blank">https://github.com/InkboxSoftware/excelCPU</a></u></em>。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-aae05a6c21c604e1ec7a527008912e357a2.png" referrerpolicy="no-referrer"></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 03:08:56 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276824/16-bit-cpu-built-and-runs-in-excel</guid>
            <link>https://www.oschina.net/news/276824/16-bit-cpu-built-and-runs-in-excel</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Windows 重新設計引導安裝界面]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>微軟上週<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsspai.com%2Flink%3Ftarget%3Dhttps%253A%252F%252Fblogs.windows.com%252Fwindows-insider%252F2024%252F01%252F26%252Fannouncing-windows-11-insider-preview-build-26040-canary-channel%252F" target="_blank">發佈</a>了新的 Canary 頻道 Windows 11 預覽版，構建號為 Build 26040。這一版本中，微軟大幅修改了使用安裝鏡像引導安裝步驟的界面設計。<strong>據稱這是該界面自 Windows Vista 以來首次獲得顯著更新</strong>，但功能、流程仍與之前大致相同。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-26e854305d1df56a60cfcdba9ed69958381.png" referrerpolicy="no-referrer"></p><p>Build 26040 的其他新功能還包括從附近 Android 設備獲取截圖、將 Surface 上加強通話中人聲的 Voice Clarity 功能開放給更多用戶，以及支持 USB 80Gbps 等。微軟還在同版本號的 Windows Server 預覽版中正式採用了 Windows Server 2025 的品牌名稱。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 29 Jan 2024 02:19:27 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276820/winsetup-redesign</guid>
            <link>https://www.oschina.net/news/276820/winsetup-redesign</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[iOS 17.4 測試版包含大模型相關代碼]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>外界普遍預計蘋果將在 6 月份通過 iOS 18 推出主要的新人工智能功能。<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2F9to5mac.com%2F2024%2F01%2F26%2Fapple-siri-chatgpt-ios-18-development%2F" target="_blank">不過根據 9to5Mac 的報道</a></u>，他們在 iOS 17.4 第一個測試版中發現的代碼表明，蘋果正在開發由大語言模型技術支持的 Siri 新版本，並得到了其他來源的一些幫助。</p><p>所謂其他來源是指蘋果似乎正在使用 OpenAI 的 ChatGPT API 進行內部測試，以幫助開發自己的 AI 模型。代碼顯示，iOS 17.4 包含一個新的 SiriSummarization 私有框架，可調用 OpenAI 的 ChatGPT API。由於蘋果不太可能會在 iOS 18 正式版本中使用 ChatGPT 支持其 AI 功能，所以它更可能是在對自己的大模型進行內部測試，然後與 ChatGPT 的結果進行對照。</p><p>此外，SiriSummarization 框架包含多個系統提示次示例，比如「請總結」、「請回答這個問題」和「請總結給定的文本」之類的內容。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3f96d8da8563affdc4b0df3d91c734d13e7.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2702eb6dc68bef558e9523eeb683230bad0.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-de57b6c81deabb583eec4ad236180f46b43.png" referrerpolicy="no-referrer"></p><p>目前看來，iOS 17.4 代碼表明蘋果正在測​​試四種不同的人工智能模型。這包括之前報道過的蘋果內部模型「Ajax」。並且 iOS 17.4 正在測試兩個版本的 AjaxGPT，其中一種在設備上處理，另一種不在設備上處理——可能是在雲端。</p><hr><p>延伸閲讀：<em><u><a href="https://www.oschina.net/news/272282/apple-wants-ai-to-run-directly-on-its-hardware" target="news">蘋果將大語言模型部署到設備本地</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 28 Jan 2024 03:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276784/apple-siri-chatgpt-ios-18-development</guid>
            <link>https://www.oschina.net/news/276784/apple-siri-chatgpt-ios-18-development</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ubuntu 24.04 LTS 默認內核將採用 Linux 6.8]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Canonical 公佈了 Ubuntu 24.04 LTS 的內核計劃，並表示將正在開發的 Linux 6.8 作為下一個長期支持 Ubuntu 桌面/服務器發行版的默認內核。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-52cfbfb2fcedea1152f4477d95c244d43dc.png" referrerpolicy="no-referrer"><br><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.ubuntu.com%2Ft%2Fintroducing-kernel-6-8-for-the-24-04-noble-numbat-release%2F41958" target="_blank">https://discourse.ubuntu.com/t/introducing-kernel-6-8-for-the-24-04-noble-numbat-release/41958</a></u></em></p></blockquote><p>此前許多人在討論&nbsp;Ubuntu 24.04 LTS 會採用哪個內核版本，有人覺得是 Linux 6.6 LTS，因為它在 2023 年成為了長期支持版本。也有人認為是最新的穩定內核 Linux 6.7，該版本有很多有用的新特性。</p><p>現在 Canonical 工程師 Andrea Righi 宣佈了在 Ubuntu 24.04 中採用 Linux 6.8 作為默認內核的暫定計劃。目前實驗性內核構建已經可以通過 PPA 獲得。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2e410065f0236df7ac936c52bc02d24a386.png" referrerpolicy="no-referrer"></p><p>目前看來，有了 Linux 6.8 內核、GNOME 46 桌面環境、GCC 13 編譯器和其他更新的工具鏈組件、Mesa 24.0 以及許多其他更新的加入，Ubuntu 24.04 LTS 的表現應該會相當不錯。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 28 Jan 2024 02:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276779/ubuntu-24-04-will-use-linux-6-8</guid>
            <link>https://www.oschina.net/news/276779/ubuntu-24-04-will-use-linux-6-8</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[感謝有你，1Panel 開源面板項目致敬社區開發者]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start"><span><span style="color:#000000">2024 年 1 月 24 日，1Panel 開源面板項目 GitHub Star 數成功突破 15,000 大關。</span></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">1Panel 開源項目（</span></span><em><span><span style="color:#000000">https://github.com/1Panel-dev</span></span></em><span><span style="color:#000000">）於 2023 年 3 月 20 日正式發佈。作為一款現代化、開源的 Linux 服務器運維管理面板，1Panel 旨在通過開源的方式，幫助用戶簡化建站與運維管理流程。</span></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">在廣大用戶和開發者的支持下，1Panel 與開源社區共同成長，連續二個季度入選 ROSS Index 最具成長性開源初創榜單。1Panel 也是中國領先的開源軟件提供商 FIT2CLOUD 飛致雲旗下最具成長性的開源項目，自項目對外發布至在代碼託管平台 GitHub</span><strong><span style="color:#ff8124">獲得 15,000 個 Star 耗時 315 天。</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">1Panel 開源項目組感謝以下 61 位社區開發者為本項目在過去的 10 個月所做出的傑出貢獻：</span></span></p><p style="color:#000000; text-align:center"><span><span style="color:#000000">zhengkunwang223<br> ssongliu<br> wangdan-fit2cloud<br> wanghe-fit2cloud<br> maninhill<br> liqiang-fit2cloud<br> wan92hen<br> LeeEirc<br> huailei000<br> wojiushixiaobai<br> liuruibin<br> ruibaby<br> luyang351<br> okxlin<br> qwenode<br> WankkoRee<br> Anyexyz<br> deep-project<br> igophper<br> QuentinHsu<br> Mystery00<br> ali-pay<br> eltociear<br> mx2913<br> shaozi17<br> HansHans135<br> wc7086<br> budou0608<br> Avey777<br> penndu<br> TScci<br> moonrailgun<br> emlog<br> vastsa<br> xiongsp<br> clover1420<br> wuhang2003<br> L-607<br> a76yyyy<br> androidmumo<br> mouday<br> kingwrcy<br> bh1xaq<br> sunheyi6<br> maxoyed<br> guclan<br> xiahao90<br> baozishu<br> xinkeng0<br> hhun<br> 2327972001<br> FoXiMao<br> nightzjp<br> xushulang<br> wzrove<br> xiaolongyuan<br> SkyAerope<br> allyxmiko<br> CyJaySong<br> Osub<br> hezhizheng</span></span></p><p style="color:#000000; text-align:start"><span><strong><span style="color:#ff8124">開源漫長路，幸得同行。因為有你，一切才能成真。</span></strong></span></p><p style="color:#000000; text-align:start"><span><span style="color:#000000">為了回饋以上社區開發者對 1Panel 開源面板項目的貢獻，1Panel 開源項目組將為名單中每位開發者發放一件精美的定製衞衣，請名單中的開發者攜帶 GitHub 個人主頁截圖，在 GitHub 平台聯繫</span></span><em><span><span style="color:#000000">@wanghe-fit2cloud</span></span></em><span><span style="color:#000000">領取兌換券，在飛致雲周邊商城兌換即可。</span></span></p><p style="color:#000000; text-align:start"><img alt="" height="800" src="https://oscimg.oschina.net/oscnet/up-64b8ab5f6b7f87f1d738046eae8c0753a59.jpg" width="800" referrerpolicy="no-referrer"></p><p><img alt="" height="800" src="https://oscimg.oschina.net/oscnet/up-424e92275ae129e529a820e5c80a57acaee.jpg" width="800" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 27 Jan 2024 09:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276755</guid>
            <link>https://www.oschina.net/news/276755</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[賈揚清最新開源項目 —— 500 行代碼構建的 AI 搜索工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>賈揚清前幾天在社交平台介紹了自己開發的 AI 應用 <strong>Lepton&nbsp;Search&nbsp;</strong>—— 一個用 500 行 Python 代碼構建的對話式 AI 搜索工具。</p><blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">賈揚清是開源深度學習框架&nbsp;<span>Caffe 創始人、TensorFlow 作者之一、也是 PyTorch 1.0 的共同創始人。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2023 年 3 月，賈揚清從阿里離職後聯合創立了一家新的 AI 公司 Lepton AI，旨在建立高效的 AI 應用平台。Lepton AI 總部位於美國加利福尼亞州帕洛阿託，官網宣稱可通過 Lepton AI 在幾分鐘內高效、大規模地運行 AI 應用。相比大模型，賈揚清團隊更偏重 AI 能力的開發。</p></blockquote><p>Lepton Search 體驗地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsearch.lepton.run%2F" target="_blank">https://search.lepton.run/</a></u></em></p><blockquote><p><img src="https://static.oschina.net/uploads/space/2024/0127/111705_z1mo_2720166.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fjiayq%2Fstatus%2F1750242829769801793" target="_blank">https://twitter.com/jiayq/status/1750242829769801793</a></u></em></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-41b1824d46f8241761f7373dd369c4dc32e.png" referrerpolicy="no-referrer"></p></blockquote><p>賈揚清介紹稱，Lepton Search 的後端是 Mixtral-8x7b 模型，託管在 LeptonAI，輸出速度能達到每秒大約 200 個 token，搜索引擎採用了 Bing 的搜索 API。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-653f2a2bd37324fb0d75d8ceb45ba2c5187.png" referrerpolicy="no-referrer"></p><p>他還分享了自己開發這個項目的一些經驗：</p><blockquote><ol><li>搜索質量至關重要。優質的摘要片段是形成精準概括的關鍵。</li><li>適當加入一些虛構內容實際上有助於補充摘要片段中缺失的「常識性信息」。</li><li>在進行內容概括時，開源模型表現出了卓越的效果。</li></ol></blockquote><p>就在今天，Lepton Search 正式開源，包含完整前後端源代碼，採用 Apache License，可商用。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-116ed38956c869e03488944c71900a4e950.png" referrerpolicy="no-referrer"><strong><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fleptonai%2Fsearch_with_lepton" target="_blank">https://github.com/leptonai/search_with_lepton</a></u></em></strong></p></blockquote><p>可以看到，項目的核心 Python 代碼確實不到 500 行：</p><p><img src="https://oscimg.oschina.net/oscnet/up-77dd1b3dcedd92ca8bb144ffa26f4580df9.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 27 Jan 2024 03:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276738/search-with-lepton-opensource</guid>
            <link>https://www.oschina.net/news/276738/search-with-lepton-opensource</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ChatGPT 官方中文頁面上線]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#2a2a2a; margin-left:0; margin-right:0; text-align:start"><span>據 ChatGPT 頁面顯示，OpenAI 現已向用戶推出 ChatGPT 多語言功能 Alpha 版測試，用戶可以參與該測試並選擇不同語言的界面。</span></p><p style="color:#2a2a2a; margin-left:0; margin-right:0; text-align:start">如下圖所示，ChatGPT 會檢測系統當前使用的語言，並提醒用戶進行切換。</p><p><img src="https://oscimg.oschina.net/oscnet/up-41f3d658b126bb17b44ecc0dcca38d35513.png" referrerpolicy="no-referrer"></p><p style="color:#2a2a2a; margin-left:0; margin-right:0; text-align:start"><span>用戶也可以通過設置頁面選擇不同的語言，目前 OpenAI 提供中文、日語、法語、意大利語、葡萄牙語、德語、俄語等不同的語言選項。</span></p><p style="color:#2a2a2a; margin-left:0; margin-right:0; text-align:start"><span>需要注意的是，<strong>當前版本僅僅是交互頁面顯示中文，默認語言仍然是英文</strong>。</span></p><p><img src="https://oscimg.oschina.net/oscnet/up-025f0868755df562dfaa3a86e44750ca65a.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 27 Jan 2024 02:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276736</guid>
            <link>https://www.oschina.net/news/276736</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌與 Hugging Face 合作，幫助開發人員訓練 AI 模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2F2024%2F1%2F25%2F24050445%2Fgoogle-cloud-hugging-face-ai-developer-access" target="_blank">據 TheVerge 報道</a></u>，Google Cloud 與 AI 模型託管平台 Hugging Face 建立了新的合作伙伴關係，讓開發人員無需支付 Google Cloud 訂閲費用即可構建、訓練和部署 AI 模型。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-d368af44406fc85ef32d28adcf03fb2e856.png" referrerpolicy="no-referrer"></p></blockquote><p>現在，使用 Hugging Face 平台的外部開發人員將能夠「經濟高效」地訪問谷歌的張量處理單元 (TPU) 和 GPU 超級計算機，其中包括數千台 Nvidia 的熱門且出口受限的 H100。</p><p>Hugging Face 是流行的 AI 模型託管平台，存儲了海量開源基礎模型，例如 Meta 的 Llama 2 和 Stability AI 的 Stable Diffusion。它還擁有許多用於模型訓練的數據庫。該平台上託管了超過 350,000 個模型，供開發人員使用或將自己的模型上傳到 Hugging Face，就像程序員將代碼放在 GitHub 上一樣。Hugging Face 的估值為 45 億美元，去年 Google、亞馬遜、Nvidia 等公司幫助籌集了 2.35 億美元。</p><p>谷歌表示，Hugging Face 用戶可以在「2024 年上半年」開始使用人工智能應用程序構建平台 Vertex AI 和 Kubernetes 引擎，幫助訓練和微調模型。</p><p>谷歌在一份聲明中表示，與 Hugging Face 的合作「進一步增強了谷歌雲對開源人工智能生態系統開發的支持」。谷歌的一些模型位於 Hugging Face 上，但其標誌性大型語言模型（如 Gemini，現在為聊天機器人 Bard 提供支持）和文本到圖像模型 Imagen 不在平台上，被認為是更閉源的模型。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 27 Jan 2024 02:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276735</guid>
            <link>https://www.oschina.net/news/276735</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[杭州全橙加入 openKylin，推動社區技術創新和生態發展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>近日，杭州全橙智能軟件有限公司<span>（以下簡稱「<span>杭州全橙</span>」）</span>簽署<span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">了 openKylin 社區</span>CLA(Contributor License Agreement 貢獻者許可協議)，正式加入 openKylin 開源社區。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="1079" src="https://oscimg.oschina.net/oscnet/up-08b2fa33cf54ed04b117fc975bd25c74844.png" width="829" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>杭州全橙誕生於 2021 年，由一羣對開源軟件充滿熱愛的年輕人組成。我們堅信開源軟件會成為人類文明的技術底座以及科技知識的存儲載體。全橙的使命是幫助企業更加高效的基於開源軟硬件生態開發出超越客戶預期的產品及服務，並吸引輔助更多的企業進入開源生態貢獻中。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-f22c6fc2081272d89a93914a93adcd38421.png" width="940" referrerpolicy="no-referrer"></p><p><span>在加入 openKylin 社區後，杭州全橙將進一步加強與社區的合作，加入 RISC-V SIG，在開源軟件移植方面配合社區的遷移工作，為社區在 RISC-V 領域的開源軟件生態貢獻力量，推動社區技術創新和生態發展。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 26 Jan 2024 09:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276714</guid>
            <link>https://www.oschina.net/news/276714</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[湖倉新範式的造浪者 | StarRocks 2023 年度總結（文末福利）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://files.mdnice.com/user/9541/b8d071a5-8994-43a8-a5b7-40f89b778dae.png" referrerpolicy="no-referrer"><img alt="" height="2182" src="https://oscimg.oschina.net/oscnet/up-caedd95a98fb9ac1dfccb3660bedd1731c4.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="3944" src="https://oscimg.oschina.net/oscnet/up-62a23685e32e3a33c3e2c020e0d291ccbe2.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="2206" src="https://oscimg.oschina.net/oscnet/up-aeb14bfffb7c1900d157a28df7eab7198d9.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="2675" src="https://oscimg.oschina.net/oscnet/up-4c625f199e90927a365f8c3f9e44051ddf3.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="3959" src="https://oscimg.oschina.net/oscnet/up-7d38d20c2c0de1d35eda5259b4644434a90.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="1582" src="https://oscimg.oschina.net/oscnet/up-c362b58f82630c930e5c2bd5d305b5f6673.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="1949" src="https://oscimg.oschina.net/oscnet/up-8954a8e599c50a94e679577d4fa5a0f3c0d.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="2869" src="https://oscimg.oschina.net/oscnet/up-5b2e73606a896c25a1cdebf5a267b85af50.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="1341" src="https://oscimg.oschina.net/oscnet/up-52fe8de49c747cbad97034172df899b5b54.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="1055" src="https://oscimg.oschina.net/oscnet/up-98969aa60f0eed4c4c5c6588b452381fcbc.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="3312" src="https://oscimg.oschina.net/oscnet/up-9285cee27034a78cad2e436895ef705c7c1.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="1583" src="https://oscimg.oschina.net/oscnet/up-a55ea920c7bec4bf0ad447cbd0c80192942.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="1357" src="https://oscimg.oschina.net/oscnet/up-56561c3a899f0bf07376af06b9e3ef5678a.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-d4d7604ef7c4a6713f60ad2daec1d9c879f.png" width="845" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://files.mdnice.com/user/9541/1ed2507b-3758-45f5-aa48-353be3881ced.png" referrerpolicy="no-referrer"><img alt="" src="https://files.mdnice.com/user/9541/91cc5496-2499-4e4c-b398-a9f810b85765.png" referrerpolicy="no-referrer"><img alt="" src="https://files.mdnice.com/user/9541/8c32a905-cb20-4702-a9b8-6ab1d1c3b465.png" referrerpolicy="no-referrer"><img alt="" src="https://files.mdnice.com/user/9541/0ef20d30-ee46-4924-9e1d-616cf3535e9a.png" referrerpolicy="no-referrer"><img alt="" src="https://files.mdnice.com/user/9541/d23dcddb-2766-4fc7-abd5-87222e2192c3.png" referrerpolicy="no-referrer"><img alt="" src="https://files.mdnice.com/user/9541/8ce92f33-1883-4e93-a907-01faa7efd7ef.png" referrerpolicy="no-referrer"><img alt="" src="https://files.mdnice.com/user/9541/0f70fa89-2b4d-469a-96c7-bf551c3b4253.png" referrerpolicy="no-referrer"><img alt="" src="https://files.mdnice.com/user/9541/38b0171e-b1cc-4350-bdb8-ea911c4d1d0d.png" referrerpolicy="no-referrer"><img alt="" src="https://files.mdnice.com/user/9541/2cdee249-3f6b-45ad-8089-7ae61aacdf2c.png" referrerpolicy="no-referrer"><img alt="" src="https://files.mdnice.com/user/9541/4f7afe29-7449-491e-8046-5beb79190fb5.png" referrerpolicy="no-referrer"><img alt="" src="https://files.mdnice.com/user/9541/5cee0625-41f1-4873-87ea-d72bab1f4062.png" referrerpolicy="no-referrer"><img alt="" src="https://files.mdnice.com/user/9541/ec777ab4-97f9-418c-ab46-4e9abf28c789.png" referrerpolicy="no-referrer"><img alt="" src="https://files.mdnice.com/user/9541/1b46d79c-ac46-4b94-9873-94c8cbc0179c.png" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><strong>新年期望徵集</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">社區的進步離不開大家的支持，新的一年我們也期望能與更多的小夥伴們大步前行、共同成長。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">最後，歡迎來 StarRocks 論壇寫下你對社區 2024 年的期望，我們還有好禮相贈。大膽的留下你的想法，萬一實現了呢！</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">任意選擇以下一個或多個問題回答就能成功參加抽獎，2/19 開獎：</p><ol><li><p>你最希望社區推出什麼 feature？</p></li><li><p>你最希望社區跟哪個大數據生態組件結合？</p></li><li><p>你最希望社區提供怎樣的內容？</p></li><li><p>你希望社區提供什麼活動？或是去哪個城市？</p></li><li><p>其他建議</p></li></ol><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><strong>獎品池</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">京東卡 100 元 *3 B 站季度大會員 *5 StarRocks 鼠標墊 *5 StarRocks 峯會紀念 T 恤 *10 （花樣可 4 選擇 1，因為要定製，年後才會開始寄送！）</p><p><img alt="" src="https://files.mdnice.com/user/9541/230fd404-3e2a-4eed-83fc-287791cbdac6.jpg" referrerpolicy="no-referrer"><img alt="" height="584" src="https://oscimg.oschina.net/oscnet/up-7cfc2e3fb6d0669e252141d7a00e4bd99ed.jpg" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left"><strong>活動傳送門</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">https://forum.mirrorship.cn/t/topic/10947</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 26 Jan 2024 08:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276709</guid>
            <link>https://www.oschina.net/news/276709</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 年最受歡迎的人工智能工具 TOP 10]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>使用 SEO 行業著名的工具 SEMrush，通過從列出 AI 工具的各種目錄中抓取數據，根據訪問量排名，最受歡迎的前 10 大工具如下：</p><p>1、OpenAI 的產品 <strong>ChatGPT</strong> 在 2022 年底引發了人工智能熱潮，成為 2023 年最受歡迎的人工智能工具。從 2022 年 9 月到 2023 年 8 月，ChatGPT 佔據了行業網絡訪問量的 60% 以上，網站訪問量達到 146 億次。</p><p>2、排在 ChatGPT 之後的是另一個聊天機器人<strong>Character.AI，</strong>它與生產力相關的用戶查詢的單一 LLM 不同，而是用戶可以自由交談的對話機器人（dialog agents）。其可以扮演的角色包括從電視節目和視頻遊戲中的明星到約會教練、還有全球在世和過世的名人。</p><p>3、書寫工具 <strong>QuillBot</strong> 躋身 2023 年最受歡迎的人工智能網絡產品前三名，這三者合計占人工智能產品網站訪問量的 80% 以上。</p><p>4-5、除了 LLMs 之外，領先的 AI 圖像生成器 <strong>Midjourney</strong> 是 2023 年第四大最受歡迎的 AI 工具，緊隨其後的是開源社區 <strong>Hugging Face</strong>，該社區擁有數百種獨特的 AI 模型，其中包括 、圖像生成器和其他可免費訪問的人工智能工具。</p><p>6-10、排名第 6-10 名的工具依次為：大型語言模型 Google 的<strong>Bard</strong>、人工智能寫作工具<strong>NovelAI</strong>、視頻製作人工智能工具 <strong>CapCut</strong>、聊天機器人工具 <strong>JanitorAI</strong>、圖像生成工具<strong> Civitas</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0dcc31a6ee823c1bb8bb86385ea8cd56b72.png" referrerpolicy="no-referrer"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.visualcapitalist.com%2Franked-the-most-popular-ai-tools%2F" target="_blank">https://www.visualcapitalist.com/ranked-the-most-popular-ai-tools/</a></em></u></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 26 Jan 2024 07:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276707/the-most-popular-ai-tools-2023</guid>
            <link>https://www.oschina.net/news/276707/the-most-popular-ai-tools-2023</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FTC 就微軟、OpenAI 等的 AI 投資及合作展開調查]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">美國聯邦貿易委員會（FTC）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ftc.gov%2Fnews-events%2Fnews%2Fpress-releases%2F2024%2F01%2Fftc-launches-inquiry-generative-ai-investments-partnerships" target="_blank">宣佈</a>針對生成式 AI 市場中最大的五家參與者：谷歌母公司 Alphabet 、亞馬遜、Anthropic PBC、微軟和 OpenAI&nbsp;五家大型科技公司的 AI 投資和合作夥伴關係展開調查。</span></p><p><span style="color:#000000">作為 OpenAI 的主要投資方，微軟自 2019 年雙方開展合作以來已向 OpenAI 投資了至少 130 億美元，並獲得了該公司 49% 的股份。亞馬遜和谷歌也已分別承諾向 Anthropic 投資 40 億美元和 20 億美元。</span></p><p><span style="color:#000000">FTC 此舉是基於《聯邦貿易委員會法》第 6(b) 條，審查微軟與 OpenAI、亞馬遜與 Anthropic 以及谷歌與 Anthropic 之間的交易對市場競爭格局的影響。此次調查也將有助於該機構加深執法人員對生成式 AI 開發者和雲服務供應商之間的投資和合作關係的瞭解。</span></p><p><img height="229" src="https://oscimg.oschina.net/oscnet/up-ae265ed8bae04913684ea7b268e78f88045.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">目前，FTC 已將強制令發送給了各家，並要求這幾家公司在 45 天內提供調查所需的信息。包括：</span></p><ul><li><span style="color:#000000">有關具體投資或合作伙伴關係的信息，包括協議和投資/夥伴關係的戰略理由。</span></li><li><span style="color:#000000">具體合作或投資的實際影響，包括圍繞新產品發佈、管理或監督權以及定期會議主題的決策。</span></li><li><span style="color:#000000">交易的競爭影響分析，包括與市場份額、競爭、競爭對手、市場、銷售增長潛力或產品或地域市場擴張有關的信息。</span></li><li><span style="color:#000000">AI 投入和資源的競爭，包括生成式 AI 所需的關鍵產品和服務的競爭態勢。</span></li><li><span style="color:#000000">向任何其他政府實體（包括外國政府實體）提供的與這些主題相關的任何調查、信息請求或其他問詢有關的信息。</span></li></ul><p><span style="color:#000000">FTC 主席 Lina M. Khan 在聲明中表示，「歷史表明，新技術可以創造新市場和良性競爭。隨着公司競相開發 AI 並將其貨幣化，我們必須警惕那些扼殺這一機遇的策略。我們的研究將揭示佔主導地位的公司所進行的投資和合作是否有扭曲創新和破壞公平競爭的風險。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 26 Jan 2024 07:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276704/ftc-launches-inquiry-generative-ai-investments-partnerships</guid>
            <link>https://www.oschina.net/news/276704/ftc-launches-inquiry-generative-ai-investments-partnerships</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 年湖南省人工智能和大數據產業發展年度報告]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>湖南省工業和信息化廳今日發佈了<em>《2023 年湖南省人工智能和大數據產業發展年度報告》</em>。報告提到，2023 年湖南省<strong>人工智能核心產業產值達到 189 億元</strong>，同比增長 24%，<strong>大數據產業產值達到 1250 億元</strong>，同比增長 13%。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2024/0126/143021_0nKV_2720166.png" referrerpolicy="no-referrer"><br><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgxt.hunan.gov.cn%2Fgxt%2Fxxgk_71033%2Ftzgg%2F202401%2Ft20240126_32635744.html" target="_blank">https://gxt.hunan.gov.cn/gxt/xxgk_71033/tzgg/202401/t20240126_32635744.html</a></em></u></p></blockquote><p>根據報告中的算力相關數據，湖南全省算力規模超 5200PFlops，超算算力位居全國第三位，建成和在建規模以上數據中心 51 個，標準機架 17.2 萬架。</p><p>人工智能技術方面，<span style="background-color:#ffffff; color:#3b3b3b">湘江鯤鵬推出的兆瀚</span><span style="background-color:#ffffff; color:#3b3b3b">RA2300-A</span><span style="background-color:#ffffff; color:#3b3b3b">系列</span><span style="background-color:#ffffff; color:#3b3b3b">AI</span><span style="background-color:#ffffff; color:#3b3b3b">推理服務器在算力、精度、計算效率等方面處於國內領先水平，廣泛應用於</span><span style="background-color:#ffffff; color:#3b3b3b">OCR</span><span style="background-color:#ffffff; color:#3b3b3b">識別、搜索推薦、智慧城市等諸多中心側大模型推理場景。</span></p><p>報告最後提到了他們面臨諸多問題和挑戰：</p><ul><li><strong>一是算力資源利用效率有待提升</strong>。全省智能算力佔比較低，算力資源利用率不高，全省規模以上數據中心機架利用率低於全國平均水平。</li><li><strong>二是頭部企業支撐引領有待加強</strong>。我省人工智能、大數據企業普遍存在體量小、技術力量薄弱、產品單一等問題，缺少具有全國代表性龍頭企業。</li><li><strong>三是行業融合應用水平有待拓展</strong>。我省人工智能、大數據應用場景總體不夠深入，與不同領域結合程度差距較大，主要應用場景集中在智能製造、智能交通、電子政務智能管控等領域，農業、輕工業等領域應用程度相對較低。</li><li><strong>四是產業創新發展生態有待優化</strong>。高質量數據集相對匱乏，人工智能開源生態尚未完備，產業鏈的帶動性和影響力有待進一步提高。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 26 Jan 2024 06:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276697</guid>
            <link>https://www.oschina.net/news/276697</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[今天是將 Firefox 設置為默認瀏覽器的好日子]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>蘋果今日<u><a href="https://www.oschina.net/news/276674">宣佈</a></u>在在歐盟地區對 iOS、Safari 瀏覽器和 App Store 進行更改。</p><p>其中 Safari 瀏覽器在歐盟地區的更改如下：<strong>iOS 用戶現在就可以將第三方網絡瀏覽器（而非 Safari 瀏覽器）設為默認瀏覽器</strong>。</p><p>Firefox 當即發推表示：「<em>今天是將 Firefox 設置為默認瀏覽器的好日子<img alt="😎" height="20.39772605895996" src="https://abs-0.twimg.com/emoji/v2/svg/1f60e.svg" style="margin-left:0.075em; margin-right:0.075em" width="20.39772605895996" referrerpolicy="no-referrer">。</em>」</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-af61337c299ca89913bc382cdf8e3d8f7e7.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Ffirefox%2Fstatus%2F1750252384582803578" target="_blank">https://twitter.com/firefox/status/1750252384582803578</a></u></em></p></blockquote><ul><li>延伸閲讀：<em><u><a href="https://www.oschina.net/news/269923/firefox-on-the-brink" target="news">Firefox 會被淘汰嗎？</a></u></em></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 26 Jan 2024 04:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276693</guid>
            <link>https://www.oschina.net/news/276693</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
