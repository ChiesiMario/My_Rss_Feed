<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>開源中國-最新資訊</title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml"></atom:link>
        <description>開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)</description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>en</language>
        <lastBuildDate>Wed, 20 Mar 2024 20:33:18 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>前端項目 Fes-design v0.8.37 版本更新</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h2&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcompare%2Fv0.8.36...v0.8.37&quot; target=&quot;_blank&quot;&gt;0.8.37&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(2024-03-14)&lt;/h2&gt; 
&lt;h3&gt;Bug Fixes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SelectTree:&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;修復 TreeOption 的 label 為自定義渲染時，過濾函數的邏輯 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F676&quot; target=&quot;_blank&quot;&gt;#676&lt;/a&gt;) (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2F5f6d61c1dde6f44b653bda182bc772b66da5d733&quot; target=&quot;_blank&quot;&gt;5f6d61c&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tabs:&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;滾動條複用 Scrollbar 組件，同時修復 Win 下橫向滾動問題 (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fissues%2F675&quot; target=&quot;_blank&quot;&gt;#675&lt;/a&gt;) (&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWeBankFinTech%2Ffes-design%2Fcommit%2Fafdb82149785642e829f7550a82d12760c52df86&quot; target=&quot;_blank&quot;&gt;afdb821&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;FES-Design 是由微眾銀行前端技術團隊聯合用戶體驗設計團隊共同打造的一款服務於中後台系統的組件庫，其初衷是為了給中後台系統開發者提供一個好用的前端應用解決方案，前端技術團隊始終以 「快速、簡單、穩定」 為核心理念，推動 FES-Design 的成長，FES-Design 的設計體系目前還在不斷的探索中，希望今後能夠通過更多的積累為用戶提供一款更優秀更專業的企業級產品設計體系。&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283960/fes-design-0-8-37-released</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283960/fes-design-0-8-37-released</guid>
            <pubDate>Wed, 20 Mar 2024 10:11:27 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>✍🏻測評報告 | 2023 中文大模型全景及國內外大模型測評</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;text-align:start&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#060607&quot;&gt;《中文大模型基準測評 2023 年度報告》，由 SuperCLUE 團隊發佈，報告提供了 2023 年中文大模型發展的全面回顧，包括關鍵進展、測評體系、綜合測評結果以及優秀模型案例，為瞭解該領域的最新動態提供了寶貴的信息。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;background-color:#ffffff; color:#060607&quot;&gt;以下為主要內容：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;1. 國內大模型關鍵進展&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;時間線&lt;/strong&gt;：報告按照時間線劃分了 AI 大模型發展的三個階段：準備期、成長期和爆發期。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;關鍵事件&lt;/strong&gt;：從 ChatGPT 發佈引發全球 AI 浪潮，到國內大模型的迅速發展和多樣化，包括多個重要時間節點和相關模型的發佈。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;2. 大模型全景圖&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;img height=&quot;702&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0320/164821_iSdC_4700705.png&quot; width=&quot;1481&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;模型分類&lt;/strong&gt;：介紹了通用大模型和行業大模型，包括閉源和開源模型。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;代表性模型&lt;/strong&gt;：列舉了多個代表性的中文大模型，如字節跳動的 AndesGPT、百度的文心一言、阿里雲的通義千問等。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;3. 測評體系和方法&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;SuperCLUE 介紹&lt;/strong&gt;：詳細説明瞭 SuperCLUE 測評基準的中立性和客觀性，以及其多層次、多維度的綜合性測評體系。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;測評層級和體系&lt;/strong&gt;：介紹了 SuperCLUE 的多個測評層級，包括專業與技能、語言與知識、安全性等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;測評方法&lt;/strong&gt;：解釋瞭如何通過自動化方式進行客觀評估，包括多輪對話場景和主觀題+客觀題的結合。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;4. 大模型綜合測評結果&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;模型象限&lt;/strong&gt;：使用 SuperCLUE 模型象限展示了不同模型在基礎能力和應用能力上的定位。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;國內外大模型表現&lt;/strong&gt;：分析了國內外大模型的總體表現，特別是 GPT4-Turbo 的領先情況。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;國內大模型競爭格局&lt;/strong&gt;：討論了國內大模型的競爭態勢，包括創業公司與大廠的對比。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;5. SuperCLUE 2.0 升級&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;行業及專項測評基準&lt;/strong&gt;：介紹了 SuperCLUE 2.0 在行業和專項測評方面的升級，如汽車行業、金融行業、安全測評等。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;6. 四大維度測評分析及示例介紹&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;語言與知識&lt;/strong&gt;：分析了模型在生成與創作、語言理解、上下文對話等方面的表現。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;專業與技能&lt;/strong&gt;：討論了模型在計算、邏輯推理、代碼等方面的表現。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;工具使用&lt;/strong&gt;：評估了模型在檢索 API、調用 API、規劃 API 等方面的能力。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;傳統安全&lt;/strong&gt;：考察了模型在財產隱私、違法犯罪、偏見歧視等方面的安全能力。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;text-align:start&quot;&gt;&lt;strong&gt;7. 優秀模型案例介紹&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;文心一言 4.0&lt;/strong&gt;：百度推出的模型，表現均衡，尤其在計算、邏輯推理等方面。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;通義千問 2.0&lt;/strong&gt;：阿里雲的模型，擅長代碼、上下文對話等。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AndesGPT&lt;/strong&gt;：OPPO 的模型，具有對話增強、個性專屬等特點。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Baichuan2-13B-Chat&lt;/strong&gt;：百川智能的開源模型，邏輯推理和生成與創作能力突出。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;智譜清言&lt;/strong&gt;：清華&amp;amp;智譜 AI 推出的模型，工具使用能力排名第一。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#060607; margin-left:0; margin-right:0; text-align:start&quot;&gt;報告通過這些詳細的分析和案例介紹，為讀者提供了對 2023 年中文大模型發展的深入理解，同時也為未來的研究方向和應用場景提供了指導。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;報告詳情可至&lt;strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span style=&quot;background-color:#f39c12&quot;&gt;「開源中國 APP - 報告模塊」&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;下載&lt;/span&gt;查看。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;APP 下載地址：&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;300&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;（&lt;em&gt;目前僅提供 Android 版本）&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283942</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283942</guid>
            <pubDate>Wed, 20 Mar 2024 09:07:52 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>.NET 9 PreView2 + .AOT ILC 的重大變化</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                    &lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;前言&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;.NET9 PreView2 發佈了，它的 CLR 方面主要有兩個重磅功能&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;RyuJIT 增強功能&lt;/li&gt; 
 &lt;li&gt;Arm64 矢量化&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;原文：&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fmp.weixin.qq.com%2Fs%253F__biz%253DMzg5NDYwNjU4MA%253D%253D%2526mid%253D2247486290%2526idx%253D1%2526sn%253D726ec65a0956e4de5840f27d8e6b2004%2526chksm%253Dc01c46c9f76bcfdf6170e771d067f8d669ac02775332bc466c0f9a1276982e315c1e7ef430c9%2526token%253D1776199625%2526lang%253Dzh_CN%2523rd&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;.NET9 PreView2 的重磅功能&lt;/a&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fmp.weixin.qq.com%2Fs%253F__biz%253DMzg5NDYwNjU4MA%253D%253D%2526mid%253D2247486298%2526idx%253D1%2526sn%253D5aab48e01251c3bb6dbf100050fcc707%2526chksm%253Dc01c46c1f76bcfd7d9cb8a264c71bdeb327cd52a35f030f10dc4379b14d460eceb574b49e14e%2526token%253D1776199625%2526lang%253Dzh_CN%2523rd&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;.NET9 AOT ILC 的重大變化&lt;/a&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;u&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fmp.weixin.qq.com%2Fs%253F__biz%253DMzg5NDYwNjU4MA%253D%253D%2526mid%253D2247486254%2526idx%253D1%2526sn%253Da0050659da6ee8b0696f1c758d8046d5%2526chksm%253Dc01c46b5f76bcfa3524abeb373258f10b2909ca8ac490c1eb8ed5c4a2c30c98a6712f6a8a099%2526token%253D1776199625%2526lang%253Dzh_CN%2523rd&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;歡迎加入.NET9 技術交流羣&lt;/a&gt;&lt;/strong&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;下面分別看下&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_2&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;RyuJIT 增強功能&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;1.環路優化 (循環優化)&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;這種優化實際上是一種 for 循環疊加態的優化，for 循環疊加計算的過程中，會對其中部分變量進行感應。比如循環中放置 0 擴展 (第一個索引為 0)，這種優化靈感來源於 LLVM 標量演化。下面看例子，説明下這個優化：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;[MethodImpl(MethodImplOptions.NoInlining)]
static int Foo(int[] arr)
{
    int sum = 0;
    for (int i = 0; i &amp;lt; arr.Length; i++)
    {
        sum += arr[i];
    }

    return sum;
}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;未優化前:&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;G_M8112_IG01:
       sub      rsp, 40
            ;; size=4 bbWeight=1 PerfScore 0.25
G_M8112_IG02:
       xor      eax, eax
       xor      edx, edx
       mov      r8d, dword ptr [rcx+0x08]
       test     r8d, r8d
       jle      SHORT G_M8112_IG04
       align    [0 bytes for IG03]
            ;; size=13 bbWeight=1 PerfScore 3.75
G_M8112_IG03:
       mov      r10d, edx
       add      eax, dword ptr [rcx+4*r10+0x10]
       inc      edx
       cmp      r8d, edx
       jg       SHORT G_M8112_IG03
            ;; size=15 bbWeight=4 PerfScore 19.00
G_M8112_IG04:
       add      rsp, 40
       ret      
            ;; size=5 bbWeight=1 PerfScore 1.25

; Total bytes of code 37, prolog size 4, PerfScore 24.25,
 instruction count 14, allocated bytes for code 37 
 (MethodHash=d1cce04f) for method ConsoleApp34.Program:Foo(int[])
 :int (FullOpts)
; ============================================================&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;未優化前 37 字節，優化後：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;G_M8112_IG01:  ;; offset=0x0000
       sub      rsp, 40
            ;; size=4 bbWeight=1 PerfScore 0.25
G_M8112_IG02:  ;; offset=0x0004
       xor      eax, eax
       mov      edx, dword ptr [rcx+0x08]
       test     edx, edx
       jle      SHORT G_M8112_IG04
       xor      r8d, r8d
       align    [0 bytes for IG03]
            ;; size=12 bbWeight=1 PerfScore 3.75
G_M8112_IG03:  ;; offset=0x0010
       add      eax, dword ptr [rcx+4*r8+0x10]
       inc      r8d
       cmp      edx, r8d
       jg       SHORT G_M8112_IG03
            ;; size=13 bbWeight=4 PerfScore 18.00
G_M8112_IG04:  ;; offset=0x001D
       add      rsp, 40
       ret      
            ;; size=5 bbWeight=1 PerfScore 1.25

; Total bytes of code 34, prolog size 4, PerfScore 23.25, 
instruction count 13, allocated bytes for code 34
 (MethodHash=d1cce04f) for method ConsoleApp34.Program:Foo(int[])
 :int (FullOpts)&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;優化後 34 字節，減少了 3 字節，優化的指令如下，剛好三字節。這裏的優化點是減卻寄存器置零或者賦值 (稱之為放置 0 擴展)，進行共用。&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;mov   41 89 d2  r10d, edx&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_3&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;2.NativeAOT 改進：內聯+TLS&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;這種優化，需要了解一些知識點。假如一個類成員被多個線程訪問，一般的訪問的時候會設置鎖，以避免數據幹擾。但是，這同時也產生性能問題。為了提高性能，可以把這個類成員放到線程本地存儲 (TLS) 當中，訪問的時候直接去線程本地存儲獲取，這樣極大提高了性能。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;但是這還不夠，我們需要把訪問類成員的代碼進行內聯。進一步提高性能，不然怎麼能叫極致性能優化呢？&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;代碼：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;:  90000000   adrp  x0, 0 &amp;lt;System_Console_System_ConsoleKeyInfo____GetFieldHelper&amp;gt;
      5a2f0: R_AARCH64_TLSDESC_ADR_PAGE21  tls_InlinedThreadStatics
   5a2f4:  91000000   add  x0, x0, #0x0
      5a2f4: R_AARCH64_TLSDESC_ADD_LO12  tls_InlinedThreadStatics
   5a2f8:  d53bd041   mrs  x1, tpidr_el0
   5a2fc:  f9400002   ldr  x2, [x0]
      5a2fc: R_AARCH64_TLSDESC_LD64_LO12  tls_InlinedThreadStatics
   5a300:  d63f0040   blr  x2
      5a300: R_AARCH64_TLSDESC_CALL  tls_InlinedThreadStatics
   5a304:  8b000020   add  x0, x1, x0
   5a308:  f9400013   ldr  x19, [x0]&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_4&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;2.PGO 的改進:類型檢查&lt;/strong&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h2_5&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;PGO 是.NET8 的一大亮點，啓用了動態配置文件引導優化 (PGO)。.NET9 Pre2 擴展了 PGO，以便分析更多的代碼模式。啓用分層編譯後，RyuJIT 已經將檢測插入到程序中以分析其行為;在使用優化重新編譯時，RyuJIT 利用它在運行時構建的配置文件來做出特定於程序當前運行的決策。在預覽版 2 中，RyuJIT 現在默認使用 PGO 數據來提高類型檢查的性能。&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;一般來説，確定對象的類型需要調用運行時。這會帶來一些性能上的損失，也就是説當進行類型檢查的時候，運行時為了確保類型正確性，必須進行檢查。通過.NET8 裏面啓用的 PGO，如果在 PGO 裏面能夠確定對象是某個類型，JIT 就會用一個快速路徑編碼，以比較快速的方式進行類型檢查。並且在必要的時候退回到慢速路徑 (常規檢查)&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;bool IsList&amp;lt;T&amp;gt;(IEnumerable&amp;lt;T&amp;gt; source) =&amp;gt; source is IList&amp;lt;T&amp;gt;;&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;如果 PGO 檢測到 source 總是數組，則會快速路徑返回 true，否則慢速路徑進行檢測&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;if (source is int[])
{
    return true;
}
else
{
    return slow_path(); // Let the runtime figure it out
}&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;span id=&quot;OSC_h2_6&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;ARM64 矢量化&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;.NET9 Pre2 支持了一種新的實現，利用 JIT 在 Arm64 上操作寄存器的加載和存儲的能力。簡單點來説，就是用 SEE，YMM 等一次性操控 32 字節或者 64 字節的寄存器處理更大量的數據，提升性能。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_7&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;.NET9 AOT ILC&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;AOT 編譯分成兩個階段，其一是生成 Obj 目標文件，其二則是通過鏈接器鏈接目標文件生成可執行二進制文件。這裏的目標文件和可執行二進制文件都是分別對於相應的平台，比如 MacOS/Linux/Win 等等平台。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;第一步生成 Obj 目標文件，因為多平台生成。所以.NET9 之前，微軟採用了 LLVM 後端生成了目標文件。因為 LLVM 後端近乎絕對的統治力，它有一百多個指令集級別的後端生成，所以採用 LLVM 更符合開源特徵。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;但這一情況到了.NET9 發生了變化，.NET9 裏面微軟首次引入了 C#代碼生成目標文件，取代了 LLVM 默認的生成。但是 LLVM 並沒有刪除，而是同時存在。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;這部分代碼可以參考：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;public static void EmitObject(string objectFilePath, IReadOnlyCollection&amp;lt;DependencyNode&amp;gt; nodes, NodeFactory factory, ObjectWritingOptions options, IObjectDumper dumper, Logger logger)
 {
     var stopwatch = new Stopwatch();
     stopwatch.Start();

     if (Environment.GetEnvironmentVariable(&quot;DOTNET_USE_LLVM_OBJWRITER&quot;) == &quot;1&quot;)
     {
         LegacyObjectWriter.EmitObject(objectFilePath, nodes, factory, options, dumper, logger);
     }
     else
     {
         ObjectWriter objectWriter =
             factory.Target.IsApplePlatform ? new MachObjectWriter(factory, options) :
             factory.Target.OperatingSystem == TargetOS.Windows ? new CoffObjectWriter(factory, options) :
             new ElfObjectWriter(factory, options);
         objectWriter.EmitObject(objectFilePath, nodes, dumper, logger);
     }

     stopwatch.Stop();
     if (logger.IsVerbose)
         logger.LogMessage($&quot;Done writing object file in {stopwatch.Elapsed}&quot;);
 }&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;如果你不作任何設置，.NET9 默認的目標文件生成即是 C#自舉的代碼。但是你如果習慣了 LLVM 的生成，也可以通過設置環境變量來開啓之前的 LLVM 後端。具體如下：&lt;/p&gt; 
&lt;div&gt; 
 &lt;pre&gt;&lt;code class=&quot;language-text&quot;&gt;CMD:          set    DOTNET_USE_LLVM_OBJWRITER=1
Powershell:   $env:  DOTNET_USE_LLVM_OBJWRITER=1
Unix/Linux:   export DOTNET_USE_LLVM_OBJWRITER=1

dotnet xxx.dll&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;先設置環境變量，然後通過 dotnet 命令行運行託管 DLL 即可復現之前的 LLVM 後端生成。以上是各個平台的設置。&lt;/p&gt; 
&lt;p style=&quot;color:#191b1f; margin-left:0; margin-right:0; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_8&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;strong&gt;作者：jianghupt(公眾號同名，歡迎關注)&lt;/strong&gt;&lt;/h2&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/5407571/blog/11048017</link>
            <guid isPermaLink="false">https://my.oschina.net/u/5407571/blog/11048017</guid>
            <pubDate>Wed, 20 Mar 2024 08:46:52 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>微軟開源遠程緩存存儲系統 Garnet：基於 .NET 技術棧、支持接入 Redis 客戶端</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;微軟研究院&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fgarnet&quot; target=&quot;_blank&quot;&gt;開源&lt;/a&gt;&lt;/u&gt;了名為&amp;nbsp;Garnet 的遠程緩存存儲系統，據稱擁有強大的性能（高吞吐量和低延遲）、可擴展性、存儲、恢復、集羣分片、密鑰遷移和複製功能，並支持接入現有的 Redis 客戶端。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-f2cd6285bd80798dd9b494864d5d4642356.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Garnet 核心優勢&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Garnet 採用流行的 RESP 線路協議，因此大多數用戶可以不作任何修改、就直接通過大多數編程語言編寫的 Redis 客戶端直接接入 Garnet。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Garnet 通過多條客戶端連接與小批量形式提供更好的可擴展性與吞吐量，幫助大型應用程序和服務節約運行成本。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Garnet 在第 99 及第 99.9 百分位上表現出更好的客戶端延遲水平，更高比例的穩定性表現對於現實場景而言至關重要。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Garnet 基於最新.NET 技術，具有跨平台、可擴展和現代化等特點。它在設計上易於開發與調整，且不致犧牲常見場景下的性能水平。通過利用.NET 豐富的庫生態來擴展其 API，並提供開放的優化機會。憑藉對.NET 的充分發掘，Garnet 在 Linux 和 Windows 平台上均表現出頂尖性能。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e0455c41a00404e05790ec05decb67ca6ff.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;可以看到，Garnet 的核心優勢在於優異的可擴展性和吞吐量，以及對客戶端會話數增加情況下的低延遲表現。經過基準測試，Garnet 與其他幾種領先的開源緩存存儲方案對比，顯示出了它在處理大量客戶端連接和大數據量時更加高效穩定。&lt;/p&gt; 
&lt;p&gt;此外，Garnet 支持多種 API 功能，如原始字符串的讀寫、複雜數據類型的處理等，滿足了不同場景下的應用需求。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-dc5ebce821d503d82b69ab11afe89fcb1c1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;△ Garnet 整體架構&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmicrosoft.github.io%2Fgarnet%2Fblog%2Fbrief-history&quot; target=&quot;_blank&quot;&gt;據介紹&lt;/a&gt;&lt;/u&gt;，Garnet 是微軟研究院多年工作的成果。它從 2018 年完成的名為 FASTER 的初步工作發展而來的，FASTER 是一個嵌入式鍵值數據庫，旨在證明可以獲得比現有系統更好的性能。&lt;/p&gt; 
&lt;p&gt;在 2021 年大流行期間，微軟研究院決定根據微軟在現實世界中的需求，在這項技術的基礎上進行改進，最終形成了 Garnet。微軟表示，它已經在多個地方部署了 Garnet，包括 Windows 與 Web 體驗平台、Azure 資源管理器和 Azure 資源圖。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283934/ms-research-garnet-cache-store</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283934/ms-research-garnet-cache-store</guid>
            <pubDate>Wed, 20 Mar 2024 08:38:47 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>360 發佈安全大模型 3.0，安全領域效果超 GPT4</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;3 月 20 日，360 集團正式推出 360 安全大模型 3.0，並通過智能體框架，賦能企業已有的探針、平台，提煉專家知識賦能增強 360 安全雲，幫助企業數字安全體系提質增效。&lt;/p&gt; 
&lt;p&gt;360 集團首席科學家兼 360 數字安全集團 CTO 潘劍鋒提到，「我們參考了人類大腦的運行邏輯，構建 360 安全大模型 3.0 框架。實際應用中，在多個專業任務效果上超過 GPT4。」&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;334&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-59ec68e7705b3845b8f343feb0b33fce212.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;據潘劍鋒介紹，360 從數據、場景、大模型和智能體四個方面研究方法論，總結了新一代安全大模型的核心戰法：數據制勝、小切口大縱深、類腦分區協同（CoE）和工具增強（TAG）。&lt;/p&gt; 
&lt;p&gt;展開來説，其一數據制勝，為訓練出高水平的安全大模型，需要有高質量的安全專業數據和事件數據作為語料，並配合專業的技術手段進行訓練；其二小切口大縱深，是指在場景上，立足小切口、大縱深方法論，以安全難點小場景做切入，做深做透，進而深度融合大模型與安全的能力；其三類腦協同分區，即在大模型設計上，採用類腦分區協同（CoE）設計，以多個類腦分區協同工作，解決高難度安全問題；其四工具增強（TAG），是指以安全智能體為基礎，通過調度各種安全產品與工具，為大模型提供糾錯反饋機制，持續增強大模型安全能力。&lt;/p&gt; 
&lt;p&gt;潘劍鋒指出，基於新戰法打造的 360 安全大模型 3.0，不僅僅實現安全基礎知識問答、初級腳本分析等基礎能力，而是真正錨定安全行業痛點、革新安全能力體系、引領未來安全實戰。&lt;/p&gt; 
&lt;p&gt;360 安全大模型 3.0 框架，在構建時充分參考人類大腦的運行邏輯，基於數據、知識、算力優勢，訓練語言、規劃、判別、道德、記憶五大功能中樞。其中，語言中樞實現語言翻譯、文本摘要、意圖識別能力；規劃中樞實現程序生成、方案規劃、目標拆解能力；判別中樞實現信息抽取、邏輯推理、是非判斷、研判檢測能力；道德中樞實現情感分析、道德法律能力；記憶中樞實現信息記憶能力。&lt;/p&gt; 
&lt;p&gt;基於類腦分區協同設計的安全大模型框架，不僅可以解決任務衝突問題，達到多任務最優性能，而且實現了能力突破，在多個專業任務效果上超過了 GPT4。此外，360 以安全大模型為「大腦」，構建智能體框架，通過任務編排、指令調度、記憶存儲等能力，調用安全知識、工具，模仿人類「慢思考」的過程，對安全大模型的結果進行糾錯和能力增強，實現更強大的安全專家能力。&lt;/p&gt; 
&lt;p&gt;潘劍鋒以海蓮花 APT 攻擊為例，展示了 360 安全大模型如何在實戰中智能化獵殺 APT。他表示，360 安全大模型的最終目標是幫助企業數字安全體系提質增效，是 360 安全雲體系中的重要一環。&lt;/p&gt; 
&lt;p&gt;隨後，360 數字安全集團副總裁張錦章介紹了 360 圍繞安全和 AI 兩條戰略主線的實踐。他表示，360 安全大模型已賦能 360 全線產品矩陣。而 360 安全雲在安全大模型加持下，形成公有云和私有化兩大場景。在公有云場景下，打造安全雲服務，充分利用 AI 提升運營效率；在私有化場景下，深度優化安全大腦+安全大模型+探針的能力落地。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283932</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283932</guid>
            <pubDate>Wed, 20 Mar 2024 08:35:47 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>2024 年 AIGC 發展趨勢報告：AIGC 驅動下的生產力變革、實踐與展望</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#060607; margin-left:0; margin-right:0; text-align:start&quot;&gt;愛設計 &amp;amp; AiPPT &amp;amp; AIGC 內容中台近期聯合發佈了《2024 年 AIGC 發展趨勢報告：AIGC 驅動下的生產力變革、實踐與展望》報告，主要探討了 AIGC 技術如何推動生產力變革、在不同行業的應用實踐以及對未來的展望。&lt;/p&gt; 
&lt;p style=&quot;color:#060607; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;391&quot; src=&quot;https://static.oschina.net/uploads/space/2024/0320/162019_7pYi_4700705.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#060607; margin-left:0; margin-right:0; text-align:start&quot;&gt;以下是報告的核心內容概述：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;AIGC 的生產力變革&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;AI 工具的發展極大提升了工作效率，對人類生產和服務產業鏈、價值鏈進行了賦能和重構。&lt;/li&gt; 
   &lt;li&gt;2023 年見證了文本和圖像生成的進步，而視頻生成領域則相對較慢。OpenAI 發佈的 Sora 模型預示着視覺敍事新時代的到來，能夠將想象力轉化為動態畫面。&lt;/li&gt; 
   &lt;li&gt;AIGC 的友好性、大模型開源、API 價格降低等因素使得 AI 技術可能成為像水、電、網絡一樣的基礎設施。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;AIGC 的應用實踐&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;AIGC 技術在文字、代碼、音樂、圖片、視頻等多種媒介形態的生產中逐步深度融入。&lt;/li&gt; 
   &lt;li&gt;AI 繪圖技術可以快速生成創意設計，如廣告、海報、產品包裝等，提高營銷效率和效果。&lt;/li&gt; 
   &lt;li&gt;AI 視頻技術可以高效完成視頻錄製與剪輯，創造獨特的虛擬人物和場景，提高視頻的創意和吸引力。&lt;/li&gt; 
   &lt;li&gt;AI 寫作工具可以快速生成文案，支持多種場景需求，如社交媒體文案、新聞稿、產品評測等。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;AIGC 的未來展望&lt;/strong&gt;：&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;AIGC 應用層創新將成為產業發展的核心方向，預計到 2024 年將深度融入企業業務並催生新場景。&lt;/li&gt; 
   &lt;li&gt;AIGC 正在工具化，從「趕時髦」變為「真有用」，企業更看重其帶來的實際效益。&lt;/li&gt; 
   &lt;li&gt;中大型企業將率先湧現專屬、自建模型的需求，以獲得更理想的綜合效益。&lt;/li&gt; 
   &lt;li&gt;AIGC 生態將逐步普惠化，推動新的商業模式和數字經濟產業的繁榮。&lt;/li&gt; 
   &lt;li&gt;智能湧現是雙刃劍，需要與之匹配的安全措施，如隱私保護、數據泄露防範等。&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p style=&quot;color:#060607; margin-left:0; margin-right:0; text-align:start&quot;&gt;報告還提到了 AIGC 技術可能帶來的社會影響，包括工作替代、財富分配、倫理道德等問題，並強調了技術發展與社會整體福利水平提升之間的關係。最後，報告呼籲積極主動地擁抱 AIGC 技術，以打造更美好的未來。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;報告詳情可至&lt;strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;&lt;span style=&quot;background-color:#f39c12&quot;&gt;「開源中國 APP - 報告模塊」&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;color:#333333&quot;&gt;下載&lt;/span&gt;查看。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;APP 下載地址：&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;300&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;（&lt;em&gt;目前僅提供 Android 版本）&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283927</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283927</guid>
            <pubDate>Wed, 20 Mar 2024 08:22:47 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>深圳成立鴻蒙生態創新中心</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;3 月 19 日，鴻蒙生態創新中心揭幕儀式在深圳灣科技生態園舉行。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-0672f9510f1b29f65734bca978a3aae242e.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;WPS 圖片 (1).jpeg&quot; src=&quot;https://upload.ikanchai.com/2024/0320/1710898823311.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;現場，深圳市南山區人民政府副區長李志娜發佈《2024 年南山區支持鴻蒙原生應用發展首批政策措施清單》，從加強鴻蒙原生應用供給能力、推動鴻蒙原生應用產業集聚、完善鴻蒙原生應用生態體系等三大方面，&lt;strong&gt;出台八條具體措施，全方位支持鴻蒙原生應用發展&lt;/strong&gt;。&lt;/p&gt; 
&lt;p&gt;分別為：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;支持開發鴻蒙原生應用軟件；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;推動區政務服務軟件上線鴻蒙原生應用軟件，推動國有企事業單位在教育、醫療、文旅、體育等各類垂直領域開放應用場景；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;定期組織各行各業與鴻蒙生態進行對接，召開供需對接會；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;爭取培育 30 萬以上開發者，吸引鴻蒙原生應用開發運營企業落戶南山；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在高新區片區打造鴻蒙原生應用特色產業園，對符合條件的鴻蒙原生應用入駐企業，給予最高 40% 的租金補貼；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;成立鴻蒙產業專項基金，重點投資鴻蒙原生應用相關領域；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;加強鴻蒙原生應用開發人才保障，對掛牌人才實訓基地的鴻蒙原生應用企業給予補貼，建設「2048 人才社區」；&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;支持鴻蒙生態創新中心穩健運營等。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;據介紹，鴻蒙生態創新中心的建立是為構建先進完整、自主研發的鴻蒙生態體系，將深圳打造為鴻蒙生態策源地、集聚區的具體舉措，也是推動我國關鍵核心技術高水平自立自強、數字經濟高質量發展、保障國家安全、提升國際競爭力的重要舉措。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283921</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283921</guid>
            <pubDate>Wed, 20 Mar 2024 07:47:47 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>國產數據庫 OceanBase 實現代碼、社區、生態 100% 「根自研」</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;3 月 20 日消息，OceanBase 城市行首站落地深圳。會上，OceanBase CEO 楊冰表示，目前 OceanBase 已經做到了 100%「根自研」，包括從 0 到 1 自研三百萬行代碼、自研代碼開源主導產品和社區發展方向、構建自研技術生態。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-72edb6534ef024342601bc9acda33591568.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.doit.com.cn%2Fp%2F509890.html&quot; target=&quot;_blank&quot;&gt;據介紹&lt;/a&gt;&lt;/u&gt;，OceanBase 將「根自研」解釋為&lt;strong&gt;代碼、社區、生態&lt;/strong&gt;三個層面的自研。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;在代碼層面，由於不基於開源數據庫二次開發、自建研發環境和流程，使得 OceanBase 具備對內核代碼的完全掌控力和掌控權，避免了開源數據庫可能遭遇的協議風險。&lt;/li&gt; 
 &lt;li&gt;在社區層面，2021 年開源後，OceanBase 同樣引領產品發展和社區方向，除了開源最核心的數據庫內核代碼、分佈式組件和接口驅動外，還逐步將產品工具開源。截止目前，社區擁有超 300 位貢獻者，超 500 家客戶將 OceanBase 社區版應用於實際的業務生產系統。&lt;/li&gt; 
 &lt;li&gt;技術生態方面，OceanBase 持續構建以「合作伙伴」為中心的產品技術文化，廣泛與多基礎設施、數據集成、數據治理、應用集成服務商圍繞 OceanBase 進行產品適配和對接，有超過 750 個主流產品已加入 OceanBase 自研技術生態。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-45acbfc8fd014a1cc51b03843d779e8750b.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;OceanBase 始創於 2010 年，是螞蟻集團完全自主研發的國產數據庫。2020 年 OceanBase 成立北京奧星貝斯科技有限公司並開始獨立商業化運作。2021 年，OceanBase &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/news/144034&quot;&gt;正式開源&lt;/a&gt;&lt;/u&gt;(&lt;a href=&quot;https://gitee.com/oceanbase&quot; target=&quot;_blank&quot;&gt;https://gitee.com/oceanbase&lt;/a&gt;)，300 萬行核心代碼向社區開放。2024 年 3 月 19 日，螞蟻集團宣佈，旗下的螞蟻國際、OceanBase 和螞蟻數科已成立董事會，獨立面向市場。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283917</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283917</guid>
            <pubDate>Wed, 20 Mar 2024 07:26:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Ubuntu 24.04 LTS 官方壁紙揭曉</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;在成立 20 週年紀念日前夕，Canonical &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fubuntu.com%2Fblog%2Fthe-coronation-of-a-new-mascot-noble-numbat&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;推出了 Ubuntu 24.04 LTS (代號 Noble Numbat) 的默認壁紙。Ubuntu 24.04 LTS 計劃於 4 月 25 日正式發佈，Beta 版將於 4 月 4 日發佈，新壁紙也將在 Beta 版中同步提供。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Ubuntu 24.04 將是 Ubuntu 自 2006 年以來的第 10 個 LTS 版本。Ubuntu 的 LTS 版本將獲得 5 年的安全更新、錯誤修復和精選應用程序更新。Ubuntu Pro 則會在此基礎上額外增加 5 年的安全保障，為現代的 LTS 版本提供了長達十年的支持。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;Numbat（袋食蟻獸）是分佈於澳大利亞西南部的一種小型有袋動物，幾乎只以白蟻為食，每天可以吃約 20000 只白蟻。&lt;/span&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;「在大家討論高貴一詞時，可能不會首先聯想到這種動物。然而，外表是會騙人的。這些令人難以置信的瀕危物種實際上是袖珍食蟻獸，它們純粹以螞蟻為生，用三分之一長的舌頭捕捉螞蟻。它們背部的黑白條紋很像國王的長袍，因此被選為西澳大利亞州的州徽動物。袋食蟻獸證明瞭出身卑微的人也能在世界上留下自己的印記。」&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;229&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9f6dfdb88767a65e4cdb5024d1854309f77.webp&quot; width=&quot;300&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-cae0f36c1be4386da9f49bbc47d2e563e08.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-e55523fe69ae7e2b8481a53a44a0d51b9b0.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-baee4b4f945463e758c7001ab8dc9db413b.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-dc007e2e9c359e502ccf5f6056acf519da2.webp&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;官方提供了各種格式和尺寸的壁紙下載：&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdrive.google.com%2Fdrive%2Ffolders%2F1hzlUuCOCORWyTvIWqDN_d9W4gFDqetvZ&quot; target=&quot;_blank&quot;&gt;https://drive.google.com/drive/folders/1hzlUuCOCORWyTvIWqDN_d9W4gFDqetvZ&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;更多詳情可查看&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fubuntu.com%2Fblog%2Fthe-coronation-of-a-new-mascot-noble-numbat&quot; target=&quot;_blank&quot;&gt;公告&lt;/a&gt;。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283905/ubuntu-24-04-wallpaper</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283905/ubuntu-24-04-wallpaper</guid>
            <pubDate>Wed, 20 Mar 2024 06:23:27 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>Spring 也愛用！Antora 3.1 中文指南發佈：輕鬆打造現代化技術網站</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;h3&gt;&lt;strong&gt;簡介&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#e3e3e3; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Antora 3.1 中文指南全新上線，助力您輕鬆打造現代化網站！指南涵蓋所有核心功能和特性，並結閤中文示例和最佳實踐，幫助您快速上手 Antora 開發。&lt;strong&gt;Spring 等知名開源組織也選擇使用 Antora！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;Antora 魅力所在&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Spring 等開源組織力薦&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;構建技術網站的利器&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;基於更易上手的 AsciiDoc&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Antora 助您&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;自動化構建網站&lt;/li&gt; 
 &lt;li&gt;模塊化開發，輕鬆重用內容&lt;/li&gt; 
 &lt;li&gt;高度可擴展，滿足各種需求&lt;/li&gt; 
 &lt;li&gt;支持多語言內容創作&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;獲取指南&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#e3e3e3; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Antora 3.1 中文指南現已上線，您可以通過以下方式獲取：&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;在線閲讀：&lt;/strong&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;在 Antora 中文文檔: [&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcunzaima.cn&quot; target=&quot;_blank&quot;&gt;存在碼&lt;/a&gt;] 網站上閲讀在線版本。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;結語&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#e3e3e3; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Antora 3.1 中文指南的發佈，將進一步降低中國開發者學習 Antora 的門檻，助力更多開發者加入 Antora 生態，共同打造更加繁榮的現代化網站開發環境。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#e3e3e3; margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;&lt;strong&gt;選擇 Antora，基於更易上手的 AsciiDoc，構建高效、可維護、多語言的技術網站，盡享開源組織的信賴和支持！&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;400&quot; src=&quot;https://cunzaima.cn/logo.jpg&quot; width=&quot;400&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283894</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283894</guid>
            <pubDate>Wed, 20 Mar 2024 06:01:27 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>KCL 3 月社區活動和最新動態速遞！</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang&quot; target=&quot;_blank&quot;&gt;KCL&lt;/a&gt; 是一個 CNCF 基金會託管的基於約束的記錄及函數語言，期望通過成熟的編程語言技術和實踐來改進對大量繁雜配置比如雲原生 Kubernetes 配置場景的編寫，致力於構建圍繞配置的更好的模塊化、擴展性和穩定性，更簡單的邏輯編寫，以及更簡單的自動化和生態工具集成。&lt;/p&gt; 
&lt;p&gt;本欄目將會雙週更新 KCL 語言社區最新動態，包括功能、官網更新和最新的社區動態等，幫助大家更好地瞭解 KCL 社區！&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;KCL 官網：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io&quot; target=&quot;_blank&quot;&gt;https://kcl-lang.io&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;內容概述&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;感謝所有貢獻者過去一段時間 (2024 03.06 - 2024.03.20) 的傑出工作，以下是重點內容概述&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;📦 模型更新&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新增 kubeadm 配置模型&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;更新 Knative Operator 模型，對齊上游 Knative CRD 定義&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🏄 語言更新&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;KCL 發佈 0.8.1 和 0.8.2 版本&lt;/strong&gt;，主要包含如下更新&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;體驗簡化增強二元表達式類型不匹配時的錯誤信息提示&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;修復高階 lambda 函數對局部作用域閉包變量捕獲不正常的錯誤&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;去除不常用的列表數據類型的不等式比較操作&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🔧 工具鏈更新&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;kcl import&lt;/code&gt; 工具修復當輸入的 Kubernetes CRD 存在 regex 屬性與 KCL regex 系統庫衝突的錯誤&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;kcl import&lt;/code&gt; 工具修復當輸入的 Kubernetes CRD 屬性存在複雜的默認值時輸出的 KCL 文件語法錯誤&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;kcl mod init&lt;/code&gt; 支持 &lt;code&gt;--version&lt;/code&gt; 標籤設置 KCL 新建模塊的版本&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;kcl run&lt;/code&gt;, &lt;code&gt;kcl mod add&lt;/code&gt; 和 &lt;code&gt;kcl mod pull&lt;/code&gt; 等命令支持對私有 Git 倉庫的訪問&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;修復在 Windows 上執行對本地 OCI Registry 執行 &lt;code&gt;kcl run&lt;/code&gt; 命令時遇到的路徑錯誤&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🔥 SDK 更新&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;KCL Rust, Go 和 Java SDK 發佈 0.8 主要版本，同步 KCL 語法語義更新&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;KCL Python SDK 發佈 0.8.0.2 和 0.7.6 版本，修復 &lt;code&gt;protobuf&lt;/code&gt;, &lt;code&gt;pyyaml&lt;/code&gt; 等依賴版本過於低的問題&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;💻 IDE 更新&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;支持多個 Quick Fix 修復選項&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://files.mdnice.com/user/44450/4d37d5b6-e481-4345-a9c5-b3531dc1f1e1.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🎁 API 更新&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;新增 &lt;code&gt;ListOptions&lt;/code&gt; API，可以讀取 KCL 工程中所有 &lt;code&gt;option&lt;/code&gt; 函數調用信息。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🚢 集成更新&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Crossplane KCL Function 發佈 v0.3.2 版本，支持非 https 協議 OCI Registry 訪問和本地調試&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🌐 網站更新&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;啓用 &lt;code&gt;kcl-lang.dev&lt;/code&gt; 域名，現在可以同時通過 &lt;code&gt;kcl-lang.io&lt;/code&gt; 和 &lt;code&gt;kcl-lang.dev&lt;/code&gt; 訪問 KCL 網站&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;KCL 網站加載速度優化，提升文檔體驗&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;特別鳴謝&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;感謝過去兩週所有的社區參與者，以下排名不分先後&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;感謝 @bozaro 對 KCL Go SDK 帶 Go 語言插件的 API 的貢獻 🙌&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;感謝 @shashank-iitbhu 對 KCL IDE 快速修復功能的增強，支持多個修復選項 🙌&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;感謝 @octonawish-akcodes 對 KCL IDE 自動監聽 kcl.mod 依賴變更並自動更新依賴功能的持續貢獻 🙌&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;感謝 @liangyuanpeng 對 CLA Bot CI 自動鎖定 PR 的修正，kubeadm 模型的貢獻以及 kcl mod init 支持版本設置功能的支持 🙌&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;感謝 @Stefano Borrelli, @sfshumaker, @eshepelyuk, @vtomilov, @ricochet1k, @yjsnly, @markphillips100, @userxiaosi, @wilsonwang371, @steeling, @bozaro, @nizq, @reckless-huang, @folliehiyuki, @samuel-deal-tisseo, @MrGuoRanDuo, 和 @MattHodge 等在近段時間使用 KCL 過程中提供的寶貴建議與反饋 🙌&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;https://meeting.tencent.com/dm/CCEDaHbwXD6w&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;其他資源&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;❤️ 查看 KCL 社區，加入我們: https://github.com/kcl-lang/community&lt;/p&gt; 
&lt;p&gt;更多其他資源請參考：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;KCL 網站: https://kcl-lang.io/&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;KusionStack 網站: https://kusionstack.io/&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;KCL v0.9.0 Milestone: https://github.com/kcl-lang/kcl/milestone/9&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283891</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283891</guid>
            <pubDate>Wed, 20 Mar 2024 05:51:27 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>官宣｜Apache Flink 1.19 發佈公告</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                    &lt;p&gt;&lt;img alt=&quot;&quot; height=&quot;383&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-bc82a0da21bbbd289ae7fd13732c07d337d.png&quot; width=&quot;685&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;Apache Flink PMC（項目管理委員）很高興地宣佈發佈 Apache Flink 1.19.0。與往常一樣，這是一個充實的版本，包含了廣泛的改進和新功能。總共有 162 人為此版本做出了貢獻，完成了 33 個 FLIPs、解決了 600 多個問題。感謝各位貢獻者的支持！&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_1&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;一、Flink SQL 提升&lt;/span&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_2&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;源表自定義並行度&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;現在，在 Flink 1.19 中，您可以通過選 scan.parallelism 設置自定義並行度，以調整性能。第一個可用的連接器是 DataGen（ Kafka 連接器即將推出）。下面是一個使用 SQL Client 的示例：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;span&gt;-- set parallelism within the ddl&lt;/span&gt;
&lt;span&gt;CREATE TABLE Orders (&lt;/span&gt;
&lt;span&gt; &amp;nbsp;  order_number BIGINT,&lt;/span&gt;
&lt;span&gt; &amp;nbsp;  price &amp;nbsp; &amp;nbsp; &amp;nbsp;  DECIMAL(32,2),&lt;/span&gt;
&lt;span&gt; &amp;nbsp;  buyer &amp;nbsp; &amp;nbsp; &amp;nbsp;  ROW&amp;lt;first_name STRING, last_name STRING&amp;gt;,&lt;/span&gt;
&lt;span&gt; &amp;nbsp;  order_time &amp;nbsp; TIMESTAMP(3)&lt;/span&gt;
&lt;span&gt;) WITH (&lt;/span&gt;
&lt;span&gt; &amp;nbsp;  &#39;connector&#39; = &#39;datagen&#39;,&lt;/span&gt;
&lt;span&gt; &amp;nbsp;  &#39;scan.parallelism&#39; = &#39;4&#39;&lt;/span&gt;
&lt;span&gt;);&lt;/span&gt;
&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;-- or set parallelism via dynamic table option&lt;/span&gt;
&lt;span&gt;SELECT * FROM Orders /*+ OPTIONS(&#39;scan.parallelism&#39;=&#39;4&#39;) */;&lt;/span&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.19%2Fdocs%2Fdev%2Ftable%2Fsourcessinks%2F%23scan-table-source&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;文檔&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fpages%2Fviewpage.action%3FpageId%3D263429150&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLIP-367: Support Setting Parallelism for Table/SQL Sources&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_3&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;可配置的 SQL Gateway Java 選項&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;一個用於指定 Java 選項的新選項 env.java.opts.sql-gateway ，這樣你就可以微調內存設置、垃圾回收行為和其他相關 Java 參數。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-33203&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLINK-33203&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_4&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;使用 SQL 提示配置不同的狀態 TTL&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;從 Flink 1.18 開始，Table API 和 SQL 用戶可以通過 SQL 編譯計劃為有狀態操作符單獨設置狀態存續時間 ( TTL )。在 Flink 1.19 中，用戶可以&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.19%2Fdocs%2Fdev%2Ftable%2Fsql%2Fqueries%2Fhints%2F%23state-ttl-hints&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;使用 STATE_TTL 提示&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;，以更靈活的方式直接在查詢中為常規連接和分組聚合指定自定義 TTL 值。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;這一改進意味着您不再需要修改編譯後的計劃，就能為這些常用操作符設置特定的 TTL。引入 STATE_TTL 提示後，您可以簡化工作流程，並根據操作要求動態調整 TTL。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;下面是一個例子：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;span&gt;-- set state ttl for join&lt;/span&gt;
&lt;span&gt;SELECT /*+ STATE_TTL(&#39;Orders&#39;= &#39;1d&#39;, &#39;Customers&#39; = &#39;20d&#39;) */ *&lt;/span&gt;
&lt;span&gt;FROM Orders LEFT OUTER JOIN Customers&lt;/span&gt;
&lt;span&gt; &amp;nbsp;  ON Orders.o_custkey = Customers.c_custkey;&lt;/span&gt;
&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;-- set state ttl for aggregation&lt;/span&gt;
&lt;span&gt;SELECT /*+ STATE_TTL(&#39;o&#39; = &#39;1d&#39;) */ o_orderkey, SUM(o_totalprice) AS revenue&lt;/span&gt;
&lt;span&gt;FROM Orders AS o&lt;/span&gt;
&lt;span&gt;GROUP BY o_orderkey;&lt;/span&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.19%2Fdocs%2Fdev%2Ftable%2Fsql%2Fqueries%2Fhints%2F%23state-ttl-hints&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;文檔&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-373%253A%2BSupport%2BConfiguring%2BDifferent%2BState%2BTTLs%2Busing%2BSQL%2BHint&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLIP-373: Support Configuring Different State TTLs using SQL Hint&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_5&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;函數和存儲過程支持命名參數&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;現在，在調用函數或存儲過程時可以使用命名參數。使用命名參數時，用戶無需嚴格指定參數位置，只需指定參數名稱及其相應值即可。同時，如果沒有指定非必要參數，這些參數將默認為空值。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;下面是一個使用命名參數定義帶有一個必選參數和兩個可選參數的函數的示例：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;span&gt;public static class NamedArgumentsTableFunction extends TableFunction&amp;lt;Object&amp;gt; {&lt;/span&gt;
&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;&lt;span&gt;    &lt;/span&gt;@FunctionHint(&lt;/span&gt;
&lt;span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;output = @DataTypeHint(&quot;STRING&quot;),&lt;/span&gt;
&lt;span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;arguments = {&lt;/span&gt;
&lt;span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;@ArgumentHint(name = &quot;in1&quot;, isOptional = false, type = @DataTypeHint(&quot;STRING&quot;)),&lt;/span&gt;
&lt;span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;@ArgumentHint(name = &quot;in2&quot;, isOptional = true, type = @DataTypeHint(&quot;STRING&quot;)),&lt;/span&gt;
&lt;span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;@ArgumentHint(name = &quot;in3&quot;, isOptional = true, type = @DataTypeHint(&quot;STRING&quot;))})&lt;/span&gt;
&lt;span&gt;&lt;span&gt;    &lt;/span&gt;public void eval(String arg1, String arg2, String arg3) {&lt;/span&gt;
&lt;span&gt;&lt;span&gt;    &lt;/span&gt;&lt;span&gt;    &lt;/span&gt;collect(arg1 + &quot;, &quot; + arg2 + &quot;,&quot; + arg3);&lt;/span&gt;
&lt;span&gt;&lt;span&gt;    &lt;/span&gt;}&lt;/span&gt;
&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;}&lt;/span&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;在 SQL 中調用函數時，可以通過名稱指定參數，例如：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;span&gt;SELECT * FROM TABLE(myFunction(in1 =&amp;gt; &#39;v1&#39;, in3 =&amp;gt; &#39;v3&#39;, in2 =&amp;gt; &#39;v2&#39;))&lt;/span&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;可選參數也可以省略：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;span&gt;SELECT * FROM TABLE(myFunction(in1 =&amp;gt; &#39;v1&#39;))&lt;/span&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.19%2Fdocs%2Fdev%2Ftable%2Ffunctions%2Fudfs%2F%23named-parameters&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;文檔&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-387%253A%2BSupport%2Bnamed%2Bparameters%2Bfor%2Bfunctions%2Band%2Bcall%2Bprocedures&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLIP-387: Support named parameters for functions and call procedures&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_6&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;Window TVF 聚合功能&lt;/span&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;支持流模式下的 SESSION Window TVF&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;現在，用戶可以在流模式下使用 SESSION Window TVF。下面是一個簡單的示例：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;span&gt;-- session window with partition keys&lt;/span&gt;
&lt;span&gt;SELECT * FROM TABLE(&lt;/span&gt;
&lt;span&gt; &amp;nbsp; SESSION(TABLE Bid PARTITION BY item, DESCRIPTOR(bidtime), INTERVAL &#39;5&#39; MINUTES));&lt;/span&gt;
&lt;span&gt;&lt;span&gt;​&lt;/span&gt;&lt;/span&gt;
&lt;span&gt;-- apply aggregation on the session windowed table with partition keys&lt;/span&gt;
&lt;span&gt;SELECT window_start, window_end, item, SUM(price) AS total_price&lt;/span&gt;
&lt;span&gt;FROM TABLE(&lt;/span&gt;
&lt;span&gt; &amp;nbsp;  SESSION(TABLE Bid PARTITION BY item, DESCRIPTOR(bidtime), INTERVAL &#39;5&#39; MINUTES))&lt;/span&gt;
&lt;span&gt;GROUP BY item, window_start, window_end;&lt;/span&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;Window TVF 聚合支持處理更新流&lt;/span&gt;&lt;/p&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:.5rem&quot;&gt;&lt;span&gt;窗口聚合運算符（基於窗口 TVF 函數生成）現在可以順利處理更新流（如 CDC 數據源等）。建議用戶從傳統的，窗口聚合遷移到新語法，以獲得更全面的功能支持。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.19%2Fdocs%2Fdev%2Ftable%2Fsql%2Fqueries%2Fwindow-tvf%2F%23session&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;文檔&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_7&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;新的 UDF 類型：AsyncScalarFunction&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;常見的 UDF 類型 ScalarFunction 可以很好地處理 CPU 密集型操作，但對於 IO 密集型或其他長時間運行的計算則效果不佳。在 Flink 1.19 中，我們新增了 AsyncScalarFunction ，它是一種用戶定義的異步 ScalarFunction ，允許異步發出併發函數調用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-400%253A%2BAsyncScalarFunction%2Bfor%2Basynchronous%2Bscalar%2Bfunction%2Bsupport&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLIP-400: AsyncScalarFunction for asynchronous scalar function support&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_8&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;Regular Join 支持 MiniBatch 優化 &lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;消息放大是 Flink 中執行級聯連接時的一個痛點，現在在 Flink 1.19 中得到了解決，新的 MiniBatch 優化可用於 Regular Join，以減少此類級聯連接場景中的中間結果。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i1/O1CN01mIzhev22B9TWiUK3v_!!6000000007081-0-tps-2098-892.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.19%2Fdocs%2Fdev%2Ftable%2Ftuning%2F%23minibatch-regular-joins&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;minibatch-regular-joins 文檔&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-415%253A%2BIntroduce%2Ba%2Bnew%2Bjoin%2Boperator%2Bto%2Bsupport%2Bminibatch&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLIP-415: Introduce a new join operator to support minibatch&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_9&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;二、Runtime &amp;amp; Coordination 提升&lt;/span&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_10&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;批作業支持源表動態並行度推導&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;在 Flink 1.19 中，我們支持批作業的源表動態並行度推導，允許源連接器根據實際消耗的數據量動態推斷並行度。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;與以前的版本相比，這一功能有了重大改進，以前的版本只能為源節點分配固定的默認並行度。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;源連接器需要實現推理接口，以啓用動態並行度推理。目前，FileSource 連接器已經開發出了這一功能。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;此外，配置 execution.batch.adaptive.auto-parallelism.default-source-parallelism 將被用作源並行度推理的上限。現在，它不會默認為 1。取而代之的是，如果沒有設置，將使用通過配置 execution.batch.adaptive.auto-parallelism.max-parallelism 設置的允許並行度上限。如果該配置也未設置，則將使用默認的並行度設置 parallelism.default 或 StreamExecutionEnvironment#setParallelism() 。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.19%2Fdocs%2Fdeployment%2Felastic_scaling%2F%23enable-dynamic-parallelism-inference-support-for-sources&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;文檔&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-379%253A%2BDynamic%2Bsource%2Bparallelism%2Binference%2Bfor%2Bbatch%2Bjobs&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLIP-379: Support dynamic source parallelism inference for batch jobs&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_11&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;Flink Configuration 支持標準 YAML 格式&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;從 Flink 1.19 開始，Flink 正式全面支持標準 YAML 1.2 語法。默認配置文件已改為 config.yaml ，放置在 conf/directory 中。如果用戶想使用傳統的配置文件 flink-conf.yaml ，只需將該文件複製到 conf/directory 中即可。一旦檢測到傳統配置文件 flink-conf.yml ，Flink 就會優先使用它作為配置文件。而在即將推出的 Flink 2.0 中， flink-conf.yaml 配置文件將不再起作用。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.19%2Fdocs%2Fdeployment%2Fconfig%2F%23flink-configuration-file&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;flink-configuration-file 文檔&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-366%253A%2BSupport%2Bstandard%2BYAML%2Bfor%2BFLINK%2Bconfiguration%3Fsrc%3Dcontextnavpagetreemode&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLIP-366: Support standard YAML for Flink configuration&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_12&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;在 Flink Web 上 Profiling JobManager/TaskManager&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;在 Flink 1.19 中，我們支持在 JobManager/TaskManager 級別觸發 Profile，允許用戶創建具有任意時間間隔和事件模式（由 async-profiler 支持）的 Profile 實例。用戶可以在 Flink Web UI 中輕鬆提交剖析並導出結果。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;例如，用戶只需在確定存在性能瓶頸的候選任 JobManager/TaskManager 後，通過 &quot;Create Profiling Instance&quot; 提交一個具有指定週期和模式的 Profile 實例：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i4/O1CN01ytIK8C1uBavsxnY5B_!!6000000005999-0-tps-3582-1264.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;Profile 結果：&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;img src=&quot;https://img.alicdn.com/imgextra/i1/O1CN015wZxI11T8OXVIHnj3_!!6000000002337-0-tps-2852-258.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.19%2Fdocs%2Fops%2Fdebugging%2Fprofiler%2F&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;文檔&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fx%2F64lEE&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLIP-375: Built-in cross-platform powerful java profiler&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_13&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;新增管理員 JVM 選項配置選項&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;有一組管理員 JVM 選項可供使用，它們是用戶設置的額外 JVM 選項的前綴，用於全平台範圍的 JVM 調整。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.19%2Fdocs%2Fdeployment%2Fconfig%2F%23jvm-and-logging-options&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;文檔&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-397%253A%2BAdd%2Bconfig%2Boptions%2Bfor%2Badministrator%2BJVM%2Boptions%3Fsrc%3Djira&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLIP-397: Add config options for administrator JVM options&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_14&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;三、Checkpoints 提升&lt;/span&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_15&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;Source 反壓時支持使用更大的 Checkpointing 間隔&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;引入 ProcessingBacklog 的目的是為了説明處理記錄時應採用低延遲還是高吞吐量。ProcessingBacklog 可由 Source 算子設置，並可用於在運行時更改作業的檢查點間隔。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-32514&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLINK-32514&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-309%253A%2BSupport%2Busing%2Blarger%2Bcheckpointing%2Binterval%2Bwhen%2Bsource%2Bis%2Bprocessing%2Bbacklog&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;[FLIP-309: Support using larger checkpointing interval when source is processing backlog]&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_16&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;CheckpointsCleaner 並行清理單個檢查點狀態&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;現在，在處置不再需要的檢查點時，ioExecutor 會並行處置每個狀態句柄/狀態文件，從而大大提高了處置單個檢查點的速度（對於大型檢查點，處置時間可從 10 分鐘縮短至 &amp;lt; 1 分鐘）。可以通過設置為 false 恢復舊版本的行為。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-33090&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLINK-33090&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_17&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;通過命令行客戶端觸發 &lt;/span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Checkpoints&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;命令行界面支持手動觸發檢查點。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;使用方法：&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;span&gt;./bin/flink checkpoint $JOB_ID [-full]&lt;/span&gt;&lt;/pre&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;如果指定&quot;-full &quot;選項，就會觸發完全檢查點。否則，如果作業配置為定期進行增量檢查點，則會觸發增量檢查點。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-6755&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLINK-6755&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_18&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;四、Connector API 提升&lt;/span&gt;&lt;/h2&gt; 
&lt;span id=&quot;OSC_h3_19&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;與 Source API 一致的 SinkV2 新接口&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;在 Flink 1.19 中，SinkV2 API 做了一些修改，以便與 Source API 保持一致。以下接口已被棄用： TwoPhaseCommittingSink、StatefulSink 、WithPreWriteTopology、WithPreCommitTopology、WithPostCommitTopology 。引入了以下新接口 CommitterInitContext 、CommittingSinkWriter 、 WriterInitContext 、StatefulSinkWrite。更改了以下接口方法的參數： Sink#createWriter 。 在 1.19 版本發佈期間，原有接口仍將可用，但會在後續版本中移除。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-33973&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLINK-33973&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-372%253A%2BEnhance%2Band%2Bsynchronize%2BSink%2BAPI%2Bto%2Bmatch%2Bthe%2BSource%2BAPI&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLIP-372: Enhance and synchronize Sink API to match the Source API&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h3_20&quot;&gt;&lt;/span&gt; 
&lt;h3&gt;&lt;span&gt;用於跟蹤 Committables 狀態的新 Committer 指標&lt;/span&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;修改了 TwoPhaseCommittingSink#createCommitter 方法的參數化，新增了 CommitterInitContext 參數。原來的方法在 1.19 版本發佈期間仍然可用，但會在後續版本中移除。&lt;/span&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;更多信息&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-25857&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLINK-25857&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-371%253A%2BProvide%2Binitialization%2Bcontext%2Bfor%2BCommitter%2Bcreation%2Bin%2BTwoPhaseCommittingSink&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;FLIP-371: Provide initialization context for Committer creation in TwoPhaseCommittingSink&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_21&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;五、重要 API 棄用&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;為了給 Flink 2.0 版本做準備，社區決定正式廢棄多個已接近生命週期終點的 API。&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;Flink&#39;s &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Fmaster%2Fflink-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fapi%2Fcommon%2Ftime%2FTime.java&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;org.apache.flink.api.common.time.Time&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 現已被正式棄用，並將在 Flink 2.0 中刪除。引入了支持 Duration 類的方法，以取代已廢棄的基於 Time 的方法。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Frelease-1.19%2Fflink-runtime%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fruntime%2Fjobgraph%2FRestoreMode.java%23L40&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;org.apache.flink.runtime.jobgraph.RestoreMode#LEGACY &lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 已被棄用。請使用 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Frelease-1.19%2Fflink-runtime%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fruntime%2Fjobgraph%2FRestoreMode.java%23L31&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;RestoreMode#CLAIM&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 或 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Frelease-1.19%2Fflink-runtime%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fruntime%2Fjobgraph%2FRestoreMode.java%23L34&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;RestoreMode#NO_CLAIM&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 模式，以在還原時獲得清晰的狀態文件所有權。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;舊的解決模式兼容性的方法已被棄用，請參考遷移説明遷移至新方法： &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.19%2Fdocs%2Fdev%2Fdatastream%2Ffault-tolerance%2Fserialization%2Fcustom_serialization%2F%23migrating-from-deprecated-typeserializersnapshotresolveschemacompatibility&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;Migrating from deprecated TypeSerializerSnapshot#resolveSchemaCompatibility(TypeSerializer newSerializer) before Flink 1.19&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;通過硬代碼配置序列化行為已被棄用，例如 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Frelease-1.19%2Fflink-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fapi%2Fcommon%2FExecutionConfig.java%23L643&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;ExecutionConfig#enableForceKryo&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;。請使用選 pipeline.serialization-config 、pipeline.force-avr 、pipeline.force-kryo 和 pipeline.generic-types。實例級序列化器的註冊已被棄用，請使用類級序列化器。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;除了 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Frelease-1.19%2Fflink-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fconfiguration%2FConfiguration.java%23L176&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;getString(String key, String defaultValue) &lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;和 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Frelease-1.19%2Fflink-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fconfiguration%2FConfiguration.java%23L220&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;setString(String key, String value)&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;，我們已廢棄所有 setXxx 和 getXxx 方法，如：setInteger 、setLong 、getInteger 和 getLong 等。 建議用戶和開發人員使用以 ConfigOption 代替字符串作為鍵的 get 和 set 方法。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;StreamExecutionEnvironment 、CheckpointConfig 和 ExecutionConfig 中的非 ConfigOption 對象及其相應的 getter/setter 接口現已廢棄。這些對象和方法計劃在 Flink 2.0 中刪除。已廢棄的接口包括重啓策略（ RestartStrategy ）、檢查點存儲（ CheckpointStorage ）和狀態後端（ StateBackend ）的 getter 和 setter 方法。 &lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Frelease-1.19%2Fflink-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fapi%2Fcommon%2Ffunctions%2FRuntimeContext.java%23L191&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;org.apache.flink.api.common.functions.RuntimeContext#getExecutionConfig&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 現已被正式棄用，並將在 Flink 2.0 中刪除。請使用 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Frelease-1.19%2Fflink-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fapi%2Fcommon%2Ffunctions%2FRuntimeContext.java%23L208&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;getGlobalJobParameters()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 或 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Frelease-1.19%2Fflink-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fapi%2Fcommon%2Ffunctions%2FRuntimeContext.java%23L216&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;isObjectReuseEnabled()&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Frelease-1.19%2Fflink-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fapi%2Fcommon%2Ffunctions%2FRichFunction.java%23L76&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;org.apache.flink.api.common.functions.RichFunction#open(Configuration parameters)&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 方法已被棄用，並將在未來版本中刪除。我們鼓勵用戶遷移到新的&lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Frelease-1.19%2Fflink-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fapi%2Fcommon%2Ffunctions%2FRichFunction.java%23L118&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;RichFunction#open(OpenContext openContext)&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p style=&quot;margin-left:.5rem; margin-right:0&quot;&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Fmaster%2Fflink-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fconfiguration%2FAkkaOptions.java&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;org.apache.flink.configuration.AkkaOptions &lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 已被棄用，取而代之的是 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Fmaster%2Fflink-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fconfiguration%2FRpcOptions.java&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt; RpcOptions &lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt;。&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;span id=&quot;OSC_h2_22&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;六、升級説明&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;span&gt;Apache Flink 社區努力確保升級過程儘可能平穩, 但是升級到 1.19 版本可能需要用戶對現有應用程序做出一些調整。請參考 &lt;/span&gt;&lt;span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.19%2Frelease-notes%2Fflink-1.19%2F&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;&lt;span&gt;Release Notes&lt;/span&gt;&lt;/a&gt;&lt;/span&gt;&lt;span&gt; 獲取更多的升級時需要的改動與可能的問題列表細節。&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h2_23&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;&lt;span&gt;貢獻者列表&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&lt;img alt=&quot;&quot; height=&quot;1208&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3b5104e2ecbe3e23ee1f72b104fd572d9c2.png&quot; width=&quot;1550&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:.8em; margin-right:.8em; text-align:start&quot;&gt;&amp;nbsp;&lt;/p&gt; 
&lt;hr&gt; 
&lt;span id=&quot;OSC_h2_24&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;Flink Forward Asia 2023&lt;/h2&gt; 
&lt;p&gt;本屆 Flink Forward Asia 更多精彩內容，可微信掃描圖片二維碼觀看全部議題的視頻回放及 FFA 2023 峯會資料！&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://ucc.alicdn.com/gfbp4bwpctdbo_20231225_14aea0210006473091eeaad86fb840a2.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8374c4af52676c9e8e31915ba3a7c4ec22c.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;span id=&quot;OSC_h2_25&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;更多內容&lt;/h2&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-fba668f04d5a3f206c6530c940b5973aa44.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;span id=&quot;OSC_h2_26&quot;&gt;&lt;/span&gt; 
&lt;h2&gt;活動推薦&lt;/h2&gt; 
&lt;p&gt;阿里雲基於 Apache Flink 構建的企業級產品-實時計算 Flink 版現開啓活動：&lt;br&gt; 59 元試用&amp;nbsp;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffree.aliyun.com%2F%3FpipCode%3Dsc&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;實時計算 Flink 版&lt;/a&gt;（3000CU*小時，3 個月內）&lt;br&gt; 瞭解活動詳情：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffree.aliyun.com%2F%3FpipCode%3Dsc&quot; rel=&quot;nofollow&quot; target=&quot;_blank&quot;&gt;https://free.aliyun.com/?pipCode=sc&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://ucc.alicdn.com/pic/developer-ecology/gfbp4bwpctdbo_b2c1ad1f1c94438ba3d2f6eb2f40a795.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-140340868927cb8aa03b4b96e643c9112cb.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/2828172/blog/11047986</link>
            <guid isPermaLink="false">https://my.oschina.net/u/2828172/blog/11047986</guid>
            <pubDate>Wed, 20 Mar 2024 05:32:00 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>Node.js 新版官網正式上線</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;Node.js 新版官網已正式上線：&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnodejs.org%2Fen&quot; target=&quot;_blank&quot;&gt;https://nodejs.org/en&lt;/a&gt;&lt;/u&gt;。&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js 新版官網首頁&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d7f75fbfacc0c0f7aa4bd49a44845da9c0e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;舊版官網首頁&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-d7fdf3a71b012fa030e0d8da045acd8a078.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;可以看到，新版官網的視覺效果、頁面佈局、展現內容都有了很大的提升，整體上更大氣、更現代化。而且首頁關於 Node.js 的介紹也變得更突出、描述更全面。&lt;/p&gt; 
&lt;p&gt;此外，新版官網最大的交互變化是在首頁添加了「全局搜索」入口，方便用戶隨時檢索文檔、博客、下載等信息。&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c9984afc8c57cf2cc9b031519ad713980ba.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;其他子頁面一覽：&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-5219eed54c5df5855bb21a3c939725e914b.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-82a9406af23007a8c812f31fd7c8bdce52f.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c626de0d15afa528c4f04eb59658c79635e.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-9f4190b429a1060ceb08600f74698605af6.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-432b101ae6fdf83b85ce42d68b8f7ca2b68.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283883/node-js-org-new-ui</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283883/node-js-org-new-ui</guid>
            <pubDate>Wed, 20 Mar 2024 04:23:17 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>iLogtail 2.0 來了；通義靈碼下載量破百萬</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                    &lt;p&gt;&lt;strong&gt;雲原生月度動態&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;雲原生是企業數字創新的最短路徑。&lt;/p&gt; 
&lt;p&gt;《阿里云云原生每月動態》，從趨勢熱點、產品新功能、服務客戶、開源與開發者動態等方面，為企業提供數字化的路徑與指南。&lt;/p&gt; 
&lt;h2&gt;趨勢熱點&lt;/h2&gt; 
&lt;h3&gt;🥇&amp;nbsp;雲原生可觀測團隊獲選「InfoQ 年度技術內容貢獻獎」&lt;/h3&gt; 
&lt;p&gt;近期，知名技術媒體 InfoQ 結合廣大開發者和技術社羣的實際反饋，評選出「InfoQ 年度技術內容貢獻獎」，以表彰推動業界知識分享的卓越貢獻者。其中，「阿里云云原生可觀測團隊」成功獲選，以此表彰阿里云云原生可觀測團隊在技術研發與產品創新同時，積極參與技術內容輸出、社區建設、知識分享等活動，努力推進雲原生、可觀測的落地實踐。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUzNzYxNjAzMg%3D%3D%26mid%3D2247561870%26idx%3D1%26sn%3Dd8f2919d37b32eb46aa973032ada64eb%26chksm%3Dfae7f941cd907057abc8ce4be579cc7ba83f6e674c3a989145b6c35b320ff53b0f35f3167c3e%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;相關文章：「雲原生可觀測團隊」獲選「InfoQ 年度技術內容貢獻獎」&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;🥈&amp;nbsp;國內唯一！通義靈碼入選全球智能編碼助手使用率 TOP 榜單&lt;/h3&gt; 
&lt;p&gt;近日，在國內知名科技媒體 InfoQ 研究中心發佈的《中國軟件技術發展洞察和趨勢預測報告 2024》中提到，隨着 AI 和大模型技術的普及，開發者智能編碼助手的使用習慣已經養成，其中，開發者使用的智能編碼助手產品使用率超過 10% 的產品共計 8 款，唯一一款國內企業研發的產品為阿里旗下的通義靈碼，使用率佔比 12.9% 排名第五。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUzNzYxNjAzMg%3D%3D%26mid%3D2247561987%26idx%3D1%26sn%3D094e6ffb1ecd9268194cd912401dc09d%26chksm%3Dfae7f8cccd9071daf348db0f1a9f8f65179589da0d3f9cf065adedf604b1ab8fa01222750367%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;相關文章：國內唯一！通義靈碼入選全球智能編碼助手使用率 TOP 榜單&lt;br&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;🥉&amp;nbsp;iLogtail 2.0 來了！&lt;/h3&gt; 
&lt;p&gt;隨着可觀測數據採集需求的不斷推陳出新，現有的 iLogtail 架構和採集配置結構逐漸成為制約 iLogtail 繼續快速演進的瓶頸。基於此，團隊決定對 iLogtail 進行全面升級，全面提升 iLogtail 的易用性、可擴展性和性能。經過半年多的重構與優化，iLogtail 2.0 已經呼之欲出，有以下新特性：【商業版】採集配置全面升級流水線結構、處理插件組合更加靈活、新增 SPL 處理模式、日誌解析控制更加精細、【商業版】日誌時間解析支持納秒級精度、【商業版】狀態觀測更加清晰、運行更快更安全。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUzNzYxNjAzMg%3D%3D%26mid%3D2247562109%26idx%3D1%26sn%3D997036af93cc31ff68faab565d6f5022%26chksm%3Dfae7f8b2cd9071a4e7822493c921cec17d273ec25e4621d35caeda0445b8a08ba2d1da940356%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;相關文章：你好，iLogtail 2.0！&lt;br&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;產品新功能&lt;/h2&gt; 
&lt;h3&gt;微服務引擎 MSE&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;MSE 註冊配置中心支持在控制枱進行網絡變配&lt;/li&gt; 
 &lt;li&gt;雲原生網關核心鏈路優化&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;雲效項目協作 Projex&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;項目管理權限細化：將成員管理、基本信息設置、通知等單獨拆分權限點&lt;/li&gt; 
 &lt;li&gt;支持項目模板角色權限同步&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;日誌服務 SLS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;SLS Lens 支持 SQL 質量報告功能&lt;/li&gt; 
 &lt;li&gt;logtail 2.0.1 版本支持 SPL 數據處理語言處理數據&lt;/li&gt; 
 &lt;li&gt;SLS 支持接入 NLB 產品 4 層指標數據，支持短信服務（國際站）日誌&lt;/li&gt; 
 &lt;li&gt;SLS 日誌審計應用支持以張家口作為中心化存儲地域&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;應用實時監控服務 ARMS&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;應用監控&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;新版控制枱調用鏈分析支持錯慢 Trace 分析功能&lt;/li&gt; 
 &lt;li&gt;持續剖析配置支持根據應用部署環境自動填充網段地址&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;智能告警&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;應用監控告警事件詳情支持傳遞自定義的應用標籤&lt;/li&gt; 
 &lt;li&gt;告警屏蔽操作支持填寫屏蔽原因&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;用戶體驗監控&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;會話追蹤詳情面板&lt;/li&gt; 
 &lt;li&gt;資源加載趨勢分析&lt;/li&gt; 
 &lt;li&gt;App 監控能力&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;雲撥測證書過期時間檢測和告警&lt;/p&gt; 
&lt;h3&gt;可觀測鏈路 OpenTelemetry 版&lt;/h3&gt; 
&lt;p&gt;可觀測鏈路 OpenTelemetry 版重磅發佈 2.0 版本&lt;/p&gt; 
&lt;h3&gt;可觀測監控 Prometheus 版&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;數據投遞服務支持將阿里雲 Prometheus 數據通過 &amp;nbsp;RemoteWrite 協議投遞到自建 &amp;nbsp;Prometheus&lt;/li&gt; 
 &lt;li&gt;接入管理支持配置廢棄指標&lt;/li&gt; 
 &lt;li&gt;RDS-PG 增加監控指標&lt;/li&gt; 
 &lt;li&gt;新版接入中心海外區域全面上線&lt;/li&gt; 
 &lt;li&gt;新版接入中心海外區域全面上線 ack-sysom-monitor 監控限時免費（2024/2/21-2024/5/21 ）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;通義靈碼&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持自定義配置不觸發行間生成的編程語言&lt;/li&gt; 
 &lt;li&gt;VS Code 兼容 Windows 7 操作系統，擴展 IDE 版本兼容到 1.70.0 以上&lt;/li&gt; 
 &lt;li&gt;優化 Java、Python 生成單元測試效果及新建文件命名規則&lt;/li&gt; 
 &lt;li&gt;優化登錄後身份選擇的提示&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;優秀實戰案例&lt;/h2&gt; 
&lt;h3&gt;青團社：億級靈活用工平台的雲原生架構實踐&lt;/h3&gt; 
&lt;p&gt;青團社是國內領先的一站式靈活用工招聘服務企業，在發展初期技術架構比較薄弱，存在較多問題。面對這些問題，青團社開始了架構演進，選擇了進行微服務架構和業務容器化改造，同時，在可觀測性和應用性的架構上，用阿里雲應用實時監控服務 ARMS 的應用監控能力和 MSE 產品來對應用服務進行性能觀測與流量治理，使應用實現了高可用和彈性調度，能快速瞭解系統運行狀態，運維成本也大幅降低。&lt;/p&gt; 
&lt;p&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUzNzYxNjAzMg%3D%3D%26mid%3D2247562153%26idx%3D1%26sn%3Df6f5fb5931dac455ce6fe296c0a41375%26chksm%3Dfae7f866cd90717038e7f848d1e6f7d2d90fd1d2a14e115f714564b7ecdf55cc92200e3ecd38%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;相關文章：青團社：億級靈活用工平台的雲原生架構實踐&lt;br&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;開源與開發者動態&lt;/h2&gt; 
&lt;h3&gt;有獎討論丨你能看出來哪些是 AI 寫的代碼麼？&lt;/h3&gt; 
&lt;p&gt;隨着 AI 智能浪潮到來，AI 智能編碼助手成為越來越多開發者的必備工具，本期話題我們就來聊聊備受關注的「AI 編碼助手」，體驗「通義靈碼」，分享使用感受。&lt;/p&gt; 
&lt;p&gt;相關文章：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUzNzYxNjAzMg%3D%3D%26mid%3D2247561935%26idx%3D2%26sn%3D8ee55dc8ed4ad3694ee4efc1ad38ff87%26chksm%3Dfae7f900cd907016e273eb3dd3d884797ba6662301a95d0580e98c34484701ca06b5288094a6%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;有獎討論丨你能看出來哪些是 AI 寫的代碼麼？&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;參與通義靈碼體驗活動贏全球架構師峯會門票&lt;/h3&gt; 
&lt;p&gt;通義靈碼，是阿里雲出品的一款基於通義大模型的智能編碼輔助工具，提供行級/函數級實時續寫、自然語言生成代碼、單元測試生成、代碼優化、註釋生成、代碼解釋、研發智能問答、異常報錯排查等能力，並針對阿里雲的雲服務使用場景調優，助力開發者高效、流暢的編碼。本次 ArchSummit 架構師峯會期間，通義靈碼聯合 InfoQ 策劃發起 AI 編程體驗活動，參與通義靈碼體驗抽獎活動，有機會贏全球架構師峯會專屬免費門票。（票價 5440 元）&lt;/p&gt; 
&lt;p&gt;相關文章：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzUzNzYxNjAzMg%3D%3D%26mid%3D2247562169%26idx%3D1%26sn%3Dc084e24cd2efbc65e21f1cc5e220f179%26chksm%3Dfae7f876cd90716067905c024e3d4ed2a86b75129f302453a520938a26a48382c641f43bea54%26scene%3D21%23wechat_redirect&quot; target=&quot;_blank&quot;&gt;AI 編程如何顛覆生產力 | 參與體驗免費領取 ArchSummit 架構師峯會專屬門票&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;點擊&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftongyi.aliyun.com%2Flingma&quot; target=&quot;_blank&quot;&gt;此處&lt;/a&gt;，進入通義靈碼官網快速體驗。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/3874284/blog/11048168</link>
            <guid isPermaLink="false">https://my.oschina.net/u/3874284/blog/11048168</guid>
            <pubDate>Wed, 20 Mar 2024 03:51:17 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>Java 22 正式發佈，一文了解全部新特性</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                    &lt;p&gt;就在昨晚，Java 22 正式發佈！該版本提供了 12 項功能增強，其中包括 7 項預覽功能和 1 項孵化器功能。它們涵蓋了對 Java 語言、API、性能以及 JDK 中包含的工具的改進。&lt;/p&gt; 
&lt;p&gt;下面就來一起學習一下該版本都更新了哪些新特性！&lt;/p&gt; 
&lt;h2&gt;Unnamed Variables &amp;amp; Patterns - JEP 456&lt;/h2&gt; 
&lt;p&gt;JEP 456 - 未命名變量和模式：當需要但未使用變量聲明或嵌套模式時，提高了可讀性。兩者都由下劃線字符表示。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;價值&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;捕獲開發人員的意圖，即未使用給定的綁定或 lambda 參數，並強制執行該屬性以澄清程序並減少出錯的機會。&lt;/li&gt; 
 &lt;li&gt;通過識別必須聲明（例如，在 catch 子句中）但未使用的變量，提高所有代碼的可維護性。&lt;/li&gt; 
 &lt;li&gt;允許多個模式出現在單個 case 標籤中，如果它們都沒有聲明任何模式變量。&lt;/li&gt; 
 &lt;li&gt;通過消除不必要的嵌套類型模式來提高記錄模式的可讀性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Statements before super (…) [Preview] - JEP 447&lt;/h2&gt; 
&lt;p&gt;在構造函數中，允許不引用正在創建的實例的語句出現在顯式構造函數調用之前。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;價值&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;為開發人員提供了更大的自由來表達構造函數的行為，從而可以更自然地放置目前必須納入輔助靜態方法、輔助中間構造函數或構造函數參數中的邏輯。&lt;/li&gt; 
 &lt;li&gt;保留構造函數在類實例化期間按自上而下順序運行的現有保證，確保子類構造函數中的代碼不會干擾超類實例化。&lt;/li&gt; 
 &lt;li&gt;不需要對 Java 虛擬機進行任何更改。此 Java 語言功能僅依賴於 JVM 驗證和執行構造函數中顯式構造函數調用之前出現的代碼的當前能力。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;String Templates (2nd Preview) - JEP 459&lt;/h2&gt; 
&lt;p&gt;字符串模版的第 2 個預覽版，關於該功能之前 DD 給大家介紹過，更多細節可以看看之前的這篇文章&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.didispace.com%2Fjava-features%2Fjava21%2Fjep430-string-templates.html&quot; target=&quot;_blank&quot;&gt;String Templates（字符串模版）&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;價值&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;通過輕鬆表達包含運行時計算值的字符串，簡化了 Java 程序的編寫。&lt;/li&gt; 
 &lt;li&gt;增強混合文本和表達式的表達式的可讀性，無論文本適合單個源行（如字符串文字）還是跨越多個源行（如文本塊）。&lt;/li&gt; 
 &lt;li&gt;通過支持模板及其嵌入表達式的值的驗證和轉換，提高 Java 程序的安全性，這些程序從用戶提供的值組成字符串並將其傳遞到其他系統（例如，構建數據庫查詢）。&lt;/li&gt; 
 &lt;li&gt;通過允許 Java 庫定義字符串模板中使用的格式化語法來保留靈活性。&lt;/li&gt; 
 &lt;li&gt;簡化了接受非 Java 語言（例如 SQL、XML 和 JSON）編寫的字符串的 API 的使用。&lt;/li&gt; 
 &lt;li&gt;允許創建根據文字文本和嵌入表達式計算的非字符串值，而無需通過中間字符串表示形式進行傳輸。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Implicitly Declared Classes and Instance Main Methods (2nd Preview) - JEP 463&lt;/h2&gt; 
&lt;p&gt;隱式聲明的類和實例主要方法（2nd 預覽）- JEP 463&lt;/p&gt; 
&lt;p&gt;學生可以編寫他們的第一個 Java 程序，而無需瞭解為大型程序設計的語言功能。學生無需使用單獨的語言方言，而是可以為單類程序編寫簡化的聲明，然後隨着技能的增長無縫擴展他們的程序以使用更高級的功能。關於該特性，之前 DD 也介紹過，更多細節可見這篇文章&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.didispace.com%2Fjava-features%2Fjava21%2Fjep445-Unnamed-Classes-and-Instance-Main-Methods.html&quot; target=&quot;_blank&quot;&gt;未命名類和實例的 Main 方法&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;價值&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;加速 Java 學習&lt;/li&gt; 
 &lt;li&gt;為 Java 編程提供了一個平滑的入門通道，以便教師可以循序漸進地介紹概念。&lt;/li&gt; 
 &lt;li&gt;幫助學生以簡潔的方式編寫基本程序，並隨着他們的技能增長而優雅地擴展他們的代碼。&lt;/li&gt; 
 &lt;li&gt;減少編寫簡單程序（例如：腳本和命令行實用程序）的方式。&lt;/li&gt; 
 &lt;li&gt;不引入單獨的初學者工具鏈；學生程序應該使用與編譯和運行任何 Java 程序相同的工具來編譯和運行。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Foreign Function &amp;amp; Memory API - JEP 454&lt;/h2&gt; 
&lt;p&gt;外部函數和內存 API - JEP 454&lt;/p&gt; 
&lt;p&gt;允許 Java 程序與 Java 運行時之外的代碼和數據進行互操作。通過有效地調用外部函數（即 JVM 外部的代碼），並安全地訪問外部內存（即不受 JVM 管理的內存），API 使 Java 程序能夠調用本機庫並處理本機數據，而不會出現脆弱性和危險。 JNI。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;價值&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;生產力：用簡潔、可讀且純 Java API 取代脆弱的本機方法和 Java 本機接口 (JNI)。&lt;/li&gt; 
 &lt;li&gt;性能：提供對外部函數和內存的訪問，其開銷與 JNI 和 sun.misc.Unsafe 相當（如果不是更好的話）。&lt;/li&gt; 
 &lt;li&gt;廣泛的平台支持：允許在 JVM 運行的每個平台上發現和調用本機庫。&lt;/li&gt; 
 &lt;li&gt;一致性：提供在多種內存（例如本機內存、持久內存和託管堆內存）中操作無限大小的結構化和非結構化數據的方法。&lt;/li&gt; 
 &lt;li&gt;健全性：保證沒有釋放後使用錯誤，即使在多個線程之間分配和釋放內存時也是如此。&lt;/li&gt; 
 &lt;li&gt;完整性：允許程序使用本機代碼和數據執行不安全的操作，但默認警告用戶此類操作。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Class-File API (Preview) - JEP 457&lt;/h2&gt; 
&lt;p&gt;類文件 API（預覽版）- JEP 457，提供用於解析、生成和轉換 Java 類文件的標準 API。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;價值&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;該 API 允許依賴它的框架和程序自動支持最新 JDK 中的最新類文件，以便可以快速、輕鬆地採用以類文件表示的新語言和 VM 功能。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stream Gatherers (Preview) - JEP 461&lt;/h2&gt; 
&lt;p&gt;Stream Gatherers（預覽版）- JEP 461，增強了 Stream API 以支持自定義中間操作。這將允許流管道以現有內置中間操作不易實現的方式轉換數據。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;價值&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;通過使流中的常見自定義操作更加靈活和富有表現力，提高開發人員的工作效率和代碼可讀性。儘可能允許中間操作操作無限大小的流。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Structured Concurrency (2nd Preview) - JEP 462&lt;/h2&gt; 
&lt;p&gt;結構化併發（2nd 預覽版）- JEP 462，簡化併發編程。結構化併發將在不同線程中運行的相關任務組視為單個工作單元，從而簡化錯誤處理和取消、提高可靠性並增強可觀察性。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;價值&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;通過推廣一種編程風格來簡化併發代碼的開發，這種編程風格可以消除因取消和關閉而產生的常見風險（例如線程泄漏和取消延遲），並提高併發代碼的可觀察性。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Scoped Values (2nd Preview) - JEP 464&lt;/h2&gt; 
&lt;p&gt;範圍值（2nd 預覽）- JEP 464，實現線程內和線程間不可變數據的高效共享。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;價值&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;易於使用 - 提供一個編程模型來在線程內以及與子線程共享數據，以簡化有關數據流的推理。&lt;/li&gt; 
 &lt;li&gt;可理解性——使共享數據的生命週期從代碼的語法結構中可見。&lt;/li&gt; 
 &lt;li&gt;魯棒性——確保調用者共享的數據只能由合法的被調用者檢索。&lt;/li&gt; 
 &lt;li&gt;性能——將共享數據視為不可變，以允許大量線程共享，並實現運行時優化。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Vector API (7th Incubator) - JEP 460&lt;/h2&gt; 
&lt;p&gt;矢量 API（7th 孵化器）- JEP 460，一個用於表達向量計算的 API，可在運行時可靠地在支持的 CPU 架構上編譯為最佳向量指令，從而實現優於等效標量計算的性能。此 JEP 建議在 JDK 22 中重新孵化該 API，相對於 JDK 21。該實現包括錯誤修復和性能增強。我們包括以下顯着變化：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;支持使用任何原始元素類型的數組支持的堆 MemorySegments 進行向量訪問。以前的訪問僅限於由字節數組支持的堆 MemorySegment。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;價值&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;提供清晰簡潔的 API，能夠清晰簡潔地表達各種向量計算，這些向量計算由循環內組成的向量運算序列組成，並且可能還包含控制流。&lt;/li&gt; 
 &lt;li&gt;該 API 設計為與 CPU 架構無關，可在支持向量指令的多種架構上實現。&lt;/li&gt; 
 &lt;li&gt;在 x64 和 AArch64 架構上提供可靠的運行時編譯和性能。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Regional Pinning for G1 - JEP 423&lt;/h2&gt; 
&lt;p&gt;G1 的區域固定 - JEP 423，通過在 G1 中實現區域固定來減少延遲，以便在 Java 本機接口 (JNI) 關鍵區域期間無需禁用垃圾收集。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;價值&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;使用 JNI 時，Java 線程無需在 G1 GC 操作完成之前等待，從而提高開發人員的工作效率。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Launch Multi-File Source-Code Programs - JEP 458&lt;/h2&gt; 
&lt;p&gt;啓動多文件源代碼程序 - JEP 458，允許用戶運行作為多個 Java 源代碼文件提供的程序，而無需先進行編譯。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;價值&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;通過使從小程序到大型程序的過渡更加漸進，提高開發人員的工作效率，使開發人員能夠選擇是否以及何時配置構建工具。&lt;/li&gt; 
 &lt;li&gt;請注意，預覽功能已完全指定並完全實現了 Java SE 平台的語言或 VM 功能，但它們是暫時的。它們在 JDK 功能版本中提供，以便開發人員根據實際使用情況提供反饋，然後再在未來版本中永久保留。這也為工具供應商提供了在最終確定為 Java SE 標準之前致力於支持功能的機會。&lt;/li&gt; 
 &lt;li&gt;孵化器模塊中的 API 將非最終 API 和非最終工具交給開發人員和用戶，以收集反饋，最終提高 Java 平台的質量。&lt;/li&gt; 
 &lt;li&gt;除了 JEP 中描述的更改之外，發行説明中還列出了許多較小的更新，許多應用程序開發人員和系統管理員都會對此感興趣。其中包括棄用過時的 API 和刪除以前棄用的 API。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;其他更新&lt;/h2&gt; 
&lt;p&gt;Java 22 發行説明中還有​​一些其他關鍵更新：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;向 keytool 和 jarsigner 添加附加算法。&lt;/li&gt; 
 &lt;li&gt;垃圾收集器吞吐量的提高，尤其是與「年輕」垃圾相關的情況。&lt;/li&gt; 
 &lt;li&gt;更好的系統模塊描述符版本報告。&lt;/li&gt; 
 &lt;li&gt;改進了本機代碼的「wait」處理選項。&lt;/li&gt; 
 &lt;li&gt;Unicode 通用區域設置數據存儲庫已更新至版本 44。&lt;/li&gt; 
 &lt;li&gt;類型註釋支持從字節碼加載的類型。&lt;/li&gt; 
 &lt;li&gt;ForkJoinPool 和 ForJoinTasks 現在可以更好地處理不間斷任務。&lt;/li&gt; 
 &lt;li&gt;配置客戶端與服務器 TLS 連接屬性的額外靈活性。&lt;/li&gt; 
 &lt;li&gt;改進了本機內存跟蹤，包括報告峯值使用情況的能力&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;最後注意：JDK 22 是通過六個月的發佈節奏按時交付的 13th 功能版本。由於預期改進源源不斷，這種程度的可預測性使開發人員能夠輕鬆管理創新的採用。Oracle 不會為 JDK 22 提供長期支持，在 2023 年 9 月之前提供更新，之後它將被 Oracle JDK 23 取代。最近的長期維護版本是 Java 21，更多關於 Java 新特性的解讀和學習歡迎關注&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.didispace.com%2Fjava-features%2F&quot; target=&quot;_blank&quot;&gt;《Java 新特性解讀》&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-8dea4b48eb8ffca981a1a54d4079789b777.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;歡迎關注我的公眾號：程序猿 DD。第一時間瞭解前沿行業消息、分享深度技術乾貨、獲取優質學習資源&lt;/p&gt; 
&lt;/blockquote&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/didispace/blog/11048218</link>
            <guid isPermaLink="false">https://my.oschina.net/didispace/blog/11048218</guid>
            <pubDate>Wed, 20 Mar 2024 03:50:17 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>開源日報 | Grok 使用體驗完全夠不上第一梯隊，Surface Duo 在開源社區扶持下煥發新生</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。&lt;/p&gt; 
&lt;h3 style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#e67e22&quot;&gt;&lt;strong&gt;# 2024.3.19&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt; 
&lt;h2 style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#16a085&quot;&gt;今日要點&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;OpenSource Daily&lt;/strong&gt;&lt;/p&gt; 
&lt;h3 style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F1aEpUETGY14C9nAJU-v9dw&quot; target=&quot;_blank&quot;&gt;英偉達全新 GPU 架構 Blackwell&lt;span&gt;——&lt;/span&gt;「全球最強」、第二代 Transformer 引擎、計算性能提升 1000 倍&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;按照每兩年更新一次 GPU 架構的傳統，今年黃仁勳如期公佈了英偉達新一代 AI 芯片架構 Blackwell，以及基於該架構的 B200、GB200 系列芯片。他在演講台上表示，這是目前為止功能最強大的 AI 芯片家族。8 年，從 Pascal 架構到 Blackwell 架構，英偉達將 AI 計算性能提升了 1000 倍！黃仁勳表示：「Hopper 固然已經非常出色了，但我們需要更強大的 GPU」。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;375&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-c8c1a36924f6258786a38abcdf84c1220f4.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;h3 style=&quot;margin-left:0; margin-right:0; text-align:start&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://www.oschina.net/news/283757&quot; target=&quot;_blank&quot;&gt;微信 Linux 原生版正式支持龍架構&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;龍芯中科&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F2gzVb4cvnVSOP_qgi3A0Bg&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;，在騰訊微信團隊、龍芯中科與國產操作系統廠商的共同努力下，微信 Linux 原生版在龍架構平台終端已於近日成功啓動運行，並在操作系統廠商應用商店上架分發，為用戶帶來全新的龍架構平台使用體驗。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;本次微信（Universal）是基於原生跨平台方案進行的一次大型版本重構與更新，旨在逐步實現微信 Windows/Mac/Linux 版本在功能與更新節奏上保持一致，大幅提高軟件功能的開發與迭代速度。同時，新版本功能也更加豐富，支持大文件收發、羣管理、雙人視頻通話、一鍵開啓視頻號、小程序、搜一搜等實用功能。&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;281&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-8af6d64640c735fa2e0b0e82057264aa298.jpg&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2 style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color:#16a085&quot;&gt;今日觀察&lt;/span&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;97&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-22ef22ee0a115b4cc31c8e2d7df84d742f1.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;-&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;微博 &lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2337975403%2FO5z5a0Ij2&quot; target=&quot;_blank&quot;&gt;&lt;em&gt;詹俊全&lt;/em&gt;&lt;/a&gt;&lt;/u&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;122&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1fedf59d99708d718ae00a49e1527ffc328.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;-&amp;nbsp;微博&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1560906700%2FO5HOTACxA%3Frefer_flag%3D1001030103_&quot; target=&quot;_blank&quot;&gt;闌夕&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;120&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-18ae674bface2fa54ccf5013b070a987524.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;background-color:#ffffff; color:#333333&quot;&gt;- &lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.cn%2F2024-03-19%2Fdetail-inanviqu4644393.d.html&quot; target=&quot;_blank&quot;&gt;每日經濟新聞&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2 style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#16a085&quot;&gt;&lt;strong&gt;今日推薦&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;409&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-2a95c498beb1bd4a0f02da6d0f975cf6235.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmanticoresoftware%2Fmanticoresearch&quot; target=&quot;_blank&quot;&gt;https://github.com/manticoresoftware/manticoresearch&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2 style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#16a085&quot;&gt;&lt;strong&gt;事件點評&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;470&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-b4b468388bab83bb920db154ed8a6269d4a.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h2 style=&quot;margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;span style=&quot;color:#16a085&quot;&gt;&lt;strong&gt;每日項目榜&lt;/strong&gt;&lt;/span&gt;&lt;/h2&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#e67e22&quot;&gt;每日 GitHub 精選&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;img height=&quot;637&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-75a419043367ba895f86d3d58d171950867.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4 style=&quot;margin-left:0; margin-right:0&quot;&gt;&lt;strong&gt;&lt;span style=&quot;background-color:#e67e22&quot;&gt;在線閲讀完整日報內容，訪問：&lt;/span&gt;&lt;/strong&gt;&lt;br&gt; &lt;em&gt;&lt;u&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/aud8p7bvfbui2z3/032_nvidia_ai_blackwell_surface_duo_MfoMo6bqlE.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 032 期：Grok 使用體驗完全夠不上第一梯隊，Surface Duo 在開源社區扶持下煥發新生&lt;/a&gt;&lt;/u&gt;&lt;/em&gt;&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;p style=&quot;color:#333333; margin-left:0; margin-right:0; text-align:left&quot;&gt;&lt;strong&gt;往期回顧&lt;/strong&gt;&lt;/p&gt; 
&lt;ul style=&quot;list-style-type:disc; margin-left:0; margin-right:0&quot;&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/maajc6fkxn2b8la/031_microsoft_autodev_grok_os_vvdrJAOBEq.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 031 期：微軟 AI 程序員登場，馬斯克開源 Grok&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/bkpgqfjrsg02gbc/30_i9_14900_ks_hip_rt_PUJjodKP2j.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 030 期：RISC-V 正在發生質變？離職後可以刪除自己所寫的軟件嗎&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/71npja41p7l4ojy/29_risc_v_ai_smart_B3RnKR88Kl.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 029 期：英特爾獲準繼續向華為出售芯片；明年 AI 將比任何人都聰明&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/q35lx4s6qq9ls4r/28_cognition_labs_devin_Epbxne3xzN.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 028 期：全球首位 AI 軟件工程師 Devin；谷歌承認 「竊取」 OpenAI 模型關鍵信息&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/hh291xp9mxksc9i/27_ai_google_50_gpt_4_KfagjDXXfZ.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 027 期：AI 接連翻車的 Google 要變天了；互聯網大廠 50 款大模型及應用，能否全面超越 GPT-4？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/uwsizmmsnhq8zdk/26_git_hub_22_web_os_22_vue_rolldown_FpVykoR7rJ.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 026 期：大模型替代程序員根本就是一個偽命題；GitHub 頂流 &quot;Web OS&quot;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/6ho57sxydzsh9jh/25_ai_5_ax1LWz5GP5.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 025 期：買手機送大模型；「釣魚式維權」 須遏制；「AI 原生」 騙局江湖&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/7xd6teyhekcvamw/24_risc_v_x86_arm_5LsjoStPUn.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 024 期：RISC-V 能否和 x86、Arm 一起成為三大主流架構；給閻王開發地府管理系統&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/svxac61bjmbmmw5/23_google_microsoft_cM5zZacKru.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 023 期：Google = 開源，好評；Microsoft = 閉源收入還低，差評&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/3vmzfjvp7mpvv26/22_sora_cuda_Syy7OJyUvc.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 022 期：輕鬆復現 Sora 模型；事關 CUDA 兼容，英偉達禁止了；百度還差一個 「遙遙領先」&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/z3rhs3qkyeqwoax/21_open_ai_JROaEZat3b.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 021 期：閉源模型就是比開源安全；起訴 OpenAI 不能更贊同&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/lv84pwvd03it00i/20_open_ai_pingora_yaml_mE5RuB20Vl.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 020 期：為什麼王炸都來自 OpenAI；Pingora 最好不要用 YAML 當配置文件&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/mx86z1dhywrw71p/19_ai_c_llm_IgpNOVZtCz.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 019 期：我讓 AI 用 C 語言寫一個算法；微軟三進制 LLM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/qdljicvqiqsshd6/187ZiLwG48lc_CngfQJ1Qxs.pdf&quot; target=&quot;_blank&quot;&gt;開源日報第 018 期：蘋果十年造車夢碎；這個開源項目有點...「大膽」&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/7r8dkz3232v4e7a/17_maria_db_v_linux_GoyNoM85IZ.pdf&quot;&gt;開源日報第 017 期：MariaDB 消亡史；寫代碼我有三不沾；V 神建議馬斯克用 Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/6typ9w3u98f5mxn/16_1_8_2efTeNfFjN.pdf&quot;&gt;開源日報第 016 期：鴻蒙程序員平均月薪超 1 萬 8；中美 AI 差距有多大？&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/92n4c9ryegpcq1z/015_sora_KcAkRNX93Y.pdf&quot;&gt;開源日報第 015 期：為什麼擋不住英偉達；Sora 不靠蠻力&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://report.oschina.net/api/files/jhim80u9qm1ofsw/s7n800w84o6guyv/014_kyezhNxOGD.pdf&quot;&gt;開源日報第 014 期：目前的人工智能技術連貓的智能水平都沒達到&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC013%E6%9C%9F%EF%BC%9A%E7%AD%89%E5%88%B0%20Sora%20%E5%BC%80%E6%BA%90%E4%BA%86%E7%AB%8B%E5%88%BB%E6%8E%A8%E5%87%BA%E5%B1%9E%E4%BA%8E%E6%88%91%E4%BB%AC%E8%87%AA%E5%B7%B1%E7%9A%84%E5%A4%A7%E6%A8%A1%E5%9E%8B.pdf&quot;&gt;開源日報第 013 期：等到 Sora 開源了立刻推出屬於我們自己的大模型&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC012%E6%9C%9F%EF%BC%9ASora%20%E7%BB%99%E4%B8%AD%E5%9B%BD%20AI%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9C%9F%E5%AE%9E%E5%8F%98%E5%8C%96%EF%BC%9BDart%203.3%20%E5%8F%91%E5%B8%83.pdf&quot;&gt;開源日報第 012 期：Sora 給中國 AI 帶來的真實變化；Dart 3.3 發佈&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC11%E6%9C%9F%EF%BC%9A%E7%9B%AE%E5%89%8D%E8%BF%98%E6%B2%A1%E6%9C%89%E2%80%9C%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%89%88Linux%E2%80%9D.pdf&quot;&gt;開源日報第 011 期：目前還沒有 「大模型版 Linux」&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC010%E6%9C%9F%EF%BC%9ATauri%20v2%20%E6%94%AF%E6%8C%81%20Android%20%E5%92%8C%20iOS%EF%BC%8C%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%96%B0%E9%80%89%E6%8B%A9.pdf&quot;&gt;開源日報第 010 期：Tauri v2 支持 Android 和 iOS，跨平台開發新選擇&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5009%E6%9C%9F%EF%BC%9AVue.js%E8%AF%9E%E7%94%9F10%E5%91%A8%E5%B9%B4%EF%BC%9B%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC%E8%A7%A3%E9%87%8AMeta%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E6%BA%90%E5%85%B6AI%E6%8A%80%E6%9C%AF.pdf&quot;&gt;開源日報第 009 期：Vue.js 誕生 10 週年；扎克伯格解釋 Meta 為什麼要開源其 AI 技術&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/277585&quot;&gt;開源日報第 008 期：推動中國開源軟硬件發展的經驗與建議&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/277415&quot;&gt;開源日報第 007 期：「Linux 中國」 開源社區宣佈停止運營&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/277214&quot;&gt;開源日報第 006 期：選擇技術棧一定要選擇開源的&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;http://www.oschina.net/news/277040&quot;&gt;開源日報第 005 期：RISC-V 萬兆開源交換機發售；npm 存在大量武林外傳視頻&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=&quot;https://www.oschina.net/news/276864&quot;&gt;開源日報第 004 期：百度輸入法在候選詞區域植入廣告；大神用 Excel 構建 CPU&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283875</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283875</guid>
            <pubDate>Wed, 20 Mar 2024 03:47:17 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>英偉達和高通加入開源機器人聯盟支持 ROS 開發</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;開源機器人基金會 (OSRF) &lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fosralliance.org%2Fopen-robotics-launches-the-open-source-robotics-alliance-2%2F&quot; target=&quot;_blank&quot;&gt;宣佈&lt;/a&gt;成立開源機器人聯盟 (OSRA)，旨在維持開源機器人項目的開發和維護，特別關注 OSRF 自己的機器人操作系統 (ROS) 的健康發展。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;公告指出，OSRA 將效仿 Linux 基金會和 Eclipse 基金會等其他成功的開源項目基金會，採用混合會員制和精英管理模式。公開邀請所有社區利益相關者參與 OSRF 開源項目（ROS、Gazebo、Open-RMF 及其基礎設施）的技術監督、指導、開發和支持。「整個機器人生態系統的參與對這項計劃至關重要。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;OSRA 的中心是技術治理委員會 (TGC)，該委員會將監督各個項目管理委員會、技術委員會、特別興趣組和工作組的活動。作為 OSRF 的一項慈善計劃，OSRA 的總體責任仍由 OSRF 董事會承擔。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;241&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-41f7c0a537fff8636e3a87932da3a46430c.png&quot; width=&quot;700&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;為了表示支持，英偉達、高通以及由 Alphabet 成立的衍生機器人公司 Intrinsic 均已簽約成為新聯盟的「白金」成員 。&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;英偉達機器人軟件副總裁 Gordon Grigor 表示：「英偉達利用 ROS 2 進行開發，為開發人員、研究人員和商業應用帶來加速計算和人工智能。作為 OSRA 的首屆白金會員，我們將通過協助開發工作、提供治理和連續性來合作推進整個生態系統的開源機器人技術。」&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style=&quot;color:#000000&quot;&gt;其他成員還包括金牌成員 &lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=http%3A%2F%2FApex.ai&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;color:#000000&quot;&gt;Apex.ai&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;color:#000000&quot;&gt; 和 Zettascale，銀牌成員 Clearpath Robotics、Ekumen、eProsima 和 PickNik，以及準成員 Silicon Valley Robotics。首批支持組織包括 Canonical 和 Open Navigation。即將加入的成員包括 Bosch 和 ROS-Industrial，後續還計劃進一步公佈其他成員名單。&lt;/span&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283872/nvidia-qualcomm-open-source-robotics-alliance</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283872/nvidia-qualcomm-open-source-robotics-alliance</guid>
            <pubDate>Wed, 20 Mar 2024 03:24:00 GMT</pubDate>
            <author>來源: OSCHINA</author>
        </item>
        <item>
            <title>三星宣佈「AI for All」企業發展願景</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                            &lt;p&gt;2024 三星家電新品發佈會 3 月 17 日舉行，發佈了全新的 MICRO LED、Neo QLED 8K/4K 系列、OLED 系列、Lifestyle 藝術電視及 BESPOKE 繽色鉑格系列等全系生態產品。&lt;/p&gt; 
&lt;p&gt;此外，三星宣佈「AI for All」的企業發展願景，三星電子大中華區總裁崔勝植表示，「三星正在將 AI 融入到我們的互聯技術，從移動設備上的 Galaxy AI，到顛覆性的顯示技術，再到通過智能家電改善的智能家居，致力於為用戶帶來切實利益。」&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;334&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-3ddacc315c81554f395aa1ff93439e7ec09.png&quot; width=&quot;500&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;多年來，三星一直在 AI 領域進行戰略投資，NQ8 AI Gen3 芯片就是成果之一，其神經處理單元（NPU）的速度是其前代產品的兩倍，神經網絡的數量也由 64 個增至 512 個。在該款 AI 芯片的加持下，三星 Neo QLED 8K 系列開啓了三星 AI 電視新紀元。&lt;/p&gt; 
&lt;p&gt;該公司預計 2024 年的銷量將恢復到 2022 年的水平，在未來 2-3 年內重新奪回全球芯片領先的位置，將在所有設備中採用人工智能，並積極開拓新業務。&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://www.oschina.net/news/283862</link>
            <guid isPermaLink="false">https://www.oschina.net/news/283862</guid>
            <pubDate>Wed, 20 Mar 2024 02:39:46 GMT</pubDate>
            <author>來源: 投稿</author>
        </item>
        <item>
            <title>走近 AI Infra 架構師：在高速飛馳的大模型 「賽車」 上 「換輪子」 的人</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                    
                                                                                                    &lt;p&gt;如果把大模型訓練比作 F1 比賽，長凡所在的團隊就是造車的人，也是在比賽現場給賽車換輪子的人。1% 的訓練提速，或者幾秒之差的故障恢復時間，累積起來，都能影響到幾百萬的成本。長凡説：「大模型起來的時候，我們非常興奮，因為 DLRover 天生就是為大模型訓練的場景設計的。」&lt;/p&gt; 
&lt;p&gt;目前業界普遍認為數據、算力、算法是大模型訓練的三大核心要素，AI 工程的價值似乎還沒有得到足夠的重視，我們和螞蟻 DLRover 開源負責人長凡深入聊了聊，聊到了他為何在大模型出現前就選擇了 AI Infra 的賽道，他參與開源的經歷，也聊了 DLRover 誕生背後的故事。&lt;/p&gt; 
&lt;h1&gt;AI Infra+開源， 一個通信畢業生的非主流選擇&lt;/h1&gt; 
&lt;p&gt;畢業於盛產程序員的北京郵電大學，雖然本科和研究生專業都是通信相關的，但長凡還是機緣巧合邁入了 AI 的大門，如果你也走在職業發展的路口，或許長凡的故事也能給你帶來啓發。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q：首先請介紹下自己，為什麼會選擇在螞蟻做 AI Infra 方面的工作？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;長凡：&lt;/strong&gt; 我本科在北交大的理科實驗班，研究生在北郵做 5G 移動通信的研究。大四的時候，我去了中國移動研究院實習，做機器學習在醫療領域的應用探索，算是入門了大數據和機器學習。我自己對概率統計和編程也比較感興趣，發現自己所學的知識可以解決真實問題了。後來在研究生期間，課餘時間會打打 Kaggle 比賽，邊實踐邊學習。&lt;/p&gt; 
&lt;p&gt;畢業之前我來螞蟻做暑期實習，做 ML Infra 相關的項目。相比打 Kaggle 用算法解決具體業務問題，Infra 的工作能幫助更多的同學來用 ML 解決更多的問題。再加上螞蟻在大力發展 AI，我所在的螞蟻人工智能部有很多 AI 方向的資深技術大拿，所以我畢業後選擇了留在螞蟻。&lt;/p&gt; 
&lt;p&gt;ChatGPT 出來後，大模型一下子火了，大模型相比之前的 AI 訓練對 Infra 的需求要高得多，對我們做 Infra 的是一個非常大的機遇。大模型訓練和推理的成本非常高，Infra 在提升效率和降低成本上大有可為。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q：是什麼契機讓你開始參與開源的？參與開源對你的職業道路產生了哪些影響？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;長凡：&lt;/strong&gt; 在螞蟻工作一年後，我加入到 ElasticDL 團隊，跟着王益老師（原百度 &lt;a href=&quot;https://www.oschina.net/action/visit/ad?id=1185&quot; title=&quot;PaddlePaddle&quot;&gt;PaddlePaddle&lt;/a&gt; 技術負責人）一起做開源項目。在開發 ElasticDL 過程中，王益老師教會了我很多開源思想、開源工作方式和開發習慣。比如新功能需要先寫設計文檔，然後拆解成 issue，最後是開發測試；PR 要儘量小，小 PR 可以降低 Review 成本；代碼質量需要有工具來保障等等。&lt;/p&gt; 
&lt;p&gt;這段經歷對我現在做 DLRover 幫助很大。在 DLRover 項目剛啓動時，我就在代碼倉庫了設置了很多代碼質量相關的檢測，比如 DLRover 的代碼 CI 覆蓋率約 80%。後來，張科老師接手帶領 ElasticDL，一直給我們強調開放合作。這也使得我在主導 DLRover 的開源過程中對架構設計更加開放。這裏説的開放不僅僅指使開源的開放代碼，更多的是指我們的架構和接口設計的開放，以便讓更多的人能進來擴展相關功能滿足各自的業務需求。比如，我們的故障機檢測功能當前支持 NVIDIA GPU 和 Ascend NPU，如果用戶在其他的芯片上訓練，可以自定義檢測腳本。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q：隨着大模型的興起，許多技術人也感受到了前所未有的挑戰。作為&lt;/strong&gt; &lt;strong&gt;AI Infra 領域的架構師&lt;/strong&gt; &lt;strong&gt;，你如何評估大型模型或 AI 對傳統技術架構師的影響？針對當前的技術趨勢，你對於這些架構師有哪些建議？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;長凡：&lt;/strong&gt; 大模型或者 AI 將會改變我們的產品形態和業務模式，而且很多創新可能都是當前看不到或者很難預料的。作為技術架構師，我們的目標其實很簡單，利用技術幫助業務發展。我覺得最好的方式就是從業務中來，到業務中去。比如我們做 AI Infra 的，經常和訓練算法同學一起盯着訓練作業，review 訓練代碼並分析訓練性能，這樣從中發現很多訓練對 Infra 的實際需求。然後將這些需求抽象出來，利用自己的技術經驗來設計項目解決業務問題。&lt;/p&gt; 
&lt;p&gt;隨着大模型技術的發展，不管是對計算、存儲等硬件領域，還是對訓練框架、分佈式系統等軟件領域，對於 AI Infra 的架構師都有非常大的需求。如果想從事 AI Infra 領域，可以結合自前的經驗深入到 AI 應用中去，一定能做出成果。&lt;/p&gt; 
&lt;h1&gt;DLRover：發展靠機遇，持續發展靠技術判斷力&lt;/h1&gt; 
&lt;p&gt;時間拉回到 2022 年 9 月，DLRover 剛剛開源，那時深度學習的訓練基本都是在單機多卡上完成的，作為一個分佈式訓練的智能調度系統，DLRover 的功能似乎有些過於強大，就好像開了一輛百米加速的超跑來上下班。&lt;/p&gt; 
&lt;p&gt;DLRover 的容錯和彈性擴縮容在單機多卡的訓練上幾乎沒有用武之地，團隊也很迷茫是否要針對 GPU 訓練做優化，所以當 2022 年底，ChatGPT 在全球引起廣泛關注的的時候，大規模分佈式訓練是大模型訓練的剛需，長凡一下子就興奮了。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q：DLRover 是如何誕生的？發展歷程中有哪些關鍵的轉折點或者故事？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;長凡：&lt;/strong&gt; DLRover 脫胎於螞蟻內部的一個項目，主要利用容錯和彈性擴縮容來提升搜推廣訓練的速度和資源利用率。2022 年 7 月，該功能上線後，集羣資源利用率提升了快一倍，訓練時間也縮短了約 20%。基於自動擴縮容，我們就想讓用戶只寫模型代碼，系統能自動地將模型在集羣上高效、穩定地和經濟地訓練出來，從而大幅降低分佈式訓練的門檻和運維成本。基於這個願景，我們在 2023 年 3 月開源了項目，並取名 DLRover，Rover 代表火星車，我們把 DL 訓練作為火星車的乘客，DLRover 這個火星車的目的就是快速、穩定、節能地將 DL 訓練這位乘客送到目的地，即訓練出模型。&lt;/p&gt; 
&lt;p&gt;DLRover 剛開源的時候，發佈了 CPU 集羣上 TensorFlow 異步分佈式訓練的自動資源配置與自動擴縮容，該功能可以將算法工程師從作業資源調優上解脫出來。但是發佈後社區反響一般，主要原因是搜推廣的訓練已經比較成熟了，業界也主要在關注 GPU 訓練。為此，我們內部也在討論要不要在 GPU 訓練上做點東西。但那時 GPU 訓練主要還是 CV 和 NLP 領域，以單機多卡為主，DLRover 的容錯和彈性擴縮容好像在單機多卡 GPU 訓練上沒有用武之地。&lt;/p&gt; 
&lt;p&gt;正在我們迷茫時，2023 年初大模型火了。因為 GPU 本身的故障率較高，大規模訓練經常因為故障而中斷，嚴重影響了大模型訓練的進度和集羣的利用率。所以 DLRover 在 2023 年的重點方向就是降低故障對訓練的影響。後來，DLRover 針對大規模分佈式訓練的場景，發佈了故障自愈功能，該功能吸引了很多大模型訓練的同學，也吸引了很多國產 AI 芯片的公司的關注。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q：DLRover 為什麼選擇開源？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;長凡：&lt;/strong&gt; DLRover 面向的用戶主要使用的是開源技術，比如 TensorFlow 和 PyTorch 等訓練框架，Kubernetes 和 Ray 等分佈式集羣調度系統。開源可以讓我們接觸到領域裏更多的同行，擴寬我們的視野。當前很多公司都在做 AI 訓練，大家面臨的場景和問題可能都不一樣。通過開源交流，我們可以對 AI 訓練所面臨的問題與挑戰有更全面的瞭解，社區提出來的問題，未來我們也可能會遇到。我們希望 DLRover 不僅能滿足螞蟻內部大模型訓練的需求，也能滿足整個社區的普遍需求。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q：如果內部需求和社區需求不一致怎麼辦？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;長凡：&lt;/strong&gt; 這其實是開源項目經常會遇到的問題，我覺得首先要有技術判斷力，判斷這個需求是不是一個普遍需求，公司未來是不是也可能用得到。比如，以前我們認為跑大模型訓練大多都用英偉達的 GPU 卡，但現在社區開始提出希望我們適配國產芯片的需求，很多國產芯片的公司也來找我們交流，也就是很多人已經開始在國產芯片上去跑訓練了，這就是對我認知的一個刷新。如果我們未來買不到 GPU 了，或者國產芯片能達到更好的效果了，我們已經提前做了國產芯片的支持，那這個需求就可以直接上了。&lt;/p&gt; 
&lt;p&gt;現在很多流行的開源項目，以前 Star 數可能是線性增長，在大模型出來之後是指數增長。就是因為他們兩年前就覺得這個事情是一個正確的方向，堅持在做，然後機遇一來，他們就起來了。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Q：開源社區在 DLRover 的發展過程中扮演着怎樣的角色？有沒有一些特別令你印象深刻的社區貢獻者或者故事？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;長凡：&lt;/strong&gt; 開源社區給 DLRover 貢獻了很多非常好的思路和有價值的需求。比如 DLRover 的 Flash Checkpoint 功能發佈後，社區同學的試用幫我們發現了一些沒有測試的 corner case，這幫助我們提高了 DLRover 的產品質量。還有，我們最近吸引了很多國產 AI 芯片公司的關注，社區也提出將我們的訓練故障自愈擴展到國產芯片的意願，這些都是來自一線從業同學的真實聲音，是我們發展 DLRover 的寶貴源泉和動力。&lt;/p&gt; 
&lt;h1&gt;未來展望：幫助用戶高效、穩定地訓練模型&lt;/h1&gt; 
&lt;p&gt;提到對項目未來的規劃時，長凡説：「我們希望 DLRover 能幫助用戶解決問題，高效、穩定地訓練模型。」也希望有更多對 AI 工程感興趣的開發者能加入到 DLRover 項目，一起推進 AI Infra 領域的發展。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q：目前還有哪些項目也在做類似的事情嗎？和 DLRover 相比有什麼不同？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;長凡：&lt;/strong&gt; 分佈式訓練的彈性容錯一直是開源社區在探索的，比如 TorchElastic 和 Elastic Horovod 解決了訓練框架的彈性與容錯。大模型出來之前，大家訓練 NLP 或者 CV 模型主要還是單機或者小規模的集羣。小規模訓練因為使用的節點少，故障率較低，對彈性容錯需求不大。大模型訓練一下將訓練規模擴大到幾百上千卡，故障率就高了很多。同時實際訓練中，訓練容錯和故障自愈需要集羣調度、節點管理和訓練框架一起協作。所以 DLRover 是將現有的彈性訓練框架與節點管理、集羣調度相結合來實現快速的訓練故障自愈。&lt;/p&gt; 
&lt;p&gt;訓練自愈這塊其實很多雲廠商也在做，但是都是和自己的雲平台耦合的。最近幾個月也有好幾篇定會文章介紹相關工作。DLRover 是和雲平台解耦的，用戶只要是在 kubernetes 集羣上做分佈式訓練，就可以使用 DLRover 的訓練故障自愈功能。除此之外，由於我們之前在這塊有過探索和積累，所以訓練穩定性這塊的功能開源得比較快。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Q：在 AI Infra 領域，海外有哪些做得比較好的開源項目，對於我們有哪些借鑑意義？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;長凡：&lt;/strong&gt; Flash Attention 和 vllm，這兩個框架大幅提升了大模型訓練和推理的性能，更重要的是，用戶只需要安裝 Python 包即可使用。他們的特點就是利用創新解決了一個很難且很有價值的問題，但是又非常簡單易用，這對我們有很大啓發。比如，我們在設計 DLRover 訓練自愈的 Flash Checkpoint 的 API 時，也是儘量讓 API 簡單易用，用戶儘量少改代碼就能使用 DLRover。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q：對於 DLRover 未來的規劃，你有什麼願景或目標？&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;長凡：&lt;/strong&gt; 我們希望 DLRover 在大模型時代能讓更多的用戶高效地訓練大模型，降低 AI 訓練門檻。當前 AI 訓練有 2 個趨勢，一方面大家根據 Scaling law 來使用更大規模的集羣，來訓練越來越大的模型；另一方面很多工作在探索如何在小規模或者單機上微調模型。&lt;/p&gt; 
&lt;p&gt;不管是大規模預訓練還是微調，高效、穩定地訓練模型都有困難，需要根據經驗反覆調試。我們希望 DLRover 能幫助用戶解決這方面的問題，也希望能支持到國內的 AI 發展。DLRover 未來在功能和接口設計上會做得更加開放，讓用戶能在國產芯片上使用 DLRover 高效、穩定地訓練模型。當然，我們也非常歡迎更多的同學加入到 DLRover 社區，一起推進 AI Infra 的前進。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q：最後，給我們預告下你在 GDC 上會分享哪些內容吧&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;長凡：&lt;/strong&gt; GDC 上我將分享 DLRover 如何通過訓練故障自愈，來降低大規模 AI 訓練的成本，幫訓練省錢的。以及大家如何來使用 DLRover 來提升訓練的效率。&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;看完長凡的經歷和 DLRover 的故事，你是不是對 AI Infra 有了更多興趣呢？3 月 23 日下午，長凡將在 2024 全球開發者先鋒大會 (GDC) 分享《DLRover 訓練故障自愈：大幅提升大規模 AI 訓練的算力效率》，歡迎到現場和講師近距離交流。&lt;/p&gt; 
&lt;p&gt;&lt;img src=&quot;https://oscimg.oschina.net/oscnet/up-dc4d134f36c97587b51d09fd3639c34817e.png&quot; alt=&quot;&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;關於 DLRover&lt;/p&gt; 
&lt;p&gt;DLRover（Distributed Deep Learning System）是螞蟻集團 AI Infra 團隊維護的開源社區，是基於雲原生技術打造的智能分佈式深度學習系統。DLRover 使得開發人員能夠專注於模型架構的設計，而無需處理任何工程方面的細節，例如硬件加速和分佈式運行等；開發深度學習訓練的相關算法，讓訓練更高效、智能，例如優化器。目前，DLRover 支持使用 K8s、Ray 進行自動化操作和維護深度學習訓練任務。更多 AI Infra 技術請關注 DLRover 項目。&lt;/p&gt; 
&lt;p&gt;加入 DLRover 釘釘技術交流羣：31525020959&lt;/p&gt; 
&lt;p&gt;DLRover Star 一下：&lt;em&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fintelligent-machine-learning%2Fdlrover&quot; target=&quot;_blank&quot;&gt;https://github.com/intelligent-machine-learning/dlrover&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;在&amp;nbsp;GitHub&amp;nbsp;關注&amp;nbsp;DLRover：&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fintelligent-machine-learning%2Fdlrover&quot; target=&quot;_blank&quot;&gt;https://github.com/intelligent-machine-learning/dlrover&lt;/a&gt;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/7032067/blog/11048088</link>
            <guid isPermaLink="false">https://my.oschina.net/u/7032067/blog/11048088</guid>
            <pubDate>Wed, 20 Mar 2024 02:28:21 GMT</pubDate>
            <author>原創</author>
        </item>
        <item>
            <title>20 年編程，AI 編程 6 個月，關於 Copliot 輔助編碼工具，你想知道的都在這裏</title>
            <description>&lt;div class=&quot;content&quot;&gt;
                                                                                                                                                                                        &lt;span id=&quot;OSC_h1_1&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;AI 代碼輔助工具&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;嘗試各種輔助編程的 AI 工具&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;筆者是一個後端 Coder~，開發工具使用 Idea 和 VsCode。在過去我一直嘗試找到一款適合自己的智能代碼輔助工具，來告別繁瑣的重複性編碼，好提高開發效率。直到 AIGC 和 AI Agent 的迅速發展，越來越多的 AI 編碼輔助工具百花齊放。宣告天下-生成式編碼新賽道的來臨。於是開始使用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Github Coplilot、Bito、&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Duet AI、CodeWhisperer、&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;通義靈碼/螞蟻百靈、&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Comate、CodeGeeX2 &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;等不下 10 種的工具。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;AI 生成工具總結：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;table style=&quot;width:auto&quot;&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;th&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;產品&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;版本&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;功能&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;費用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;鏈接&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/th&gt; 
    &lt;th&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;總結&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/th&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;（微軟) GitHub Copilot&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;個人/企業&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;1.代碼補全 2.根據註釋生成代碼 3.創建 SQL 查詢 3.代碼優化 4.問答 5.單元測試&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;個人版每月$10 企業版每月$19&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.github.com%2Fzh%2Fcopilot%2Fusing-github-copilot%2Fgetting-started-with-github-copilot&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;官網&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;業界排名第一，最新版代碼補全能力遙遙領先，使用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Open AI 的大模型用 Github 庫來訓練。新版 chat 是 GPT-3.5&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;。只要網絡允許絕對首選。 根據 github 統計，96% 的人研發認為可以快速完成重複工作，80% 的研發認為可以提高工作效率。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;（google）Duet AI&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;企業版&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;1.生成代碼 2.生成單測 3.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;回答有關 Google Cloud 產品的問題。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt; 4.代碼優化 5.對錯誤消息進行問題排查&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;每月 $19&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.google.com%2Fduet-ai%3F_gl%3D1*keo78j*_up*MQ..%26gclid%3DCjwKCAiA_OetBhAtEiwAPTeQZ_hhyKrqF62wIqOXFSYhnVozDRPiAsvCrE0v66hAeB798nyj9B7VNhoCQ0wQAvD_BwE%26gclsrc%3Daw.ds%26hl%3Dzh-cn%23pricing&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;官網&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;UE 和響應速度很好，內置的 chat 是 gemini pro。免費用 30 次。 集成了 Google Cloud 和 k8 還有熱部署。 bug 的提示修復很厲害。 支持 AI SQL（BigQuery 收費）。有自己的日誌中心和 CI/CD。 最厲害的是推出的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;AI 告警，和 AI 日誌分析&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;。幫助定位和發現生產環境出現的問題。傳説內部的 Goose 已經學會 google 技術架構。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Bito&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;免費/收費&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1.生成代碼 2.生成單測 3.問答 4.代碼優化 5.代碼解釋 6.代碼檢查&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;收費$15&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbito.ai%2F&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;官網&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;號稱提高 10 倍開發效率。體感生成速度確實快。 Bito 利用來自 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Open AI、Anthropic &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;等公司的大模型。（可以理解他用了 GPT 和 Claude 大模型） 亮點是 CodeView 功能。利用 AI agent 實現的。 免費版是 GPT-3.5 Turbo 或谷歌&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#121926&quot;&gt;Chat-bison&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，chat 和代碼補全有限制。付費是 GPT-4 每月 400 個請求。 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;（AWS）CodeWhisperer&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;個人/企業&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;1.生成代碼 2.生成單測 3.代碼安全檢查 4.問答&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;個人免費，企業版每月$19&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faws.amazon.com%2Fcn%2Fcodewhisperer%2F&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;官網&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;UE 工具欄在左側，內置了 chat，不支持中文。 號稱提高&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;開發&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;速度 28% 代碼補全精準度很好，沒有廢代碼。 可以根據中文註釋生成，聯繫上下文寫出定義方法。 最 nb 的功能&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;代碼安全檢查&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;，免費版每月 50 次，企業版每月 500 次&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;（阿里）CodeFuse(螞蟻百靈) 和通義靈碼&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;個人&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1.生成代碼 2.生成單測 3.問答 4.代碼優化 5.代碼解釋 6.代碼檢查&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;免費&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftongyi.aliyun.com%2F&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;通義靈碼&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; / &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcodefuse.alipay.com%2F&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;螞蟻百靈&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;阿里通義大模型套件。通義靈碼來自阿里雲，Codefuse 來自螞蟻集團。 通義靈碼基於通義大模型提供行級/函數級實時續寫、自然語言生成代碼。 Codefuse 基於開源的 DeepSeek 的 33b 模型二開的產品。目前內測中。 通義靈碼的配置比較豐富，可以根據使用習慣來定製，補全長度、方式輔助功能等。 現階段使用上通義靈碼優於 Codefuse&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;（百度）Comate&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;個人&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;1.生成代碼 2.代碼解釋 3.問答 4.代碼優化 5.生成單測&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;每月 60&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcomate.baidu.com%2F&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;官網&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;代碼生成：代碼模塊存在缺失和不完善，如數據預處理未按要求處理。損失函數可視化部分缺失；代碼分段輸出、註釋清晰，首次執行結果： 按提示修改數據集文件地址後，執行第一步數據預處理報錯，順利執行 10% 場景能力：在單次對話中，上下文關聯差，多輪對話過程，未能很好結合上下文，後續提問回答，更像是單次提問的百科搜索回答。 其他：提問字數超出限制之後，胡亂輸出了我本地 ide 中的代碼文件&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;（清華智譜）CodeGeeX2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;開源&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;1.生成代碼 2.代碼解釋 3.問答 4.代碼優化&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;免費&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;a href=&quot;https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTHUDM%2FCodeGeeX2&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;官網&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#000000&quot;&gt;1、交互較差，補全代碼的時候經常補到一半 (到行甚至單詞的一部分就停了) 2、理解能力較差，代碼不正確 3、代碼轉換 (不同語言) 能力還可以 4、生成代碼接受率低，需要刪減&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;最初我認為不會有太多地方用得上它們。因為大廠都有一套自己的技術體系和技術架構。外部的工具不可能學會，也不會讓他們去訓練自家的技術。所以我的定位是解決重複性編碼的工作。經過六個月的使用後，發現我使用 AI 的方式隨着時間的推移在不斷變化和改進。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;首先在選擇工具時我有一個要求，那就是必須是基於&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;GPT&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。因為在&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;代碼生成基準測試中，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;GPT&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;絕對是搖搖領先。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-03-03-16-286A4dAOifUAQ27tVb.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-03-04-21-109DAAKkBqe6JnEij.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;當下和&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Open AI&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;合作的名氣最大的是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;GitHub Copliot&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。GitHub Copliot 一直是業界的標杆！在代碼補全領域一直是行業第一。新版本也增加了 chat 功能，作為插件在 UE 上也下足了工服，生成單側，代碼優化，代碼解釋等主流功能一應俱全。一月 10$的價格也是可以接受。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;同時對持學生證或者在 github 活躍項目的維護者提供永久免費。主打一個沉浸式編碼！最近也發佈了企業版。唯獨一點就是要科學上網才能有好的體驗。否則生成真的會很慢。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-03-03-16-38DtUyeZhqExFv09h.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;每每看到 Thinking...就會抓狂！那有沒有同樣是和 Open AI 合作，且沒有網絡限制的平替產品呢？ 答案是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Bito&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。一個號稱提高 10 倍生產力！每天節約 1 小時的產品...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Bito 在用戶本地部署矢量數據庫。該數據庫會嵌入了 1 萬個索引作。該矢量庫使用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#191b1f&quot;&gt;embedding（&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; 超過 1 萬個維度的向量&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;background-color:#ffffff; color:#191b1f&quot;&gt;）&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。將代碼庫中檢索文本、函數名稱、對象等，轉換為多維向量空間存儲。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;最後，Bito 利用來自 Open AI、Anthropic 的大模型，也就是説他可以用 GPT 或 Claude 模型。免費版的 chat 使用的 GPT-3.5 Turbo、或者 Google 的 chat-bison、Claude Instant。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;如何安裝就不多説了，支持 Jetbrains 和 VsCode 平台。直接看他的功能吧！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_2&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Bito&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;1.代碼補全：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;被動觸發，默認快捷鍵是&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt; &lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;macOS：Option + Shift + K&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Windows：Alt + Shift + K&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;2.解釋代碼：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;對於陌生語言很有用&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;macOS：Option + Shift + E&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Windows：Alt + Shift + E&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;3.生成註釋：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;生成的方法註釋，用的少&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;macOS：Option + Shift + V&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Windows：Alt + Shift + V&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;4.優化代碼：一般沒什麼用。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;macOS：Option + Shift + Q&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Windows：Alt + Shift + Q&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;5.安全檢查：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這裏主要是找代碼漏洞&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-03-04-18-083rVVSsHSL3uAerO.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;快捷鍵 macOS：Option + Shift + Z&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Windows：Alt + Shift + Z&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;6.style 檢查：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這裏的 style 是指代碼規範&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-03-04-18-07gxMX446tY0IFYnYp.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;快捷鍵 macOS：Option + Shift + U&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Windows：Alt + Shift + U&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;7.是生成單測&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;。只能單個文件生成。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;我用的最多的是 chat，太絲滑了！其次才是代碼補全，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;看下代碼補全的使用場景&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;重複性代碼補全：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-03-04-18-37hPLnRnb9pFelsJk.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;正則表達式&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://503886607-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FYgNBTrPKG0DuVdAyDvSa%2Fuploads%2FuSybqpcFilyfxEoxOA4e%2Fregex_2.gif?alt=media&amp;amp;token=fee783fc-3729-4bf7-81dc-6f9abcfd4141&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;編寫 SQL：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://503886607-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FYgNBTrPKG0DuVdAyDvSa%2Fuploads%2FrDSpxXqZchp9wZDhgsm6%2Fsql_1.gif?alt=media&amp;amp;token=39542188-bed6-4966-92c9-5d413c06ce98&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;在 mapper 可以自動補全 sql 的查詢條還能，還一種用法在 chat 裏面輸入表結構。讓 Bito 生成複雜 sql。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;生成實體：&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;這裏不是生成 getter/setter 方法，而是實體賦值或者轉換。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-03-05-15-50bPtsgjBni0HrMyz.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_3&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; 生成代碼場景&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;Bito 有個很好用的功能，可以自定義 Prompt 模版。我們可以把設計好的提示詞添加到模版裏用來生成想要的結果。比如定義&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;sql 生成實體的 Prompt&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;，定義&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;生成 Web、RPC 接口的 Prompt&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;等。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;img alt=&quot;&quot; src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-03-06-19-42lZmVoelFDM7pKRu.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;div&gt; 
 &lt;span&gt;&lt;img alt=&quot;&quot; src=&quot;https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-03-06-19-4747s4735C6R47FqNGhRR.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_4&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt; 心流&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;打造心流領域&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;我們用 AI 代碼輔助工具是為了提高我們的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;工作效率&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;，而不是靠他來生成業務代碼。生成業務代碼屬於「&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;實時的軟件生成」領域的&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;（Prompt 編程+低代碼）。即使谷歌的 Goose 已經學會了自家的全部技術棧，也不能完全做到需求即交付。因為 AI 需要滲透到整個軟件生命週期裏，完全標準化後才能達到的預期效果。我理解的提效就是進入「心流」狀態。而 AI 輔助工具能幫我做到。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;打造個人的&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;strong&gt;&lt;span&gt;Copliot&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;推薦組合：CodeFuse+Bito+豆包 &lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;結對編程組合：&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;GitHub Copliot 就很夠了！適合轉型新語言的開發者。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;打造沉浸式環境：JoyCoder（自家工具&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;）+Bito。完全輔助，可以徹底告別網絡搜索。期待自己家的 JoyCoder 的成長！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;span id=&quot;OSC_h1_5&quot;&gt;&lt;/span&gt; 
&lt;h1&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/h1&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;p&gt;&lt;span&gt;&lt;span style=&quot;color:transparent&quot;&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;﻿&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;總結&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;完全可以提高 20% 的工作效率！如果對 P&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;rompt 理解透徹、代碼模塊化思維能力夠強，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span&gt;願意花時間調整工作流程的話，&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;還會提高的更多！&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;span style=&quot;color:#333333&quot;&gt;如果這篇文章帶給大家一些收穫，不妨點贊、收藏。下次會介紹更好玩的產品。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img height=&quot;396&quot; src=&quot;https://oscimg.oschina.net/oscnet/up-1fe741836aaf93527c65cbe2a65e4ffa9ff.png&quot; width=&quot;396&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp; &amp;nbsp;掃一掃，與作者技術交流一下吧&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
                                        &lt;/div&gt;
                                    </description>
            <link>https://my.oschina.net/u/4090830/blog/11047919</link>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/11047919</guid>
            <pubDate>Mon, 18 Mar 2024 09:47:00 GMT</pubDate>
            <author>京東雲開發者</author>
        </item>
    </channel>
</rss>