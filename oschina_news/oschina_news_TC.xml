<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 04 Dec 2023 23:03:16 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[讓代碼運行起來，比代碼可讀性重要]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#101828; margin-left:0px; margin-right:0px; text-align:start">"代碼的閲讀勝於編寫"這句話現在已經是程序員共識，它提醒我們，在編寫代碼時不能僅追求方便，而忽視那些將來需要閲讀和修改代碼的人。更一般地説，"代碼的閲讀勝於編寫"傳達了一個觀點：通過保持代碼可維護性，保持簡潔、編寫測試和文檔等方式來使得代碼易於理解是一個明智的投資。它關乎對軟件開發週期的全局視角。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">讓我用更簡潔的表達方式來表述這個觀點：</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">維護者 &gt; 作者</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">我認為這種思路可以超越編寫代碼，並作為一個經驗法則用於問題識別和決策。</p><h3>代碼的使用勝於閲讀</h3><p style="color:#101828; margin-left:0px; margin-right:0px; text-align:start">代碼只是達到目標的手段。軟件應該有一個目的，它應該為用戶提供服務。無論代碼是否編寫良好、可維護性如何，以及所使用技術是否先進，如果軟件不能實現其目標並給用戶帶來良好體驗，則一切都沒有意義：</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">用戶 &gt; 維護者 &gt; 作者</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">或者，既然我們不再需要區分開發人員角色：</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">用戶 &gt; 開發者</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">因此，與其猜測或詢問用戶需求，最好的方法是儘早、頻繁地將程序放在用戶面前，並結合他們的反饋來改進。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">這是一個強大的思維模式，只要在開發過程中牢記用戶，我們就能走得更遠。這大致是我學習這個職業以及我職業生涯前半段對它的理解方式。</p><h3>代碼的運行勝於閲讀</h3><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">當我説"運行"時，我不僅指執行程序，還包括在生產環境中操作它，包括部署、升級、觀察、審計、監控、修復和廢棄等等。正如丹·麥金利所説：在保持系統可靠工作方面，長期成本幾乎總是遠遠超過你在構建過程中遇到的任何不便。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">我們可以將這個觀點納入我們的小模型中：</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">用戶 &gt; 運維 &gt; 開發</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">我花了一些時間才完全理解這一點，因為根據我的經驗，很多正在構建的軟件實際上從未真正投入生產使用，至少沒有達到重要規模。大多數軟件都是基於從未經過測試的假設構建而成。但當你將代碼運行在生產環境中時，簡潔性原則就有了新的維度。它不再僅僅關乎代碼本身，而是關乎減少移動部件並瞭解其故障模式。它關乎交付產品並確保即使在出現故障時也能正常工作。</p><h3>此外，還有商業因素</h3><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">我説過，在開發過程中牢記用戶可以幫助我們走得更遠。這適用於軟件對用戶有價值且良好運行的假設。對於開發人員來説，這是一個方便的抽象：我們提供優秀、可工作的軟件，而業務則負責將其轉化為利潤。這在消費者和企業軟件領域通常有效。但最終，這種抽象會被證明是一種過度簡化，並且我們可以從中受益，將一些商業觀點納入我們的工作流程：</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">商業 &gt; 用戶 &gt; 運維 &gt; 開發</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">最明顯的例子就是預算：我們沒有無限資源來滿足用戶需求，所以需要衡量成本和收益。還有市場營銷、截止日期、利益相關者和投資者等因素。個人興趣和政治也會產生影響。某些決策在孤立考慮我們的軟件、團隊或用戶時是合理的，但當考慮整個組織時可能不再合適。有時，我們需要關注能夠產生收入的事務，而不是隻迎合用戶。我將再次回到這個問題。</p><h3>反向思考</h3><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">我們得到了一個小模型，它表達了軟件開發中各種因素的相對重要性，或許可以幫助我們看到更大的圖景並專注於重要的事情。現在我想看一下一些常見的軟件開發功能障礙，並看看它們如何與該模型相匹配。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>難以維護的代碼</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">作者 &gt; 維護者</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">這是我們起點。這是聰明而懶惰的代碼變成了意大利麪條和鬼屋，這是過早優化，這是隻有卡洛斯才能碰觸那個模塊等等。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>不可用的軟件</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">開發者 &gt; 用戶</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">由那些不從用戶那裏學習或將技術放在第一位的團隊製作的軟件。過度工程化程序、惡化用戶體驗的"現代化"、破壞瀏覽器功能的 Web 應用等等。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>只在我的機器上運行</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">開發者 &gt; 運維</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">沒有考慮操作問題而設計出來的軟件。這是過於複雜、有很多移動部分、為小數據負載設計高級數據庫、由單個小團隊管理的微服務生態系統。這是過早為規模而架構的軟件。這是由與在它出現故障時被叫醒的人不同的人設計的軟件。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>正確的事情</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">開發者 &gt; 商業</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">將代碼視為目標本身。這是自命不凡的工匠們、泰坦尼克號上的音樂家和 Lisp 黑客製作的軟件。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>以簡歷為導向的開發</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">開發者 &gt; *</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">沒有風險，開發人員可以做他們想做的任何事情。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>虛構的軟件</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">商業 &gt; 用戶 &gt; <s>運維 &gt;</s><span style="color:#101828">&nbsp;開發</span></p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">這是已經構建但很少（或從未）投入生產使用的軟件。我稱之為虛構的軟件。Charity Majors 稱之為活在謊言中。</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">商業 &gt; <s>用戶 &gt;</s><span style="color:#101828">&nbsp;運維 &gt; 開發</span></p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">另一種虛構的軟件是那些沒有用戶但具有可擴展性（大規模）的軟件。這是無法解決問題或解決錯誤問題，可能沒有人關心問題。這種軟件源於採用一些炒作技術並將其應用於所有事物，直到出現模糊地符合某個用例需求。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>晚期資本主義</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><s>商業 &gt;</s><span style="color:#101828">&nbsp;用戶 &gt; 運維 &gt; 開發</span></p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">風險投資支持下沒有商業模式或其商業模式是增長至壟斷然後剝削用戶的軟件。</p><h3>全局來看</h3><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">如果你還沒有關閉瀏覽器標籤，讓我總結一下：</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">商業 &gt; 用戶</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">這個觀點可能很難接受。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">正如我上面提到的，我學習這個工作時，軟件是為最終用戶解決問題的。這在《程序員修煉之道》的最後一個提示中得到了總結，該提示説我們的目標是讓用戶滿意，而不僅僅是交付代碼。但自從我開始從事程序員工作，並且隨着軟件變得無處不在，我發現這種假設越來越難以維持。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">有很多正在生產的軟件根本不關心其用戶，或者操縱用戶，或者將其變成產品。這不僅限於社交媒體：作為用戶，在沒有彈窗試圖吸引我的注意力之前，我甚至不能預訂房間、訂購食物或點擊 Windows 開始按鈕；在進行谷歌搜索時，我會得到一堆垃圾信息。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">我們認為做好工作意味着什麼與行業中相當大一部分人認為能夠獲利是相矛盾的，我認為這解釋了許多軟件專業人士日益感到不適的原因。雖然我們不能迴避對我們領域的經濟現實，但也許我們應該更加堅定地站在道德立場上，不傷害用戶。承認用戶並非始終排在商業之前，但商業也不應無條件地居於第一位：</p><blockquote><p style="color:#101828; margin-left:0px; margin-right:0px; text-align:start">用戶 &gt; 運維 &gt; 開發<br> 商業 &gt; 運維 &gt; 開發<br> 商業 ≹ 用戶</p></blockquote><p>原文鏈接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Folano.dev%2F2023-11-30-code-is-run-more-than-read%2F" target="_blank">https://olano.dev/2023-11-30-code-is-run-more-than-read</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 10:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269471</guid>
            <link>https://www.oschina.net/news/269471</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 8 極致性能優化 AOT]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h1_1"></span><h1><strong>前言</strong></h1><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">.NET8 對於性能的優化是方方面面的，所以 AOT 預編譯機器碼也是不例外的。本篇來看下對於 AOT 的優化。</p><span id="OSC_h1_2"></span><h1><span><strong><span style="color:#3c70c6">概述</span></strong></span></h1><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">首先要明確一個概念，.NET 裏面的 AOT 它是原生的。什麼意思呢？也就是説通過 ILC 編譯器 (AOT 編譯器，參考:<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5NDYwNjU4MA%3D%3D%26mid%3D2247484180%26idx%3D1%26sn%3D418cc4dc2d124a107f52c34739181e50%26chksm%3Dc01c4e8ff76bc79991e1b1086487f5a60d0068c358969c47945843ac88be74aa90de38ed9302%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span>.Net 7 新編譯器 ILC 簡析</span></strong></a>) 編譯出來的代碼是各個平台上可以直接運行的二進制代碼。比如 MacOS 的二進制，Linux 二進制等等。所以稱之為原生。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">C#源碼被 ILC 編譯之後，生成了一個完全原生態代碼的可執行文件。在執行的時候不需要 JIT 來編譯任何東西，因為 JIT 已經在 ILC 裏面被充分利用過了。實際上 AOT 裏面也沒有包含 JIT。那麼它如何優化呢？只能是在 ILC 裏面調用 JIT 的時候了。所以它這個優化依然依靠 JIT。<span>.NET8 裏面優化 AOT 的一個典</span><span>型的例子，就是 ASP.NET 應用程序在使用 AOT 的時候表現不錯，同時也降低了總成本。</span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">在.NET8 裏面優化 AOT 的一個重要的目標就是減少 AOT 可執行文件的大小，關於這點的效果。我們現在就可以看到</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">下面創建一個控制枱應用程序</p><pre><code><span>dotnet <span style="color:#ca7d37">new</span><span style="color:#ca7d37">console</span> -o nativeaotexample -f net7<span style="color:#0e9ce5">.0</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">由於上面是通過.NET7.0 創建的，我們把這個控制枱的 csproj 更改下</p><pre><code><span><span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">TargetFramework</span>&gt;</span>net7.0<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">TargetFramework</span>&gt;</span></span></code><code><span>改為</span></code><code><span><span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">TargetFrameworks</span>&gt;</span>net7.0;net8.0<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">TargetFrameworks</span>&gt;</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">可以輕鬆的構建.NET7.0 或者.NET8.0 的程序</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">繼續​​​​​​​</p><pre><code><span>把<span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">PropertyGroup</span>&gt;</span>...<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">PropertyGroup</span>&gt;</span>項中添加如下</span></code><code><span><span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">PublishAot</span>&gt;</span>true<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">PublishAot</span>&gt;</span>編譯成 AOT 文件</span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">下面我們就可以通過 dotnet publish 發佈它了，linux 如下：</p><pre><code><span><span style="color:#ca7d37">dotnet</span><span style="color:#ca7d37">publish</span><span style="color:#ca7d37">-f</span><span style="color:#ca7d37">net7</span><span>.0</span><span style="color:#ca7d37">-r</span><span style="color:#ca7d37">linux-x64</span><span style="color:#ca7d37">-c</span><span style="color:#ca7d37">Release</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">現在它生成了一個.NET7.0 版本的獨立可執行文件，可通過&nbsp;ls/dir 輸出目錄以查看生成的二進制大小</p><pre><code><span><span>12820K</span><span style="color:#dd1144">/home/stoub/nativeaotexample/bin/Release/net7.0/linux-x64/publish/nativeaotexample</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">這個大約是 13M 左右，我們再來看下.NET8.0</p><pre><code><span><span style="color:#ca7d37">dotnet</span><span style="color:#ca7d37">publish</span><span style="color:#ca7d37">-f</span><span style="color:#ca7d37">net8</span><span>.0</span><span style="color:#ca7d37">-r</span><span style="color:#ca7d37">linux-x64</span><span style="color:#ca7d37">-c</span><span style="color:#ca7d37">Release</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">生成的可執行文件大小如下:</p><pre><code><span><span>1536K&nbsp;/home/stoub/nativeaotexample/bin/Release/net8.0/linux-x64/publish/nativeaotexample</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff">1.5M 的大小，這個優化的力度不可不大啊。整整優化了將近 10</span>倍<span style="background-color:#ffffff">的體積。</span><span style="background-color:#ffffff">這就是.NET8.0 的優化魔力。</span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">但是優化的情況遠不止如此，比如説我們可以配置 csproj 使 AOT 的體積更小​​​​​​​</p><pre><code><span>csproj 添加如下 size 表示要生成的 AOT 大小</span></code><code><span><span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">OptimizationPreference</span>&gt;</span>Size<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">OptimizationPreference</span>&gt;</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff">如果我們不需要全球化代碼和數據，需要特</span>定<span style="background-color:#ffffff">的代碼和數據，並且使用不變模式，可以 csproj 添加如下選項</span></p><pre><code><span><span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">InvariantGlobalization</span>&gt;</span>true<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">InvariantGlobalization</span>&gt;</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">如果你不想在 AOT 異常的時候拋出堆棧，那麼你也可以在 csproj 裏面添加如下</p><pre><code><span><span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">StackTraceSupport</span>&gt;</span>false<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">StackTraceSupport</span>&gt;</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">重新通過 dotnet publish net8.0 發佈了之後，它的體積還可以繼續減小</p><pre><code><span><span>1248K</span><span style="color:#dd1144">/home/stoub/nativeaotexample/bin/Release/net8.0/linux-x64/publish/nativeaotexample</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">再次縮小了 0.3M 大小。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">然而，你以為到此優化就為止了嗎?並沒有，.NET8 不僅對 AOT 編譯器內部進行了改進，而且還對單個庫也進行了性能優化和改進。比如 HttpClient。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">當然除了體積的優化之外，還有其它的優化，比如避免了在讀取靜態字段時的輔助調用，再比如 BenchmarkDotNet 也是支持 AOT 化的，也就是性能測試上面的支持。我們可以只使用 --runtimes nativeaot7.0 nativeaot8.0，而不使用 --runtimes net7.0 net8.0，如下代碼​​​​​​​</p><pre><code><span><em>// dotnet run -c Release -f net7.0 --filter "*" --runtimes nativeaot7.0 nativeaot8.0</em></span></code><code><span><span style="color:#ca7d37">using</span> BenchmarkDotNet.Attributes;</span></code><code><span><span style="color:#ca7d37">using</span> BenchmarkDotNet.Running;</span></code><code><span>BenchmarkSwitcher.FromAssembly(<span style="color:#ca7d37">typeof</span>(Tests).Assembly).Run(args);</span></code><code><span>[<span style="color:#afafaf">HideColumns(<span>"Error"</span>, <span>"StdDev"</span>, <span>"Median"</span>, <span>"RatioSD"</span>)</span>]</span></code><code><span><span style="color:#ca7d37">public</span><span style="color:#ca7d37">class</span><span style="color:#dd1144">Tests</span></span></code><code><span>{</span></code><code><span><span style="color:#ca7d37">private</span><span style="color:#ca7d37">static</span><span style="color:#ca7d37">readonly</span><span style="color:#ca7d37">int</span> s_configValue = <span style="color:#0e9ce5">42</span>;</span></code><code><span>    [<span style="color:#afafaf">Benchmark</span>]</span></code><code><span><span><span style="color:#ca7d37">public</span><span style="color:#ca7d37">int</span><span style="color:#dd1144">GetConfigValue</span>()</span> =&gt; s_configValue;</span></code><code><span>}</span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">上面代碼可以通過如下 AOT 化運行</p><pre><code><span><span style="color:#ca7d37">dotnet</span><span style="color:#ca7d37">run</span><span style="color:#ca7d37">-c</span><span style="color:#ca7d37">Release</span><span style="color:#ca7d37">-f</span><span style="color:#ca7d37">net7</span><span>.0</span><span style="color:#ca7d37">--filter</span> "*" <span style="color:#ca7d37">--runtimes</span><span style="color:#ca7d37">nativeaot7</span><span>.0</span><span style="color:#ca7d37">nativeaot8</span><span>.0</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">BenchmarkDotNet 輸出如下</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:system-ui,-apple-system,BlinkMacSystemFont,&quot;Helvetica Neue&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei UI&quot;,&quot;Microsoft YaHei&quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:676.989px; word-spacing:0px"><tbody><tr><th>Method</th><th>Runtime</th><th>Mean</th><th>Ratio</th></tr></tbody><tbody><tr><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">GetConfigValue</td><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">NativeAOT 7.0</td><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">1.1759 ns</td><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">1.000</td></tr><tr><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">GetConfigValue</td><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">NativeAOT 8.0</td><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">0.0000 ns</td><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">0.000</td></tr></tbody></table><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">可以看到即使是性能測試的 Benchmark，AOT 優化也是不放過的。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">另外還值得一提的地方就是分層，因為 AOT 裏面沒有分層的概念。但是即時編譯也就是不是 AOT 編譯的時候，一個方法從 tier0 提升到 tier1,方法裏面的靜態字段必須被初始化過了。AOT 裏面添加了一個快速路徑檢查字段是否初始化，避免一些不必要的開銷。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">其它的一些改進，比如 AOT 鎖的實現方式。使用了一種混合方式，開始使用輕量級自旋鎖，後面升級到使用 System.Threading.Lock 類型，這個應該會在.NET9.0 裏面釋放出來。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#4a4a4a; margin-left:0px; margin-right:0px"><strong>歡迎關注公眾號 (jianghupt），文章首發地。</strong></p><p><span><img alt="" height="430" src="https://oscimg.oschina.net/oscnet/up-3243ba74c89867eabc4277de83aa83aa7bb.png" width="430" referrerpolicy="no-referrer"></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 09:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5407571/blog/10316035</guid>
            <link>https://my.oschina.net/u/5407571/blog/10316035</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌推遲「最強 AI」Gemini 的發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">The Information 援引知情人士<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theinformation.com%2Farticles%2Fgoogle-postpones-big-ai-launch-as-openai-zooms-ahead" target="_blank">消息稱</a>，谷歌已悄悄地將旨在與 OpenAI 競爭的對話式人工智能 Gemini 的公開亮相推遲到 2024 年 1 月。</span></p><p><span style="color:#000000">谷歌在 2023 年 I/O 大會上首次透露正在開發 Gemini 以作為下一代基礎模型，據稱這是該公司迄今為止創建的最強大的對話式 AI。Gemini 被描述為一個可以處理多種數據的多模態 AI 聊天機器人，能夠根據草圖和書面描述的結合來理解和生成文本、圖像和其他類型的內容。還可以根據用戶的要求總結文本、幫助軟件工程師編寫代碼等。</span></p><p><span style="color:#000000">該公司表示，新模型將展現出「令人印象深刻的多模態能力」，這是之前的任何大模型中都從未出現過的。此外，他們還在開發 API，使得開發人員可以直接將 Gemini 集成到第三方應用程序中。</span></p><p><span style="color:#000000"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-ce616c5439bca81a98416dd64866cdde1d9.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">谷歌原定於本週在美國紐約、華盛頓和加州舉行的發佈會上推出 Gemini，但在他們「發現 AI 無法可靠地處理一些非英語查詢」後。首席執行官 Sundar Pichai 決定取消原定的一系列活動，並推遲 Gemini 的發佈。谷歌希望 Gemini 最終能超越 OpenAI 的 GPT-4 模型，而全球化支持是 Gemini 的主要功能之一。</span></p><p><span style="color:#000000">研究機構 SemiAnalysis 在 8 月份的一篇博文中<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsiliconangle.com%2F2023%2F12%2F03%2Fgoogle-reportedly-postpones-launch-next-gen-chatbot-gemini-early-next-year%2F" target="_blank">表示</a>，Gemini 擁有強大的計算能力，它看起來已經準備好 "將 OpenAI 的模型打得落花流水"。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 08:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269444/google-delays-launch-gemini</guid>
            <link>https://www.oschina.net/news/269444/google-delays-launch-gemini</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[美團 CEO 王興發佈內部信：多項技術崗負責人調動]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>美團 CEO 王興近日發佈內部信，公佈了多項技術崗負責人的調動。</p><p>內部信顯示，由穆榮均、張錦懋牽頭籌備技術委員會下成立技術治理籌備小組。錦懋卸任基礎研發平台負責人，繼續任技術委員會主席並負責技術委員會現有工作；原美團平台技術部負責人韓建換崗擔任基礎研發平台負責人，彙報至王興。原快驢事業部產品和運營及技術負責人司天歌換崗擔任美團平台技術部負責人，彙報至美團平台負責人李樹斌。</p><hr><p>以下為全文：</p><p>為更好的實現「幫大家吃得更好，生活更好」的使命，落實「零售+科技」戰略，一方面需要進一步提升科技支撐零售各業務的效能，助力各團隊和合作夥伴卓越運營，提升客戶體驗；另一方面需要進一步加強自動車、無人機、AI 特別是大模型技術等領域的研發投入，在公司豐富的零售業務場景中積極探索新應用、新體驗。經公司研究決定：</p><p>1、在技術委員會下成立技術治理籌備小組，由榮均、錦懋牽頭籌備。錦懋卸任基礎研發平台負責人，繼續任技術委員會主席並負責技術委員會現有工作，彙報至王興。技術治理籌備小組的目標是經過一段時間的籌備，明確後續公司技術治理的範圍、目標、原則、組織保障和運作機制等，在公司堅定的決心、長期的耐心支持下，以循序漸進的節奏、穩紮穩打的方式，機制性的長期推進公司技術治理工作。</p><p>2、原美團平台技術部負責人韓建換崗擔任基礎研發平台負責人，彙報至王興。</p><p>3、原快驢事業部產品和運營及技術負責人司天歌換崗擔任美團平台技術部負責人，彙報至美團平台負責人李樹斌。</p><p>過去幾年，公司持續建設領導梯隊，提升組織能力，鼓勵、支持廣大同學在前線和後線、區域和總部之間，不同職能、不同業務之間換崗，實現「Z 字型」發展，同時也在不同的角度為公司發展創造價值。期待錦懋、韓建、天歌在新的崗位上為公司長期發展貢獻更大力量！</p><p>個人介紹：</p><p>張錦懋，2014 年 7 月加入公司，在公司多次換崗鍛鍊發展，歷任技術工程部、美團平台及酒旅事業羣/技術研發部、用戶平台/算法與數據研發部、用戶平台/大數據與算法部、基礎研發平台負責人。錦懋擔任多年技術委員會主席，具備優秀的技術判斷、架構能力，對公司技術棧有全面深入的理解，在深潛、敢想、學習並好奇方面表現出色，相信未來能站在公司更高的層面貢獻更大價值，幫助公司在技術治理工作上往前邁進。</p><p>韓建，2015 年 10 月加入公司，在公司多次換崗鍛鍊發展，歷任外賣事業部/技術部、外賣事業部、到家研發平台、美團平台技術部負責人。韓建兼具業務和平台技術團隊管理經驗，技術視野廣闊，具備主人翁精神，在力求正確、招聘並發展最佳人才方面有優秀的展現，相信在新崗位上能夠更好支撐全公司的公共技術平台和服務。</p><p>司天歌，2016 年 12 月加入公司，在公司多次換崗鍛鍊發展，歷任美團 App 技術部負責人、快驢技術部負責人、快驢產品與運營部負責人。天歌兼具平台和業務技術視角，具備主人翁精神，學習並好奇，極度關注客戶並深潛，相信能在新崗位上更好的建設美團 App 技術基建，支撐各業務發展。</p><p>以上組織調整與任命自本公告發布之日起生效。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 07:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269428</guid>
            <link>https://www.oschina.net/news/269428</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Mozilla 為 Firefox 發佈 .deb 包，僅限開發者版和 Beta 版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.omgubuntu.co.uk%2F2023%2F12%2Fmozilla-firefox-beta-developer-edition-debs" target="_blank">根據 Mozilla 官方博客的公告</a></u>，Firefox 已針對開發者版和 Beta 版提供了 .deb 包。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-18def88ae61fbb45ba2844ceb061858ff05.png" referrerpolicy="no-referrer"></p></blockquote><p>Mozilla 介紹稱，Firefox<code>.deb</code>軟件包具有多種優勢：</p><ul><li><p>因為 Mozilla 基於編譯器進行了高級優化，所以 Firefox<code>.deb</code>具有更好的性能</p></li><li><p>及時收到最新的更新，因為&nbsp;<code>.deb</code>&nbsp;已集成到 Firefox 的發佈流程中</p></li><li><p>經過增強的二進制文件，並在編譯期間啓用所有安全 flag</p></li><li><p>升級包後可以繼續瀏覽，這意味着用戶可以在方便時重新啓動 Firefox 以獲取最新版本</p></li></ul><p>要設置 APT 倉庫並安裝 Firefox&nbsp;<code>.deb</code>&nbsp;軟件包，只需執行以下步驟：</p><pre><code># Create a directory to store APT repository keys if it doesn't exist:
sudo install -d -m 0755 /etc/apt/keyrings

# Import the Mozilla APT repository signing key:
wget -q https://packages.mozilla.org/apt/repo-signing-key.gpg -O- | sudo tee /etc/apt/keyrings/packages.mozilla.org.asc &gt; /dev/null

# The fingerprint should be 35BAA0B33E9EB396F59CA838C0BA5CE6DC6315A3
gpg -n -q --import --import-options import-show /etc/apt/keyrings/packages.mozilla.org.asc | awk '/pub/{getline; gsub(/^ +| +$/,""); print "\n"$0"\n"}'

# Next, add the Mozilla APT repository to your sources list:
echo "deb [signed-by=/etc/apt/keyrings/packages.mozilla.org.asc] https://packages.mozilla.org/apt mozilla main" | sudo tee -a /etc/apt/sources.list.d/mozilla.list &gt; /dev/null

# Update your package list and install the Firefox .deb package:</code></pre><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhacks.mozilla.org%2F2023%2F11%2Ffirefox-developer-edition-and-beta-try-out-mozillas-deb-package%2F" target="_blank">點此查看詳情</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 07:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269427/firefox-beta-developer-edition-debs</guid>
            <link>https://www.oschina.net/news/269427/firefox-beta-developer-edition-debs</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[「億萬富豪找回丟失 25 年兒子」，格靈深瞳自研人臉對比算法立大功]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，「億萬富豪找回丟失 25 年兒子」相關話題引發全網關注。</p><p>25 年前，河北邢台幾個月大的男嬰解清帥被人偷走，其父親解克鋒懸賞百萬尋子。12 月 1 日，在警方的幫助下，解克鋒與失散 25 年的兒子解清帥在老家河北邢台相認。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0baa62ab6072765882de6ec6a94acec110d.png" referrerpolicy="no-referrer"></p><p>據介紹，此番尋子成功源於河北邯鄲一名男孩人臉識別比對成功。12 月 3 日，人工智能科技公司「北京格靈深瞳信息技術股份有限公司」發佈微博稱，此次解克鋒尋子成功背後的人臉比對算法正是出自該公司。</p><p>格靈深瞳在微博寫道：「2023 年 11 月，河北‘億萬富豪’解克鋒在警方的幫助下，找到了失散 25 年的兒子解清帥，至此結束了歷時 25 年的漫長尋親路。近日，在公安人員的見證下，一家人得以相認重聚。親人團聚的背後，是科技的力量在發揮作用，格靈深瞳自主研發的‘跨年齡同親緣人臉比對算法’功不可沒。」</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-708b52b8691e3e86fa6d1ff008f68ebb868.png" referrerpolicy="no-referrer"></p><p>該公司在視頻中解釋稱，「大部分被拐兒童都是在小時候就與親人失散，隨着歲月流逝，其相貌早已發生了翻天覆地的變化，這給警方的排查帶來很大的困難。基於遺傳關係，親屬之間的人臉特徵相似性會相對較高，利用這一規律，格靈深瞳的‘<strong>跨年齡同親緣人臉比對算法</strong>’會篩選出相關性較高的疑似者，進行賦分排名，大幅度提升尋親的整個效率。」</p><p>「這次幫助解克鋒尋找兒子，我們直接用他們夫妻倆和大兒子的照片進行人像比對，結果在排位前五中就找到了解清帥。」格靈深瞳公司還提到，「解清帥是近半年來，格靈深瞳幫助警方找到的第 4 個孩子。」</p><p>據公開資料，格靈深瞳是一家專注於計算機視覺和人工智能的公司，公司自成立以來，一直致力於研發具有自主知識產權的人工智能技術，為各行業提供智能化升級改造方案。目前，格靈深瞳已經成功應用於安防、金融、交通、零售等領域。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 06:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269420</guid>
            <link>https://www.oschina.net/news/269420</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Kyuubi 發起人燕青成為 Apache Incubator PMC 成員]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span>網易杭州研究院、網易數帆大數據專家<span>燕青</span>再添新頭銜，這一次，是 Apache Incubator PMC&nbsp;成員。</span></p><p><span>近日，Apache Incubator PMC（Apache 軟件基金會孵化器項目管理委員會，簡稱 IPMC）宣佈，接納<span style="--darkreader-inline-color:#3396ff; color:#0052ff"><strong><span style="--darkreader-inline-color:#3396ff; color:#0052ff">燕青（Kent Yao）</span></strong></span>為 Apache Incubator PMC 成員，參與對是否接納項目進入 Apache 基金會孵化的表決。</span></p><p><span>Apache 軟件基金會是全球頂尖的開源基金會，是超過 350 個開源項目和計劃的全志願開發者、管理者和孵化者。此次燕青通過投票成為 Apache Incubator PMC 成員，這意味着頂級社區對這位<span style="--darkreader-inline-color:#3396ff; color:#0052ff"><strong>網易開源先鋒</strong></span>的認可，也證明瞭網易杭研、網易數帆團隊推進開源實踐的成果和<span style="--darkreader-inline-color:#3396ff; color:#0052ff"><strong>貫徹開源戰略</strong></span>的決心。</span></p><p><span>在此之前，<span>燕青</span>在開源社區的角色，是 Apache Kyuubi PMC 主席 &amp; VP、Apache Spark 和 Apache Submarine 兩個項目 Committer，並曾因其在 Spark 社區的傑出貢獻被評為國內唯一的 Databricks 燈塔。</span></p><p><img height="276" src="https://oscimg.oschina.net/oscnet/up-1b6248e9a1e2e3a4c8abb24f22e8891821f.png" width="674" referrerpolicy="no-referrer"></p><p><span><span>燕青主要開源節點：</span></span></p><ul><li>2020 年 11 月，成為 Apache Submarine Committer</li><li>2021 年 02 月，成為 Apache Spark Committer</li><li>2021 年 06 月，將 NetEase/Kyuubi 捐贈給 Apache Software Foundation 孵化器進行孵化</li><li>2021 年 08 月，入選 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.databricks.com%2Fdiscover%2Fbeacons" rel="nofollow" target="_blank">Databricks Beacons Program</a></li><li>2021 年 10 月，獲得網易技術獎（NetEase Technology Award）之開源貢獻獎、自研開源獎以及共享共建獎</li><li>2022 年 02 月，創建的 Apache Kyuubi 項目入圍中國科協 2021 「科創中國」開源創新榜</li><li>2022 年 05 月，創建的 Apache Kyuubi 加入中國信息通信研究院可信開源社區共同體</li><li>2022 年 09 月，創建的 Apache Kyuubi 獲評中國信息通信研究院、中國通信標準化協會 2022 OSCAR 開源產業大會尖峯開源項目。</li><li>2022 年 06 月，獲得美國計算機協會 The 2022 ACM SIGMOD Systems Award</li><li>2022 年 10 月，網易技術獎（NetEase Technology Award）之最佳技術評委獎</li><li>2022 年 12 月，Apache Kyuubi 項目成為 Top-level Project， 擔任 PMC Chair/Vice President</li><li>2023 年 06 月，創建的 Apache Kyuubi 獲中央網信辦信息化發展局「2022 年中國開源創新大賽」二等獎</li><li>2023 年 09 月，中國信通院 2023 OSCAR 尖峯開源人物</li><li>2023 年 10 月，AI Code 訓練營 - CodeMaker/Copilot 優秀案例</li><li>2023 年 10 月，獲得網易技術獎（NetEase Technology Award）之社區貢獻獎</li><li>2023 年 11 月，成為 Apache Incubator PMC 成員</li></ul><p><span><strong><span>鑄就 SQL 網關標準，杭研技術成就數智新基</span></strong></span></p><p><span><span>燕青</span>從 2015 年第一次接觸開源，持續貢獻 Apache Spark 項目至今已<span>&nbsp;</span><strong><span style="--darkreader-inline-color:#3396ff; color:#0052ff">8 年</span></strong>，並圍繞 Apache Spark 生態構建各類個人、公司及基金會開源項目。他發起的 Kyuubi 項目，已在 Apache 基金會孵化器成功畢業為頂級項目。</span></p><p><span>Kyuubi 起步於 Spark 生態，初心是為企業級數據湖探索提供標準化的接口。而隨着 Lakehouse 和雲原生成為現代數據棧兩大核心主題，這個項目已迅速完成對 Flink、Trino、Doris 等主流計算引擎的支持，發展成為了<span>&nbsp;</span></span><span style="--darkreader-inline-color:#3396ff; color:#0052ff"><strong>Serverless SQL on Lakehouse 的事實標準</strong></span><span>。</span></p><p style="--darkreader-inline-color:rgba(216, 212, 207, 0.6); color:rgba(232, 230, 227, 0.6); margin-left:0px; margin-right:0px; text-align:justify"><span>在數智化需求強勁並倒逼技術變革的今天，Kyuubi 進入了多家頭部公有云廠商的產品路線圖，成為了中國移動、攜程、丁香園、小米、愛奇藝、廣發證券、知乎等全球數百家公司數智創新的選擇。這正是團隊具備卓越的技術洞察與工程實踐能力，併成功凝聚社區力量實現技術價值的體現。</span></p><p><span>對此，<span style="--darkreader-inline-color:#3396ff; color:#0052ff"><strong>開放原子開源基金會 TOC 主席譚中意</strong></span>曾有評價：</span></p><p style="margin-left:0; margin-right:0"><span>「Kyuubi 項目的立意很好，<strong><span style="--darkreader-inline-color:#3396ff; color:#0052ff">選中的技術痛點非常精準</span></strong>。現在又通過了 Apache 孵化畢業的考驗，IP 問題得到很好的驗證，社區健康和持久性也得到了很好的確認。」</span></p><p style="margin-left:0; margin-right:0"><span><strong><span>堅持社區驅動，杭研傳遞開源精神</span></strong></span></p><p style="--darkreader-inline-color:rgba(216, 212, 207, 0.6); color:rgba(232, 230, 227, 0.6); margin-left:0px; margin-right:0px; text-align:justify"><span>放棄控制權，捐贈給基金會，這是網易副總裁、網易杭州研究院執行院長、網易數帆總經理汪源在 2021 年對杭研旗下開源項目發展明確提出的一個基本策略，蘊含着對技術價值與開源本質的尊重。</span></p><p style="--darkreader-inline-color:rgba(216, 212, 207, 0.6); color:rgba(232, 230, 227, 0.6); margin-left:0px; margin-right:0px; text-align:justify"><span>而 Apache Kyuubi 從孵化到畢業的經歷，使得<span>燕青</span>更加深刻地體會到了<span style="--darkreader-inline-color:#3396ff; color:#0052ff"><strong>Apache 之道（Apache Way）</strong></span>的價值，以及「Community over Code（社區勝於代碼）」的內涵。正是社區驅動的選擇，成就了 Kyuubi 在開放大數據架構中的生命力。</span></p><p><span>在公司開源戰略的鼓勵下，<span>燕青</span>在網易內部也積極推動同事參與開源，既倡導推進開源辦公室（OSPO）成立，在集團內部推廣開源經驗，也加強生態聯動，積極參與外部社區共建。</span></p><p><span>目前，<span>燕青</span>所在團隊成員已廣泛參與開源項目貢獻，覆蓋了 Apache Spark, Apache Hadoop, Apache Kyuubi, Apache Hive, Apache Iceberg, Apache Impala, Apache Kudu, Apache Ranger, Apache Zeppelin, Apache Submarine, Apache Celeborn (Incubating), Apache Toree (Incubating), Alluxio, ClickHouse, Gluten 等<span style="--darkreader-inline-color:#3396ff; color:#0052ff"><strong>數十個</strong></span>大數據生態項目。</span></p><p><span>連同燕青在內，團隊成員在多個開源社區擔任了關鍵角色，其中包括了<span style="--darkreader-inline-color:#3396ff; color:#0052ff"><strong>四位 Apache Kyuubi PMC 成員、兩位 Apache Spark Committer、一位 Apache Celeborn (Incubating) &nbsp;PPMC 成員、兩位 Gluten Committer</strong></span>。這也使得杭研成為國內<span style="--darkreader-inline-color:#3396ff; color:#0052ff"><strong>唯一一個擁有兩位 Spark Committer 的團隊</strong></span>。此外，Apache Celeborn (Incubating) 是阿里雲團隊發起的項目，在該社區擔任 PPMC 成員，也踐行了 Apache 孵化經驗與精神的傳承。</span></p><p><span>開源不輟，薪火相傳。對於網易杭研而言，開源是一以貫之的事業，Apache Incubator PMC 也是弘揚技術價值、推動技術普惠的一個新起點。</span></p><div>
  &nbsp; 
</div></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 06:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4565392/blog/10315637</guid>
            <link>https://my.oschina.net/u/4565392/blog/10315637</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[周熱點 | 龍芯宣佈兼容 IE 的龍芯瀏覽器、發佈龍芯 3A6000 桌面處理器；滴滴故障罪魁禍首是底層軟件 or「降本增笑」......]]>
            </title>
            <description>
                <![CDATA[回顧一週熱門資訊。2023.11.28-2023.12.03]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 06:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;tempkey=MTI0Nl9CSzNacnF3Rmg0aExsMXZ2WXBvSXc4WVVnQXlORDZrMDUzSEFNeHIyNjZTMi1PNnhuMTFFejl6Q1FkczJzRFp3cG1oLThfRjZnalp1NGtxZDZzYWdxRmhZanNLemQ4aWVCSzV6NWNNa05OYnpoMHhRZXNaNjB3R1dYRlZuZzI1U1RzeWdoZG1qWkFzZ0JwYkhta01ESTFudm4tclJidXhJUnVzQVVnfn4%3D&#38;chksm=880c4c94bf7bc582929bea57b7c2d9f8225ada40770176c0d8b2cd7326e8191d87cab94f3bc1&#38;token=723426295&#38;lang=zh_CN#rd</guid>
            <link>https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;tempkey=MTI0Nl9CSzNacnF3Rmg0aExsMXZ2WXBvSXc4WVVnQXlORDZrMDUzSEFNeHIyNjZTMi1PNnhuMTFFejl6Q1FkczJzRFp3cG1oLThfRjZnalp1NGtxZDZzYWdxRmhZanNLemQ4aWVCSzV6NWNNa05OYnpoMHhRZXNaNjB3R1dYRlZuZzI1U1RzeWdoZG1qWkFzZ0JwYkhta01ESTFudm4tclJidXhJUnVzQVVnfn4%3D&#38;chksm=880c4c94bf7bc582929bea57b7c2d9f8225ada40770176c0d8b2cd7326e8191d87cab94f3bc1&#38;token=723426295&#38;lang=zh_CN#rd</link>
        </item>
        <item>
            <title>
                <![CDATA[未來軟件行業的發展趨勢]]>
            </title>
            <description>
                <![CDATA[<h1 class="header article-title"><a href="https://www.oschina.net/question/4855753_2331437">高手問答第 310 期 —— 未來軟件行業的發展趨勢</a><div class="ui red label horizontal" data-tooltip="置頂">頂</div></h1><div class="extra ui horizontal list meta-wrap"><div class="item"><a href="https://my.oschina.net/u/4855753" class="__user"><span>OSC 噠噠</span></a><span class="org-label org-label--simple primary" data-tooltip="認證官方賬號"><i class="oicon oicon-org"></i></span> 發佈於 11/28 14:26
                    </div><div class="item">閲讀 2K+</div><div class="item collect-btn " data-id="2331437" data-user-id="4855753" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i> 收藏 <span data-collect-count="" data-id="2331437" data-obj-type="2">0</span></div><div class="item comment-count"><a href="https://www.oschina.net/question/4855753_2331437#comments" class="normal"><i class="comment outline icon"></i> 答案 <span data-article-reply-count="">15</span></a></div></div><div class="tags"><a class="ui horizontal label" href="https://www.oschina.net/question/topic/masteronline" target="_blank"><img src="https://static.oschina.net/uploads/logo/masteronline_9WTeU.png" referrerpolicy="no-referrer">高手問答</a></div><div class="content" id="articleContent"><p><span><span><span><span>今天的世界是運行在軟件之上的。偉大的軟件不是一朝一夕發明出來的，而是人類文明長期積累的結果。可以</span></span><span><span>説</span></span><span><span>，軟件文明就是人類文明在電氣化時代的延續。那麼軟件發展史上有哪些關鍵事件和不為人知的故事呢？</span></span></span></span></p><p><strong><span><span><span><span>OSCHINA 本期高手問答（11 月 29 日-12 月 5 日）我們一起探討「軟件發展史上那些不為人知的故事」，做客高手問答的嘉賓是新書《軟件簡史》的作者<a href="https://my.oschina.net/u/6992678" rel="nofollow">張銀奎</a>老師。</span></span></span></span></strong></p><p><span style="background-color:#ffffff; color:#000000">可討論的問題包括但不限於：</span></p><ul><li><span><span><span><span>世界上第一個計算機程序是怎麼誕生的？</span></span></span></span></li><li><span><span><span><span>兩位現代計算機之父圖靈與馮·諾依曼有哪些交集和故事？</span></span></span></span></li><li><span><span><span><span>古老的提花織布機與計算機之間有什麼淵源？</span></span></span></span></li><li><span><span><span><span>在 ENIAC 出現之前，還有更早的計算機嗎？</span></span></span></span></li><li><span><span><span><span>最早的內存採用的是什麼技術？</span></span></span></span></li></ul><p><span><span><span><span>有其他相關的問題，也歡迎提問。</span></span></span></span></p><hr><h2>嘉賓介紹</h2><p><span><span><strong><span><span><strong>張銀奎</strong></span></span></strong><span><span>&nbsp;，國內知名的調試技術專家。畢業於上海交通大學信息與控制工程系，長期從事軟件開發和研究工作，曾在英特爾工作 13 年，對 IA-32 架構、操作系統內核、驅動程序，尤其是對軟件調試有較深入的研究。著有暢銷書《軟件調試》《格蠹彙編》等，格蠹科技（nanocode.cn）創始人，高端調試網站（advdbg.org）創建者。翻譯（合譯）作品有《二十一世紀機器人》《觀止——微軟創建 NT 和未來的奪命狂奔》《數據挖掘原理》《機器學習》《人工智能：複雜問題求解的結構和策略》等。</span></span></span></span></p><p><span><span><span><span><img alt="" height="334" src="https://oscimg.oschina.net/oscnet/up-6c20792bfc000c6d2385b84b080ce1a071b.png" width="500" referrerpolicy="no-referrer"></span></span></span></span></p><p><span><span><span><span>為鼓勵踴躍提問，我們會在問答結束後從提問者中抽取 3 名幸運會員贈予《</span></span><span><span>軟件簡史</span></span><span><span>》（上下冊）。</span></span></span></span></p><p><span><span><span><span><img alt="" height="328" src="https://oscimg.oschina.net/oscnet/up-4b1d01a7d62014760f9f4ba80aa1440ef55.png" width="250" referrerpolicy="no-referrer"></span></span></span></span></p><p><span><span><span><span>《</span></span><span><span>軟件簡史</span></span><span><span>》天貓有售：</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdetail.tmall.com%2Fitem.htm%3Fid%3D750806496720" rel="nofollow" target="_blank"><span><span>https://detail.tmall.com/item.htm?id=750806496720</span></span></a></span></span></p><p><span style="color:#27ae60">OSChina 高手問答一貫的風格，不歡迎任何與主題無關的討論和噴子。</span></p><p><span><span><span><span>下面歡迎大家向 <a href="https://my.oschina.net/u/6992678" rel="nofollow">張銀奎</a> 老師積極提問，直接回帖提問即可。</span></span></span></span></p></div><div class="poll-wrap"></div><div class="additional-remarks"></div><div class="ui basic center aligned segment action"><div class="ui big buttons"><a class="ui basic button collect-btn hover" data-id="2331437" data-user-id="4855753" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i>收藏 (<span data-collect-count="" data-id="2331437" data-obj-type="2">0</span>)</a><div class="ui basic dropdown share button osc-share dropdown-share" data-tag="share-question"><i class="share icon"></i><span>分享</span><div class="menu"><a class="item" data-platform="weibo" data-value="weibo"><i class="weibo icon"></i>微博</a><a class="item" data-platform="qq" data-value="qq"><i class="qq icon"></i>QQ</a><a class="item" data-platform="wechat" data-value="wechat"><i class="weixin icon"></i>微信</a></div></div></div><div class="ui basic segment"><a class="ban" ban-report="" data-id="2331437" data-obj-type="2" data-url="https://www.oschina.net/question/4855753_2331437"><i class="flag red icon"></i>舉報</a></div></div>
            ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 05:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/question/4855753_2331437</guid>
            <link>https://www.oschina.net/question/4855753_2331437</link>
        </item>
        <item>
            <title>
                <![CDATA[What's new in Pika v3.5.2]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Pika 社區近期發佈了備受期待的 v3.5.2 版本 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Freleases%2Ftag%2Fv3.5.2-alpha" target="_blank">https://github.com/OpenAtomFoundation/pika/releases/tag/v3.5.2-alpha</a> ，不僅解決了歷史遺留的 Bug 問題，還引入了多項新特性。這些新特性主要包括 Pika 支持 Redis 事務、Pika 上層增加緩存層實現冷熱數據分離、提升讀性能、Codis-Proxy 支持動態修改配置參數等等，無疑將會讓用戶感受到更為高效和穩定的使用體驗。</p><h1>1 新特性</h1><ul><li>Pika 支持 Redis 事務，使得 Pika 的數據夠在一系列命令的執行中保持數據的一致性和可靠性 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2124" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2124</a></li><li>Pika 上層增加緩存層實現冷熱數據分離，提升讀性能 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2171" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2171</a></li><li>Codis-Proxy 支持動態修改配置參數，方便我們做參數調整 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2110" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2110</a></li><li>補全 Go Test 測試用例 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2082" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2082</a></li><li>CI 增加 cache 提升編譯速度 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2093" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2093</a></li><li>增加 redis-copy 流量複製工具 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2060" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2060</a></li></ul><h1>2 bugfix</h1><ul><li>修復 pika 在使用 SETRANGE 命令出現 coredump 的問題 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2141" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2141</a></li><li>修復因刪除 Clearreplicationid 寫進 binlog 導致的全量複製問題 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2135" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2135</a></li><li>修改鎖粒度，提升 pika 寫 binlog 的性能 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2129" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2129</a></li><li>修復複雜數據類型成員變量可能出現數據溢出 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2106" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2106</a></li><li>修復 decr 命令返回值錯誤問題 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2092" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2092</a></li><li>修復 setrange 和 setbit 命令沒有保留原 key 的過期時間的問題 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2095" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2095</a></li></ul><h1>3 下期版本規劃</h1><p>預計再過兩個月左右，我們會在農曆新年前發佈 3.5.3 版本，相關關鍵特性有：</p><ul><li>Pika 通過快慢命令分離提升讀寫性能 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2162" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2162</a></li><li>Redis ACL，在 Pika 中引入用戶概念，進行權限控制 <a href="ttps://github.com/OpenAtomFoundation/pika/pull/2013">ttps://github.com/OpenAtomFoundation/pika/pull/2013</a></li><li>Redis Stream，實現消息隊列 <a href="ttps://github.com/OpenAtomFoundation/pika/pull/1955">ttps://github.com/OpenAtomFoundation/pika/pull/1955</a></li><li>Pika 特有命令 compactrange，對指定範圍內的 key 進行 compact，以解決大 key 刪除時讀放大的問題 <a href="ttps://github.com/OpenAtomFoundation/pika/pull/2163">ttps://github.com/OpenAtomFoundation/pika/pull/2163</a></li><li>支持 lastsave 指令 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenAtomFoundation%2Fpika%2Fpull%2F2167" target="_blank">https://github.com/OpenAtomFoundation/pika/pull/2167</a></li></ul><h1>4 致謝</h1><p>向社區的貢獻者們致謝。</p><p>感謝大家對 Pika 開源公眾號的關注 ，Pika 3.5 版本重大特性及使用規範我們會在稍後的文章中進行介紹，我們下期再見～</p><p><img src="https://oscimg.oschina.net/oscnet/up-f677324a0514b825ee87bd8ebb692130955.png" alt="" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 05:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/dubbogo/blog/10315913</guid>
            <link>https://my.oschina.net/dubbogo/blog/10315913</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[深圳 2024 年新規：網絡平台不得默認勾選自動續費]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>「i 深圳」微信公眾號昨日<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FmanhYbvPiA_3iYqz1w2Y1Q" target="_blank">報道</a></u>，<strong>《深圳經濟特區消費者權益保護條例》經市人大常委會會議表決通過，並將於明年 1 月 1 日起正式實施</strong>，針對大數據殺熟、誘導式消費、預付款「跑路」等消費領域的一些突出問題，制定了有針對性的規範性制度和措施，以更好保護消費者的合法益權，維護社會經濟秩序，促進社會主義市場經濟健康發展。</p><p>針對誘導和欺騙老年人購買保健品的問題，《條例》專門規定，經營者通過上門推銷、會議營銷、集中授課、健康講座、專家義診、免費檢查、免費體驗、免費或低價旅遊等方式向 60 週歲以上的老年消費者推銷保健產品或者聲稱具有保健功能產品的，老年消費者有權自收到產品之日起 7 日內退貨，且無需説明理由。</p><p>此次立法還強化對未成年人的保護，規定經營者不得向未成年人提供危害未成年人身心健康的商品或服務，不得刊登、播放、張貼或散發含有危害未成年人身心健康內容的廣告。</p><p>針對網絡購物的商品評價，《條例》規定，網絡交易經營者不得在展示商品或者服務的評價時採用誤導性方式，包括將好評前置、差評後置，沒有法定理由刪除或者隱匿評價，未顯著區分不同商品或者服務的評價等。網絡經營者不得虛構點擊量、播放量、關注度等流量數據，不得虛構點贊、打賞等交易互動數據。</p><p>針對自動續費問題，<strong>《條例》要求採取自動展期、自動續費等方式提供服務的網絡交易經營者徵得消費者同意，不得默認勾選、強制捆綁開通</strong>；在消費者開通服務前，要以顯著方式、清晰易懂的語言向消費者告知服務的內容，扣費的金額和方式等信息；在服務期間，要為消費者提供簡便的隨時取消或者變更服務的途徑；在自動展期、自動續費等日期前 5 日，要以電話、短信、即時通訊工具、電子郵件、消息推送等有效途徑將服務內容、扣費金額等事項告知消費者。</p><p>針對盲盒信息不透明、誇大宣傳等問題，《條例》要求盲盒等隨機銷售經營者以顯著方式公示抽取規則、商品或者服務分佈、提供數量、抽取概率等關鍵信息。經營者實際市場投放應當與公示信息一致，不得篡改抽取概率，改變抽取結果。鼓勵隨機銷售經營者通過建立保底機制等方式，維護消費者合法權益。</p><p>針對預付式消費存在的問題，《條例》結合深圳市實際，要求加強預收款合同管理，明確經營者應當與消費者約定預收款合同的具體事項，沒有約定或者約定不明則作有利於消費者的解釋。要求經營者在終止經營、歇業或者變更直接提供商品或服務的經營場所前十五日發佈告示，並以電話、短信等有效途徑告知消費者，否則將受到處罰。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 04:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269387</guid>
            <link>https://www.oschina.net/news/269387</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 承諾從 Altman 投資的初創公司購買 AI 芯片]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">美國《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wired.com%2Fstory%2Fopenai-buy-ai-chips-startup-sam-altman%2F" target="_blank">連線</a>》雜誌消息稱，OpenAI 公司在 2019 年與芯片開發商 Rain AI 簽署了一份意向書，承諾將在該初創公司的芯片上市後將斥資 5100 萬美元進行購買。</span></p><p><span style="color:#000000">而這家初創公司的特別之處在於，OpenAI 的首席執行官 Sam Altman 個人對其進行了投資，且投資額已超過 1000 萬美元。早在 2018 年，Altman 就領投了 Rain AI 的一次種子輪融資。</span></p><p><span style="color:#000000">Rain AI 的總部與 OpenAI 舊金山總部之間的距離不到一英里。該公司目前正在研發一種 NPU 芯片，旨在「複製」人腦的特徵。投資者文件稱，Rain AI 最早可能於明年 10 月向客戶提供第一批 AI 芯片。</span></p><p><span style="color:#000000">對此，OpenAI 和 Rain 拒絕置評。</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-95b0cadcf31fb23a4fe5828c78ac8ff1139.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">OpenAI 與 Rain 的意向書展示了 Altman 的個人投資網絡與他 OpenAI 首席執行官職責之間的關聯。此前，領導創業公司孵化器 Y Combinator 的職位幫助 Altman 成為了硅谷最著名的交易撮合者之一；他投資了數十家創業公司，並充當創業者和全球最大公司之間的中間人。</span></p><p><span style="color:#000000">與 Rain 的交易也凸顯了 OpenAI 不惜花費巨資來確保支撐 AI 先驅項目所需的芯片供應。Altman 曾公開抱怨 AI 芯片供應 "非常緊張"，成本 "令人瞠目"。根據一篇關於他與開發者舉行的閉門會議的博文，Altman 表示，AI 的發展速度可能取決於新的芯片設計和供應鏈。</span></p><p><span style="color:#000000">Rain AI 今年早些時候曾向潛在投資者透露，預計最快本月即可「流片」。但據報道，美國政府一個負責監管國家安全風險投資的跨部門機構要求沙特阿拉伯下屬基金 Prosperity7 Ventures 出售其在 Rain AI 的股份，該初創公司最近也對領導層和投資者進行了改組。2022 年初，Rain 宣佈由該基金牽頭籌集 2500 萬美元資金。</span></p><p><span style="color:#000000">而該基金被迫撤資的情況也可能會增加 Rain 將新型芯片技術推向市場的挑戰，並有可能推遲 OpenAI 兌現其 5100 萬美元預付款訂單的日期。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 03:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269384/openai-buy-ai-chips-startup-sam-altma</guid>
            <link>https://www.oschina.net/news/269384/openai-buy-ai-chips-startup-sam-altma</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Kotlin 中文開發者大會 2023]]>
            </title>
            <description>
                <![CDATA[Kotlin 中文開發者大會 2023]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 03:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/event/2331466</guid>
            <link>https://www.oschina.net/event/2331466</link>
        </item>
        <item>
            <title>
                <![CDATA[Node.js v18.19.0 (LTS) 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Node.js v18.19.0 已發佈，代號 'Hydrogen'。Node v18.19.0 是一個長期支持版本 (LTS)，這意味着它將獲得更長的支持和維護。LTS 版本通常更加穩定和可靠，適合用於生產環境。</p><p><strong>主要變化</strong></p><ul><li><strong>將 npm 升級到 v10</strong></li></ul><p>在 Node.js 20 中經過兩個月的試用後，npm 10 已被向後移植，以便所有發行版都包含受支持的 npm 版本。Node.js v18.19 已將 npm 工具更新到 v10.2.3 版本。</p><ul><li><strong>改進 ESM（ECMAScript 模塊）和自定義鈎子</strong></li><li>引入了新的<code>node:module</code>API：<code>register</code>，用於模塊自定義鈎子的註冊和通信</li></ul><p>Node v18.19.0 還包含了一些與 ESM 相關的變化，如<code>import.meta.resolve</code>方法的取消標記，以及<code>--experimental-default-type</code>flag 用於切換模塊系統的默認設置。</p><p>此外，Node v18.19.0 還包含了對內置測試運行器的許多改進和新增功能，以及其他一些值得注意的變化，<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnodejs.org%2Fen%2Fblog%2Frelease%2Fv18.19.0" target="_blank">詳情查看發佈公告</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 03:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269377/nodejs-v18-19-0-lts</guid>
            <link>https://www.oschina.net/news/269377/nodejs-v18-19-0-lts</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache NetBeans 20.0 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Apache NetBeans 20<span>&nbsp;現</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnetbeans.apache.org%2Ffront%2Fmain%2Fblogs%2Fentry%2Fannounce-apache-netbeans-20-released%2F" target="_blank">已正式發佈</a>。NetBeans 是一個主要面向 Java 的集成開發環境，同時支持 C/C++、PHP、JavaScript 和其他編程語言。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">一些更新內容包括：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Gradle</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>返回所有 loaders 的最高質量&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6371" target="_blank">#6371</a></li><li>將 Gradle Tooling API 更新到 8.4&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6553" target="_blank">#6553</a></li><li>不要在每個項目上都要求代理&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6558" target="_blank">#6558</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fissues%2F6536" target="_blank">#6536</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fissues%2F6537" target="_blank">#6537</a>：避免堆棧溢出，捕獲要下載的丟失工件&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6548" target="_blank">#6548</a></li><li>刪除了一些已失效的 Gradle 設置&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6516" target="_blank">#6516</a></li><li>修復 wrapper.properties 中的 Gradle 版本更改&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6589" target="_blank">#6589</a></li><li>嘗試在退出時關閉 Gradle 守護進程&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6598" target="_blank">#6598</a></li><li>當缺少「run」任務時，對「runSingle」更加友好&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6618" target="_blank">#6618</a></li><li>修復 LSP/Micronaut 測試 + 不要忽略 gradle spi 中的異常&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6673" target="_blank">#6673</a></li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Maven</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>Maven Embedder resolve() 修復&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6344" target="_blank">#6344</a></li><li>Micronaut 的生命週期參與者在 Micronaut 4.x 中更改了 FQN&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6386" target="_blank">#6386</a></li><li>當 pom.xml 包含...時，防止在 Maven 內啓用 NPE 預覽&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6446" target="_blank">#6446</a></li><li>NB 模塊項目嚮導不應使用快照版本&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6483" target="_blank">#6483</a></li><li>UpdateDependencyHint 應該適用於具有默認 Maven 組 id 的插件&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6493" target="_blank">#6493</a></li><li>更新到 maven-indexer 7.0.4 和 lucene 9.8.0 在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6506" target="_blank">#6506</a></li><li>將 maven.embedder 中的 JDOM 庫從版本 1.0 升級到 2.0.6.1&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6478" target="_blank">#6478</a></li><li>在 main action 之前使用依賴項進行構建&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6520" target="_blank">#6520</a></li><li>將捆綁的 Maven 更新到 3.9.5&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6533" target="_blank">#6533</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fissues%2F6525" target="_blank">#6525</a>&nbsp;: maven 執行應該在運行 Maven 之前設置 LegacySupport&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6552" target="_blank">#6552</a></li><li>Priming build 和 reload 改進&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6514" target="_blank">#6514</a></li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Ant</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>修復了 JDK 21 上的「error starting modern compiler」問題&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6436" target="_blank">#6436</a></li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Java</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>升級到 JDK 21 nb-java&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6206" target="_blank">#6206</a></li><li>修改代碼完成以支持 JDK 21 功能&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6253" target="_blank">#6253</a></li><li>在 VS Code 擴展中支持源文件啓動器&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6262" target="_blank">#6262</a></li><li>不要將測試方法標記為未使用&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6277" target="_blank">#6277</a></li><li>添加 nb-javac libwrapper 測試&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6308" target="_blank">#6308</a></li><li>修復：如果前一個參數是 TypeVariable，則不會顯示 Java 完成參數工具提示&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6268" target="_blank">#6268</a></li><li>處理註釋處理器初始化中的錯誤&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6422" target="_blank">#6422</a></li><li>將 nb-javac 更新為 jdk-21u&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6425" target="_blank">#6425</a></li><li>用於加載註釋處理器的類加載器不會從 getResource/getResources 方法返回目錄，而正常的類加載器會返回目錄 - 已修復&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6466" target="_blank">#6466</a></li><li>LPS：SignatureHelp implemented&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6476" target="_blank">#6476</a></li><li>Micronaut：添加缺失的路徑變量參數修復&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6498" target="_blank">#6498</a></li><li>添加對字符串模板的支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6415" target="_blank">#6415</a></li><li>CI：啓用 java.editor.base 測試&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6543" target="_blank">#6543</a></li><li>刪除 <span style="background-color:#ffffff; color:#1f2328">TreeShims mechanism&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6495" target="_blank">#6495</a></li><li>......</li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>PHP</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>PHP：改進了創建 line breakpoint 時的驗證&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6241" target="_blank">#6241</a></li><li>修復了 php 項目測試設置中複選框之間的間隙&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6381" target="_blank">#6381</a></li><li>當 IntroduceSuggestionHint 生成代碼時防止 NPE&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6269" target="_blank">#6269</a></li><li>修復標記為已棄用的鍵入字段不會顯示為已棄用的問題&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fissues%2F6310" target="_blank">#6310</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6321" target="_blank">#6321</a></li><li>如果可能的話，保留現有的使用類型種類（類型、函數、常量）的順序&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fissues%2F6274" target="_blank">#6274</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6322" target="_blank">#6322</a></li><li>修復單行 var doc 字段的代碼自動補全&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fissues%2F6359" target="_blank">#6359</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6364" target="_blank">#6364</a></li><li>PHP：添加了對異常斷點的支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6366" target="_blank">#6366</a></li><li>修復錯誤<code>IncorectNamedArgumentHintError</code>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fissues%2F6432" target="_blank">#6432</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6437" target="_blank">#6437</a></li><li>將「After Use Trait」添加到格式選項&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fissues%2F4685" target="_blank">#4685</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6467" target="_blank">#6467</a></li><li>PHP：修復了 php 代碼補全設置中的元素定位&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6512" target="_blank">#6512</a></li><li>PHP：修復添加異常斷點時異常類的自動完成&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6643" target="_blank">#6643</a></li></ul><p style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>C/C++</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><ul><li>Stabilize CPPLite：丟棄 STDERR&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Fpull%2F6305" target="_blank">#6305</a></li></ul><p><span style="background-color:#ffffff; color:#333333">詳情可查看更新説明：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fnetbeans%2Freleases%2Ftag%2F20" target="_blank">https://github.com/apache/netbeans/releases/tag/20</a></p><p>下載地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnetbeans.apache.org%2Ffront%2Fmain%2Fdownload%2Fnb20%2F" target="_blank">https://netbeans.apache.org/front/main/download/nb20/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 03:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269376/apache-netbeans-20-released</guid>
            <link>https://www.oschina.net/news/269376/apache-netbeans-20-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[社區月報丨 11 月，deepin 推出了很多新東西]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0px; margin-right:0px">內容來源 ：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Findex%2Fzh" target="_blank">deepin 社區</a></p><hr><h1><strong>deepin（深度）社區 11 月總覽</strong></h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>11 月，有</span><span>&nbsp;1084</span><span>位小夥伴加入了 deepin 開源社區大家庭，目前共有論壇夥伴</span><span>148,891</span><span>位</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>11 月 deepin 系統版本共升級</span><span>4</span><span>次，修復 bug 共</span><span>13</span><span>個，功能新增</span><span>19</span><span>個</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>在 11 月，FVP 正式支持 deepin V23 ，deepin V23 成功適配國產顯卡摩爾線程 MTT S80</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>11 月 deepin SIG 組共提交 PR<span>&nbsp;</span></span><span>1828</span><span><span>&nbsp;</span>個 ，提交 Issues<span>&nbsp;</span></span><span>210</span><span>個，個人貢獻 PR</span><span>316 個</span><span>，個人提交 Issues</span><span>16</span><span>個</span></p><h1><strong>社區產品</strong></h1><h2><strong><span>deepin（深度）操作系統</span></strong></h2><p style="color:#333333; margin-left:0; margin-right:0"><strong>11 月 deepin V23&nbsp; 系統前進行了第 4 次內測推送：</strong></p><ul><li><span>11 月 3 日內測推送，功能新增 4 個，新增倉庫 3 個，問題修復 6 個；</span></li><li><span>11 月 10 日內測推送，新增倉庫 6 個，問題修復 8 個；</span></li><li><span>11 月 17 日內測推送，功能及優化功能 4 個，問題修復 1 個；</span></li><li><span>11 月 24 日內測推送，功能新增 1 個，新增倉庫 2 個，問題修復 4 個</span></li></ul><p style="color:#333333; margin-left:0; margin-right:0"><strong><span>FVP 正式支持 deepin V23</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>FVP 是由 ARM 公司開發的，它更準確地模擬了 ARM 的微架構和安全擴展，而且可以支持最新的 ARM 指令集和功能。現在 deepin V23 對 FVP 進行適配，已經可以成功使用 deepin V23 系統運行 FVP 環境，並且在上面模擬 deepin V23。</span></p><p style="color:#333333; margin-left:0; margin-right:0"><strong><span>deepin V23 成功適配摩爾線程 MTT S80</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0"><span>摩爾線程 MTT S80 顯卡，於 2022 年 11 月發佈，搭載了完整的「春曉」芯片核心，內置 4096 個 MUSA 流處理核心、128 個 Tensor 張量核心，在 1.8GHz 的主頻下，能夠提供 14.4TFLOPS 的單精度浮點算力。deepin 面向 MTT S80 的體驗版鏡像已經推出，可以下載試用。MTT S80 顯卡驅動在 deepin V23 Beta2 操作系統上運行穩定，能夠達到主流 Linux 平台顯卡水平。</span></p><h2><strong>SIG 組 11 月進展</strong></h2><ol><li><strong>DDE:&nbsp;</strong></li></ol><ul><li><span>新增&nbsp;dde-shell&nbsp;組件，完善&nbsp;DDE&nbsp;組件，並向內測推送部分與&nbsp;DDE&nbsp;相關的技術預覽更新</span></li></ul><ol><li><strong>DDE-port:&nbsp;</strong></li></ol><ul><li><span>持續完善&nbsp;Arch Linux&nbsp;與&nbsp;openSUSE&nbsp;等發行版的移植工作</span></li></ul><ol><li><strong>deepin-ports:&nbsp;</strong></li></ol><ul><li><span>促進改善&nbsp;RISC-V&nbsp;與&nbsp;Loong&nbsp;架構的支持程度</span></li></ul><ol><li><strong>deepin-sysdev-team:&nbsp;</strong></li></ol><ul><li><span>更新&nbsp;Qt&nbsp;以及其它多批系統核心軟件包版本</span></li></ul><ol><li><strong>deepin-cicd-team:&nbsp;</strong></li></ol><ul><li><span>&nbsp;prow&nbsp;新增&nbsp;topic&nbsp;倉庫相關命令支持，持續完善自動化流水線的智能程度</span></li></ul><ol><li><strong>deepin-shared-libs：</strong></li></ol><ul><li><span>持續降低使用門檻，新增 examples 並添加指導文章"如何結合"deepin-shared-libs"和"ShiroDEB"進行編譯 (OBS-Studio)"</span></li><li><span>加強跨社區合作，開始向 shiroDEB 貢獻構建腳本&amp;bBnary 資源</span></li></ul><p style="color:#333333; margin-left:0; margin-right:0"><span>更多 SIG 動態歡迎關注：</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fplanet.deepin.org%2F" target="_blank"><span>planet.deepin.org</span></a></p><h2><strong>應用商店</strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>應用上新</strong><span>279</span><strong>款</strong><span>：其中，189 款應用上新至 deepin V23，上新的 278 款應用均為 Linux 應用，1 款為瀏覽器擴展程序</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>其中，包括浩辰 CAD（Linux 版）V2023 以及多款城市、主題大賽精美壁紙與主題；</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>應用更新 185 款</strong><span>：其中包含 121 款應用同步在 deepin V23 中進行了更新。更新的應用中，180 款為 Linux 應用，Android 應用 3 款，wine 應用 2 款。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>11 月更新的應用中包括 QQ、中望 CAD、企業微信、有道雲筆記等主流應用。</span></p><h1><strong>deepin 論壇</strong></h1><p style="color:#333333; margin-left:0; margin-right:0"><span>11 月論壇共發佈了</span><strong>9078</strong><span>帖子，</span><span>共發佈主題帖</span><strong>1274</strong><span>個，</span><span>超過</span><strong>1000+</strong><span>新朋友加入到 deepin 論壇。</span></p><p style="color:#333333; margin-left:0; margin-right:0"><strong>當中，最受論壇用戶歡迎的帖子 top5 為：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>1.</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F264232" target="_blank">我對 deepin 的一些建議</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>2.</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F264520" target="_blank">11 月 17 日 deepin V23 Beta 階段性內測更新&nbsp;</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>3.</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F264502" target="_blank">懇請開發人員增加一些默認快捷鍵。</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>4.</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F264236" target="_blank">【新鮮出爐】deepin V23 Beta3 版本規劃</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>5.</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbbs.deepin.org%2Fpost%2F264678" target="_blank">deepin V23 成功適配國產顯卡摩爾線程 MTT S80！</a></p><h1><strong>社區活動</strong></h1><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2F2023-dduc%2F" target="_blank"><strong><span>【第十三屆 DDUC】</span></strong></a></h2><p style="color:#333333; margin-left:0; margin-right:0"><span>2023 年 11 月 18 日，第十三屆深度開發者與用戶大會（DDUC）在北京成功召開。作為 deepin（深度）社區一年一度最盛大的社區活動，DDUC 吸引了來自全球各地的開源愛好者、行業精英與用戶們齊聚一堂，共同探討 deepin（深度）操作系統、AI 等相關技術領域的最新發展和應用前景。</span></p><p style="text-align:center"><img height="652" src="https://oscimg.oschina.net/oscnet/up-373432e3585303dd8857d9fc56fac02a309.png" width="992" referrerpolicy="no-referrer"></p><h2><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2F2023-11-whlug%2F" target="_blank"><span>【11 月 WHLUG】</span></a></strong></h2><p style="color:#333333; margin-left:0; margin-right:0"><span>2023 年 11 月 26 日下午，由&nbsp;deepin（深度）&nbsp;社區主辦的武漢&nbsp;Linux&nbsp;用戶組（WHLUG）沙龍在新青年創客咖啡舉行，沙龍邀請了武漢地區的&nbsp;Linux&nbsp;愛好者，共同探討&nbsp;Linux&nbsp;內核安全架構、軟件包構建方案等話題，現場氣氛熱烈。</span></p><p style="text-align:center"><img height="731" src="https://oscimg.oschina.net/oscnet/up-973f34559c61d7176d995d6a32511015e4e.png" width="991" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0">什麼是 WHLUG：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fwelcome-to-whlug%2F" target="_blank">https://www.deepin.org/zh/welcome-to-whlug/</a></p><p style="color:#333333; margin-left:0; margin-right:0"><span>查看往期 WHLUG：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-whlug%2F" target="_blank">https://www.deepin.org/zh/deepin-whlug/</a></p><h2><strong><span>【無限主題壁紙大賽】</span></strong></h2><p style="color:#333333; margin-left:0; margin-right:0"><span>11 月，由 deepin（深度）社區主辦的題為「無限」的主題壁紙創作大賽已經圓滿落幕，活動共計收到來自百餘位設計師提交的 1087 份參賽作品，總計近 2000 幅壁紙。 活動最終評選出 48 個獲獎作品，包括 3 個原創主題設計獎及 45 個壁紙創作獎。目前大部分獲獎作品已經上架 deepin 應用商店，可以在</span><strong>商店&lt;個性美化&gt;分類中查看並快速下載設置為桌面壁紙</strong><span>。此外，本次 deepin 社區的主題壁紙創作大賽還吸引了全國 16 所院校的師生加入，貢獻了近千份參賽作品。</span></p><p style="text-align:center"><img height="332" src="https://oscimg.oschina.net/oscnet/up-efc0ba8e855b13f2d9f9b94249a5c884b86.png" width="596" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><span>壁紙設計金獎：飛天&nbsp; &nbsp; &nbsp; &nbsp;</span>設計師：木子 leerin</p><h1><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Fzh%2Fdeepin-campus-alliance%2F" target="_blank"><strong>校園聯盟</strong></a></h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>為讓中國更多高校學生走近開源、瞭解開源，同時培養行業人才共建開源社區，deepin 社區於 8 月開啓校園聯盟招募，截至目前已有來自全國各地 126 所高校加入。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>截至 2023 年 11 月，來自全國的校園聯盟同學共組織線下校園活動 19 場，11 月圍繞校園聯盟開展線下活動 8 場，累計參與學生 400+。</span></p><p style="color:#333333; margin-left:0; margin-right:0"><span>其中包括河北師範大學附屬民族學院，吉林城市學院，西南大學，浙江工業大學、安陽學院，東北電力大學等。</span></p><h1><strong>社區鳴謝</strong></h1><p style="color:#333333; margin-left:0; margin-right:0"><strong>【論壇最活躍小夥伴】</strong></p><ul><li><span>阿尼櫻奈奈</span></li><li><span>buyike</span></li><li><span>fax928</span></li></ul><p style="color:#333333; margin-left:0; margin-right:0"><strong>【內測最活躍小夥伴】</strong></p><ul><li><span>hotime</span></li><li><span>yaoying</span></li><li><span>花雨落逝</span></li><li><span>wlly-lz</span>h</li><li><span>劉定</span></li></ul><p style="color:#333333; margin-left:0; margin-right:0"><strong>【PR 貢獻最活躍小夥伴】</strong></p><ul><li><span>xwqlikepsl</span></li><li><span>student-ice</span></li><li><span>TheThreeDog</span></li><li><span>hillwoodroc</span></li><li><span>hotime</span></li><li><span>kt286</span></li><li><span>LLLLSHANG</span></li><li><span>benqin66</span></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:right">內容來源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Findex%2Fzh" target="_blank">deepin 社區</a></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 02:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269367</guid>
            <link>https://www.oschina.net/news/269367</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[進一步優化 deepin（深度）操作系統的續航和性能 —— TLP 電源管理來了！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:start">內容來源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Findex%2Fzh" target="_blank">deepin 社區</a></p><hr><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:start">上一篇關於電源配置優化（<a href="https://www.oschina.net/news/268783" target="_blank">關於 deepin V23 的發熱、續航問題，我們做了電源配置優化</a>）之後，我們一直在探索如何進一步優化 deepin（深度）操作系統的續航和性能表現，今天它來了：</p><p>TLP 是適用於 Linux 的功能豐富的命令行實用程序，無需深入研究技術細節即可節省筆記本電腦電池電量。比如&nbsp;TLP&nbsp;腳本是被動喚醒，可以以較小的開銷完成電源管理相關內容。而且 TLP 文檔支持非常完善，所以可以方便用戶自行調整相關配置。</p><h2><span><strong>工作原理</strong></span></h2><ul><li>TLP 所做的是調整影響功耗的內核設置，內核態的配置文件存儲在 RAM 中，所以並不具備持久性。TLP 將配置存儲在用戶態中，在內核啓動時對其進行配置；</li><li>TLP 處理的大多數內核設置都作為 sysfs 節點導出到用戶空間，即 /sys/ 下的文件。tlp-<span>stat</span>的輸出將顯示路徑；</li><li>TLP 提供兩組獨立的設置，稱為配置文件，一組用於電池（BAT），另一組用於交流操作。這意味着 TLP 在每次電源更改時都必須應用適當的配置文件（可以據此實現 AC BT 切換電源調度狀態）。</li></ul><h2><span><strong>TLP 觸發事件（信號）</strong></span></h2><ul><li><p>充電器插入（交流供電）：應用 AC 配置文件；</p></li><li><p>充電器已拔下（電池供電）：應用 BAT 配置文件；</p></li><li><p>已插入 USB 設備：激活設備的 USB 自動掛起模式（可以在配置文件設置例外或拒絕連接）；</p></li><li><p>系統啓動（boot）：應用於當前電源 AC/BAT 相對應的設置配置文件。應用充電閾值並根據您的個人設置切換藍牙、Wi-Fi 和 WWAN 設備（在默認配置中禁用）；</p></li><li><p>系統關機 (power off)：保存或切換藍牙、Wi-Fi 和 WWAN 設備狀態，並根據你的個人設置禁用 USB 自動掛起（在默認配置中禁用）；</p></li><li><p>系統重啓：相當於關機再啓動；</p></li><li><p>系統掛起到 ACPI 睡眠狀態 S0ix（空閒待機）、S3（掛起到 RAM）或 S4（掛起到磁盤）：保存藍牙、Wi-Fi 和 WWAN 設備狀態，並根據你的個人設置關閉可移動光盤驅動器的電源（在默認配置中禁用）；</p></li><li><p>系統從 ACPI 睡眠狀態 S0ix（空閒待機）、S3（掛起到 RAM）或 S4（掛起到磁盤）恢復：應用於當前電源 AC/BAT 相對應的設置配置文件。恢復充電閾值以及藍牙、Wi-Fi 和 WWAN 設備狀態，具體取決於你的個人設置（在默認配置中禁用）；</p></li><li>LAN、Wi-Fi、WWAN 連接/斷開連接或筆記本電腦插接/未插接：根據你的個人設置啓用或禁用內置藍牙、Wi-Fi 和 WWAN 設備（在默認配置中禁用）。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>除了上述事件之外，TLP 不會對設置進行動態或自適應更改。特別是，TLP 絕不會因 CPU 負載、電池電量或其他原因而調整設置（如果需要實現這一部分，則可以通過添加一個信號的方式來實現）。</span></p><h2><strong>安裝</strong></h2><pre><code>sudo&nbsp;apt install tlp</code></pre><h2><span><strong>使用</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>1、啓動</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">安裝後 TLP 將在系統啓動的時候自動啓動，如果你不想重啓系統，可以使用<span>&nbsp;</span><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span>tlp start&nbsp;</span></em>來啓動&nbsp;TLP，也可以使用此命令來應用更改。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>2、狀態</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff">tlp-<span>stat</span><span>&nbsp;</span>-<span>s</span><span>&nbsp;</span>TLP</span></em><span>&nbsp;</span>是 bash 腳本，所以不存於 daemon 進程。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>3、命令行</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>TLP：</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span>tlp bat</span></em>&nbsp; &nbsp; # 應用電池配置文件並進入手動模式 &nbsp;手動模式意味着對電源的更改將被忽略，直到下一次重新啓動或發出 tlp start 以恢復自動模式。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span>tlp bat&nbsp;</span></em><span>&nbsp;</span>&nbsp; # 應用電池配置文件並進入手動模式 &nbsp;手動模式意味着對電源的更改將被忽略，直到下一次重新啓動或發出 tlp start 以恢復自動模式。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span>tlp ac</span></em>&nbsp; &nbsp; &nbsp;# 應用交流配置文件並進入手動模式。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span>tlp usb</span></em>&nbsp; &nbsp; # 對所有的 ubs 設備應用自動掛起。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span>tlp bayoff</span></em>&nbsp; &nbsp; # 關閉 MediaBay/Ultrabay 中的光驅電源。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff">sudo tlp setcharge [<span>&lt;<span>START_CHARGE_THRESH</span>&gt;</span><span>&nbsp;</span><span>&lt;<span>STOP_CHARGE_THRESH</span>&gt;</span>][BAT0|BAT1|BAT&lt;x&gt;|CMB0|CMB1]&nbsp;</span></em><span>&nbsp;</span>&nbsp; &nbsp;#可以設定對指定電池開始充電百分比和結束充電的百分比，以達到養護電池的目的（如果不帶參數會重置電池管理方案。命令只能暫時更改，如果需要持久化更改需要修改配置文件）。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff">sudo tlp fullcharge [BAT0|BAT1|BAT&lt;x&gt;|<span>CMB0</span>|<span>CMB1</span>]&nbsp;</span></em><span>&nbsp;</span>&nbsp; # 設定電池充滿。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff">tlp</span><span style="color:#0000ff"><span>&nbsp;</span>dis</span><span style="color:#0000ff">kid</span></em>&nbsp; &nbsp; # 顯示已經配置驅動器的磁盤 ID。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">以下部分為 ThinkPad 專屬：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span>tlp chargeonce</span></em><span><em><span style="color:#0000ff"><span>&nbsp;</span>[BAT0|BAT1]&nbsp;</span><span>&nbsp;</span></em>&nbsp; #<span>&nbsp;</span></span>將電池充電至停止充電閾值一次，這個閾值是使用 setcharge 設置的。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span><span>tlp</span><span>&nbsp;</span><span>discharge</span><span>&nbsp;</span><span>[BAT0|BAT1]</span>&nbsp; &nbsp;</span><span>&nbsp;</span></em>&nbsp; # 讓電池在交流電源下完全放電。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span><span>tlp</span><span>&nbsp;</span><span>recalibrate</span><span>&nbsp;</span><span>[BAT0|BAT1]</span>&nbsp; &nbsp;</span><span>&nbsp;</span></em>&nbsp; # 校準電池。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>TLP-RDW</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span style="color:#0000ff"><em>sudo tlp-rdw [</em><span>&nbsp;</span><span>enable</span><span>&nbsp;</span>|<span>&nbsp;</span><span>disable</span><span>&nbsp;</span>]&nbsp;</span><span>&nbsp;</span>&nbsp; &nbsp; # 啓用或關閉無線電管理功能</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff">bluetooth [ on | off | toggle ]</span></em><br><em><span style="color:#0000ff">nfc [ on | off | toggle ]</span></em><br><em><span style="color:#0000ff">wifi [ on | off | toggle ]</span></em><br><em><span style="color:#0000ff">wwan [ on | off | toggle ]</span></em></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">啓用、禁用、切換或檢查內置藍牙、NFC、Wi-Fi 和 WWAN（3G/UMTS、4G/LTE 或 5G）無線電的狀態，如果不帶參數則為當前硬件狀態（硬件需要支持 rfkill）。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>TLP-STAT</strong></p><p><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span>tlp-stat&nbsp;</span></em><span>&nbsp;</span>&nbsp; # 查看 TLP 配置信息，系統信息和內核省電設置以及電池數據。</p><p><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span><span>tlp-stat</span><span>&nbsp;</span><span>[-b /--battery]</span>&nbsp;</span><span>&nbsp;</span></em>&nbsp; &nbsp; # 查看電池信息，部分電池加-v 參數可以查看電壓。</p><p><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span>tlp-stat<span><span>&nbsp;</span>[-c /--config]</span>&nbsp;</span></em><span>&nbsp;</span>&nbsp; &nbsp; &nbsp;# 查看配置信息。</p><p><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span>tlp-stat --cdiff&nbsp;</span><span>&nbsp;</span></em>&nbsp; &nbsp; &nbsp; &nbsp; # 查看默認配置和用戶配置之間的差異。</p><p><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span><span>tlp-stat</span><span>&nbsp;</span><span>[-d /--disk]</span>&nbsp; &nbsp; &nbsp;</span></em><span>&nbsp;</span>&nbsp; &nbsp;# 查看硬盤配置信息。</p><p><em><span style="color:#0000ff"><span>sudo</span><span>&nbsp;</span><span>tlp-stat</span><span>&nbsp;</span><span>[-e/ --pcie]</span>&nbsp;</span><span>&nbsp;</span></em>&nbsp; &nbsp; &nbsp; &nbsp;# 查看 Pcie 配置信息。&nbsp;</p><h2><span><strong>配置</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">TLP 最重要的就是其配置文件，可以説，TLP 是否節電的關鍵。TLP 使用兩個根據電源自動應用的設置配置文件：</p><ul><li>以_AC 結尾的參數在連接交流電源的時候生效</li><li>以_BAT 結尾的參數在使用電池的時候有效</li><li>既不以 &nbsp;_AC &nbsp;結尾也不以 _BAT 結尾的參數適用於這兩個配置文件</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>1、配置文件</strong></p><p>按指定順序從以下文件中讀取設置：</p><ul><li><p><em><span style="color:#0000ff">Intrinsic defaults&nbsp;</span><span>&nbsp;</span></em>&nbsp; &nbsp;# 固有默認值（這個配置為 TLP 自帶，不可被更改）；</p></li><li><p><em><span style="color:#0000ff">/etc/tlp.d/*.conf&nbsp; &nbsp;</span></em><span>&nbsp;</span>&nbsp;# 插入式自定義片段，按詞法（字母順序）順序讀取，不過建議可以使用一般配置命名方法（00_xxxx.conf)；</p></li><li><em><span style="color:#0000ff">/etc/tlp.d/*.conf&nbsp;</span></em><span>&nbsp;</span>&nbsp; &nbsp;# 用戶配置。</li></ul><p>如果多個參數相同，但在同一文件中也存在相同的參數，則最後一個匹配項優先，這也意味着，/etc/tlp.conf 中的參數將覆蓋其他任何內容，因為它是最後讀取的。</p><p>默認的&nbsp;/etc/tlp.conf 中的所有參數都被禁用，刪除前導 # 以激活你的更改。</p><p>/etc/tlp.d/ 目錄中的配置文件由用戶創建：</p><p>* 文件名必須以 .conf 結尾，否則文件將被忽略；</p><p>* 00-template.conf 作為示例提供。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>2、參數默認值</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">配置中有兩種參數，一種是具有默認值的，會在本文檔中説明，並且在&nbsp;/etc/tlp.conf 中有<span>&nbsp;</span><span>Default</span><span>&nbsp;</span>前綴。還有一種沒有默認值的。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>3、參數語法</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">配置文件由參數和註釋行組成。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>4、參數行</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff"><span>PARAMETER</span>=value</span></em></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果 value 包含空格，則需要使用雙引號。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff"><span>key</span>=<span>"111 1111 1111"</span></span></em></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>5、註釋行</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">以#開頭，在 1.6 版本後可以在參數行後接#作為註釋。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>6、禁用功能</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">沒有默認值：使用註釋或者刪除即可。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">有默認值：賦空值即可 eg：<span>key</span>=<span>""</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>7、使用</strong>+=<strong>追加配置</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">和 bash 的環境變量一樣，支持使用+=作為追加配置。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">使用 root 權限編輯配置文件，在保存更改後可以使用重啓，拔插 AC&nbsp;電源或者使用<span>sudo</span><span>&nbsp;</span>tlp start 命令激活配置。</p><h2><span><strong>配置詳解</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong><span>1、基礎操作</span></strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="605" src="https://storage.deepin.org/thread/202311291630377425_1.png" width="936" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>2、音頻</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="303" src="https://storage.deepin.org/thread/202311291630461351_2.png" width="1008" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>3、電池保養</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="302" src="https://storage.deepin.org/thread/202311291630531515_3.png" width="1008" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這些參數用於設置筆記本電腦主/內部電池（BAT0）和輔助電池（BAT1）的充電閾值。啓動充電閾值表示在連接充電器時，電池充電水平低於該值時將開始充電。停止充電閾值表示在充電器連接時，電池充電水平超過該值時將停止充電。這些閾值始終具有較低的可用電池容量，因此默認情況下禁用這些設置，並且必須通過刪除前導 # 來顯式啓用這些設置。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>4、光驅</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="303" src="https://storage.deepin.org/thread/202311291635109757_4.png" width="1008" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>5、硬盤</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="1070" src="https://storage.deepin.org/thread/202311291635428010_5.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">註釋：DISK_IOSCHED 如果使用是 NVME 設備時，最好使用無 IO 調度程序來減少 CPU 開銷（none 和 noop）。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>6、文件系統</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="278" src="https://storage.deepin.org/thread/202311291636283410_6.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>7、圖形顯卡</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="646" src="https://storage.deepin.org/thread/202311291636375285_7.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這些參數允許用戶調整 Intel GPU 和 AMD GPU 在交流電和電池模式下的性能和電源管理行為。在配置這些參數時，建議參考硬件規格和運行 tlp-<span>stat</span>&nbsp;-g&nbsp;查看可用頻率。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>8、kernel</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="185" src="https://storage.deepin.org/thread/202311291637168590_8.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">不建議關閉 watchdog，否則可能導致內核崩潰後無法自動重啓和內核調試。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>9、網絡</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="370" src="https://storage.deepin.org/thread/202311291637243632_9.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這些參數允許用戶配置 Wi-Fi 的電源保存模式和控制 Wake-on-LAN（LAN 喚醒）功能。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>10、平台</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="287" src="https://storage.deepin.org/thread/202311291638073098_10.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>11、處理器</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="695" src="https://storage.deepin.org/thread/202311291638188553_11.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這些參數允許用戶配置 CPU 的性能和功耗特性，包括縮放驅動程序操作模式、調節器、頻率範圍、能耗/性能策略、P 狀態範圍、提升功能以及 HWP 動態提升功能。部分電腦的 BIOS 會幹預 PState，所以需要檢查 CPU 是否支持。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>12、無線設備</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="652" src="https://storage.deepin.org/thread/202311291639068591_12.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>這些參數允許用戶配置在系統啓動、關閉或更改電源狀態時如何處理內置的藍牙、Wi-Fi 和 WWAN 設備。可通過設置禁用或啓用這些設備，以及在何種條件下執行這些操作。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>13、無線配置嚮導（自動化配置）</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="1009" src="https://storage.deepin.org/thread/202311291639308582_13.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">這些參數允許用戶配置在特定事件觸發時如何處理內置的藍牙、Wi-Fi 和 WWAN 設備。用戶可以根據 LAN、Wi-Fi 或 WWAN 的連接狀態、對接或取消對接等事件來啓用或禁用這些設備。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>14、PCIE 電源配置&nbsp;&nbsp;</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="825" src="https://storage.deepin.org/thread/202311291640035384_14.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><span>這些參數允許用戶配置與 PCIe 設備相關的運行時電源管理和 ASPM 等功能。用戶可以根據電源來源、設備地址、驅動程序等來調整這些設置，以實現更好的功耗管理。（建議不要對 NVIDIA 驅動進行調整，可能會引發意外）。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>15、USB&nbsp;&nbsp;</strong></p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="917" src="https://storage.deepin.org/thread/202311291640331297_15.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>16、Trace Mode</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><em><span style="color:#0000ff"><span>TLP_DEBUG</span>=<span>"arg bat disk lock nm path pm ps rf run sysfs udev usb"</span></span></em></p><h2><strong>結語</strong></h2><p><span>我們對於系統的優化不僅於此，現階段 TLP 的配置策略僅對於部分有能力的用戶公開，後續經過充分的測試和調優之後，會提供幾份默認的配置給普通用戶使用。並將來將這些配置文件 GUI 化，集成於深度定製項目中，為用戶提供更為方便直觀的操作體驗。</span><span>從這一階段對於電源優化的探索可以看出，deepin（深度）操作系統的電源管理方案優化不僅是為瞭解決用戶反饋的問題，更是一種對用戶需求的迴應和尊重。未來，deepin（深度）操作系統將繼續秉持用戶至上的原則，不斷提升系統的性能和用戶體驗，為廣大用戶提供更加優秀的開源操作系統產品。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:right">內容來源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.deepin.org%2Findex%2Fzh" target="_blank">deepin 社區</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 01:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269360</guid>
            <link>https://www.oschina.net/news/269360</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OS+AI 的深入思考| openKylin 社區餘傑博士受邀在 2023 CCF 中國軟件大會上做學術報告]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0; text-align:justify"><span>12 月 1 日，由中國計算機學會 (CCF) 主辦，CCF 軟件工程專委會、系統軟件專委會、形式化方法專委會以及復旦大學承辦的</span><strong><span><span>2023 年 CCF</span>中國軟件大會<span>（CCF ChinaSoft 2023）</span></span></strong><span>在上海國際會議中心拉開帷幕。</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span><span>本次大會以「智能化軟件創新推動數字經濟與社會發展」為主題，組織特邀報告、院士論壇、</span>NASAC<span>青年創新獎論壇、頂會頂刊論壇、優秀博士生論壇、優秀青年學者論壇以及論文專刊論壇、工業論壇、教育論壇、學科競賽等活動 40 餘場，邀請了全國各地高校、企業、研究機構、政府部門以及各界的學者、專家、專業人員和學生參會。</span></span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="576" src="https://oscimg.oschina.net/oscnet/up-4c4313e02c27047b4dd4f4dbf3ddcf6bdbe.png" width="1262" referrerpolicy="no-referrer"></p><p><span>在大會</span><strong><span>系統軟件教育分論壇</span></strong><span>上，</span><strong><span>openKylin 社區祕書長、技術委員會委員餘傑</span></strong><span>受邀分享</span><strong><span>《人工智能時代操作系統的機遇與挑戰》</span></strong><span>主題演講，從產業和學術兩個維度來介紹操作系統助力人工智能快速發展（OS for AI）、操作系統智能化支撐技術<span>（OS with AI）</span>和操作系統支撐下的大模型雲端一體化趨勢<span>（OS plus AI）</span>。</span></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ed2abddecaa6e57b34d4759dd8f1101ca86.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:justify"><span>當前，以大模型為代表的人工智能技術迅猛發展，成為全球技術焦點。openKylin 作為我國桌面操作系統<span>開源</span>根社區，積極佈局操作系統終端側的 AI 基礎軟件及應用技術，目前，已實現從 openKylin for AI（面向開發者）、openKylin with AI（面向用戶）兩個方面提升 openKylin AI 能力，成果如下：</span></p><p><strong>0</strong><strong>1 openKylin for AI</strong></p><ul><li><p style="margin-left:0; margin-right:0"><span style="color:#000000"><span>完成</span>CCAI<span>（Intel Cloud-Client AI Service Framework）與 openKylin 系統的適配，並將 CCAI 按照 deb 的方式打包，實現 CCAI 在 openKylin 系統上快速簡便安裝。</span></span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000"><span>發佈 openKylin AI 框架安裝助手，支持智能推薦、一鍵安裝</span>PaddlePaddle<span>、PyTorch、TensorFlow 三種框架，後續還將支持更多主流 AI 框架及其套件的安裝。</span></span></p></li></ul><p><strong>0</strong><strong>2 openKylin&nbsp;with&nbsp;AI</strong></p><ul><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">上線智能語音助手，用戶可通過語音下達指令，無須鍵盤鼠標輸入，即可觸發系統應用功能。</span></p></li><li><p style="margin-left:0; margin-right:0"><span style="color:#000000">上線 AI 大模型插件，安裝後可以實現在 openKylin 系統上體驗基於大語言模型的聊天機器人功能。</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:justify"><span><span><span>未來，openKylin 社區還將攜手</span>主流 CPU<span>、GPU、AI 大模型等廠商，積極探索雲端一體化融合趨勢，打造操作系統智能化平台，實現大模型與操作系統的協同優化。通過打造 openKylin for AI、openKylin with AI 和 openKylin plus AI 能力，推動應用全面智能化發展，為 openKylin 社區用戶和開發者帶來更加高效、智能、便捷的操作系統使用和開發體驗！</span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 01:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269357</guid>
            <link>https://www.oschina.net/news/269357</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[騰訊視頻出現服務故障]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>今日晚間，大量網友反饋稱騰訊視頻陸續出現網絡故障，具體表現包括不限於首頁無法加載內容、VIP 用戶看不了會員視頻等等。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1fbded3b9e2461b9d04e455454ad632a16a.png" referrerpolicy="no-referrer"></p><p>針對這一問題，騰訊視頻迴應稱：目前騰訊視頻出現了短暫技術問題，正在加緊修復，各項功能在逐步恢復中。</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-899c4218fa5a6cdf5b7eee20ecd37feef59.png" referrerpolicy="no-referrer"></p></blockquote><p>騰訊客服表示：關於騰訊視頻會員用戶無法觀看影片的問題，非常抱歉，技術人員已經緊急修復處理，辛苦您重啓 App 再次嘗試觀看，感謝您的支持和陪伴。</p><p>目前「騰訊視頻崩了」已經登頂微博熱搜，該話題已經有 11.2 億的閲讀量和 22.8 萬次討論。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8e92af99ecae1719adadcb80374d59c0f61.png" referrerpolicy="no-referrer"></p><p>根據微博網友反饋，自己即使是 VIP 用戶，也會出現無法觀看會員內容的情況。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 03 Dec 2023 14:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269337</guid>
            <link>https://www.oschina.net/news/269337</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[巴西頒佈了一部完全由 ChatGPT 編寫的法案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">今年 10 月份，巴西市第二大城市阿雷格里港的立法者在不知情的情況下，通過了似乎是該國第一部完全由人工智能編寫的法案。該法案旨在防止城市向納稅人收取更換被盜水錶的費用；其中 36 名議員投票一致通過了該提案，並於 11 月底生效。</span></p><p><span style="color:#000000">時至今日，市議員 Ramiro Rosário 則向<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapnews.com%2Farticle%2Fbrazil-artificial-intelligence-porto-alegre-5afd1240afe7b6ac202bb0bbc45e08d4" target="_blank">美聯社</a>透露，該法案其實是由聊天機器人編寫的。他實際上使用 ChatGPT 撰寫了相關提案，並在沒有做出任何改動的基礎上將此呈現給了其他 35 名同僚，同時有意對他們隱瞞了內容的來源。</span></p><p><span style="color:#000000">「如果我在此之前透露了這一消息，該提案肯定不會被付諸表決。如果僅僅因為該項目是由人工智能編寫的，就冒着不被批准的風險，這對民眾來説是不公平的。」</span></p><p><img height="269" src="https://oscimg.oschina.net/oscnet/up-5cdb167b97dbc135bce51409c0865d3ff48.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Rosário 表示，自己僅在 ChatGPT 中輸入了 49 個字的提示，就在幾秒鐘內收到了該工具返回的完整提案草案，其中還包括理由説明。所以他此舉的目的不僅僅是為瞭解決一個地方性問題，還希望引發一場辯論。</span></p><p><span style="color:#000000">他深信人類將經歷一場新的技術革命。並認為，人類文明所開發的所有工具既可以用來為惡，也可以用來為善。「這也就是為什麼我們必須展示如何將其用於善」。</span></p><p><span style="color:#000000">法案真相的浮現引發了諸多的反對意見，並對 AI 在公共政策中的作用提出了質疑。市議會主席 Hamilton Sossmeier 此前曾發言譴責 Rosário 的做法，並稱這是一個"危險的先例"。但他的想法如今似乎也出現了動搖，"我改變了主意。我開始更深入地閲讀，發現不管是不幸還是幸運，這都將成為一種趨勢。"</span></p><p><span style="color:#000000">事實上，Rosário 並不是首例。美國<span style="background-color:#ffffff">馬薩諸塞州的民主黨州參議員 Barry Finegold 早些時候也向 ChatGPT 求助，幫助起草一項旨在監管包括 ChatGPT 在內的人工智能模型的法案。該法案於今年早些時候提交，但目前尚未進行投票。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">Finegold 在接受採訪時表示，ChatGPT 可以幫助解決立法過程中一些較為繁瑣的問題，包括正確、快速地搜索和引用已頒佈的法律。不過，他也補充説明，關鍵是要讓每個人都知道在這個過程中使用了 ChatGPT 或類似的工具，保持透明度。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">目前，使用像 ChatGPT 這樣的大型語言模型來編寫法律文檔目前存在爭議且存在風險，特別是因為系統往往會偽造信息和產生幻覺。研究表明，所有聊天機器人在總結文檔時都有引入錯誤信息的可能，最先進的 GPT 模型的錯誤率約為 3%，而谷歌的一個模型的錯誤率約為 27%。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">今年上半年，紐約就有律師因在訴訟中引用 ChatGPT 編造的虛假法律案例而遭到抨擊。</span></span></p><p style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">相關閲讀：</span></span></strong></p><ul><li style="text-align:start"><a href="https://www.oschina.net/news/242932/lawsuit-chatgpt-false-case-citations" target="news">律師藉助 ChatGPT 打官司，資料造假危及職業生涯</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sun, 03 Dec 2023 04:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269286/brazil-ordinance-chatgpt</guid>
            <link>https://www.oschina.net/news/269286/brazil-ordinance-chatgpt</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
