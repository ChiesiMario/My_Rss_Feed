<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sun, 10 Dec 2023 17:10:50 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[驚人發現：加班與生產力下降之間的聯繫]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Slack 的勞動力指數揭示瞭如何安排工作日以最大化員工生產力、幸福感和滿意度的新發現。</p><p><strong>概要：</strong> 你在工作上如何花費時間，它又在怎樣消耗你？Slack 的勞動力指數是基於對全球 10,000 多名辦公室員工的調查回覆得出的，揭示瞭如何安排工作日以最大化生產力和增強員工幸福感和滿意度的新發現。</p><p>主要知識點包括：</p><ul><li>在工作日結束時下線的員工比那些覺得有義務在下班後工作的員工的生產力得分高出 20%。</li><li>在工作日中抽出時間休息可以提高員工的生產力和幸福感，但有一半的辦公室員工表示他們很少或從不休息。</li><li>平均而言，辦公室員工表示每天理想的專注時間約為四個小時，而每天超過兩個小時的會議是大多數員工感到會議負擔過重的臨界點。</li><li>每四個辦公室員工中就有三個表示在下午 3 點到 6 點的時間段工作，但其中只有四分之一的人認為這些時間高效。</li></ul><p>幾十年來，許多人在辦公室加班被視為努力工作和生產力的標誌，甚至是一種榮譽的象徵。但 Slack 的新研究表明，儘管存在這種長期觀念，但下班後工作往往與<em>較低</em>的生產力水平相關，並且可能是一個警告信號，表明員工正在處理過多的任務，需要幫助確定優先順序和平衡時間。</p><p>根據 Slack 對全球 10,000 多名辦公員工的調查，最新的勞動力指數結果顯示生產力差距取決於是什麼促使員工加班至深夜（或凌晨）。每五個辦公員工中就有兩個（37%）每週至少有幾次在公司的標準工作時間之外登錄系統，其中超過一半（54%）的員工表示這是由於感受到壓力，而不是自己選擇加班。</p><p>那些覺得有義務在業餘時間工作的員工比那些在標準工作日結束時下班的員工生產力得分低 20%。這些員工還報告：</p><ul><li>與工作相關的壓力大 2.1 倍</li><li>對整體工作環境的滿意度低 1.7 倍</li><li>疲憊程度高 2 倍</li></ul><p><img src="https://d34u8crftukxnk.cloudfront.net/slackpress/prod/sites/6/Workforce-Lab-Blog-Graphics-Pulse-11_V2_After-Hours-Horchata.png" alt="受到壓力而需要在非工作時間工作的員工全天的工作效率低 20%" referrerpolicy="no-referrer"></p><p>這兩組員工都表示，他們用於工作的時間約 70% 是富有成效的——這表明那些加班的員工與他們的同事一樣努力——但那些在非工作時間工作的員工比那些按時上下班的員工更容易認為他們的生產力被相互衝突的優先事項所阻礙（高出 50%）。</p><p>另一方面，那些選擇在標準工作時間之外工作的員工，以更好地安排自己的時間表或追求個人抱負，他們的健康狀況和生產力得分沒有負面影響，甚至略有提高。</p><blockquote><p>「長期以來，從我們如何分配時間到如何定義生產力，許多工作的重點都放在數量而非質量上。始終感覺需要迎頭趕上正在損害員工和企業的利益。這更加突顯了建立信任文化的重要性，在這種文化中，員工在需要確定優先事項並平衡工作時間以便完成工作時，敢於表達自己的需求。」</p></blockquote><h2>關於生產率，關鍵不在於工作時間的長短，而在於質量</h2><p>根據勞動力指數的結果，全球範圍內有相當一部分辦公員工難以平衡工作時間，不同職業層級的員工面臨不同程度的問題。</p><p>超過四分之一的辦公員工（27%）表示他們花費太多時間開會，其中超過一半（55%）的高管也認同這一點。同樣比例（25%）的員工表示他們花費太多時間在電子郵件上，其中 43% 的高管也表示同樣的情況。</p><p>五分之一（20%）的員工表示他們沒有足夠的時間與同事溝通，這個問題在初級員工中最為明顯。</p><p>令人擔憂的是，數據顯示各個層級的許多員工都在沒有休息的情況下完成日常任務：在接受調查的辦公員工中，有一半（50%）的人表示他們很少或從不休息。這些員工發生職業倦怠的可能性要高 1.7 倍。</p><p>然而，那些經常休息的同事表現出更高的工作與生活平衡能力（高 62%）、更強的應對壓力和焦慮的能力（高 43%）、更高的整體滿意度（高 43%），並且出人意料的是，他們的生產力得分高出 13%。</p><blockquote><p>「為什麼我們都開始相信，如果我們始終處於工作狀態，為了成功我們需要精疲力竭？這可以追溯到第一次工業革命，當時我們開始崇拜機器。機器的目標是儘量減少停機時間。但對於作為人類操作系統來説，停機時間並非缺陷，而是其特點。精英運動員知道恢復是達到最佳表現的一部分。休息時間則是生產力的一個乘數。」</p><p>健康和生產力平台 Thrive Global 創始人兼首席執行官阿麗安娜·赫芬頓（Arianna Huffington）如是説。</p></blockquote><p><img src="https://d34u8crftukxnk.cloudfront.net/slackpress/prod/sites/6/Workforce-Lab-Blog-Graphics-Pulse-11_V2_Taking-Breaks-Horchata.png" alt="經常休息的員工生產力高出 13%" referrerpolicy="no-referrer"></p><h2>最佳工作時間：無論你是晨型人還是夜貓子，下午的低迷期都是真實存在的</h2><p>平均而言，辦公員工表示他們工作時間內只有 70% 的時間是高效的。當被問及工作效率最佳時間時，答案差異很大，有些員工喜歡在早上工作，有些則偏愛在晚上。但不管他們的偏好如何，大多數（71%）辦公員工都認為下午晚些時候是最不適合工作的時間，從下午 3 點到 6 點這段時間內，工作效率急劇下降。</p><p><img src="https://d34u8crftukxnk.cloudfront.net/slackpress/prod/sites/6/Workforce-Lab-Blog-Graphics-Pulse-11_V2_Afternoon-Slump-Purple.png" alt="" referrerpolicy="no-referrer"></p><p>儘管有四分之三的辦公員工表示在下午 3 點到 6 點這段時間內工作，但只有四分之一的人認為這段時間工作效率很高。</p><blockquote><p>「這表明生產效率並非線性增長。生產效率是在一天中不間斷地爆發式增長和下降，並不一定在規定的時間窗口內，而且絕對不是連續八小時。‘下午的低迷期’不應該被視為一件壞事；對於許多員工來説，這可能是休息的理想時間，這將提高他們當天的整體工作效率。」</p><p>Slack 研究與分析部高級副總裁兼勞動力實驗室負責人 Christina Janzer</p></blockquote><p>那些會管理時間的人往往更高效。他們使用時間管理策略的可能性高出 1.6 倍，更有可能安排一段時間來完成特定任務，只在特定時間查看電子郵件，並設置專注計時器，這樣的可能性高出 2.2 倍。</p><h2>工作的「適居帶」：如何平衡工作日以優化生產力</h2><p>儘管沒有一種適用於所有行業、角色和職位的通用時間表，但仔細研究數據會發現一個公式，可以幫助員工獲得成功。</p><p>研究表明，無論職位高低，理想的工作日安排都存在一個「適居帶」，即專注時間、協作時間、社交聯繫和休息時間的平衡。平均而言，辦公員工表示每天理想的專注時間約為四個小時。每天超過兩個小時的會議是大多數員工表示他們在會議上花費「太多時間」的臨界點，所有職位級別都出現了類似的模式。表示在會議上花費太多時間的人更有可能説他們沒有足夠的時間來集中注意力。相比之下，約有 10% 的辦公員工（在新公司工作不到一年或 30 歲以下的員工中最常見）表示他們在會議上花費的時間_太少_，這也與歸屬感和生產力的降低有關。</p><blockquote><p>「專注時間、協作時間、連接和休息就像工作日的宏量營養素。正確的平衡可以為你提供最佳工作所需的能量。我們不能把這些工作的關鍵組成部分孤立起來考慮。為了最有效地工作，我們必須為協作工作和專注工作創造空間。」</p><p>Slack 和 Salesforce 員工成功部高級副總裁 David Ard</p></blockquote><h2>辦公員工最希望 AI 提供什麼幫助？協助和自動化以合理安排會議並騰出時間</h2><p>在辦公員工時間管理困難的同時，他們也對 AI 工具的潛力感到興奮，認為它可以更好地平衡他們的時間。</p><p>絕大多數高管——94%——感到整合 AI 的緊迫性，其中一半的高管表示有強烈的緊迫感。然而，我們的調查顯示 AI 的採用仍處於初級階段，只有五分之一的辦公員工表示他們使用過 AI 工具。</p><p>鑑於採用率很低，大多數辦公員工（超過 80%）表示 AI 工具尚未提高他們的工作效率也就不足為奇了。但他們預計 AI 將協助解決工作日中最大的難題之一：會議。員工期望 AI 未來能夠提供最大價值的三大活動是：1）會議記錄和回顧；2）寫作協助；3）工作流程自動化。</p><blockquote><p>「各個職位級別的員工可能會驚訝地發現，每天超過兩小時的會議會降低生產力。對於許多團隊領導者來説，今天達到這個目標可能不切實際。但新一代的 AI 工具可能是救星。能夠準確總結會議記錄並自動化常見工作流程的 AI 助手可能是騰出時間、成功平衡的關鍵。」</p><p>Slack 研究和勞動力實驗室高級副總裁兼負責人 Christina Janzer</p></blockquote><p><strong>你是在努力工作還是聰明地工作？在我們關於如何優化工作時間的研究中深入探討這些問題。參加我們的網絡研討會「新研究揭示高效工作日的祕訣」</strong></p><h2>研究方法</h2><p><em>《勞動力指數》於 2023 年 8 月 24 日至 9 月 15 日對美國、澳大利亞、法國、德國、日本和英國的 10,333 名員工進行了調查。調查由 Qualtrics 負責，並未針對 Slack 或 Salesforce 的員工或客戶進行。所有受訪者都是全職員工（每週工作 30 小時或以上），擔任以下其中一種職位，或表示他們「處理數據、分析信息或進行創造性思維」：執行管理層（例如總裁/合夥人、首席執行官、首席財務官、C 級高管）、高級管理層（例如執行副總裁、資深副總裁）、中級管理層（例如部門/團隊經理、副總裁）、初級管理層（例如經理、團隊負責人）、高級職員（非管理職位）、技術辦公室員工（例如分析師、圖形設計師）。為簡潔起見，我們將調查對象稱為「辦公室員工」或「辦公員工」。</em></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 10 Dec 2023 08:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/1434828/blog/10320336</guid>
            <link>https://my.oschina.net/u/1434828/blog/10320336</link>
            <author>
                <![CDATA[andalousie]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Mistral AI 用「磁鏈鏈接」開源了 87 GB 的 8x7B MoE 模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>有「歐洲版 OpenAI」之稱的大模型創業公司——Mistral AI 昨天發佈了一條<strong>僅包含磁力鏈接</strong>的推文：</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-6d2f1eed8e7b0598bb332db3f7da2a8db77.png" referrerpolicy="no-referrer"></p><p>來源：<u><em><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FMistralAI%2Fstatus%2F1733150512395038967" target="_blank">https://twitter.com/MistralAI/status/1733150512395038967</a></strong></em></u></p></blockquote><p>網友打開該磁力鏈接後發現居然是一個大小為 87 GB 的種子。從命名和目錄結構來看，這是一個 PyTorch 模型文件。</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-f146450c2aefd9e4dd128ccf383b4348362.png" referrerpolicy="no-referrer"></p></blockquote><p>上圖的「params.json」JSON 格式文件顯然是該模型的主要參數信息，具體如下：</p><p><img src="https://oscimg.oschina.net/oscnet/up-1c197917ca03f170a988e23832ba8a2f592.png" referrerpolicy="no-referrer"></p><p>結合參數和文件名信息，Mistral AI 這次「開源」的&nbsp;<strong>mixtral-8x7b-32kseqlen&nbsp;</strong>是一個基於<strong>混合專家 (Mixture of Experts, MoE)</strong>&nbsp;的大模型，<strong>由 8 個 70 億參數規模 (8×7b) 的專家網絡組成</strong>。據稱是全球首個開源 MoE 大模型。</p><p>MoE 是用於提高大語言模型效率和準確度的技術。這種方法的核心是將複雜任務劃分為更小、更易管理的子任務，每個子任務由專門的小型模型或「專家」負責，然後根據輸入數據的特性選擇性地激活這些「專家」。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span>MoE 核心組成：</span></p><ol><li><p style="margin-left:0; margin-right:0"><span><strong>專家 (Experts)</strong>：</span><span style="background-color:#ffffff; color:#0f1419">訓練有素的小型神經網絡，擅長特定領域。</span><span>每個專家通常專注於處理一種特定類型的數據或任務。專家的設計可以是多種形式，如完全連接的網絡、卷積網絡等。</span></p></li><li><p style="margin-left:0; margin-right:0"><span><strong>門控機制 (Gating Mechanism)</strong>：</span><span style="background-color:#ffffff; color:#0f1419">MoE 架構決策者，</span><span>這是一個智能路由系統，負責決定哪些專家應該被激活來處理當前的輸入數據。門控機制基於輸入數據的特性，動態地將數據分配給不同的專家。</span></p></li></ol><p>根據 mixtral-8x7b-32kseqlen 的參數信息，該模型對每個 token 的推理使用 2 個專家進行處理（和傳聞中的 GPT-4 一樣）。</p><blockquote><p>此前<u><a href="https://www.oschina.net/news/249106/gpt-4-architecture-infrastructure" target="_blank">揭祕 GPT-4 技術細節</a></u>的文章提到，GPT-4 是由 16 個專家組成的 MoE 模型，每個專家則是一個包含 1110 億參數的大模型，每次前向傳遞路由經過 2 個專家模型。</p></blockquote><p>Mistral AI 目前仍沒公佈除模型下載鏈接外的任何信息，如果不想下載但又想體驗一把，可以訪問下面的網站：</p><ul><li><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Freplicate.com%2Fnateraw%2Fmixtral-8x7b-32kseqlen" target="_blank">https://replicate.com/nateraw/mixtral-8x7b-32kseqlen</a></u></strong></li><li><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.fireworks.ai%2Fmodels%2Ffireworks%2Fmixtral-8x7b-fw-chat" target="_blank"><span style="background-color:rgba(0, 0, 0, 0); color:inherit">https://</span>app.fireworks.ai/models/firewor<span style="background-color:rgba(0, 0, 0, 0); color:inherit">ks/mixtral-8x7b-fw-chat</span></a></u></strong></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-93dba40a2cac79b8ffbc7720a6db69dfd02.png" referrerpolicy="no-referrer"></p><p>對了，這不是 Mistral AI 第一次用「留種」的方式發佈開源大模型。Mistral AI 在 9 月底發佈的那條磁力鏈接是其開源的第一個大模型 Mistral-7B，該模型至今仍被稱為「最好的 7B 模型」，在每個基準測試中都優於 Llama-2 13B，並且在代碼、數學和推理方面優於 LLaMA-1 34B。</p><p><img src="https://oscimg.oschina.net/oscnet/up-28671bd6c309caf5b0fcc86e275681ef529.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 09 Dec 2023 07:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270317/mixtral-8x7b-32kseqlen</guid>
            <link>https://www.oschina.net/news/270317/mixtral-8x7b-32kseqlen</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[餘承東：華為明年將推出顛覆性產品，改寫行業歷史]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>12 月 9 日，2023 華為花粉年會在松山湖基地舉行。華為常務董事、終端 BG CEO、智能汽車解決方案 BU 董事長餘承東在年會上表示，<strong>明年會推出非常有引領性、創新性、顛覆性的產品。</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d15077f4297790d71ee33fb17fcdc27333c.png" referrerpolicy="no-referrer"></p><p><strong><strong>餘承東直言：「到時候你可以看到我們怎麼樣能夠</strong>改寫這個行業的歷史</strong>。希望能夠不斷地帶來超越大家的期待，做別人想不到的事情或者想到但做不到的事，甚至是他們不敢想的事情。」</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e2b780aafbf00c463c0e8273e50a58bead5.png" referrerpolicy="no-referrer"></p><p>餘承東還預告，華為明年將會推出鴻蒙原生應用與原生體驗的產品，「<strong>那將會是整個中國終端類操作系統裏真正的王者</strong>」。</p><p>此前，有消息稱華為可能明年推出不兼容 Android 的鴻蒙版本。11 月 20 日，據澎湃新聞報道，一華為相關人士表示，推出時間還不確定，未來 iOS、鴻蒙、Android 將為三個各自獨立的系統。</p><p>稍早前據證券時報報道，有業內人士亦表示：「華為內部確實有這計劃，就是明年推出不兼容 Android 的鴻蒙版本，但目前內部還沒有下發相關通知，所以具體何時推出暫不明確。」</p><p>在 9 月 25 日舉行的華為秋季全場景新品發佈會上，華為常務董事、終端 BG CEO、智能汽車解決方案 BU 董事長餘承東宣佈，鴻蒙原生應用全面啓動，HarmonyOS NEXT 開發者預覽版將在 2024 年第一季度面向開發者開放。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-619518ef25720c3272f8663f57f84ce9cbb.png" referrerpolicy="no-referrer"></p><p>會上，華為與近 40 家合作伙伴舉辦鴻蒙生態合作簽約儀式，包括：小紅書、招商銀行、攜程旅行、美圖、58 同城、360 瀏覽器、網易有道詞典、石墨文檔、classln 應用、洪恩識字、漢王科技、作業幫、億圖腦圖 MindMaster 應用、會見會議、2345 好壓、寶寶巴士、喜馬拉雅、訊飛聽見、浩辰 CAD、掌上生活、郵儲銀行、鈦媒體、駕考寶典、書生電子、交通銀行、中信銀行、興業證券、央廣網、搜狐新聞、蜻蜓 FM、京東健康、動卡空間、東方財富、天天基金、大智慧、深圳 CA 簽章、中軟國際、中國音像與數字出版協會等應用與服務商。</p><p>10 月 26 日，包含支付寶、小紅書、嗶哩嗶哩、滴滴出行、同程旅行、哈囉等十餘家知名互聯網企業，參加了華為在上海舉行的鴻蒙生態夥伴聯合創新會，瞭解 HarmonyOS NEXT 的能力與特性，現場達成 10+創新場景合作意向。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 09 Dec 2023 03:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270290</guid>
            <link>https://www.oschina.net/news/270290</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[黑客攻擊招聘 APP 短信驗證碼接口用於「撞庫」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>央視新聞報道了招聘 APP 遭黑客攻擊導致 300 萬條數據泄露的案件。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-e4acf1c1251a484866c2db701cf03469b78.png" referrerpolicy="no-referrer"></p><p>來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.weibo.com%2F2656274875%2FNwrWnni5v%3Fpagetype%3Dprofilefeed" target="_blank">https://www.weibo.com/2656274875/NwrWnni5v?pagetype=profilefeed</a></u></em></p></blockquote><p>根據報道，前段時間北京警方接到轄區內一家互聯網公司報案，稱該公司求職招聘類 App 的短信驗證碼接口遭受 1300 餘萬次攻擊，且成功匹配註冊賬號 30 餘萬個。北京警方迅速研判，<strong>確定這是一起黑客利用網站漏洞非法獲取賬號信息並用於違法活動的案件</strong>。</p><p>據瞭解，犯罪嫌疑人喻某交代稱，自己於 2022 年 10 月 18 日在該招聘平台註冊賬號，並數次嘗試驗證接口。<strong>他發現該網站的簽名算法相對單一，便利用該弱點編寫指令，製作黑客軟件對網站進行「撞庫」攻擊</strong>。</p><p>同時，他還利用類似方式對其他各大網站進行滲透，並伺機查詢網站漏洞，<strong>以此為誘餌向他人兜售自己編寫的惡意程序、黑客工具，從中牟利</strong>。經過民警不懈努力，專案組成功在四川成都將另一名嫌疑人焦某抓獲，<strong>現場起獲各類公司、人員數據 330 餘萬條</strong>。</p><p>犯罪嫌疑人喻某、焦某因破壞計算機信息系統罪被依法刑事拘留，案件正進一步辦理中。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 09 Dec 2023 02:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270288</guid>
            <link>https://www.oschina.net/news/270288</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[大家好，我龍博，我們做了個很酷的開源工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Hello ，大家好，我是龍博，目前擔任 ILLA Cloud 的 CEO 。 創業之前在字節跳動和快手寫代碼，一直以來都是一個熱愛技術的小夥伴！</p><h2>介紹一下我們產品</h2><p>ILLA Cloud 是一個非常好用的開源低代碼工具，我們已經完整的迭代兩年了。</p><p>傳送門：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Filla.cloud" target="_blank">https://illa.cloud</a></p><p>Github: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fillacloud%2Filla-builder" target="_blank">https://github.com/illacloud/illa-builder</a></p><p>我們的 star 都是我們用戶一個一個點上去的，我們沒有進行任何的操作行為，所以 star 並沒有那麼多，還在衝擊 1w ，希望大家多給我們點贊～</p><p>我們是一個開箱即用的低代碼工具，希望大家能使用一下去解決公司裏面搭建內部系統的問題，專注各種管理後台，也就是大家無法購買到的系統，只能通過傳統前端方式構建，大家都知道沒有前端喜歡寫後台，^_^</p><p>使用我們可以構建出來相對比較美觀的各種內部工具，保證大家的 App ，Web 網站有一個好用的管理後台工具。</p><p><img src="https://cdn.illacloud.com/illa-blog/Discussion/Frame%2033402x.png" alt="低代碼" referrerpolicy="no-referrer"></p><p>我們也有很多用戶在使用我們的產品搭建屬於自己公司的內部 AI 工具，比如使用 Agent 去做郵件生成，使用低代碼工具搭建屬於自己的 Stable Diffusion 面板。</p><p><img src="https://cdn.illacloud.com/illa-blog/Discussion/discussion2.png" alt="AI" referrerpolicy="no-referrer"></p><p>我們在過去的大量工作裏面支持了大量的集成能力，主流的數據庫和接口都支持了。我們還同 Hugging Face 達成了官方的合作，保證每一個用戶都可以快速的訪問 Hugging Face 中的模型從而讓自己構建出來的產品有大量開箱即用的 AI 能力</p><h2>關於我們公司</h2><p>我們是 2022 年元旦之後開始創立的，目前這個產品已經完整迭代兩年了，才敢宣傳一下，我們相信這裏的小夥伴對產品都有極高的追求滴！</p><p>我們產品在創立初期也獲得了高領資本，源碼資本，奇績創壇的融資，所以大家不用擔心我們的生存問題。感謝國內頂級的資本對開源事業的支持，我們相信開源可以讓產品更加的茁壯成長。</p><p>主要是真心邀請大家一起構建我們的產品，我們相信中國的開發者是全世界最優秀的一羣人（數據上看也確實是），我們作為一家服務開發者的公司非常榮幸可以讓大家來用一用我們的產品。</p><h2>最後</h2><p>如果你對我們產品感興趣，歡迎找我聊聊，我的 v：owen_longbo</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 10:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/xlyg/blog/10320194</guid>
            <link>https://my.oschina.net/xlyg/blog/10320194</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Eclipse 4.30 正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Eclipse 4.30 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.eclipse.org%2Flists%2Feclipse-dev%2Fmsg12229.html" target="_blank">已正式發佈</a></u>。</p><blockquote><p>下載地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownload.eclipse.org%2Feclipse%2Fdownloads%2Fdrops4%2FR-4.30-202312010110%2F" target="_blank">https://download.eclipse.org/</a></u></em></p></blockquote><p><strong>主要變化</strong></p><ol><li><p>支持新的 Java 語言特性：包括 JEP 440: Record Patterns 和 JEP 441: Pattern Matching for Switch</p></li><li><p>針對 Java 編輯器的快速修復功能：<span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">包括添加默認 case、移除默認 case 和插入 break 語句等。</span><img alt="" src="https://oscimg.oschina.net/oscnet/up-329b23386ea4f45add7417bc2b198bfb628.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3db6224b26cb93f37c8b8f305527edf1eba.png" referrerpolicy="no-referrer"></p></li><li><p>清理和快速修復以替換棄用的方法調用：新增了一個清理功能，可以替換帶有 Javadoc 的棄用方法調用。</p></li><li><p>快速輔助重命名常量字段：新增了一個快速輔助功能，可以將靜態常量字段重命名為符合標準語法的形式。<br><img alt="" src="https://oscimg.oschina.net/oscnet/up-7eb8135dd37ddf8e7bb0b037efaa8257b73.png" referrerpolicy="no-referrer"></p></li><li><p>面向 JDT 開發者推動重構和建議到 jdt.manipulations：大量代碼從 org.eclipse.jdt.ui 推動到 org.eclipse.jdt.core.manipulations，這將允許這些操作在無 header 環境中使用。</p></li></ol><p>詳情查看&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Feclipse.dev%2Feclipse%2Fnews%2F4.30%2F" target="_blank">https://eclipse.dev/eclipse/news/4.30/</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 09:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270231/eclipse-4-30-ga</guid>
            <link>https://www.oschina.net/news/270231/eclipse-4-30-ga</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[商湯科技發佈 AI 編程助手「代碼小浣熊 Raccoon」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>商湯科技宣佈，基於商湯自研大語言模型的智能編程助手 —— 代碼小浣熊 Raccoon (<strong>R</strong>accoon is<strong>A</strong>nother&nbsp;<strong>C</strong>ode&nbsp;<strong>CO</strong>-pil<strong>O</strong>t&nbsp;<strong>N</strong>avigator) 已開放公測。</p><p>代碼小浣熊 Raccoon 支持 Python、Java、JavaScript、C++、Go、SQL 等 30+ 主流編程語言和 VS Code、IntelliJ IDEA 等主流 IDE。主要特性如下：</p><ul><li><p>代碼編寫建議覆蓋 30 多種主流編程語言，依據上下文，自動生成代碼。</p></li><li><p>開放對話功能，理解用戶的自然語言需求描述。</p></li><li><p>預設基於註釋生成代碼、跨編程語言翻譯、單元測試用例生成、代碼修正、代碼重構、技術領域知識問答等功能。</p></li><li><p>支持用戶自定義需求：包括需求文檔生成、代碼生成註釋、代碼的解釋文檔生成、技術文檔生成等開放式能力。</p></li></ul><blockquote><p><strong>體驗地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.sensetime.com" target="_blank">https://code.sensetime.com</a></u></em><br> 使用文檔</strong>：<strong><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.sensetime.com%2Fdocs" target="_blank">https://code.sensetime.com/docs</a></em></u></strong></p></blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2c679cff58be01097976aee3c1003e89b3a.png" referrerpolicy="no-referrer"></p><p><img height="722" src="https://oscimg.oschina.net/oscnet/up-21140dc87019c7b03213e62078c9e35292d.png" width="2398" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-fa0feda14f70e8765c400cbbda8eb386722.png" referrerpolicy="no-referrer"></p><p>代碼小浣熊由商湯自研大語言模型提供支持，覆蓋軟件需求分析、架構設計、代碼編寫、軟件測試等環節，滿足用戶代碼編寫、數據分析、編程學習等各類需求。在實際應用中，可幫助開發者提升編程效率超 50%。</p><p>在最新權威代碼生成測試集 HumanEval 的測試中，該模型精度表現驚豔，一次通過率甚至達到驚人的 71%，已經大幅超越 GPT-3.5。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 07:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270111</guid>
            <link>https://www.oschina.net/news/270111</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visual Studio Code 1.85 發佈，浮動窗口]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Visual Studio Code 1.85 現已發佈，具體更新內容如下：</span></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_floating-editor-windows" target="_blank">浮動編輯器窗口</a>&nbsp;</strong>- 將編輯器拖放到桌面上。</li></ul><p>在此版本中，你可以將編輯器從主窗口移到自己的輕量級窗口中。對一個窗口中的編輯器所做的更改會立即應用到打開編輯器的所有其他窗口。創建浮動編輯器窗口的最簡單方法是將編輯器從當前窗口拖出，然後放到桌面的空白處。</p><p><img height="199" src="https://oscimg.oschina.net/oscnet/up-b0da5aaa77a00252d07e01a0deba0bb9651.png" width="500" referrerpolicy="no-referrer"></p><p>新的 workbench.editor.dragToOpenWindow 設置可以禁用這一行為。</p><p>此外，還新增了全局和上下文命令，用於將編輯器和編輯器組移動或複製到各自的窗口中：</p><ol><li><strong>View: Copy Editor into New Window</strong><span>&nbsp;</span>(<code>workbench.action.editor.copyWithSyntaxHighlightingAction</code>)</li><li><strong>View: Move Editor into New Window</strong><span>&nbsp;</span>(<code>workbench.action.editor.moveEditorToNextWindow</code>)</li><li><strong>View: Copy Editor Group into New Window</strong><span>&nbsp;</span>(<code>workbench.action.editor.copyGroupToNextWindow</code>)</li><li><strong>View: Move Editor Group into New Window</strong><span>&nbsp;</span>(<code>workbench.action.editor.moveGroupToNextWindow</code>)</li><li><strong>View: New Empty Editor Window</strong><span>&nbsp;</span>(<code>workbench.action.newWindow</code>)</li></ol><p>浮動窗口中的編輯器區域可以按照你的要求進行任何複雜的佈局。由於終端和搜索結果都可以作為編輯器打開，因此現在也可以在單獨的窗口中使用這些功能。</p><p><img alt="" height="380" src="https://oscimg.oschina.net/oscnet/up-614b6e5f35aba888f52c6af02605f895709.png" width="500" referrerpolicy="no-referrer">&nbsp;</p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_accessibility" target="_blank">無障礙視圖工作流程</a>&nbsp;</strong>- 更順暢地往返於無障礙視圖。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_extension-auto-update-control" target="_blank">更精細的擴展更新控制</a>&nbsp;</strong>- 選擇要自動更新的擴展。</li></ul><p><img height="185" src="https://oscimg.oschina.net/oscnet/up-2b45a99221f8b86b5b262c255e4730e2db4.png" width="500" referrerpolicy="no-referrer"></p><p><img height="173" src="https://oscimg.oschina.net/oscnet/up-11c49e3b9484fc08295eab2ac761fb1e91a.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_source-control" target="_blank">Source Control&nbsp;</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_incomingoutgoing-changes" target="_blank">Incoming/Outgoing</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_source-control" target="_blank">視圖</a>&nbsp;</strong>- 輕鬆查看待處理的存儲庫更改。</li></ul><p><img alt="" height="400" src="https://oscimg.oschina.net/oscnet/up-e03fba3b7c01f5169672e873dc03f7ca5d2.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_javascript-debugger" target="_blank">JavaScript 堆快照</a>&nbsp;</strong>- 可視化堆快照，包括內存對象圖。</li></ul><p><img alt="" height="313" src="https://oscimg.oschina.net/oscnet/up-2c53ba92039826739ba95948bfa8fdf06d1.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_jump-to-definition-for-inlay-hints" target="_blank">TypeScript 從 inlay hints 轉到 Definition</a>&nbsp;</strong>- 從 inlay hint 懸停跳轉到 definition。</li></ul><p><img height="152" src="https://oscimg.oschina.net/oscnet/up-9e81061ebcb464afb21b52a4230d32d41c2.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_python" target="_blank">Python 類型層次結構顯示</a>&nbsp;</strong>- 快速查看和瀏覽複雜的類型關係。</li></ul><p><img height="306" src="https://oscimg.oschina.net/oscnet/up-65ccbe610ac5572ae021bd333667e60b9c1.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_github-copilot" target="_blank">GitHub Copilot 更新</a>&nbsp;</strong>- 內聯聊天改進、Rust 代碼解釋。</li></ul><p><img alt="" height="242" src="https://oscimg.oschina.net/oscnet/up-ea71728ad959cbc644dc29abd62c52495f7.png" width="500" referrerpolicy="no-referrer"></p><p><img alt="" height="369" src="https://oscimg.oschina.net/oscnet/up-71118ae08a788d060a52f73b35d2b632f4f.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85%23_preview-features" target="_blank">預覽：擴展的 Sticky Scroll 支持</a>&nbsp;</strong>- 在樹視圖和終端中的 Sticky Scroll。</li></ul><p><img height="325" src="https://oscimg.oschina.net/oscnet/up-9c280278b75fad356124e3b3c38eeaa46cc.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">更多詳情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_85" target="_blank">查看官方公告</a><span style="background-color:#ffffff; color:#333333">。&nbsp;</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 06:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270095/vs-code-1-85-released</guid>
            <link>https://www.oschina.net/news/270095/vs-code-1-85-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[systemd 新組件 systemd-bsod — 為 Linux 引入「藍屏」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>systemd 255 近日<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsystemd%2Fsystemd%2Freleases%2Ftag%2Fv255" target="_blank">發佈了穩定版</a></u>，其新增的"<strong>systemd-bsod</strong>"實驗性組件讓人眼前一亮——沒錯，正是大名鼎鼎的「藍屏死機」（Blue Screen of Death，簡稱 BSOD）。</p><p>BSOD 是微軟 Windows 操作系統在無法從一個系統錯誤中恢復過來時，為保護電腦數據文件不被破壞而強制顯示的屏幕圖像。Windows 的藍屏死機提示已成為標誌性畫面，大部分是系統崩潰的現象。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-51d3ac36bc416abe53fe1c0517c774a1824.png" referrerpolicy="no-referrer"></p><p><em>上圖是 Windows 10 的藍屏死機畫面（版本 1607-21H2），它包含了一個悲傷的顏文字和一個用於快速排查錯誤的二維碼</em>。</p><p>簡而言之，BSOD 就是用於展示錯誤信息的診斷工具。雖然大家討厭看到藍屏界面，但這不意味着 BSOD 本身是一個壞方案。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d1cfdcf33e390c881d32ad1ef5146419e5e.png" referrerpolicy="no-referrer"></p><p>根據&nbsp;systemd 更新日誌的介紹，當日誌級別設置為"<strong>LOG_EMERG</strong>"時，如果 Linux 系統出現引導錯誤，新組件"systemd-bsod"會全屏顯示報錯信息（即 BSOD）。和 Windows 的 BSOD 類似，它也會生成二維碼，以便用戶通過手機獲取啓動失敗報錯的更多信息。</p><p>"systemd-bsod" 屬於&nbsp;<span>Outreachy 項目的一部分，該項目是為開發開源工具的人員提供實習機會的組織。</span></p><p>systemd-bsod 目前處於實驗性階段，GitHub 上的更新日誌也指出它仍會有改動。但不管怎樣，不少主流 Linux 發行版如 Ubuntu、Fedora、Debian 和 Red Hat 都採用了 systemd。所以 2024 年，相信不少 Linux 發行版都會引入「藍屏」。</p><p>對了，systemd 創始人兼首席開發者 Lennart Poettering 去年<u><a href="https://www.oschina.net/news/202119/systemd-creator-microsoft" target="_blank">被微軟從 Red Hat 挖走</a></u>&nbsp;—— 繼續專注於開發 systemd。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 05:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270207/systemd-255-bsod</guid>
            <link>https://www.oschina.net/news/270207/systemd-255-bsod</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wine 9.0 發佈首個 RC]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Wine 9.0-rc1 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.winehq.org%2Fnews%2F2023120801" target="_blank">已發佈</a>，進入 RC 階段意味着已開始凍結代碼。</p><blockquote><p>Wine （「Wine Is Not an Emulator」 的首字母縮寫）是一個能夠<strong>在多種 POSIX-compliant 操作系統（諸如 Linux，macOS 及 BSD 等）上運行 Windows 應用的兼容層</strong>。它不是像虛擬機或者模擬器一樣模仿內部的 Windows 邏輯，而是將 Windows API 調用翻譯成為動態的 POSIX 調用，免除了性能和其它一些行為的內存佔用，能夠乾淨地整合 Windows 應用到桌面。</p></blockquote><p>新版本帶來了一些重要的改進，包括升級 VKD3D 和改進 Wine Wayland。這些改進將進一步提升 Wine 在 Linux 上的性能和功能。</p><p>Wine 9.0-rc1 將依賴的 VKD3D 升級到了 1.10。VKD3D 是一個用於在 Linux 上運行 Direct3D 12 應用程序的庫。通過升級 VKD3D，Wine 能夠更好地支持 Direct3D 12 應用程序，並提供更好的圖形性能和兼容性。</p><p>此版本還改進了 Wine Wayland，這意味着 Wine 在 Wayland 上的運行更加穩定和流暢，讓用戶能夠在使用 Wayland 作為顯示服務器的 Linux 發行版上更好地運行 Windows 應用程序。</p><p>除了這些改進，Wine 9.0-rc1 還修復了一些 bug，以及其他小改進，進一步提升了 Wine 的穩定性和性能。</p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.winehq.org%2Fannounce%2F9.0-rc1" target="_blank">詳情查看發佈公告</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 03:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270195/wine-9-rc1-released</guid>
            <link>https://www.oschina.net/news/270195/wine-9-rc1-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[虛擬機成為 Android 的核心結構]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>安卓虛擬化框架（AVF）將出現在即將推出的部分安卓 14 設備上。AVF 於 Android 13 首次在 Pixel 設備上推出，為開發特權應用程序的平台開發人員提供了新的功能。</p><p>有了 AVF，我們將更廣泛地支持安卓的虛擬化。虛擬化被廣泛應用和部署，以隔離工作負載和操作系統。它可以有效地擴展基礎設施、測試環境、兼容傳統軟件、創建虛擬桌面等。</p><p style="text-align:start">有了 AVF，虛擬機就成了安卓操作系統的核心結構，類似於安卓利用 Linux 進程的方式。開發人員可以靈活選擇虛擬機的隔離級別：</p><ul><li><p>單向隔離：安卓（主機）可以控制和檢查虛擬機的內容。這些虛擬機最常用於沙箱和隔離，使多個操作系統能在同一台機器/設備上運行，由一個操作系統主機（Android）控制和監視所有其他操作系統。</p></li></ul><ul><li><p>雙向隔離（隔離虛擬機）：Android（主機）和虛擬機（客戶機）完全相互隔離。處理或存儲敏感數據的開發人員可能會受益於隔離虛擬機。隔離虛擬機具有雙向屏障，主機（Android）和虛擬機都無法訪問對方，除非通過明確商定的通信渠道。這有兩個主要特性：</p></li></ul><blockquote><blockquote><ol><li><p>主機（Android）無法訪問虛擬機內的工作負載和數據（保密）。</p></li><li><p>即使 Android 一直到（包括）主機內核都受到攻擊，隔離的虛擬機也不會受到攻擊。</p></li></ol></blockquote></blockquote><h3 style="text-align:start"><strong>AVF 的意義</strong></h3><h4 style="text-align:start"><strong>隔離</strong></h4><p style="text-align:start">有了隔離虛擬機，開發人員現在有了 Trustzone 之外的另一種選擇，可用於需要在不升級權限的情況下與 Android 隔離的用例。</p><h4 style="text-align:start"><strong>便攜性</strong></h4><p style="text-align:start">虛擬機及其內部運行的應用程序的可移植性遠高於可信 applets。例如，帶有 Linux 應用程序有效載荷的基於 Linux 的虛擬機可以在所有支持 AVF 的設備上運行。這意味着開發人員只需構建一次應用程序，就可以將其部署到任何地方。與移植到 Trustzone 操作系統相比，虛擬機還能無縫、輕鬆地移植基於 Linux 的現有應用程序。</p><h4 style="text-align:start"><strong>性能</strong></h4><p style="text-align:start">AVF 設計輕巧、高效、靈活。虛擬機可以：</p><ul><li><p>根據開發者的需要，小到一個 C 語言程序，大到整個操作系統；</p></li><li><p>做到持續性或間歇性；</p></li><li><p>根據整個系統的健康狀況增加或縮小內存；</p></li><li><p>遵循 Android 的調度程序提示和低內存警告。</p></li></ul><h4 style="text-align:start"><strong>可擴展性</strong></h4><p style="text-align:start">AVF 在設計時考慮到了開發人員的需求。虛擬機可以定製，以滿足特定用例的需求。只要符合 AVF 規定的某些啓動和通信協議，開發人員就可以部署任何虛擬機有效載荷。</p><p style="text-align:start">除了將虛擬化的強大功能引入安卓系統，實現虛擬桌面、沙箱、AVF 使用隔離虛擬機的所有可能性外，還能使以下常見的安卓使用場景（以及更多使用場景）受益：</p><ul><li><p>生物識別：通過在隔離的虛擬機中部署生物識別可信 applets，開發人員將獲得隔離保證、生物識別算法所需的更多計算能力、與 Trustzone 操作系統無關的輕鬆更新能力以及更簡化的部署。</p></li></ul><ul><li><p>DRM：Widevine 可在安卓設備上實現流式 DRM。一旦部署在隔離的虛擬機中，無論安卓設備上部署的各種 Trustzone 操作系統的細節如何，Widevine 的更新在這些設備上都會變得更加容易。</p></li></ul><h3 style="text-align:start"><strong>AVF 使用</strong></h3><p style="text-align:start">AVF 提供了簡單的應用程序接口，用於查詢設備創建虛擬機的能力及其支持的類型，以及從創建虛擬機的應用程序和服務與這些虛擬機建立安全的通信渠道。</p><p style="text-align:start">例如，檢查 AVF API 的可用性，以及隔離虛擬機和常規虛擬機的可用性：</p><pre><code>VirtualMachineManager manager =
     (VirtualMachineManager)context.
          getSystemService(VirtualMachineManager.class);
if (manager == null) {
    // AVF not supported
} else {
    int capabilities = manager.getCapabilities();
    if ((capabilities &amp; CAPABILITY_PROTECTED_VM) != 0) {
        // protected VM is supported
    }
    if ((capabilities &amp; CAPABILITY_NON_PROTECTED_VM) != 0) {
        // non protected VM is supported
    }
}
</code></pre><p style="text-align:start">有關 AVF 及其 API 的其他文檔，請<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsource.android.com%2Fdocs%2Fcore%2Fvirtualization" target="_blank">點擊此處查看</a>。</p><h3 style="text-align:start"><strong>AVF 組件</strong></h3><p><img align="left" alt="AVF Component architecture" height="219" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjqoflrFdKllbCL-ksao2ozMc0Vwp3eAXNadr58iaiCyd4noAKVuwaetGcVVoU1s1s_g3FA94wCHv_wg8AYbnczEY518U98tUwpYqkyLM-H2IbKpJcNY55xg6yCw5KO2Nk5HW2uAxAGNBXVdDVm8dNdG4das2y7RBWaQCWleykRilaLbd0sfFnb0JOXgC0/s1600/image1.png" width="453" referrerpolicy="no-referrer"></p><p>AVF 由框架 API、<strong>Hypervisor </strong>和虛擬機管理器組成。<strong>Hypervisor </strong>確保虛擬機（包括 Android）相互隔離，就像 Linux 內核對進程的隔離一樣。不過，與 Linux 內核相比，AVF <strong>Hypervisor</strong>（pKVM）的代碼量要小得多（約 50 倍）。</p><h4 style="text-align:start"><strong>Hypervisor (</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsource.android.com%2Fdocs%2Fcore%2Fvirtualization%2Farchitecture%23hypervisor" target="_blank"><strong>pKVM</strong></a><strong>)&nbsp;</strong></h4><p style="text-align:start"><strong>Hypervisor </strong>側重於開源可用性、安全性、虛擬機的設備分配以及虛擬機之間的隔離安全。它的攻擊面較小，符合較高的安全保證級別。受保護的 KVM <strong>Hypervisor</strong>（pKVM）完全支持 AVF API 和功能。</p><p style="text-align:start">pKVM 構建在 Linux 中基於內核的虛擬機（KVM）這一行業標準之上。這意味着所有依賴基於 KVM 的虛擬機的現有操作系統和工作負載都能通過 pKVM 在安卓設備上無縫運行。</p><h4 style="text-align:start"><strong>虛擬機管理器 (</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fandroid.googlesource.com%2Fplatform%2Fexternal%2Fcrosvm%2F" target="_blank"><strong>crosvm</strong></a><strong>)</strong></h4><p style="text-align:start">crosvm 是基於 Rust 的虛擬機管理器（VMM），是 <strong>Hypervisor </strong>與 AVF 框架之間的橋樑。它負責創建、管理和銷燬虛擬機。此外，它還提供了一個跨多個 <strong>Hypervisor </strong>實現的抽象層。</p><h4 style="text-align:start"><strong>隔離虛擬機</strong></h4><p style="text-align:start">隔離的虛擬機對 Android 來説是不可見的，即在 Android 中運行的任何進程都無法檢查、查看或篡改此類虛擬機的內容。這一保證由 <strong>Hypervisor </strong>提供。</p><h4 style="text-align:start"><strong>虛擬機</strong></h4><p style="text-align:start">虛擬機與隔離的虛擬機相同，只是擁有正確權限的 Android 進程可以訪問虛擬機。</p><h4 style="text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsource.android.com%2Fdocs%2Fcore%2Fvirtualization%2Fmicrodroid" target="_blank"><strong>Microdroid</strong></a></h4><p style="text-align:start">Microdroid 是一個經過精簡的 Android 操作系統軟件包，可作為啓動虛擬機（VM）的模板。它為開發人員在虛擬機中構建和運行工作負載提供了熟悉的環境。Microdroid 使用熟悉的 Android 工具和庫，如 Bionic、Binder IPC 和 keystore 支持。</p><h4 style="text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsource.android.com%2Fdocs%2Fcore%2Fvirtualization%2Fvirtualization-service" target="_blank"><strong>虛擬化服務</strong></a></h4><p style="text-align:start">VirtualizationService 管理所有客戶虛擬機（無論是否隔離）。它主要通過管理 crosvm 實例來實現。它還公開了 AIDL API，系統服務或特權應用程序可使用該 API 啓動、監控和停止虛擬機。</p><h4 style="text-align:start"><strong>RpcBinder</strong></h4><p style="text-align:start">RpcBinder 是為 Android 界面定義語言（AIDL）開發的全新後端。RpcBinder 可使用現有的 binder 線協議與虛擬機進行通信。這意味着：</p><ol><li><p>開發人員可以使用他們已經熟悉的語言和基礎架構（AIDL）編寫虛擬機接口。</p></li><li><p>只需繼續使用現有的 AIDL 接口，即使綁定端點轉移到虛擬機中也是如此。</p></li></ol><h3 style="text-align:start"><strong>Android 14 有哪些新功能？</strong></h3><p style="text-align:start">安卓 14 不僅使 AVF 可以在更多設備上使用，還提供了一個新的工具包，使用戶可以使用 AVF 及其組件構建更多內容：</p><ul><li><p><strong>用於 AVF 的安卓系統應用程序接口</strong>&nbsp;</p></li></ul><blockquote><p>特權應用程序現在可以使用虛擬機來執行需要隔離的關鍵工作負載；</p></blockquote><ul><li><p><strong>Hypervisor DevEx 工具包</strong>&nbsp;</p></li></ul><blockquote><p>添加了跟蹤功能、改進的可調試性和監控功能，以提供洞察力並協助平台開發人員在隔離虛擬機內進行開發；</p></blockquote><ul><li><p><strong>Hypervisor 供應商模塊</strong></p></li></ul><blockquote><p>通過供應商模塊擴展，我們的合作伙伴可以定製谷歌的 pKVM，以滿足他們的特定需求，實現差異化；</p></blockquote><ul><li><p><strong>改善系統健康</strong>&nbsp;</p></li></ul><blockquote><p>安卓 14 中，基於 microdroid 的虛擬機啓動速度比安卓 13 快 2 倍，而內存使用量卻只有安卓 13 的一半。</p></blockquote><p>AVF 框架的其它部分可讓 Android 服務和應用程序輕鬆使用虛擬化。例如，使用 AIDL 作為傳輸層抽象虛擬機之間的通信，管理虛擬機生命週期或虛擬機的創建方式。</p><blockquote><p>原文鏈接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fandroid-developers.googleblog.com%2F2023%2F12%2Fvirtual-machines-as-core-android-primitive.html" target="_blank">https://android-developers.googleblog.com/2023/12/virtual-machines-as-core-android-primitive.html</a></p><p><em>Posted by Sandeep Patil – Principal Software Engineer, and Irene Ang – Product Manager</em></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 03:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270066/virtual-machines-as-core-android-primitive</guid>
            <link>https://www.oschina.net/news/270066/virtual-machines-as-core-android-primitive</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenTiny Vue 3.12.0 發佈：文檔大優化！增加水印和二維碼兩個新組件🎈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>你好，我是 Kagol。</p><p>非常高興跟大家宣佈，2023 年 11 月 30 日，OpenTiny Vue 發佈了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Freleases%2Ftag%2Fv3.12.0" target="_blank">v3.12.0</a> 🎉。</p><p>OpenTiny 每次大版本發佈，都會給大家帶來一些實用的新特性，10.24 我們發佈了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Freleases%2Ftag%2Fv3.11.0" target="_blank">v3.11.0</a> 版本，增加了富文本、ColorPicker 等 4 個新組件，該版本共有 23 位貢獻者參與。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7293122369610940452" target="_blank">🎊OpenTiny Vue 3.11.0 發佈：增加富文本、ColorPicker 等 4 個新組件，迎來了貢獻者大爆發！</a></p><p>本次 3.12.0 版本主要有以下更新：</p><ul><li>全面優化 54 個高頻組件的 Demo / API 文檔，讓文檔更加清晰易懂、符合預期</li><li>Watermark 水印組件</li><li>QrCode 二維碼組件</li></ul><p>本次版本共有 21 位貢獻者參與開發，其中有 8 位是新貢獻者，歡迎新朋友們👏</p><p>以下是新貢獻者：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffanbingbing16" target="_blank">@fanbingbing16</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F686" target="_blank">#686</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdyh333" target="_blank">@dyh333</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F667" target="_blank">#667</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbetavs" target="_blank">@betavs</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F719" target="_blank">#719</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbetterdancing" target="_blank">@betterdancing</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F742" target="_blank">#742</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FDavid-TechNomad" target="_blank">@David-TechNomad</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F772" target="_blank">#772</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffalcon-jin" target="_blank">@falcon-jin</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F844" target="_blank">#844</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fwuyiping0628" target="_blank">@wuyiping0628</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F944" target="_blank">#944</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJames-9696" target="_blank">@James-9696</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F970" target="_blank">#970</a></li></ul><p>也感謝老朋友們對 OpenTiny 的辛苦付出！</p><p>大家可以更新 <code>@opentiny/vue@3.12.0</code> 進行體驗！</p><h2>組件文檔優化</h2><p>為了提升開發者閲讀文檔的體驗，從 9 月份至今，我們花了整整三個月時間對 54 個高頻組件的 demo / api 文檔進行全面的優化。</p><p>希望你能喜歡這波優化，如果你在使用過程中，發現有描述不清楚、不合理、不美觀之處，也希望你能給我們提交&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fissues" target="_blank">Issue</a>&nbsp;進行反饋。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7309352577146126373" target="_blank">🎉開發者的福音：TinyVue 組件庫文檔大優化！類型更詳細，描述更清晰！</a></p><h2>Watermark 水印</h2><p>水印組件用於保護文檔的版權，防止文檔被非法複製或盜用，常見的使用場景有：</p><ul><li>在公司內部文檔中添加水印，以防止機密信息泄露</li><li>在商業合同或法律文件中添加水印，以保護文件的真實性和完整性</li><li>在電子書籍或其他數字內容中添加水印，以防止盜版和非法傳播</li><li>在社交媒體發佈圖片時添加水印，以保護自己的版權</li></ul><p>Watermark 使用方式很簡單，只需要用水印組件包裹要添加水印的內容即可。</p><pre><code class="language-html">&lt;template&gt;
  &lt;tiny-watermark v-bind="params"&gt;
    &lt;div style="height: 500px"&gt;&lt;/div&gt;
  &lt;/tiny-watermark&gt;
&lt;/template&gt;

&lt;script setup&gt;
import { reactive } from 'vue'
import { Watermark as TinyWatermark } from '@opentiny/vue'

const params = reactive({
  content: ['I ❤️ TinyVue', 'TinyVue is 👍'],
})
&lt;/script&gt;
</code></pre><p>效果如下： <img src="https://oscimg.oschina.net/oscnet/up-562c09e08e9917cda421a6a2587e3ea3c93.png" alt="" referrerpolicy="no-referrer"></p><p>其中水印內容可以支持調整寬高、旋轉角度、字體、間距等，並且支持圖片水印。</p><p>圖片水印效果：</p><p><img src="https://oscimg.oschina.net/oscnet/up-fd8835c16270be5786afdb4a6e2c654618c.png" alt="" referrerpolicy="no-referrer"></p><p>水印組件鏈接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-vue%2Fzh-CN%2Fos-theme%2Fcomponents%2Fwatermark" target="_blank">https://opentiny.design/tiny-vue/zh-CN/os-theme/components/watermark</a></p><p>歡迎體驗！</p><h2>QrCode 二維碼</h2><p>二維碼組件的使用場景非常豐富：</p><ul><li>線下演講時，可以在 PPT 放個人微信的二維碼，方便聽眾用手機掃碼獲得講師的聯繫方式，進行進一步的溝通</li><li>商家可以在產品上印製二維碼，用戶通過掃描二維碼來獲取產品信息或説明書</li><li>用戶通過掃描二維碼來登錄網站或應用，提高登錄的安全性和便捷性</li></ul><p>QrCode 使用方式也很簡單，只需要傳入鏈接地址即可。</p><pre><code class="language-html">&lt;template&gt;
  &lt;tiny-qr-code v-bind="params"&gt;&lt;/tiny-qr-code&gt;
&lt;/template&gt;

&lt;script setup&gt;
import { QrCode as TinyQrCode } from '@opentiny/vue'

const params = {
  value: 'https://opentiny.design/tiny-vue'
}
&lt;/script&gt;
</code></pre><p>效果如下：</p><p><img src="https://oscimg.oschina.net/oscnet/up-6cd3890d8cffa77d3bdc957eba9a64ebdf0.png" alt="" referrerpolicy="no-referrer"></p><p>可以嘗試掃描上面的二維碼，將會進入 TinyVue 官網。</p><p>二維碼的大小、顏色、背景、間距等都支持配置，同時也支持自定義圖片。</p><p>自定義圖片的二維碼效果：</p><p><img src="https://oscimg.oschina.net/oscnet/up-1c1ee113e783fece7810d1d2f23432dc9fd.png" alt="" referrerpolicy="no-referrer"></p><p>二維碼組件鏈接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-vue%2Fzh-CN%2Fos-theme%2Fcomponents%2Fqr-code" target="_blank">https://opentiny.design/tiny-vue/zh-CN/os-theme/components/qr-code</a></p><p>歡迎體驗！</p><hr><p>歡迎加入 OpenTiny 開源社區。</p><p>添加微信小助手：opentiny-official，一起參與共建！</p><p>開源不易，請給&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue" target="_blank">TinyVue</a>&nbsp;點個 Star ⭐ 鼓勵下，感謝你對我們 OpenTiny 的大力支持！</p><p>源碼：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue" target="_blank">https://github.com/opentiny/tiny-vue</a></p><p><img src="https://oscimg.oschina.net/oscnet/up-8eccff9b756a679b6502e7d270961b07240.png" alt="" referrerpolicy="no-referrer"></p><h2>聯繫我們</h2><p>GitHub：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue" target="_blank">https://github.com/opentiny/tiny-vue</a>（歡迎 Star ⭐）</p><p>官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-vue" target="_blank">https://opentiny.design/tiny-vue</a></p><p>B 站：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspace.bilibili.com%2F15284299" target="_blank">https://space.bilibili.com/15284299</a></p><p>公眾號：OpenTiny</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 03:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4863191/blog/10320008</guid>
            <link>https://my.oschina.net/u/4863191/blog/10320008</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 年，再來聊聊：微服務、中台？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>阿里巴巴市值被拼多多反超後，互聯網上出現了各種對比和分析兩家公司的文章，基本都是圍繞組織架構、商業模式、企業願景等宏觀方面展開。</p><p>片刻之間，阿里此前的各種「戰略」似乎都成了「昏招」。這不，曾經他們引以為豪的「中台」也被拿出來批判了。</p><p><img src="https://static.oschina.net/uploads/space/2023/1208/115007_40xS_2720166.png" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/1208/115136_JIEp_2720166.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-3b2b9bdc8dc5a4b3e10ffbfff09cc03a74d.png" referrerpolicy="no-referrer"></p><blockquote><p>阿里巴巴是中國第一個明確提出「中台戰略」的企業。在 2015 年年中的時候，馬雲參觀了芬蘭遊戲公司 Supercell。這家公司的員工人數非常少，還不到 200 人，但是一年的利潤高達 15 億美金。雖然開發了像《部落衝突》這樣的知名遊戲，但這家公司開發遊戲的團隊規模都很小，只有六七個人而已。</p><p>這麼小規模的團隊，怎麼做成了這麼大的業務呢？其中一個原因是他們把遊戲開發過程中，要用的一些通用的遊戲素材和算法整理出來，把這些作為工具提供給所有的小團隊。</p><p>同一套工具，可以支持好幾個小團隊研發遊戲。這種管理方式，就是一個「中台」的模型。</p><p>參觀完之後，馬雲非常受啓發，不久後阿里集團就正式提出了「<strong>大中台、小前台」</strong>的中台戰略，通過將原本分散到各個業務的支持部門，比如技術部門、數據部門集中到一起。</p><p>這樣，原本分散的支持部門聚合在一起後可以進行快速的服務迭代，更高效地支撐前線，大幅降低支持部門的重複投資建設。從此中台漸入中國企業家的視野。</p></blockquote><hr><p>説到中台，必然離不開「微服務」——這也是前幾年非常火熱的技術概念，但現在已經沒什麼話題度了。所以 2023 年，大家對微服務、中台有什麼切身感受嗎，一起來聊聊。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 03:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270064</guid>
            <link>https://www.oschina.net/news/270064</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[小米澎湃 OS 首批正式版開始陸續推送]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span>小米澎湃 OS 官方微博發佈動態稱，小米澎湃 OS 第一批正式版正在逐步推送中。</span></p><p><span>5 款機型已於 12 月 7 日起開始陸續推送，分別為 Xiaomi 13 Pro、Xiaomi 13、Redmi K60 Pro、Redmi K60、Xiaomi Pad 6 Max 14。更多機型即將陸續推送。</span></p><p><span>Xiaomi MIX Fold 3、Xiaomi MIX Fold 2、Xiaomi Pad 6 Pro、Xiaomi Pad 6 則預計於 2024 年 1 月開始陸續推送。</span></p><p><img height="667" src="https://oscimg.oschina.net/oscnet/up-b95d11366413ac08d4ed48c93d084478d52.png" width="500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 03:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270061</guid>
            <link>https://www.oschina.net/news/270061</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中國信通院發佈《區塊鏈白皮書（2023 年）》]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">2023 年 12 月 7 日，中國信息通信研究院（簡稱「中國信通院」）在「2023 年 Web3.0 創新大賽暨頒獎典禮」上<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F6_R6Mvw1xEPoTaTRoInFfQ" target="_blank">發佈</a>了《區塊鏈白皮書（2023 年）》並對白皮書進行了深度解讀。</span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">白皮書在之前基礎上，重點融入了「2023 年區塊鏈生態及產業發展情況調研」相關結果分析，並系統梳理了 2023 年國內外區塊鏈技術、應用創新熱點，以及產業生態發展新動態，特別是在全球 Web3.0 快速推進、數據要素價值加快釋放的背景下，展望我國區塊鏈技術應用和產業發展新趨勢。</span></p><h4 style="margin-left:0px; margin-right:0px"><strong>白皮書核心觀點</strong></h4><p style="margin-left:0; margin-right:0"><strong>1. 區塊鏈技術面向高擴展、高性能和高安全持續演進。</strong>當前，區塊鏈技術沿公有鏈和聯盟鏈兩大技術路線分別演進，公有鏈聚焦高性能、高擴展性和高安全性強化技術創新，聯盟鏈則面向自主化、廣域化、規模化應用實現持續優化。當前融合二者優勢的開放聯盟鏈也迎來快速發展，有望成為 Web3.0 時代數據價值釋放和協作共享的技術底座。</p><p style="margin-left:0; margin-right:0"><strong>2. 區塊鏈技術與公共服務、實體經濟等領域深度融合。</strong>全球區塊鏈應用範圍從金融領域逐步向外延展，在實體經濟、政務服務、公共服務、數字原生等領域加速落地，場景創新、模式創新層出不窮，行業生態逐步完善。此外，數字資產應用拓展了要素的發展邊界，數字身份已成為數字世界的重要入口，區塊鏈通過獨特的機制正在成為促進數據要素供給流通與價值釋放的重要基礎設施，為構建 Web3.0 應用生態提供有力支撐。</p><p style="margin-left:0; margin-right:0"><strong>3. 多國政府積極佈局 Web3.0 產業發展。</strong>全球多個國家和地區政府正在積極佈局 Web3.0 發展，着力提升區塊鏈治理及監管能力，沿不同路徑持續推進區塊鏈基礎設施建設。我國區塊鏈產業佈局更加全面、協作更加緊密，標準體系日益完善，區塊鏈基礎設施建設初見成效，國產自主生態正穩步發展壯大。</p><p style="margin-left:0; margin-right:0"><strong>4. 全球加快優化區塊鏈監管治理體系。</strong>全球範圍內多個國家和地區正加快推動區塊鏈監管治理體系優化，探索基於區塊鏈的 Web3.0、數字資產等發展路徑。我國地方政府積極開展相關佈局，以政策扶持、機制創新等方式促進產業發展與監管合規同步推進，為數字經濟發展提供新路徑和新模式</p><p style="margin-left:0; margin-right:0"><img height="278" src="https://oscimg.oschina.net/oscnet/up-4dcdb04a180dee8c68991d52429f2a6c2cf.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="303" src="https://oscimg.oschina.net/oscnet/up-cc6a0478e95ab4852645905ddfd7661997b.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="309" src="https://oscimg.oschina.net/oscnet/up-e9d6c8a146fce01dab3e8838032809ad6f1.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="304" src="https://oscimg.oschina.net/oscnet/up-fc41d1b4f65c0ba86ad662b7019a04e50d2.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="307" src="https://oscimg.oschina.net/oscnet/up-e3b923b9f287991de935689803c56da9f6a.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="309" src="https://oscimg.oschina.net/oscnet/up-2862283eaefbd74a141207fba2634893f29.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="304" src="https://oscimg.oschina.net/oscnet/up-85f57208cc7017a701696280ab3e56b201a.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="311" src="https://oscimg.oschina.net/oscnet/up-264fed980163542fda3951f73cfafa9c9ef.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="311" src="https://oscimg.oschina.net/oscnet/up-22eb41296a9f9d624589657f9570e1a3818.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="306" src="https://oscimg.oschina.net/oscnet/up-5aec9e8e8721925137d746e323b3a4b472e.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="310" src="https://oscimg.oschina.net/oscnet/up-354bc09172ab7fb04087f99b2d259a2737c.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="313" src="https://oscimg.oschina.net/oscnet/up-d1edf6f022b4fb437c2d1ec45461338d608.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="303" src="https://oscimg.oschina.net/oscnet/up-9afaffbca935ed920989d45296f9ef7df9d.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="301" src="https://oscimg.oschina.net/oscnet/up-5d0ebfdcc4b0800d3d6aef007e153610e30.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="310" src="https://oscimg.oschina.net/oscnet/up-ef45c8ef4adcf6de0893a2b7c1585484e5e.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="310" src="https://oscimg.oschina.net/oscnet/up-7112a4582a8090126bac3344cffcd931c4b.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="306" src="https://oscimg.oschina.net/oscnet/up-4d508541738c8fc65a2f367dfeb655bda8b.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="311" src="https://oscimg.oschina.net/oscnet/up-a8bb5722b74ee290874eb54b2373cb00ff6.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="306" src="https://oscimg.oschina.net/oscnet/up-50cbdf8186a0c4335d77afaa69acda349e2.png" width="500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 03:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270058</guid>
            <link>https://www.oschina.net/news/270058</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[雷軍 30 年前寫的論文：《計算機病毒判定專家系統原理與設計》]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>雷軍 1992 年發表的《計算機病毒判定專家系統原理與設計》論文在網上曝光，引發熱議。</p><p>這份論文詳細地描述了計算機病毒判定專家系統的原理與具體設計方法，一定程度上解決了流行病毒的判定問題。論文結語寫道：<strong>研製解決流行病毒判定問題的專家系統，在目前具有相當大的使用價值。本文介紹的這種智能判定方法大大優於傳統的檢測方法，具有準確率高，適用性廣的有點，還可以不斷髮展和擴充。關於這種方法，目前國內外文獻上尚未提及。（參考文獻略）</strong></p><p>附論文原文：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-00e57539a1c6a07aa17cb70f341f3f2d3c1.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-9babb896439e0b4a049532c7537dba1318f.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-c000968b49128269073f6f38373e6162709.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-a14bb1726495836bf7d6d463cbbefdb16a1.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-63cb2ee41ae8f0981dc0a88d94251dd61fb.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-d7986af830afb49d055c14584452431d642.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-dea1bb17744fa373895687fd84a7d5520ab.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b68d4f4408348e18bba5c70dd2006a1a855.png" referrerpolicy="no-referrer"></p><p>來源：<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F5714719345%2FNvR23gzWc%3Fpagetype%3Dviewer" target="_blank">https://weibo.com/5714719345/NvR23gzWc?pagetype=viewer</a></em></u></p><p>華為消費者 BG 戰略 Marketing 部副總裁李昌竹轉發了該論文的微博，<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1402329495%2FNwbO90AHM%3Fpagetype%3Dprofilefeed" target="_blank">並説道</a></u>：<strong>「技術創新和前沿探索都是值得尊敬和學習的。」</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-4cbc7936df3d1ad8b4a787215eb1fbea304.png" referrerpolicy="no-referrer"></p><p>1992 年，雷軍還與求伯君合著了《深入 DOS 編程》一書。在接下來的兩年裏，雷軍涉獵廣泛，寫過加密軟件、殺毒軟件、財務軟件、CAD 軟件、中文系統以及各種實用小工具等。</p><p><img src="https://oscimg.oschina.net/oscnet/up-389de1159783b7b408cade4d27be661e412.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-d80cc19de34a8b5e73cfe14690d437a0a70.png" referrerpolicy="no-referrer"></p><p>公開資料顯示，1987 年，雷軍畢業於原沔陽中學（現湖北省仙桃中學），同年考上了武漢大學計算機系。</p><p>1992 年初，雷軍加盟金山公司。先後出任金山公司北京開發部經理、珠海公司副總經理、北京金山軟件公司總經理等職務。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 03:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270190</guid>
            <link>https://www.oschina.net/news/270190</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[百度 Comate 榮獲「2023 AIIA 人工智能十大先鋒應用案例」獎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span>12 月 7-8 日，中國人工智能產業發展聯盟（AIIA）第十次全體會議暨 2023 年通用人工智能創新發展論壇在重慶召開。</span>大會圍繞軟件工程、基礎平台、科學智能、具身智能等技術創新，數據、開源開放、安全治理等產業關鍵要素，以及金融、汽車等重點行業應用等人工智能最新熱點展開。</p><p><span>作為大會重磅環節，從今年 10 月起，AIIA 啓動</span><strong>「2023 人工智能十大先鋒應用案例徵集」活動</strong><span>，旨在甄選具有高價值、標杆性、真落地的行業典型應用實踐，打造 AI 界「奧斯卡」。經過為期 2 個月的徵集評審，從百餘項入圍案例中，</span><strong>百度智能代碼助手 Comate 脫穎而出，斬獲「2023AIIA 人工智能十大先鋒應用案例」獎，也是本次十大先鋒應用案例獎中的唯一軟件工程領域 AI 應用</strong><span><strong>。</strong></span></p><p><img height="846" src="https://static.oschina.net/uploads/space/2023/1208/110825_3Ktq_3820517.png" width="1269" referrerpolicy="no-referrer"></p><p><strong>（現場頒獎）</strong></p><p>從在百度內部全面落地應用，到面向企業開發者發佈「國內首個商用全場景智能編程助手」，再到 SaaS 版全面開放，百度 Comate 厚積薄發，持續引領 AI 原生研發新範式。</p><p>目前，百度 Comate 已覆蓋 100+種編程語言，支持 10+種主流 IDE，覆蓋編程前、後、移動端，支持軟硬件不同開發場景，為研發全生命週期提供全場景智能輔助，大幅提升研發效率的同時，也提升了工程師的工作倖福感。</p><p><img height="716" src="https://static.oschina.net/uploads/space/2023/1208/110838_ghZG_3820517.png" width="1268" referrerpolicy="no-referrer"></p><p><span>在技術創新優勢上，依賴文心大模型、飛槳深度學習平台以及百度多年積累的技術經驗，Comate 智能代碼助手具備</span><strong>模型訓練、推理加速、工程實踐和安全保障四重技術創新</strong><span>，並在</span><strong>代碼續寫、代碼解釋、NL2Code、Code Debug 等能力上領先行業與競品</strong><span>。</span></p><p><img height="712" src="https://static.oschina.net/uploads/space/2023/1208/110849_LSh5_3820517.png" width="1267" referrerpolicy="no-referrer"></p><p>在應用實效上，基於模型層多種能力，百度 Comate 具有優秀的代碼推薦、單測生成、自然語言代碼生成和代碼修復等能力；並通過開放 SaaS 版和私有化部署能力，滿足個人用戶、中小企業和大型企業的不同需求。在百度內部，通過 Comate 生成代碼佔比 20%，整體採納率達 40%；SaaS 版開箱即用，註冊企業累計 4000+；涵蓋金融、汽車、互聯網、高端製造等在內的數十家大型企業已與 Comate 達成私有化部署合作。</p><p><img height="1842" src="https://static.oschina.net/uploads/space/2023/1208/192440_aMPH_3820517.png" width="3260" referrerpolicy="no-referrer"></p><p>未來，百度 Comate 還將持續強化產品能力建設，堅守安全性的同時增強開放性，為企業和個人用戶提供更智能、更高效、更便捷的代碼輔助服務，助力研發效率持續提升，加速產業創新落地。</p><p>馬上申請免費試用，還有超多限時福利！</p><p><img height="533" src="https://static.oschina.net/uploads/space/2023/1208/110911_Fwzq_3820517.png" width="300" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 03:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270054/comate-aiia-2023-news</guid>
            <link>https://www.oschina.net/news/270054/comate-aiia-2023-news</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[網信辦發佈《網絡安全事件報告管理辦法（徵求意見稿）》]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>國家互聯網信息辦公室就《網絡安全事件報告管理辦法（徵求意見稿）》公開徵求意見。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-c1eb5e22a141f8e4fc99760bb45a85f397d.png" referrerpolicy="no-referrer"></p><p>來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.cac.gov.cn%2F2023-12%2F08%2Fc_1703609634347501.htm" target="_blank">http://www.cac.gov.cn/2023-12/08/c_1703609634347501.htm</a></u></em></p></blockquote><p>徵求意見稿提出，運營者在發生網絡安全事件時，應當及時啓動應急預案進行處置。按照《網絡安全事件分級指南》，<strong>屬於較大、重大或特別重大網絡安全事件的，應當於 1 小時內進行報告</strong>。</p><p>其中，<strong>網絡和系統歸屬中央和國家機關各部門及其管理的企事業單位的，運營者應當向本部門網信工作機構報告</strong>。屬於重大、特別重大網絡安全事件的，各部門網信工作機構在收到報告後應當於 1 小時內向國家網信部門報告。</p><p><strong>網絡和系統為關鍵信息基礎設施的，運營者應當向保護工作部門、公安機關報告</strong>。屬於重大、特別重大網絡安全事件的，保護工作部門在收到報告後，應當於 1 小時內向國家網信部門、國務院公安部門報告。</p><p><strong>其他網絡和系統運營者應當向屬地網信部門報告</strong>。屬於重大、特別重大網絡安全事件的，屬地網信部門在收到報告後，應當於 1 小時內逐級向上級網信部門報告。</p><p>有行業主管監管部門的，<strong>運營者還應當按照行業主管監管部門要求報告</strong>。</p><p>運營者應當按照《網絡安全事件信息報告表》報告事件，至少包括下列內容：</p><ul><li><p><strong>事發單位名稱及發生事件的設施、系統、平台的基本情況</strong>；</p></li><li><p><strong>事件發現或發生時間、地點、事件類型、已造成的影響和危害，已採取的措施及效果</strong>。對勒索軟件攻擊事件，還應當包括要求支付贖金的金額、方式、日期等；</p></li><li><p>事態發展趨勢及可能進一步造成的影響和危害；</p></li><li><p>初步分析的事件原因；</p></li><li><p>進一步調查分析所需的線索，包括可能的攻擊者信息、攻擊路徑、存在的漏洞等；</p></li><li><p>擬進一步採取的應對措施以及請求支援事項；</p></li><li><p>事件現場的保護情況；</p></li><li><p>其他應當報告的情況。</p></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-c423dc28f0c5f4929c6ec12f752d357f88f.png" referrerpolicy="no-referrer"></p><p>當事件處置結束後，運營者應當於 5 個工作日內對事件原因、應急處置措施、危害、責任處理、整改情況、教訓等進行全面分析總結，形成報告按照原渠道上報。</p><hr><p>附網絡安全事件分級指南：</p><p><img height="1406" src="https://oscimg.oschina.net/oscnet/up-3bd9fcd558b1e34d9278bc32bdf7f4a8048.png" width="1030" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-b5c16894520b3208bea288209ff7de41132.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-66e96efeef0f4b5e2538e297a57ab5d40a8.png" referrerpolicy="no-referrer"></p><p><img height="1486" src="https://oscimg.oschina.net/oscnet/up-79b90dfeb4395d333078f97cdaff1a28129.png" width="936" referrerpolicy="no-referrer"></p><p><img height="1488" src="https://oscimg.oschina.net/oscnet/up-77f78a766c7e070b24b239150c9ec5de38f.png" width="934" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-dd98b736f8b6a5c76679267826d5058dada.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 03:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270052</guid>
            <link>https://www.oschina.net/news/270052</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[支付寶啓動鴻蒙原生應用開發]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>支付寶與華為終端宣佈合作，基於 HarmonyOS NEXT 啓動支付寶鴻蒙原生應用開發。</p><p><img alt="" height="326" src="https://oscimg.oschina.net/oscnet/up-a9aa0abdc54a1c436a2c973752477f7b5a2.webp" width="500" referrerpolicy="no-referrer"></p><p>支付寶事業羣總裁倪行軍表示，雙方的合作將進一步滿足用戶在不同終端、不同場景下享受智慧生活服務的需求；同時，華為在支付寶小程序領域的數字化佈局也有利於提升商家在兩個生態中的經營效率。</p><p><span style="background-color:#ffffff; color:#2b2b2b">支付寶目前服務商家已達 8000 萬。通過支付寶 App，有近 400 萬個商家機構小程序，掃碼點單、生活繳費等超過 1000 項生活服務。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 08 Dec 2023 02:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/270047</guid>
            <link>https://www.oschina.net/news/270047</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[從瀏覽器原理出發聊聊 Chrome 插件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h3_1"></span><h3>瀏覽器架構演進</h3><p style="text-align:justify"><strong>單進程瀏覽器時代</strong></p><p style="text-align:justify">單進程瀏覽器是指瀏覽器的所有功能模塊都是運行在同一個進程裏，這些模塊包含了網絡、插件、JavaScript 運行環境、渲染引擎和頁面等。在 2007 年之前，市面上瀏覽器都是單進程的。</p><p style="text-align:center"><img src="https://pic2.zhimg.com/80/v2-3442db3861bb3221f7e853cfffa1ea45_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:center">單進程瀏覽器的架構</p><p style="text-align:justify">很多功能模塊運行在一個進程裏，是導致單進程瀏覽器不穩定、不流暢和不安全的一個主要因素。</p><ul><li><strong>不穩定：</strong>早期瀏覽器需要藉助於插件來實現諸如 Web 視頻、Web 遊戲等各種強大的功能，但是插件是最容易出問題的模塊，並且還運行在瀏覽器進程之中，所以一個插件的意外崩潰會引起整個瀏覽器的崩潰。除了插件之外，渲染引擎模塊也是不穩定的，通常一些複雜的 JavaScript 代碼就有可能引起渲染引擎模塊的崩潰。和插件一樣，渲染引擎的崩潰也會導致整個瀏覽器的崩潰。</li><li><strong>不流暢：</strong>所有頁面的渲染模塊、JavaScript 執行環境以及插件都是運行在同一個線程中的，這就意味着同一時刻只能有一個模塊可以執行。如果一個腳本非常耗時，它就會獨佔整個線程，這樣導致其他運行在該線程中的頁面沒有機會去執行任務，導致整個瀏覽器失去響應，變卡頓。</li><li><strong>不安全：</strong>當你在頁面運行一個插件時，插件可以操作系統資源，如果是個惡意插件，那麼它就可以釋放病毒、竊取你的賬號密碼，引發安全性問題。</li></ul><span id="OSC_h4_2"></span><h4><strong>多進程瀏覽器時代</strong></h4><p style="text-align:justify"><strong>早期架構</strong></p><p style="text-align:center"><img src="https://pic4.zhimg.com/80/v2-98f663221fa15549837f9cd878d40653_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:center">2008 年 Chrome 發佈時的進程架構</p><p style="text-align:justify">從圖中可以看出，早期的架構已經對瀏覽器的能力進行了拆分，主要拆分為三類：<strong>瀏覽器進程、插件進程和渲染進程。</strong>每個頁面是運行在單獨的渲染進程中的，同時頁面裏的插件也是運行在單獨的插件進程之中，進程之間是通過 IPC 機制進行通信。這就解決了單進程時代瀏覽器的各種問題：</p><ul><li><strong>解決不穩定：</strong>由於進程是相互隔離的，所以當一個頁面或者插件崩潰時，影響到的僅僅是當前的頁面進程或者插件進程，並不會影響到瀏覽器和其他頁面。</li><li><strong>解決不流暢：</strong>JavaScript 運行在渲染進程中，所以即使 JavaScript 阻塞了渲染進程，也只會影響當前的渲染頁面，並不會影響瀏覽器和其他頁面，因為其他頁面的腳本運行在它們自己的渲染進程中。</li><li><strong>解決不安全：</strong>Chrome 把插件進程和渲染進程鎖在沙箱裏面，沙箱裏面的程序可以運行，但是不能在硬盤上寫入任何數據，也不能在敏感位置讀取任何數據，這樣即使在渲染進程或者插件進程裏面執行了惡意程序，惡意程序也無法突破沙箱去獲取系統權限。</li></ul><p style="text-align:justify"><strong>近期架構</strong></p><p style="text-align:justify">相較之前，近期的架構又有了很多新的變化。</p><p style="text-align:center"><img src="https://pic4.zhimg.com/80/v2-4c1b8fc023fcd2ad0aa618575cdbc74b_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:center">近期 Chrome 進程架構</p><p style="text-align:justify">從圖中可以看出，最新的 Chrome 瀏覽器包括：<strong>1 個瀏覽器主進程、1 個 GPU 進程、1 個網絡進程、多個渲染進程和多個插件進程。</strong></p><ul><li><strong>瀏覽器進程：</strong>主要負責界面顯示、用戶交互、子進程管理，同時提供存儲等功能。可以理解瀏覽器進程是一個統一的"<strong>調度大師</strong>"去調度其他進程，比如我們在地址欄輸入 url 時，瀏覽器進程首先會調用網絡進程。</li><li><strong>渲染進程：</strong>核心任務是將 HTML、CSS 和 JavaScript 轉換為用戶可以交互的網頁，排版引擎 Blink 和 JavaScript 引擎 V8 都是運行在該進程中，默認情況下，Chrome 會為每個 Tab 標籤創建一個渲染進程。出於安全考慮，渲染進程都是運行在沙箱模式下。</li><li><strong>GPU 進程：</strong>其實，Chrome 剛開始發佈的時候是沒有 GPU 進程的。而 GPU 的使用初衷是為了實現 3D CSS 的效果，只是隨後網頁、Chrome 的 UI 界面都選擇採用 GPU 來繪製，這使得 GPU 成為瀏覽器普遍的需求。最後，Chrome 在其多進程架構上也引入了 GPU 進程。</li><li><strong>網絡進程：</strong>主要負責頁面的網絡資源加載，之前是作為一個模塊運行在瀏覽器進程裏面的，直至最近才獨立出來，成為一個單獨的進程。</li><li><strong>插件進程：</strong>主要是負責插件的運行，因插件易崩潰，所以需要通過插件進程來隔離，以保證插件進程崩潰不會對瀏覽器和頁面造成影響。</li></ul><p style="text-align:justify"><strong>當前架構</strong></p><p style="text-align:justify">目前 Chrome 瀏覽器的架構正在發生一些改變，稱為<strong>面向服務的架構 (SOA)</strong>，目的是將和瀏覽器本身（Chrome）相關的部分拆分為一個個不同的服務，服務化之後，這些功能既可以放在不同的進程裏面運行也可以合併為一個單獨的進程運行。這樣做的主要原因是讓 Chrome 在不同性能的硬件上有不同的表現。當 Chrome 運行在一些性能比較好的硬件時，瀏覽器進程相關的服務會被放在不同的進程運行以提高系統的穩定性。相反如果硬件性能不好，這些服務就會被放在同一個進程裏面執行來減少內存的佔用。</p><p style="text-align:center"><img src="https://pic1.zhimg.com/80/v2-42fd4b754c12dcb3981338f765d81a60_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:center">面向服務的架構</p><span id="OSC_h3_3"></span><h3>插件運行機制</h3><p style="text-align:justify">在運行機制前，我們先來回顧一下打開頁面會發生什麼：</p><span id="OSC_h4_4"></span><h4><strong>打開頁面發生了什麼</strong></h4><ul><li>用戶新增一個 tab，此時系統瀏覽器進程、渲染進程、GPU 進程、網絡進程會被創建好；</li><li>用戶輸入 url，瀏覽器進程檢查 url，組裝協議，構成完整的 url；</li><li>瀏覽器進程通過進程間通信（IPC）把 url 請求發送給網絡進程；</li><li>網絡進程接收到 url 請求後檢查本地緩存是否緩存了該請求資源，如果有則將該資源返回給瀏覽器進程；</li><li>如果沒有，網絡進程向 web 服務器發起 http 請求（網絡請求）；</li><li>網絡進程解析響應流程； 
  <ul><li>檢查狀態碼，非 200 執行狀態碼對應的處理邏輯；</li><li>200 響應處理：檢查響應類型 Content-Type，如果是字節流類型，則將該請求提交給下載管理器，不再進行後續的渲染，如果是 html 則通知瀏覽器進程準備渲染進程進行渲染；</li></ul></li><li>準備渲染進程 
  <ul><li>瀏覽器進程檢查當前 url 是否和之前打開的渲染進程根域名是否相同，如果相同，則複用原來的進程，如果不同，則開啓新的渲染進程；</li></ul></li><li>傳輸數據、更新狀態 
  <ul><li>渲染進程準備好後，瀏覽器向渲染進程發起「提交文檔」的消息，渲染進程接收到消息和網絡進程建立傳輸數據的「管道」；</li><li>渲染進程接收完數據後，向瀏覽器發送確認消息；</li><li>瀏覽器進程接收到確認消息後更新瀏覽器界面狀態：安全、地址欄 url、前進後退的歷史狀態、更新 web 頁面；</li></ul></li></ul><span id="OSC_h4_5"></span><h4><strong>打開插件發生了什麼</strong></h4><p style="text-align:justify">插件的運行相較於頁面會有簡化</p><p style="text-align:justify">1.我們打開瀏覽器，新增一個空白 tab 頁</p><p style="text-align:center"><img src="https://pic1.zhimg.com/80/v2-fbdf73e0cfb877800ffc5a6b290cbee8_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">2.tab 欄空白處右鍵，選擇任務管理器，打開任務管理器面板</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-71e105d5e40961a19574affc5d405506_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">3.可以看到運行了 6 個進程，分別是瀏覽器進程、GPU 進程、網絡進程、存儲進程、渲染進程和擴展進程。</p><p style="text-align:center"><img src="https://pic2.zhimg.com/80/v2-fd99f7006599b3a820d7ffb6dbeaab0d_720w.webp" referrerpolicy="no-referrer"></p><ul><li>擴展進程中運行 Extension Page，主要包括 backgrount.html 和 popup.html； 
  <ul><li>backgrount.html 中沒有任何內容，是通過 background.js 創建生成，當瀏覽器打開時，會自動加載插件的 background.js 文件，它獨立於網頁並且一直運行在後台，它主要通過調用瀏覽器提供的 API 和瀏覽器進行交互；</li><li>popup.html 有內容的，跟我們普通的 web 頁面一樣，由 html、css、Javascript 組成，它是按需加載的，需要用戶去點擊地址欄的按鈕去觸發，才能彈出頁面；</li></ul></li><li>渲染進程主要運行 Web Page,當打開頁面時，會將 content_script.js 加載並注入到該網頁的環境中，它和網頁中引入的 Javascript 一樣，可以操作該網頁的 DOM Tree，改變頁面的展示效果；</li><li>GPU 進程主要為插件界面的渲染提供硬件能力支持；</li><li>網絡進程主要處理插件中的外部資源請求，比如 nexydy 插件依賴到一些外部 js；</li><li>存儲進程為插件提供本地存儲能力，比如使用 chrome.storage.local 進行持久化存儲；</li><li>瀏覽器進程在這裏更多起到橋樑作用，作為中轉可以實現 Extension Page 和 content_script.js 之間的消息通信。</li></ul><span id="OSC_h3_6"></span><h3>插件基本介紹</h3><span id="OSC_h4_7"></span><h4><strong>版本發展</strong></h4><p style="text-align:justify">chrome 插件存在三個版本，分別是<strong>Manifest V1、Manifest V2 和 Manifest V3</strong>。其中 MV1 版本已經被廢棄了，目前市面上存在 MV2 和 MV3 版本，以 MV2 為主流，在被 MV3 慢慢取代。時間線：</p><p style="text-align:center"><img src="https://pic2.zhimg.com/80/v2-950393136d16d081528b01b5fbc794f1_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify"><strong>Manifest V2 新特性</strong></p><p style="text-align:justify"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdeveloper.chrome.com%2Fdocs%2Fextensions%2Fmv2%2FmanifestVersion%2F%253Fspm%253Da2c6h.13046898.publish-article.26.c7c96ffa7eZ9TZ%2523manifest-v1-changes" target="_blank">https://developer.chrome.com/docs/extensions/mv2/manifestVersion/#manifest-v1-changes</a></p><ul><li>設置了默認的內容安全策略`script-src 'self'; object-src 'self';`。有關內容安全策略的詳細配置，可以參考 MDN 文檔；</li><li>默認情況下，插件包內的資源不再可供外部網站使用。需要通過清單 web_accessible_resources 屬性將其顯式列入白名單；</li><li>browser action API 更改；</li><li>page action API 更改；</li><li>chrome.extension 代替 chrome.self 來指向插件本身；</li><li>chrome.extension.getTabContentses 和 chrome.extension.getExtensionTabs 廢棄，使用 extension.getViews 替代；</li><li>Port.tab 廢棄，使用 runtime.Port 替代；</li></ul><p style="text-align:justify"><strong>Manifest V3 新特性</strong></p><ul><li>Service worker 替換 Background Page；</li><li>網絡請求修改廢棄 webRequest API 使用新的 declarativentrequest API 來處理；</li><li>不再允許執行遠程託管的代碼，只能執行擴展包內包含的 JS；</li><li>Promises 已經被添加到許多方法中，但仍支持回調作為替代方法；</li><li>Browser Action API 和 Page Action API 被統一為單獨的 Action API；</li><li>Web 可訪問的資源，可以只對指定的站點和擴展可用；</li><li>內容安全策略 (CSP)，現在可以為單個對象中的不同執行上下文指定單獨的 CSP；</li><li>executeScript 的變化，不能再執行任意字符串，只能執行腳本文件和函數；</li></ul><p style="text-align:justify"><strong>切換 MV3 會帶來的問題</strong></p><ul><li>由於 background 不再支持 page 頁面配置 background.html，因此也無法調用 window 對象上的 XMLHttpRequest 來構建 ajax 請求，也就是説我們不能像 V2 版本一樣，在 background.html 中使用 XMLHttpRequest 來發送請求了，而是需要使用 fetch 來獲取接口數據；</li><li>由於 service workers 是短暫的，在不使用時會終止，這意味着它們在整個插件運行期間會不斷的啓動、運行和終止，也就是不穩定的；因此我們可能需要對 V2 中 background.js 的代碼邏輯進行一些改造，以往我們會習慣將一些數據直接存儲到全局變量，比如像下面這樣：</li></ul><pre><code>// V2 background.js
let saveUserName = "";

// 其他頁面，比如 content-script 或者 popup 中存儲數據
chrome.runtime.onMessage.addListener(({ type, name }) =&gt; {
  if (type === "set-name") {
    saveUserName = name;
  }
});

// 點擊 popup 時展示數據
chrome.action.onClicked.addListener((tab) =&gt; {
  // 這裏 saveUserName 可能為空字符串
  console.log(saveUserName, "saveUserName");
});</code></pre><ul><li>因此在 V3 中，需要對這種全局變量數據進行改造，改造的方式也很簡單，就是將數據持久化保存到 storage 中，需要用到的地方隨用隨取：</li></ul><pre><code>// V3 service worker
chrome.runtime.onMessage.addListener(({ type, name }) =&gt; {
  if (type === "set-name") {
    chrome.storage.local.set({ name });
  }
});

chrome.action.onClicked.addListener(async (tab) =&gt; {
  const { name } = await chrome.storage.local.get(["name"]);
  chrome.tabs.sendMessage(tab.id, { name });
});</code></pre><ul><li>由<strong>webRequest API</strong>切換至<strong>declarativentrequest API</strong>，很多代碼邏輯需要重構；</li></ul><p style="text-align:justify"><strong>為什麼切換 MV3？</strong></p><p style="text-align:justify">從 Manifest V1 到 Manifest V2，可以看到 Chrome 想提高插件的隱私和安全，同時也優化了不少 API。而 Manifest V3 除了安全性更完善外，還在性能上下了功夫。Manifest V3 的核心非常明確，就是限制擴展對系統資源的使用。一直以來高資源佔用都是 Chrome 為人詬病的痛點，而且擴展由於在後台運行，如果出現問題，更是難以定位和管理。雖然增加了諸多限制，但 Manifest V3 還是有優點的：</p><ul><li>Service Worker 使擴展不再能常駐後台，讓擴展所佔用的資源可以被回收，降低了瀏覽器整體的開銷；</li><li>限制規則的數量，相當於控制了單一擴展在規則計算方面的資源使用上限；</li></ul><p style="text-align:justify">這些變化可以讓 Chrome 變得更加流暢，對於用戶來説是好事。</p><span id="OSC_h4_8"></span><h4><strong>展示形式</strong></h4><p style="text-align:justify">Chrome 插件有以下常見的 8 中展現形式：</p><p style="text-align:justify"><strong>browserAction(瀏覽器右上角)</strong></p><p style="text-align:justify">在瀏覽器右上角擴展程序一欄顯示，包含一個圖標、名稱和 popup</p><p style="text-align:center"><img src="https://pic4.zhimg.com/80/v2-d1c2fce69c1223a54300c9a2ea96eb9b_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:center">山海關插件 popup</p><p style="text-align:justify"><strong>pageAction(地址欄右側)</strong></p><p style="text-align:justify">pageAction 指的是在當某些特定頁面打開才顯示的圖標。在早些版本的 Chrome 是將 pageAction 放在地址欄的最右邊，左鍵單擊彈出 popup，右鍵單擊則彈出相關默認的選項菜單。而新版的 Chrome 更改了這一策略，pageAction 和普通的 browserAction 一樣也是放在瀏覽器右上角，只不過沒有點亮時是灰色的，點亮了才是彩色的，灰色時無論左鍵還是右鍵單擊都是彈出選項。</p><p style="text-align:center"><img src="https://pic4.zhimg.com/80/v2-00231bae7597112980d8851b90979347_720w.webp" referrerpolicy="no-referrer"></p><p><strong>右鍵菜單</strong></p><p style="text-align:justify">通過開發 Chrome 插件可以自定義瀏覽器的右鍵菜單，主要是通過 chrome.contextMenus API 實現，右鍵菜單可以出現在不同的上下文，比如普通頁面、選中的文字、圖片、鏈接，等等。</p><p style="text-align:center"><img src="https://pic4.zhimg.com/80/v2-21338dc0d8e7b00dd4bcd5ef3922e777_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:center">掘金插件右鍵菜單</p><p style="text-align:justify"><strong>override(覆蓋特定頁面)</strong></p><p style="text-align:justify">使用 override 可以將 Chrome 默認的一些特定頁面替換掉，改為使用擴展提供的頁面。擴展可以替代如下頁面：</p><ul><li>歷史記錄：從工具菜單上點擊歷史記錄時訪問的頁面，或者從地址欄直接輸入 chrome://history</li><li>新標籤頁：當創建新標籤的時候訪問的頁面，或者從地址欄直接輸入 chrome://newtab</li><li>書籤：瀏覽器的書籤，或者直接輸入 chrome://bookmarks</li></ul><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-c730b7492405900d5f1c3cd9131abf06_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:center">掘金插件替換了新標籤頁</p><p style="text-align:justify"><strong>devtools(開發者工具)</strong></p><p style="text-align:justify">Chrome 允許插件在開發者工具 (devtools) 上開發，主要表現在：</p><ul><li>自定義一個和多個和 Elements、Console、Sources 等同級別的面板；</li><li>自定義側邊欄 (sidebar)，目前只能自定義 Elements 面板的側邊欄；</li></ul><p style="text-align:center"><img src="https://pic2.zhimg.com/80/v2-1dca64511239cf86d0d29e29fccc403d_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:center">React Developer Tools</p><p style="text-align:justify"><strong>option(選項頁)</strong></p><p style="text-align:justify">插件的設置頁面，可以在右上角入口右鍵，有一個選項標籤</p><div style="text-align:center"><img height="610" src="https://pic1.zhimg.com/80/v2-9fc5b949ed631b4718e3af633977c024_720w.webp" width="672" referrerpolicy="no-referrer"></div><div style="text-align:center">
  &nbsp; 
</div><div style="text-align:center"><img height="506" src="https://pic1.zhimg.com/80/v2-bb3b7e3db84d9b3f544b5fd3e1295b90_720w.webp" width="880" referrerpolicy="no-referrer"></div><p style="text-align:justify"><strong>omnibox</strong></p><p style="text-align:justify">omnibox 是向用戶提供搜索建議的一種方式，可以在搜索欄輸入特定的標識然後按 Tab 進入搜索。</p><p style="text-align:center"><img src="https://pic2.zhimg.com/80/v2-670f0e06b91ac66ccda32a21a111d409_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:center">JSON Viewer 插件</p><p style="text-align:justify"><strong>桌面通知</strong></p><p style="text-align:justify">Chrome 提供了一個 chrome.notificationsAPI 以便插件推送桌面通知，暫未找到 chrome.notifications 和 HTML5 自帶的 Notification 的顯著區別及優勢。在後台 JS 中，無論是使用 chrome.notifications 還是 Notification 都不需要申請權限（HTML5 方式需要申請權限），直接使用即可。</p><p style="text-align:center"><img src="https://pic2.zhimg.com/80/v2-e9d3bc3ad06b822b37b4e3ba8543a8a5_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h4_9"></span><h4><strong>核心介紹</strong></h4><p style="text-align:justify"><strong>manifest.json</strong></p><p style="text-align:justify">這是一個 Chrome 插件最重要也是必不可少的文件，用來配置所有和插件相關的配置，必須放在根目錄。其中，manifest_version、name、version3 個是必不可少的。</p><p style="text-align:justify"><strong>Manifest V2</strong></p><pre><code>{
// 清單文件的版本，這裏先使用 2 演示
"manifest_version": 2,
// 插件的名稱
"name": "...",
// 插件的版本
"version": "1.0.0",
// 插件描述
"description": "...",
// 圖標，一般偷懶全部用一個尺寸的也沒問題
"icons": {
"16": "img/icon.png",
"48": "img/icon.png",
"128": "img/icon.png"
  },
// 會一直常駐的後台 JS 或後台頁面
"background": {
"scripts": ["js/background.js"]
  },
// 瀏覽器右上角圖標設置，browser_action、page_action、app 必須三選一
"browser_action": {
"default_icon": "img/icon.png",
"default_title": "...",
"default_popup": "popup.html"
  },
// 當某些特定頁面打開才顯示的圖標
"page_action": {
"default_icon": "img/icon.png",
"default_title": "...",
"default_popup": "popup.html"
  },
// 需要直接注入頁面的 JS
"content_scripts": [{
"matches": ["&lt;all_urls&gt;"],
"js": ["js/content-script.js"],
"css": ["css/custom.css"],
// 代碼注入的時機，document_start, document_end, document_idle，默認 document_idle
"run_at": "document_start"
    },
  ],
// 權限申請
"permissions": [
"contextMenus", // 右鍵菜單
"tabs", // 標籤
"notifications", // 通知
"webRequest", // web 請求
"webRequestBlocking",
"storage", // 插件本地存儲
"https://*/*" // 可以通過 executeScript 或者 insertCSS 訪問的網站
  ],
// 普通頁面能夠直接訪問的插件資源列表，如果不設置是無法直接訪問的
"web_accessible_resources": ["js/inject.js"],
"homepage_url": "...", // 插件主頁
"chrome_url_overrides": { // 覆蓋瀏覽器默認頁面
"newtab": "newtab.html"
  },
"options_ui": { // 插件選項頁
"page": "options.html",
"chrome_style": true
  },
"omnibox": { "keyword" : "..." }, // 向地址欄註冊一個關鍵字以提供搜索建議，只能設置一個關鍵字
"default_locale": "zh_CN", // 默認語言
"devtools_page": "devtools.html", // devtools 頁面入口，注意只能指向一個 HTML 文件，不能是 JS 文件
"content_security_policy": "...", // 安全策略
"web_accessible_resources": [ // 可以加載的資源
    RESOURCE_PATHS
  ]
}</code></pre><p style="text-align:justify"><strong>Manifest V3（僅展示與 V2 版本的不同點）</strong></p><pre><code>{
"manifest_version": 3,
"background": {
"service_worker": js/background.js"
  },
  "action": { //browser_action 和 page_action，統一為 Action
    "default_icon": "img/icon.png",
    "default_title": "這是一個示例 Chrome 插件",
    "default_popup": "popup.html"
  }
  "content_security_policy": {
    "extension_pages": "...",
    "sandbox": "..."
  },
  "web_accessible_resources": [{
    "resources": [RESOURCE_PATHS]
  }]
}</code></pre><p style="text-align:justify"><strong>content-scripts</strong></p><p style="text-align:justify">是 Chrome 插件中向頁面注入腳本的一種形式（雖然名為 script，其實還可以包括 css 的），藉助 content-scripts 我們可以實現通過配置的方式輕鬆向指定頁面注入 JS 和 CSS。content-scripts 和原始頁面共享 DOM，但不共享 JS。如要訪問頁面 JS（例如某個 JS 變量），只能通過 injected js 來實現。content-scripts 不能訪問絕大部分 chrome API，除了下面這 4 種：</p><ul><li>chrome.extension</li><li>chrome.i18n</li><li>chrome.runtime</li><li>chrome.storage</li></ul><p style="text-align:justify">這些 API 絕大部分時候都夠用了，有需要調用其它 API 的話，可以通過通信讓 background 或 service worker 來幫忙調用</p><p style="text-align:justify"><strong>background</strong></p><p style="text-align:justify">後台是一個常駐的頁面，它的生命週期是插件中所有類型頁面中最長的，它隨着瀏覽器的打開而打開，隨着瀏覽器的關閉而關閉，所以通常把需要一直運行的、啓動就運行的、全局的代碼放在 background 裏面。background 的權限非常高，幾乎可以調用所有的 Chrome 擴展 API（除了 devtools），而且它可以無限制跨域，可以跨域訪問任何網站而無需要求對方設置 CORS。background 的概念在 MV3 版本中變為了 service worker，區別在於生命週期變短了，service worker 是短暫的基於事件的腳本，所以不適合用來保存全局變量。</p><p style="text-align:justify"><strong>popup</strong></p><p style="text-align:justify">popup 是點擊右上角圖標時打開的一個小窗口網頁，焦點離開網頁就立即關閉，一般用來做一些臨時性的交互。權限級別和 background 差不多，就是生命週期比較短。</p><p style="text-align:justify"><strong>injected-script</strong></p><p style="text-align:justify">chrome 插件中其實沒有 injected-script 這一概念，這是開發者們在開發過程中衍生出來的一種概念，指的是通過 DOM 操作的方式向頁面注入的一種 JS。因為 content-script 無法訪問頁面中的 JS，雖然可以操作 DOM，但是 DOM 卻不能調用它，也就是無法在 DOM 中通過綁定事件的方式調用 content-script 中的代碼。但是在網頁中增加一個按鈕來調用插件的能力是一個比較常見的需求，所以誕生了 injected-script。</p><span id="OSC_h4_10"></span><h4><strong>插件通信機制</strong></h4><p style="text-align:justify">講通信機制之前，先回顧一下插件中存在的腳本類型。Chrome 插件的 JS 主要可以分為這 5 類：injected script、content-script、popup js、background js 和 devtools js。</p><p style="text-align:justify"><strong>權限對比</strong></p><table><tbody><tr><td style="text-align:justify">JS 種類</td><td style="text-align:justify">可訪問的 API</td><td style="text-align:justify">DOM 訪問情況</td><td style="text-align:justify">JS 訪問情況</td><td style="text-align:justify">直接跨域</td></tr><tr><td style="text-align:justify">injected</td><td style="text-align:justify">和普通 JS 無任何差別，不能訪問任何擴展 API</td><td style="text-align:justify">可以訪問</td><td style="text-align:justify">可以訪問</td><td style="text-align:justify">不可以</td></tr><tr><td style="text-align:justify">content</td><td style="text-align:justify">只能訪問 extension、runtime 等部分 API</td><td style="text-align:justify">可以訪問</td><td style="text-align:justify">不可以</td><td style="text-align:justify">不可以</td></tr><tr><td style="text-align:justify">popup</td><td style="text-align:justify">可訪問絕大部分 API，除了 devtools 系列</td><td style="text-align:justify">不可直接訪問</td><td style="text-align:justify">不可以</td><td style="text-align:justify">可以</td></tr><tr><td style="text-align:justify">background</td><td style="text-align:justify">可訪問絕大部分 API，除了 devtools 系列</td><td style="text-align:justify">不可直接訪問</td><td style="text-align:justify">不可以</td><td style="text-align:justify">可以</td></tr><tr><td style="text-align:justify">devtools</td><td style="text-align:justify">只能訪問 devtools、extension、runtime 等部分 API</td><td style="text-align:justify">可以</td><td style="text-align:justify">可以</td><td style="text-align:justify">不可以</td></tr></tbody></table><p style="text-align:justify">通過權限對比可以看到，每一種腳本在權限上都不相同，所以各種腳本間的相互通信就非常重要，這也是插件能夠實現眾多功能的基礎。</p><p style="text-align:justify"><strong>通信概覽</strong></p><table><tbody><tr><td style="text-align:justify">&nbsp;</td><td style="text-align:justify">injected</td><td style="text-align:justify">content</td><td style="text-align:justify">popup</td><td style="text-align:justify">background</td></tr><tr><td style="text-align:justify">injected</td><td style="text-align:justify">-</td><td style="text-align:justify">window.postMessage</td><td style="text-align:justify">-</td><td style="text-align:justify">-</td></tr><tr><td style="text-align:justify">content</td><td style="text-align:justify">window.postMessage</td><td style="text-align:justify">-</td><td style="text-align:justify">chrome.runtime.sendMessage chrome.runtime.connect</td><td style="text-align:justify">chrome.runtime.sendMessage chrome.runtime.connect</td></tr><tr><td style="text-align:justify">popup</td><td style="text-align:justify">-</td><td style="text-align:justify">chrome.tabs.sendMessage chrome.tabs.connect</td><td style="text-align:justify">-</td><td style="text-align:justify">chrome.extension. getBackgroundPage</td></tr><tr><td style="text-align:justify">background</td><td style="text-align:justify">-</td><td style="text-align:justify">chrome.tabs.sendMessage chrome.tabs.connect</td><td style="text-align:justify">chrome.extension.getViews</td><td style="text-align:justify">-</td></tr><tr><td style="text-align:justify">devtools</td><td style="text-align:justify">chrome.devtools. inspectedWindow.eval</td><td style="text-align:justify">-</td><td style="text-align:justify">chrome.runtime.sendMessage</td><td style="text-align:justify">chrome.runtime.sendMessage</td></tr></tbody></table><span id="OSC_h3_11"></span><h3>一些常見插件的實現思路</h3><span id="OSC_h4_12"></span><h4><strong>埋點日誌檢測</strong></h4><p style="text-align:justify">一般業務中都會進行一些埋點上報，埋點的本質就是發送一些帶特定參數的請求，前端本地調試的時候想實時查看埋點信息通常需要去查看上報接口的入參，或者去對應的埋點平台查看，這樣非常不方便。基於這個，我們可以使用插件來幫助我們快速的可視化查看埋點信息：</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-d9e6e16e3db7cd8922d8b437219a96e2_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h4_13"></span><h4><strong>頁面注入小工具</strong></h4><p style="text-align:justify">插件的另一個常見用法就是往頁面注入一些工具代碼，比如去除頁面廣告工具。</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-0de602a3e05ff59d5e0b6f1450c44d76_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_14"></span><h3>總結</h3><ul><li>隨着瀏覽器不斷的發展，Chrome 逐漸把一些基礎服務獨立出來，類似於一個跨平台的線上操作系統。</li><li>Chrome 插件提供的能力很豐富，比如代碼注入、跨域請求、持久化方案、各種通信機制等，開發者可以發揮想象，組裝不同能力以適應不同場景的需求，基本可以實現現代 web 所能支持的所有功能。</li><li>Chrome 插件 MV2 版本將在 24 年 1 月全面廢棄，需要儘快遷移至 MV3 版本。</li></ul><span id="OSC_h3_15"></span><h3><strong>參考資料：</strong></h3><p>《瀏覽器工作原理與實踐》：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Ftime.geekbang.org%2Fcolumn%2Fintro%2F100033601%253Fspm%253Da2c6h.13046898.publish-article.27.c7c96ffa7eZ9TZ%2526tab%253Dcatalog" target="_blank">https://time.geekbang.org/column/intro/100033601?tab=catalog</a></p><p>《Inside look at modern web browser》：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdeveloper.chrome.com%2Fblog%2Finside-browser-part1%2F%253Fspm%253Da2c6h.13046898.publish-article.28.c7c96ffa7eZ9TZ" target="_blank">https://developer.chrome.com/blog/inside-browser-part1/</a></p><p>《圖解瀏覽器的基本工作原理》：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F47407398%3Fspm%3Da2c6h.13046898.publish-article.29.c7c96ffa7eZ9TZ" target="_blank">https://zhuanlan.zhihu.com/p/47407398</a></p><p>《Welcome to Manifest V3》：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdeveloper.chrome.com%2Fdocs%2Fextensions%2Fmv3%2Fintro%2F%253Fspm%253Da2c6h.13046898.publish-article.30.c7c96ffa7eZ9TZ" target="_blank">https://developer.chrome.com/docs/extensions/mv3/intro/</a></p><p>MDN 文檔：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdeveloper.mozilla.org%2Fzh-CN%2Fdocs%2FWeb%2FHTTP%2FCSP%253Fspm%253Da2c6h.13046898.publish-article.31.c7c96ffa7eZ9TZ" target="_blank">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP</a>web_accessible_resources：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fdeveloper.chrome.com%2Fdocs%2Fextensions%2Fmv2%2Fmanifest%2Fweb_accessible_resources%2F%253Fspm%253Da2c6h.13046898.publish-article.32.c7c96ffa7eZ9TZ" target="_blank">https://developer.chrome.com/docs/extensions/mv2/manifest/web_accessible_resources/</a></p><p style="text-align:justify">作者｜閔子</p><p style="text-align:justify"><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.aliyun.com%2Farticle%2F1381666%3Futm_content%3Dg_1000385322" target="_blank">原文鏈接</a></strong></p><p style="text-align:justify"><strong>本文為阿里雲原創內容，未經允許不得轉載。</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 06 Dec 2023 07:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/yunqi/blog/10319584</guid>
            <link>https://my.oschina.net/yunqi/blog/10319584</link>
            <author>
                <![CDATA[阿里云云棲號]]>
            </author>
        </item>
    </channel>
</rss>
