<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 17 Nov 2023 21:50:06 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[鮮衣怒馬少年時｜GreptimeDB 開源一週年回顧]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>開源故事</h2><p>也許在進入軟件行業的第一天，我們就已經與開源結緣。</p><p>很難想象沒有開源的世界會是什麼樣子，非要舉個例子的話，就好比菜譜不再公開，那所有人都只能自研，説不好連麻婆豆腐都需要遠赴蜀地才能品上一品。正因為開源，我們得以共享珍貴的的食譜，所以也願意將自研的食譜無私貢獻出去。</p><p>作為一個現代的軟件從業者，怎麼能不在開源的世界裏有些許經驗呢？Greptime 三位創始人從職業早期就融入到了開源社區中，在受益的過程中也不斷反哺開源，各自負責並維護了多個知名項目（如 SOFAJRaft, handlebars-rust, aviatorscript），有些項目本身的關注度和影響力都超過了 GreptimeDB。</p><p>在不斷接觸開源的過程中，一個有趣又大膽的想法在創始人莊曉丹心裏如切如磋，如琢如磨：「打造一款世界級的基礎軟件」。他和另一位創始人馮家純在螞蟻集團實踐 AIOps 智能運維時，因為市面並沒有一款滿足需求的超大規模時序數據平台而選擇了自研，同時來自滴滴的另一位創始人孫寧也看到了時序數據存儲、分析對於車聯網的重要價值。所謂念念不忘，必有回想，三人一拍即合，這個「世界級的基礎軟件」的團隊雛形就這麼誕生了——打造一款面向未來且更貼近市場需求的時序數據庫。</p><p>這種對產品品質高度追求的熱切和渴望，不僅來自於創始人本身，也來自於整個 Greptime 團隊。這裏的每一個小夥伴都身懷絕技，有人放棄高薪埋頭苦幹，也有人從技術轉向市場，更有人身兼技術、市場和運營多職⋯⋯底層的基礎軟件本身就很難做，加上開源更是 buff 疊滿，沒點情懷的人，真的不敢做開源。</p><p>正是這羣少而精專的人，成就了現在的 Greptime（格睿科技），基於開源的 GreptimeDB 不斷衍生和迭代出了商業化版本的時序數據庫 GreptimeCloud 和可觀測的 AI 工具 GreptimeAI 兩款產品。</p><h3>我們還做了一個視頻，和 GreptimeDB 回顧一週年的成長曆程🎥（感興趣的小夥伴請自行尋找視頻 🔍）</h3><h2>開源數據</h2><p><img src="https://oscimg.oschina.net/oscnet/up-f88e430b4ec657a770973ec32c4d8a8bcab.png" alt="" referrerpolicy="no-referrer"></p><h2>開源歷程（版本發佈）</h2><p>GreptimeDB 自去年宣佈開源後歷經 v0.1 到 v0.4，每一個版本的發佈都意味着 GreptimeDB 又一次的成長和完善。從框架構建到分佈式能力的實現，再到新引擎 Mito 的重大革新，GreptimeDB 一直在路上：</p><p><img src="https://oscimg.oschina.net/oscnet/up-44a9791c096b6701e22a6ada7096cbe0d0e.png" alt="" referrerpolicy="no-referrer"></p><ul><li><p>2023.3.8 GreptimeDB v0.1 聚焦單機功能</p></li><li><p>2023.4.19 GreptimeDB v0.2 單機功能強化，雲分佈式開啓</p><ul><li>完善單機功能；</li><li>PromQL 兼容性提升至 50%；</li><li>提出 Procedure 框架；</li><li>為 Cloud 和，分佈式鋪墊基礎。</li></ul></li><li><p>2023.6.7 GreptimeDB v0.3 分佈式初版：查詢性能優化和穩定性增強</p><ul><li>分佈式性能優化；</li><li>查詢能力提升； -穩定性增強。</li></ul></li><li><p>2023.10.10 GreptimeDB v0.4 寫入查詢能力提升，查詢性能提升 5~20 倍</p><ul><li>新版存儲引擎 Mito2；</li><li>穩定性優化；</li><li>體驗優化；</li><li>PromQL 兼容性提升至 70% 以上。</li></ul></li></ul><p>GreptimeDB 還將繼續穩定更新版本，和社區的大家一起不斷向前。</p><p>不僅有 GreptimeDB，我們還有 GreptimeCloud 和 GreptimeAI 正在公測，歡迎到官網體驗並跟我們聊聊您的使用感受。下面具體明晰 Greptime 系列產品，請看 👀</p><blockquote><p>GreptimeCloud 基於開源的 GreptimeDB，為用戶提供全託管的 DBaaS，能夠與可觀測性、物聯網等領域結合的應用產品結合。利用雲提供軟件和服務，可以達到快速的自助開通和交付，標準化的運維支持，和更好的資源彈性。</p></blockquote><blockquote><p>GreptimeAI 是為 LLM 應用量身定製的可觀測性解決方案，開發者可以通過該方案全面、深入地瞭解應用的成本、性能、流量和安全情況，在保證低成本和高性能的同時提供高效可靠的分析能力，同時保留了時序數據庫的靈活性。</p></blockquote><h2>開源意義</h2><p>「又是做數據庫的！」這是我們在技術展會聽到的最多的一句話。做數據庫的廠商確實很多，但也説明這個缺口還沒有被補足，大家的產品在性能方面都各有欠缺，那開源的價值也就出現了：巨大的需求激生了市面上層出不窮的解決方案，每一家廠商都力圖在性能賽道上超越對方。</p><p>開源對於 GreptimeDB 來説，意味着與世界各地誌同道合的人共同探索未知，拼湊出技術的全貌。它不僅讓我們的產品在廣泛的用戶和開發者中得到錘鍊，而且構建了一個共同維護和持續改進的技術社區。在這裏，每個人的聲音都能被聽見，每行代碼都匯聚着智慧的火花。這正是開源精神閃耀的時刻，因為它不單是關於代碼的開放，更是一種思維的開放。</p><p>我們做開源，也做商業化，回顧這一年，我們的開源產品 GreptimeDB 和商業化產品 GreptimeCloud 始終是共同進步的，都凝聚了社區的智慧和努力。所以在這個特別的日子，我們不單是在慶祝一個時間節點，更是在讚頌一種開放、合作、共贏的開源精神。</p><h2>開源社區</h2><h3>Greptime social 版</h3><p>開源一年的時間裏，我們走進一個個技術聚會去尋找志同道合的夥伴：在全球 AI 開發者先鋒大會上研討前沿；在慶祝 SOFA 五週年時分享開源之路的感悟；在 Qcon 大會中探討軟件的未來；在 WOT 全球技術創新大會裏展望明天；在 Rust 中國大會上討論 Rust 的可能性；在 COSCon'23 和開源人共話開源意義；在 KubeCon + CloudNativeCon 和來自全球的業內人士探討代碼（點擊會議名稱即可跳轉相關的參會詳情哦 🎉）⋯⋯是代碼匯聚了我們，也是開源連接了我們，見證了我們的成長。</p><p><img src="https://oscimg.oschina.net/oscnet/up-be7d81d1c9c46c50bc46397ef9e37474317.png" alt="" referrerpolicy="no-referrer"></p><h3>Greptime 主辦方版</h3><p>除了融入業界，我們還主辦了以自己社區和產品為主的中/英文線上 Meetup，聯合 EMQX/KubeBlocks/Pika 舉辦了線下 Meetup 贏得了業界同行的共鳴與支持，加深了我們與社區的聯繫（Meetup 回顧請看 Greptime 視頻號）。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f8177361887abb20aafb27ca49cffd0b074.png" alt="" referrerpolicy="no-referrer"></p><h3>Greptime 拓展版</h3><p>在 GreptimeDB 披荊斬棘的過程中，源源不斷地加入了近 50 個 Contributors，其中還晉升了 2 個 Committers ——來自英國的 Eugene 和日本的 Niwaka 出於對 TSDB 的關注和熱愛 🫶 源源不斷地為 GreptimeDB 貢獻了極有價值的 PR，讓我們的框架不斷完善，功能也將在未來趨於完備。</p><p>受到地理優勢的助力，我們的 Contributors 主要來源於中國，也有來自英國、新西蘭和荷蘭等其他國家的貢獻者。同國家的技術朋友對我們的支持和認可令人可親，國外友人的支持也讓我們對自己的產品和正在做的事充滿信心。除此之外，印度和日本的 Contributor 也讓我們看到了時序數據庫之於全球基礎軟件的意義。更榮幸的是我們收穫了非洲尼日利亞技術朋友的關注和代碼支持，並在這個過程中交流愉快。</p><p>Greptime 始終歡迎全球對 Rust、TSDB 和 Infra 感興趣的技術客瞭解我們、加入我們，並和我們攜手共建美好開源社區，和好玩的人一起做有意思的事～</p><p>前路漫漫，我們不會止步，Greptime 將繼續參與行業會議，舉辦更多形式的交流活動，與你一同分享我們對產品的思考，堅持我們對技術的追求，鍛鑄更好的產品。在這條不斷開拓的路上，我們誠邀你攜手同行，與 GreptimeDB 共同成長。</p><h1>Greptime 社媒全新板塊和大家 say hi 👋</h1><p><strong>【遇見格睿 💜】</strong> 曾有參與「開源之夏」&amp; Greptime 的同學成功完成了項目試煉，最終選擇加入 Greptime 繼續實習，也有很多關注 Greptime 的人在大大小小的會議中和我們快樂面基，更有來自大洋彼岸和同在華夏的朋友們持續關注 Greptime 的每一次進步······大家都是見證了 Greptime 誕生和成長的摯友，在如此多開源和初創的社區裏面剛好相遇相識，在科技交匯的宇宙裏找到共鳴的瞬間，嗯，怎麼不算有緣呢？</p><p>或許你也聽多了 Greptime 成長史，所以不妨來點新鮮的👂你是如何得知 Greptime 的呢？你為什麼會關注我們呢？你有參與到 Greptime 的社區貢獻中來嗎？或者你對 Greptime 有什麼「驚鴻一瞥」的記憶嗎？</p><p>現在我們誠摯地邀請你聊聊「你與 Greptime」的故事，我們將會把你的故事整理成文稿，分享給更多的人（當然你要是自己動筆敍寫就更棒了👍）。歡迎添加小助手微信（greptime，懶得手動搜索的朋友請滑到文末掃碼添加）講出你的故事，審核通過即可獲得我們的限量版 Greptime 文創大禮包（悄悄説是真的限量版哦🎁）。</p><p>Greptime 開源一週年之際，我們想聽聽你的聲音，誠邀你講述「遇見格睿」的獨家故事。</p><h2>開源未來</h2><p>GreptimeDB 將繼續忠實開源的初心，真誠地歡迎全球的技術人員和開源朋友一起合作。我們深知，開源不僅僅是一個代碼倉庫的開放，更是一個技術、想法和創意交流的平台，歡迎任何一個願意給 GreptimeDB 提意見和貢獻代碼的人，而我們也將在以下幾方面繼續努力：</p><ul><li><p>繼續積極推進 GreptimeDB 的核心功能完善，與社區一起完成更多功能的孵化和落地，增強系統的功能和穩定性，為用戶提供更加完備的數據庫工具；</p></li><li><p>和社區的大家真誠合作，增加交流，鼓勵更多的開發者參與到 GreptimeDB 的構建中來；</p></li><li><p>着重構建一個與 GreptimeDB 相關的工具、插件和服務的生態，提供更豐富的整合方案和應用場景，幫助開發者和企業更容易地將 GreptimeDB 應用於實際的業務中；</p></li><li><p>為了更好地反映社區意見和需求，我們將逐步引入開放治理模型，與更多的開發者和社區參與者面對面交流；</p></li></ul><p>開源的道路是一條充滿挑戰與機遇的旅程，我們相信並希望通過持續的努力和不懈的追求與全球的開源同伴們共創開源軟件的美好未來。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 10:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6839317/blog/10143939</guid>
            <link>https://my.oschina.net/u/6839317/blog/10143939</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CLion Nova 強勢登陸 C 和 C++ 開發領域，使用 ReSharper C++/Rider C++ 語言引擎！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><p style="text-align: center;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.1836734693877551" src="https://oscimg.oschina.net/oscnet/4ee8e558-caa4-423e-981b-c76935ea8387.gif" data-type="gif" data-w="637" style="" referrerpolicy="no-referrer"></p><section style="font-size: 16px;color: rgb(62, 62, 62);line-height: 1.6;letter-spacing: 0px;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>摘要</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">最近，我們宣佈推出 CLion 的一個免費早期預覽版，<strong>它使用 ReSharper C++/Rider C++ 語言引擎而不是 CLion 的「舊版」引擎</strong>。預覽版可以通過我們的專屬 <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Ftoolbox-app%2F" textvalue="Toolbox App" linktype="text" imgurl="" tab="outerlink" data-linktype="2">Toolbox App</a> 源獲取。2024 年，根據反饋結果，CLion Nova 將合併到 CLion 中。在此之前，預覽版可免費使用，並與通常的 CLion (Classic) 並行安裝。</p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-ratio="0.562962962962963" data-s="300,640" src="https://oscimg.oschina.net/oscnet/fccf280f-4ee1-407c-8ece-d282b99a783b.png" data-type="png" data-w="1080" style="" referrerpolicy="no-referrer"></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>史前時期</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">JetBrains 的第一個 C++ 引擎為 AppCode 而設計，這是我們面向 iOS 和 macOS 開發者提供的 IDE。它為 IntelliJ 平台的一部分，最初使用 Java 編寫，後來也使用 Kotlin 編寫。引擎的方式和架構可以很好地服務於基於 IntelliJ 的 IDE 中的許多語言，然而，這種設計並不是特別適合 C++ 語言。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">為了更快地與 C++ 的發展保持一致，並分離引擎和 IDE 進程，基於 clangd 的引擎後來被添加到 CLion 中。這個引擎基於我們的 clangd 自定義分支，可以檢測警告和錯誤並在編輯器中顯示，建議快速修復，以及執行高亮顯示、補全和特定導航操作。它也用於<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fclion%2F2023%2F11%2Fstriving-for-better-cpp-code-part-i-data-flow-analysis-basics%2F" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2" target="_blank">數據流分析</a>和 MISRA 檢查等。同時，CLion 的「舊版」引擎負責其他代碼洞察功能，例如重構。我們的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fclion%2F2023.3%2Fc-support.html" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CLion 文檔</a>提供了詳細的「職責列表」。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">clangd 有很多優勢，但對於項目級重構和操作，它的作用不是很大。我們設計了一個基於 clangd 的索引器原型，甚至在它之上實現了一個實驗性 <em style="font-size: inherit;color: inherit;line-height: inherit;">Find Usages</em>（查找用法），您可以<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fclion%2F2023.3%2Ffind-highlight-usages.html%23usages-clangdindexer" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">在 CLion 中啓用和評估該功能</a>。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">JetBrains 為 C++ 開發的另一個替代方案是 ReSharper C++ 和 Rider（用於 C++ 遊戲開發）中使用的語言引擎。還有一種通信協議，使 Rider 等基於 IntelliJ 的 IDE 能夠與充當語言引擎的獨立後端進程進行通信。我們現在也已將此協議和原始引擎適配到 CLion！</p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>目標</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">在這個新的實驗性解決方案中，我們重點關注 IDE 的響應性、準確度和性能。我們有兩個主要目標：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>解決 CLion 因使用「舊版」引擎而導致的長期存在的<strong style="font-size: inherit;color: inherit;line-height: inherit;">性能</strong>和<strong style="font-size: inherit;color: inherit;line-height: inherit;">質量</strong>問題。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">統一我們所有 C++ 工具的用戶體驗，這些工具包括 CLion、Rider 和 ReSharper C++。</span></p></li></ul><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.704331450094162" src="https://oscimg.oschina.net/oscnet/92e5374c-f4d1-4774-8f6c-7296bf6a1db8.png" data-type="png" data-w="1062" style="font-size: inherit;color: inherit;line-height: inherit;margin-right: auto;margin-left: auto;" title="CLion Nova 介紹" referrerpolicy="no-referrer"></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">我們將新的實驗性預覽版命名為 <strong style="font-size: inherit;color: inherit;line-height: inherit;">CLion Nova</strong>，而當前版本的 CLion 為 <strong style="font-size: inherit;color: inherit;line-height: inherit;">CLion Classic</strong>。未來，我們計劃將 CLion Nova 合併到 CLion Classic 中。<strong>設想中沒有新產品。</strong></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>優勢和增強</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 仍然使用兩種 C++ 語言引擎：<strong>一種是基於 clangd 的引擎，另一種是 ReSharper C++/Rider 使用的引擎。</strong>CLion Classic 的大部分功能在 CLion Nova 中應該完全相同。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 在性能方面的顯著優勢：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">更快的高亮顯示速度，特別是對於增量代碼更新</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">響應更快的 UI</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>更快的 <em style="font-size: inherit;color: inherit;line-height: inherit;">Find Usages</em>（查找用法）</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">重構中的凍結和掛起顯著減少</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">更快的測試索引</span></p></li></ul><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">這種統一還為 CLion Nova 帶來了 CLion Classic 功能集中不存在的新功能：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>新的重構，例如 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23intro_field" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Introduce Field</a>（引入字段）、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23namespace_alias" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Introduce Namespace Alias</a>（引入命名空間別名）、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23using_enum" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Introduce using Enumeration</a>（引入 using 枚舉），以及 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FRefactorings_for_CPP.html%23convert_to_scoped" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Convert to Scoped Enumeration</a>（轉換為作用域枚舉）。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>新的檢查、快速修復和意圖，例如冗餘限定符、將 <code style="font-size: inherit;line-height: inherit;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;color: rgb(233, 105, 0);background: rgb(248, 248, 248);"><span style="color: rgb(0, 0, 0);">auto</span></code> 替換為顯式類型聲明，以及 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FCode_Style_Assistance_in_CPP.html%23sort_includes" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;" data-linktype="2"><code style="font-size: inherit;line-height: inherit;padding: 2px 4px;border-radius: 4px;margin-right: 2px;margin-left: 2px;color: rgb(233, 105, 0);background: rgb(248, 248, 248);"><span style="font-size: inherit;line-height: inherit;color: rgb(0, 0, 0);">#include</span></code> 指令的排序</a>。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>新的代碼提示，例如<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FSettings_Inlay_Hints_CPP_Other.html%23preprocessor-directive" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">預處理程序指令提示</a>和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fresharper%2FInline_Parameter_Name_Hints.html%23push-to-hint-mode" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Push-to-Hint 模式</a>。</p></li></ul><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.3648148148148148" src="https://oscimg.oschina.net/oscnet/d318a7be-02c5-4e1a-8569-3628ad96f760.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;" title="include 排序" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     include 排序 
   </figcaption></figure><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>顯著差異</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">與 CLion Classic 不同，CLion Nova 不使用 <strong style="font-size: inherit;color: inherit;line-height: inherit;">clangd</strong> 來實現代碼補全或高亮顯示等核心 IDE 功能。不過，JetBrains 的 clangd 分支仍然與新引擎一起運行，用於各種任務（ClangFormat、Clang-Tidy、MISRA 檢查、數據流分析等）。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Classic 用戶開始使用 CLion Nova 時將獲得的新體驗：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">當用戶輸入時，IDE 的一些反應方式有所改變。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">與代碼洞察功能相關的某些 UI 元素和設置可能看起來不一樣，或位於不常用的位置。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">某些與代碼相關的設置在 CLion Nova 中可能具有不同的默認值。首次啓動時，CLion Nova 將從 CLion Classic 遷移一些項目特定和應用程序特定的設置，但不是全部。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">在不同語言配置（例如， 調試/發佈）之間切換可能需要更多時間讓代碼洞察引擎跟上進度。也沒有選項用於切換每個文件的解析上下文。</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">ReSharper C++ 僅適用於 Windows，而 Rider 可跨平台。不過，ReSharper C++/Rider 引擎可能無法像對 Windows 那樣無縫支持非 Windows 環境。如果您遇到這樣的情況，請向我們報告。</span></p></li></ul><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.762962962962963" src="https://oscimg.oschina.net/oscnet/2b2c29f3-24fb-470d-9e9c-e38b20669042.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;margin-right: auto;margin-left: auto;" title="類型轉換提示設置" referrerpolicy="no-referrer"><figcaption style="line-height: inherit;margin-top: 10px;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     類型轉換提示設置 
   </figcaption></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">當前缺少的功能的列表：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><strong style="font-size: inherit;color: inherit;line-height: inherit;">工具鏈</strong>：在 CLion 中，可以通過多個選項設置<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fhelp%2Fclion%2F2023.3%2Fremote-development.html" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">遠程工作</a>。CLion Nova 支持使用本地源進行遠程工作，但使用瘦客戶端（Gateway）的遠程工作尚不可用。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><strong style="font-size: inherit;color: inherit;line-height: inherit;">語言</strong>：Objective-C 語言、CUDA（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FRSCPP-613" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">RSCPP-613</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-26144" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CPP-26144</a>）和某些針對特定供應商的編譯器擴展程序還不受支持。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><em style="font-size: inherit;color: inherit;line-height: inherit;">Simplify statement</em>（簡化語句）等意圖和快速修復目前還不受支持 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35879" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CPP-35879</a>)。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p>一些不太熱門的重構也未加入。我們計劃以後重新引入 <em style="font-size: inherit;color: inherit;line-height: inherit;">Move</em>（移動）(<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35867" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CPP-35867</a>) 和 <em style="font-size: inherit;color: inherit;line-height: inherit;">Inline Parameter</em>（內聯形參）重構 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FCPP-35868" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">CPP-35868</a>)。</p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">JetBrains 的 AI Assistant 尚不適用於 CLion Nova。</span></p></li></ul><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>如何安裝 CLion Nova</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 是免費的早期預覽版，只能通過 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Ftoolbox-app%2F" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">Toolbox App</a> 獲取：</p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="1.0327868852459017" src="https://oscimg.oschina.net/oscnet/65c5f047-8c38-49bd-8580-0957ee2b9c39.png" data-type="png" data-w="854" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;" title="Toolbox App" referrerpolicy="no-referrer"></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 是搶先體驗預覽版，因此需要登錄，但您可以免費使用，直到 CLion Nova 合併到 CLion 中。我們將定期通過 Toolbox App 發佈 CLion Nova 更新。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;"><strong>與 CLion Classic 相比，CLion Nova 具有響應更快的 UI、更好的整體 IDE 性能和更高的功能質量，特別是 C++ 代碼重構。</strong>立即試用，並告訴我們您的想法！</p><p><span style="font-size: inherit;color: inherit;line-height: inherit;"><br></span></p><section style="font-size: 16px;"><section style="margin-right: 0%;margin-left: 0%;text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;padding-right: 10px;padding-left: 10px;background-color: rgb(12, 176, 199);"><section style="display: inline-block;vertical-align: middle;"><section style="display: inline-block;vertical-align: middle;color: rgb(215, 251, 255);padding-right: 2px;font-size: 19px;"><p><strong>分享您的反饋</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: 0.8em;height: 0.8em;border-top: 0.2em solid rgb(215, 251, 255);border-right: 0.2em solid rgb(215, 251, 255);transform: rotate(45deg);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">CLion Nova 標誌着一個巨大變化，需要在多種環境中接受細緻的測試。因此，我們需要您的幫助！鑑於您有多種環境和用例，我們希望您測試 CLion Nova 並與我們分享您的體驗。</p><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">我們特別感興趣的是您對以下問題的想法：</p><ul style="font-size: inherit;color: inherit;line-height: inherit;padding-left: 32px;" class="list-paddingleft-1"><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">與 CLion Classic 相比，什麼在 CLion Nova 中對您的項目效果更好？</span></p></li><li style="font-size: inherit;color: inherit;line-height: inherit;margin-bottom: 0.5em;"><p><span style="font-size: inherit;color: inherit;line-height: inherit;">什麼中斷了您的工作流並阻止您在 CLion Nova 中使用 IDE？這些中斷是 CLion Nova 特有的，還是 CLion Classic 中也存在？</span></p></li></ul><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">使用 CLion Nova 一段時間後，我們會請求您提交反饋表。希望您能抽出時間填寫並提交反饋表！</p><figure style="font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-ratio="0.6601851851851852" src="https://oscimg.oschina.net/oscnet/0128aea9-7303-4ade-9eb7-435b1e2707fc.png" data-type="png" data-w="1080" style="font-size: inherit;color: inherit;line-height: inherit;display: block;margin-right: auto;margin-left: auto;" title="反饋" referrerpolicy="no-referrer"></figure><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">當然，我們的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissues%2FCPP" target="_blank" rel="noopener" style="font-size: inherit;line-height: inherit;color: rgb(30, 107, 184);" data-linktype="2">問題跟蹤器</a>也可以接收反饋，只是請註明您的問題與 CLion Nova 而不是 CLion Classic 有關。</p><section style="font-size: 16px;"><a title="https://www.jetbrains.com.cn/toolbox-app/" formlinkparm="[{&quot;href&quot;:&quot;https://www.jetbrains.com.cn/toolbox-app/&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Ftoolbox-app%2F" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="2"><section style="margin-top: 0.5em;margin-bottom: 0.5em;text-align: center;"><section style="display: inline-block;border-radius: 5px;padding-right: 0.75em;padding-left: 0.75em;border-width: 1px;border-style: solid;border-color: rgba(0, 0, 0, 0.2);background-color: rgb(247, 247, 247);color: rgb(69, 69, 69);line-height: 1.9;font-size: 15px;"><p>通過 Toolbox App 獲取</p></section></section></a></section><p style="font-size: inherit;color: inherit;line-height: inherit;margin-top: 1.5em;margin-bottom: 1.5em;">您的 CLion 團隊<br>JetBrains<br><em style="font-size: inherit;color: inherit;line-height: inherit;">The Drive to Develop</em></p></section><section style="font-size: 16px;"><section style="transform: perspective(0px);transform-style: flat;" powered-by="xiumi.us"><section style="margin-top: 10px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;transform: rotateY(180deg);"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="transform: perspective(0px);transform-style: flat;" powered-by="xiumi.us"><section style="transform: rotateY(180deg);"><section style="color: rgb(125, 125, 125);font-size: 13px;text-align: right;"><p><strong>本博文英文原作者：Anastasia Kazakova</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section></section></section><section style="" powered-by="xiumi.us"><p style="text-wrap: wrap;"><br></p><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin-top: 10px;margin-bottom: 20px;" powered-by="xiumi.us"><section style="display: inline-block;width: auto;vertical-align: top;align-self: flex-start;flex: 0 0 auto;border-style: solid;border-width: 1px;min-width: 5%;height: auto;box-shadow: rgb(12, 176, 199) 6px 6px 0px 0px;padding: 8px;"><section style="text-align: left;" powered-by="xiumi.us"><section style="text-align: justify;font-size: 17px;"><p style="text-wrap: wrap;"><strong>CLion 相關閲讀</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section><a title="https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247496559&amp;idx=2&amp;sn=5eb355611f667a64838432ac4cb5129e&amp;chksm=c08b9e31f7fc172780f20ce7d3485fd7779f6461f8a5bc5adcc724e92304a287ea7f3d7c0709&amp;token=829715172&amp;lang=zh_CN&amp;scene=21#wechat_redirect" formlinkparm="[{&quot;href&quot;:&quot;https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247496559&amp;idx=2&amp;sn=5eb355611f667a64838432ac4cb5129e&amp;chksm=c08b9e31f7fc172780f20ce7d3485fd7779f6461f8a5bc5adcc724e92304a287ea7f3d7c0709&amp;token=829715172&amp;lang=zh_CN&amp;scene=21#wechat_redirect&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247496559%26idx%3D2%26sn%3D5eb355611f667a64838432ac4cb5129e%26chksm%3Dc08b9e31f7fc172780f20ce7d3485fd7779f6461f8a5bc5adcc724e92304a287ea7f3d7c0709%26token%3D829715172%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="1"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;"><section style="vertical-align: middle;display: inline-block;line-height: 0;box-shadow: rgb(0, 0, 0) 2px 2px 8px -3px;border-radius: 5px;overflow: hidden;"><span class="js_jump_icon h5_image_link"><img class="rich_pages wxw-img" data-ratio="0.3037037037037037" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a16279ec-e81d-4d66-9ed1-ad633d1ef51f.jpg" data-type="jpeg" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></span></section></section></a><a title="https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247504083&amp;idx=1&amp;sn=6f131091a5ffcd1b1135cbbaaff43764&amp;chksm=c08bbd8df7fc349b0e5f4542dab76b5f086a558209a95aff44294c68b138987720116b4b09fe&amp;token=141262335&amp;lang=zh_CN&amp;scene=21#wechat_redirect" formlinkparm="[{&quot;href&quot;:&quot;https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247504083&amp;idx=1&amp;sn=6f131091a5ffcd1b1135cbbaaff43764&amp;chksm=c08bbd8df7fc349b0e5f4542dab76b5f086a558209a95aff44294c68b138987720116b4b09fe&amp;token=141262335&amp;lang=zh_CN&amp;scene=21#wechat_redirect&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247504083%26idx%3D1%26sn%3D6f131091a5ffcd1b1135cbbaaff43764%26chksm%3Dc08bbd8df7fc349b0e5f4542dab76b5f086a558209a95aff44294c68b138987720116b4b09fe%26token%3D141262335%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="1"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;"><section style="vertical-align: middle;display: inline-block;line-height: 0;box-shadow: rgb(0, 0, 0) 2px 2px 8px -3px;border-radius: 5px;overflow: hidden;"><span class="js_jump_icon h5_image_link"><img class="rich_pages wxw-img" data-ratio="0.3037037037037037" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e6080d20-4fd6-4f42-82fc-8cfc81c80439.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></span></section></section></a><a title="https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247488552&amp;idx=1&amp;sn=325cd4dabc7b63d16e9f7751a6816685&amp;chksm=c0887976f7fff060f31afe600cd65226cf85af6d188193389a6f741a7005956abb724d58060b&amp;token=829715172&amp;lang=zh_CN&amp;scene=21#wechat_redirect" formlinkparm="[{&quot;href&quot;:&quot;https://mp.weixin.qq.com/s?__biz=MzkwNDI5NzUyMQ==&amp;mid=2247488552&amp;idx=1&amp;sn=325cd4dabc7b63d16e9f7751a6816685&amp;chksm=c0887976f7fff060f31afe600cd65226cf85af6d188193389a6f741a7005956abb724d58060b&amp;token=829715172&amp;lang=zh_CN&amp;scene=21#wechat_redirect&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247488552%26idx%3D1%26sn%3D325cd4dabc7b63d16e9f7751a6816685%26chksm%3Dc0887976f7fff060f31afe600cd65226cf85af6d188193389a6f741a7005956abb724d58060b%26token%3D829715172%26lang%3Dzh_CN%26scene%3D21%23wechat_redirect" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="1"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;"><section style="vertical-align: middle;display: inline-block;line-height: 0;box-shadow: rgb(0, 0, 0) 2px 2px 8px -3px;border-radius: 5px;overflow: hidden;"><span class="js_jump_icon h5_image_link"><img class="rich_pages wxw-img" data-ratio="0.3037037037037037" data-s="300,640" src="https://oscimg.oschina.net/oscnet/13d205fa-9275-4939-aded-d97b3a582aa0.jpg" data-type="jpeg" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></span></section></section></a><section style="margin-top: 10px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="box-shadow: rgb(170, 170, 170) 0px 0px 10px inset;border-color: rgb(192, 200, 209);padding: 10px 18px;border-width: 1px;border-style: solid;background-color: rgb(240, 244, 255);border-radius: 5px;overflow: hidden;"><section style="margin: 10px 0%;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 38px;flex: 0 0 auto;height: auto;align-self: center;"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;width: 38px;height: auto;"><img data-ratio="1" data-s="300,640" src="https://oscimg.oschina.net/oscnet/279e0629-2fa2-412a-8d50-5bcd12f491e5.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: center;margin-left: 10px;border-bottom: 3px solid rgb(0, 0, 0);border-bottom-right-radius: 0px;"><section style="" powered-by="xiumi.us"><section style="font-size: 19px;color: rgb(0, 0, 0);"><p style="text-wrap: wrap;"><strong>關於 CLion</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section><section style="" powered-by="xiumi.us"><section style="color: rgb(0, 0, 0);font-size: 15px;"><p style="text-wrap: wrap;"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247487178%26idx%3D2%26sn%3D6d95e4b411feb60da6108d3aee21d77d%26scene%3D21%23wechat_redirect" target="_blank" data-linktype="2"></a>CLion 是用於 Windows、Linux 和 macOS 上 C 或 C++開發的智能 IDE。CLion 瞭解現代 C++ 標準並提供預處理程序支持。它還集成了 GDB/LDB 和一套單元測試框架。&nbsp;</p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><a title="https://www.jetbrains.com.cn/clion/" formlinkparm="[{&quot;href&quot;:&quot;https://www.jetbrains.com.cn/clion/&quot;}]" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com.cn%2Fclion%2F" target="_blank" rel="noopener noreferrer" powered-by="xiumi.us" data-linktype="2"><section style="text-align: center;margin-top: 15px;margin-bottom: 7.5px;"><section style="display: inline-block;border-radius: 5px;line-height: 2.3;background-color: rgb(12, 176, 199);font-size: 15px;color: rgb(255, 247, 245);width: 100%;"><p><strong>進一步瞭解 CLion</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></a></section></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;"><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-ratio="0.5" data-s="300,640" src="https://oscimg.oschina.net/oscnet/58ab6ef4-d590-4ee8-800e-872ee344e21e.png" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section><section style="" powered-by="xiumi.us"><section style="font-size: 13px;color: rgb(125, 125, 125);text-align: justify;"><p style="text-wrap: wrap;"><strong>⏬ 戳「閲讀原文」瞭解更多</strong></p></section></section></section></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - JetBrains（JetBrainsChina）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 08:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5494143/blog/10143808</guid>
            <link>https://my.oschina.net/u/5494143/blog/10143808</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Fleet 推出 Kotlin Multiplatform 支持預覽版，在單一 IDE 中開發 KMP 應用程序！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       defaultNoSetting
            " id="js_content"><section style="font-size: 15px;line-height: 1.6;letter-spacing: 0px;padding-right: 5px;padding-left: 0px;color: rgb(0, 0, 0);box-sizing: border-box;font-style: normal;font-weight: 400;text-align: justify;margin-bottom: 0px;" data-mpa-powered-by="yiban.io"><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: 30px 0% 10px;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;background-color: rgb(237, 238, 242);align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="display: flex;width: 100%;flex-flow: column;box-sizing: border-box;" powered-by="xiumi.us"><section style="z-index: auto;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: flex;flex-flow: row;justify-content: flex-start;transform: translate3d(18px, 0px, 0px);-webkit-transform: translate3d(18px, 0px, 0px);-moz-transform: translate3d(18px, 0px, 0px);-o-transform: translate3d(18px, 0px, 0px);margin: -16px 0% 0px;box-sizing: border-box;"><section style="display: inline-block;vertical-align: top;width: 15%;flex: 0 0 auto;height: auto;align-self: flex-start;box-sizing: border-box;"><section style="text-align: center;margin: -16px 0px 0px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="1" data-s="300,640" src="https://oscimg.oschina.net/oscnet/34d34a69-0c6b-4707-8aaf-d6aadb6b3d82.png" data-w="707" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;flex: 0 0 auto;align-self: flex-start;min-width: 10%;max-width: 100%;height: auto;box-sizing: border-box;"><section style="transform: translate3d(5px, 0px, 0px);-webkit-transform: translate3d(5px, 0px, 0px);-moz-transform: translate3d(5px, 0px, 0px);-o-transform: translate3d(5px, 0px, 0px);box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;color: rgb(115, 119, 173);padding: 0px 7px;line-height: 1.2;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="box-sizing: border-box;"><strong style="box-sizing: border-box;">記得加關注， Kotlin 之路不迷路！</strong></span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;font-size: 12px;color: rgb(221, 20, 100);line-height: 1.2;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="box-sizing: border-box;">&nbsp; &nbsp; Kotlinlang.org</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section></section></section></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="color: rgb(120, 85, 245);box-sizing: border-box;"><strong style="box-sizing: border-box;">Kotlin Multiplatform&nbsp;(KMP) </strong></span>是 JetBrains 構建的開源技術，允許跨多個平台共享代碼，同時保留了原生編程的優勢。支持的平台包括 iOS、Android、桌面、Web 等。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">現在，我們在&nbsp;<span style="color: rgb(120, 85, 245);box-sizing: border-box;"><strong style="box-sizing: border-box;">Fleet</strong></span>&nbsp;中推出 <strong style="box-sizing: border-box;"><span style="color: rgb(120, 85, 245);box-sizing: border-box;">Kotlin Multiplatform 支持預覽版</span></strong>，這將簡化多平台應用程序開發，進一步豐富 <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzkxMzg3MQ%3D%3D%26mid%3D2247485165%26idx%3D1%26sn%3Dbf4b59d0544f2c35d812a997f0c4246c%26chksm%3Dcf41630df836ea1bb3b400a1dd49f30989fd569a59cc1e36e361834d90ce96fa30fa16d2f8e3%26scene%3D21%23wechat_redirect" textvalue="Fleet 中廣泛的 Kotlin 支持" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">Fleet 中廣泛的 Kotlin 支持</a>。請注意，如果您的目標是 iOS 和 macOS，則需要 Xcode。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(120, 85, 245);padding: 10px;box-shadow: rgb(204, 204, 204) 0.2em 0.2em 0.3em;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">由此開始 Fleet 中的 Kotlin Multiplatform 項目：</strong></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/en-us/help/kotlin-multiplatform-dev/fleet.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">我們來看看其中的部分功能。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">簡潔</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">打開多平台項目時，Fleet 將自動為 Android 和/或 iOS 平台創建運行配置，如項目構建文件中所聲明。您可以使用它們在 Android 虛擬設備或 iOS 模擬器上執行應用程序。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.3861111111111111" data-s="300,640" src="https://oscimg.oschina.net/oscnet/9a4b619d-4c02-4f6a-be57-936ee1dd0673.png" data-w="1080" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">多語言編程</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 是多語言 IDE，因此，在多平台項目中使用原生代碼時，無需切換到不同的編輯器或犧牲實用性。編輯 Swift 代碼時，您將獲得與 Kotlin 和 Java 相同的豐富功能，以及對 Xcode 項目的完整支持。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.5101851851851852" data-s="300,640" src="https://oscimg.oschina.net/oscnet/5507a1e6-80fb-4767-80a8-273863eea3a6.png" data-w="1080" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">代碼導航</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 支持 Swift 與 Kotlin 之間的跨語言導航。例如，在 Kotlin 函數上使用 <strong>Show Usages</strong>（顯示用法）操作時，Swift 代碼中的任何調用都會在結果中顯示。如果存在單個匹配項，則顯示關聯文件。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.4137291280148423" data-s="300,640" src="https://oscimg.oschina.net/oscnet/23ef65b1-e657-4f85-b984-6c159563fc8e.gif" data-w="1078" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">重構</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 中的重構也是跨語言的。在下面的示例中，如果我們在 MainViewController 類型上使用 <strong>Rename</strong>（重命名）重構，那麼重構將同時應用於 Kotlin 和 Swift 模塊。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.5384615384615384" data-s="300,640" src="https://oscimg.oschina.net/oscnet/f824138a-7238-4875-bf96-7eac80cd2df5.gif" data-w="1079" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">調試</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 中的調試也是跨語言的。您可以在 Swift 代碼中設置斷點，查看該環境中的值和調用堆棧，步入 Kotlin 調用，然後根據需要繼續。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.46574074074074073" data-s="300,640" src="https://oscimg.oschina.net/oscnet/b2105c54-0b6a-45b0-b389-439305f3d6a8.gif" data-w="1080" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">單一 IDE</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">如您所知，創建 Kotlin Multiplatform 應用程序通常需要組合使用多個 IDE。以移動端為目標時，情況相同，因為需要 Android Studio 和 Xcode。不過，<strong>我們在 Fleet 上的目標是提供一個單一 IDE，讓您可以在其中開發應用程序而無需切換工具</strong>（以 Apple 設備為目標時仍需安裝 Xcode，日常工作則不需要）。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">定價模型</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong>預覽期間，Fleet（包括 Kotlin Multiplatform Tooling）將保持免費。</strong>發佈 Kotlin Multiplatform Tooling 時，我們預計定價模型將與 Fleet 本身的定價模型保持一致。我們將在接近發佈日期時提供更多信息。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">我們對 IntelliJ IDEA&nbsp;</strong></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">和 IntelliJ 平台的承諾</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 使用適用於 Swift 的 IntelliJ 代碼處理引擎和我們所有的 Kotlin 支持，因此，<strong>我們將繼續在 IntelliJ IDEA 和 IntelliJ 平台（因此也包括 Android Studio）上提供對 Kotlin 的支持。</strong>此外，在 IntelliJ IDEA 中使用 Kotlin 的開發者數量不斷增加，<strong>我們向您保證，我們將繼續推動對此平台的創新和支持。</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">話雖如此，IntelliJ IDEA 的目標受眾仍將主要是以 JVM 為目標的服務器端開發者。雖然可以在 IntelliJ IDEA 和 Android Studio 中打開、導航和構建 Kotlin Multiplatform 項目，但其他功能（例如針對特定平台的運行配置、Compose Multiplatform 功能以及其他促進多平台開發的功能）將<strong>僅在 Fleet 中受支持</strong>。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">如何開始</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">要開始 Kotlin Multiplatform 開發並嘗試我們的炫酷功能，您可以通過&nbsp;<strong style="box-sizing: border-box;">JetBrains Toolbox App</strong><sup style="font-size: 11px;box-sizing: border-box;">1</sup>&nbsp;安裝最新版本的 Fleet。我們還有一個全新的<strong style="box-sizing: border-box;">在線 Web 嚮導</strong><sup style="box-sizing: border-box;">2</sup>，用於創建 Kotlin Multiplatform 項目。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">請務必查看<strong style="box-sizing: border-box;">適用於 </strong><strong style="box-sizing: border-box;">Kotlin Multiplatform 開發的 Fleet</strong><sup style="font-size: 11px;box-sizing: border-box;">3</sup>教程，獲取創建您的第一個應用程序的分步指南。您還可以查看我們準備的一些&nbsp;<strong style="box-sizing: border-box;">KMP 示例應用程序</strong><sup style="font-size: 11px;box-sizing: border-box;">4</sup>。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(120, 85, 245);padding: 10px;box-shadow: rgb(204, 204, 204) 0.2em 0.2em 0.3em;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">由此開始 Fleet 中的 Kotlin Multiplatform 項目：</strong></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/en-us/help/kotlin-multiplatform-dev/fleet.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-ratio="1" data-s="300,640" data-w="500" src="https://oscimg.oschina.net/oscnet/d2fa58f1-a075-427e-9dd1-57d1330762e7.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">我們需要您的反饋</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong>Fleet 中的 Kotlin Multiplatform Tooling 還處於非常早期的階段，我們希望聽到您的反饋。</strong>讓我們知道什麼有效、什麼無效、缺少什麼，以及您不能沒有什麼。請在這篇博文下留言或使用我們的<strong style="box-sizing: border-box;">問題跟蹤器</strong><sup style="box-sizing: border-box;">5</sup>。您還可以在 Kotlin Slack 的<strong style="box-sizing: border-box;">&nbsp;#fleet</strong><sup style="box-sizing: border-box;">6</sup>&nbsp;頻道上分享您對 Kotlin Multiplatform（包括 Kotlin Multiplatform Tooling）的任何反饋。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">謝謝！</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(120, 85, 245);padding: 10px;box-shadow: rgb(204, 204, 204) 0.2em 0.2em 0.3em;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">相關鏈接：</strong></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: left;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">1. JetBrains Toolbox App：</span></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/fleet/download/</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: left;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">2. 在線 Web 嚮導：&nbsp;</span></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://kmp.jetbrains.com/</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">3. 適用於 Kotlin Multiplatform 開發的 Fleet：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/help/kotlin-multiplatform-dev/fleet.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">4. KMP 示例應用程序：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://kotlinlang.org/docs/multiplatform-mobile-samples.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">5. 問題跟蹤器：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://youtrack.jetbrains.com/issues/FL</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">6. #fleet:&nbsp;</span></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://slack-chats.kotlinlang.org/c/fleet</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 10px 0% 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding: 0px 0px 0px 8px;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;font-size: 12px;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">本博文英文原作者：</strong></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">Hadi Hariri</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: 10px 0% 0px;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;background-position: 97.529% 66.6681%;background-repeat: repeat;background-size: 171.01%;background-attachment: scroll;align-self: flex-start;flex: 0 0 auto;height: auto;background-image: url(&quot;https://oscimg.oschina.net/oscnet/271f4c27-ea16-4f2d-a68d-14b00060ba7b.png&quot;);box-sizing: border-box;"><section style="text-align: justify;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;padding: 26px;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: -9px 0px 7px;box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 16px;color: rgb(248, 248, 248);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">這就是 Kotlin 編程語言</strong></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">簡潔、跨平台、且有趣！</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 0px;box-sizing: border-box;" powered-by="xiumi.us"><section class="mp_profile_iframe_wrp" style="box-sizing: border-box;"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-id="Mzg4MzkxMzg3MQ==" data-pluginname="mpprofile" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/y4ibuu6gd7d4NyzPduLLqtqddBasicL77gAgbLQD89CyYm1n7icODFhBr3xMoloOA7yicfjR8Bv0oaRP3CJuRLIO4Q/0?wx_fmt=png" data-nickname="Kotlin 開發者" data-alias="" data-signature="現代、簡潔、安全的編程語言，由 JetBrains 打造。面向服務器、Android、Web 和原生平台，提供多種在平台間重用代碼的方式以實現高效編程。官網：kotlinlang.org" data-from="0" data-is_biz_ban="0"></mp-common-profile></section></section><section style="text-align: center;margin: 7px 0px 0px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 45%;height: auto;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.4119760479041916" data-s="300,640" src="https://oscimg.oschina.net/oscnet/da9c722b-a4ec-41ad-934c-525407224327.png" data-w="835" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section></section></section></section></section></section></section><p style="display: none;margin-bottom: 0px;"><mp-style-type data-value="10000"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - JetBrains（JetBrainsChina）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 08:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5494143/blog/10143810</guid>
            <link>https://my.oschina.net/u/5494143/blog/10143810</link>
            <author>
                <![CDATA[JetBrains 中國]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[字節跳動：利用 AI 自動調優 Linux 內核參數]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在近日舉辦的&nbsp;Linux Plumbers Conference 上提出，字節跳動&nbsp;Linux 內核工程師 <span style="background-color:#ffffff">Cong Wang&nbsp;</span>發表了一個「</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flpc.events%2Fevent%2F17%2Fcontributions%2F1520%2F" target="_blank">Linux Kernel Autotuning</a><span style="color:#000000">」的主題演講，提議可以使用人工智能（AI）和機器學習（ML）來調整 Linux 內核，從而為特定工作負載帶來效果最優化。</span></p><p><span style="color:#000000">他指出，現在的 Linux 內核為用戶提供了數以千計的參數，因此想要通過調整參數以獲得最佳性能已經變得越來越困難。大多數情況下，不同的工作負載需要對不同的 Linux 內核參數集進行不同的調整。</span></p><p><span style="color:#000000">而在像字節跳動這樣的大型數據中心，要針對數百種不同的工作負載手動調整 Linux 內核參數幾乎是不可能的。因此字節跳動提出了一個解決方案，嘗試以最小的工程投入實現整個 Linux 內核參數調整過程的自動化。</span></p><blockquote><p><span style="color:#000000">我們還注意到，內存管理是 Linux 內核子系統中對自動調優的需求較多的一個。藉助貝葉斯優化等機器學習算法，我們相信自動調優甚至可以擊敗大多數 Linux 內核工程師。在本次演講中，我們將介紹 Linux 內核自動調整解決方案的工作原理以及其設計和架構的概述。我們還將研究 Linux 內核內存管理的一些特定案例，以展示我們的結果作為概念驗證。</span></p><p><span style="color:#000000">對於未來的工作，我們希望利用這個機會提出並討論一個內核內機器學習框架，該框架可以進一步推動這個項目，在內核空間中完全優化 Linux 內核快速路徑。</span></p></blockquote><p><img height="293" src="https://oscimg.oschina.net/oscnet/up-c9b82884de3f323f768ac146d08acaeded9.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">Wang 打趣稱</span>，此舉並不是為了「讓 Linux 內核工程師失業」，而是旨在將人類工程師從調整每個單獨工作負載的性能的工作中解放出來，同時利用歷史數據做出更好的決策，找到比目前使用試錯和啓發式方法得出的解決方案更好的解決方案。</span></p><p><span style="color:#000000">自動調整系統旨在根據特定的工作負載和硬件配置，自動調整 Linux 內核的內部設置。這種動態調整可確保最佳性能，解決 Linux 社區長期以來面臨的一個針對特定場景手動調整內核的難題。</span></p><ul><li><span style="color:#000000">動態優化： 系統持續監控內核性能，對 CPU 頻率縮放和內存管理等設置進行實時調整。</span></li><li><span style="color:#000000">提高效率： 通過優化資源使用，自動調整系統大大提高了 Linux 系統的效率，尤其是在不同工作負載的環境中。</span></li><li><span style="color:#000000">用戶友好界面： 該系統包含一個用戶友好界面，即使技術知識有限的用戶也能從增強的內核性能中受益。</span></li><li><span style="color:#000000">可定製的設置： 高級用戶可以自定義自動調整參數，</span><span style="color:#080a12">根據其特定需求定製系統。</span></li></ul><p><span style="color:#000000">雖然目前還處於早期階段，但字節方面表示已經取得了一些進展。例如，通過將 DAMON（一個用於內存訪問監控和優化的 Linux 內核子系統）與該框架結合使用，能夠為 MySQL 應用程序找到最佳方案。為此，他們運行了不同的 DAMON 方案並對其性能進行了比較，發現可以將應用程序的內存使用量減少 30%。</span></p><p><span style="color:#000000">在另一項案例中，該公司通過優化調整 16 個內核 sysctl 參數，優化了 NGINX 服務器上的 HTTP 網絡延遲。在最佳情況下，與專家手動調整相比，ML 調整使 NGNIX 網絡性能提升了 12%。</span></p><p><span style="color:#000000">字節並未宣稱其 AI/ML 方法適用於所有 Linux 調整工作，但工程師也表示：「雖然存在侷限性，但我們相信內核機器學習不僅是可能的，而且是必要的。」</span></p><p><span style="color:#000000">科技媒體 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.zdnet.com%2Farticle%2Ftuning-the-linux-kernel-with-ai-according-to-bytedance%2F" target="_blank">ZDNet</a> 的編輯對字節此舉表達了認可，並認為其可能改變 Linux 應用程序的遊戲規則。「通過簡化內核優化，將使 Linux 對更廣泛的用戶和應用程序來説更易用、更高效。特別是，我看到自動調整系統幾乎可以提升所有服務器、雲計算和數據中心應用的性能。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 08:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266922/linux-kernel-ai-bytedance</guid>
            <link>https://www.oschina.net/news/266922/linux-kernel-ai-bytedance</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FFmpeg 6.1 發佈，7.0 時代即將來臨]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><p><img class="rich_pages wxw-img" data-croporisrc="https://oscimg.oschina.net/oscnet/c25dbd9e-d477-45de-b2d1-cbc70d97d425.png" data-cropx1="0" data-cropx2="560" data-cropy1="79" data-cropy2="233" data-ratio="0.275" src="https://oscimg.oschina.net/oscnet/cff4bf1a-3b56-4508-bc04-b40d90f61cd4.jpg" data-type="jpeg" data-w="560" style="width: 560px;height: 154px;" referrerpolicy="no-referrer"></p><p style="margin: 0pt 0pt 16px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等線;font-size: 12pt;line-height: 1.6em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">11 月 10 日，FFmpeg 6.1 正式發佈。</span></p><section style="margin: 0pt 0pt 16px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等線;font-size: 12pt;line-height: 1.6em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">FFmpeg 發佈版本的時候，按照慣例，會選擇一些物理學家名字作為代號，這一新版本代號為「Heaviside」。主要為紀念偉大的英國數學家和物理學家奧利弗·黑維塞（Oliver Heaviside)。</span></section><section style="margin: 0pt 0pt 16px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等線;font-size: 12pt;line-height: 1.6em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">奧利弗·黑維塞（Oliver Heaviside) 自學成才，沒有系統經歷過高等教育，但在物理、數學、工程領域成果非凡，其名言一直為人所津津樂道。</span></section><blockquote class="js_blockquote_wrap" data-type="2" data-url="" data-author-name="" data-content-utf8-length="0" data-source-title="「數學分 2 種，嚴格的和物理直觀化的。前者的範圍窄；後者粗獷而廣泛。拘泥於公式的嚴格證明只會令絕大多數的數學物理探究止步不前。難道我要在完全理解消化反應的所有機理以前，拒絕進食嗎？」"><section class="blockquote_info js_blockquote_source" data-json="%7B%22type%22%3A%22out%22%2C%22source%22%3A%22url%22%2C%22digest%22%3A%22%22%2C%22digestLen%22%3A90%2C%22text%22%3A%22%E2%80%9C%E6%95%B0%E5%AD%A6%E5%88%862%E7%A7%8D%EF%BC%8C%E4%B8%A5%E6%A0%BC%E7%9A%84%E5%92%8C%E7%89%A9%E7%90%86%E7%9B%B4%E8%A7%82%E5%8C%96%E7%9A%84%E3%80%82%E5%89%8D%E8%80%85%E7%9A%84%E8%8C%83%E5%9B%B4%E7%AA%84%EF%BC%9B%E5%90%8E%E8%80%85%E7%B2%97%E7%8A%B7%E8%80%8C%E5%B9%BF%E6%B3%9B%E3%80%82%E6%8B%98%E6%B3%A5%E4%BA%8E%E5%85%AC%E5%BC%8F%E7%9A%84%E4%B8%A5%E6%A0%BC%E8%AF%81%E6%98%8E%E5%8F%AA%E4%BC%9A%E4%BB%A4%E7%BB%9D%E5%A4%A7%E5%A4%9A%E6%95%B0%E7%9A%84%E6%95%B0%E5%AD%A6%E7%89%A9%E7%90%86%E6%8E%A2%E7%A9%B6%E6%AD%A2%E6%AD%A5%E4%B8%8D%E5%89%8D%E3%80%82%E9%9A%BE%E9%81%93%E6%88%91%E8%A6%81%E5%9C%A8%E5%AE%8C%E5%85%A8%E7%90%86%E8%A7%A3%E6%B6%88%E5%8C%96%E5%8F%8D%E5%BA%94%E7%9A%84%E6%89%80%E6%9C%89%E6%9C%BA%E7%90%86%E4%BB%A5%E5%89%8D%EF%BC%8C%E6%8B%92%E7%BB%9D%E8%BF%9B%E9%A3%9F%E5%90%97%EF%BC%9F%E2%80%9D%22%2C%22article%22%3A%7B%7D%2C%22hasReportOverSize%22%3Afalse%2C%22editorReportData%22%3A%5B%7B%22id%22%3A%22122333%22%2C%22key%22%3A%2276%22%2C%22len%22%3A1%7D%5D%2C%22from%22%3A%22%E2%80%9C%E6%95%B0%E5%AD%A6%E5%88%862%E7%A7%8D%EF%BC%8C%E4%B8%A5%E6%A0%BC%E7%9A%84%E5%92%8C%E7%89%A9%E7%90%86%E7%9B%B4%E8%A7%82%E5%8C%96%E7%9A%84%E3%80%82%E5%89%8D%E8%80%85%E7%9A%84%E8%8C%83%E5%9B%B4%E7%AA%84%EF%BC%9B%E5%90%8E%E8%80%85%E7%B2%97%E7%8A%B7%E8%80%8C%E5%B9%BF%E6%B3%9B%E3%80%82%E6%8B%98%E6%B3%A5%E4%BA%8E%E5%85%AC%E5%BC%8F%E7%9A%84%E4%B8%A5%E6%A0%BC%E8%AF%81%E6%98%8E%E5%8F%AA%E4%BC%9A%E4%BB%A4%E7%BB%9D%E5%A4%A7%E5%A4%9A%E6%95%B0%E7%9A%84%E6%95%B0%E5%AD%A6%E7%89%A9%E7%90%86%E6%8E%A2%E7%A9%B6%E6%AD%A2%E6%AD%A5%E4%B8%8D%E5%89%8D%E3%80%82%E9%9A%BE%E9%81%93%E6%88%91%E8%A6%81%E5%9C%A8%E5%AE%8C%E5%85%A8%E7%90%86%E8%A7%A3%E6%B6%88%E5%8C%96%E5%8F%8D%E5%BA%94%E7%9A%84%E6%89%80%E6%9C%89%E6%9C%BA%E7%90%86%E4%BB%A5%E5%89%8D%EF%BC%8C%E6%8B%92%E7%BB%9D%E8%BF%9B%E9%A3%9F%E5%90%97%EF%BC%9F%E2%80%9D%22%7D"><span class="blockquote_other">「數學分 2 種，嚴格的和物理直觀化的。前者的範圍窄；後者粗獷而廣泛。拘泥於公式的嚴格證明只會令絕大多數的數學物理探究止步不前。難道我要在完全理解消化反應的所有機理以前，拒絕進食嗎？」</span></section></blockquote><blockquote class="js_blockquote_wrap" data-type="2" data-url="" data-author-name="" data-content-utf8-length="0" data-source-title="Mathematics is of two kinds, Rigorous and Physical. The former is Narrow: the latter Bold and Broad. To have to stop to formulate rigorous demonstrations would put a stop to most physico-mathematical inquiries. Am I to refuse to eat because I do not fully understand the mechanism of digestion?"><section class="blockquote_info js_blockquote_source" data-json="%7B%22type%22%3A%22out%22%2C%22source%22%3A%22url%22%2C%22digest%22%3A%22%22%2C%22digestLen%22%3A296%2C%22text%22%3A%22%EF%BC%88Mathematics%C2%A0is%C2%A0of%C2%A0two%C2%A0kinds%2C%C2%A0Rigorous%C2%A0and%C2%A0Physical.%C2%A0The%C2%A0former%C2%A0is%C2%A0Narrow%3A%C2%A0the%C2%A0latter%C2%A0Bold%C2%A0and%C2%A0Broad.%C2%A0To%C2%A0have%C2%A0to%C2%A0stop%C2%A0to%C2%A0formulate%C2%A0rigorous%C2%A0demonstrations%C2%A0would%C2%A0put%C2%A0a%C2%A0stop%C2%A0to%C2%A0most%C2%A0physico-mathematical%C2%A0inquiries.%C2%A0Am%C2%A0I%C2%A0to%C2%A0refuse%C2%A0to%C2%A0eat%C2%A0because%C2%A0I%C2%A0do%C2%A0not%C2%A0fully%C2%A0understand%C2%A0the%C2%A0mechanism%C2%A0of%C2%A0digestion%3F%EF%BC%89%22%2C%22article%22%3A%7B%7D%2C%22hasReportOverSize%22%3Afalse%2C%22editorReportData%22%3A%5B%7B%22id%22%3A%22122333%22%2C%22key%22%3A%2276%22%2C%22len%22%3A1%7D%5D%2C%22from%22%3A%22Mathematics%20is%20of%20two%20kinds%2C%20Rigorous%20and%20Physical.%20The%20former%20is%20Narrow%3A%20the%20latter%20Bold%20and%20Broad.%20To%20have%20to%20stop%20to%20formulate%20rigorous%20demonstrations%20would%20put%20a%20stop%20to%20most%20physico-mathematical%20inquiries.%20Am%20I%20to%20refuse%20to%20eat%20because%20I%20do%20not%20fully%20understand%20the%20mechanism%20of%20digestion%3F%22%7D"><span class="blockquote_other">Mathematics is of two kinds, Rigorous and Physical. The former is Narrow: the latter Bold and Broad. To have to stop to formulate rigorous demonstrations would put a stop to most physico-mathematical inquiries. Am I to refuse to eat because I do not fully understand the mechanism of digestion?</span></section></blockquote><p style="margin: 0pt 0pt 24px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等線;font-size: 12pt;text-align: left;line-height: 1.6em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">大佬的詳細生平見</span><span style="font-size: 16px;text-wrap: wrap;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);"><strong><strong>奧利弗·黑維塞</strong></strong></span></p><p><strong style="font-family: 等線;font-size: 12pt;text-wrap: wrap;letter-spacing: 0.034em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">FFmpeg 此次發佈重要信息包含以下幾點：</span></strong></p><p><span style="font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 0, 0);"><span style="vertical-align: baseline;font-size: 16px;letter-spacing: 0.578px;text-indent: -22.4px;text-wrap: wrap;font-family: 微軟雅黑;">1.&nbsp;</span><span style="font-size: 16px;text-wrap: wrap;text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">支持增強版本的 RTMP/FLV，主要支持了 HEVC、VP9、AV1 等編解碼格式。由於 Adobe 已經停止 RTMP 維護更新，這導致許多公司都在通過私有的方式支持新的視頻編碼格式。FFmpeg 這次官方支持，長期看有可能統一混亂的私有方案，但在短期內也會增加混亂與工作量，因為企業不得不同時維護私有和開放多套標準。誠如著名的網絡漫畫網站 https://xkcd.com/927/而言，我們又多了一個標準。</span></span></p><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.5662337662337662" data-s="300,640" src="https://oscimg.oschina.net/oscnet/970365fa-75de-4f0f-89ba-ea65c99da75c.png" data-type="png" data-w="770" style="" referrerpolicy="no-referrer"></p><p><span style="color: rgb(0, 0, 0);font-size: 16px;text-wrap: wrap;text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">2.對新一代編碼標準 VVC 和 MPEG-5 EVC (Essential Video Coding) 的 parser, muxer ，demuxer 以及 bsf 的支持。FFmpeg 社區一直在積極開發原生的 VVC 的 decoder，目前看，容器格式和 bit stream 相關的支持已經初步完成，讓我們等待它原生的 VVC 解碼器被合併；另一方面，MPEG-5 EVC 相關的支持工作也在積極的進行，只是其編解碼器以第三方庫的方式支持（</span><span style="font-size: 16px;text-wrap: wrap;text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">https://github.com/mpeg5</span><span style="color: rgb(0, 0, 0);font-size: 16px;text-wrap: wrap;text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">）。</span></p><p style="text-align: justify;"><span style="color: rgb(0, 0, 0);font-family: 微軟雅黑;font-size: 16px;letter-spacing: 0pt;text-indent: -22pt;">3.FFmpeg 重新實現了自己的 FFT，用於其內部編解碼器和濾波器的 FFT、MDCT、DCT 和 DST 實現已經完全被更快的 libavutil/tx 所取代；這個改動一方面帶來速度上面的收益，另外一方面，也使得庫的大小大為減小。</span></p><p style="text-align: justify;"><span style="font-size: 12pt;color: rgb(0, 0, 0);font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">4.硬件加速繼續迭代。一方面，FFmpeg 已經支持了基於 Vulkan 的解碼（當然，如同大多數硬件加速一樣，它要在一定的限制條件下才能使用）。另外，也進一步支持了基於 VAAP 的 AV1 編碼。説到 VAAPI，最讓人吃驚的莫過於，FFmpeg 通過 libva-win32 項目，可以在 WIndows 上使用 FFmpeg VAAPI 的相關功能，這要感謝微軟的工程師們在 WIndows 上的 WSL 項目上的努力。</span></p><p style="margin: 0pt 0pt 16px 16.8pt;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等線;font-size: 12pt;text-indent: -16.8pt;line-height: 1.6em;"><strong style="letter-spacing: 0.034em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">具體</span></strong><strong><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">改進</span></strong><strong style="letter-spacing: 0.034em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">亮點如下：</span></strong><br></p><ul class="list-paddingleft-1" style="width: 577.42px;letter-spacing: 0.578px;text-wrap: wrap;"><li style="font-size: 16px;"><section style="margin: 0pt;font-family: 等線;font-size: 12pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">libaribcaption 譯碼器<br></span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span data-font-family="&quot;微軟雅黑&quot;,sans-serif" style="font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">Playdate&nbsp;視頻&nbsp;Decoder&nbsp;和&nbsp;Demuxer</span><o:p></o:p></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">在 Windows 上擴展對 libva-win32 的 VAAPI 支持</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">命令行新增選項:-readrate_initial_burst</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">arls&nbsp;音頻濾鏡</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">setts 和 asetpts 過濾器中的命令支持</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">Vulkan 解碼 hwaccel，支持 H264、HEVC 和 AV1</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">color_vulkan 過濾器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">bwdif_vulkan 過濾器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">nlmeans_vulkan 過濾器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">RivaTuner 視頻解碼器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">xfade_vulkan 過濾器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">vMix 視頻解碼器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">基本視頻編碼解析器，混音器和解音器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">基本視頻編碼幀合併 bsf</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">bwdif_cuda 過濾器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">微軟 RLE 視頻編碼器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">原始 AC-4 混頻器和解混頻器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">原始的 VVC 比特流解析器，複用器和解複用器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">位流過濾器用於編輯 VVC 流中的元數據</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">比特流過濾器轉換 VVC 從 MP4 到 Annex&nbsp;B</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">videotoolbox 的 Scale_vt 過濾器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">videotoolbox 的 transpse_vt 過濾器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">支持 P_SKIP 提示以加速 libx264 編碼</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">支持 HEVC、VP9、AV1 編解碼器，增強 flv 格式</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">Apsnr 和 asisdr 音頻濾波器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">OSQ 解碼器和編碼器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">在增強的 RTMP 協議中支持 HEVC、VP9、AV1 編解碼器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">CRI&nbsp;USM 解混器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">ffmpeg 命令行'-top'選項已棄用，取而代之的是 setfield 過濾器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">AV1 編碼器</span></section></li><li style="font-size: 16px;"><section style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">ffprobe&nbsp;XML 輸出模式更改為考慮同一父元素中的多個變量字段元素</span></section></li><li style="font-size: 16px;"><p style="margin: 0pt 0pt 16px 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.5em;"><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">Ffprobe&nbsp;-output_format 選項作為-of 的別名添加</span></p></li></ul><section><strong style="font-family: 等線;font-size: 12pt;text-wrap: wrap;letter-spacing: 0.034em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;color: rgb(0, 122, 170);">除去這些特性，FFmpeg 內部也有一些優化，包含了：</span></strong></section><ul class="list-paddingleft-1" style="width: 577.42px;letter-spacing: 0.578px;text-wrap: wrap;"><li><p style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.6em;"><span style="font-family: 微軟雅黑;letter-spacing: 0pt;text-indent: -22pt;">在視頻解碼器中大幅減少內存分配，從而降低內存等開銷</span></p></li><li><p style="margin: 0pt 0pt 0pt 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.6em;"><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">對&nbsp;DSP&nbsp;代碼的許多部分進行了&nbsp;RISC-V&nbsp;優化，針對常用解碼器已經被合併</span><o:p></o:p></p></li><li><section style="margin: 0pt 0pt 16px 22pt;font-family: 等線;font-size: 12pt;text-indent: -22pt;line-height: 1.6em;"><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">提高每個數據包的時間戳和幀持續時間的正確性，從而提升變幀率視頻的支持</span></section></li></ul><p style="margin: 0pt 0pt 16px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等線;font-size: 12pt;line-height: 1.6em;"><span style="text-indent: -22pt;font-family: 微軟雅黑;letter-spacing: 0pt;vertical-align: baseline;">下一個主要版本將是 7.0 版本，按照計劃，將在 2024 年 2 月份發佈。FFmpeg 最近這些年，雖然也經歷了一些波折，但發展並未停滯，相反越來越迅速，而我們也即將迎來 FFmpeg 7.0 的大版本。</span></p><p style="margin-bottom: 0px;letter-spacing: 0.578px;text-wrap: wrap;"><span style="letter-spacing: 0.034em;font-size: 14px;color: rgb(0, 0, 0);">Reference:</span></p><p style="margin: 3pt 0pt;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等線;font-size: 12pt;line-height: 1.6em;"><strong><span style="letter-spacing: 0pt;vertical-align: baseline;font-size: 14px;color: rgb(0, 122, 170);">https://ffmpeg.org/index.html%23pr6.1</span></strong></p><section style="margin: 3pt 0pt;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等線;font-size: 12pt;line-height: 1.6em;"><strong><span style="letter-spacing: 0pt;vertical-align: baseline;font-size: 14px;color: rgb(0, 122, 170);">https://github.com/veovera/enhanced-rtmp/blob/main/enhanced-rtmp.pdf</span></strong><span style="text-decoration: underline;"><strong><span style="font-size: 14px;color: rgb(0, 122, 170);"><o:p></o:p></span></strong></span></section><p style="margin: 3pt 0pt 8px;letter-spacing: 0.578px;text-wrap: wrap;font-family: 等線;font-size: 12pt;line-height: 1.6em;"><strong><span style="letter-spacing: 0pt;vertical-align: baseline;font-size: 14px;color: rgb(0, 122, 170);">https://devblogs.microsoft.com/directx/video-acceleration-api-va-api-now-available-on-windows/</span></strong><span style="font-size: 14px;color: rgb(0, 122, 170);"><o:p></o:p></span></p><section style="letter-spacing: 0.578px;text-wrap: wrap;"><span style="font-family: 微軟雅黑;font-size: 14px;letter-spacing: 0pt;text-indent: -22pt;">*&nbsp;感謝趙軍老師對本篇文章的技術審校。</span></section><span id="OSC_h1_1"></span><h1 style="margin-bottom: 14px;font-size: 22px;text-wrap: wrap;outline: 0px;line-height: 1.4;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-align: start;background-color: rgb(255, 255, 255);"><strong><span style="font-size: 16px;color: rgb(0, 122, 170);">10 天倒計時！深圳站大會亮點前瞻！</span></strong></h1><p style="text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="4.072222222222222" data-s="300,640" src="https://oscimg.oschina.net/oscnet/11da6aa5-0cbd-4b2c-ade4-dffc56e84fd1.jpg" data-type="jpeg" data-w="1080" style="" referrerpolicy="no-referrer"></p><section style="letter-spacing: 0.578px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;background-color: rgb(255, 255, 255);font-size: 16px;"><section style="outline: 0px;"><section style="outline: 0px;"><section powered-by="xiumi.us" style="outline: 0px;text-align: center;line-height: 0;"><section style="margin-top: 8px;outline: 0px;"><span style="outline: 0px;letter-spacing: normal;caret-color: rgba(0, 0, 0, 0.9);font-size: 14px;color: rgb(136, 136, 136);visibility: visible;"><em style="outline: 0px;visibility: visible;"><em style="outline: 0px;color: rgb(34, 34, 34);font-family: -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.4352px;caret-color: rgb(51, 51, 51);visibility: visible;"><span style="outline: 0px;color: rgb(26, 26, 26);font-family: PingFangTC-Light;visibility: visible;">▲</span></em></em><em style="outline: 0px;visibility: visible;">點擊</em></span><span style="outline: 0px;color: rgb(56, 115, 139);"><span style="outline: 0px;letter-spacing: normal;caret-color: rgba(0, 0, 0, 0.9);font-size: 14px;visibility: visible;"><em style="outline: 0px;visibility: visible;">「</em></span><strong style="outline: 0px;caret-color: rgba(0, 0, 0, 0.9);font-size: var(--articleFontsize);letter-spacing: 0.544px;visibility: visible;"><span style="outline: 0px;font-size: 14px;visibility: visible;"><em style="outline: 0px;visibility: visible;">閲讀原文</em><em style="outline: 0px;visibility: visible;">」</em></span></strong></span><span style="outline: 0px;letter-spacing: normal;caret-color: rgba(0, 0, 0, 0.9);font-size: 14px;color: rgb(136, 136, 136);visibility: visible;"><em style="outline: 0px;visibility: visible;"><em style="outline: 0px;color: rgb(34, 34, 34);font-family: -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.4352px;caret-color: rgb(51, 51, 51);visibility: visible;"><span style="outline: 0px;color: rgb(26, 26, 26);font-family: PingFangTC-Light;visibility: visible;">▲</span></em></em></span></section></section></section></section></section><section style="margin-bottom: 8px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);caret-color: rgba(0, 0, 0, 0.9);text-size-adjust: inherit;text-align: center;visibility: visible;line-height: 1.6em;"><span style="outline: 0px;letter-spacing: normal;color: rgb(56, 115, 139);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;letter-spacing: 1px;font-size: 14px;visibility: visible;"><em style="outline: 0px;visibility: visible;"><span style="outline: 0px;visibility: visible;letter-spacing: 0.544px;">跳轉 LiveVideoStackCon 2023 深圳站，官網，瞭解更多信息</span></em></span></strong></span></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - LiveVideoStack（livevideostack）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 08:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3521704/blog/10143844</guid>
            <link>https://my.oschina.net/u/3521704/blog/10143844</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Eclipse Vert.x 4.5.0 發佈，虛擬線程支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Eclipse Vert.x 是一個微服務開發框架，基於事件和異步，依託於全異步 Java 服務器 Netty，並擴展了很多其他特性，以其輕量、高性能、支持多語言開發而備受開發者青睞。</span></p><p><span style="background-color:#ffffff; color:#333333">Eclipse Vert.x 4.5.0 現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fblog%2Feclipse-vert-x-4-5-0%2F" target="_blank">發佈</a>，此版本帶來了一些新功能，包括虛擬線程支持。亮點更新如下：</span></p><h4><strong>虛擬線程</strong></h4><p>虛擬線程 verticle 可以等待 Vert.x futures 並同步獲取結果。</p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java"><span style="color:#f0a46c">Verticle</span><span style="color:#c9e5f9">verticle</span><span>=</span><span style="color:#d2a8e0">new</span><span style="color:#f0a46c">AbstractVerticle</span>() {
  <span style="color:#adb5bd">@Override</span><span style="color:#d2a8e0">public</span><span style="color:#d2a8e0">void</span><span style="color:#f0a46c">start</span><span>()</span> {
    <span style="color:#f0a46c">HttpClient</span><span style="color:#c9e5f9">client</span><span>=</span> vertx.createHttpClient();
    <span style="color:#f0a46c">HttpClientRequest</span><span style="color:#c9e5f9">req</span><span>=</span> Future.await(client.request(
      HttpMethod.GET,
      <span style="color:#6cb9f0">8080</span>,
      <span style="color:#6cb9f0">"localhost"</span>,
      <span style="color:#6cb9f0">"/"</span>));
    <span style="color:#f0a46c">HttpClientResponse</span><span style="color:#c9e5f9">resp</span><span>=</span> Future.await(req.send());
    <span style="color:#f0a46c">int</span><span style="color:#c9e5f9">status</span><span>=</span> resp.statusCode();
    <span style="color:#f0a46c">Buffer</span><span style="color:#c9e5f9">body</span><span>=</span> Future.await(resp.body());
  }
};

<span style="color:#adb5bd">// Run the verticle a on virtual thread</span>
vertx.deployVerticle(verticle, <span style="color:#d2a8e0">new</span><span style="color:#f0a46c">DeploymentOptions</span>().setThreadingModel(ThreadingModel.VIRTUAL_THREAD));</code></pre><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-core%2Fjava%2F%23virtual_threads" target="_blank">Vert.x 虛擬線程</a>可以使用<code>await</code>來 block 任何 Vert.x future&nbsp;：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span style="background-color:#3a2840"><span><span><span><span><span style="color:#ffffff"><span><span><span><span><span><span><span><span><span><span><span><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java"><span style="color:#adb5bd">// create a test table</span>
await(pool.query(<span style="color:#6cb9f0">"create table test(id int primary key, name varchar(255))"</span>).execute());
<span style="color:#adb5bd">// insert some test data</span>
await(pool.query(<span style="color:#6cb9f0">"insert into test values (1, 'Hello'), (2, 'World')"</span>).execute());
<span style="color:#adb5bd">// query some data</span>
RowSet&lt;Row&gt; rows = await(pool.query(<span style="color:#6cb9f0">"select * from test"</span>).execute());
<span style="color:#d2a8e0">for</span> (Row row : rows) {
  System.out.println(<span style="color:#6cb9f0">"row = "</span> + row.toJson());
}
</code></pre><p style="color:#3c3c3b; text-align:start">可以在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvert-x3%2Fvertx-examples%2Ftree%2F4.x%2Fvirtual-threads-examples" target="_blank">ex­am­ple repo</a>&nbsp;查看更多信息。</p><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span>動態 SQL 連接創建</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>默認情況下，連接池始終連接到同一主機，換句話説，數據庫配置是靜態<em>的</em>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>有時數據庫配置需要是動態的，例如連接到數據庫陣列，或者數據庫配置可能會改變。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>通過<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-pg-client%2Fjava%2F%23_dynamic_connection_configuration" target="_blank">動態連接配置，</a>你可以在 Vert.x 中輕鬆實現這一點：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java"><span style="color:#f0a46c">Pool</span><span style="color:#c9e5f9">pool</span><span>=</span> PgBuilder.pool()
  .with(poolOptions)
  .connectingTo(() -&gt; {
    Future&lt;SqlConnectOptions&gt; connectOptions = retrieveOptions();
    <span style="color:#d2a8e0">return</span> connectOptions;
  })
  .using(vertx)
  .build();
</code></pre><p style="color:#3c3c3b; text-align:start"><span style="color:#3c3c3b">每次 pool 需要創建連接時，都會調用 options supplier 並使用返回的選項來創建連接。</span></p><h4 style="text-align:start">PG bouncer transaction pooling mode</h4><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>7 級代理可以在與實際數據庫的多個連接上平衡查詢負載。當發生這種情況時，客戶端可能會因缺乏 session affinity&nbsp;而感到 confused，並且可能會出現不必要的錯誤，例如 ERROR: unnamed preded statements does not exit (26000)。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>Vert.x SQL 客戶端現在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-pg-client%2Fjava%2F%23_using_a_level_7_proxy" target="_blank">支持 </a>7 級代理，例如&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pgbouncer.org%2F" target="_blank">PgBouncer&nbsp;</a>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span>TCP SSL 選項更新</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>現在可以<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-core%2Fjava%2F%23_updating_ssltls_configuration" target="_blank">在運行時更新 TCP client/server SSL 選項</a>&nbsp;，這對於證書輪換非常有用。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java">Future&lt;Boolean&gt; fut = server.updateSSLOptions(
  <span style="color:#d2a8e0">new</span><span style="color:#f0a46c">SSLOptions</span>()
    .setKeyCertOptions(<span style="color:#d2a8e0">new</span><span style="color:#f0a46c">JksOptions</span>()
      .setPath(<span style="color:#6cb9f0">"/path/to/your/server-keystore.jks"</span>)
      .setPassword(<span style="color:#6cb9f0">"password-of-your-keystore"</span>)));
</code></pre><p style="color:#3c3c3b; text-align:start"><span style="color:#3c3c3b">新連接將使用更新的配置。</span></p><h4 style="text-align:start"><strong>WebSocket client</strong></h4><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fdocs%2Fvertx-core%2Fjava%2F%23_websockets_on_the_client" target="_blank">在新的 WebSocket client</a>&nbsp;中從 Vert.x HTTP client 捕獲了 WebSocket client API&nbsp;。</p><pre style="margin-left:0; margin-right:0; text-align:start"><code class="language-java"><span style="color:#f0a46c">WebSocketClient</span><span style="color:#c9e5f9">wsClient</span><span>=</span> vertx.createWebSocketClient();

Future&lt;WebSocket&gt; f = wsClient.connect(connectOptions);
</code></pre><p style="color:#3c3c3b; text-align:start">這一改動的目的是讓<code>HttpClient</code>接口專注於 HTTP 交互，並清理接口。</p><h4 style="text-align:start"><strong>Client builders</strong></h4><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>在 4.5 中開始引入用於高級客戶端創建的 builder pattern。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>當 Vert.x 客戶端需要進行超出選項的配置時，builder pattern 有助於配置和創建 Vert.x 客戶端。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#3c3c3b"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvertx.io%2Fblog%2Fwhats-new-in-vert-x-4-5%2F" target="_blank">查看官方博客</a>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 06:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266908/eclipse-vert-x-4-5-0-released</guid>
            <link>https://www.oschina.net/news/266908/eclipse-vert-x-4-5-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 語言官方規範的制定進展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Rust 團隊在幾個月前接受了&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frfcs%2F3355-rust-spec.html" target="_blank">RFC 3355</a>&nbsp;<span style="color:#000000">的提議，決定開始制定 Rust 語言的官方規範。由 Eric（Rust Reference 的維護者）、Felix（Rust 語言團隊）、Joel（Rust 基金會）和 Mara（RFC 的作者）來共同推動這項工作的進行。</span></p><p><span style="color:#000000">截至今日，Eric 四人代表規範團隊<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2Finside-rust%2F2023%2F11%2F15%2Fspec-vision.html" target="_blank">發文介紹了</a>這項工作的最新進展，以及後續的一些其他規劃。</span></p><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Editor</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>第一步是填補&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frfcs%2F3355-rust-spec.html%23role-of-the-editor" target="_blank">RFC 中規定的</a>「editor」角色。規範的協調和編輯職責被特意委託給 Rust 基金會，以確保工作的連續性。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>由於沒有面試到合適的人選，基金會選擇考慮內部選擇作為替代方案。作為其現有工作的一部分，該基金會的技術總監 Joel 表示願意擔任該職位的候選人。Eric、Felix 和 Mara 等也同意了這一提議，「因為他在行業標準和技術編輯方面擁有豐富的經驗，並且與 Rust 項目關係密切」。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><strong style="color:#000000">規範團隊（Specification Team）</strong></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>由於相關工作不可能只由 editor 單人完成，因此還在圍繞規範工作組建一個團隊，即規範團隊（Specification Team），作為語言團隊的一個子團隊。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>最初成員包括：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Felix Klock (team lead)</li><li>Mara Bos (team lead)</li><li>Joel Marcey (team member, editor)</li><li>Eric Huss (team member)</li></ul><h4 style="text-align:start"><strong style="color:#000000">利益相關者</strong>（<span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Stakeholders</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span>）</h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>將挑選並維護一份利益相關者名單，他們將擔任顧問和審閲者。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>最初名單包括：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Rust 語言團隊全體成員</li><li>來自 types team 的一名或多名代表</li><li>operational semantics team 的一名或多名代表</li><li>來自 Ferrocene 的一名或多名代表（高可靠性/可用性，例如汽車行業。）</li><li>Formal Methods Research and Development 的一名或多名代表</li><li>Operating System Development 的一名或多名代表 (Rust for Linux; Microsoft)</li></ul><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Authority and Approval</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>雖然規範團隊負責撰寫和編輯規範，但 Rust 語言的定義權仍屬於相關團隊，如語&nbsp;language team 和 library API team。這些團隊應在必要時讓其他團隊/子團隊參與進來，例如提出問題、提名問題進行​​討論以及請求 FCP 批准關鍵決策。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p style="text-align:start"><span style="color:#000000">為了讓規範團隊能夠在不受審批流程限制的情況下生成內容並進行迭代，我們將在工作存儲庫中制定規範草案。在一些工具的幫助下，我們將公開跟蹤哪些項目仍需要團隊批准，以及哪些項目受到利益相關者的公開關注。</span></p><p style="text-align:start"><span style="color:#000000">我們將所有變更分類為次要變更或重大變更。較小的更改是對規範團隊來説似乎沒有爭議或微不足道的項目。例如，語言團隊已經通過 FCP 批准的更改、排版和語法修復、初衷明確的澄清，以及類似的令人興奮的更改。重大變更是那些可能有問題、重要或有爭議的變更。規範團隊和相關權威團隊的任何成員以及任何規範利益相關者都可以將更改標記為重大更改。對規範的重大更改必須經過通常的批准流程（例如語言 FCP）才能出現在規範的已發佈（非草案）版本中。</span></p><p style="text-align:start"><span style="color:#000000">語言和規範團隊應努力擁有至少一名共同成員（例如 Felix）充當聯絡人，以幫助確保我們對次要變更與重大變更的理解保持同步。</span></p></blockquote><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>目標</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>規範團隊的目標是創建和維護 Rust 規範。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 規範的目的是提供權威資源來確定哪些源文本是有效的 Rust 程序以及此類程序的行為方式。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>一個理想的規範既要：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>為當前和未來的 Rust 版本定義給定 Rust 程序的語義的規範邊界</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>提供與該規範實例相關的 Rust 版本特有的語義描述細節。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li></ul><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>特定於版本的詳細信息的規定可以直接在規範中提供，也可以通過委託給相關 Rust 團隊擁有的其他文檔來間接提供。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>漸進式開發</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>既要為當前和未來的 Rust 版本提供規範性約束，又要描述當前 Rust 版本的細節。因此該團隊決定將通過迭代和漸進的方式最大限度地提高其工作價值。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><blockquote><p style="text-align:start"><span style="color:#000000">我們預計該規範的早期版本將重點關注提供當前 Rust 版本的詳細描述。這樣的規範可以從現有的工作成果（如 Ferrocene 規範）中衍生出來，因為該規範明確側重於提供特定 Rust 版本的詳細説明。對這些特定版本描述的反饋意見將幫助我們瞭解如何以最佳方式在規範中制定規範性約束。</span></p><p style="text-align:start"><span style="color:#000000">由於我們前面提到的對當前 Rust 版本的關注，規範的早期版本可能會有一些空白，其中規定的界限比必要的更加不精確。例如，規定「不安全的 Rust 代碼可能會導致未定義的行為」沒有提供有關如何編寫定義良好的不安全代碼的指導。即使存在這種不精確性，規定的界限仍然可以提供有用的高級保證（例如「安全的 Rust 不會導致未定義的行為」）。規範的未來版本會添加更多説明性細節（例如「不安全的 Rust 代碼在以下條件下不會導致未定義的行為：……」），直到我們達到所需的精度級別。</span></p></blockquote><h4 style="text-align:start"><strong><span><span><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>範圍</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>規範應至少涵蓋 Rust 語法和語義的以下領域某些部分可能與特定後端或目標實現技術（如 inline asm）有內在聯繫。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Rust 的語法，通過&nbsp;Backus-Naur Form (BNF) 或 BNF&nbsp;的一些合理擴展來指定。</li><li><span style="background-color:#ffffff; color:#000000">Macro expansion</span><ul><li>Macro-by-example (<code>macro_rules</code>) transcription; Hygiene</li><li><code>cfg</code><span>&nbsp;</span>屬性</li><li>Procedural macros; attributes 以及 derive</li></ul></li><li>路徑和標識符解析 
  <ul><li>Modules</li></ul></li><li>靜態語義 
  <ul><li>類型定義；類型表達式；佈局</li><li>類型推斷和類型檢查；子類型化</li><li>生命週期和借用檢查</li></ul></li><li>泛型；關聯項解析和&nbsp;Trait solving</li><li>安全 Rust 的操作語義 
  <ul><li>綁定表格；匹配表達式；drop glue</li><li>值的移動和複製；借用</li><li>field projection; method dispatch 
    <ul><li>operator overloading</li></ul></li></ul></li><li>不安全 Rust 的操作語義 
  <ul><li>memory model</li><li>inline assembly</li></ul></li><li>Const evaluation</li><li>Crates 和 crate linkage</li></ul><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>此列表可隨着時間的推移而擴展。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Presentation</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 規範將是一個可公開訪問的文檔，類似於所有其他 Rust 文檔（並具有相同的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Fblob%2Fmaster%2FLICENSE-MIT" target="_blank">許可</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Fblob%2Fmaster%2FLICENSE-APACHE" target="_blank">條款</a>）。文本將以英語編寫，並且僅使用規範本身定義的技術術語或在免費在線詞典中具有明確定義的技術術語。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>規範中的各個項目都可以被引用和命名：不僅可以在超鏈接中，而且在文本中（例如「[syntax.patterns.arm.5]」）。在可能的情況下，這些名稱/項目引用應在不同版本的規範中持續存在。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>規範的迭代應包括突出顯示版本之間差異的 renderings。（參見 Ada 參考手冊等。）</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 規範將以鼓勵志願者貢獻的格式進行維護，即使規範團隊預計必須對每個貢獻進行重新授權，以保持規範的一致性。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>雖然完整性和正確性是首要任務，但團隊將盡力使規範儘可能易於理解。理想情況下，任何 Rust 程序員都應該能夠深入研究並找到他們可能遇到的任何語言問題的答案，而無需詢問已經非常熟悉該文檔的「language lawyer」。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><strong><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>發佈節奏</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Rust 發佈將獨立於規範審批流程進行。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>如果給定版本的規範尚未獲得批准，則該版本將在沒有相關規範的情況下發布。（不過，該團隊可能會在後續提供與給定版本相關的規範。）</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>這是設計使然。規範工作不得為項目增加需要克服的新障礙，以履行其現有義務，例如 6 周的發佈週期。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>團隊願景是最終能夠達到自動交付更新規範的程度，並且能夠按照項目的 6 周發佈節奏完成。但是，從短期和中期來看，其希望能夠自由地滯後於 6 周的發佈節奏。當規範團隊為以前未涉及的領域逐步添加新內容，或大幅縮小當前版本規範的規定範圍時，滯後於 Rust 發佈計劃的能力可能會特別有用。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>雖然規範開發過程不會阻止發佈，但語言功能的更改應與規範的相關更新相結合。一旦開始發佈與特定版本相關的規範，那麼如果沒有規範團隊批准對當前草案規範的相應拉取請求，則對當前規範中記錄的語言功能的更改就無法穩定。規範中未記錄的語言功能的更改可以在不更新規範的情況下穩定下來，但需要規範團隊成員確認相應的功能未記錄。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>通過強制執行新功能在穩定之前必須成為規範的一部分的規則，有望消除規範與 Rust 版本之間潛在滯後的主要根源。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><span><span><strong><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>下一步</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></span></span></h4><ul><li>為團隊制定定期會議時間表。</li><li>確定利益相關者名單。</li><li>製作第一個「demo product」，供利益相關者審查。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 04:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266889/spec-vision-rust</guid>
            <link>https://www.oschina.net/news/266889/spec-vision-rust</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FydeOS v17.1 發佈，集中修復 Linux 子系統，增加本土化優化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#121212; margin-left:0; margin-right:0; text-align:start"><img alt="" height="720" src="https://oscimg.oschina.net/oscnet/up-9957e1513ae48366915d9d57f2b638760ae.png" width="1440" referrerpolicy="no-referrer"></p><p style="color:#121212; margin-left:0; margin-right:0; text-align:start">FydeOS v17.1 是對 FydeOS v17 Nostalgic Reflections 的一個集合功能修復及維護版本。在此次的發佈裏，值得一提的修改的有：</p><ul><li>集中修復了 Linux 子系統存在的一些問題： 
  <ul><li>修復了某些 Linux 程序無法展現 GUI 的問題</li><li>修復了某些 Linux 程序在系統休眠喚醒後崩潰的問題</li><li>修復了某些常用 Linux 程序（比如 WPS Linux）無法通過雙擊 .deb 軟件包安裝的依賴缺失</li><li>優化了 Linux 鏡像內的源地址；默認指向部署在中國大陸的阿里雲鏡像</li><li>其它本土化優化，包括中文字體和系統語言等</li><li><strong>如果你是從早期版本的 FydeOS 通過 OTA 升級到此 v17.1 版本，以上 Linux 子系統的優化並不會通過升級系統而生效；你需要刪除 Linux 環境並重新開啓才能獲得。</strong></li></ul></li></ul><div><img alt="" height="1824" src="https://oscimg.oschina.net/oscnet/up-bcbf3ddcf921f81e98aa29ac7468275d9f6.png" width="2736" referrerpolicy="no-referrer"></div><ul><li>修復了攝像頭無法在某些安卓應用中開啓的問題</li><li>修復了在系統內添加打印機可能會報錯的問題</li><li>優化了「提交反饋」的功能</li><li>為多啓動安裝的 FydeOS 增加了「<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffydeos.com%2Ffaq%2Fdisable-media-files-scan" target="_blank">禁用多分區下的媒體文件自動掃描以獲得更長的電池續航時間</a></u>」的功能</li><li>在<span>&nbsp;</span><code>hwtuner</code><span>&nbsp;</span>中添加了更新 rEFInd 二進制文件以及新設計的深色主題的入口</li><li>添加了針對常見 USB wifi 適配器芯片的支持：MT7612U、RTL8192EU、RTL8188GU 以及 RTL8188CUS</li></ul><p style="color:#121212; margin-left:0; margin-right:0; text-align:start">希望你喜歡本次更新的新功能，有什麼想對我們説的，歡迎隨時到<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.fydeos.com%2F" target="_blank">FydeOS 社區</a>來告訴我們。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266880/fydeos-17-1-released</guid>
            <link>https://www.oschina.net/news/266880/fydeos-17-1-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微軟確認為 Windows 10 引入 AI 助手 Copilot]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><u><a href="https://www.oschina.net/news/265760">與之前的傳言相印證</a></u>，微軟宣佈計劃在 Windows 10 版本 22H2 中添加 AI 助手 Copilot。Copilot 將包含在 Windows 10 家庭版和專業版中。該更新的發佈日期尚未公佈，預計在不久的將來發布。</p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2F2023%2F11%2F16%2F23963576%2Fmicrosoft-copilot-windows-10-ai-features-release-preview" target="_blank">在一份新聞稿中</a></u>，<strong>微軟表示在向 Windows 11 用戶提供 Copilot 時收到了"很好的反饋"</strong>。與之前不為 Windows 10 22H2 提供主要功能升級的計劃不同，微軟現在決定"進行額外投資，以確保每個人都能從他們的 Windows PC 中獲得最大價值，包括 Windows 中的 Copilot（預覽版）"。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-6116c383b7c3be2c7b4c9bf35cc44cda3ea.png" referrerpolicy="no-referrer"></p><p>值得注意的是，<strong>並非所有 Windows 10 電腦都能運行 Copilot</strong>。根據微軟的要求，<strong>您的設備必須配備 720p 顯示屏（或更高分辨率）和至少 4GB 內存</strong>。此外，某些 Windows 10 版本將無法使用 Copilot，至少暫時無法使用。</p><p>由組織管理的版本為 22H2 的 Windows 10 專業版設備將不包含在 Copilot 在 Windows 中的初始推廣中。版本 22H2 的 Windows 10 企業版和教育版設備也不會被納入 Copilot in Windows 的初始推廣範圍。</p><p>微軟所使用的措辭提供了一種可能性，即在某些時候，Copilot 可能會被添加到 Windows 10 的這些版本中。不過，Windows 10 的支持終止日期保持不變。該操作系統的生命週期將於 2025 年 10 月 14 日結束。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e281fe6f97375c953a2fe93f6baebeb2533.png" referrerpolicy="no-referrer"></p><p>除了在不久的將來將 Copilot 引入 Windows 10 之外，微軟還將添加一項新功能，讓用戶能夠儘快使用 Copilot 以及其他可能的重要新功能和改進。微軟將在"設置"的"Windows 更新"部分為"發佈預覽版"內部用戶添加"一旦有最新更新，立即獲取"切換選項。</p><p>微軟補充説："這將在未來幾個月內通過受控功能推出（CFR）的方式分階段推出。"</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266876</guid>
            <link>https://www.oschina.net/news/266876</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust 1.74.0 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff"><span style="color:#333333">Rust 1.74.0 穩定版已正式</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F11%2F16%2FRust-1.74.0.html" target="_blank">發佈</a><span style="background-color:#ffffff"><span style="color:#333333">，主要帶來以下變化：</span></span></p><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">通過 Cargo 進行 Lint 配置</span></span></strong></h4><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">正如&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frust-lang.github.io%2Frfcs%2F3389-manifest-lint.html" target="_blank">RFC 3389</a>&nbsp;所提議，<code>Cargo.toml</code>manifest&nbsp;現在支持一個<code>[lints]</code>表來配置來自編譯器和其他工具的 lints 的報告級別（禁止、拒絕、警告、允許）。因此，不要使用</span></span><code>-F</code><span style="background-color:#ffffff"><span style="color:#000000">/</span></span><code>-D</code><span style="background-color:#ffffff"><span style="color:#000000">/</span></span><code>-W</code><span style="background-color:#ffffff"><span style="color:#000000">/</span></span><code>-A</code><span style="color:#000000"><span style="background-color:#ffffff">設置 RUSTFLAGS（這會影響整個構建過程），或者使用 crate-level 的屬性，例如：</span></span></p><pre style="text-align:start"><code class="language-rust"><span style="color:#b65611">#![forbid(unsafe_code)]</span><span style="color:#b65611">#![deny(clippy::enum_glob_use)]</span></code></pre><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">現在可以將這些寫入 </span></span><span style="color:#000000"><span style="background-color:#ffffff">package manifest&nbsp;</span></span><span style="color:#000000"><span style="background-color:#ffffff">中以供 Cargo 處理：</span></span></p><pre style="text-align:start"><code class="language-toml"><span style="color:#6684e1">[lints.rust]</span>
unsafe_code = <span style="color:#60ac39">"forbid"</span><span style="color:#6684e1">
[lints.clippy]</span>
enum_glob_use = <span style="color:#60ac39">"deny"</span></code></pre><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">這些也可以在<code>[workspace.lints]</code>表中配置，然後像許多其他工作區設置一樣由<code>[lints] workspace = true</code>繼承。在決定哪些&nbsp;crates&nbsp;需要重建時，Cargo 還將跟蹤這些設置的更改。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">有關詳細信息，可參閲 Cargo 參考手冊中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcargo%2Freference%2Fmanifest.html%23the-lints-section" target="_blank"><code>lints</code></a>和<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fcargo%2Freference%2Fworkspaces.html%23the-lints-table" target="_blank"><code>workspace.lints</code></a>部分。</span></span></p><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">Cargo Registry Authentication</span></span></strong></h4><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">此版本中還包含兩個相關的 Cargo 功能：credential providers 和 authenticated private registries。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">Credential providers&nbsp;允許配置 Cargo 如何獲取註冊表的憑證。Built-in providers&nbsp;用於 Linux、macOS 和 Windows 上特定於操作系統的安全祕密存儲。此外，可以編寫自定義 providers 來支持存儲或生成令牌的任意方法。使用安全的 credential provider&nbsp;可以降低註冊表令牌泄漏的風險。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">Registries 現在可以選擇要求對所有操作進行身份驗證，而不僅僅是發佈。這使得 private Cargo registries 能夠提供更安全的 crates 託管。使用 private registries&nbsp;需要配置 credential provider。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">有關更多信息，可參閲&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fbeta%2Fcargo%2Freference%2Fregistry-authentication.html" target="_blank">Cargo 文檔</a>。</span></span></p><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">Projections in opaque return types</span></span></strong></h4><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">有關返回「return type cannot contain a projection or Self that references lifetimes from a parent scope」錯誤信息的問題現在已經解決。編譯器現在允許在 opaque return types 中提及<code>Self</code>和關聯類型，例如<code>async fn</code>和<code>-&gt; impl Trait</code>。即使你對"projection"之類的術語一無所知，這種功能也能讓 Rust 更接近你所期望的工作方式。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">不過該功能目前有一個不穩定的 feature gate，因為它的實現最初沒有正確處理 captured lifetimes。有關更多技術細節，可參閲</span></span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Fpull%2F115659" target="_blank">stabilization pull request</a><span style="color:#000000"><span style="background-color:#ffffff">。示例：</span></span></p><pre style="text-align:start"><code class="language-rust"><span style="color:#b854d4">struct</span><span style="color:#6684e1">Wrapper</span>&lt;<span style="color:#60ac39">'a</span>, T&gt;(&amp;<span style="color:#60ac39">'a</span> T);

<span style="color:#aaaaaa">// Opaque return types that mention `Self`:</span><span style="color:#b854d4">impl</span> Wrapper&lt;<span style="color:#60ac39">'_</span>, ()&gt; {
    <span style="color:#b854d4">async</span><span style="color:#b854d4">fn</span><span style="color:#6684e1">async_fn</span>() -&gt; <span style="color:#b854d4">Self</span> { <span style="color:#aaaaaa">/* ... */</span> }
    <span style="color:#b854d4">fn</span><span style="color:#6684e1">impl_trait</span>() -&gt; <span style="color:#b854d4">impl</span><span style="color:#b65611">Iterator</span>&lt;Item = <span style="color:#b854d4">Self</span>&gt; { <span style="color:#aaaaaa">/* ... */</span> }
}

<span style="color:#b854d4">trait</span><span style="color:#6684e1">Trait</span>&lt;<span style="color:#60ac39">'a</span>&gt; {
    <span style="color:#b854d4">type</span><span style="color:#6684e1">Assoc</span>;
    <span style="color:#b854d4">fn</span><span style="color:#6684e1">new</span>() -&gt; Self::Assoc;
}
<span style="color:#b854d4">impl</span> Trait&lt;<span style="color:#60ac39">'_</span>&gt; <span style="color:#b854d4">for</span> () {
    <span style="color:#b854d4">type</span><span style="color:#6684e1">Assoc</span> = ();
    <span style="color:#b854d4">fn</span><span style="color:#6684e1">new</span>() {}
}

<span style="color:#aaaaaa">// Opaque return types that mention an associated type:</span><span style="color:#b854d4">impl</span>&lt;<span style="color:#60ac39">'a</span>, T: Trait&lt;<span style="color:#60ac39">'a</span>&gt;&gt; Wrapper&lt;<span style="color:#60ac39">'a</span>, T&gt; {
    <span style="color:#b854d4">async</span><span style="color:#b854d4">fn</span><span style="color:#6684e1">mk_assoc</span>() -&gt; T::Assoc { <span style="color:#aaaaaa">/* ... */</span> }
    <span style="color:#b854d4">fn</span><span style="color:#6684e1">a_few_assocs</span>() -&gt; <span style="color:#b854d4">impl</span><span style="color:#b65611">Iterator</span>&lt;Item = T::Assoc&gt; { <span style="color:#aaaaaa">/* ... */</span> }
}
</code></pre><h4 style="text-align:start"><strong>Stabilized APIs</strong></h4><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fnum%2Fstruct.Saturating.html" target="_blank"><code>core::num::Saturating</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprocess%2Fstruct.Stdio.html%23impl-From%253CStdout%253E-for-Stdio" target="_blank"><code>impl From&lt;io::Stdout&gt; for std::process::Stdio</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprocess%2Fstruct.Stdio.html%23impl-From%253CStderr%253E-for-Stdio" target="_blank"><code>impl From&lt;io::Stderr&gt; for std::process::Stdio</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprocess%2Fstruct.Stdio.html%23impl-From%253CStderr%253E-for-Stdio" target="_blank"><code>impl From&lt;OwnedHandle&gt; for std::process::Child{Stdin, Stdout, Stderr}</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprocess%2Fstruct.Stdio.html%23impl-From%253CStderr%253E-for-Stdio" target="_blank"><code>impl From&lt;OwnedFd&gt; for std::process::Child{Stdin, Stdout, Stderr}</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.OsString.html%23method.from_encoded_bytes_unchecked" target="_blank"><code>std::ffi::OsString::from_encoded_bytes_unchecked</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.OsString.html%23method.into_encoded_bytes" target="_blank"><code>std::ffi::OsString::into_encoded_bytes</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.OsStr.html%23method.from_encoded_bytes_unchecked" target="_blank"><code>std::ffi::OsStr::from_encoded_bytes_unchecked</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fffi%2Fstruct.OsStr.html%23method.as_encoded_bytes" target="_blank"><code>std::ffi::OsStr::as_encoded_bytes</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fio%2Fstruct.Error.html%23method.other" target="_blank"><code>std::io::Error::other</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprimitive.u16.html%23impl-TryFrom%253Cchar%253E-for-u16" target="_blank"><code>impl TryFrom&lt;char&gt; for u16</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fvec%2Fstruct.Vec.html%23impl-From%253C%2526%255BT%3B%2BN%255D%253E-for-Vec%253CT%2C%2BGlobal%253E" target="_blank"><code>impl&lt;T: Clone, const N: usize&gt; From&lt;&amp;[T; N]&gt; for Vec&lt;T&gt;</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fvec%2Fstruct.Vec.html%23impl-From%253C%2526mut%2B%255BT%3B%2BN%255D%253E-for-Vec%253CT%2C%2BGlobal%253E" target="_blank"><code>impl&lt;T: Clone, const N: usize&gt; From&lt;&amp;mut [T; N]&gt; for Vec&lt;T&gt;</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fsync%2Fstruct.Arc.html%23impl-From%253C%255BT%3B%2BN%255D%253E-for-Arc%253C%255BT%255D%2C%2BGlobal%253E" target="_blank"><code>impl&lt;T, const N: usize&gt; From&lt;[T; N]&gt; for Arc&lt;[T]&gt;</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Frc%2Fstruct.Rc.html%23impl-From%253C%255BT%3B%2BN%255D%253E-for-Rc%253C%255BT%255D%2C%2BGlobal%253E" target="_blank"><code>impl&lt;T, const N: usize&gt; From&lt;[T; N]&gt; for Rc&lt;[T]&gt;</code></a></li></ul><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff"><span style="color:#000000">這些 API 現在在 const contexts 中是穩定的：</span></span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fmem%2Ffn.transmute_copy.html" target="_blank"><code>core::mem::transmute_copy</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprimitive.str.html%23method.is_ascii" target="_blank"><code>str::is_ascii</code></a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.rust-lang.org%2Fstable%2Fstd%2Fprimitive.slice.html%23method.is_ascii" target="_blank"><code>[u8]::is_ascii</code></a></li></ul><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">兼容性説明</span></span></strong></h4><ul><li>正如<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F09%2F25%2FIncreasing-Apple-Version-Requirements.html" target="_blank">之前所宣佈的</a>，Rust 1.74 提高了對 Apple 平台的要求。現在最低版本是： 
  <ul><li>macOS：10.12 Sierra（2016 年首次發佈）</li><li>iOS：10（2016 年首次發佈）、</li><li>tvOS：10（2016 年首次發佈）</li></ul></li></ul><h4 style="text-align:start"><strong><span style="color:#000000"><span style="background-color:#ffffff">其他變化</span></span></strong></h4><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust%2Freleases%2Ftag%2F1.74.0" target="_blank">Rust</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Fcargo%2Fblob%2Fmaster%2FCHANGELOG.md%23cargo-174-2023-11-16" target="_blank">Cargo</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frust-lang%2Frust-clippy%2Fblob%2Fmaster%2FCHANGELOG.md%23rust-174" target="_blank">Clippy</a>&nbsp;中發生的所有變化。</span></span></p><p><span style="background-color:#ffffff"><span style="color:#333333">詳情可</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.rust-lang.org%2F2023%2F11%2F16%2FRust-1.74.0.html" target="_blank">查看官方公告</a><span style="background-color:#ffffff"><span style="color:#333333">。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 03:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266875/rust-1-74-0-released</guid>
            <link>https://www.oschina.net/news/266875/rust-1-74-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Unity 6 將於 2024 年發佈，下一個 LTS 版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Unity 公司在今天舉辦的 Unite 2023 上<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Funity%2Fstatus%2F1725080342636192251" target="_blank">宣佈</a></u>，2024 年將發佈重大版本更新&nbsp;<strong>Unity 6</strong>，並表示其為下一個長期支持版本 (LTS)。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a6955e1397b32b26e403a1c0cdd519dc6fa.png" referrerpolicy="no-referrer"></p><p>Unity 在大會上演示了全新的 Unity 6 引擎，並通過 Syncy Studios 採用 Unity 6 製作的《幻想王國（Fantasy Kingdom）》Demo 進行了<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutu.be%2FyggoHVLd01c" target="_blank">演示</a></u></em>，強調 Unity 6 的性能與畫面改進。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3fd8486e8d8b61d16fec201e834d5fd2ba3.png" referrerpolicy="no-referrer"></p><p><img height="1302" src="https://oscimg.oschina.net/oscnet/up-5d7463e58f86e8e5cae6592b2bfc92aa80c.png" width="2348" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-daf8fe34d603bc0c73addb3fda72e81707d.png" referrerpolicy="no-referrer"></p><p><img height="1316" src="https://oscimg.oschina.net/oscnet/up-220b5372a5f614527cfd3b4da88df5a3dc3.png" width="2360" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-9fa7c45bc268f01ef3b71f6aec5e2ae2bd2.png" referrerpolicy="no-referrer"></p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.unity.com%2Fnews%2Funite-2023-keynote-game-development-unity-6" target="_blank">Unity 公司稱</a></u> Unity 6 將帶來顯著的性能增強、提升創建多人遊戲的速度，以及對 XR 設備更深入的支持。此外還解鎖了新渲染功能的支持，實現了更高水平的圖形保真度。</p><ul><li>以驚人的性能提供先進的視覺效果</li><li>加速多人遊戲的創建和規模化</li><li>利用 AI 工具探索新的創意可能性</li><li>通過下一代移動功能和創新的 VR 設備支持讓玩家隨時隨地接觸</li></ul><p>Untiy&nbsp;提到的 AI 工具為 Sentis，允許開發者在&nbsp;Unity&nbsp;運行時導入&nbsp;AI&nbsp;模型，從而創建基於&nbsp;AI&nbsp;的 NPC。Sentis&nbsp;的獨特之處在於 AI 模型最終在用戶設備上本地運行，不需要開發者額外配置雲服務器。</p><p>Unity 6 還將帶來對全新 WebGPU 圖形後端的初步支持。從 Unity 6 開始，玩家將能夠在網絡上的任何位置運行 Unity 遊戲，包括在原生應用程序內或瀏覽器內的 Web 視圖中。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 02:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266869/unity-6-unite-2023</guid>
            <link>https://www.oschina.net/news/266869/unity-6-unite-2023</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[pyvideotrans —— 視頻翻譯和配音工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#1f2328">這是一個視頻翻譯工具，可將一種語言的視頻翻譯為另一種語言和配音的視頻。 語音識別基於<span>&nbsp;</span></span><code>openai-whisper</code><span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span>離線模型、文字翻譯使用</span><code>google|baidu|chatGPT</code><span style="background-color:#ffffff; color:#1f2328">翻譯接口，文字合成語音使用<span>&nbsp;</span></span><code>Microsoft Edge tts</code><span style="background-color:#ffffff; color:#1f2328">。</span></p><p><img height="407" src="https://static.oschina.net/uploads/space/2023/1107/143850_zTPQ_4252687.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:start"><strong>使用預編譯版本方法</strong></p><ol start="0"><li><p>只可用於 win10 win11 系統 (編譯版非最新，建議源碼部署)</p></li><li><p>從 release 中下載最新版，解壓，雙擊 sp.exe</p></li><li><p>原始視頻目錄：選擇 mp4 視頻；</p></li><li><p>輸出視頻目錄：如果不選擇，則默認生成在同目錄下的<span>&nbsp;</span><code>_video_out</code></p></li><li><p>選擇翻譯：可選 google、百度、chatGPT，後兩者需要點擊「設置翻譯 key」，設置相應信息</p></li><li><p>網絡代理地址：如果你所在地區無法直接訪問 google，需要在軟件界面，網絡代理，中設置代理，比如若使用 v2ray ，則填寫<span>&nbsp;</span><code>http://127.0.0.1:10809</code>,若 clash，則填寫<span>&nbsp;</span><code>http://127.0.0.1:7890</code>. 如果你修改了默認端口或使用的其他代理軟件，則按需填寫</p></li><li><p>視頻原始語言：選擇待翻譯視頻裏的語言種類</p></li><li><p>翻譯目標語言：選擇希望翻譯到的語言種類</p></li><li><p>選擇配音：選擇翻譯目標語言後，可從配音選項中，選擇配音角色；</p><p>硬字幕: 是指始終顯示字幕，不可隱藏，如果希望網頁中播放時也有字幕，請選擇硬字幕嵌入</p><p>軟字幕: 如果播放器支持字幕管理，可顯示或者隱藏字幕，該方式網頁中播放時不會顯示字幕，某些國產播放器可能不支持,需要將生成的視頻同名 srt 文件和視頻放在一個目錄下才會顯示</p><p><strong>不能「既不嵌入字幕又不選擇配音角色」</strong></p></li><li><p>文字識別模型: 選擇 base/small/medium/large, 識別效果越來越好，但識別速度越來越慢，第一次將需要下載模型，默認 base,可以預先單獨下載模型後，放到<span>&nbsp;</span><code>當前軟件目錄/models</code>目錄下.</p><p><strong>模型單獨下載地址</strong></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/65147644a518d12f04e32d6f3b26facc3f8dd46e5390956a9424a650c0ce22b9/tiny.pt">tiny 模型</a></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/ed3a0b6b1c0edf879ad9b11b1af5a0e6ab5db9205f891f668f8b0e6c6326e34e/base.pt">base 模型</a></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/9ecf779972d90ba49c06d968637d720dd632c55bbf19d441fb42bf17a411e794/small.pt">small 模型</a></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/345ae4da62f9b3d59415adc60127b97c714f32e89e936602e85993674d08dcb1/medium.pt">medium 模型</a></p><p><a href="https://openaipublic.azureedge.net/main/whisper/models/e4b87e7e0bf463eb8e6956e646f1e277e901512310def2c24bf0e11bd3c28e9a/large.pt">large 模型</a></p></li><li><p>配音語速：填寫 -90 到+90 之間的數字，同樣一句話在不同語言語音下，所需時間是不同的，因此配音後可能聲畫字幕不同步，可以調整此處語速，負數代表降速，正數代表加速播放。</p></li><li><p>自動加速: 如果翻譯後的語音時長大於原時長，並且這裏確認選中，那麼將強制加速播放該片段，以縮小時長</p></li><li><p>靜音片段: 填寫 100 到 2000 的數字，代表毫秒，默認 500，即以大於等於 500ms 的靜音片段為區間分割語音</p></li><li><p>點擊，開始按鈕，底部會顯示當前進度和日誌，右側文本框內顯示字幕</p></li></ol><blockquote><p>原始視頻統一使用 mp4 格式，處理速度快，網絡兼容性好</p><p>採用軟合成字幕：字幕作為單獨文件嵌入視頻，可再次提取出，如果播放器支持，可在播放器字幕管理中啓用或禁用字幕；</p><p>默認會在，原始視頻目錄，下生成同名的字幕文件，視頻名.srt</p><p>對於無法識別的語音將直接複製原語音</p></blockquote></div>
                                                                ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 02:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/pyvideotrans</guid>
            <link>https://www.oschina.net/p/pyvideotrans</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 基於一致性緩存的分佈式事務應用框架 Zeze]]>
            </title>
            <description>
                <![CDATA[<p>What Is Zeze?</p><p>Zeze 是一個基於一致性緩存的分佈式事務應用框架，詳見 doc/zeze.docx</p>]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 02:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/e2wugui/zeze</guid>
            <link>https://gitee.com/e2wugui/zeze</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 視覺 BEV 基本原理和方案解析]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>BEV(Bird’s-Eye-View) 是一種鳥瞰視圖的傳感器數據表示方法，它的相關技術在自動駕駛領域已經成了「標配」，紛紛在新能源汽車、芯片設計等行業相繼量產落地。BEV 同樣在高德多個業務場景使用，例如：<strong>高精地圖地面要素識別</strong>、<strong>車道線拓撲構建</strong>、<strong>車端融合定位</strong>中都扮演了重要角色。如圖 1‑1 所示：</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-6877926e4fd053ef08b19049d51767f8_1440w.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 1‑1 BEV 在高德應用場景（僅列舉部分）a) 高精底圖 b) 地面要素識別 c) 車道線拓撲構建[1] d) 車端融合定位 (BEV 特徵和底圖匹配)[2]</p><p>本文分享的內容主要包括兩個部分：視覺 BEV 基本原理、方案解析。</p><p><strong>1.BEV 基礎</strong></p><p><strong>1.1.引言</strong></p><p>如圖 1‑2 所示，BEV 具有如下優勢：</p><p><strong>1) BEV 視圖尺度變化小</strong>。在 PV 空間（即透視圖，類似通常行車記錄儀所採集的車輛前視圖）中，物體近大遠小，物體的大小和類別、遠近都有關，而在 BEV 空間中，物體的大小隻和類別有關；</p><p><strong>2) BEV 空間是決策友好空間</strong>。BEV 空間更接近 3D 真實空間的平面空間，而 PV 空間是真實物理世界在透視投影下的視圖，以圖 1‑2 的車道線舉例，在真實世界中平行的兩條車道線，在 BEV 空間下還是平行的，在 PV 空間卻是相交的。相比之下，BEV 空間下的信息能更方便地被下游規控模塊理解和使用。</p><p>本章將介紹 BEV 基礎知識。首先介紹 BEV 的核心**「視角轉換模塊」的基本原理**，包括 2D-&gt;3D 和 3D-&gt;2D 兩種路線，然後介紹 BEV 使用的<strong>魔法「可形變模塊」</strong>，最後介紹<strong>BEV 方案中常用的損失函數</strong>。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-a9e4e534bb87131577673960410b5677_1440w.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 1‑2 BEV 空間和 PV 空間的圖像可視化，a) BEV 空間 b) PV 空間</p><p><strong>1.2.視角轉換</strong></p><p>如 1.1 所述，在 BEV 空間下進行數據處理和操作具有尺度變化小、決策友好的優勢，但原始的圖像數據是在 PV 空間下的，如何將 PV 空間的數據轉換到 BEV 空間或者是 3D 空間（有 3D 空間下的數據，將其拍扁就能轉到 BEV 空間）呢？這就是視角轉換模塊要乾的事。</p><p><strong>1.2.1. 2D-&gt;3D 轉換模塊</strong></p><p>2D-&gt;3D 轉換模塊基本思想是從 2D 像素或者特徵出發去找 3D 空間下的對應表示，類似深度估計。下面介紹主流的 2D-&gt;3D 轉換方法。</p><p>LSS(Lift-Splat-and-Shot)[3]是主流的 2D-&gt;3D 轉換方法，如圖 1‑3 所示，Lift 指對各相機的圖像顯式地估計特徵點的深度分佈，得到包含圖像特徵的視錐（點雲）；Splat——結合相機內外參把所有相機的視錐（點雲）分配到 BEV 空間的網格中，對每個格子中的多個視錐點進行 pooling 計算，形成 BEV 特徵圖；Shoot——用 task head 處理 BEV 特徵圖，輸出感知結果。最後將 C 維的特徵和 D 維的深度分佈做外積，得到每個深度下的特徵，深度概率越大，對應特徵響應就越強。</p><p style="text-align:center"><img alt="" src="https://pica.zhimg.com/80/v2-43d4c71faf7a138576f6ba06458e22aa_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 1‑3 LSS 示意，每個特徵點生成系列離散深度點，再為深度點生成特徵[3]</p><p>Pseudo-LiDAR 是另一種 2D-&gt;3D 轉換方法，如圖 1‑4 所示，相比 LSS 為特徵點預測一系列離散深度，Pseudo-LiDAR 直接預測深度圖，每個像素都有且僅有一個深度。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-53fd09fd23b24641939a1b729c035932_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 1‑4 Pseudo-LiDAR 示意，預測深度圖，根據原始圖像和深度圖映射至 3D 空間[4]</p><p><strong>1.2.2. 3D-&gt;2D 轉換模塊</strong></p><p>3D-&gt;2D 轉換模塊基本思想是根據 3D 點查找對應的 2D 特徵，類似 3D 空間投影到 PV 空間。下面介紹主流的 3D-&gt;2D 轉換方法。</p><p>如圖 1‑5 所示，將 3D 參考點根據成像原理投影到 PV 空間獲取對應圖像特徵的方式可以認為是顯式映射，這裏的參考點可以使用預設的 BEV 空間的參考點，也可以使用網絡生成。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-cc01c8996b31566d84f9db31ce62143e_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 1‑5 顯式映射[5]</p><p>相比顯式映射，隱式映射不再通過投影映射，而是讓網絡自己學特徵和 3D 座標的映射。如圖 1‑6 所示，它先生成視錐空間下的一系列點，再轉換到 3D 空間下，然後將提取的圖像特徵和 3D 點傳入 encoder，encoder 處理後輸出的就是帶有 3D 座標信息的特徵。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-015461e8177d0ce576c5768410dcb80b_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 1‑6 隱式映射[6]</p><p><strong>1.3. 可形變模塊</strong></p><p>要介紹的可形變模塊有兩種，<strong>可形變卷積</strong>和<strong>可形變注意力</strong>，可形變模塊的作用更容易通過可形變卷積理解，所以先介紹可形變卷積。</p><p>可形變卷積是在卷積的基礎上添加 offset 得到的，如圖 1‑7 最左邊的 a) 所示，普通卷積通過人工設計的 pattern 整合 pattern 內採樣點的信息，其 pattern 設計好後就是固定的，可形變卷積，如圖 1‑7 b) 所示，可以計算出每個採樣點的 offset，採樣點+offset 才是真實的採樣點，使得卷積的 pattern 形式更加靈活，且一定程度上可學習。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-25ee3e549c4c201ec23b27b2927ed7f0_1440w.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 1‑7 可形變卷積示意，a) 普通卷積 b) 可形變卷積[7]</p><p>如圖 1‑8 所示，注意力機制需要通過 Q (query) 找到 K (key)，獲得 K 的信息，這個過程也存在可變形的操作空間，讓網絡自己學習參考點的偏移量。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-ae9b641901f4aabf7cd99d5cbbea4c9d_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 1‑8 可變形注意力示意[8]</p><p><strong>1.4. 損失函數</strong></p><p>損失函數大部分與任務相關，且大同小異，這裏集中介紹下後續方案解析需要用到的一些共性的損失函數。</p><p>Box Loss (包圍盒損失函數) 是目標檢測常用的幾何損失函數，常採用 L1 Loss 的形式：</p><p><img alt="" src="https://pic1.zhimg.com/80/v2-7cd755ebefb004c45aa1d2f8ed391d17_1440w.jpg" referrerpolicy="no-referrer"></p><p>Focal Loss 是交叉熵損失函數的拓展，常用於分類問題。普通交叉熵損失函數在正負樣本不均衡時表現不佳，因此引入平衡交叉熵。另外普通交叉熵損失函數對於難例無法重點學習，因此引入難例聚焦。最終形式為：</p><p><img alt="" src="https://picx.zhimg.com/80/v2-7b684f60a21cd467d25d4dc4a869d7d9_1440w.jpg" referrerpolicy="no-referrer"></p><p><strong>2. 視覺 BEV 方案解析</strong></p><p><strong>2.1. 引言</strong></p><p>第一章的內容為第二章的方案解析打下知識基礎，接下來第二章主要解析具有代表性的視覺 BEV 方案，主要根據視角轉換模塊的類型對方案進行分類，首先介紹 2D-&gt;3D 的代表性方案，然後介紹 3D-&gt;2D 的代表性方案。</p><p><strong>2.2. 2D-&gt;3D 代表性方案解析</strong></p><p>2D-&gt;3D 的代表性 BEV 方案有<strong>BEVDet</strong>和<strong>BEVDepth</strong>，下面我們逐一介紹。</p><p><strong>2.2.1. BEVDet</strong></p><p>3D 目標檢測跟蹤由基於 PV 空間的方法主導，BEV 語義分割跟蹤由基於 BEV 空間的方法主導，那麼 PV 空間和 BEV 空間哪個更適合做自動駕駛感知呢？是否可以在同一的框架下做這些任務？作者為了回答這兩個問題，提出瞭如圖 2‑1 所示的基於 BEV 空間的 3D 目標檢測框架，BEVDet。BEVDet 主要由四個部分組成，分別為圖像特徵編碼器，視角轉換模塊，BEV 特徵編碼器，檢測頭。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-1e60694f26d5751b2879bb3b208d9895_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 2‑1 BEVDet 框架[9]</p><p>圖像特徵編碼器 (Image-view Encoder) 使用 2D Backbone 網絡，如 ResNet、SwinTransformer 等，對輸入的多視角圖像做多尺度特徵提取，得到多尺度特徵。</p><p>視角轉換模塊 (View Transformer) 對輸入的多視角圖像特徵使用 LSS 進行離散深度分佈預測，獲得 3D 視錐特徵。</p><p>3D 視錐特徵經過 pooling 操作拍扁到 BEV 空間，BEV 特徵編碼器 (BEV Encoder) 對 BEV 空間下的特徵做多尺度特徵提取，得到 BEV 特徵。</p><p>最後送入檢測頭進行 3D 目標檢測，分類監督使用的損失函數為 Focal loss，包圍盒監督使用的損失函數為 L1 loss。</p><p><strong>2.2.2. BEVDepth</strong></p><p>作者實驗發現 LSS 估計的深度替換成隨機值影響不大，而採用真值深度對指標提升很大，因此得出 LSS 估計深度不準的結論，如圖 2‑2 所示，在沒有明確的深度監督的情況下，很難輸出準確，泛化性強的深度感知結果，要想獲得更好的檢測結果，需要更準的深度，因此引入深度監督訓練深度子網絡。</p><p style="text-align:center"><img alt="" src="https://pica.zhimg.com/80/v2-81044f858876fb86f021267da764c5b7_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 2‑2 LSS 的深度預測結果和 BEVDepth 的深度預測結果的對比[10]</p><p>圖 2‑3 是 BEVDepth 的框架，也能大致分為圖像特徵編碼器，視角轉換模塊，BEV 特徵編碼器，檢測頭四個部分。圖像特徵編碼模塊大同小異，後續不再展開説明。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-a4ad33f6e9c360247e91b77932b374e5_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 2‑3 BEVDepth 框架[10]</p><p>視角轉換模塊的核心是深度估計，深度估計網絡 DepthNet 的框架如圖 2‑4 所示，首先使用 MLP 對相機內參進行特徵化，然後用 SE (Squeeze-and-Extraction) 對圖像特徵進行通道加權，然後經過 3 個殘差塊以及可形變卷積，得到深度。深度再與圖像特徵進行外積，得到 3D 視錐特徵。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-fa606fad900b85501db561a22819eef8_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 2‑4 深度估計網絡框架[10]</p><p>相機和用於監督的點雲之間的外參可能不準，內參也可能不準，都會導致深度估計有偏，因此 BEV 特徵編碼器引入深度修正對 3D 視錐特徵的深度進行修正，然後進行高效體素池化獲得 BEV 特徵。</p><p>檢測頭所使用的損失函數和 BEVDet 是一致的，不做贅述。深度監督使用的損失函數為二分類交叉熵。</p><p><strong>2.3. 3D-&gt;2D 代表性方案解析</strong></p><p>前面介紹的 2D-&gt;3D 的方案始終繞不過深度估計，深度估計難免會引入誤差，換個思路，先有 3D 點，再根據 3D 點找 2D 特徵的方式無需進行深度估計，避免了這部分誤差。3D-&gt;2D 的代表性方案有 Detr3D、BEVFormer 和 PETR。</p><p><strong>2.3.1. Detr3D</strong></p><p>如圖 2‑5 所示，Detr3D 是 Detr 在 3D 目標檢測的擴展，也是使用 query 進行特徵獲取，然後進行檢測。Detr3D 的圖像特徵編碼器大同小異，不再贅述。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-aecefc46ac607f6b9cfe9a8c72d878cb_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 2‑5 Detr3D 框架[5]</p><p>特徵轉換模塊首先使用 object query 生成 3D 參考點，將參考點投影到 PV 空間獲取圖像特徵，獲取到的圖像特徵能進一步優化物體的 3D 表徵，得到物體的 3D 特徵。</p><p>將特徵送入檢測頭進行目標檢測，可以得到一系列的檢測結果。普遍地，大家會用 NMS 等後處理方式獲得最終用於 Loss 計算的檢測結果，如圖 2‑6 所示，Detr3D 繼承了 Detr 的做法，採用雙邊圖匹配獲得與真值一一對應的檢測結果。損失函數與前面所述並未本質差異，不做贅述了。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-ecb60b683e331a3662bddef87ba2deed_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 2‑6 雙邊圖匹配獲得與真值一一對應的檢測結果[11]</p><p><strong>2.3.2. BEVFormer</strong></p><p>行車過程有天然的時序特點，當前幀看到的車道線，在後續幾幀大概率也是存在且可見的，如何利用這個時序特點是前述方案沒有考慮的。BEVFormer 引入時序信息進一步增強 BEV 的檢測能力。BEVFormer 的圖像特徵編碼模塊和前述大同小異，不做贅述。</p><p>BEVFormer 的核心是中間的 BEV 特徵編碼模塊，BEV 特徵編碼模塊的核心是時序自注意力 (Temporal Self-Attention) 和空間交叉注意力 (Spatial Cross-Attention)，時序注意力是為了利用歷史幀 BEV 特徵增強當前幀 BEV 特徵，空間交叉注意力則是為了從圖像特徵獲取信息。</p><p style="text-align:center"><img alt="" src="https://pica.zhimg.com/80/v2-f3bbe02646e521461ad36b8e2d4e159f_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 2‑7 BEVFormer 框架[12]</p><p>具體地，BEVFormer 的時序自注意力首先利用車輛運動信息將當前幀 BEV 特徵和歷史幀 BEV 特徵進行對齊，然後再使用自注意力融合兩者信息，由於車輛運動信息可能不準，不同時刻周圍的可利用信息分佈也不一致，所以具體使用的是圖 2‑8 所示的可變形注意力機制。</p><p style="text-align:center"><img alt="" src="https://pica.zhimg.com/80/v2-4f86254bec875df7b4c8b27b3c7d1484_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 2‑8 時序可變形自注意力[12]</p><p>BEVFormer 的空間交叉注意力首先為每個格子在 Z 方向上採樣 4 個值，得到一個格子上的 4 個參考點，然後與圖像特徵進行交叉注意力，獲得圖像特徵。如圖 2‑9 所示，這裏的交叉注意力也採用可變形注意力機制。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-b65c4f416dedc9b27608bc42b4d8f0b2_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 2‑9 空間可變形交叉注意力[12]</p><p>損失函數的計算和 Detr3D 一致，不再贅述。</p><p><strong>2.3.3. PETR</strong></p><p>3D-&gt;2D 的方案一般都需要將參考點投影到 PV 空間，再取圖像特徵，PETR 避免了複雜的 3D-&gt;2D 轉換及特徵採樣，直接讓網絡自己學習 2D-3D 的映射。PETR 的框架如圖 2‑10 所示，包括圖像特徵編碼器、3D 座標生成器、3D 特徵編碼器 (3D Position Encoder)、3D 特徵解碼器和檢測頭。圖像特徵編碼器大同小異，不再贅述。</p><p style="text-align:center"><img alt="" src="https://picx.zhimg.com/80/v2-3bd06c74ccb12b7e4de4e16d317b7cb0_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 2‑10 PETR 框架[6]</p><p>3D 座標生成器生成視錐空間的一系列 3D 點，具體地，首先將相機視錐空間離散成大小為的網格，網格中的每一點用表示。3D 空間中一個點用表示。通過相機內外參可以將相機視錐空間轉換到 3D 空間中。最後再進行歸一化。</p><p>2D 圖像特徵和 3D 座標一起送入到 3D 特徵編碼器中，2D 特徵進行卷積通道降維，3D 座標進行位置編碼，然後將處理後的 2D 特徵和 3D 座標編碼整合，最後特徵展平。</p><p style="text-align:center"><img alt="" src="https://pic1.zhimg.com/80/v2-ec98be180482b7f680c1edfa0471e7e0_1440w.png" referrerpolicy="no-referrer"></p><p style="text-align:center">圖 2‑11 3D 特徵編碼器[6]</p><p>3D 特徵解碼器先在 3D 空間生成一系列隨機點，再通過 MLP 生成可學習的 query，query 在 3D 特徵中取特徵，最後使用檢測頭進行檢測。損失函數與 Detr3D 大同小異，不再贅述。</p><p><strong>3. 總結展望</strong></p><p>本文從 BEV 的基礎出發，介紹了視覺 BEV 具有代表性的方案。視覺 BEV 已經展現出強大的場景理解能力。但是還存在很多值得探索且有挑戰的方向[13]：</p><p>深度估計是 BEV 的核心，LSS、Pseudo-LiDAR、激光蒸餾、立體視覺或運動恢復結構等都是有前景的方向。</p><p>如何融合傳感器的信息也是至關重要的，使用 Transformer 的自注意力、交叉注意力融合不同模態的特徵已經被證明是個可行的方向。多模態中 CLIP 的文本-圖像對也是個很有啓發的思路。</p><p>泛化性是深度學習亙古不變的話題和努力的方向，在一個設備（數據）上訓練好的模型在另一個設備（數據）表現是否一樣好。每個設備都要付出訓練成本是讓人難以接受的。如何將模型和設備解耦在未來一段時間都將是重要的研究方向。</p><p>大模型或者基礎模型已經在不同領域上取得令人印象深刻的結果，並一舉成為 SOTA。在 BEV 感知中如何利用大模型中豐富的知識，在更多的任務上取得更好的效果，這將會逐步引起人們的重視。</p><p><strong>4. 參考文獻</strong></p><p>[1] Bencheng Liao, Shaoyu Chen, Xinggang Wang, et al. Maptr: Structured modeling and learning for online vectorized hd map construction[J]. arXiv preprint arXiv:2208.14437,2022,</p><p>[2] Yuzhe He, Shuang Liang, Xiaofei Rui, et al. EgoVM: Achieving Precise Ego-Localization using Lightweight Vectorized Maps[J]. arXiv preprint arXiv:2307.08991,2023,</p><p>[3] Jonah Philion and Sanja Fidler. Lift, splat, shoot: Encoding images from arbitrary camera rigs by implicitly unprojecting to 3d[A]. Springer: 194-210</p><p>[4] Yan Wang, Wei-Lun Chao, Divyansh Garg, et al. Pseudo-lidar from visual depth estimation: Bridging the gap in 3d object detection for autonomous driving[A]. 8445-8453</p><p>[5] Yue Wang, Vitor Campagnolo Guizilini, Tianyuan Zhang, et al. Detr3d: 3d object detection from multi-view images via 3d-to-2d queries[A]. PMLR: 180-191</p><p>[6] Yingfei Liu, Tiancai Wang, Xiangyu Zhang, et al. Petr: Position embedding transformation for multi-view 3d object detection[A]. Springer: 531-548</p><p>[7] Jifeng Dai, Haozhi Qi, Yuwen Xiong, et al. Deformable convolutional networks[A]. 764-773</p><p>[8] Xizhou Zhu, Weijie Su, Lewei Lu, et al. Deformable detr: Deformable transformers for end-to-end object detection[J]. arXiv preprint arXiv:2010.04159,2020,</p><p>[9] Junjie Huang, Guan Huang, Zheng Zhu, et al. Bevdet: High-performance multi-camera 3d object detection in bird-eye-view[J]. arXiv preprint arXiv:2112.11790,2021,</p><p>[10] Yinhao Li, Zheng Ge, Guanyi Yu, et al. BEVDepth: Acquisition of Reliable Depth for Multi-View 3D Object Detection[J]. Proceedings of the AAAI Conference on Artificial Intelligence,2023,37(2): 1477-1485</p><p>[11] Nicolas Carion, Francisco Massa, Gabriel Synnaeve, et al. End-to-end object detection with transformers[A].Springer: 213-229</p><p>[12] Zhiqi Li, Wenhai Wang, Hongyang Li, et al. Bevformer: Learning bird’s-eye-view representation from multi-camera images via spatiotemporal transformers[A].Springer: 1-18</p><p>[13] Hongyang Li, Chonghao Sima, Jifeng Dai, et al. Delving into the Devils of Bird's-eye-view Perception: A Review, Evaluation and Recipe[J]. arXiv preprint arXiv:2209.05324,2022,</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 02:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/amaptech/blog/10143491</guid>
            <link>https://my.oschina.net/amaptech/blog/10143491</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Spring Framework 6.1 正式 GA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Spring Framework 6.1<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F11%2F16%2Fspring-framework-6-1-goes-ga" target="_blank"> 已正式發佈</a></u>。</p><p><strong>主要變化</strong></p><ul><li>支持 JDK 21 LTS</li><li>支持虛擬線程</li><li>支持恢復 JVM Checkpoint</li><li>引入「資源生命週期管理」</li><li>引入「數據綁定和驗證」</li><li>新增&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.x%2Fjavadoc-api%2Forg%2Fspringframework%2Fweb%2Fclient%2FRestClient.html" target="_blank">RestClient</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.x%2Fjavadoc-api%2Forg%2Fspringframework%2Fjdbc%2Fcore%2Fsimple%2FJdbcClient.html" target="_blank">JdbcClient</a>&nbsp;API</li></ul><p>公告寫道，就 HotSpot JVM 上的高效部署選項而言，Spring Framework 6.1 與 Project CRaC 緊密集成以實現 JVM checkpoint 部署：查看&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Freference%2F6.1%2Fintegration%2Fcheckpoint-restore.html" target="_blank">JVM Checkpoint Restore</a></u>。此外，Spring 用戶還可以採用 JDK 21 中最新的 AppCDS 功能，與 OpenJDK 的 Project Leyden 預先保持一致。</p><p>此外，Spring Framework 6.1 在運行時方面針對 JDK 21 和 Jakarta EE 10 上提供了一級支持，同時保留了 JDK 17 和 Jakarta EE 9 基線。Spring 還通過精細的元數據推理跟蹤 GraalVM for JDK 21 的演變，同時暫時保持與 GraalVM 22.3 的兼容性。</p><hr><p>文檔<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fwiki%2FWhat%2527s-New-in-Spring-Framework-6.x">顯示</a>，Spring 6.1 已全面兼容虛擬線程 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fissues%2F23443">Virtual Threads</a>) 和 JDK 21。</p><p><img alt="" src="https://static.oschina.net/uploads/space/2023/0817/140919_ppSy_2720166.png" referrerpolicy="no-referrer"></p><p>虛擬線程配置選項：專用的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fcore%2Ftask%2FVirtualThreadTaskExecutor.html">VirtualThreadTaskExecutor</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fcore%2Ftask%2FSimpleAsyncTaskExecutor.html%23setVirtualThreads%28boolean%29">SimpleAsyncTaskExecutor 上的虛擬線程模式</a>，以及類似的具有 new-thread-per-task strategy 和虛擬線程模式的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fscheduling%2Fconcurrent%2FSimpleAsyncTaskScheduler.html">SimpleAsyncTaskScheduler</a>。</p><p>詳情查看&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fwiki%2FWhat%27s-New-in-Spring-Framework-6.x" target="_blank">What's New 頁面</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 02:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266858/spring-framework-6-1-ga</guid>
            <link>https://www.oschina.net/news/266858/spring-framework-6-1-ga</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Dromara 社區新晉開源項目 - Akali(阿卡麗)，輕量化的熱點&降級處理框架！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="383" src="https://oscimg.oschina.net/oscnet/up-be8fcabf525c0668386e7be6a812d46264e.png" width="900" referrerpolicy="no-referrer"></p><h2>前言</h2><p>Dromara 社區再添一個成員項目！</p><p>今天為大家介紹的是——Akali。</p><p>它輕量小巧，來無影去無蹤，不足 500 行代碼，卻能解決高流量場景中主要的問題：熱點處理和降級處理。</p><h2>介紹</h2><p>Akali（阿卡麗）是一個輕量級本地化熱點檢測/降級框架，適用於大流量場景，可輕鬆解決業務中超高流量的併發查詢等場景。並且接入和使用極其簡單，10 秒鐘即可接入使用！</p><p>Akali 框架的理念就是小巧，實用，絲血團戰，滿血退場，所到之處，皆為虛無。</p><p>Gitee：<a href="https://gitee.com/dromara/Akali">https://gitee.com/dromara/Akali</a></p><p>Github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbryan31%2FAkali" target="_blank">https://github.com/bryan31/Akali</a></p><p>官方網站：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fakali.yomahub.com%2F" target="_blank">https://akali.yomahub.com/</a></p><h2>使用</h2><p>引入依賴：</p><pre><code>&lt;dependency&gt;
  &lt;groupId&gt;com.yomahub&lt;/groupId&gt;
  &lt;artifactId&gt;akali&lt;/artifactId&gt;
  &lt;version&gt;1.0.1&lt;/version&gt;
&lt;/dependency&gt;
</code></pre><h2>對任意方法進行熱點處理</h2><p>只需要加上<code>@AkaliHot</code>這個標註，任意方法均可以獲得熱點檢測，並在熱點期間用熱點數據進行返回，在熱點過後，又會自動調用原本業務邏輯。</p><p>舉例：比如有一個商品查詢的業務，傳入 SkuCode，返回商品信息。當某個商品進行促銷時，訪問的量就會增加，但是對於相同的 SkuCode 而言，其短時間窗口內返回的 SkuInfo 是一致的，我們的目標是當某個商品 sku 被大量查詢時，框架能夠在短時間內把這個商品 sku 提為熱點數據，並通過對其進行緩存返回來降低對下游業務的壓力。而當熱點值過後，框架又能夠自動摘除這個熱點值，使其按照原有方式進行查詢。</p><p>其本質相當於實時的監測了熱點，並對其熱點數據做了一個短時間內的緩存。</p><p>以下示例代表了：當相同的 skuCode 在 5 秒內超過 50 次調用時，會自動把這個 skuCode 的值提為熱點，並用最後一次的返回值直接返回。當調用低於 5 秒 50 次調用時，框架會自動的摘除掉這個熱點。使其正常的調用你原有代碼進行邏輯計算並返回。這一切都是自動的。</p><pre><code>@AkaliHot(grade = FlowGradeEnum.FLOW_GRADE_QPS, count = 50, duration = 5)
public SkuInfo getSkuInfo(String skuCode){
  //do your biz and return sku info
}
</code></pre><p>其中<code>grade</code>參數除了有以<code>QPS</code>作為維度統計，還有以<code>Thread</code>個數作為維度統計。比如：</p><pre><code>@AkaliHot(grade = FlowGradeEnum.FLOW_GRADE_THREAD, count = 50, duration = 5)
public SkuInfo getSkuInfo(String skuCode){
  //do your biz and return sku info
}
</code></pre><p>這就代表了，如果某個 skuCode 在 5 秒之內有超過 50 個線程正在運行，那麼就提為熱點，並用熱點數據直接返回。</p><p>對開源項目比較熟悉的同學看到這肯定想到了京東的框架-<code>hotkey</code>，<code>Akali</code>不同於<code>hotkey</code>，完全是本地運行的，不依賴於服務端，而且接入比<code>hotkey</code> 方便多了。性能完全相當於<code>hotkey</code>。</p><h2>對任意方法進行降級</h2><p>只需要加上<code>@AkaliFallback</code>註解。任意方法均可獲得降級功能。</p><p>舉例：某一個方法需要調用外部的接口，但是外部的接口性能不佳，耗時高。當併發一高時，線程池就會吃滿，線程池隊列也會逐漸堆積從而導致超時，或者丟棄，嚴重時會拖垮整個系統。</p><p>這時，我們只要對這個方法加上<code>@AkaliFallback</code>標註，即可解決。</p><pre><code>@AkaliFallback(grade = FlowGradeEnum.FLOW_GRADE_THREAD, count = 100)
public String sayHi(String name){
  return "hi,"+name;
}

public String sayHiFallback(String name){
  return "fallback str";
}
</code></pre><p>以上註解表示了，當這個方法的同時運行的線程超過 100 個時，觸發降級，降級會自動調用<code>原方法名+Fallback</code>方法名 (並且參數要一致)，當降級觸發後會直接返回<code>fallback str</code>，當線程數小於 100 時，框架也會自動摘除降級，還是輸出<code>hi,xxxx</code>。</p><p>如果你的類中沒有定義 fallback 方法，那麼觸發降級時會報錯，當然你可以在降級方法中去拋錯，來讓上游系統知道你這個方法已經達到了瓶頸。</p><h2>注意事項</h2><p>Akali 只針對於 Springboot，Spring 環境，並且所有標註了<code>@AkaliHot</code>或者<code>@AkaliFallback</code>的類一定得註冊到 spring 上下文中。</p><p>Akali 在 springboot 中會自動掃描所有標註的類，您無需做任何配置，在 spring 中，你需要配置：</p><pre><code>&lt;bean class="com.yomahub.akali.strategy.FallbackStrategy"/&gt;
&lt;bean class="com.yomahub.akali.strategy.MethodHotspotStrategy"/&gt;
&lt;bean class="com.yomahub.akali.spring.AkaliScanner"/&gt;
</code></pre><h2>最後</h2><p>如果大家感興趣的話，請在 Gitee 上為 Akali 點上小星星哦。</p><p>Gitee：<a href="https://gitee.com/dromara/Akali">https://gitee.com/dromara/Akali</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 01:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266848</guid>
            <link>https://www.oschina.net/news/266848</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎉Solon v2.6 榮耀發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>先吹牛！</h2><p style="color:#24292e; text-align:start">在 v2.6 這個新的里程碑節點，Solon 又完成了幾件驚天大事（每一件，都是經歷了漫長時間打磨與積累）：</p><h4>（1）Solon Native，有了第一個開源案例：<a href="https://gitee.com/dromara/neutrino-proxy">dromara/neutrino-proxy</a><span>&nbsp;</span>（它是 2021 年起頭的二級項目）</h4><p style="color:#24292e; text-align:start">Solon 估計是國內唯搞 AOT 和 Java 原生編譯的。或許，這塊的友商只能是 Micronaut、Quarkus 和 Spring Native。</p><h4>（2）99% 換血重構了：<span>&nbsp;</span><a href="https://gitee.com/noear/socketd">Socket.D 通訊應用協議</a><span>&nbsp;</span>（它是 Solon 的二級項目，已孵化兩年）</h4><p style="color:#24292e; text-align:start">它是一種通訊應用協議，也是一個網絡開發框架。未來， 必會成為各種網絡開發場景的優選。開發 Mq, Im, Rpc 就跟玩似的。</p><h4>（3）重新設計了 Solon 的 WebSocket 接口標準</h4><p style="color:#24292e; text-align:start">這次的設計很專業、很純血。未來 10 年，估計都不用再動了。動它，是下了很大決心的</p><h4>（4）封裝了微 FaaS 引擎：<a href="https://gitee.com/noear/luffy">Luffy FaaS 引擎</a>（它也是 Solon 的二級項目，已孵化三年）</h4><p style="color:#24292e; text-align:start">隨時可能更新代碼，又不想重啓的場景。可以考慮用它了<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsolon.noear.org%2Farticle%2F664" target="_blank">luffy-solon-plugin</a>。<span style="background-color:#f1c40f">官網將推出全新的學習頻道：Solon Faas 開發</span>。</p><h4>（5）設定 Smart-Http 為 solon-api 的默認 http-server（它也打磨幾年了）</h4><p style="color:#24292e; text-align:start">smart-http ？它可能是國內唯一完整支持 http 1.1 協議的原創 http-server。換它，國產純血度大升級！</p><h2>Solon 是什麼框架？</h2><p style="color:#24292e; text-align:start"><strong>Java 新的"生態級"應用開發框架</strong>。<span style="background-color:#f1c40f">從零開始構建，有自己的標準規範與開放生態</span>（歷時五年，具備全球第二級別的生態規模）。Solon 生態的友商是 Spring 生態。Solon 的友商很強，所以很有意思。未來也將會在國際上照面。</p><h2>相對於 Spring，有什麼特點？</h2><ul><li>啓動快 5 ～ 10 倍。<span>&nbsp;</span><strong>（更快）</strong></li><li>qps 高 2～ 3 倍。<span>&nbsp;</span><strong>（更高）</strong></li><li>低流量內存節省 1/3 ~ 1/2。<span>&nbsp;</span><strong>（更少）</strong></li><li>打包可以縮小到 1/2 ~ 1/10；比如，300Mb 的變成了 23Mb。<span>&nbsp;</span><strong>（更小）</strong></li><li>同時支持 jdk8, jdk11, jdk17, jdk21,<span>&nbsp;</span><strong>graalvm native image</strong></li></ul><h2>入門探索視頻（用戶錄製）：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><iframe frameborder="0" height="400" scrolling="no" src="https://player.bilibili.com/player.html?aid=938467339&amp;bvid=BV1RT4y1a7U5&amp;cid=583394292&amp;page=1" style="box-sizing: border-box; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; text-align: start; background-color: rgb(255, 255, 255);" width="700" referrerpolicy="no-referrer"></iframe></p><h2>最近更新了什麼？</h2><ul><li><span style="background-color:#f1c40f">設定 smart-http 為 solon-api 快捷組合包的默認 http-server</span></li><li>重構 socketd 適配，升為 v2.0</li><li>重構 websocket 適配，升為 v2.0</li><li>新增 solon.net 模塊用於定義網絡接口，分離 websocket 與 socketd 的接口（分開後，用戶層面更清爽）</li><li>新增 solon.boot.socketd 插件</li><li>新增 sa-token-dao-redisson-jackson 插件</li><li>添加 SolonApp::filterIfAbsent,routerInterceptorIfAbsent 接口</li><li>添加 AppContext::getBeansMapOfType 接口</li><li>添加 websocket context-path 過濾處理機制</li><li>添加<span>&nbsp;</span><code>@Cache</code><span>&nbsp;</span>緩存註解處理對動態開關的支持（之前，只能在啓動時決定）</li><li>添加<span>&nbsp;</span><code>@Tran</code><span>&nbsp;</span>事務註解處理對動態開關的支持（之前，只能在啓動時決定）</li><li>添加 solon.boot.smarthttp 外部優先級處理（成為默認後，要方便外部替換它）</li><li>調整 smart-http,jetty,undertow 統一使用 server.http.idleTimeout 配置</li><li>調整<span>&nbsp;</span><code>@ProxyComponent</code><span>&nbsp;</span>棄用提示為直接提示（之前為 debug 模式下）</li><li>移除 AopContext（完成更名 AppContext 的第二步動作）</li><li>移除 PathLimiter （已無用，留着有誤導性）</li><li>移除 SolonApp::enableWebSocketD,enableWebSocketMvc,enableSocketMvc（已無用，留着有誤導性）</li><li>優化 http context-path 過濾器處理機制</li><li>優化 solon.test 的<span>&nbsp;</span><code>@Rollback</code><span>&nbsp;</span>註解處理，支持 web 的事務控制</li><li>優化 solon.scheduling.simple 保持與 jdk 調度服務的策略一致</li><li>刪除 socketd v1.0 相關的 10 多個插件（v2.0 獨立倉庫）</li><li>jackson 升為 2.15.2</li><li>pagehelper 升為 5.3.3</li><li>liteflow 升為 2.11.3</li><li>activemq 升為 5.16.7</li><li>redisx 升為 1.6.2</li><li>minio8 升為 8.5.3</li><li>sqltoy 升為 5.2.81</li><li>fastjson2 升為 2.0.42</li><li>luffy 升為 1.6.9</li><li>water 升為 2.12.0</li></ul><h2>項目倉庫地址？</h2><ul><li>gitee：<a href="https://gitee.com/noear/solon">https://gitee.com/noear/solon</a></li><li>github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnoear%2Fsolon" target="_blank">https://github.com/noear/solon</a></li></ul><p>&nbsp;</p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 16 Nov 2023 00:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266845/solon-2-6-released</guid>
            <link>https://www.oschina.net/news/266845/solon-2-6-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微軟推出全新「Windows App」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">微軟在&nbsp;Ignite 2023 上宣佈推出一款適用於 iOS、iPadOS、Web 和 Windows 的全新「Windows App」，目前正以預覽版形式提供。</span></p><p><span style="color:#000000">用戶可以通過該 APP 連接 Windows 365、Azure 虛擬桌面、Microsoft Dev Box 或個人遠程桌面 PC。在手機或 iPad 上，用戶無需下載或安裝任何內容即可啓動 Windows 環境。</span></p><p><span style="color:#000000"><img alt="" height="309" src="https://oscimg.oschina.net/oscnet/up-6de517b3878e038efe903ec950a3f14d987.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">新的 Windows APP 帶來了多項新功能：如支持多顯示器、自定義顯示分辨率、動態顯示縮放、網絡攝像頭、音頻和打印機的設備重定向等。用戶可以固定最喜歡的應用程序，以便快速訪問，還可以在不同賬戶之間輕鬆切換。</span></p><p><span style="color:#000000">雖然微軟官方表示該應用程序僅上架 iOS、Windows、macOS 以及網頁端，但提供的屏幕截圖顯示 Android&nbsp;平板上也能運行該應用。或許 Android 版本將會在不久的未來推出。</span></p><p><span style="color:#000000">不過，該 Windows APP 僅面向微軟企業用戶提供，個人賬戶無法訪問相關服務。但有跡象表明，微軟計劃通過 Windows 365 為普通消費者提供雲 PC。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 09:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266787/microsoft-windows-app-launched-run-cloud-pc</guid>
            <link>https://www.oschina.net/news/266787/microsoft-windows-app-launched-run-cloud-pc</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ClickHouse 聯合創始人、前 Google 副總裁 Yury 到訪杭州玖章算術公司，雙方建立生態合作]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span><span style="color:#000000">10 月 31 日，ClickHouse 聯合創始人 Yury 到訪未來科技城，與玖章算術創始人葉正盛和國際總經理 Ni Demai 展開溝通與推進合作。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-3abad57e89ff8fcc5278d96ff167a2bf87d.jpg" width="1707" referrerpolicy="no-referrer"></p><p style="color:#999999; margin-left:0; margin-right:0; text-align:center">圖片備註：Ni Demai(左),Yury(中),葉正盛 (右)</p></div><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">ClickHouse 是深受開發者青睞的實時分析型數據庫，成立 2 年就發展成為基礎軟件領域的獨角獸，玖章算術核心產品 NineData 則是中國數據庫工具領域的佼佼者。通過本次溝通，</span><span style="color:#f04142">ClickHouse 將繼續增加其在生態能力上的投入，引入玖章算術成為 ClickHouse 全球正式合作伙伴</span><span style="color:#000000">，NineData 將提供數據複製、SQL 開發等能力，幫助開發者更加便捷、穩定地使用 ClickHouse。</span></span></p><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">ClickHouse 中國區負責人王楠（Tracy）、玖章算術首席產品經理蔡冬者參與了本次會議，雙方深度交流了 NineData 幫助 ClikHouse 完成數據複製的實踐場景，將在 ClickHouse 中國社區發展深度合作。</span></span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="1659" src="https://oscimg.oschina.net/oscnet/up-29fbbc98347ec5e04fcc19c903bdcbea0d0.jpg" width="2091" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">Yury 作為 ClickHouse 的聯合創始人、產品和工程總裁，是前谷歌、Netflix 的副總裁。<span style="color:#f04142">本次代表 ClickHouse 與玖章算術 CEO 葉正盛進行溝通，旨在加強兩家公司之間的合作，增強 ClickHouse 的生態能力建設，幫助開發者更好地使用 ClickHouse。</span></p><p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-d6908642b538092775611c1383c849b5928.jpg" width="2301" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">葉正盛是玖章算術創始人，在數據庫生態工具產品裏有 20 年經驗，是國內把數據庫生態工具體系做成專業產品的第一人。後續，</span><span style="color:#f04142">NineData 將快速支持 ClickHouse 最新版本，適配 ClickHouse Cloud，同時會更大力度投入中國 ClickHouse 社區建設。</span></span></p><div><p style="text-align:center"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-e0d4a2d815c5fc2bf9daf62ae54c45c901c.jpg" width="2301" referrerpolicy="no-referrer"></p><p style="color:#999999; margin-left:0; margin-right:0; text-align:center">玖章算術創始人葉正盛（中）</p></div><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">NineData 提供企業級 SQL 開發能力，包括數據庫堡壘機、生產變更服務，以及細粒度權限管控、審計、敏感數據脫敏處理等功能。並集成了大模型 AI 技術，提供智能 SQL 編寫、SQL 優化和數據庫專業知識問答，能夠幫助客戶提高 DBA 與技術團隊及 ISV 夥伴的合作效率。</span></span></p><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">NineData 的數據複製能力可應用於多種場景，包括在線數據庫到數據倉庫實時同步、數據庫國產化替換、數據上雲、數據容災等，支持 1000 公里數據實時同步，複製性能超過 10 萬 TPS，領先於市場主流產品。</span></span></p><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">NineData 的創始團隊由阿里雲、華為、IBM 等公司資深數據庫專家組成。NineData 支持 MySQL、Oracle、PostgreSQL、ClickHouse、Redis、MongoDB、Doris 等 60 種主流數據源。</span></span></p><div><p style="text-align:center"><img alt="" height="1332" src="https://oscimg.oschina.net/oscnet/up-7e72cd287ff75493e4b1730da64f74e22f5.png" width="2878" referrerpolicy="no-referrer"></p><p style="color:#999999; margin-left:0; margin-right:0; text-align:center">NineData 支持 60 種主流數據源</p></div><p style="margin-left:0; margin-right:0"><span><span style="color:#000000">目前，NineData 已經為上萬開發者提供服務，在中國移動、沃爾沃、綠城集團等大型企業上線，與華為雲、阿里雲、騰訊雲、百度雲、移動雲、AWS、Apache Doris、SelectDB 等平台建立了緊密合作關係。NineData 的目標是讓企業各個數據源之間的數據自由流動，讓數據管理與研發流程更安全、更高效。</span></span></p><p style="margin-left:0px; margin-right:0px"><span><strong><span style="color:#000000">結束語：</span></strong><span style="color:#000000"><span>&nbsp;</span>ClickHouse 與玖章算術 NineData 的合作將促進其生態系統的發展，NineData 將更好地支持 ClickHouse 數據庫複製、SQL 開發等。這一合作將為中國的 ClickHouse 社區帶來更多支持和創新，進一步推動社區發展，幫助開發者更好的使用 ClickHouse，發掘數據價值，推進企業業務發展。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 09:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266785</guid>
            <link>https://www.oschina.net/news/266785</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GitHub 報告：TypeScript 取代 Java 成為第三受歡迎語言]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">GitHub 發佈了 2023 年度&nbsp;Octoverse 開源狀態報告。主要研究了圍繞 AI、雲和 Git 的開源活動如何改變開發人員體驗，以及如何在開發者和企業中產生越來越大的影響。</span></p><p><span style="color:#000000">報告發現了三大趨勢：</span></p><ul><li><span style="color:#000000"><strong>開發人員正在大量使用生成式 AI 進行構建。</strong>越來越多的開發人員嘗試使用 OpenAI 和其他 AI 公司的基礎模型，開源生成式 AI 項目甚至在 2023 年進入了按貢獻者數量排名的十大最受歡迎的開源項目。幾乎所有開發人員 (92%) 都在使用或嘗試藉助 AI 編碼工具。</span></li><li><span style="color:#000000"><strong>開發人員正在大規模運行雲原生應用程序。</strong>使用基於 Git 的基礎設施即代碼 (IaC) 工作流的聲明式語言越來越多，雲部署的標準化程度更高，開發人員使用 Dockerfile 和容器、IaC 以及其他雲原生技術的速度也急劇加快。</span></li><li><span style="color:#000000"><strong>2023 年 first-time 開源貢獻者數量最多。</strong>其中，有商業支持的開源項目依舊最受貢獻者歡迎。但生成式 AI 項目在今年進入了 first-time 貢獻者最受歡迎的的十大項目之列。GitHub 上的私人項目顯着增長，同比增長 38%，佔 GitHub 上所有活動的 80% 以上。</span></li></ul><p><span style="color:#000000"><strong>全球開發者社區</strong>繼續增長。美國擁有 2020 萬開發者，開發者人數在去年增長了 21%，仍然是全球最大的開發者社區。亞太地區、非洲、南美洲和歐洲的開發者社區規模逐年擴大，其中印度、巴西和日本處於領先地位。</span></p><p><span style="color:#000000">預計到 2027 年，印度將取代美國成為 GitHub 上最大的開發者社區。新加坡今年是亞太地區開發者人數增長最快的國家，並且是開發者佔總人口的比例最高的第地區（全球範圍內）。報告指出，由於日本在技術和初創企業方面的進一步投資，明年日本的開發者將有持續增長。</span></p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-ac720a0e760e91cc5b2eb3fbe5912621880.webp" width="500" referrerpolicy="no-referrer"></p><p><img height="356" src="https://oscimg.oschina.net/oscnet/up-80f62228356fcbdefb478e041a0eac39e37.png" width="400" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><strong>生成式 AI </strong>在 2023 年經歷了爆發式增長，僅半年內湧現出的生成式 AI 項目數量就已達到了 2022 年全年的兩倍之多。開發人員也開始更多地嘗試使用 AI 模型。前幾年，開發人員常使用 tensorflow/tensorflow、pytorch/pytorch 等機器學習庫構建項目；現在則更多嘗試使用 AI 模型和 LLM（如 ChatGPT API）。</span></p><p><img height="270" src="https://oscimg.oschina.net/oscnet/up-7496f60e2ee0f94240f5faf6341e5262a5b.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">報告分析了 GitHub 上排名前 20 位的開源生成式 AI 項目，發現其中一些頂級項目都是由個人所有。生成式 AI 項目中的個人貢獻者正在全球範圍內大幅飆升，同比增長幅度達到了 148%，而生成式 AI 項目總數也同比增長 248%。</span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">美國、印度和日本在開發者社區中處於領先地位，</span><span style="background-color:#ffffff; color:#24292f">香港特別行政區</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">、英國和巴西緊隨其後。</span></p><p><img height="257" src="https://oscimg.oschina.net/oscnet/up-24b4f2b8554174e97591f4e9b11183c4b8e.png" width="500" referrerpolicy="no-referrer"></p><p><strong style="color:rgba(0, 0, 0, 0.9)">最流行的編程語言</strong></p><p><img height="144" src="https://oscimg.oschina.net/oscnet/up-3a0a14c95ce1e310f742e6ce36ad9af9795.png" width="500" referrerpolicy="no-referrer"></p><p>報告指出，<span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">自 2019 年雲原生開發大規模增長以來，IaC 在開源領域持續增長。2023 年，Shell 和 Hashicorp 配置語言（HCL）再次成為開源項目中的頂級語言，</span><span style="background-color:#ffffff; color:#24292f">HCL 採用率同比增長 36%；「表明運維和 IaC 工作在開源領域越來越受到重視」。</span></p><p><img height="263" src="https://oscimg.oschina.net/oscnet/up-72dde2bf24c363d79ba454d8df65c964a2b.png" width="500" referrerpolicy="no-referrer"></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><span style="color:#000000">JavaScript 仍然是 GitHub 上最常用的語言，其次是 Python。</span></li><li><span style="color:#000000">TypeScript 越來越受歡迎，<span style="background-color:#ffffff">首次取代 Java 成為 GitHub 上 OSS 項目中第三大最受歡迎的語言，其用戶羣增長了 37%。</span></span></li><li><span style="color:#000000">用於數據分析和操作的流行語言和框架明顯增加。T-SQL 和 TeX 等古老的語言在 2023 年均有所增長，凸顯了數據科學家、數學家和分析師越來越多地使用開源平台和工具。「<span style="background-color:#ffffff">編程語言不再僅僅侷限於傳統軟件開發領域</span>」。</span></li><li><span style="color:#000000"><span style="background-color:#ffffff">在 GitHub 上一些較新的項目中，Kotlin、Rust、Go 和 Lua 的採用出現了較大的增長。「Rust 和 Lua 都以內存安全和高效著稱，而且都可用於系統和嵌入式系統編程，這也是它們增長的原因。而 Go 最近的增長則是由 Kubernetes 和 Prometheus 等雲原生項目的推動。」</span></span></li></ul><p><img height="262" src="https://oscimg.oschina.net/oscnet/up-58e41eb95e2505a64d2a2a8a7b46fdf4ee6.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">其他一些發現還包括：</span></span></p><ul><li><span style="color:#000000"><span style="background-color:#ffffff">與 2022 年相比，2023 年開源代碼開發人員合併的針對易受攻擊軟件包的自動 Dependabot 拉取請求增加了 60%</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">2023 年，</span><span style="background-color:#ffffff">開發者</span><span style="background-color:#ffffff">為 GitHub 上的開源項目做出了 3.01 億次貢獻，這些項目既有像 Mastodon 這樣的熱門項目，也有像 Stable Diffusion 和 LangChain 這樣的生成式 AI 項目。</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">2023 年有 430 萬個存儲庫使用了 Docker。Linux 發行版 NixOS/nixpkgs 在過去兩年中一直位居開源項目貢獻者榜首。</span></span></li></ul><p><span style="background-color:#ffffff; color:#333333">更多詳情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.blog%2F2023-11-08-the-state-of-open-source-and-ai%2F" target="_blank">查看完整報告</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 15 Nov 2023 07:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266757/2023-state-of-the-octoverse</guid>
            <link>https://www.oschina.net/news/266757/2023-state-of-the-octoverse</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
