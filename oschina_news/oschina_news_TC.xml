<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 21 Dec 2023 19:13:01 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[使用開源項目，為你的老闆快速創建一個個性化的數據面板]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>每家公司都有屬於自己公司的專屬線上業務，隨着業務的不斷更新和迭代，業務的複雜度也會隨着時間的積累不斷的提高。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>當業務複雜度很高之後，隨之而來團隊內部需要查看各種各樣的數據，來為未來的戰略做決策。所以我們需要一個靈活的工具來製作個性化的數據面板來滿足團隊內部不同成員（尤其是老闆）的各種定製化需求，從而幫助團隊快速迭代。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>使用高效工具，每天提前下班。</span></p><h2><span>構建中的一些問題</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>每家公司的業務都分佈在了不同的系統裏面，各個系統之間還存在一些關聯。有些數據需要使用數據庫來進行查詢</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>Postgresql</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Mysql</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>MongoDB</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>。。。</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>有些數據來自於不同類型的微服務，可能是從某一個 API 來進行獲取的。</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>User Detail API</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Product Detail API</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>。。。</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>最可怕的事情是有些數據需要使用數據庫 + API 的數據進行合併並且二次處理之後才能獲取。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>這些問題對構建一個個性化的數據面板來説是一個非常麻煩的事情。如果從零到一開始開發，我們需要針對不同的數據源進行適配，這隨之而來的工程成本會直線上升。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>所以我們需要一個靈活的工具來進行數據面板的展示，畢竟「開發」不是最重要的，「展示」才是。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>這個工具需要一些客觀的優勢：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>圖表豐富，能展示不同緯度的數據。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>支持各種主流的數據源查詢</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>安裝使用簡單</span></p></li></ul><h2><span>如何解決</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>這裏推薦一個好用的開源項目，叫做 ILLA Cloud，ILLA Cloud 是一個開源的低代碼工具，專門用來解決構建個性化需求的場景。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>📙 官網地址：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Filla.cloud%3Futm_source%3Djuejin" target="_blank"><span>https://illa.cloud</span></a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>⏬ Github 地址：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fillacloud%2Filla-builder" target="_blank">https://github.com/illacloud/illa-builder</a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>⭐ Github Stars: 9k</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>下面顯示一個 Demo，使用的是 Fake 數據。這個 Demo 描述的是一家公司的某一個產品的銷售額情況，包括</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>每個月的銷售新增趨勢</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>每個月的收入</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>總共獲取到的收入</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>一共有多少人購買</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>每個購買的用戶的詳細信息</span></p></li></ul><p><img height="1395" src="https://oscimg.oschina.net/oscnet/up-76454ebcd3a08b8584294182cd03a2624d4.png" width="2263" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>這個圖表使用了下面幾個組件</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>Data Grid</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Chart</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Statistic</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Menu</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>通過拖拉拽的方式很快的就構建了出來。數據源來自於</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>Supabase：一個 Serverless 的 Postgresql</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>API</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ILLA 支持多種數據源，可以快速從大量主流的數據源裏面獲取數據。</span></p><p><img height="1520" src="https://oscimg.oschina.net/oscnet/up-ad6f5088cce846c5dd20e25a4f485585937.png" width="2540" referrerpolicy="no-referrer"></p><h2><span>AI 驅動</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ILLA 不僅僅可以獲取一個面板，查詢到的數據可以使用 LLM 來進行二次處理。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>比如：將一組格式很亂的數據根據要求處理成另外一種格式的數據。從而讓多個數據源的數據可以進行對齊。</span></p><h2><span>優勢</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>使用拖拉拽的方式進行構建，幾分鐘就可以快速構建一個精美的面板。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>並且，ILLA Cloud 相對於傳統的各種 BI</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>不僅支持數據庫的數據查詢，還支持從 API 獲取數據</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>安裝簡單，Web 頁面上直接使用，無需任何下載</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>對於數據的二次處理，使用 Javascript 即可直接進行處理，簡單快捷</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>支持各種主流的圖表，滿足大多數需求</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Transformer 功能有效的解決了多個數據之間合併處理的問題，再也不為數據格式問題困擾</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ILLA Cloud 作為一個開源項目也支持二次開發，社區也比較活躍，可以同其他開發者建設。不用擔心維護的問題。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>而且 ILLA Cloud 不僅可以構建數據面板，也可以快速構建專屬的管理面板，讓你的業務迭代從此快速起來。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>作為一個低代碼工具，ILLA Cloud 還支持多人協作，可以多個人一起構建面板。</span></p><p><img height="1520" src="https://oscimg.oschina.net/oscnet/up-82d0689167a45f55f755c8786e6fa2b5400.png" width="2540" referrerpolicy="no-referrer"></p><h2><span>總結</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>使用 ILLA Cloud 之後，再也不怕老闆的個性化需求困擾了，幾分鐘之後就可以構建一個老闆專屬的數據面板，從此成為一個高效率的員工。還不快試試！</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 11:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272062</guid>
            <link>https://www.oschina.net/news/272062</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[大模型微調方法總結：LoRA、Adapter、Prefix-tuning、P-tuning、Prompt-tuning]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>隨着深度學習技術的不斷髮展，大型預訓練模型已成為許多任務的重要工具。然而，微調（finetuning）這些大<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.baidu.com%2Fproduct%2Fwenxinworkshop%3Ftrack%3Dzwdl" title="模型" target="_blank">模型</a>以適應特定任務是一個複雜且計算密集型的過程。本文將重點介紹五種不同的微調方法：LoRA、Adapter、Prefix-tuning、P-tuning 和 Prompt-tuning，並對它們進行總結。</p><p>LoRA (Learned Representations for Finetuning) LoRA 是一種新型的微調方法，旨在解決預訓練模型微調過程中存在的兩大問題：模型調整過程中對初始模型過度依賴以及微調過程中存在的過擬合問題。LoRA 通過在預訓練模型中引入一個額外的線性層，並使用特定任務的訓練數據來微調這個線性層。這種方法使模型能夠更好地適應特定任務，同時減少了對初始模型的過度依賴。</p><p>Adapter Adapter 是一種簡單而有效的微調方法，它通過在預訓練模型的特定層上添加一個可學習的附加層來適應特定任務。這個附加層可以是線性層、非線性層或其他類型的層，其目的是對預訓練模型的輸出進行微調，使其更好地適應特定任務。Adapter 具有較低的計算成本和較好的性能，使其成為處理小數據集的理想選擇。</p><p>Prefix-tuning Prefix-tuning 方法通過微調預訓練模型的特定部分（稱為「前綴」）以適應特定任務。這種方法只微調前綴，而不是整個模型，從而減少了計算成本和過擬合的風險。Prefix-tuning 的性能通常優於傳統的微調方法，但不及完整的模型微調。</p><p>P-tuning P-tuning 是一種改進的微調方法，通過引入一個參數化轉換矩陣來調整預訓練模型的權重。這個矩陣可以學習地改變預訓練模型的權重分佈，使其更好地適應特定任務。P-tuning 在保持良好性能的同時，減少了微調過程中對初始模型的過度依賴。</p><p>Prompt-tuning Prompt-tuning 是一種新穎的微調方法，利用了近年來自然語言處理領域的 prompting 技術。該方法通過修改預訓練模型的輸入來適應特定任務，使其在輸入階段就考慮到任務的特定需求。Prompt-tuning 可以顯著提高模型的性能，同時減少了對初始模型的過度依賴和過擬合的風險。</p><p>總結： 這五種微調方法在處理大型預訓練模型以適應特定任務方面都具有各自的優點和適用場景。LoRA 通過引入額外的線性層來減少對初始模型的過度依賴和過擬合問題；Adapter 具有較低的計算成本和較好的性能，適用於小數據集；Prefix-tuning 只微調預訓練模型的前綴，減少了計算成本和過擬合的風險；P-tuning 通過引入參數化轉換矩陣來調整預訓練模型的權重，減少了過度依賴；Prompt-tuning 利用 prompting 技術修改預訓練模型的輸入，顯著提高性能並減少過度依賴和過擬合的風險。在實際應用中，應根據具體任務和數據集選擇合適的微調方法。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 07:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4299156/blog/10323822</guid>
            <link>https://my.oschina.net/u/4299156/blog/10323822</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zadig 支持 Android、iOS App 自動化發佈了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><span><img alt="Zadig 支持 Android、iOS App 自動化發佈了" height="0" src="https://picx.zhimg.com/70/v2-534853454b2165556c59a9e971996fc1_1440w.image?source=172ae18b&amp;biz_tag=Post" width="100%" referrerpolicy="no-referrer"></span></div></div></div><div><div><div><div><p style="margin-left:0; margin-right:0">在不斷演進的移動應用開發領域，構建高效的發佈流程成為取得成功的關鍵之一。Zadig 為發佈流程提供了更多選擇，不僅支持容器構建，還全面支持主機構建，涵蓋多種操作系統，包括 Linux、MacOS 等，同時支持 AMD 和 ARM 架構。</p><p style="margin-left:0; margin-right:0">本文將深入探討 Zadig 支持容器和主機構建的原因，並結合 Android 和 iOS App 的實例，詳細介紹如何在 Zadig 上靈活地利用主機資源進行客戶端應用的編譯和發佈。</p><span id="OSC_h1_1"></span><h1><strong>01-為什麼 Zadig 同時支持容器和主機構建？</strong></h1><span id="OSC_h3_2"></span><h3><strong>1.靈活性與選擇權：</strong></h3><p style="margin-left:0; margin-right:0">容器構建具有輕量級和可移植性的優勢，適用於多種場景。然而，主機構建提供更大的靈活性，允許根據項目需求和企業網絡約束進行定製和配置。Zadig 深知不同項目和基礎設施的差異性，因此支持兩種構建方式，讓用戶能夠根據實際情況做出最佳選擇。</p><span id="OSC_h3_3"></span><h3><strong>2.異構生態整合：</strong></h3><p style="margin-left:0; margin-right:0">眾多企業涉足各類項目和基礎架構，其中一些項目積極採用容器技術，而傳統業務往往依賴主機基礎設施。Zadig 的雙重支持確保在異構場景中，能一站式搭建開發和發佈流程，降低不必要的過渡成本。</p><span id="OSC_h1_4"></span><h1><strong>02-前置操作 - 在 Zadig 集成主機作為構建節點</strong></h1><p style="margin-left:0; margin-right:0">需要先在 Zadig 上集成主機資源，Zadig 工作流任務才可以使用主機作為構建節點，具體集成過程如下：</p><p style="margin-left:0; margin-right:0"><em><strong>第一步：</strong></em>在 Zadig 上「資源配置」&gt; 「主機管理」&gt; 添加主機，填寫以下必要的信息。</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>主機名稱：用於標識主機的名稱</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>標籤：工作流可以通過標籤來限制任務執行的主機</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>調度工作流任務：選擇<span>&nbsp;</span><strong><em>是</em></strong>，允許工作流任務調度到該主機上</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>任務根目錄：工作流任務的工作目錄</p><div><img src="https://pic3.zhimg.com/80/v2-c7411c7b7a1390d7e7929f74921690f6_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0"><em><strong>第二步：</strong></em>在主機上安裝 Zadig Agent。根據主機的實際系統和架構選擇對應命令在主機上執行。此處我們集成了兩台主機（標籤分別為<span>&nbsp;</span><em><strong>linux</strong></em><span>&nbsp;</span>和<span>&nbsp;</span><em><strong>mac</strong></em><span>&nbsp;</span>）分別用於後續 Android App 和 iOS App 的構建發佈。</p><div><img src="https://pic2.zhimg.com/80/v2-c8f3ffa13e3e238e76c66917b6164791_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic4.zhimg.com/80/v2-cfffef86ff4e6905bd86a6a7eeb4b243_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h1_5"></span><h1><strong>03-Android App 自動化發佈</strong></h1><span id="OSC_h3_6"></span><h3><em><strong>配置工作流</strong></em></h3><p style="margin-left:0; margin-right:0"><em><strong>第一步：</strong></em>新建自定義工作流 &gt; 添加「階段」&gt; 添加「任務」，選擇「通用任務」</p><div><img src="https://pic3.zhimg.com/80/v2-20553da6e9860a2b0f77ff26d8068d8a_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic4.zhimg.com/80/v2-700c240a8aedde78d0723a7cfe827c13_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0"><em><strong>第一步：</strong></em>配置「通用任務」</p><div><img src="https://pic1.zhimg.com/80/v2-1baea1c786a53cb1bee95ccc35fd8ea4_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic3.zhimg.com/80/v2-ebd9fef1fdc8a1e87c7333bfd0613206_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic4.zhimg.com/80/v2-f0e2d4f0f16a7954e81eec3fe1c117ef_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>基礎設施：選擇<span>&nbsp;</span><strong><em>主機</em></strong></p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>執行主機：選擇預先配置的<span>&nbsp;</span><strong><em>linux</em></strong><span>&nbsp;</span>主機標籤</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>代碼信息：選擇 Android App 所在的代碼庫</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>執行腳本：測試和發佈階段編寫不同腳本實現交付過程自動化</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>測試階段：包括編譯打包 Android App 和推送 App 到應用分發平台步驟</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>發佈階段：包括編譯打包 Android App 和上架 App 到應用商店步驟</p><span id="OSC_h3_7"></span><h3><em><strong>執行工作流</strong></em></h3><p style="margin-left:0; margin-right:0">執行工作流選擇代碼信息，完成 Android App 自動化發佈過程。</p><div><img src="https://pic2.zhimg.com/80/v2-02cfcc02d21553d5b3a994b318d82e61_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic2.zhimg.com/80/v2-883f061f980bfa61843fedac96e26d91_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h1_8"></span><h1><strong>04-iOS App 自動化發佈</strong></h1><span id="OSC_h3_9"></span><h3><em><strong>配置工作流</strong></em></h3><p style="margin-left:0; margin-right:0"><em><strong>第一步：</strong></em>新建自定義工作流 &gt; 添加「階段」&gt; 添加「任務」，選擇「通用任務」</p><div><img src="https://pic3.zhimg.com/80/v2-20553da6e9860a2b0f77ff26d8068d8a_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic4.zhimg.com/80/v2-5c0b472a3f43690fe8687cc37633cf2b_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0"><em><strong>第二步：</strong></em>配置「通用任務」</p><div><img src="https://pic4.zhimg.com/80/v2-d0680eba2dd8fb09236177e1c5ec4d7f_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic1.zhimg.com/80/v2-596d3d4f4227c993982c18d4edfed5c0_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic2.zhimg.com/80/v2-ae16c55a7695cb25e4dbfee55c770bb1_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>基礎設施：選擇<span>&nbsp;</span><strong><em>主機</em></strong></p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>執行主機：選擇預先配置的<span>&nbsp;</span><strong><em>mac</em></strong><span>&nbsp;</span>主機標籤</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>代碼信息：選擇 iOS App 所在的代碼庫</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>執行腳本：測試和發佈階段編寫不同腳本實現交付過程自動化</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>測試階段：包括編譯打包 iOS App 和推送 App 到應用分發平台步驟</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>發佈階段：包括編譯打包 iOS App 和上架 App 到應用商店步驟</p><span id="OSC_h3_10"></span><h3><em><strong>執行工作流</strong></em></h3><p style="margin-left:0; margin-right:0">執行工作流選擇代碼信息，完成 iOS App 自動化發佈過程。</p><div><img src="https://pic1.zhimg.com/80/v2-c8fcacb94793e3d76040e8483db839f0_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic1.zhimg.com/80/v2-278d668ca6613f58e8f8932b47c7ae64_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">Zadig 後續版本將支持 Windows 主機作為構建節點，滿足 Windows 應用的構建發佈，敬請期待……</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">立即體驗 Zadig V2.0 新架構，開啓高效交付之旅！🚀&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968">Zadig 開放，鏈接，專業</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ed2906cceb629103785658ca6748d6cd8ea.png" referrerpolicy="no-referrer"></span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491363%26idx%3D1%26sn%3Dd6ccb8938f4702f560f28d5b79324cf3%26chksm%3Dcfb45383f8c3da9540c0c3eb1080f729fa2545db2063159b5fb05ddeb818f082e21adb2f9189%26token%3D1376697300%26lang%3Dzh_CN%23rd" target="_blank" rel="nofollow">閲讀原文</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank" rel="nofollow">Zadig 在 Github</a>&nbsp;/&nbsp;<a href="https://gitee.com/koderover/zadig" rel="nofollow">Zadig 在 Gitee</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>推薦閲讀 :&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490415%26idx%3D1%26sn%3D1914c7fd25aac5d33b98663571bbb744%26chksm%3Dcfb457cff8c3ded9c02809aad88012fa802eac55222eebe70b8c637ca2c86a101045aa81e73a%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">是時候和 Jenkins 説再見了</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491329%26idx%3D1%26sn%3D1a729186b2b5ca733c578ee8b288e823%26chksm%3Dcfb453a1f8c3dab74fb1118ac1c95aa898437a8f786385b21e0b0799d6da4eda9101acb626c0%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">Zadig 深度集成 Apollo 實現跨環境配置的一致性傳遞</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490637%26idx%3D1%26sn%3D6e0498b37fb15f8b8903c4997e5611d8%26chksm%3Dcfb450edf8c3d9fb758d691081f09fd85d91dbb17534ba9c18c2300725462d3806581efbd237%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">Zadig vs. Jenkins 詳細比對：時代的選擇與開發者之選</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491301%26idx%3D1%26sn%3Db6fb856b449dbab1e0959996dd218b4d%26chksm%3Dcfb45245f8c3db53add8e70502f98be8dc237b9f2d3462b48e603f5eb6acef05e5ff7b42b029%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">Zadig 突破 Nacos 跨環境配置變更挑戰：自動化實現一致性變更</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491336%26idx%3D1%26sn%3D805f7d2c44c96cab529ffef120d84ca0%26chksm%3Dcfb453a8f8c3dabe83163a873135f2a72cdddcb9faeecefe5e40f20a358681304484c56cce51%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">ZADIG 專家版傾情上線：一鍵高效發佈，119 元/人月起，社區老友享年終福利！</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p></div></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 05:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/10322989</guid>
            <link>https://my.oschina.net/koderover/blog/10322989</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[特斯拉因自動駕駛隱患召回 200 萬輛車，但被指修復措施不夠]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>特斯拉正在召回<strong>幾乎所有在美國銷售的車輛（超過 200 萬）</strong>，以更新軟件並修復有缺陷的自動駕駛系統，該系統旨在確保駕駛員在使用 Autopilot 時集中注意力。</p><p>根據美國國家公路交通安全管理局 (NHTSA) 的調查，特斯拉的自動駕駛系統啓動之後，如果駕駛員沒有保持對車輛的操控，或在必要時沒有做好操控車輛的準備，發生碰撞的風險可能會升高。如果駕駛員未能識別自動駕駛已經關閉或未啓動，行車風險也會增加。</p><p>同時，NHTSA 調查數據表明，在實際使用過程中，多數特斯拉車主將"自動輔助駕駛"視為"自動駕駛"，從而導致事故發生。</p><p>根據 NHTSA 的説法，特斯拉不同意該機構的分析，但同意自願實施召回並提供軟件更新，以解決調查問題。</p><p>美國《消費者報告》的專家則表示，根據他們的初步評估，<strong>特斯拉針對 Autopilot 提供的修復措施「仍不足夠」</strong>。因為該功能仍然容易被駕駛員濫用。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1221/121705_Yfk8_2720166.png" referrerpolicy="no-referrer"></p><p>來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.consumerreports.org%2Fcars%2Fcar-recalls-defects%2Ftesla-recalls-cars-due-to-autopilot-concerns-a6186663858%2F" target="_blank">https://www.consumerreports.org/</a></u></em></p></blockquote><p>《消費者報告》汽車測試中心汽車技術副總監 Kelly Funkhouser 表示，儘管對特斯拉在最新 OTA 中做出的一些改變感到欣喜，<strong>但它在防止誤操作或解決駕駛員注意力不集中等「根本因素」上做得還不夠</strong>。</p><p>例如，當研究人員遮住了用於監控車主的攝像頭之後，Autopilot 仍然能被打開。「如果駕駛員偏離視線、使用手機或分心，他們仍可以使用 Autopilot。」</p><p>此外，當駕駛員選擇自己操作車輛時，Autopilot 還是會像以前一樣斷開 —— 而作為對比，寶馬、福特、奔馳等「傳統品牌」的輔助駕駛都支持「協同轉向」功能，車主可在不斷開變道輔助系統的情況下進行轉向。</p><p>「當 Autopilot 處於激活狀態下，它就不存在協同轉向。這意味着要麼是汽車自己在駕駛，要麼是人類駕駛員在開車，只有這兩種選擇。」Kelly Funkhouser 表示：「駕駛員應該（通過操控）繞過坑洞或轉向的騎車人，再或者為相鄰車輛留出額外空間，而不是每次都要重啓一遍 Autopilot。」</p><hr><p>延伸閲讀</p><ul><li><a href="https://www.oschina.net/news/260260" target="_blank">特斯拉：FSD 不使用高清地圖，只依賴神經網絡和海量數據</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 04:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272005</guid>
            <link>https://www.oschina.net/news/272005</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Anthropic 洽談 7.5 億美元融資 ，估值已達 150 億美元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theinformation.com%2Farticles%2Fanthropic-to-raise-750-million-in-menlo-ventures-led-deal" target="_blank">The Information</a> 援引知情人士消息稱，亞馬遜公司和谷歌所支持的人工智能初創公司 Anthropic，正在洽談由一輪 Menlo Ventures 領投的 7.5 億美元風險投資。</p><p>目前，Anthropic 公司的估值已經達到了 150 億美元，是其今年春季估值（41 億美元）的三倍多。本輪投資尚未最終敲定，但消息人士指出，其估值最終或可高達 180 億美元。</p><p>Anthropic 成立於 2021 年，是一家由前 OpenAI 團隊成員創立的人工智能初創公司。其在 ChatGPT 發佈兩個月後，就推出了 GPT-4 的重要競品 Claude，並在 7 月初推出了升級版的 Claude 2。</p><p><img alt="" height="300" src="https://oscimg.oschina.net/oscnet/up-3991acf71bbd4858713200b565c8626207b.webp" width="300" referrerpolicy="no-referrer"></p><p>該公司的融資歷程有：</p><ul><li>2022 年 4 月，由即將入獄的 FTX Trading Ltd. 前負責人 Sam Bankman-Fried 領投，新興風險研究中心（Center for Emerging Risk Research）和幾位個人投資者參投的 5.8 億美元 B 輪融資。</li><li>2023 年 2 月，谷歌向其投資 3 億美元。</li><li>3 月，Spark Capital 領投了一輪<span style="background-color:#ffffff; color:#4a4a4a">價值 3 億美元的融資；Anthropic 的估值達到 41 億美元。5 月，</span>Spark Capital 又領投了 4.5 億美元的 C 輪融資，參投方包括&nbsp;<span style="background-color:#ffffff; color:#4a4a4a">Google LLC、Salesforce Ventures 和 Zoom Ventures<span>&nbsp;</span></span>等。</li><li>7 月，風投公司 Sapphire 承諾投資 10 億美元以上。</li><li>8 月，韓國電信巨頭 SKT 宣佈追加 1 億美元投資。</li><li>9 月，亞馬遜承諾投資高達 40 億美元。</li><li>10 月，<a href="https://www.oschina.net/news/264126/google-invest-2-billion-anthropic">谷歌承諾提供高達 20 億美元的資金</a>。</li></ul><p>「Claude 聊天機器人制造商的這筆交易表明，只要初創公司能創收，風險投資人對最大的人工智能交易的胃口依然很大。」&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 03:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272001/anthropic-to-raise-750-million</guid>
            <link>https://www.oschina.net/news/272001/anthropic-to-raise-750-million</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[支持蘋果芯片的 Fedora 發行版 —— Linus 看了會狂喜]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Asahi Linux 是由資深操作系統移植專家 Hector Martin（網名 Marcan）<u><a href="https://www.oschina.net/news/122218/developer-crowdfunding-linux-port-for-m1">眾籌發起</a></u>的項目，<strong>目標是將 Linux 移植到搭載 Apple Silicon 芯片的 Mac 設備</strong>。Marcan 表示，Asahi Linux 的目標不僅僅是讓 Linux 能在這些設備上運行，最終還要將其打磨至可以用作日常操作系統的程度。</p><p>近日，Asahi Linux 和 Fedora 共同<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Ffedora%2Fstatus%2F1737190559402365346" target="_blank">發佈</a></u>了 <strong>Fedora Asahi Remix</strong>，據稱這是雙方多年密切合作的成果——集成完整功能的發行版，<strong>所有面向 Asahi Linux 平台的軟件包都已合併到 Fedora 上游</strong>，並在 Fedora Linux 39 中得到全面支持。</p><p>因此 Mac 用戶安裝 Fedora Asahi Remix 39 Linux 後，可以正常使用包括藍牙、Wi-Fi 在內的大多數組件。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1221/112942_FuxH_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>Fedora Asahi Linux 已在所有支持 M1/M2 的 MacBook、Mac Mini、Mac Studio 和 iMac 設備上進行了測試。與默認使用 GNOME Shell 的 Fedora Workstation 不同，Fedora Asahi Remix 默認使用 KDE Plasma 桌面——「100% 的純正 Wayland 體驗」。</p><p>Asahi Linux 團隊稱「Fedora Asahi Remix」是「<strong>Apple Silicon Mac 上最精緻的 Linux</strong>」。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b18c383579a47b5fb8466cb11144d34653d.png" referrerpolicy="no-referrer"></p><p>兩年多前，Linus <u><a href="https://www.oschina.net/news/210613/linus-torvalds-rust-on-linux-m2-macbook-air">曾透露</a></u>自己一直在使用配備 M2 處理器的蘋果 MacBook Air，並在該設備上運行了 Fedora Workstation 36。<strong>由於當時沒有針對 ARM-64 M2 處理器的 Fedora 移植，所以他自己手搓了一個</strong>。當時在 M2 上運行 Linux 主要也是通過 Asahi Linux for Mac，使用了晦澀的 Pacman 軟件包管理器。但 Linus 本人不是很喜歡："Pacman!? What the hell!"</p><p><img src="https://oscimg.oschina.net/oscnet/up-f7152e3c871f61b0e32daedcbcea1b62c8a.JPEG" referrerpolicy="no-referrer"></p><p>2020 年蘋果初次發佈搭載 M1 處理器的 MacBook 時，他曾<u><a href="https://www.oschina.net/news/121556/linus-torvalds-linux-on-apple-silicon">説過</a></u>：</p><blockquote><p>「我一直期待着有一款能夠同時運行 Linux 操作系統的 ARM 筆記本電腦。除了操作系統的支持層面，新款 M1 MacBook Air 幾乎很是完美。<strong>然而我實在沒時間去搞破解，也不想費力去和這些不願提供幫助的企業抗爭。</strong>」</p></blockquote><p>現在 Fedora Asahi Remix 的發佈，Linus 該心滿意足了吧？</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4f2ef5190dc5c8724644a5192cfffe4598f.png" referrerpolicy="no-referrer"></p><hr><ul><li><strong>Fedora Asahi Remix 主頁：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fasahilinux.org%2Ffedora%2F" target="_blank">https://asahilinux.org/fedora/</a></u></strong></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 03:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271994/fedora-asahi-remix-39</guid>
            <link>https://www.oschina.net/news/271994/fedora-asahi-remix-39</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CloudNative SIG 成立，助推雲原生技術發展與應用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">2023 年 12 月，經 openKylin 社區技術委員會審議通過，<strong>CloudNative SIG</strong>正式成立。CloudNative SIG 由麒麟軟件發起成立，主要職責包括推動雲原生技術在 openKylin 社區中的應用與發展，促進各類雲原生項目在 openKylin 平台上的整合和創新，以及推動雲原生技術生態系統的發展。</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">CloudNative SIG 的成立，將充分利用 openKylin 提供的平台，整合最新的雲原生技術基礎軟件棧，促進共同開發雲原生項目，推動雲原生技術的發展與應用。</span></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><strong>01 SIG 目標</strong></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">制定並推動雲原生技術棧相關項目的發展規劃，確保項目符合行業標準和最佳實踐；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">參與或組織開發雲原生技術棧相關項目，推動項目的不斷演進和升級，以適應新的技術趨勢和用戶需求。</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><strong>02 SIG 職責</strong></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">負責雲原生技術棧相關項目的規劃、開發、升級與維護；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">編寫和維護相關文檔，為開發者提供資源，以便更好地理解和使用雲原生技術。</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p><strong>03 相關項目</strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff"><strong><span style="color:#0052ff">1.kse-rescheduler</span></strong></span></p><p><span style="color:#000000">錯誤 Pod 的自動重調度引擎，Kubernetes 默認的異常 Pod 重啓恢復機制存在侷限，例如，在資源不足或節點硬件故障導致 Pod 異常退出的情況下，原地重啓策略將無法修復問題，需要人工介入重調度將 Pod 遷移到其他節點。這將限制系統的自動容錯能力，從而降低服務的可靠性和高可用性。為瞭解決上述問題，提出了一種優化調度策略，通過實現錯誤 Pod 的自動重調度機制，來提升 Kubernetes 的自動容錯能力。</span></p><p><span style="color:#000000">參見：</span><span style="color:#0052ff">https://gitee.com/openkylin/kse-rescheduler</span></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff"><strong><span style="color:#0052ff">2.cilium-openkylin</span></strong></span></p><p><span style="color:#000000">cilium-openkylin 項目基於 Cilium 1.13 版本進行二次開發，計劃長期基於 1.13 進行功能開發和必要特性的回合。Cilium（https://github.com/cilium/cilium.git）是 k8s 生態中的一個網絡插件, 實現了基於 eBPF 的高性能網絡互聯互通，以及無應用侵入的網絡觀測、網絡隔離、網絡追蹤、網絡安全等能力。</span></p><p><span style="color:#000000"><span><span>目前本項目主要完成的工作包括：基於 eBPF 數據鏈路的</span>underlay<span>網絡組播傳輸和控制支持，多 IP 池特性（上游 1.15 版本功能）回合，雙棧模式下的多 IP 池支持（已合入上游）；</span></span></span></p><p><span style="color:#000000">近期工作計劃包括：BGPCP 特性回合，多 IP 池對 BGP 支持特性回合，多 IP 池模式下固定 IP 支持，cluster-pool 模式下固定 IP 支持等。</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">參見:&nbsp;&nbsp;</span><span style="color:#0052ff">https://gitee.com/openkylin/cilium-openkylin/</span></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><strong>04 歡迎加入 SIG</strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">歡迎所有對 openKylin 社區雲原生技術棧感興趣的社區愛好者加入我們！</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">郵件列表：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff">cloudnative@lists.openkylin.top</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">SIG 主頁：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/CloudNative</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 02:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271974/cloudnative-sig</guid>
            <link>https://www.oschina.net/news/271974/cloudnative-sig</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[英國最高法院：專利發明人必須是自然人，不能是 AI]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>路透社報道稱，英國最高法院在具有里程碑意義的案件中裁定<strong> AI 不能成為專利「發明人」</strong>。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1221/191630_wLCJ_2720166.png" referrerpolicy="no-referrer"></p><p>來源：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reuters.com%2Ftechnology%2Fai-cannot-be-patent-inventor-uk-supreme-court-rules-landmark-case-2023-12-20%2F" target="_blank">https://www.reuters.com/</a></u></p></blockquote><p>美國科學家 Stephen Thaler 2018 年在英國提交了兩項專利申請，分別為食品包裝形狀和閃光燈。他表示這些發明是由他創造的 AI——DABUS 完成設計。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ffc49345e29ab3de2793fe60d235f70be1d.png" referrerpolicy="no-referrer"></p><p>英國知識產權局當時拒絕了他的專利註冊申請，理由是發明人必須是人類或公司，而不是機器。為此，Stephen Thaler 向英國最高法院提出上訴。</p><p>英國最高法院近日駁回了他的上訴，<strong>因為根據英國專利法，專利的發明人必須是自然人</strong>。</p><p><img alt="" src="https://img.ithome.com/newsuploadfiles/2023/12/a7508bb0-8052-4627-90be-e463470e5fc4.jpg?x-bce-process=image/format,f_avif" referrerpolicy="no-referrer">英國最高法官 David Kitchin 在書面裁決中指出，本案不涉及這項「更廣泛」的問題 —— 由 AI 驅動的機器自主行動所產生的技術進步是否應當獲得專利。</p><p>Stephen Thaler 的律師則在聲明中表示，這項裁決確定了英國《專利法》目前「完全不適合」保護 AI 自主產生的發明，<strong>因此「完全不足以支持」任何依賴 AI 開發新技術的行業</strong>。</p><p>當地另一名律師 Giles Parsons 稱，英國最高法院的裁決「並不令人意外」。同時，他還認為這項決定目前不會對專利制度產生重大影響。「這是因為就目前而言，AI 只是一種工具而非代理人。預計這種情況在後期可能有所改變，但我們可以在問題出現時加以解決。」</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 11:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272063</guid>
            <link>https://www.oschina.net/news/272063</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[TiDB 7.5 LTS 發版丨提升規模化場景下關鍵應用的穩定性和成本的靈活性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>作者： TiDB 社區小助手，原文來源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftidb.net%2Fblog%2F1cffec89%3Futm_source%3Dtidb-community%26utm_medium%3Dreferral%26utm_campaign%3Drepost" rel="nofollow" target="_blank">https://tidb.net/blog/1cffec89</a></p></blockquote><p><img src="https://static.oschina.net/uploads/img/202312/08230007_royt.jpeg" alt="no-alt" referrerpolicy="no-referrer"></p><p>互聯網時代，數據的迅猛增長給數據庫帶來了可擴展性的挑戰，Gen AI 帶來的數據暴增更加劇了這種挑戰。傳統的數據分片已經不能承載新時代數據暴增的需求，更簡單且具有前瞻性的方法則是採用原生分佈式數據庫來解決擴展性問題。在這種規模化場景的背景下，TiDB 的研發團隊和開源貢獻者們始終致力於解決事務一致性、數據持久性以及大規模擴展所帶來的新挑戰，以及保障關鍵應用的穩定性。</p><p>**作為 TiDB 7 系列的第二個長期支持版本 (LTS) ，TiDB 7.5 着眼於提升規模化場景下關鍵應用的穩定性。**新版本中，TiDB 在可擴展性與性能、穩定性與高可用、SQL 以及可觀測性等方面獲得了持續的提升。TiDB 7.5 LTS 包含了已發佈的 7.2.0-DMR、7.3.0-DMR 和 7.4.0-DMR 版本中的新功能、提升改進和錯誤修復，累計優化和修復功能 70 餘項。</p><p>本文將探討 TiDB 7.5 如何在規模化場景下實現關鍵應用整體穩定性的提升，探討資源管控支持後端任務和管理資源消耗超出預期的查詢（Runaway Queries）等重要特性，這些特性讓用戶可以在靈活調度資源降低總體成本的情況下可以保持關鍵應用的穩定性。</p><span id="OSC_h1_1"></span><h1>資源管控支持後端任務管理，提升執行關鍵業務的穩定性</h1><p>TiDB 7.1 引入的資源管控（Resource Control）特性，多個業務可共享同一個 TiDB 集羣，DBA 可為不同的工作負載設置資源配額和優先級，例如為關鍵業務分配更高的優先級，確保其能夠優先獲得資源，避免受到其他工作負載的幹擾。此前，資源管控無法對 DDL、analyze、import 等後端任務進行控制，這些任務通常定期或不定期觸發，在執行的時候會消耗資源，從而對關鍵業務的運行產生影響。</p><p>自 TiDB 7.4 開始，資源管控支持後端任務管理。當一種任務被標記為後端任務時，TiKV 會動態地限制該任務的資源使用，以儘量避免此類任務在執行時對前台任務產生影響。TiKV 通過實時地監測所有前台任務所消耗的 CPU 和 IO 等資源，並根據實例的總體資源上限計算出後端任務可使用的資源閾值，所有後端任務在執行時會受此閾值的限制。當後端任務被識別匹配後，資源管控會自動進行，即當系統資源緊張時，後端任務會自動降為最低優先級，以確保前台任務的執行效率。**這個功能的增強允許 DBA 通過設置自動識別後端任務，並降低其資源消耗。**未來，這個功能將進一步擴展，提供給用戶更豐富的配置選擇，從而賦予用戶對集羣中後端任務更多的控制權。</p><p>下表展示了當「analyze」後端任務以默認優先級和低優先級運行時對前台工作負載的影響對比：</p><p><img src="https://static.oschina.net/uploads/img/202312/08230007_xCiO.png" alt="no-alt" referrerpolicy="no-referrer"></p><p>在上表的示例中，第一行展示了當所有集羣資源均可供前台工作負載使用時的性能。第二行展示了在後台添加 「analyze」 任務時發生的情況。第三行則展示了利用新特性自動對 「analyze」 任務進行管控時的效果。</p><span id="OSC_h1_2"></span><h1>將後端任務 (Addindex,Importinto 任務）調度到指定的 TiDB 節點執行</h1><p>TiDB 7.2 開始，引入了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.pingcap.com%2Fzh%2Ftidb%2Fstable%2Ftidb-distributed-execution-framework" rel="nofollow" target="_blank">分佈式框架</a> ，該框架的目標是實現對所有後端任務的統一調度與分佈式執行，併為接入的後端任務提供統一的資源管理能力。分佈式框架支持後端任務（特指 Add index 和 Import into 任務）在 TiDB 集羣的所有 TiDB 節點上執行，以提升此類任務的性能。而 <strong>TiDB</strong><strong>7.5 允許 DBA 將 Add index，Import into 這類消耗資源較多的後端任務調度到指定的 TiDB 節點上執行，從而和存量 TiDB 節點上的負載進行隔離，避免對業務產生影響</strong>。當在想要運行後端任務的節點上設置 tidb_service_scope 為 background 時，後端任務分佈式框架將調度該節點執行後端任務。但未經這樣設置，則該節點將不會被用於執行後端任務。</p><p>這一改進真正的突破在於能夠動態地添加 TiDB 節點來處理突發的這類後端任務。如果需要導入一個龐大的表，只需向集羣中添加若干個 TiDB 節點來完成，而不會對現有 TiDB 節點造成任何額外壓力，添加索引的方式也是如此。完成任務後，這些節點可以被撤銷。這一功能為在生產集羣上輕鬆處理大型任務（Add index ，Import 大量數據）提供了更加無縫的方式。</p><span id="OSC_h1_3"></span><h1>暫停和恢復執行 DDL 任務</h1><p>在 v7.1 版本之前，用戶在某些場景下會遇到 DDL 執行的痛點，具體表現為：</p><ul><li><p>集羣版本升級時，若有正在執行的 DDL 未被取消，可能導致升級後的數據異常。</p></li><li><p>對於擁有數十億行數據的大表，為其添加索引可能需要相當長的時間，對在線業務造成不可忽視的影響。</p></li></ul><p>為瞭解決這些問題，我們在 v7.1.0 中引入了一項新功能：DDL 任務的暫停和恢復。這一功能在 v7.5.0 中正式發佈，為用戶帶來了更加靈活和高效的 DDL 執行體驗。</p><p>具體而言，該功能巧妙地解決了上述痛點：</p><ul><li><p>在使用 TiUP 對集羣升級的過程中，系統將自動暫停正在執行的 DDL 任務，並在升級完成後自動恢復執行該 DDL 任務。全程無需人為幹預，有效避免由於人員疏忽導致未暫停 DDL 而引起集羣升級後數據不一致的問題。</p></li><li><p>針對執行耗時較長的 DDL，比如給大表添加索引，用戶可以在業務高峯期來臨前手動暫停該 DDL，並在業務低谷期恢復該 DDL 任務，從而有效避免對在線業務的影響。</p></li></ul><p>DDL 任務的暫停和恢復機制支持斷點續傳，不僅保障了 DDL 任務的安全性和穩定性，同時最大化地保證了用戶數據一致性和業務的穩定性。</p><span id="OSC_h1_4"></span><h1>監控和管理資源消耗超出預期的查詢</h1><p>突發的查詢性能下降，是影響數據庫整體性能最常見的問題，很難完全規避。 即使設置了資源組限額，也只能消除資源組間的相互影響，而個別 SQL 的過渡消耗仍會對降低資源組內的其他操作的性能。為解決此問題，TiDB 7.2 資源管控引入了對 Runaway Queries 的管理，自動識別並處理消耗超出預期的查詢，在 TiDB 7.3 引入了手動管理 Runaway Queries 監控列表的功能，將 SQL 特徵添加到隔離監控列表，從而實現快速隔離 Runaway Queries。 無論用戶是否使用了資源組，都可以藉助 Runaway Queries 管理來緩和突發的 SQL 性能問題。</p><p><strong>DBA 現在可以為每個資源組設置「查詢限制 (Query Limit)」，並配備幾個關鍵參數</strong>。EXEC_ELAPSED 用於設定查詢持續時間的閾值，任何超出這一閾值的查詢都會被識別為 Runaway Query。ACTION 決定當識別到 Runaway Query 時進行的動作，可以把執行優先級降到最低也可以終止該查詢。WATCH 用於快速匹配已經識別到的 Runaway Query，即在一定時間內再碰到相同或相似的查詢，可以直接按照配置的措施進行處理，避免其在被識別的過程中對資源進行消耗。</p><p>如果一些 Runaway Queries 並沒有被自動識別，DBA 也可以通過 SQL 命令 "QUERY WATCH"手動將查詢的特徵加入「監視列表」，類似於設置數據庫級別的 SQL 黑名單，特別適合那些對數據庫響應時間要求很高的客戶，為突發的 SQL 性能問題提供了一種有效的防範措施。這項功能和資源管控結合使用，意味着在業務系統之間以及業務系統內部都能實現更高的穩定性，從而最大限度地減少多業務合併過程中可能出現的潛在風險。</p><span id="OSC_h1_5"></span><h1>立即體驗 TiDB 7.5</h1><p>從 TiDB 7.0 開始，TiDB 在數據庫整合的技術方向上持續演進，致力於在多業務融合的場景下同時提升關鍵業務的穩定性和降低總體成本，7.5 LTS 將資源管控、分佈式框架、可觀測性理念的組合推升到更為成熟的階段，可以為當前追求業務連續性同時也希望降低總體成本的客戶帶來創新的部署和運維方式。</p><blockquote><p>7.5.0 關鍵特性&amp;功能詳情請見：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.pingcap.com%2Fzh%2Ftidb%2Fstable%2Frelease-7.5.0" rel="nofollow" target="_blank">https://docs.pingcap.com/zh/tidb/stable/release-7.5.0</a></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 09:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5674736/blog/10320255</guid>
            <link>https://my.oschina.net/u/5674736/blog/10320255</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[BCS 報告：IT 界女性的「平權之路」還需 283 年]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">英國計算機協會（BCS）最新發布的一份多元化<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bcs.org%2Fpolicy-and-influence%2Fequality-diversity-and-inclusion%2Fbcs-diversity-report-2023-women-in-it%2F" target="_blank">報告</a>指出，女性在 IT 領域的佔比需要 283 年才能與男性持平。</span></p><p style="text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">在過去的八年裏，BCS 一直在跟蹤和報告 IT 勞動力市場中的女性代表性水平；旨在探索市場上的一些不平等現象，推動措施以改善行業內性別不平衡問題。</span></span></p><p style="text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">「</span>BCS diversity report 2023: Women in IT<span style="background-color:#ffffff">」報告的一些主要發現包括：</span></span></p><ul style="margin-left:0; margin-right:0"><li><span style="color:#000000">到 2022 年，女性佔勞動年齡人口（16-64 歲）的 50%，佔工作人口的 48%，佔失業人口的 46%。</span></li><li><span style="color:#000000">2022 年，英國有 380,000 名女性 IT 專家，佔 IT 專家總數的 20%；如果 IT 領域的性別比例與勞動力「標準」相同，英國就會額外增加 527,000 名 IT 專家。</span></li><li><span style="color:#000000">按照近些年的趨勢推斷，在 IT 從業人員中，女性所佔比例想要與男性持平所需的時間為 283 年。</span></li></ul><p><span style="color:#000000"><img alt="" height="134" src="https://oscimg.oschina.net/oscnet/up-db871d1804a2c2f78de283e0a8793307494.png" width="500" referrerpolicy="no-referrer"></span></p><ul style="margin-left:0; margin-right:0"><li><span style="color:#000000">IT 領域的女性比例因工作類型而異，從大約二十分之一的 IT 工程師（佔 2018-22 年期間總數的 6%）<span style="background-color:#ffffff">到約三分之一的 IT 項目/項目經理和網頁設計師/開發人員和 IT 用戶支持技術人員（即分別佔 30% 和 28%）。除了 IT 工程之外，女性在程序員/軟件開發職位中所佔比例非常低 (15%)。</span></span></li></ul><p><span style="color:#000000"><img height="202" src="https://oscimg.oschina.net/oscnet/up-13fc9ea928423101c1d8af59e2430a5234b.png" width="500" referrerpolicy="no-referrer"></span></p><ul style="margin-left:0; margin-right:0"><li><span style="color:#000000">2022 年，女性 IT 專家的失業率為 1.4%，低於男性 (1.7%)，但不到英國勞動力市場女性整體失業率 (3.6%) 的一半。</span></li><li><span style="color:#000000">按行業劃分，2022 年建築公司中 IT 專家的性別比例最差，女性僅佔 IT 崗位人員的 12%。</span></li><li><span style="color:#000000">2022 年，女性 IT 專家從事兼職工作的可能性是男性的四倍多（即 13% 對 3%）——最常見的原因是她們不想從事全職工作。</span></li><li><span style="color:#000000"><span style="background-color:#ffffff">2022 年，女性 IT 專家作為僱員和全職員工的時薪中位數為 22 英鎊，比男性低 8%。</span>女性 IT 員工擔任「有責任的職位」的可能性似乎低於男性（對比數字分別為 36% 和 41%）。</span></li><li><span style="color:#000000">大約十分之七的 IT 專家擁有某種形式的高等教育學歷（71%），並且女性的比例高於男性（女性為 74%，男性為 70%）。</span></li><li><span style="color:#000000">2018-22 年期間，IT 專家（男性/女性）最常見的找工作方式是「回覆廣告」（分別為 39% 和 31%）。</span></li></ul><p><span style="color:#000000">BCS 教育與公益常務董事 Julia Adamson 在一份聲明中表示： 「更多的女性和女孩需要有機會在塑造世界的科技行業中從事出色的職業。大量的人才和創造力正被忽視，而這本可為僱主和經濟帶來益處。我們必須從根本上重新思考如何讓更多的女性和女孩從事科技行業，從倫理道德上講，建立更具包容性的科技文化是正確的做法。」</span></p><p>另一方面，<span style="color:#000000">美國的</span>情況與英國也沒有太大的不同。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.statista.com%2Fchart%2F4467%2Ffemale-employees-at-tech-companies%2F" target="_blank">Statista</a><span style="color:#000000">&nbsp;數據顯示，</span><span style="color:#000000">在美國，女性僅佔科技相關職位的 27%；在員工超過 10,000 人的科技公司中，女性的比例為 26%。在過去兩年中，女性在所有科技相關職業中的比例都有所下降。</span></p><p><span style="color:#000000">總體而言，美國勞動力中的女性比例與英國大致相同，為 47.7%。在美國 329,559 名軟件工程師中，女性約佔 25%，女性軟件工程職位的薪資比男性低約 7%。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 07:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272034/bcs-diversity-report-2023-women-in-it</guid>
            <link>https://www.oschina.net/news/272034/bcs-diversity-report-2023-women-in-it</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[X （推特）突發全球範圍訪問故障]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>路透社報道稱，X 平台（推特）在北京時間 12 點 47 分左右突發全球性崩潰。&nbsp;</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bf591b965e9b852eeaf4bb7b7f486f5db4a.png" referrerpolicy="no-referrer"></p><p>來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reuters.com%2Ftechnology%2Fsocial-media-platform-x-down-users-globally-downdetector-2023-12-21%2F" target="_blank">https://www.reuters.com</a></u></em></p></blockquote><p>此次崩潰事件波及 X 平台全球範圍內用戶，包含 PC Web 端及移動平台客戶端在內，所有用戶均無法查看時間線、訪問個人資料卡、發佈內容。</p><hr><p>從平台的討論來看，推特此次訪問故障大約持續了兩個小時，目前已恢復服務。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 06:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272020/media-platform-x-down-users-globally-downdetector</guid>
            <link>https://www.oschina.net/news/272020/media-platform-x-down-users-globally-downdetector</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[上 GitHub 熱榜，星星暴漲，這個項目相繼超越了 Archery, Flyway 和 Yearning]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>「 登上 GitHub Trending 星星超越 Yearning 鍵盤的敲擊不停，傳播開發的福音 」⚡️</p><p>Bytebase 是一款面向開發和 DBA 的一站式數據庫 CI/CD 工具。它的所有代碼都開源在 GitHub 上。GitHub 也是我們觸達全球用戶的核心陣地。雖然 GitHub Star 數一直是一個飽受爭議的指標，以致於被定性成了虛榮指標 (Vanity Metric)。但它依然是當前開源世界裏最流行的指標。由此還衍生出了一種新的開發範式 - <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkzMjI2MDY5OQ%3D%3D%26mid%3D2247503486%26idx%3D1%26sn%3Dcb2ee8b55040b2e256952c2935018209%26scene%3D21%23wechat_redirect" target="_blank">星星驅動開發 Star-Driven Development (SDD)</a>。而所謂的 SDD 就是開發者在調研同領域內的開源項目時，會根據項目的星星數來選型。</p><p><img src="https://oscimg.oschina.net/oscnet/up-bfe97e000091a53cc9079f6d34d45a81596.png" alt="file" referrerpolicy="no-referrer"></p><p>海外數據庫變更管理這個領域，和 Bytebase 處在同一個賽道的主要是 Liquibase 和 Flyway 兩大老牌開源項目。前段時間，Bytebase <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkzMjI2MDY5OQ%3D%3D%26mid%3D2247506610%26idx%3D1%26sn%3D54064d986e681cf13dc72c5f45e585a2%26scene%3D21%23wechat_redirect" target="_blank">剛剛飛躍 Flyway</a>，成為了三者裏 Star 數最多的。</p><p><img src="https://oscimg.oschina.net/oscnet/up-b779ac5e2e1fcc7e6eda8afa2e0b7671cd6.png" alt="file" referrerpolicy="no-referrer"></p><p>而在國內，這塊的產品更偏可視化 SQL 審核方向，這個賽道上另外兩款流行的開源項目是 Yearning 和 Archery。Bytebase Star 漲勢更快，但整體離 Yearning 還有一段距離，按照正常趨勢本來超越要到明年。不過前兩天應該是託了一位網友的助攻</p><p><img src="https://oscimg.oschina.net/oscnet/up-00082483185f0fe007687b570ede44e2de0.png" alt="file" referrerpolicy="no-referrer"></p><p>會畫圖是字節系的專屬技能了，哦，我指的是 ByteByteGo</p><p><img src="https://oscimg.oschina.net/oscnet/up-50fa61dd623a746f9a241a2edfd3571b595.png" alt="file" referrerpolicy="no-referrer"></p><p>直接把 Bytebase 送上了 GitHub Trending</p><p><img src="https://oscimg.oschina.net/oscnet/up-ce9ebbdb50b420edfe33eab480d8b7057db.png" alt="file" referrerpolicy="no-referrer"></p><p>然後星星數就一下子超過了 Yearning</p><p><img src="https://oscimg.oschina.net/oscnet/up-6d1127610fafbff6f2f700f36460f5e6a01.png" alt="file" referrerpolicy="no-referrer"></p><p>回到肇事原圖，Liquibase / Flyway，Archery / Yearning 先後挑戰成功</p><p><img src="https://oscimg.oschina.net/oscnet/up-d16cf3c8782bfb8cf8f177b1e797e9c0c28.png" alt="file" referrerpolicy="no-referrer"></p><p>當然這也還沒完，因為圖上星星最多的其實是 DBeaver</p><p><img src="https://oscimg.oschina.net/oscnet/up-65dd00389f5dd94af71e07da13156190b8b.png" alt="file" referrerpolicy="no-referrer"></p><p>單獨留下 Bytebase 和 DBeaver 對比一下</p><p><img src="https://oscimg.oschina.net/oscnet/up-de6d14255367d2d0e25d0d2dfb9e6963e6b.png" alt="file" referrerpolicy="no-referrer"></p><p>再來張按照時間線的</p><p><img src="https://oscimg.oschina.net/oscnet/up-512fe9828fbbe24151aaf648edb21a96ea0.png" alt="file" referrerpolicy="no-referrer"></p><p>超越 DBeaver 還需時日了。產品形態上，Bytebase 和 DBeaver 還是有不小差異。Bytebase 是基於服務端，面向團隊的數據庫協同管理工具，強調的是數據庫操作的流程規範，安全管控。而 DBeaver 則是純客戶端，面向個人，強在豐富的數據庫交互能力。</p><p>另外 Yearning 和 Archery 也都是優秀的開源項目。和 Bytebase 以商業化運作的模式不同，他們是完全依靠社區推動。Bytebase 之前也寫過一篇 &lt;&lt;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkzMjI2MDY5OQ%3D%3D%26mid%3D2247506315%26idx%3D1%26sn%3Dff7d09c6db6d4523a1391c578c8f9f1f%26scene%3D21%23wechat_redirect" target="_blank">對比國內主流開源 SQL 審核平台 Yearning vs Archery</a>&gt;&gt;。</p><p>總之在開源數據庫工具領域，選擇豐富，總有一款適合你。</p><p>巧合的是，在星星數超過 Yearning 的同時，Bytebase 還被有 300,000 訂閲的 TLDR newsletter 摘錄了。</p><p><img src="https://oscimg.oschina.net/oscnet/up-526ae8c6bff1498af858343e494f3f571bb.png" alt="file" referrerpolicy="no-referrer"></p><p>小編的摘要寫的不錯「Bytebase provides advanced database DevOps and CI/CD for engineering teams. It provides a unified process to manage, query, secure, and govern all of a team's databases from one place」。</p><p>對，就是在一個地方，用統一的流程，管理團隊裏所有數據庫的操作。</p><hr><p>💡 更多資訊，請關注 Bytebase 公號：Bytebase</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 06:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/10322904</guid>
            <link>https://my.oschina.net/u/6148470/blog/10322904</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PuTTY 0.80 發佈，修復 Terrapin 漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><span style="background-color:#ffffff">PuTTY 0.80 現已發佈。PuTTY 是一款集成虛擬終端、系統控制枱和網絡文件傳輸為一體的自由開源程序。它支持多種網絡協議，包括&nbsp;SCP，SSH，Telnet，rlogin 和原始的套接字連接，它也可以連接到串行端口。其軟件名字 「PuTTY」 並沒有特殊含義。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">0.80 版本包含了對某些 SSH 協議擴展中 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fterrapin-attack.com%2F" target="_blank">Terrapin</a> 漏洞（又名 CVE-2023-48795）的修復。該問題還需要在服務器中打補丁。</span></span></p><p><span style="color:#000000"><strong><span style="background-color:#ffffff"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.chiark.greenend.org.uk%2F%7Esgtatham%2Fputty%2Flatest.html" target="_blank">下載地址</a> | <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.chiark.greenend.org.uk%2F%7Esgtatham%2Fputty%2F" target="_blank">發佈公告</a></span></strong></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">Terrapin 是一種針對 SSH 協議的前綴截斷攻擊。更確切地説，Terrapin 破壞了 SSH 安全通道的完整性。通過在 handshake 過程中仔細調整序列號，攻擊者可以在安全通道開始時刪除客戶端或服務器發送的任意數量的信息，而客戶端或服務器卻不會察覺。</span></span></p><p><img height="233" src="https://oscimg.oschina.net/oscnet/up-81e37599f65f6bde439d35e0bc805580ed1.png" width="300" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 04:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272004/putty-0-80-released</guid>
            <link>https://www.oschina.net/news/272004/putty-0-80-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[技術揭祕第一回：看 BifroMQ 如何構建高效可用集羣]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0"><strong>引言</strong></p><p style="margin-left:0; margin-right:0">自今年 7 月份 BifroMQ 正式開源以來，在社羣內獲取了一定關注，也有許多用戶也表達了對產品背後技術的興趣。因此 BifroMQ 團隊決定推送技術解讀系列文章，深入剖析 BifroMQ 的各組件及其設計原則，給對該項目感興趣的同學帶來更深入的產品解析。本篇文章作為 BifroMQ 技術揭祕專題系列開篇文章，將詳細介紹 BifroMQ 如何通過各種機制確保集羣的高可用性，包括分佈式集羣架構、故障檢測與自動逐出機制，以及各類負載均衡策略。後續將會有更多文章全方位、多維度詳細剖析 BifroMQ 更多技術內容，敬請關注。</p><p style="margin-left:0; margin-right:0"><strong>去中心化集羣</strong></p><p style="margin-left:0; margin-right:0">在 BifroMQ 架構中，配備 MQTT 協議工作負載的拆分方案，使每類工作負載均可在獨立的子集羣中運作。這些功能性子集羣構建於去中心化底層集羣構建框架（base-cluster）上。BifroMQ 集羣框架包含兩個邏輯層級：Underlay Cluster 和 Overlay Cluster，此種構建使得架構更加清晰和解耦。有關此設計更多細節，請參見（《BifroMQ 技術架構概覽》，詳見：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbifromq.io%2Fzh-Hans%2Fblog%2Fbifromq-tech-architecture%2F" target="_blank">https://bifromq.io/zh-Hans/blog/bifromq-tech-architecture/</a>）。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌Underlay Cluster</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0">Underlay Cluster 作為 BifroMQ 集羣體系核心，該層成員代表一個運行中的 BifroMQ 進程，成員之間可直接利用進程綁定的主機網絡地址 (HostAddress) 進行通信。BifroMQ 採用 Gossip 類的 Membership 協議（SWIM Protocol</p><p style="color:#000000; margin-left:0; margin-right:0">，詳見：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fieeexplore.ieee.org%2Fdocument%2F1028914" target="_blank">https://ieeexplore.ieee.org/document/1028914</a><span style="color:#000000">）</span>實現集羣成員失敗檢測（FailureDetection），並且對 Membership 信息的同步機製做進一步優化，使得整體上具有的以下技術特性：</p><p style="color:#000000; margin-left:0; margin-right:0">集羣構建無需依賴傳統的註冊中心或命名服務，有效消除單點故障的運維風險，顯著提升集羣的高可用性。</p><p style="color:#000000; margin-left:0; margin-right:0">通過採用 SWIM 協議，Underlay Cluster 可確保節點間探活機制的準確性，保障集羣拓撲的最終一致性。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">使用 CRDT 技術實現集羣 Membership 信息在節點間同步，可以同步時效的同時做到極低的帶寬佔用。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>集羣構建過程</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在去中心化的集羣架構中，集羣成員地位均平等，不存在專門負責管理集羣拓撲信息的管控角色節點。從更高的視角來觀察，運行 BifroMQ StandardCluster 服務進程的任何節點，實際上都可以視為一個擁有「單個節點」的獨立集羣。因此，集羣的構建實質上是各獨立集羣的融合過程。為了實現這一過程，base-cluster 框架提供「join」操作，以便有效合併這些獨立集羣。</p><p style="text-align:center"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-5a3272260e17476852e4659bc5d8395be09.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><span>▲獨立集羣融合</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">如圖所示，集羣的 join 操作可以由任一節點向目標集羣的任一節點發起。為簡化討論，我們將作為 join 操作目標的節點稱為「seeds」。在部署過程中，這些 seed 節點的地址通常會被配置在新加入集羣節點的配置文件（seedEndpoints，詳見：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbifromq.io%2Fzh-Hans%2Fdocs%2Fconfiguration%2Ffile_configs_manual%2F" target="_blank">https://bifromq.io/zh-Hans/docs/configuration/file_configs_manual/</a><span style="color:#000000">）</span>中。集羣成功合併後，BifroMQ 集羣中的每個節點都可以在本地獲取到完整的集羣 Membership 信息。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在節點配置中直接指定 seed 地址的方式，在容器化環境下可能存在一定的侷限性。為解決這一問題，base-cluster 框架內置 DNS 解析功能。在容器環境中，可通過將所有節點納入固定網絡 Domain（例如 External DNS 或 Kubernetes Service），簡化集羣部署過程。這樣，新加入的節點可以使用由該 Domain 解析出的任意 Remote 地址作為 seed，以完成 join 過程。</p><p style="text-align:center"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-5f32066006c71ba9c8a5b8b1b31283c58ff.png" width="650" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲集羣 join 過程</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>失敗檢測與自動驅逐</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 BifroMQ 中，當節點正常退出時，會主動清理自身在集羣中的註冊身份，並與集羣中的其他節點同步此變化。每個節點持續對其他節點進行失敗檢測（Failure Detection）。一旦檢測到異常，會立即將該節點的相關信息從本地的集羣 Membership 中移除，並迅速完成集羣間 Membership 同步，防止不再活躍的節點對集羣正常功能產生影響。</p><p style="text-align:center"><img alt="" height="193" src="https://oscimg.oschina.net/oscnet/up-83b9d6156b5aaa50edd1b2c784460d4065c.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲失敗檢測與自動驅逐過程</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">與自動驅逐機制相配合的是 BifroMQ 自愈機制，可以有效防止由於網絡抖動或誤判導致健康節點的註冊信息被錯誤移除。每個節點會在觀察到集羣信息發生變化時，重新檢查自身註冊信息。如信息缺失，節點將主動進行補充，從而確保集羣信息的完整性和最終一致性。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>腦裂恢復</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">對於去中心化的集羣服務來説，網絡分區 (Network Partition) 導致的集羣腦裂，即單個集羣分裂為多個互相隔離的集羣，此種情況無法避免。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">base-cluster 對可能出現的腦裂故障做出一定保障，提高集羣部署的高可用性，具體過程如下：當網絡發生分區時，分裂被隔離的集羣雙方均會檢測到對方節點的失敗，這些失敗被移除的節點會加入至本地的"癒合列表"，列表中的成員會被定時嘗試 join，直到超過部署時設定的 MTTR（Mean Time To Repair，詳見：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FMean_time_to_repair" target="_blank">https://en.wikipedia.org/wiki/Mean_time_to_repair</a><span style="color:#000000">）</span>。不難發現，腦裂恢復的過程實際上與集羣構建過程一致。</p><p style="text-align:center"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-58ab5b0ad10b5673589d4b88dccd37f885d.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲腦裂恢復</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌</strong></span><span style="color:#3498db"><strong>Overlay Cluster</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">Overlay Cluster 又稱為 Agent Cluster，構建於 Underlay Cluster 之上，利用 Underlay Cluster 的能力實現 Membership 管理和成員間通信，主要用於實現由不同邏輯服務單元組成的代理集羣。藉助 Underlay Cluster 的高效構建機制，Agent Cluster 能夠自動實現集羣構建，大幅簡化部署和運維過程。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 BifroMQ 中，由 Agent Cluster 實現的子服務集羣，可被分類為無狀態集羣和有狀態集羣兩類：無狀態集羣以 RPC 服務為主；有狀態集羣通常基於 base-kv 構建內置分佈式 KV 存儲引擎。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>RPC 服務集羣</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">RPC 服務集羣成員通常被定義為客戶端和服務端兩種角色。利用 Agent Cluster 特性，RPC 客戶端與服務端無需依賴外部註冊中心，即可實現高效服務端發現與多樣化客戶端請求路由邏輯。</p><p style="text-align:center"><img alt="" height="220" src="https://oscimg.oschina.net/oscnet/up-7d5ffe56c861e499bc1fcc5037b471cd0dd.png" width="600" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲RPC 服務集羣架構</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>BifroMQ 有狀態子服務集羣與分佈式 KV 存儲引擎</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 BifroMQ 有狀態子服務集羣中，內置強一致性的分佈式 KV 存儲引擎（base-kv）。此引擎具備基於 Multi-Raft 的 sharding 功能，為 BifroMQ 高度可靠性的關鍵組成部分。集羣 Membership 成員服務信息由 Agent Cluster 維護，而每個 Range 分片內副本則通過 Raft 協議來實現強一致性同步。因此，要確保有狀態服務高可靠性，則必須充分利用並符合 Raft 協議的特性要求。</p><p style="margin-left:0; margin-right:0"><strong>KVRange Balancer</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">base-kv 使用內置 Range Balancer 框架實現高效 Range 副本管理。該框架綜合考慮當前集羣拓撲結構和實時負載數據，生成用於均衡 Range 副本集的指令。這些指令包括 Leader 轉移（LeaderTransfer）、成員配置變更（ConfigChange）、Range 拆分（Split）和 Range 合併（Merge）。通過此係列操作，base-kv 能夠有效地實現集羣負載平衡，優化吞吐性能，同時達成高可用性的目標。 值得一提的是，Range Balancer 同樣採用去中心化的設計理念，在 base-kv 的每個節點中，Balancer 只負責管理本地的 Leader Range。此種設計使多個節點上的 Balancer 能夠並行運作，最終達成全局一致的均衡目標。</p><p style="text-align:center"><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-9420a1b7a3b3136eab9d705e324df0863c7.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲KVRange Balancer</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">為確保用戶可享受即插即用的便利性，BifroMQ 已預先內置系列常用的均衡策略實現。然而，對於那些有特定需求的高級用戶，BifroMQ 還提供定製化均衡策略的能力（Balancer SPI），以便根據特定的應用場景進行優化。以下是內置均衡策略的簡要介紹，用戶可以根據個性化需求，通過配置來啓用這些策略。</p><p style="margin-left:0; margin-right:0"><strong>ReplicaCntBalancer</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">ReplicaCntBalancer 主要作用為調節和平衡 Range 的副本數量。一旦啓用，此功能將允許 Range 的副本數根據 BifroMQ StandardCluster 集羣中部署節點的數量靈活調整。這意味着，ReplicaCntBalancer 能夠根據集羣當前規模，自動優化並實現最佳可用性配置，從而確保高效運行。</p><p style="text-align:center"><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-517e5b81f336b51f3972596c3444ced9908.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲ReplicaCntBalancer</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">如圖所示，工作過程如下：</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">集羣擴容情況：假設最初 BifroMQ 集羣中有 3 個節點，此時 KVRange 的副本數也是 3，使得集羣能夠容忍 1 個節點的故障。當新增 2 個節點後，ReplicaCntBalancer 自動將這些新節點納入副本配置，並通過數據同步將副本數增加至 5。這樣，即可容忍 2 個節點的不可用狀態，從而提升容錯能力。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">集羣縮容情況：在另一種場景中，當 BifroMQ 集羣包含 5 個節點且 KVRange 副本數同樣為 5 時，若發生兩個節點的宕機，依照 Raft 算法，仍能保持正常運作。然而，如果副本配置不變，再有一個節點宕機將導致整個 Raft 集羣無法運作。此時，ReplicaCntBalancer 會調整副本配置，調整 VoterSet 僅包含剩餘的 3 個可用節點。這樣調整使集羣在容忍 1 個節點不可用的情況下依然保持高可用性。</p><p style="margin-left:0; margin-right:0"><strong>RangeSplitBalancer</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 BifroMQ 中，單個 Range 的副本集將通過 Raft 協議進行管理，其負載能力受 WAL 複製機制限制，因此存在一定性能上限。特別是當業務工作負載高度集中於單個 Range 時，這種限制會變得尤為明顯。在這種情況下，為提高系統整體性能，將一個 Range 拆分成多個部分是提升系統並行任務處理能力的有效手段。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">RangeSplitBalancer 正是 base-kv 內置並用於實現這一功能的負載策略。它通過分析實際業務負載情況，及時生成 Range 拆分指令，從而優化系統處理能力並提高性能表現。</p><p style="text-align:center"><img alt="" height="350" src="https://oscimg.oschina.net/oscnet/up-a01859f9e649144faa1f234b7e32b8fed5d.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲RangeSplitBalancer</p><p style="margin-left:0; margin-right:0"><strong>RangeLeaderBalancer</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 Raft 協議中，Leader 節點承擔所有寫請求和部分讀請求的工作負載，因此，當多個 RangeLeader 副本集中在同一節點時，易產生負載熱點，從而影響系統性能。為解決這一問題，base-kv 集羣在發生多個 Range 分裂的情況下，可開啓 RangeLeaderBalancer。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">RangeLeaderBalancer 專門負責監控和調整 Range 副本在各節點上的分佈，並通過在節點間遷移 Range，確保每個 base-kv 節點上的 Leader 副本數量均衡，避免過度集中的負載熱點。這種均衡提高整體負載處理的效率的同時，還可降低單個節點出現故障時對集羣瞬時可用性的影響。</p><p style="text-align:center"><img alt="" height="300" src="https://oscimg.oschina.net/oscnet/up-4e23feaa789761cb46003c2f028a5856e9d.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲RangeLeaderBalancer</p><p style="margin-left:0; margin-right:0"><strong>RecoveryBalancer</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 Non-Byzantine 容錯的強一致性協議中，正常工作節點數量 n 必須滿足 n≥2f+1 的條件，其中 f 代表可容忍的失敗節點數。基於這一原則，任何 Range 副本都必須位於超過半數的正常集羣節點中，才能保證正常運作。然而，在實際部署中，當集羣中 Range 的數量較多，且單個 base-kv 節點可能承載多個不同 Range 的副本時，多個 base-kv 節點的同時故障可能導致 n &lt; 2f+1 的情況發生，這被稱為 Lost Majority。在 Lost Majority 的情況下，受影響的 Range 將無法正常工作。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">為應對這種情況，RecoveryBalancer 提供了一項關鍵能力。即允許節點檢測自身是否處於 Lost Majority 的狀態，並在必要時主動縮減副本列表配置，以確保至少有半數節點處於存活狀態，從而使 Range 能夠繼續正常運作。然而，需要特別注意的是，在使用 RecoveryBalancer 自動恢復處於 Lost Majority 狀態的 Range 時，如果之前失敗的節點未經人工幹預重新加入集羣，可能會引起數據丟失和不一致等問題。這種情況下，用戶需要慎重考慮並結合實際運維策略來決定是否啓用 RecoveryBalancer 功能。</p><p style="text-align:center"><img alt="" height="130" src="https://oscimg.oschina.net/oscnet/up-19f3c8b67c40ccd70e6c7e3f3e600c3993a.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲RecoveryBalancer 功能</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌應用場景</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">BifroMQ 有狀態子服務有三種：MQTT 訂閲路由、離線消息隊列、Retain 消息。分別由對應模塊：dist-worker、inbox-store 和 retain-store 來實現。每一模塊部署後均構成一個獨立的 base-kv 集羣。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">為適應不同使用場景和負載需求，BifroMQ 允許各集羣根據其特定情況選擇並啓動相應的 Balancer 策略，用以使各集羣都能在保持高可用性的同時，實現最優數據處理吞吐性能。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>dist-worker</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 BifroMQ 架構中，dist-worker 模塊承擔着管理訂閲信息 (Sub) 和消息分發 (Pub) 的職責。在正常使用場景下，這通常是一個以讀操作為主、寫操作較少的場景。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">考慮到這一使用場景和 base-kv 的負載處理能力，dist-worker 採用了以下默認 Balancer 策略：</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">啓用 ReplicaCntBalancer：這一策略確保 KVRange 副本數與集羣節點數保持一致，最大化查詢吞吐效率。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">控制 Voter 副本數：在保證高可用性的同時，將 Raft Voter 的數量限制在最多 3 個，其他副本則作為 Learner 角色，以此降低寫操作的響應延遲。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在大多數常見的使用場景中，一條 Publish 消息匹配到的訂閲者數量通常並不多，且匹配過程也較為迅速。結合標準的操作環境中，當前設置已能滿足大部分性能要求，dist-worker 模塊在其默認配置下並沒有激活 Range 拆分策略。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">然而，當面對大規模 Fanout 場景，特別是那些對低延遲有更高需求的情況時，單個 Range 查詢效率可能會變成制約整體性能的瓶頸。為了應對這類挑戰，未來 BifroMQ 中將增強這一方面的處理能力，以優化大規模 Fanout 場景下的性能表現。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>retain-store</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">Retain 消息的工作負載與訂閲信息和消息發送的處理相似，正常使用下主要表現為讀操作多於寫操作。基於這一特點，retain-store 的默認 Balancer 策略被設置為與 dist-worker 模塊一致，在此不做重複説明。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>inbox-store</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 BifroMQ 中，inbox-store 模塊承擔着管理每個 cleanSession=false 連接離線消息的角色。對於這類連接，inbox-store 會創建一個專屬持久化離線消息隊列。歸屬於這些連接的 Publish 消息首先被寫入這些隊列中。當連接恢復在線狀態時，消息將從隊列中取出進行推送並隨即刪除。構成一個典型的高頻讀寫場景，其中工作負載主要集中在 Leader Range 副本上，且 KV 存儲操作的 IO 時延對整個系統的消息處理能力有着不可忽視的影響。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">考慮到這種特定使用場景和 base-kv 的負載處理特性，inbox-store 採取以下默認的 Balancer 策略：</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">默認限制 Voter 為 1：由於副本數量越多可能導致寫入響應時延增長，因此默認設置中將 Range 副本數限制為 1，以優先保障消息的快速處理，但會有一定可靠性損失，用戶可以根據情況增加副本數量。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">啓用 RangeSplitBalancer 和 RangeLeaderBalancer：這一策略使得 inbox-store 能夠隨着工作負載的增長動態進行分片擴容，最終實現更加均衡的負載分佈，提升系統整體性能。</p><p style="margin-left:0; margin-right:0"><strong>StandardCluster 的部署策略與靈活性評估</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">BifroMQ StandardCluster 採納集所有功能模塊於單一進程的部署策略。這種策略使得配置和部署過程相對簡化，類似於業界普遍採用的"SharedNothing"集羣架構。儘管如此，多個模塊共享同一進程內的系統資源，難免限制基於實際業務需求的動態配置能力。所有模塊需統一進行擴縮容，這在某些情況下可能導致靈活性不足。這一點在雲業務場景中尤為明顯，因為不同類別的負載波動與時間相關，需要更加細緻和靈活的資源管理。</p><p style="margin-left:0; margin-right:0"><strong>單個模塊獨立進程的實施與過渡</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">BifroMQ 的獨特架構設計使其能夠輕鬆實現"單個模塊獨立進程"的部署模式，我們稱之為 IndependentWorkload Cluster(未來版本中推出)。這種模式不僅提供更高的靈活性和精細的資源管理能力，還能夠幫助用戶根據業務的發展逐步從 StandardCluster 模式過渡到 IndependentWorkload Cluster 模式。這種漸進式的部署變化可在保持業務連續性的同時，優化資源配置和應對業務需求的波動。</p><p style="text-align:center"><img alt="" height="120" src="https://oscimg.oschina.net/oscnet/up-70971f2bef6bf706707b7e3b95e1730fe75.png" width="369" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲IndependentWorkload Cluster 過渡</p><p style="margin-left:0; margin-right:0"><strong>總結</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">以上內容為 BifroMQ 利用多種機制確保集羣整體高可用性的全面介紹。本專題下期文章，我們將從 BifroMQ Topic 訂閲匹配方案的設計和實現思路出發，為您帶來全新視角深入解讀。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">本次系列文章圍繞 BifroMQ 在 MQTT 上的設計實現做全面解讀，歡迎對 MQTT 技術感興趣的同學關注。也期待大家更多的參與<span style="color:#000000">（</span>BifroMQ 社區，詳見：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbaidu%2Fbifromq" target="_blank">﻿https://github.com/baidu/bifromq</a>﻿ ），提供寶貴的深入使用反饋意見，共同推動這一技術的成熟。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271988</guid>
            <link>https://www.oschina.net/news/271988</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[統信 UOS 桌面版裝機量超 600 萬套，市佔率第一]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>統信昨日舉行 2023 統信 UOS 生態大會。在大會上，官方公佈了統信 UOS 裝機量、UOS AI 最新進展等信息。</p><p>《2023 中國信創產業洞察研究》數據顯示，統信 UOS 獨家中標中國郵政 30 萬套國產操作系統，這是行業目前最大采購訂單；統信 UOS 獨家中標北京市豐台區教委 2 萬套操作系統，更是目前中國教育領域最大的單項中標。</p><p><strong>截至目前，統信 UOS 桌面版發貨量累計超過 600 萬，市佔率持續保持第一；服務器版發貨量增速為行業第一</strong>。</p><blockquote><p>統信 UOS 是由統信，深之度科技等聯合開發的一款國產 Linux 操作系統，提供了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.uniontech.com%2Fnext%2Fproduct%2Fdesktop-system%3Fedition%3DPersonal" target="_blank">桌面版</a>和<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.uniontech.com%2Fnext%2Fproduct%2Fserver-system%3Fedition%3DEnterprise" target="_blank">服務器版</a>。其中桌面版包括：專業版、教育版、家庭版和社區版。服務器版包括企業版、行業版等。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="768" src="https://static.oschina.net/uploads/space/2023/0911/112651_9lsK_2720166.png" width="1515" referrerpolicy="no-referrer"></p></blockquote><p>統信軟件總經理劉聞歡<span>介紹稱，</span>中國 70% 黨政、80% 央國企、65% 部委、90% 金融、90% 教育的核心與一般業務系統都運行在統信 UOS 之上。</p><p>生態方面，<strong>統信 UOS 軟硬件生態適配數已經突破 500 萬，原生應用激增 300%</strong>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1221/101820_80wj_2720166.png" referrerpolicy="no-referrer"></p><p>據稱，統信 UOS 在通用市場呈現領先態勢，服務器操作系統市場規模逐年提高，<strong>統信 UOS 營收增速達 170%</strong>。</p><p>官方表示，統信軟件已與龍芯、飛騰、海光、兆芯、申威及英特爾等主流芯片廠商建立聯合生態實驗室，與鯤鵬計算達成深度合作，<strong>支持重點整機廠商主力機型 100 + 款，實現所有整機機型 100% 兼容性適配及互認證</strong>。</p><p>目前統信 UOS 應用商店中已有多款常用、實用的軟件，包括 QQ、微信、搜狗輸入法等，也有中望 CAD 等專業生產力軟件。</p><hr><p><span>延伸閲讀</span></p><ul><li><a href="https://www.oschina.net/news/257631">統信 UOS 軟硬件適配數正式超過 300 萬</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 02:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271975</guid>
            <link>https://www.oschina.net/news/271975</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[QEMU 8.2 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qemu.org%2F2023%2F12%2F20%2Fqemu-8-2-0%2F" target="_blank">QEMU 8.2.0 </a>版本現已推出，此版本包含來自 238 位作者的 3200 多項 <span style="background-color:#ffffff">commit</span>。</span></p><p><span style="color:#000000">一些更新<span style="background-color:#ffffff">亮點包括：</span></span></p><ul><li><span style="color:#000000">新的 virtio-sound 設備模擬</span></li><li><span style="color:#000000">Android 模擬器使用新的 virtio-gpu rutabaga 設備模擬</span></li><li><span style="color:#000000">新增用於 Hyper-V guests 的動態內存協議設備 hv-balloon</span></li><li><span style="color:#000000">新的通用閃存設備模擬</span></li><li><span style="color:#000000">網絡塊設備 (NBD) 64 位偏移可提高性能</span></li><li><span style="color:#000000">dump-guest-memory 現在支持標準 kdump 格式</span></li><li><span style="color:#000000">ARM：對 cortex-a710 和 neoverse-n2 的 CPU 仿真支持</span></li><li><span style="color:#000000">ARM：對 PACQARMA3、EPAC、Pauth2、FPAC、FPACCOMBINE、TIDCP1、MOPS、HBC 和 HPMN0 的架構功能支持</span></li><li><span style="color:#000000">HPPA：64 位 PA-RISC 2.0 的 CPU 仿真支持</span></li><li><span style="color:#000000">HPPA：C3700 的機器仿真支持，包括 Astro 內存控制器和四個 Elroy PCI&nbsp;bridges</span></li><li><span style="color:#000000">LoongArch：ISA 對 LASX 擴展和 PRELDX 指令的支持</span></li><li><span style="color:#000000">LoongArch：對 la132 的 CPU emulation 支持</span></li><li><span style="color:#000000">RISC-V：通過 KVM 和矢量加密指令支持 AIA 虛擬化的 ISA/擴展支持</span></li><li><span style="color:#000000">RISC-V：大量擴展/指令清理、修復和重做</span></li><li><span style="color:#000000">s390x：支持加密適配器的 vfio-ap passthrough，以保護受保護的虛擬化&nbsp;guests</span></li><li><span style="color:#000000">Tricore：支持實現 ISA v1.6.2 的 TC37x CPU</span></li><li><span style="color:#000000">Tricore：支持 CRCN、FTOU、FTOHP 和 HPTOF 指令</span></li><li><span style="color:#000000">x86：對 PV 控制枱和網絡設備的 Zen 支持</span></li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qemu.org%2Fdownload%2F%23source" target="_blank">下載地址</a><span style="background-color:#ffffff; color:#333333">&nbsp;|<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.qemu.org%2FChangeLog%2F8.2" target="_blank">Changelog</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 02:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271972/qemu-8-2-released</guid>
            <link>https://www.oschina.net/news/271972/qemu-8-2-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每個故障都是一次涅槃]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2023 年 12 月 19 日，今天 sealos 的公有云一個小時內被攻擊 3 次，每次，幾 G 到，十幾 G 的流量，都是 CC 攻擊（七層多 IP 地址模擬用戶請求），這種比 DDos 還難防，現在凌晨一點，剛處理完所有臨時方案，以及諮詢一些外部的安全專家，後續會有一系列的加強防控來保障穩定性。有些感想，怕睡一覺忘了，趕緊寫下來。</p><h2>致歉</h2><p>首先要給所有喜歡 sealos 的同學道歉，這幾天的連續攻擊讓平台出現幾次幾分鐘的不可用，比如今天每次大概會 3～5 min, 流量是瞬間過來把 15 台 nginx 全部打爆的，然後 k8s 會自動拉起恢復，我們停止掉了被攻擊應用，並把資源擴大了一倍來硬抗，這是臨時方案。</p><p>被攻擊之後我們的穩定性數據是 99.9%，對於穩定性要求高於這個數字的業務可以考慮緩一緩使用我們的公有云，先可以跑一些開發測試或者周邊應用，核心業務可以考慮獨立部署方案。</p><p>後面平台會按照 SLA 承諾給收到損失的用戶相應賠償，有遷移走的用戶可以聯繫我們對未消費餘額全部退款，再次表示深深的歉意。</p><h2>這一天遲早要來</h2><p>在大概一個月前還沒被攻擊的時候，laf 作者老根吃飯時就在講，為什麼 sealos 還沒受到攻擊，這不合理，沒被攻擊反而讓人感到不安。現在頭頂的劍是落下了，這是成為一朵成熟的雲的必經之路。沒想到來的這麼快。</p><h2>創業一年中遇到前所未有的挑戰</h2><p>創業我們選擇了一條極難，極讓人興奮的路，做公有云，這怎麼看都不應該是一個小團隊能做的了的事，我嫌難度不夠再增加一點：做一個多租戶的容器公有云。還可以把難度再加一點：先做國內。最終想做成一個優雅的牛逼的公有云，然後任何人都可以直接擁有這個雲操作系統，一鍵裝起來一個對標公有云能力的雲，磨平公有云私有云的邊界。</p><p>創業前雖然也做過非常多有挑戰的事，比如容器雲支撐整個訊飛核心研發平台，深度學習平台的 GPU 批任務，碎片化，當時做了一個亞洲最大的 GPU 集羣，後面在 k8s 上完全取代 openstack 的創世系統，在阿里雲的時候應用交付平台和開源 sealer 等，但這些大多都是私有云，和公有云不是一個挑戰級別。</p><p>創業時我們在技術上是激進的，現金流上是保守的，因為我認為前沿的不太成熟的技術別人不敢用，我敢，這就是創業公司的競爭優勢，不成熟的技術你讓他成熟了這就成為你建立壁壘的磚塊。當有長期的積累，這朵雲穩定運行超過 2 年時，我們就會達到原子彈爆炸的臨界值，沒人能拒絕這樣優秀的東西了。</p><p>第一次大的故障是 2023.3.17 號，記的這麼清楚是因為公司一週年慶祝，我們買了蛋糕水果，結果 laf 剛上線沒幾天就掛了，全公司核心人員修復了 15 個小時，蛋糕擺在那兒就沒時間切了。最終原因是因為用了某平台的輕量服務器，網絡包紊亂，後來全部切走，低成本是要付出代價的。</p><p>後面幾次故障是 laf 的用戶迅速暴漲，導致 mongo 的租戶迅速突破上限，很少有這種多租戶共享一個實例的場景，影響到了我們的用戶，其中有一個用戶在北京，我就過去給他們道歉了，並承諾無論花多大代價都必須把他們的穩定性做好，後面幾乎整個 laf 團隊都鋪在這個事情上，中間過程故事很多，已經到了我們幫助用戶去調優代碼的程度了，當然穩定性問題是沒有那麼好解決的，但是最終還是收斂下來了，現在這個客戶今年已經從 0 開始有大幾百萬用戶了，這種背靠背作戰讓我們很有成就感，就像在爬一座又一座山，中間我們可能被劃傷，摔倒，但是沒死，變禿了也變強了。</p><p>然後就是網關，我們確實幾乎市面上所有的網關都嘗試用了一遍，測試了一遍，都有不同程度各種各樣的問題。 我自己遇到這些問題是興奮的，這就意味着機會，意味着我們解決了這些問題就會變成競爭力，所以我們不斷死磕難點。比如我們正在用的 k8s 剛剛 GA 的 Gateway API，我們會充分的壓力測試與解決其中還不太成熟的問題，又比如我們一定要把數據庫穩定的跑容器裏。</p><p>最近遇到的就是被攻擊，原因是因為 sealos 上跑了大量的 GPT 相關的應用，某些應用的流量又特別大，而這些應用的競爭對手就會惡意攻擊。我們做過充分的性能測試，比如幾十萬 QPS 都可以輕鬆扛住，但是攻擊者是下血本了，流量打的非常之大，隔三差五就來兩下。我們後續會通過 tls 特徵分析，http2 以及 ip2local 幾個層面來綜合解決 cc 攻擊的問題。這次之後我們又將一次脫胎換骨，真的我現確切的感受就是這樣，一個產品的強大是要經過苛刻的場景千錘百煉的，高手的身上都是傷疤。</p><p>這次故障用戶裏面就會出現兩種人，一種是謾罵聲，説穩定性差，體驗差，服務差，我十分理解，也多少有些失落，確實我們不完美，我們在努力改進，也儘自己所能去做一些彌補，當我們足夠強大的時候，歡迎回來。 另外一種是支持和鼓勵，讓我非常感動，羣裏很多做網絡安全的同學主動聯繫我，給我們提供非常靠譜的方案，甚至共享一些付費數據來為我們提供更好的防護能力，以前 laf 故障的時候也是，有些客戶給我們發紅包，説修復故障辛苦了，是個好項目，無論遇到什麼困難一定要做下去，這些用戶真的是我們的前進動力。</p><h2>穩定性與成本</h2><p>很難的一件事就是用戶不接受你不穩定這合情合理，同樣不接受成本高，而往往有時候就是需要投入更大成本來解決穩定性問題，比如我們這些遇到的，一種解決方式就是把流量抗下來，那就需要耗費大量服務器，這就是成本，或者加 waf ddos 防護這也是成本，這些隱性成本挺多用戶要麼不認，要麼用不起（也有原意用的）。所以成本和穩定性之間就形成了一種矛盾。而且這種 CC 攻擊如果攻擊者足夠專業的話讓你沒法做特徵分析，那麼理論上可能真的只有硬抗下來，抗的這個成本算誰的。</p><p>所以我現在能理解為什麼公有云貴了，就是為瞭解決那剩下的 10% 問題，需要花 200% 300% 的成本去解決，比如多副本，比如機房灌水，等等。</p><p>這次被攻擊之後讓我更加堅定擁抱公有云，確實雲在底層解決掉了很多問題，如果是託管服務器遲早都會遇到這些問題，然後花數倍的成本雲解決。 反而通過高效充分的雲上調度手段能在公有云上把成本進一步降低。</p><p>總之，不穩定，用戶罵你，貴，用戶亦罵你。 我是覺得罵的對，不罵不進步。技術有意思的點也在這，解決矛盾問題，比如穩定性與成本的矛盾，比如功能強大與複雜度的矛盾，這些新的牛逼的技術就是為了能找到一個優雅的方式能兼顧。</p><h2>涅槃重生</h2><p>我們還是一如既往的走技術激進路線，穩定性的問題是一定會被收斂的，sealos 的核心組件就那麼多，一塊一塊硬啃也能啃下來，今天暴露的問題是為了明天的高魯棒性，要想涅槃重生得把自己架在火上烤，公有云就是我們的試金石，預計半年到一年的時間我們可以解決掉絕大多數核心問題，倒時一個穩如老狗，便宜，簡單，開放的雲會綻放在大家面前。 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffanux%2Fsealos" target="_blank">sealos 以 kubernetes 為內核的雲操作系統發行版，讓雲原生簡單普及</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flafjs%2Flaf" target="_blank">laf 寫代碼像寫博客一樣簡單，什麼 docker kubernetes 統統不關心，我只關心寫業務！</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 09:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5254806/blog/10322777</guid>
            <link>https://my.oschina.net/u/5254806/blog/10322777</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[大多數嚴重網絡攻擊都源於不到 1% 的漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">網絡安全軟件提供商 Qualys 發佈了一份「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.qualys.com%2Fvulnerabilities-threat-research%2F2023%2F12%2F19%2F2023-threat-landscape-year-in-review-part-one" target="_blank">2023 年威脅態勢回顧</a>」的研究報告。詳細介紹了漏洞威脅態勢、主要漏洞類型和其他相關數據的關鍵見解，包括平均利用時間、MITRE ATT&amp;CK 策略和技術，以及 2023 年最活躍的勒索軟件和威脅行為者。</span></p><p><span style="color:#000000">截至報告成文時，2023 年共披露了 26,447 個漏洞，比 2022 年披露的漏洞總數多了 1,500 多個，是有史以來披露的最高數量。但並非所有漏洞都具有高風險，事實上，只有不到 1% 的漏洞會導致最高風險，並且經常被廣泛利用。</span></p><p><span style="color:#000000"><img alt="" height="267" src="https://oscimg.oschina.net/oscnet/up-6c4543e7ec1ce3b06a0a8d7e071286489ad.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000"><img alt="" height="253" src="https://oscimg.oschina.net/oscnet/up-33ab1f11fb9bec4cecc7e8181bba654c281.webp" width="500" referrerpolicy="no-referrer"></span></p><ul><li><span style="color:#000000">在已披露的漏洞中，超過 7,000 個漏洞具有概念驗證漏洞利用代碼，可能會導致成功利用漏洞。但漏洞利用代碼的質量通常較低，這可能會降低攻擊成功的可能性。</span></li><li><span style="color:#000000">大約 206 個漏洞具有可用的武器化利用代碼，這意味着<span style="background-color:#ffffff">如果利用這些漏洞</span>，很可能會危害目標系統。</span></li><li><span style="color:#000000">有 115 個漏洞經常被威脅者、惡意軟件和勒索軟件組織（例如 Clop）利用。</span></li><li><span style="color:#000000">在觀察到的漏洞中，109 個有被利用的已知證據，並被列入 CISA 已知被利用漏洞 (KEV) 清單。</span></li><li><span style="color:#000000">97 個漏洞已被利用，但未包含在 CISA KEV 列表中。</span></li><li><span style="color:#000000">LockBit 和 Cerber 等勒索軟件集團利用了 20 個漏洞。此外，惡意軟件和殭屍網絡組織利用了 15 個漏洞。</span></li></ul><p><span style="color:#000000">超過三分之一的已識別高風險漏洞可以被遠程利用。五種最常見的漏洞類型佔已發現漏洞總數的 70% 以上。</span></p><p><span style="color:#000000"><img alt="" height="253" src="https://oscimg.oschina.net/oscnet/up-c379630bd2ad0f2b2de66be6226cedb00f8.webp" width="500" referrerpolicy="no-referrer">&nbsp;</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">2023 年高危漏洞的平均利用時間約為 44 天。但報告指出，在許多情況下，</span><span style="background-color:#ffffff">漏洞在發佈當天就可以被利用。「這一立即行動代表了攻擊者作案方式的轉變，凸顯了攻擊者效率的不斷提高和防禦者響應窗口的不斷縮小。」</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><strong>25% 的高風險 CVE 在發佈當天就已被利用，</strong><span style="color:#000000"><span style="background-color:#ffffff">75% 的漏洞在發佈後 19 天（大約三週）內被利用。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">全年被利用的主要漏洞包括針對 PaperCut NG、MOVEit Transfer、各種 Windows 操作系統、Google Chrome、Atlassian Confluence 和 Apache ActiveMQ 的漏洞。許多漏洞可以遠程利用，無需物理訪問目標系統。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">在已發現的 206 個漏洞中，有 32.5% 的漏洞位於網絡基礎設施或 Web 應用程序領域，而這些領域傳統上很難通過常規手段進行防護。</span></p><p><span style="color:#000000"><strong>遠程服務利用（T1210 和 T0866）、面向公眾的應用程序的利用（T1190 和 T0819）</strong>和<strong>特權升級利用 (T1068)​​​​​​​<strong style="color:#6a778b">&nbsp;</strong></strong>是 MITRE ATT&amp;CK 的三大策略。其中最常用的遠程服務利用，在企業中出現了 72 次，在工業控制系統中出現了 24 次。面向公眾的應用程序的利用在企業中出現了 53 次，在工業控制系統中出現了 19 次；特權升級利用排在第三位，記錄了 20 次。</span></p><p><span style="color:#000000">為了降低風險，報告建議企業應採用多層次方法，利用各種傳感器清查面向公眾的應用程序和遠程服務的漏洞。並建議根據列入 CISA KEV 列表、高利用概率分數和武器化利用代碼的可用性等因素，確定修復工作的優先順序。</span></p><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.qualys.com%2Fvulnerabilities-threat-research%2F2023%2F12%2F19%2F2023-threat-landscape-year-in-review-part-one" target="_blank">查看完整報告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 09:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271898/2023-threat-landscape-year</guid>
            <link>https://www.oschina.net/news/271898/2023-threat-landscape-year</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[倪光南院士：希望國產 SSD 替代進口 HDD]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>「2023 探索大會」今日在北京舉辦，中國工程院院士倪光南在會上表示：「我們希望在存儲界迅速地推進以半導體存儲取代機械存儲這樣一個科技革命的趨勢，<strong>推動國產 SSD 產品替代進口的 HDD 產品</strong>。」</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e03cbbc2dbb4d357d48b52d863fe3d1c73a.png" referrerpolicy="no-referrer"></p><p>倪光南院士稱，半導體存儲以其高性能、低功耗等優勢，正在逐漸取代傳統的機械存儲。這次科技革命將帶來巨大的產業變革，對於推動國產 SSD 產品替代進口的 HDD 產品，以及提升我國在全球半導體存儲領域的地位具有重大意義。然而，要實現這個目標，我國還需要在人才儲備等方面得到大力支持。與發達國家相比，我國在半導體存儲領域的人才儲備還有一些差距。因此，倪光南院士呼籲相關部門和企業能夠在這方面給予更多的支持和關注。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-24efc7c284d1c70c6dca31b2f9c63c3bdb1.png" referrerpolicy="no-referrer"></p><p>倪光南在今年 6 月的第十三屆電子信息產業標準推動會上指出，目前 HDD 市場均被外企壟斷，在 HDD 領域尋求突破異常困難。倪光南提到，閃存和 SSD 均屬於半導體存儲範疇，閃存指的是存儲介質，即閃存顆粒，SSD 指的是存儲設備。</p><p>目前我國算力中心中採用 SSD 的佔比較低，在我國存儲市場中，閃存所佔比例還較低，未來發展空間巨大。他表示，隨着我國國產存儲整機和閃存生產能力逐步提升，SSD 取代 HDD 時機已經到來。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 08:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271880</guid>
            <link>https://www.oschina.net/news/271880</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[知名開源項目作者因躁狂症失業——「在線求打錢」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Requests 是知名的 Python HTTP 庫（項目已捐贈給 Python 軟件基金會）。</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-572c04dd97a41d6c7e7474bfd845177323f.png" referrerpolicy="no-referrer"></p></blockquote><p>最近 Requests 作者 Kenneth Reitz 在社交媒體表示自己目前的財務情況出現問題，所以需要<strong>尋求資金來維持基本生存</strong>。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1220/122429_Vhez_2720166.png" referrerpolicy="no-referrer"></p><p><strong>我目前正在尋求資金，以維持我們的生計。到目前為止，我所擔任的職位在經濟上並不寬裕。雖然我正在努力，但我們現在的生活還是捉襟見肘。有人願意幫忙嗎？<br> 我已經安裝了 CashApp。</strong></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fkennethreitz42%2Fstatus%2F1734713908735230191" target="_blank">https://twitter.com</a></u></em></p></blockquote><p>Kenneth Reitz 最近的推文<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fkennethreitz42%2Fstatus%2F1734575827545723236" target="_blank">顯示</a></u>，其本人正在尋找新的工作機會——缺少穩定的收入來源，也難怪 Kenneth Reitz 需要「在線求打錢」。</p><blockquote><p><img height="330" src="https://static.oschina.net/uploads/space/2023/1220/120541_XEHC_2720166.png" width="1280" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/1220/121110_Kh2A_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>Kenneth Reitz 還<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fkennethreitz42%2Fstatus%2F1734731803858968577" target="_blank">坦言</a></u>幾周前自己<strong>因躁狂症而失業</strong>。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1220/121840_F9TY_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>下面是 Kenneth Reitz 的作品和簡介：</p><p><img src="https://oscimg.oschina.net/oscnet/up-f59b6ee0dd1750cca83570ae8cdeae8e246.png" referrerpolicy="no-referrer"></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkennethreitz" target="_blank">https://github.com/kennethreitz</a></u></em></p><hr><p>延伸閲讀</p><ul><li><a href="https://www.oschina.net/news/106470/why-im-not-collaborating-with-kenneth-reitz" target="_blank">知名 Python 庫 Requests 作者&nbsp;Kenneth Reitz 被指騙捐</a></li><li><a href="https://www.oschina.net/news/197320/python-requests-library-domain-expired" target="_blank">Python HTTP 庫 Requests 官網域名已過期</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 04:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271855</guid>
            <link>https://www.oschina.net/news/271855</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
