<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 18 Mar 2024 10:14:06 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[歷時 20 年，GnuCOBOL 已達到工業成熟度]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">OCamlPro 創始人兼 GnuCOBOL 貢獻者 Fabrice Le Fessant <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fftp.heanet.ie%2Fmirrors%2Ffosdem-video%2F2024%2Fh2215%2Ffosdem-2024-3249-gnucobol-the-free-industrial-ready-alternative-for-cobol-.av1.webm" target="_blank">表示</a>，經過 20 年的發展，開源 GnuCOBOL「已經達到了工業成熟度，可以在所有環境中與專有產品競爭。」</span></p><p><img height="282" src="https://oscimg.oschina.net/oscnet/up-f841c8a4f74c37bf76aa87226db78e14e1b.png" width="500" referrerpolicy="no-referrer"></p><blockquote><p><span style="color:#000000">GnuCOBOL 是一款免費的現代 COBOL 編譯器，曾用名 OpenCOBOL，於 2013 年更名為 GnuCOBOL。實現了 COBOL 85、X/Open COBOL 和較新的 ISO COBOL 標準（2002、2014、2023）的大部分內容，以及其他 COBOL 編譯器（IBM COBOL、MicroFocus COBOL、ACUCOBOL-GT 等）中的許多擴展。</span></p><p><span style="color:#000000">GnuCOBOL 將 COBOL 翻譯成 C，並在內部使用 native C 編譯器編譯翻譯後的代碼。在各種平台上構建 COBOL 程序，包括 GNU/Linux、Unix、Mac OS X 和 Microsoft Windows。GnuCOBOL 還可在 HP/UX、z/OS、SPARC、RS6000、AS/400 以及其他機器和操作系統組合上構建。</span></p><p><span style="color:#000000">COBOL 是最古老的編程語言之一，歷史可以追溯到 1959 年左右；但當下仍被大型組織廣泛用於處理來自重要中央系統的數據，例如賬單、帳戶、工資單和客戶交易等。2022 年的一項調查指出，92% 的受訪者認為 COBOL 具有戰略意義，日常使用的 COBOL 代碼量顯着增加至 775-8500 億行；大約是先前估計的三倍。</span></p></blockquote><p><span style="color:#000000">GnuCOBOL 項目負責人 Simon Sobisch 指出，GnuCOBOL 正在進行大量的商業部署，如銀行後端應用程序，其中許多是從 Micro Focus 遷移過來的，且用戶報告稱性能因此得到了提高。GnuCOBOL 代碼的實現可以運行數千個處理器，這使項目開發人員有機會在大型用例中調整性能和內存使用情況。</span></p><p><span style="color:#000000">Sobisch 稱，GnuCOBOL 在合規性方面通過了 97% 的 COBOL 85 一致性測試，超越了現有的專有產品。不過 GnuCOBOL 暫時還不支持 objects 或 messages。對此 Sobisch 解釋道：「objects 是 COBOL 22 中的一個很好的功能，但使用得並不多。」</span></p><p><strong><span style="color:#000000">相關閲讀：</span></strong></p><ul><li><p style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/news/148786/cobol-old-programming-languages" target="_blank">調查：COBOL 程序員後繼無人，一些關鍵崗位或面臨空缺</a></p></li><li><p style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/news/181943/microfocus-cobol-market-research-2022" target="_blank">COBOL 代碼行數超 8000 億，應用現代化是首選發展道路</a></p></li><li><p style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/news/255047/ibm-ai-translate-cobol-code-to-java" target="_blank">IBM 利用 AI 將 COBOL 代碼轉換為 Java</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 08:12:11 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283605/gnucobol-ready-for-industry</guid>
            <link>https://www.oschina.net/news/283605/gnucobol-ready-for-industry</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中國信通院發佈《綠色算力技術創新研究報告（2024 年）》]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">《綠色算力技術創新研究報告（2024 年）》由中國信息通信研究院雲計算與大數據研究所編制，旨在梳理綠色算力技術的創新發展趨勢，推動中國算力產業的綠色高質量發展。</p><p style="color:#060607; margin-left:0; margin-right:0; text-align:start"><img alt="" height="509" src="https://static.oschina.net/uploads/space/2024/0318/150145_iTRv_4700705.png" width="360" referrerpolicy="no-referrer"></p><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">報告的核心內容包括：</p><ol><li><p style="margin-left:0; margin-right:0"><strong>綠色算力發展態勢</strong>：介紹了算力作為數字經濟時代的關鍵生產力，以及綠色低碳、節能環保成為產業發展的底層邏輯。報告強調了技術創新在綠色算力發展中的根本作用，並概述了算力產業的政策背景、市場規模增長、產業生態豐富性以及綠色發展的必然要求。</p></li><li><p style="margin-left:0; margin-right:0"><strong>綠色算力概念內涵</strong>：綠色算力是算力基礎設施實現綠色、低碳、可持續發展的一種形式，涉及自然資源、環境資源的考量，以及經濟效益與環境保護、社會責任的融合。</p></li><li><p style="margin-left:0; margin-right:0"><strong>綠色算力發展演進</strong>：報告將綠色算力的發展分為四個階段：初級階段（1996-2006 年）、起步階段（2007-2020 年）、發展階段（2021-2030 年）和成熟階段（2030 年及未來），每個階段的特徵和發展重點有所不同。</p></li><li><p style="margin-left:0; margin-right:0"><strong>綠色算力屬性特徵</strong>：綠色算力具有全局性、先導性、長期性等特點，對數字經濟發展和高增長企業的孵化具有重要作用。</p></li><li><p style="margin-left:0; margin-right:0"><strong>綠色算力設施層技術創新</strong>：探討了建設綠色能源替代、創新儲能部署方式、應用自然冷卻技術和液冷技術等，以降低供電傳輸損耗和數據中心製冷用電需求。</p></li><li><p style="margin-left:0; margin-right:0"><strong>綠色算力設備層技術創新</strong>：包括優化服務器硬件節能、開發存儲材料及工藝、應用無損網絡介質等，以提高數據技術效率和網絡傳輸效率。</p></li><li><p style="margin-left:0; margin-right:0"><strong>綠色算力平台層技術創新</strong>：涉及迭代資源管理技術、簡化產品開發模式、完善環境監測體系等，以實現算力資源的高效調度和利用。</p></li><li><p style="margin-left:0; margin-right:0"><strong>綠色算力技術賦能經濟社會發展</strong>：綠色算力技術在加速科研技術革命、賦能產業節能低碳、助力社會治理格局構建等方面的應用和價值。</p></li><li><p style="margin-left:0; margin-right:0"><strong>綠色算力發展的展望與建議</strong>：提出了加強綠色算力政策保障、夯實綠色能源底座支撐、鞏固綠色設備技術創新、聚焦綠色平台能力建設和深入挖掘應用場景價值等建議。</p></li></ol><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">報告強調了綠色算力技術創新的重要性，並提出了相應的發展建議，以期實現數字經濟的高質量發展和綠色轉型。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">報告詳情可至<strong><span style="color:#333333"><span style="background-color:#f39c12">「開源中國 APP - 報告模塊」</span></span></strong>查看。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">APP 下載地址：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="300" src="https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png" width="300" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>（<em>目前僅提供 Android 版本）</em></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 07:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283584</guid>
            <link>https://www.oschina.net/news/283584</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[博通 CEO 承認 VMware 社區存在「一些不安」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">博通 (Broadcom) 首席執行官 Hock Tan 將其收購 VMware 後的第一個百天評價為「一個良好的開端」。但他也承認，這家虛擬化巨頭的快速變化讓一些人難以消化。</span></p><p><span style="color:#000000">Tan 在博通公司的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.broadcom.com%2Fblog%2Fvmware-by-broadcom-the-first-100-days" target="_blank">博客</a>上寫道：</span></p><blockquote><p><span style="color:#000000">雖然還有很多工作要做，但我們在打造全球領先的基礎設施技術公司方面已經取得了實質性進展。在評估和收購 VMware 的 18 個月過程中，我們審視了一切，以確定為客戶創造更多價值所需的條件。自 11 月底完成收購以來，我們採取了果斷行動來提高客戶價值。</span></p><p><span style="color:#000000">我們徹底改革了我們的軟件產品組合、進入市場的方法和整體組織結構。我們改變了銷售軟件的方式和對象。我們已經完成了從 2019 年開始加速的軟件業務模式轉型，從銷售永久軟件到僅訂閲許可（行業標準）。</span></p><p><span style="color:#000000">當然，我們認識到這種程度的變化給我們的客戶和合作夥伴帶來了一些不安，這是可以理解的。但所有這些舉措都是為了更快地創新、更有效地滿足客戶的需求以及讓與我們開展業務變得更容易。我們還期望這些變化能夠為我們的合作伙伴提供更大的盈利能力和更好的市場機會。</span></p></blockquote><p><img height="255" src="https://oscimg.oschina.net/oscnet/up-9d53649997180c88243beb10341cdfcd9b3.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">他接着還提到了 VMware 的 Cloud Foundation 產品，承諾將投入 10 億美元的研發資金來改進該產品，並指出博通已將訂閲標價減半。</span></p><p><span style="color:#000000">但 The Register 指出，Tan 忽略了一點，即 VMware 現在只銷售捆綁產品，這意味着 Cloud Foundation 現在是一些客戶重新授權其現有 VMware 財產的唯一途徑。Cloud Foundation 涵蓋了軟件定義的計算、網絡、存儲和管理工具--並非所有 VMware 客戶都使用或需要這樣的組合。</span></p><p><span style="color:#000000">因此，被迫購買 Cloud Foundation 意味着有些人被迫支付比他們想要的更多的軟件費用--這種情況導致一些客戶的賬單大幅增加。The Register 虛擬化部門獲悉，許可證成本上漲了 500% 或 600%；在某些情況下，在裸機上運行工作負載比使用服務器虛擬化更便宜。</span></p><p><span style="color:#000000">博通公司認為，如果這些客戶實施所有 Cloud Foundation，他們將獲得更好的收益；因為與不斷增加的公共雲成本相比，它將「為普通企業客戶帶來更低的擁有成本」。</span></p><p><span style="color:#000000">Tan 認為，博通迄今所採取的行動解決了 "我們的客戶直接向我表達的作為其最關鍵優先事項的業務成果"。據 The Register 瞭解，VMware by Broadcom 將在 5 月份左右發佈 Cloud Foundation 和其他核心 VMware 產品的增強功能。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 06:56:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283580/vmware-by-broadcom-the-first-100-days</guid>
            <link>https://www.oschina.net/news/283580/vmware-by-broadcom-the-first-100-days</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[北京將發佈第一代通用開放人形機器人本體]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">北京青年報消息稱，最近，北京人形機器人創新中心傳來好消息，近期將發佈第一代通用開放人形機器人本體。</span></p><p><span style="color:#000000">北京人形機器人創新中心相關負責人介紹，該中心主要面向人形機器人核心器件、通用本體、通用大模型、運動控制系統、工具鏈和開源社區等人形機器人行業短板和痛點開展技術攻關，將為整個行業打造出共性技術平台、公共服務平台以及規範人形機器人相關標準等，總體來説，中心將圍繞人形機器人產業通用部分發力，服務整個行業發展。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:54:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283529</guid>
            <link>https://www.oschina.net/news/283529</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Podman Desktop 1.8 發佈，帶來自己的 K8s GUI]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Podman Desktop 1.8 已經發布，此版本帶來：</p><ul><li><strong>Podman 4.9.3</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman%2Freleases%2Ftag%2Fv4.9.3" target="_blank">Podman 4.9.3</a>現在包含在 Windows 和 Mac 安裝程序中。</li><li><strong>Kubernetes Explorer</strong>：用於使用 Kubernetes 集羣的高級 UI 和新工具。</li><li><strong>Global Onboarding</strong>：通過一組指導工作流程，輕鬆配置和設置您的環境。</li><li><strong>學習中心</strong>：為開發人員發現新的用例和功能。</li><li><strong>擴展 API 改進</strong>：擴展 API 的另一項重大更新，為 🦭 Podman Desktop 的擴展帶來更多好處。</li><li><strong>增強的構建、Pod 列表和故障排除頁面</strong>：針對不同平台進行構建、升級的 Pod 視圖等。</li></ul><p><img height="944" src="https://static.oschina.net/uploads/space/2024/0318/103731_jmJO_3820517.png" width="1704" referrerpolicy="no-referrer"></p><h3>Podman&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23podman-493" target="_blank">4.9.3</a></h3><p style="margin-left:0px; margin-right:0px; text-align:start">🦭 Podman 4.9.3 包括針對我們用戶報告的穩定性和可靠性問題的關鍵修復 - 特別是如果您使用 Apple 芯片架構。如果您一直在苦苦掙扎，我們強烈建議您更新！</p><h3>Kubernetes<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23kubernetes-explorer" target="_blank">資源管理器</a></h3><p style="margin-left:0px; margin-right:0px; text-align:start">在過去的版本中作為實驗性功能逐步引入，我們已準備好擴展我們的功能以幫助開發人員從容器過渡到 Kubernetes。在此版本中，我們引入了一組新功能，使開發人員能夠使用更多 Kubernetes 資源，從而對應用程序提供更精細和交互式的控制。</p><p style="margin-left:0px; margin-right:0px; text-align:start">現在，🦭 Podman Desktop 中提供了一個新的 Kubernetes Explorer，除了對 Pod 的現有支持之外，它還能夠使用部署、服務、入口和路由。對於每個資源，Podman Desktop 提供有關集羣上資源狀態的實時信息。在此概述頁面的右上角，您還可以單擊應用 YAML 在集羣上創建或更新資源（類似於「kubectl apply -f」），並查看當前連接狀態。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="844" src="https://static.oschina.net/uploads/space/2024/0318/104554_X2mJ_3820517.png" width="1296" referrerpolicy="no-referrer"></p><p>就像本地容器或映像一樣，您可以單擊「摘要」、「檢查」和 Kube (YAML) 頁面上的更多詳細信息。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="862" src="https://static.oschina.net/uploads/space/2024/0318/104606_xUKa_3820517.png" width="1306" referrerpolicy="no-referrer"></p><p>看到問題了嗎？您可以直接從 Kube 選項卡編輯和應用更改。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="860" src="https://static.oschina.net/uploads/space/2024/0318/104617_Knka_3820517.png" width="1302" referrerpolicy="no-referrer"></p><p>🦭 Podman Desktop 繼續彌合差距和差異，使使用容器的開發人員能夠通過高效的工作流程從本地工作站瞄準 Kubernetes。這是除了一些已經可用的強大功能之外的所有功能：</p><ul><li>Podman 的原生 Kubernetes 支持</li><li>Podify - 將容器轉換為 Pod</li><li>使用 Minikube 和 Kind 擴展設置本地 Kubernetes 環境</li><li>部署到 Kubernetes 並將本地映像從 Podman 推送到 Kubernetes 環境</li><li>管理 Kubernetes 上下文</li><li>連接到遠程 Kubernetes 集羣</li></ul><h3>擴展 API<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23extension-api-improvements" target="_blank">改進</a></h3><p style="margin-left:0px; margin-right:0px; text-align:start">我們繼續花費大量時間添加新的擴展 API，為即將推出的擴展提供更多功能，甚至更好地集成到 🦭 Podman Desktop：</p><ul><li>拆分 getMatchingPodmanEngine&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6160" target="_blank">#6160</a></li><li>創建容器時添加 HealthCheck 參數<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5981" target="_blank">#5981</a></li><li>將 listPods 暴露給擴展<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5864" target="_blank">#5864</a></li><li>createPod 的標籤<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5862" target="_blank">#5862</a></li><li>允許在 Pod 中創建容器<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5848" target="_blank">#5848</a></li><li>OpenPod 應重定向到 pod 的視圖<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5846" target="_blank">#5846</a></li><li>增強 createContainer API 缺少參數的情況<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6011" target="_blank">#6011</a></li><li>允許擴展使用 openDialog/saveDialog&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6009" target="_blank">#6009</a></li><li>允許在貢獻的操作中自定義圖標<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5995" target="_blank">#5995</a></li><li>添加缺失的類型<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6213" target="_blank">#6213</a></li><li>允許從擴展導航到特定的 Web 視圖<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5899" target="_blank">#5899</a></li><li>將 stopPod 和 removePod 暴露給擴展<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5898" target="_blank">#5898</a></li><li>使用新的 API 打開/保存對話框<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6051" target="_blank">#6051</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6050" target="_blank">#6050</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6049" target="_blank">#6049</a></li><li>擴展 Podman Desktop API 構建映像參數<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5882" target="_blank">#5882</a></li><li>允許擴展至統計容器<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fissues%2F6211" target="_blank">#6211</a></li></ul><hr><h2>其他值得注意的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23other-notable-enhancements" target="_blank">增強功能</a></h2><p style="margin-left:0px; margin-right:0px; text-align:start">我們在此版本中添加了 40 多項功能，以下是其他一些亮點：</p><ul><li>改進 Podman Desktop 更新警報<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6068" target="_blank">#6068</a></li><li>在故障排除中添加收集和下載日誌按鈕<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5119" target="_blank">#5119</a></li><li>為 Linux 啓用 podman 機器<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5902" target="_blank">#5902</a></li><li>多次刪除動畫<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5717" target="_blank">#5717</a></li><li>圖像刪除動畫<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5709" target="_blank">#5709</a></li><li>卷刪除動畫<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5707" target="_blank">#5707</a></li><li>打開 OpenShift 路線<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5560" target="_blank">#5560</a></li><li>添加打開創建的 Pod 詳細信息<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F4499" target="_blank">#4499</a></li><li>部署到 kubernetes 集羣時使用 https&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5824" target="_blank">#5824</a></li><li>儀錶板頁面上的入門輪播<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5142" target="_blank">#5142</a></li><li>刪除對象時添加確認對話框<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5445" target="_blank">#5445</a></li></ul><p style="margin-left:0px; margin-right:0px; text-align:start">我們在實施 light 模式方面也取得了一些重大進展：</p><ul><li>使用主題顏色反轉內容<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6029" target="_blank">#6029</a></li><li>使用輔助導航的主題顏色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6028" target="_blank">#6028</a></li><li>為全球導航應用主題顏色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6027" target="_blank">#6027</a></li><li>為標題欄應用主題顏色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6025" target="_blank">#6025</a></li><li>一致的關閉按鈕<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6060" target="_blank">#6060</a></li><li>在快速選擇中使用組件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6057" target="_blank">#6057</a></li><li>為 webview 提供 css 顏色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5963" target="_blank">#5963</a></li><li>將顏色發佈到應用程序的樣式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5962" target="_blank">#5962</a></li><li>允許擴展提供帶有一組顏色的主題<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5961" target="_blank">#5961</a></li><li>商店顏色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5960" target="_blank">#5960</a></li><li>包括顏色註冊表<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5958" target="_blank">#5958</a></li><li>添加實用方法來獲取主題的值<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5947" target="_blank">#5947</a></li><li>當操作系統更改顏色時發送事件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5946" target="_blank">#5946</a></li><li>清理深色：前綴顏色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5944" target="_blank">#5944</a></li><li>將調色板提取到自己的文件中<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5931" target="_blank">#5931</a></li><li>輸入組件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5904" target="_blank">#5904</a></li><li>輸入錯誤，在運行圖像中使用輸入組件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5988" target="_blank">#5988</a></li><li>構建圖像時使用輸入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5986" target="_blank">#5986</a></li><li>使用代理設置輸入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5943" target="_blank">#5943</a></li><li>使用註冊表輸入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5939" target="_blank">#5939</a></li><li>從容器創建 pod 時使用輸入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5935" target="_blank">#5935</a></li><li>在擴展頁面中使用輸入組件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5934" target="_blank">#5934</a></li><li>在創建卷中使用輸入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5933" target="_blank">#5933</a></li><li>重命名圖像時使用輸入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5964" target="_blank">#5964</a></li><li>在部署到 kube 時使用複選框組件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6030" target="_blank">#6030</a></li></ul><hr><h2>值得注意的錯誤<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23notable-bug-fixes" target="_blank">修復</a></h2><p style="margin-left:0px; margin-right:0px; text-align:start">我們在此版本中修復了許多錯誤，包括以下內容：</p><ul><li>將容器複製到 pod 時安裝的複製卷<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5640" target="_blank">#5640</a></li><li>更改卷和容器列表中「創建」按鈕的順序<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6092" target="_blank">#6092</a></li><li>上下文值更新時刷新入門項目 (#4597)&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6173" target="_blank">#6173</a></li><li>更好地登錄 informer 連接錯誤<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6158" target="_blank">#6158</a></li><li>網站：替換損壞的鏈接<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6111" target="_blank">#6111</a></li><li>中心空屏幕<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6077" target="_blank">#6077</a></li><li>不要求確認打開本地文件夾/文件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5743" target="_blank">#5743</a></li><li>強制麪包屑垂直對齊<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5741" target="_blank">#5741</a></li><li>身份驗證頁面中的長用戶名<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5737" target="_blank">#5737</a></li><li>用於更新任務名稱的消息屬性<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5731" target="_blank">#5731</a></li><li>導航項 UI 修復<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5886" target="_blank">#5886</a></li><li>顯示回註冊表的圖標<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5843" target="_blank">#5843</a></li><li>檢查路由 tls 以使用 http 或 https&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5825" target="_blank">#5825</a></li><li>白色工具提示<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5887" target="_blank">#5887</a></li><li>限制註冊表用戶名列寬度<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5718" target="_blank">#5718</a></li><li>刪除 Linux 上的 docker 兼容性警告和按鈕<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5903" target="_blank">#5903</a></li><li>容器的圖像使用情況<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5663" target="_blank">#5663</a></li><li>刪除當前上下文時應更改/更新<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5819" target="_blank">#5819</a></li><li>不要摺疊側邊欄上的類別<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5727" target="_blank">#5727</a></li><li>使 localhost 成為 env.openExternal 調用的有效域<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5716" target="_blank">#5716</a></li></ul><hr><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23documentation" target="_blank">文檔</a></h2><p style="margin-left:0px; margin-right:0px; text-align:start">隨着新版本的 🦭 Podman Desktop 的發佈，文檔也進行了以下改進：</p><ul><li>containerEngine api 的容器和圖像相關方法<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5891" target="_blank">#5891</a></li><li>刪除了使用 openshift local 安裝 podman&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6070" target="_blank">#6070</a></li><li>文檔圖像檢查器提供程序 API&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5813" target="_blank">#5813</a></li><li>添加 withProgress api 文檔<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5736" target="_blank">#5736</a></li><li>添加了故障排除頁面的鏈接<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5734" target="_blank">#5734</a></li><li>macOS M1/M2/M3 上的安裝故障排除<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5708" target="_blank">#5708</a></li><li>卷刪除<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5707" target="_blank">#5707</a></li><li>添加了<em>從另一個 WSL 實例訪問 Podman</em>（配置、驗證）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5706" target="_blank">#5706</a></li><li>使用 typedoc 生成 api 文檔<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5705" target="_blank">#5705</a></li></ul><p>下載：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fdownloads" target="_blank">https://podman-desktop.io/downloads</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:44:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283526/podman-desktop-1-8-released</guid>
            <link>https://www.oschina.net/news/283526/podman-desktop-1-8-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[蘋果公佈多模態大模型 MM1 ：具備 300 億參數、MoE 架構]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Arxiv 頁面顯示，蘋果正式公佈了自研多模態大模型 MM1，該模型提供 30 億、70 億、300 億三種參數規模，擁有圖像識別和自然語言推理能力。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1830efcd0b15aa4c9ab91a1930b93946ba5.png" referrerpolicy="no-referrer"></p><blockquote><p>論文地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2403.09611.pdf" target="_blank">https://arxiv.org/pdf/2403.09611.pdf</a></u></em></p></blockquote><p>論文顯示，MM1 多模態大模型由密集模型和混合專家（MoE）變體組成，不僅在預訓練指標中實現 SOTA，在一系列已有多模態基準上監督微調後也能保持有競爭力的性能。</p><p>MM1 在上下文預測、多圖像和思維鏈推理等方面具有不錯的表現。同樣，MM1 在指令調優後展現出了強大的少樣本學習能力。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a87f60da1b565af1fcea6676398fae62c86.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1d2969535bc23054d47b0f450a2247bb2f7.png" referrerpolicy="no-referrer"></p><p>根據介紹，蘋果研究團隊相關論文主要是利用 MM1 模型做實驗，通過控制各種變量，找出影響模型效果的關鍵因素。研究表明，圖像分辨率和圖像標記數量對模型性能影響較大，視覺語言連接器對模型的影響較小，不同類型的預訓練數據對模型的性能有不同的影響。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:40:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283523</guid>
            <link>https://www.oschina.net/news/283523</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源日報 | RISC-V 正在發生質變？離職後可以刪除自己所寫的軟件嗎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。</p><h3 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#e67e22"><strong># 2024.3.15</strong></span></h3><h2 style="margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#16a085">今日要點</span></strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>OpenSource Daily</strong></p><h3 style="margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/news/283159" target="_blank">Intel 6.2GHz 限量旗艦 i9-14900KS 正式發佈</a></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">Intel 正式發佈了酷睿 14 代家族的頂級限量版本，酷睿 i9-14900KS，國行定價 6299 元。它在歷史上第一次將 PC 處理器的加速頻率做到了驚人的 6.2GHz，比上代限量版 i9-13900KS 又高出 200MHz。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">i9-14900KS 可以看作是 i9-14900K 的特挑加速版，同樣都是 8P+16E 24 核心 32 線程、32MB 二級緩存、36MB 三級緩存、UHD 770 核芯顯卡，內存支持 DDR4-3200、DDR5-5600，最大容量 192GB，擴展支持 16 條 PCIe 5.0、4 條 PCIe 4.0，兼容 Z690、Z790 主板。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="272" src="https://oscimg.oschina.net/oscnet/up-3349dddd8640fa732924019627a31b6f3c8.png" width="500" referrerpolicy="no-referrer"></p><h3 style="margin-left:0; margin-right:0; text-align:start"><a href="https://my.oschina.net/u/6148470/blog/11047444" target="_blank">80 歲圖靈獎得主再度出山，打造基於數據庫的雲原生操作系統 DBOS</a></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">本來以為教授該頤養天年了，沒想到以 80 歲高齡，再度出山。這次老爺子還跨界了，把手伸到了操作系統領域，要把操作系統建在數據庫上。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">DBOS 故名思義，基於 DB 的 OS，就是把數據庫作為操作系統的底層，這樣操作系統就獲得了數據庫的特性。除了給操作系統原生的數據庫能力之外，DBOS 的另一個目標是做一個雲原生的操作系統。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="file" height="262" src="https://oscimg.oschina.net/oscnet/up-b5045fa7057d6a40319508573b8925b9496.png" width="500" referrerpolicy="no-referrer"></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#16a085">今日觀察</span></strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="126" src="https://oscimg.oschina.net/oscnet/up-841f2615590fad9f13ca88fbf3003203b34.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">- 微博&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2418179934%2FO4Z6h2oIv%3Frefer_flag%3D1001030103_" target="_blank"><em><u>飛揚南石</u></em></a></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="100" src="https://oscimg.oschina.net/oscnet/up-cf0d92c02a43754ff97ebac7098f11b5400.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">-&nbsp;微博 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1464484735%2FO54Z4Apf8%3Frefer_flag%3D1001030103_" target="_blank"><em><u>黃建同學</u></em></a></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="109" src="https://oscimg.oschina.net/oscnet/up-b82f753a7b421550bb8b164d63de7077ae0.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">- <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcaifuhao.eastmoney.com%2Fnews%2F20240314183626385310570" target="_blank"><em><u>南方+客戶端</u></em></a></span></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#16a085"><strong>今日推薦</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="405" src="https://oscimg.oschina.net/oscnet/up-581275f1990d052c974fbf41769a5d9f841.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkamiyaa%2Fjoshuto" target="_blank">https://github.com/kamiyaa/joshuto</a></u></em></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#16a085"><strong>事件點評</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="467" src="https://oscimg.oschina.net/oscnet/up-0861950873ced1989848f40399ee3e6e763.png" width="500" referrerpolicy="no-referrer"></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#16a085"><strong>每日項目榜</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="background-color:#e67e22">每日 GitHub 精選</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="665" src="https://oscimg.oschina.net/oscnet/up-f7661ba51e0a0b624d2ce624a4c56894528.png" width="500" referrerpolicy="no-referrer"></p><blockquote><h4 style="margin-left:0; margin-right:0"><strong><span style="background-color:#e67e22">在線閲讀完整日報內容，訪問：</span></strong><br><em><u><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/bkpgqfjrsg02gbc/30_i9_14900_ks_hip_rt_PUJjodKP2j.pdf" target="_blank">開源日報第 030 期：RISC-V 正在發生質變？離職後可以刪除自己所寫的軟件嗎</a></u></em></h4></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>往期回顧</strong></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/71npja41p7l4ojy/29_risc_v_ai_smart_B3RnKR88Kl.pdf" target="_blank">開源日報第 029 期：英特爾獲準繼續向華為出售芯片；明年 AI 將比任何人都聰明</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/q35lx4s6qq9ls4r/28_cognition_labs_devin_Epbxne3xzN.pdf" target="_blank">開源日報第 028 期：全球首位 AI 軟件工程師 Devin；谷歌承認 「竊取」 OpenAI 模型關鍵信息</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/hh291xp9mxksc9i/27_ai_google_50_gpt_4_KfagjDXXfZ.pdf" target="_blank">開源日報第 027 期：AI 接連翻車的 Google 要變天了；互聯網大廠 50 款大模型及應用，能否全面超越 GPT-4？</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/uwsizmmsnhq8zdk/26_git_hub_22_web_os_22_vue_rolldown_FpVykoR7rJ.pdf" target="_blank">開源日報第 026 期：大模型替代程序員根本就是一個偽命題；GitHub 頂流 "Web OS"</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6ho57sxydzsh9jh/25_ai_5_ax1LWz5GP5.pdf" target="_blank">開源日報第 025 期：買手機送大模型；「釣魚式維權」 須遏制；「AI 原生」 騙局江湖</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/7xd6teyhekcvamw/24_risc_v_x86_arm_5LsjoStPUn.pdf" target="_blank">開源日報第 024 期：RISC-V 能否和 x86、Arm 一起成為三大主流架構；給閻王開發地府管理系統</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/svxac61bjmbmmw5/23_google_microsoft_cM5zZacKru.pdf" target="_blank">開源日報第 023 期：Google = 開源，好評；Microsoft = 閉源收入還低，差評</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/3vmzfjvp7mpvv26/22_sora_cuda_Syy7OJyUvc.pdf" target="_blank">開源日報第 022 期：輕鬆復現 Sora 模型；事關 CUDA 兼容，英偉達禁止了；百度還差一個 「遙遙領先」</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/z3rhs3qkyeqwoax/21_open_ai_JROaEZat3b.pdf" target="_blank">開源日報第 021 期：閉源模型就是比開源安全；起訴 OpenAI 不能更贊同</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/lv84pwvd03it00i/20_open_ai_pingora_yaml_mE5RuB20Vl.pdf" target="_blank">開源日報第 020 期：為什麼王炸都來自 OpenAI；Pingora 最好不要用 YAML 當配置文件</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/mx86z1dhywrw71p/19_ai_c_llm_IgpNOVZtCz.pdf" target="_blank">開源日報第 019 期：我讓 AI 用 C 語言寫一個算法；微軟三進制 LLM</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/qdljicvqiqsshd6/187ZiLwG48lc_CngfQJ1Qxs.pdf" target="_blank">開源日報第 018 期：蘋果十年造車夢碎；這個開源項目有點...「大膽」</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/7r8dkz3232v4e7a/17_maria_db_v_linux_GoyNoM85IZ.pdf">開源日報第 017 期：MariaDB 消亡史；寫代碼我有三不沾；V 神建議馬斯克用 Linux</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6typ9w3u98f5mxn/16_1_8_2efTeNfFjN.pdf">開源日報第 016 期：鴻蒙程序員平均月薪超 1 萬 8；中美 AI 差距有多大？</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/92n4c9ryegpcq1z/015_sora_KcAkRNX93Y.pdf">開源日報第 015 期：為什麼擋不住英偉達；Sora 不靠蠻力</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/s7n800w84o6guyv/014_kyezhNxOGD.pdf">開源日報第 014 期：目前的人工智能技術連貓的智能水平都沒達到</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC013%E6%9C%9F%EF%BC%9A%E7%AD%89%E5%88%B0%20Sora%20%E5%BC%80%E6%BA%90%E4%BA%86%E7%AB%8B%E5%88%BB%E6%8E%A8%E5%87%BA%E5%B1%9E%E4%BA%8E%E6%88%91%E4%BB%AC%E8%87%AA%E5%B7%B1%E7%9A%84%E5%A4%A7%E6%A8%A1%E5%9E%8B.pdf">開源日報第 013 期：等到 Sora 開源了立刻推出屬於我們自己的大模型</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC012%E6%9C%9F%EF%BC%9ASora%20%E7%BB%99%E4%B8%AD%E5%9B%BD%20AI%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9C%9F%E5%AE%9E%E5%8F%98%E5%8C%96%EF%BC%9BDart%203.3%20%E5%8F%91%E5%B8%83.pdf">開源日報第 012 期：Sora 給中國 AI 帶來的真實變化；Dart 3.3 發佈</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC11%E6%9C%9F%EF%BC%9A%E7%9B%AE%E5%89%8D%E8%BF%98%E6%B2%A1%E6%9C%89%E2%80%9C%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%89%88Linux%E2%80%9D.pdf">開源日報第 011 期：目前還沒有 「大模型版 Linux」</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC010%E6%9C%9F%EF%BC%9ATauri%20v2%20%E6%94%AF%E6%8C%81%20Android%20%E5%92%8C%20iOS%EF%BC%8C%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%96%B0%E9%80%89%E6%8B%A9.pdf">開源日報第 010 期：Tauri v2 支持 Android 和 iOS，跨平台開發新選擇</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5009%E6%9C%9F%EF%BC%9AVue.js%E8%AF%9E%E7%94%9F10%E5%91%A8%E5%B9%B4%EF%BC%9B%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC%E8%A7%A3%E9%87%8AMeta%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E6%BA%90%E5%85%B6AI%E6%8A%80%E6%9C%AF.pdf">開源日報第 009 期：Vue.js 誕生 10 週年；扎克伯格解釋 Meta 為什麼要開源其 AI 技術</a></li><li><a href="https://www.oschina.net/news/277585">開源日報第 008 期：推動中國開源軟硬件發展的經驗與建議</a></li><li><a href="https://www.oschina.net/news/277415">開源日報第 007 期：「Linux 中國」 開源社區宣佈停止運營</a></li><li><a href="https://www.oschina.net/news/277214">開源日報第 006 期：選擇技術棧一定要選擇開源的</a></li><li><a href="http://www.oschina.net/news/277040">開源日報第 005 期：RISC-V 萬兆開源交換機發售；npm 存在大量武林外傳視頻</a></li><li><a href="https://www.oschina.net/news/276864">開源日報第 004 期：百度輸入法在候選詞區域植入廣告；大神用 Excel 構建 CPU</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:34:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283521</guid>
            <link>https://www.oschina.net/news/283521</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[四年增長 100 倍的 Figma，數據庫團隊是怎麼活下來的]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>原文<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.figma.com%2Fblog%2Fhow-figmas-databases-team-lived-to-tell-the-scale%2F" target="_blank">鏈接</a></p><blockquote><p>Figma 是近幾年全球增速最快的 SaaS 服務之一。作為新一代的在線協同設計軟件，Adobe 曾一度計劃以 200 億美金收購 Figma，最後因為反壟斷的顧慮而終止。本文介紹了 Figma 數據庫團隊過去 9 個月如何趕在數據庫無法支撐業務前，完成了技改。</p></blockquote><p>這是一場持續 9 個月的歷程，我們對 Figma 的 Postgres 進行了水平分片，來實現（幾乎）無限的可擴展性。</p><hr><p>自 2020 年以來，Figma 的數據庫增長了近 100 倍。這是一個甜蜜的煩惱，因為這意味着我們的業務在擴張，但也帶來了一些棘手的技術挑戰。在過去的四年裏，我們付出了巨大努力保持領先地位，並避免潛在的成長煩惱。2020 年時，我們運行着一個單體 Postgres 數據庫，託管在 AWS 最大的物理實例上；到 2022 年底，我們已經建立起具有緩存、只讀副本和十幾個垂直分區數據庫的分佈式架構。我們將相關表組（如「Figma 文件」或「組織」）拆分到它們自己的垂直分區，這使得我們能夠獲得漸進式擴展收益，並保持足夠空間提前應對增長。 儘管我們在漸進式擴展方面取得了進展，但我們始終知道垂直分區只能讓我們走到這一步。我們最初的擴展工作集中在減少 Postgres CPU 利用率上。隨着我們的集羣規模越來越大且更加異構化，我們開始監控一系列瓶頸。我們使用歷史數據和負載測試相結合來量化數據庫從 CPU 和 IO 到表大小和寫入行數的擴展限制。識別這些限制對於預測每個分片還能撐多久至關重要。然後，我們可以在問題發育成主要可靠性風險之前優先處理擴展問題。</p><p>數據顯示，我們的一些表格包含數 TB 級，數十億行數據，已經變得太大以至於無法放入單個數據庫中。在這種規模下，我們開始看到 Postgres vaccume 操作期間出現可靠性問題，這些操作是，保持 Postgres 不會用盡事務 ID (Transaction Wraparound) 並崩潰的關鍵後台操作。我們最高寫入量的表格增長太快了，以至於很快就會超過 AWS RDS 支持的每秒最大 IO 操作次數（IOPS）。由於垂直分片不能解決問題，因為分片的最小單位只能一個單獨的表。為了防止我們的數據庫倒塌，我們需要更大的槓桿。</p><h2>整裝待發</h2><p>我們列出了一些目標和必備條件，以解決短期挑戰，併為順利長期增長做好準備。我們的目標是：</p><ul><li><strong>儘可能不影響開發人員</strong>：我們希望能處理大部分應用程序已有的複雜關係數據模型。應用程序開發人員可以專注於在 Figma 中構建令人興奮的新功能，而不是重構我們代碼庫中的大部分內容。</li><li><strong>應用無感擴展</strong>：在未來的擴展中，我們不希望在應用程序層面進行額外的更改。這意味着，在做任何初始工作使表兼容之後，未來的規模擴大對我們的產品團隊應該是透明的。</li><li><strong>避免昂貴的回填 (Backfill)</strong>：我們避免了涉及在 Figma 的大表或每個表進行回填的解決方案。考慮到我們表格的大小和 Postgres 吞吐量限制，這些回填將需要數月時間。</li><li><strong>遞進式擴展</strong>：我們確定了可以逐步擴展的方法，以逐步降低生產變更的主要風險。這減少了重大故障的風險，並使數據庫團隊能夠在遷移過程中保持 Figma 的可靠性。</li><li><strong>避免單向遷移 (one-way migraiton)</strong>：即使在完成物理分片操作後，我們仍保持了回滾的能力。這降低了在發生未知情況時沒有回頭路。</li><li><strong>保持數據一致性</strong>：我們希望避免像雙寫這樣複雜的解決方案，這些解決方案很難在不停機或犧牲一致性的情況下實施。我們還希望找到一個可以讓我們進行水平擴展且幾乎零停機時間的解決方案。</li><li><strong>發揮我們的優勢</strong>：由於我們是在有嚴格的死限壓力下開展工作，儘可能地，我們傾向於先能逐步解決我們增長最快的那些表。我們希望利用已經具備的專業知識和技術。</li></ul><h2>方案調研</h2><p>有許多流行的開源和託管解決方案可用於水平分片數據庫，這些解決方案與 Postgres 或 MySQL 兼容。在我們的評估過程中，我們探索了 CockroachDB、TiDB、Spanner 和 Vitess。然而，切換到任何這些替代數據庫都需要進行復雜的數據遷移，以確保兩個不同數據庫存儲之間的一致性和可靠性。此外，在過去幾年裏，我們已經積累了大量關於如何在內部可靠地運行 RDS Postgres 的專業知識。如果要遷移到這些新數據庫，我們將不得不從頭開始重建領域專業知識。考慮到我們非常激進的增長速度，剩餘時間只有幾個月。相比可能更容易但存在更高不確定性的選項，我們更傾向於選擇已知的低風險解決方案，可控性更高，</p><p>NoSQL 數據庫是另一種常見的默認可擴展解決方案。然而，我們建立在當前 Postgres 架構之上的關係數據模型非常複雜，並且 NoSQL API 並不提供這種多樣性。我們希望讓工程師專注於發佈出色功能和構建新產品，而不是幾乎重寫整個後端應用程序；NoSQL 並非一個可行的解決方案。</p><p>一番權衡後，我們開始探索在現有的垂直分區 RDS Postgres 基礎架構之上構建一個水平分片解決方案。對於我們的小團隊來説，在內部重新實現一個通用的水平分片關係數據庫是沒有意義的；這樣做會使我們與大型開源社區或專門的數據庫供應商構建的工具競爭。然而，由於我們將水平分片定製為 Figma 的特定架構，因此可以提供更小的功能集合。例如，我們選擇不支持原子跨 Shard 事務，因為我們可以通過解決跨 Shard 事務失敗來繞過它們。我們採取了一種最大程度減少應用層所需更改的 colocation 策略。這使得我們能夠支持與大多數產品邏輯兼容的 Postgres 子集。同時，我們還能夠輕鬆地在帶有 Sharded 和未經 Sharded 處理過的 postgres 之間保持向後兼容性。如果遇到未知問題，那麼很容易回滾到未經 Sharded 處理過的 Postgres 上去。</p><h2>水平分片 (Sharding) 之路</h2><p>即使有了這些精簡的要求，我們知道水平分片將是迄今為止我們最大、最複雜的數據庫項目。幸運的是，過去幾年裏我們採取的增量擴展方法為我們做了準備。在 2022 年底，我們着手解鎖幾乎無限的數據庫可伸縮性，而水平分片——即將單個表或一組表拆分並將數據跨多個物理數據庫實例進行劃分——就成了關鍵。一旦一個表在應用層被水平切割，它可以支持任意數量的物理層碎片。通過簡單地運行物理碎片拆分，我們總是可以進一步擴展規模。這些操作在後台透明地進行，並且只需很少停機時間，並不需要應用級別變更。這種能力將使我們能夠擺脫所剩無幾的數據庫擴展瓶頸，消除 Figma 的最後一個主要擴展挑戰之一。如果垂直分片讓我們加速到高速公路速度，那麼水平分片則可以關掉限速，並讓我們飛起來。</p><p><img src="https://oscimg.oschina.net/oscnet/up-018dff0571bdcd622c2ac921aa9bc3ef1e7.png" alt="file" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-445203bb931fda94adbae73ba55a68c1b85.png" alt="file" referrerpolicy="no-referrer"></p><p>水平分片比我們之前的擴展工作複雜得多。當一個表被分割到多個物理數據庫中時，我們失去了在 ACID SQL 數據庫中視為理所當然的許多可靠性和一致性屬性。例如：</p><ul><li>某些 SQL 查詢變得低效或無法支持。</li><li>必須更新應用程序代碼，以提供足夠的信息，儘可能高效地將查詢路由到正確的分片。</li><li>必須協調所有分片之間的 Schema 變更，以確保數據庫保持同步。</li><li>Postgres 不再能強制執行外鍵和全局唯一索引。事務現在跨多個分片，這意味着 Postgres 不能再用於強制保持事務性。現在可能會出現對某些數據庫的寫入成功而其他失敗的情況。必須注意確保產品邏輯能應對 「部分提交失敗」（腦補一下將團隊在兩個組織間移動，結果發現他們一半數據丟失了！）。</li></ul><p>我們知道實現完全的水平分片將是一個持續多年的努力。在交付增量價值的同時，我們需要儘可能降低項目風險。我們的第一個目標是儘快對生產中一個相對簡單但訪問量非常高的表進行分片。這將證明水平分片的可行性，同時延長我們最繁忙數據庫上能繼續服務的時間。然後，在逐步對更復雜組合的表進行分片時，我們可以繼續構建額外功能。即使是最簡單可能的功能集仍然是一項重大工作。從頭到尾，我們團隊花了大約九個月來對第一張表進行分片。</p><h2>我們獨特的方法</h2><p>我們的水平分片工作也是基於前人的經驗，但有一些不同尋常的設計選擇。以下是一些要點：</p><ul><li><strong>Colos</strong>：我們將相關的表組隊放在一起，稱為 colos，這些表共享相同的分片鍵和物理分片佈局。這為開發人員提供了一個友好的抽象，以與水平分片表進行交互。</li><li><strong>邏輯分片</strong>：我們在應用層將「邏輯分片」的概念與 Postgres 層的「物理分片」區分開來。我們利用視圖執行更安全、成本更低的邏輯分片部署，然後再執行風險較高的分佈式物理 failover。</li><li><strong>DBProxy 查詢引擎</strong>：我們構建了一個 DBProxy 服務，攔截應用程序層生成的 SQL 查詢，並動態路由查詢到各個 Postgres 數據庫。DBProxy 包含一個能夠解析和執行復雜水平分片查詢的查詢引擎。DBProxy 還允許我們實現諸如動態負載調節等功能。</li><li><strong>影子應用準備就緒</strong>：我們添加了一個「影子應用準備就緒」框架，能夠預測活躍生產流量在不同分片切割下會如何工作。這使產品團隊清楚地知道需要重構或刪除哪些應用邏輯以準備應用進行水平切割。</li><li><strong>完整邏輯複製</strong>：我們避免實施「過濾式的邏輯複製」（僅將數據子集複製到每個分片）。相反，我們複製整個數據集，然後只允許讀/寫操作針對給定分片所屬數據子集進行操作。</li></ul><h2>我們的分片實現</h2><p>在水平分片中，最重要的決定之一是選擇使用哪個分片鍵。水平分片增加了許多圍繞着分片鍵的數據模型約束。例如，大多數查詢需要包含分片鍵，以便將請求路由到正確的分片上。某些數據庫約束（如外鍵）只有在外鍵是分區鍵時才有效。為了避免引起可靠性問題或影響可伸縮性的熱點，分片鍵還需要將數據均勻地分佈在所有分片上。</p><blockquote><p>Figma 跑在網頁端，許多用戶可以同時在同一個 Figma 文件上進行協作。這意味着我們的產品由一個相當複雜的關係數據模型驅動，保存文件元數據、組織元數據、評論、文件版本等等。</p></blockquote><p>我們考慮使用相同的分片鍵來處理每個表，但在我們現有的數據模型中沒有一個單一的好候選項。要添加統一的分片鍵，我們必須創建一個複合鍵，在每個表的架構中添加該列，運行昂貴的回填以填充它，然後大幅重構我們產品邏輯。相反，我們根據 Figma 獨特的數據模型量身定製了我們的方法，並選擇了像 UserID、FileID 或 OrgID 這樣少數幾個分片鍵。Figma 幾乎每張表都可以使用這些關鍵字進行分片。</p><p>我們引入了 colo 的概念，為產品開發人員提供友好的抽象：在 colo 內部的表支持跨表連接和完整事務，當限制為單個分片鍵時。大多數應用程序代碼已經以這種方式與數據庫交互，這最大程度地減少了應用程序開發人員需要做的工作，使表適合水平切分。下圖展示了使用 UserID 和 FileID 的分區各自組合在了一起。</p><p><img src="https://oscimg.oschina.net/oscnet/up-966b0a5d09812082120a56af79b3253e3a4.png" alt="file" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-e34ea3d1c88fc447f849ddc4e6664f3a7f7.png" alt="file" referrerpolicy="no-referrer"></p><p>一旦我們選擇了分片鍵，就需要確保數據在所有後端數據庫中均勻分佈。不幸的是，我們選擇的許多分片鍵使用了自增或雪花時間戳前綴 ID。這將導致存在顯著熱點，其中一個單個分片包含大部分數據。我們探索過遷移到更隨機化的 ID，但這需要進行昂貴且耗時的數據遷移。相反，我們決定使用分片鍵的哈希值進行路由。只要選擇足夠隨機的哈希函數，就能確保數據均勻分佈。其中一個缺點是，在範圍掃描 shard keys 時效率較低，因為連續鍵會被散列到不同的數據庫 shards 上。然而，在我們代碼庫中這種查詢模式並不常見，所以這是一個可以接受的權衡方案。</p><h2>「符合邏輯」的方案</h2><p>為了降低水平分片的風險，我們希望將在應用程序層準備表格的過程與運行分片拆分的物理過程隔離開來。為此，我們將「邏輯分片」與「物理分片」進行了區分。然後，我們可以解耦遷移的兩個部分以獨立實施和降低風險。邏輯上的切割使我們對技術棧有信心，並採用低風險、基於百分比的發佈方式。當發現錯誤時回滾邏輯分片只需簡單更改配置。回滾物理碎片操作是可能的，但需要更復雜的協調以確保數據一致性。</p><p>一旦一個表被邏輯分片後，所有讀寫操作都會像該表已經被水平分片那樣執行。從可靠性、延遲和一致性角度看，儘管數據仍然位於單個數據庫主機上，但我們似乎已經完成了水平分片工作。當我們確信邏輯分片按預期工作時，則執行物理分片操作。這是從單個數據庫複製數據、到把分片散步到不同數據庫上，然後通過新數據庫重新路由讀寫流量的過程。</p><p><img src="https://oscimg.oschina.net/oscnet/up-e147aac41a53ba90fc10f1320ea08b2cae8.png" alt="file" referrerpolicy="no-referrer"></p><p>兩個物理分片，每個物理分片又包含兩個邏輯分片。</p><h2>剛好的查詢引擎</h2><p>為了支持水平分片，我們不得不對後端技術棧進行重大改造。最初，我們的應用服務直接與連接池層 PGBouncer 通信。然而，水平分片需要更復雜的查詢解析、規劃和執行。為了支持這一點，我們構建了一個新的 golang 服務 DBProxy。DBProxy 位於應用程序層和 PGBouncer 之間。它包括負載均衡邏輯、改進的可觀測性、事務支持、數據庫拓撲管理以及輕量級查詢引擎。</p><p><img src="https://oscimg.oschina.net/oscnet/up-e995976e0fa500b3ae04f731d0ae36ddb9c.png" alt="file" referrerpolicy="no-referrer"></p><p>查詢引擎是 DBProxy 的核心。其主要組件包括：</p><ul><li>查詢解析器讀取應用程序發送的 SQL，並將其轉換為抽象語法樹（AST）。</li><li>邏輯規劃器解析 AST 並從查詢計劃中提取查詢類型（插入、更新等）和邏輯分片 ID。 物理規劃器將查詢從邏輯分片 ID 映射到物理數據庫。它重寫查詢以在相應的物理分片上執行。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-525c42dc013fcdf4045da938e886110034b.png" alt="file" referrerpolicy="no-referrer"></p><p>在水平分片的世界中，一些查詢相對容易實現。例如，單片段查詢被過濾到一個單個分片鍵。我們的查詢引擎只需要提取分片鍵並將查詢路由到適當的物理數據庫。我們可以將查詢執行的複雜性「下推」到 Postgres 中。然而，如果查詢缺少分片鍵，則我們的查詢引擎必須執行更復雜的「發散-歸併」。在這種情況下，我們需要將查詢發到所有分片（發散階段），然後彙總結果（歸併階段）。在某些情況下，如複雜聚合、連接和嵌套 SQL 等情況下，這種發散-歸併可能非常複雜。此外，有太多發散-歸併會影響水平劃分可伸縮性。因為這些查詢必須觸及每個單獨的數據庫，在未經劃分時每次發散-歸併都會產生同樣數量的負載。</p><p><img src="https://oscimg.oschina.net/oscnet/up-12f0cb4f8b9073a7977c0529fe4ea833558.png" alt="file" referrerpolicy="no-referrer"></p><p>如果我們支持完整的 SQL 兼容性，我們的 DBProxy 服務將開始看起來很像 Postgres 數據庫查詢引擎。我們希望簡化 API 以減少 DBProxy 的複雜性，同時也減少應用程序開發人員需要重新編寫任何不受支持查詢的工作量。為了確定正確的子集，我們構建了一個「影子規劃」框架，允許用戶為他們的表定義潛在分片方案，然後在實時生產流量之上運行邏輯規劃階段。我們將查詢和相關查詢計劃記錄到 Snowflake 數據庫中，在那裏可以進行離線分析。根據這些數據，我們選擇了一種支持最常見 90% 查詢的查詢語言，但避免了在查詢引擎中出現最壞情況下的複雜性。例如，所有範圍掃描和點查都是被允許的，但只有當連接兩個位於相同 colo 中且連接在分片鍵上時才允許 join 操作。</p><h2>面向未來的 View（視圖）</h2><p>然後我們需要想辦法封裝我們的邏輯分片。我們探索了使用單獨的 Postgres 數據庫或 Postgres schemas 對數據進行分區。不幸的是，當我們在應用程序中邏輯地分片時，這將需要物理數據更改，這與執行物理分片拆分一樣複雜。相反，我們選擇用 Postgres 視圖來表示我們的分片。我們可以為每個表創建多個視圖，每個視圖對應給定分片中數據子集。看起來像：</p><pre><code>CREATE VIEW table_shard1 AS SELECT * FROM table WHERE hash(shard_key) &gt;= min_shard_range AND hash(shard_key) &lt; max_shard_range`）
</code></pre><p>所有對錶格的讀取和寫入都通過這些視圖發送。通過在現有未經過劃分的物理數據庫之上創建劃分視圖，在執行任何風險較高的物理重新劃分操作之前，我們可以在邏輯上進行劃分。每個視圖通過自己獨立的連接池服務，連接到它們所屬於的分片實例上。連接池仍然指向未經過分片處理的物理實例，從而呈現出被進行了分片處理後效果。通過查詢引擎中特性開關（feature flag）漸進地發佈，以減少風險。並且回滾到主表，只需幾秒鐘即可，將流量重定向回去。當我們第一次執行重新分片操作時, 我們已經對於分片拓撲的安全性胸有成足。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a03c16e3b18647a48c73bf1ee3a67419599.png" alt="file" referrerpolicy="no-referrer"></p><p>通過在非分片數據庫中創建多個視圖，我們可以像數據已經被物理分片一樣查詢這些視圖。</p><p>當然，依賴視圖也引入了額外的風險。視圖會增加性能開銷，並且在某些情況下可能從根本上改變 Postgres 查詢規劃器優化查詢的方式。為了驗證這種方法，我們收集了一組經過脫敏的生產查詢語句，並進行了帶有和不帶有視圖的負載測試。我們確認，在大多數情況下，視圖只會增加最小的性能開銷，在最糟糕的情況下不到 10%。我們還構建了一個影子讀取框架，可以通過視圖發送所有實時讀取流量，比較使用視圖與不使用視圖查詢之間的性能和正確性。然後我們確認，視圖是一種可行的解決方案，並且對性能幾乎沒有影響。</p><h2>應對我們的拓撲</h2><p>為了執行查詢路由，DBProxy 必須理解我們表和物理數據庫的拓撲結構。因為我們已經將邏輯分片與物理分片的概念分開，所以我們需要一種方式在拓撲結構中表示這些抽象概念。例如，我們需要能夠將一個表（用戶）映射到其分片鍵（user_id）。同樣地，我們需要能夠將邏輯分片 ID（123）映射到相應的邏輯和物理數據庫。在垂直劃分方面，我們依賴於一個簡單、硬編碼的配置文件來將表映射到它們的分區。然而，在向水平切割轉變時，我們需要更復雜的東西。當進行切片拆分時，我們的拓撲結構會動態改變，並且 DBProxy 需要迅速更新其狀態以避免請求被路由至錯誤的數據庫。由於每次對拓撲結構進行更改都是向後兼容的，在網站關鍵路徑上從未出現過這些更改。我們建立了一個包含複雜水平切割元數據並可以在不到一秒內提供實時更新信息的數據庫拓撲結構。</p><p><img src="https://oscimg.oschina.net/oscnet/up-8348edc5651a6c3baa8af52279365b5ecd6.png" alt="file" referrerpolicy="no-referrer"></p><p>擁有獨立的邏輯和物理拓撲結構也使我們能夠簡化一些數據庫管理工作。例如，在非生產環境中，我們可以保持與生產相同的邏輯拓撲結構，但從更少的物理數據庫中提供數據。這樣既節約成本又降低複雜性，而不會在各個環境之間進行過多變更。拓撲庫還使我們能夠強制保證跨整個拓撲結構（例如，每個分片 ID 應映射到一個物理數據庫）的約束，這對於維護系統正確性至關重要，特別是在我們建立水平分片的整個過程中。</p><h2>物理分片操作</h2><p>一旦表準備好進行分片，最後一步是從未分片到已分片數據庫的物理 failover 轉移。我們能夠重複使用許多相同的邏輯來進行水平切分，但也有一些顯著的不同之處：我們不再將數據從一個數據庫移動到另一個數據庫，而是從一個數據庫移動到 N 個數據庫。我們需要使 failover 過程能應對新的失敗模式，在這些模式下，分片操作可能僅在我們的部分數據庫上成功。儘管如此，在做垂直分片的時候，許多風險最高的組件已經被解決了。我們能夠比以往更快地朝着第一次物理分片操作邁進，這本來是不可能實現的。</p><h2>篳路藍縷</h2><p>當我們開始這段旅程時，我們知道水平分片將是對 Figma 未來可擴展性的多年投資。我們在 2023 年 9 月交付了第一個水平分片表。我們成功進行了故障切換，數據庫主節點僅出現了十秒的部分可用性問題，副本沒有受到影響。在分片後，我們沒有看到延遲或可用性方面的退化。從那時起，我們一直在處理寫入速率最高的，並且相對簡單的數據庫分片。今年，我們將對越來越複雜的數據庫進行分片處理，這些數據庫有數十個表和成千上萬個代碼調用點。</p><p>為了拔掉最後阻礙我們無限擴展的釘子，我們需要在 Figma 上水平分片每個表。一個完全水平分片的世界將帶來許多其他好處：提高可靠性、節約成本和開發速度。在這過程中，我們需要解決所有這些問題：</p><ul><li>支持水平分片模式更新</li><li>全局唯一 ID 用於生成水平分片主鍵</li><li>用於核心業務的跨 shard 的原子事務</li><li>分佈式全局唯一索引（目前僅支持包含 sharding key 的索引上的唯一索引）</li><li>一個可以增加研發效能，但不會受到水平分片影響的 ORM</li><li>完全自動化的重分片操作，一健運行。</li></ul><p>一旦我們有足夠的時間餘地，我們還將重新評估內部 RDS 水平分片的整套方案。18 個月前，我們開始了這段旅程，並面臨極其緊迫的時間壓力。NewSQL 持續精進，而我們也終於將有時間來重新評估沿着當前路徑繼續下去還是轉向開源或者託管方案。我們在水平分片旅程中取得了許多令人振奮的進展，但挑戰才剛剛開始。</p><hr><p>點評：Figma 在時間壓力下，採用了更穩妥成熟的水平分片方案。類似方案之前已經在國內外互聯網公司裏廣泛應用。國外的 Instgram (Postgres)，GitHub (MySQL) 也都做過詳細的分析。而最後 Figma 列出的剩餘問題，也正是 NewSQL 路線的強項。比如國內的 TiDB, OceanBase 都能比較好的解決。所以就像 Figma 所説的，等他們緩過來後，也要重新評估一下。</p><p>另外一方面，Figma 也提到了水平分片後對於研發帶來的挑戰。本來只要變更一個數據庫，現在可能就要變更 100 個數據庫。如何保證這些變更的一致性？Bytebase 里正好提供了批量變更模式，可以把水平分片的數據庫放在一組，一起進行變更。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a342cf0724f826fe5a98e8d9ba2b1697b3b.png" alt="file" referrerpolicy="no-referrer"></p><hr><p>💡 更多資訊，請關注 Bytebase 公號：Bytebase</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:28:03 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/11047837</guid>
            <link>https://my.oschina.net/u/6148470/blog/11047837</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[馬斯克開源 Grok]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">馬斯克旗下的 xAI 正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.ai%2Fblog%2Fgrok-os" target="_blank">宣佈</a>在 Apache 2.0 協議下開源了大模型 Grok-1 的基本模型權重和網絡架構。其參數量達到 3140 億，遠超 Meta 的 Llama 2 的 700 億、Mistral 8x7B 的 120 億以及 OpenAI GPT-3.5 的 1750 億；這也是迄今參數量最大的開源大語言模型。</span></p><p><span style="color:#000000">根據介紹，Grok 基礎模型基於大量文本數據進行訓練，未針對任何特定任務進行微調。其架構於 2023 年 10 月使用 JAX 和 Rust 之上的自定義訓練堆棧開發，融合了神經網絡設計的創新方法。該模型將 25% 的權重用於給定 token，旨在提高效率和有效性。</span></p><p><img height="214" src="https://oscimg.oschina.net/oscnet/up-c641876e1db3fba6af1c641b80aaa3dc947.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">2023 年 11 月，馬斯克旗下的人工智能公司 xAI<span>&nbsp;</span><a href="https://www.oschina.net/news/265129/xai-grok">發佈了首款 AI 聊天產品</a>，取名為 「Grok」。Grok 的名字來自羅伯特・安森・海因萊因的科幻小説《異鄉異客》，意思是完全理解某事或某人。Grok 具備以下特點：</p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li>「全面的知識」：Grok 在大量文本和代碼數據集上進行了訓練，使其能夠從中汲取廣泛的知識。</li><li>「實時訪問信息」：Grok 可以通過 X 平台獲取實時信息，這是相對於其他大語言模型的一大優勢。</li><li>「幽默」：Grok 被設計成帶有幽默感，可以回答一些尖鋭的問題，這使得它與用戶的互動更具吸引力。</li><li>「理解複雜概念的能力」：Grok 能夠理解複雜的概念並以清晰簡潔的方式解釋它們。</li><li>「生成創意內容的能力」：Grok 可以生成不同類型的創意內容，例如詩歌、代碼、圖像和音樂作品。&nbsp;</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:01:39 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283513/grok-open-source</guid>
            <link>https://www.oschina.net/news/283513/grok-open-source</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ChatGPT 參數規模很可能只有 7B（70 億）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>南加州大學最新研究，ChatGPT 參數規模很可能只有 7B（70 億）。南加大團隊三位作者破解出了未公佈的 gpt-3.5-turbo 嵌入向量維度（embedding size）為 4096 或 4608。而幾乎所有已知的開源大模型如 Llama 和 Mistral，嵌入向量維度 4096 的時候都是約 7B 參數規模。其它比例的話，就會造成網絡過寬或過窄，已被證明對模型性能不利。</p><p>因此南加大團隊指出，可以推測 gpt-3.5-turbo 的參數規模也在 7B 左右，除非是 MoE 架構可能不同。數月前，曾有微軟 CODEFUSION 論文意外泄露當時 GPT-3.5 模型參數為 20B，在後續論文版本中又刪除了這一信息。（量子位）</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 00:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283500</guid>
            <link>https://www.oschina.net/news/283500</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RXThinkCMF 敏捷開發框架 Laravel10+EleVue 版本 v2.0.0 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#40485b">v2.0.0 更新如下:</span><br><span style="background-color:#ffffff; color:#40485b">1、新增 Docker 容器化解決方案；</span><br><span style="background-color:#ffffff; color:#40485b">2、優化系統功能模塊和文件結構；</span><br><span style="background-color:#ffffff; color:#40485b">3、優化編碼規範，統一命名和描述；</span><br><span style="background-color:#ffffff; color:#40485b">4、優化數據庫表結構和編碼；</span><br><span style="background-color:#ffffff; color:#40485b">5、優化模塊頁面，提升使用體驗度；</span><br><span style="background-color:#ffffff; color:#40485b">6、修復近期用戶反饋的問題；</span></p><div><div><div><h2>項目介紹</h2><p style="margin-left:0; margin-right:0">一款 PHP 語言基於 Laravel10、Vue、ElementUI、MySQL 等框架精心打造的一款模塊化、插件化、高性能的前後端分離架構敏捷開發框架，可用於快速搭建前後端分離後台管理系統，本着簡化開發、提升開發效率的初衷，目前框架已集成了完整的 RBAC 權限架構和常規基礎模塊，前端 Vue 端支持多主題切換，可以根據自己喜歡的風格選擇想一個的主題，實現了個性化呈現的需求；為了敏捷快速開發，提升研發效率，框架內置了一鍵 CRUD 代碼生成器，自定義了模塊生成模板，包括後端 PHP 文件模塊和前端 Vue 端個性化模板，可以根據已建好的表結構 (字段註釋需規範) 快速的一鍵生成整個模塊的所有代碼和增刪改查等等功能業務，真正實現了低代碼開發，極大的節省了人力成本的同時提高了開發效率，縮短了研發週期，是一款真正意義上實現組件化、低代碼敏捷開發框架。</p><h2>軟件信息</h2><ul><li>軟件名稱：RXThinkCMF 敏捷開發框架 Laravel10+EleVue 版本</li><li>官網網址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rxthink.cn" target="_blank">https://www.rxthink.cn</a></li><li>文檔網址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.laravel10.elevue.rxthink.cn" target="_blank">http://docs.laravel10.elevue.rxthink.cn</a></li><li>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.laravel10.elevue.rxthink.cn" target="_blank">http://manage.laravel10.elevue.rxthink.cn</a></li></ul><h2>版本説明</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#40485b; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,Helvetica,Arial,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Liberation Sans&quot;,&quot;PingFang SC&quot;,&quot;Microsoft YaHei&quot;,&quot;Hiragino Sans GB&quot;,&quot;Wenquanyi Micro Hei&quot;,&quot;WenQuanYi Zen Hei&quot;,&quot;ST Heiti&quot;,SimHei,SimSun,&quot;WenQuanYi Zen Hei Sharp&quot;,sans-serif; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 16px; max-width:100%; orphans:2; overflow:auto; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:635px; word-break:initial; word-spacing:0px"><tbody><tr><th>版本名稱</th><th>版本説明</th><th>版本地址</th></tr></tbody><tbody><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp3.2+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp3.2、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp5.1+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp5.1、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp6.x+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp6、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp8.x+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp8、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel8.x+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel8、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_laravel8_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_laravel8_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel9.x+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel9、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel10.x+Layui 混編版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel10、Layui、MySQL 等框架研發的混編專業版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_Layui">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_Layui</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp3.2+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp3.2、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp3.2+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp3.2、Vue3.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp3.2_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp5.1+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp5.1、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp5.1+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp5.1、Vue2.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp5.1_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp6.x+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp6、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp6.x+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp6、Vue3.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp6_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp8.x+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp8、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">ThinkPhp8.x+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 ThinkPhp8、Vue3.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_ThinkPhp8_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel8.x+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel8、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel8.x+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel8、Vue3.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel8_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel9.x+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel9、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel9.x+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel9、Vue3.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel9_AntdVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel10.x+EleVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel10、Vue2.x、ElementUI 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_EleVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_EleVue</a></td></tr><tr><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">Laravel10.x+AntdVue 前後端分離版</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px">採用 Laravel10、Vue3.x、AntDesign 等框架研發前後端分離版本</td><td style="border-color:#dfe2e5; border-style:solid; border-width:1px"><a href="https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_AntdVue">https://gitee.com/rxthinkcmf/RXThinkCMF_Laravel10_AntdVue</a></td></tr></tbody></table><h2>模塊展示</h2><p style="margin-left:0; margin-right:0"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-44c7ba2ba7c06e94c5fc7771e1ec57af447.png" width="1920" referrerpolicy="no-referrer"></p></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Mar 2024 23:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283498</guid>
            <link>https://www.oschina.net/news/283498</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[蘋果「有毒」——甲骨文警告新版 macOS 導致 Java 意外終止]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>甲骨文公司稱，最新發布的 macOS Sonoma 14.4 版本存在漏洞，<strong>會導致運行 Java 程序的進程意外終止</strong>。因此，依賴 Java 運行程序的 Mac 用戶建議暫緩更新至該版本。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6cd6f27327762d79002415929bbc4167e46.png" referrerpolicy="no-referrer"></p><p><strong>該漏洞影響所有版本號高於 8 的 Java 版本</strong>，同時包括當前處於搶先體驗階段的 JDK 22 版本。甲骨文公司表示目前沒有可用的臨時解決辦法。</p><p>甲骨文公司高級產品管理總監 Aurelio Garcia-Ribeyro 指出，此漏洞在 14.4 的測試版中並未發現。他在有關漏洞的警告帖中提到：「使用 GraalVM Native Image 提前編譯的應用程序應該不受影響，但創建新鏡像可能會出現問題。」</p><p>甲骨文公司已經將此問題<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.oracle.com%2Fjava%2Fpost%2Fjava-on-macos-14-4" target="_blank">通知</a></u>了 OpenJDK 合作伙伴、用戶以及蘋果公司。</p><p>由於目前無法簡單回滾 macOS 更新，已經升級到 14.4 版本的 Apple Silicon Mac 用戶將不得不等待蘋果發佈修復程序。</p><p>不過，如果用戶擁有完整系統配置的克隆備份，則可以暫時恢復到舊版本系統以繼續運行 Java 程序，直到出現解決方案為止。</p><p>需要注意的是，由於 Java 早在 2012 年就被蘋果公司標記為「過時技術」，因此該問題對於大多數普通 Mac 用戶不會產生影響。</p><p>除了影響 Java 程序運行以外，macOS 14.4 的最終版本還存在其他問題。例如，該更新導致了一些第三方顯示器集線器無法正常工作，並可能會刪除或損壞部分打印機驅動程序。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Mar 2024 14:13:42 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283478/java-on-macos-14-4</guid>
            <link>https://www.oschina.net/news/283478/java-on-macos-14-4</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[零一萬物開放笛卡爾向量數據庫搜索內核，免費商用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">零一萬物<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F3-_KUz7JCTwDbpr1-B5sdA" target="_blank">宣佈</a>全面開放笛卡爾向量數據庫搜索內核 Binary<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2F01-ai%2FDescartes" target="_blank">下載</a>，將技術成果回饋社區，提供免費商用。</span></p><p><img height="240" src="https://oscimg.oschina.net/oscnet/up-45fabeeb7584826d1eb234098b2a47b92b1.png" width="500" referrerpolicy="no-referrer"></p><p>根據介紹，笛卡爾向量數據庫定位專注於大模型場景，能夠執行超高精度、超快速度的檢索，輔助大模型在 RAG、Agent 等方面達到更佳的性能從而提升整體效果，可説是為大模型而生的內存向量數據庫，後續也有持續性增強的系列工作。</p><p><span style="color:#000000">現階段，<strong style="color:#1b3e36">零一萬物沒有將向量數據庫作為單獨商業產品的計劃</strong>，笛卡爾數據庫將會應用在即將正式亮相的消費級 AI 產品和開發者工具中，在內測中的實際應用場景裏已展現出精度更高、性能更強等優勢。</span></p><p><span style="color:#000000">出於長期產品策略考量，零一萬物暫無計劃開源相關源代碼，以 Binary 二進制形式開放出來，便於全球開發者下載使用向量數據庫搜索內核，豐富大模型開源社區技術工具的多樣性。</span></p><p><span style="color:#000000">笛卡爾向量數據庫搜索內核商用授權信息表：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.lingyiwanwu.com%2Fvector-descartes" target="_blank">https://www.lingyiwanwu.com/vector-descartes</a></p><p><strong>相關閲讀：</strong></p><ul><li><a href="https://www.oschina.net/news/282674" target="_blank">零一萬物推出自研全導航圖向量數據庫</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Mar 2024 04:08:07 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283418</guid>
            <link>https://www.oschina.net/news/283418</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visual Studio App Center 將於 2025 年 3 月停用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">微軟<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fappcenter%2Fretirement" target="_blank">宣佈</a>計劃於&nbsp;2025 年 3 月 31 日停用 Visual Studio App Center。在此之前，微軟將繼續提供關鍵錯誤修復和技術支持。在此日期之後，用戶將無法進行帳戶登錄，也無法進行 API 調用。</span></p><p><span style="color:#000000">Visual Studio App Center 是一個用於構建、測試和分發移動應用程序的平台，號稱可以「自動化 iOS、Android、Windows 和 macOS 應用的生命週期。連接存儲庫並在幾分鐘內在雲中生成、測試數千台實際設備、向 beta 測試人員和應用存儲進行分發、通過故障數據和分析數據監視實際使用情況。 所有操作都可以在一個位置集中執行。」</span></p><p><span style="color:#000000"><img alt="" height="284" src="https://oscimg.oschina.net/oscnet/up-9916f7dc14a140fc667cc3ce5b6579d0fd3.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">微軟為用戶提供了幾項遷移出 App Center 的替代解決方案，包括：使用 Azure Pipelines 進行構建、使用 BrowserStack App Automate（可訪問 20,000 多個真實 iOS 和 Android 設備）進行測試，以及使用 Apple AppStore 和 Google Play 等平台進行分發。</span></p><p><span style="color:#000000">此外，他們還準備了一個特殊版本的 CodePush，可集成到用戶的應用程序中並獨立於 App Center 運行。以及推薦使用 Azure Native ISV 服務，進行分析和診斷。「通過利用這些 Azure Native ISV 服務，您將能夠監控從設備到 Azure 後端基礎架構的整個堆棧。」</span></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fazure%2Fpartner-solutions%2F" target="_blank">Azure Native ISV Services:</a></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fazure%2Fpartner-solutions%2Fdatadog%2Foverview" target="_blank">Datadog</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fazure%2Fpartner-solutions%2Fdynatrace%2Fdynatrace-overview" target="_blank">Dynatrace</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fazure%2Fpartner-solutions%2Fnew-relic%2Fnew-relic-overview" target="_blank">New Relic</a></li></ul><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fappcenter%2Fretirement" target="_blank">查看官方公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Mar 2024 03:57:07 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283417/visual-studio-app-center-retirement</guid>
            <link>https://www.oschina.net/news/283417/visual-studio-app-center-retirement</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 基於 K8s 容器集羣的容災架構與方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>作者：莊宇</p><p>在設計系統架構時，我們必須假設任何組件和任何基礎設施可能會在任何時間失效，例如：自然災害，電力中斷，網絡中斷，錯誤的系統變更等。為了應對挑戰，我們必須設計合適的容災架構。</p><p>本文介紹如何以 K8s 集羣（包括：ACK 集羣，他雲集羣和本地 IDC K8s 集羣）為基礎，結合阿里云云產品（網絡，數據庫，中間件，可觀測），設計容災架構，構建一個「韌性」系統。</p><h2>容災目標</h2><p>Recovery time objective（RTO）：</p><p>服務中斷與服務恢復之間可接受的最大延遲時間。決定服務停機的可接受時長。</p><p>Recovery point objective（RPO）：</p><p>自上一個數據恢復點以來可接受的最大時間量。決定可接受的數據丟失或重建。</p><p><img src="https://oscimg.oschina.net/oscnet/up-46753808a06e822727f0720c2bdcec67d3b.png" alt="" referrerpolicy="no-referrer"></p><p>對於 RTO 和 RPO，數值越低代表停機時間和數據丟失越少，但是越低的 RTO 和 RPO 會導致資源成本和運維複雜性越高。因此，您需要根據工作負載的重要性，指定適當的 RTO 和 RPO。</p><h2>容災策略</h2><p><img src="https://oscimg.oschina.net/oscnet/up-d4cee673e487d5eaa81c35f0186c4e84bfb.png" alt="" referrerpolicy="no-referrer"></p><p>上圖中，描述的常見的 3 種容災策略：備份與恢復、主備、雙活，不同的容災策略對應了不同的收益和成本。您需要綜合分析業務的重要性、風險、可投入的成本等，以選擇適合的容災策略。</p><h3>備份與恢復（Backup-Restore）</h3><p>在系統運行時，備份應用和數據，在災難發生時，在另一個地點恢復應用和數據，並切換業務流量。由於數據無法實時備份，在恢復數據時會有一定的數據丟失，同時如果數據量較大，恢復數據時間可能較長。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c7ac071cfe23b19b06580409fd9374e8bd3.png" alt="" referrerpolicy="no-referrer"></p><h3>主備（Active-Standby）</h3><p>在主備模式中，主 Location 處理所有的業務流量，備用 location 可以啓動較少的應用實例節省成本，並週期發送測試流量以驗證系統有效性。在災難發生時，做數據庫主備切換，擴容應用實例數，並切換業務流量。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f0e62ba3ca0f2f0be7cd22427c1c6091dec.png" alt="" referrerpolicy="no-referrer"></p><h3>雙活（Active-Active）</h3><p>在雙活模式中，2 個 Location 啓動相同的應用實例數，同時處理業務流量。在災難發生時，做數據庫主備切換，並切換業務流量。</p><p><img src="https://oscimg.oschina.net/oscnet/up-34d8ce915881ea3026ef89a042bf2150632.png" alt="" referrerpolicy="no-referrer"></p><h2>容災範圍</h2><h3>多可用區（Multi-AZ）</h3><p>阿里雲地域（Region） <strong>[</strong><strong>11]</strong> 包含多個可用區（AZ），可用區（AZ）是電力和網絡互相獨立的物理區域，對停電，斷網等局部中斷的容災場景，可以使用多個可用區（AZ）設計容災策略。由於可用區間的網絡延時較短，可以更容易實現數據部分的容災方案，包括數據庫、緩存和消息等。</p><h3>多地域（Multi-Region）</h3><p>為了應對更大範圍的災難故障事件，這些事件可能會影響同地域（Region）的多個可用區（AZ），您可以使用多個地域（Region）設計容災策略。但由於地域間更大網絡延時，容災方案複雜度和實現成本較高。</p><p>在選擇多可用區（AZ）或者多地域（Region）容災方案時，需要重點考慮有狀態應用和依賴的雲產品（例如：數據庫、緩存和消息）是否支持多地域或者多可用區容災。</p><h2>方案示例</h2><h3>備份與恢復（Backup &amp; Restore）</h3><h4>公共雲跨可用區和跨地域備份與恢復</h4><ol><li><p>通過 ACK One 備份中心 <strong>[3</strong><strong>]</strong> ，可以備份 ACK 集羣中的應用，包括無狀態應用和有狀態應用，對有狀態應用，在備份應用 YAML 的同時可以備份相關 Storage 數據。</p></li><li><p>ACK One 備份中心集成雲產品雲盤快照 <strong>[</strong><strong>12]</strong> ，文件存儲 NAS <strong>[13</strong><strong>]</strong> ，對象存儲 OSS <strong>[14</strong><strong>]</strong> 和雲備份 <strong>[15</strong><strong>]</strong> ，分別支持應用 YAML，雲盤 PV，文件系統 PV 的一鍵備份。</p></li><li><p>備份後，可以隨時將應用和 Storage 數據，恢復到任意地域和可用區的 ACK 集羣。</p></li><li><p>阿里雲數據庫服務的備份與恢復，可以參考相應數據產品的文檔，例如：RDS MySQL 數據庫備份恢復 <strong>[</strong><strong>16]</strong> ，RDS 實例間數據遷移 <strong>[17</strong><strong>]</strong> 。</p></li></ol><p><img src="https://oscimg.oschina.net/oscnet/up-e3ec8b21097649223662ed467f0401f1998.png" alt="" referrerpolicy="no-referrer"></p><h4>混合雲備份與恢復</h4><ol><li><p>通過 ACK One 註冊集羣 <strong>[</strong><strong>4]</strong> ，可以將 IDC 自建或者非阿里雲 K8s 集羣，接入到阿里雲 ACK 控制枱。</p></li><li><p>接入 ACK One 註冊集羣後，通過 ACK One 備份中心，可以備份 IDC 自建和非阿里雲 K8s 集羣中的應用，包括無狀態應用和有狀態應用，對有狀態應用，在備份應用 YAML 的同時可以備份相關 Storage 數據。</p></li><li><p>備份後，可以隨時將應用（Deployment/Statefulset）和數據（PV/PVC），恢復到任意地域和可用區的 ACK 集羣。</p></li></ol><p><img src="https://oscimg.oschina.net/oscnet/up-e8a3b923dfe47276112ffba73e827b61e44.png" alt="" referrerpolicy="no-referrer"></p><h4>總結</h4><p>備份恢復方案實施成本較低，但 RTO 和 RPO 相對較長，取決於數據量的大小和應用的複雜度。備份中心能夠提供的全量備份+增量備份能力，減少 RTO 和 RPO 時間。</p><p>備份恢復作為容災的兜底方案，重要性高，在系統運維的過程中，要保證備份的及時性和可恢復性。</p><p>另外，許多用戶選擇通過備份恢復功能<strong>實現應用的跨集羣遷移</strong>，場景如下：</p><ol><li><p>業務上雲，將本地 IDC 集羣中的應用，遷移到阿里雲 ACK 集羣中，參考 IDC 應用上雲遷移 <strong>[</strong><strong>18]</strong> 。</p></li><li><p>集羣版本較老，版本升級有穩定性風險，可以先創建新版本集羣，通過備份恢復將應用遷移到新版本集羣運行，參考跨版本集羣遷移 <strong>[</strong><strong>19]</strong> 。</p></li><li><p>用戶在收斂雲賬號或者組織調整時，需要跨賬號集羣接入 <strong>[</strong><strong>20]</strong> 和跨集羣遷移應用 <strong>[21</strong><strong>]</strong> 。</p></li></ol><p><strong>多集羣 Service</strong></p><p>在應用遷移的過程中，由於應用的數量較多，需要分批遷移，同時應用間存在調用關係。此時，在網絡打通的前提下，可以使用 ACK One 艦隊多集羣 Service <strong>[</strong><strong>5]</strong> ，實現應用 Kubernetes Service 跨集羣訪問。如下圖所示，ACK One 艦隊多集羣 Service，可以將 Cluster1 的 Applcation2 的 Kubernetes Service（包含 endpoints）注入到 Cluster2，Cluster2 上的 Application1 可以訪問 Cluster1 上的 Application2。</p><p><img src="https://oscimg.oschina.net/oscnet/up-00a76ccae7ee6905fc50880307b4263ba57.png" alt="" referrerpolicy="no-referrer"></p><p>在專線拉通的前提下，通過 ACK One 註冊集羣，IDC 和非阿里雲的 K8s 集羣也可以是用 ACK One 艦隊多集羣 Service。</p><h3>單地域多可用區容災</h3><h4>基於 DNS 流量分發</h4><ol><li><p>通過 ACK One GitOps 應用分發 <strong>[6</strong><strong>]</strong> ，在 2 個 ACK 集羣中部署應用，實現基於 Git 倉庫的持續一致性部署。</p></li><li><p>通過全局流量管理（GTM） <strong>[22</strong><strong>]</strong> 做 DNS 解析實現負載分發，並監控系統運行健康狀態，自動觸發容災切換。</p></li><li><p>每個 AZ 內，通過 ACK Ingress <strong>[</strong><strong>7]</strong> 實現 7 層流量管理。</p></li><li><p>備集羣和主集羣的應用版本相同，但備集羣節點較少，應用副本較少，節省成本。</p></li><li><p>在主系統不可用時，全局流量管理（GTM）會將服務域名 DNS 解析到備用系統，完成主備切換。</p></li><li><p>由於流量的增長，備集羣中 ACK HPA <strong>[8</strong><strong>]</strong> 會擴容應用副本，進而觸發 ACK Cluster Autocaler <strong>[9</strong><strong>]</strong> 擴容集羣節點。</p></li><li><p>阿里雲中間件（消息，緩存）的跨可用區容災，可參考相關文檔，例如：雲消息隊列 RocketMQ 版實例規格 <strong>[</strong><strong>23]</strong> ，雲消息隊列 Kafka 版實例規格 <strong>[</strong><strong>24]</strong> ，雲原生內存數據庫 Tair 容災方案 <strong>[</strong><strong>25]</strong> 。</p></li><li><p>阿里雲數據庫服務的跨可用區容災，可參考相關文檔，例如：RDS MySQL 數據庫搭建高可用架構 <strong>[</strong><strong>26]</strong> 。</p></li></ol><p><strong>🔔 注意：</strong></p><ol><li><p>本方案基於 DNS 流量轉發，由於 DNS 緩存，在災難事件發生時，部分業務依然路由到主系統，造成一定的業務損失。</p></li><li><p>需要在 2 個集羣中分別配置維護 7 層 ingress 規則，成本高。系統正常運行狀態：</p></li></ol><p><img src="https://oscimg.oschina.net/oscnet/up-c2ec60ff7e5ba01351f02132d9fd8f68e8c.png" alt="" referrerpolicy="no-referrer"></p><p>災難事件發生，AZ 不可用時，系統主備切換，GTM 將流量切換到 AZ2，ACK Cluste2 的應用實例自動擴展，中間件和數據庫多可用區高可用切換。</p><p><img src="https://oscimg.oschina.net/oscnet/up-99ba22aec1c2009eec540304d1187008060.png" alt="" referrerpolicy="no-referrer"></p><h4>基於 ACK One 多集羣網關</h4><ol><li><p>通過 ACK One GitOps 應用分發，在 2 個 ACK 集羣中部署應用，實現基於 Git 倉庫的持續一致性部署。</p></li><li><p>通過 ACK One 多集羣網關 <strong>[</strong><strong>10]</strong> ，定義標準 K8s Ingress 規則（YAML 格式），實現 7 層流量治理，實現流量的主備模式分發。多集羣網關為跨可用區高可用。</p></li><li><p>備集羣和主集羣的應用版本相同，但備集羣節點較少，應用副本較少，節省成本。可以發送特定 http header 的測試流量，多集羣網關轉發到備集羣以驗證工作狀態。</p></li><li><p>在主系統不可用時，ACK One 多集羣網關會自動將業務流量備用系統，完成主備切換。</p></li><li><p>由於流量的增長，備集羣中 ACK HPA 會擴容應用副本，進而觸發 ACK Cluster Autocaler 擴容集羣節點。</p></li><li><p>阿里雲數據庫服務的跨可用區容災，可參考相關文檔，例如：RDS MySQL 數據庫搭建高可用架構。</p></li></ol><p><strong>🔔 注意：</strong></p><ol><li><p>本方案為 HTTP 七層流量轉發，配合 7 層健康檢查，主備切換時相比 DNS 方案，大幅減低業務流量損失。</p></li><li><p>網關側統一支持基於 Ingress 規則的流量治理，相比 DNS 方案，合併了四層負載均衡 SLB 和七層 Ingress 網關，降低系統複雜度和維護成本。</p></li></ol><p>系統正常運行狀態：</p><p><img src="https://oscimg.oschina.net/oscnet/up-4cf5468be8a7718ececaf10b27912332e59.png" alt="" referrerpolicy="no-referrer"></p><p>災難事件發生，AZ 不可用時，系統主備切換，多集羣網關（MSE 雲原生網關）自動將流量切換到 AZ2 的 ACK Cluste2 中， 應用實例自動擴展。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c51c5e534af9db562e28cba6ca84218ec8b.png" alt="" referrerpolicy="no-referrer"></p><h4>跨可用區雙活</h4><p>以上 2 個方案以主備模式為例，描述了系統架構。同樣的架構，基於 DNS 流量分發和 ACK One 多集羣網關也支持雙活場景，可以配置流量分發比例（例如：50% : 50%），支持自動 failover 切換。在雙活的場景下，每個集羣中的應用副本數，需要根據流量分發比例確定，集羣中需要配置彈性伸縮，以支持流量切換情況下的流量增長。</p><h4>總結</h4><p>單地域多可用區方案實現的成本較低，可以利用雲產品（包括：網關，容器，中間件，數據庫）多可用區部署和多可用區高可用，快速實現容災，對業務改造較小。但此方案僅可應對單個可用區的災難和故障，無法應對地域級的災難故障。</p><h3>單地域雲+IDC 容災方案</h3><p>方案架構與單地域多可用區容災方案類似，要點如下：</p><ol><li><p>雲上 VPC 與 IDC 建立專線連接，打通管控與數據通道。</p></li><li><p>通過 ACK One 註冊集羣接入 IDC 集羣，使用阿里雲強大可觀測和安全能力，統一管理 IDC 集羣和 ACK 集羣。</p></li><li><p>通過 ACK One GitOps 應用分發，在 2 個集羣中部署應用，實現基於 Git 倉庫的持續一致性部署。</p></li></ol><h4>基於 DNS 流量分發（單地域雲上和雲下雙活）</h4><p><img src="https://oscimg.oschina.net/oscnet/up-9cddbabaeec411683b298d86225276fb7b4.png" alt="" referrerpolicy="no-referrer"></p><h4>基於 ACK One 多集羣網關（單地域雲上和雲下雙活）</h4><p><img src="https://oscimg.oschina.net/oscnet/up-bdc15876cf223cb9af33d12fcc08981a117.png" alt="" referrerpolicy="no-referrer"></p><h3>多地域容災</h3><p>如果業務規模大重要性高，服務的用戶數量多範圍廣，單地域的容災方案就無法滿足業務高可用要求，這時需要多地域容災方案。在多個地域獨立部署業務系統，保證每個地域的業務系統具有單獨閉環提供完整的服務能力。</p><ol><li><p>通過全局流量管理（GTM）實現用戶就近接入相應地域。</p></li><li><p>通過 ACK One GitOps 應用分發，在 2 個 ACK 集羣中部署應用，實現基於 Git 倉庫的持續一致性部署。</p></li><li><p>緩存多地域高可用方案，可以參考阿里雲產品相關文檔，例如：Tair 全球多話 <strong>[</strong><strong>27]</strong> 。</p></li><li><p>數據庫跨地域高可用方案，可以參考阿里數據庫雲產品相關文檔，例如：雲原生數據庫 PolarDB MySQL 全球數據庫 <strong>[</strong><strong>28]</strong> 。</p></li><li><p>地域內，可以採用單地域多可用區容災方案。</p></li></ol><p><img src="https://oscimg.oschina.net/oscnet/up-dca2fbcba720734cd95de6b2d9bea4837d8.png" alt="" referrerpolicy="no-referrer"></p><h4>單元化多活部署</h4><p>區別與前一方案，多地域單元化多活部署，需要設計分片規則對應用和數據進行分片，使得單元提供面向部分數據分片的完整服務能力，實現業務安全故障隔離，水平擴展，服務龐大的用戶羣體。一般分為中心單元（擁有所有用戶數據）和多個子單元（分片後詳細數據）。此種方式需要業務系統支持，自定義分流規則，數據拆分，單元間配合等，複雜度高。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6d93522352716a9d326419df9f4b5608245.png" alt="" referrerpolicy="no-referrer"></p><h2>總結</h2><p>各種災難事件會影響您業務的可用性，通過使用阿里雲的相關雲產品的容災能力，可以減輕或者消除這些影響。首先，需要了解業務可用性需求，從而選擇一個適當的容災策略，然後，使用阿里雲相關雲產品，包括：容器（容器服務 Kubernetes 版 ACK <strong>[</strong><strong>1]</strong> 和分佈式雲容器平台 ACK One <strong>[</strong><strong>2]</strong> ）、消息、緩存、數據庫等，設計容災架構，快速達到您業務可用性要求的恢復時間目標 RTO 和恢復點目標 RPO。</p><p><strong>相關鏈接：</strong></p><p>[1]&nbsp;容器服務 Kubernetes 版 ACK</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2F" target="_blank">https://help.aliyun.com/zh/ack/</a></em></p><p>[2]&nbsp;分佈式雲容器平台 ACK One</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fdistributed-cloud-container-platform-for-kubernetes%2Fproduct-overview%2Fack-one-overview" target="_blank">https://help.aliyun.com/zh/ack/distributed-cloud-container-platform-for-kubernetes/product-overview/ack-one-overview</a></em></p><p>[3]&nbsp;ACK One 備份中心</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fdistributed-cloud-container-platform-for-kubernetes%2Fuser-guide%2Fbackup-center-overview" target="_blank">https://help.aliyun.com/zh/ack/distributed-cloud-container-platform-for-kubernetes/user-guide/backup-center-overview</a></em></p><p>[4]&nbsp;ACK One 註冊集羣</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fdistributed-cloud-container-platform-for-kubernetes%2Fuser-guide%2Foverview-9" target="_blank">https://help.aliyun.com/zh/ack/distributed-cloud-container-platform-for-kubernetes/user-guide/overview-9</a></em></p><p>[5]&nbsp;ACK One 艦隊多集羣 Service</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fdistributed-cloud-container-platform-for-kubernetes%2Fuser-guide%2Fmcs-overview" target="_blank">https://help.aliyun.com/zh/ack/distributed-cloud-container-platform-for-kubernetes/user-guide/mcs-overview</a></em></p><p>[6]&nbsp;ACK One GitOps 應用分發</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fdistributed-cloud-container-platform-for-kubernetes%2Fuser-guide%2Fgitops-overview" target="_blank">https://help.aliyun.com/zh/ack/distributed-cloud-container-platform-for-kubernetes/user-guide/gitops-overview</a></em></p><p>[7]&nbsp;ACK Ingress</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fack-managed-and-ack-dedicated%2Fuser-guide%2Fingress-overview" target="_blank">https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/user-guide/ingress-overview</a></em></p><p>[8]&nbsp;ACK HPA</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fack-managed-and-ack-dedicated%2Fuser-guide%2Fhorizontal-pod-autoscaling" target="_blank">https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/user-guide/horizontal-pod-autoscaling</a></em></p><p>[9]&nbsp;ACK Cluster Autocaler</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fack-managed-and-ack-dedicated%2Fuser-guide%2Fauto-scaling-of-nodes" target="_blank">https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/user-guide/auto-scaling-of-nodes</a></em></p><p>[10]&nbsp;ACK One 多集羣網關</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fdistributed-cloud-container-platform-for-kubernetes%2Fuser-guide%2Fmulti-cluster-gateway-overview" target="_blank">https://help.aliyun.com/zh/ack/distributed-cloud-container-platform-for-kubernetes/user-guide/multi-cluster-gateway-overview</a></em></p><p>[11]&nbsp;地域（Region）</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F40654.html%23concept-z04-bg5-j8w" target="_blank">https://help.aliyun.com/document_detail/40654.html#concept-z04-bg5-j8w</a></em></p><p>[12]&nbsp;雲盤快照</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fecs%2Fuser-guide%2Fcopy-a-snapshot" target="_blank">https://help.aliyun.com/zh/ecs/user-guide/copy-a-snapshot</a></em></p><p>[13]&nbsp;文件存儲 NAS</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fnas%2Fproduct-overview%2Fwhat-is-nas" target="_blank">https://help.aliyun.com/zh/nas/product-overview/what-is-nas</a></em></p><p>[14]&nbsp;對象存儲 OSS</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Foss%2Fproduct-overview%2Fwhat-is-oss" target="_blank">https://help.aliyun.com/zh/oss/product-overview/what-is-oss</a></em></p><p>[15]&nbsp;雲備份</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fcloud-backup%2Fproduct-overview%2Fwhat-is-hbr" target="_blank">https://help.aliyun.com/zh/cloud-backup/product-overview/what-is-hbr</a></em></p><p>[16]&nbsp;RDS MySQL 數據庫備份恢復</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fflink%2Fdeveloper-reference%2Flog-service-connector" target="_blank">https://help.aliyun.com/zh/flink/developer-reference/log-service-connector</a></em></p><p>[17]&nbsp;RDS 實例間數據遷移</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Frds%2Fapsaradb-rds-for-mysql%2Fmigrate-data-between-apsaradb-rds-for-mysql-instances" target="_blank">https://help.aliyun.com/zh/rds/apsaradb-rds-for-mysql/migrate-data-between-apsaradb-rds-for-mysql-instances</a></em></p><p>[18]&nbsp;IDC 應用上雲遷移</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fdistributed-cloud-container-platform-for-kubernetes%2Fuser-guide%2Fmigrate-applications-from-self-managed-kubernetes-clusters-to-ack-clusters" target="_blank">https://help.aliyun.com/zh/ack/distributed-cloud-container-platform-for-kubernetes/user-guide/migrate-applications-from-self-managed-kubernetes-clusters-to-ack-clusters</a></em></p><p>[19]&nbsp;跨版本集羣遷移</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fdistributed-cloud-container-platform-for-kubernetes%2Fuser-guide%2Fuse-backup-center-to-migrate-applications-from-clusters-running-lower-kubernetes-versions" target="_blank">https://help.aliyun.com/zh/ack/distributed-cloud-container-platform-for-kubernetes/user-guide/use-backup-center-to-migrate-applications-from-clusters-running-lower-kubernetes-versions</a></em></p><p>[20]&nbsp;跨賬號集羣接入</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fdistributed-cloud-container-platform-for-kubernetes%2Fuse-cases%2Fuse-ack-one-to-manage-clusters-across-cloud-platforms-and-alibaba-cloud-accounts" target="_blank">https://help.aliyun.com/zh/ack/distributed-cloud-container-platform-for-kubernetes/use-cases/use-ack-one-to-manage-clusters-across-cloud-platforms-and-alibaba-cloud-accounts</a></em></p><p>[21]&nbsp;跨集羣遷移應用</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fack%2Fdistributed-cloud-container-platform-for-kubernetes%2Fuser-guide%2Fmigrate-applications-across-clusters-in-different-regions" target="_blank">https://help.aliyun.com/zh/ack/distributed-cloud-container-platform-for-kubernetes/user-guide/migrate-applications-across-clusters-in-different-regions</a></em></p><p>[22]&nbsp;全局流量管理（GTM）</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F189587.html" target="_blank">https://help.aliyun.com/document_detail/189587.html</a></em></p><p>[23]&nbsp;雲消息隊列 RocketMQ 版實例規格</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fapsaramq-for-rocketmq%2Fcloud-message-queue-rocketmq-5-x-series%2Fproduct-overview%2Finstance-specifications" target="_blank">https://help.aliyun.com/zh/apsaramq-for-rocketmq/cloud-message-queue-rocketmq-5-x-series/product-overview/instance-specifications</a></em></p><p>[24]&nbsp;雲消息隊列 Kafka 版實例規格</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fapsaramq-for-kafka%2Fcloud-message-queue-for-kafka%2Fproduct-overview%2Finstance-editions" target="_blank">https://help.aliyun.com/zh/apsaramq-for-kafka/cloud-message-queue-for-kafka/product-overview/instance-editions</a></em></p><p>[25]&nbsp;雲原生內存數據庫 Tair 容災方案</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Ftair%2Fproduct-overview%2Fdisaster-recovery" target="_blank">https://help.aliyun.com/zh/tair/product-overview/disaster-recovery</a></em></p><p>[26]&nbsp;RDS MySQL 數據庫搭建高可用架構</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Frds%2Fapsaradb-rds-for-mysql%2Fbuild-a-high-availability-architecture" target="_blank">https://help.aliyun.com/zh/rds/apsaradb-rds-for-mysql/build-a-high-availability-architecture</a></em></p><p>[27]&nbsp;Tair 全球多話</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Ftair%2Fuser-guide%2Foverview-of-global-distributed-cache-for-tair" target="_blank">https://help.aliyun.com/zh/tair/user-guide/overview-of-global-distributed-cache-for-tair</a></em></p><p>[28]&nbsp;雲原生數據庫 PolarDB MySQL 全球數據庫</p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fzh%2Fpolardb%2Fpolardb-for-mysql%2Fuser-guide%2Foverview-49" target="_blank">https://help.aliyun.com/zh/polardb/polardb-for-mysql/user-guide/overview-49</a></em></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Mar 2024 03:21:17 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/3874284/blog/11047123</guid>
            <link>https://my.oschina.net/u/3874284/blog/11047123</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微軟推出 Sudo for Windows 並開源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">微軟已在 Windows 11 Insider Preview Build 26052 中發佈適用於 Windows 的 Sudo，並將其在 MIT 協議下進行開源。Sudo for Windows 將允許用戶直接從未提權終端窗口運行提權命令。</span></p><h4><strong><span style="color:#000000">如何啓用 Sudo for Windows</span></strong></h4><p><span style="color:#000000">導航至 Settings &gt; For Developers page in Windows Settings and toggle on the 「Enable Sudo」 選項：</span></p><p><img height="254" src="https://oscimg.oschina.net/oscnet/up-c0d02d778cd33c185f3a89594578c804722.png" width="500" referrerpolicy="no-referrer"></p><p>也可以通過運行以下命令：</p><pre><code>sudo config --enable &lt;configuration_option&gt;</code></pre><p><img alt="" height="249" src="https://oscimg.oschina.net/oscnet/up-9380490132ee0ce18ceaef56a7fc3338a03.gif" width="500" referrerpolicy="no-referrer"></p><h4><strong>如何配置&nbsp;Sudo for Windows</strong></h4><p><span style="color:#333333">目前支持三種不同的配置選項：</span></p><ol><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcommandline%2Fintroducing-sudo-for-windows%2F%23configuration-option-1-force-a-new-window" target="_blank">開啓新窗口</a>&nbsp;(forceNewWindow)</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcommandline%2Fintroducing-sudo-for-windows%2F%23configuration-option-2-input-closed" target="_blank">禁用輸入</a>&nbsp;(disableInput)</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcommandline%2Fintroducing-sudo-for-windows%2F%23configuration-option-3-inline" target="_blank">內聯</a>&nbsp;(normal)</li></ol><p><span style="color:#333333">要更改配置選項，可使用&nbsp;Settings &gt; For Developers page in Windows Settings 頁面中的下拉菜單：</span></p><p><img height="290" src="https://oscimg.oschina.net/oscnet/up-14021d3fddd3e949cacb8f69dfd71df33cb.png" width="500" referrerpolicy="no-referrer"></p><p>或運行以下命令：</p><pre><code>sudo config --enable &lt;configuration_option&gt;</code></pre><p style="text-align:left"><strong><span style="color:#333333">配置選項 1：</span><span style="color:#000000">開啓新窗口</span></strong></p><p style="text-align:left"><span style="color:#333333">在此配置中，Sudo for Windows 將打開一個新的窗口並運行命令。這是啓用 sudo 時的默認配置選項。例如，如果運行：</span></p><pre><span style="color:#212529"><code class="language-powershell">sudo netstat <span style="color:#07704a">-ab</span></code></span></pre><p style="text-align:left"><img alt="" height="249" src="https://oscimg.oschina.net/oscnet/up-459386d6e190afc5d1d596b7ce9753ffb16.gif" width="500" referrerpolicy="no-referrer"></p><p><strong>配置選項 2：禁用輸入</strong></p><p>在此配置中，Sudo for Windows 將在當前窗口中運行提權後的進程，但新進程生成時將關閉其 stdin。這意味着新進程將不接受任何用戶輸入，因此此配置不適用於提權後需要用戶進一步輸入的進程。</p><p><strong>配置選項 3：內聯</strong></p><p>此配置與其他操作系統上 sudo 的行為最相似。在此配置中，Sudo for Windows 將運行提權的進程，其 stdin、stdout 和 stderr 均連接到當前窗口。這意味着新的提權進程可以接收輸入並 route output 到當前窗口。</p><p><img height="195" src="https://static.oschina.net/uploads/space/2024/0317/105417_8Iia_4252687.png" width="500" referrerpolicy="no-referrer"></p><hr><p>微軟方面表示，團隊將在接下來幾個月中<span style="color:#333333">致力於擴展&nbsp;Sudo for Windows 的文檔，並將分享更多有關在"內聯"配置中運行 sudo 的安全影響的細節。同時致力於 Sudo for Windows 的開源工作，分享更多相關細節。</span></p><p><span style="color:#333333">詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcommandline%2Fintroducing-sudo-for-windows%2F" target="_blank">查看官方博客</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 17 Mar 2024 02:58:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283410/sudo-for-windows</guid>
            <link>https://www.oschina.net/news/283410/sudo-for-windows</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凌夕文件管理系統 v1.0.0 發佈 - 網盤系統、文件轉碼系統]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><h4>軟件簡介</h4></div><div><div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">凌夕文件管理系統（lfs）是基於 SpringBoot3.x+Mybatis+Mybatis-Plus+VUE3+Element Plus 開發的文件管理系統， 支持單文件上傳、分片上傳，視頻上傳完成後，可以根據視頻轉碼配置轉成對應的視頻格式（mp4、m3u8），文檔上傳完成後，會轉成 pdf 文件， 支持 word、excel、ppt、wps、text、rtf 文件轉成 pdf。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">支持音視頻、圖片、文檔在線預覽、下載、重命名、移動文件夾、刪除等操作，支持文件分類查看。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">後端 git 地址：<a href="https://gitee.com/lxinet/lfs">https://gitee.com/lxinet/lfs</a></p><p style="margin-left:0; margin-right:0">前端 git 地址：<a href="https://gitee.com/lxinet/lfs-vue">https://gitee.com/lxinet/lfs-vue</a></p><h1>環境支持</h1><p><span style="background-color:#ffffff; color:#40485b">java 環境：jdk17+</span></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">數據庫：mysql 8.0</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">緩存：redis</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">文件服務器：nginx</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">部署前需修改 application.yml 文件中的 mysql 和 redis 信息，需要部署 nginx 服務作為文件服務器。</p><h1>開發框架</h1><h2>後端</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">springboot3.x+mybatis+mybatis-plus</p><h2>前端</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">vue3+element-plus+vite</p><h3>用戶手冊</h3><h4><span><span><span><strong><strong><span><span><strong>新建文件夾</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span><span>在文件管理頁面，點擊【新建文件夾】，就可以在當前文件夾下新建一個文件夾了，默認文件夾名稱為 「新建文件夾」，默認會全選，可以重新修改名稱，按回車後，就完成文件夾創建。</span></span></p><p style="margin-left:0; margin-right:0"><img height="410" src="https://oscimg.oschina.net/oscnet/up-c2b3f32933b2aee1f5a2a41530b72072688.png" width="1000" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>移動文件</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span><span>在文件管理頁面，可以選擇文件移動到其他文件夾下。</span></span></p><p style="margin-left:0; margin-right:0"><img height="296" src="https://oscimg.oschina.net/oscnet/up-763e729a202a6f69ed4bd39fbb417fccc12.png" width="1000" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="557" src="https://oscimg.oschina.net/oscnet/up-95bc25ea9a93be68472d24ae15914aad4e8.png" width="800" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><span><span><span><strong><strong><span><span><strong>上傳文件</strong></span></span></strong></strong></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span>文件可以在線上傳，上傳使用分片上傳方式，如果上傳重複文件，可以直接秒傳，秒傳是根據文件 md5 進行判斷。</span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span>在文件管理頁面，點擊【上傳文件】按鈕，就會彈出上傳文件的彈窗。</span></span></p><p style="margin-left:0; margin-right:0"><img height="392" src="https://oscimg.oschina.net/oscnet/up-b1b95439cb7e590d099a5626dd333b55ed8.png" width="1000" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span>可以拖拽文件到窗口或者點擊窗口選擇文件進行文件上傳，上傳過程中可以實時查看上傳進度。</span></span></p><p style="margin-left:0; margin-right:0"><img height="328" src="https://oscimg.oschina.net/oscnet/up-4d03637e43333c483745a6bda7949f31e9c.png" width="800" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span>上傳完成後，可以點擊右邊的【查看】按鈕，查看上傳文件的詳情頁。</span></span></p><p style="margin-left:0; margin-right:0"><img height="408" src="https://oscimg.oschina.net/oscnet/up-e5f7f164b6693ea630dd10025281d5d884a.png" width="800" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span>文件上傳完成後，會自動發起轉碼，文檔會轉成 pdf 文件，視頻會根據轉碼配置進行轉碼。</span></span></p><p style="margin-left:0; margin-right:0"><img height="548" src="https://oscimg.oschina.net/oscnet/up-d3670b909e8bf7cb300fb92d2adbe75113e.png" width="800" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>文檔預覽</strong></span></span></strong></strong></span></span></span></h4><p style="text-align:justify"><span><span><span><span>文檔上傳後，會自動轉成 pdf 文件，可以在線預覽，可以在文件詳情頁面，點擊【轉碼預覽】按鈕，就可以在線查看 pdf 文件內容。</span></span></span></span></p><p style="margin-left:0; margin-right:0"><img height="408" src="https://oscimg.oschina.net/oscnet/up-6663a4d8ea70bb3e50b9226e10cb3e7ce1b.png" width="800" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="544" src="https://oscimg.oschina.net/oscnet/up-b77710abd5259fb82d771d86967baadb584.png" width="800" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>視頻預覽</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span><span>視頻上傳完成後，會根據轉碼配置自動轉碼，在視頻詳情頁面，可以查看原文件和轉碼文件。</span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span>點擊【原文件預覽】按鈕，就可以預覽原文件。</span></span></p><p style="margin-left:0; margin-right:0"><img height="550" src="https://oscimg.oschina.net/oscnet/up-1eff3c6f2c87c03f6bc4450d924c56f92af.png" width="800" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="459" src="https://oscimg.oschina.net/oscnet/up-b98261e3eae1c1dd2c45a63405e468ff7fb.png" width="800" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span>點擊底下的轉碼列表右邊的預覽，就可以查看當前轉碼後的文件的視頻。</span></span></p><p style="margin-left:0; margin-right:0"><img height="550" src="https://oscimg.oschina.net/oscnet/up-99363b6fa8481c02cce2d5fe09746dfa04f.png" width="800" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="458" src="https://oscimg.oschina.net/oscnet/up-1f84b96d6f44b3d7888a9c29653e46ea724.png" width="800" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>轉碼配置</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span><span>轉碼配置是針對視頻文件轉碼進行配置的，視頻上傳後會根據開啓的轉碼配置進行轉碼，可以在轉碼配置頁面進行添加、修改、刪除、開啓 / 關閉轉碼。</span></span></p><p style="margin-left:0; margin-right:0"><img height="276" src="https://oscimg.oschina.net/oscnet/up-18eb5e1ff93eeb21af5d29681f50c9a3617.png" width="1000" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>新增轉碼配置</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span><span>點擊【新增】按鈕，系統會彈出新增轉碼配置界面，填寫信息後點擊【保存】按鈕，即可添加新的轉碼配置。</span></span></p><p style="margin-left:0; margin-right:0"><img height="427" src="https://oscimg.oschina.net/oscnet/up-198b9db6daa3e4fefbf83f6ead771593cef.png" width="1000" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>修改轉碼</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span><span>在轉碼配置管理頁面，點擊每個轉碼配置右邊的編輯，即可進入編輯頁面，修改內容完成後，點擊【保存】按鈕，即可完成修改。</span></span></p><p style="margin-left:0; margin-right:0"><img height="395" src="https://oscimg.oschina.net/oscnet/up-7c98b434dc65e950917e3cd72c21f9d874f.png" width="1000" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>刪除轉碼配置</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span><span>在轉碼配置管理頁面，點擊每個轉碼配置右邊的刪除，點擊確定後，就可以刪除指定的轉碼配置。</span></span></p><p style="margin-left:0; margin-right:0"><img height="409" src="https://oscimg.oschina.net/oscnet/up-9e208823da14305cba5884021bef4c361c3.png" width="1000" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>開啓轉碼配置</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span><span>在轉碼配置管理頁面，點擊每個轉碼配置狀態，就可以切換開啓</span></span><span><span><span>&nbsp;</span>/</span></span><span><span><span>&nbsp;</span>關閉轉碼配置。</span></span></p><p style="margin-left:0; margin-right:0"><img height="250" src="https://oscimg.oschina.net/oscnet/up-1d66d57bbe66c967a8a048e85ddab0faf35.png" width="1000" referrerpolicy="no-referrer"></p><h4><span><span><span><strong><strong><span><span><strong>轉碼進度</strong></span></span></strong></strong></span></span></span></h4><p style="margin-left:0; margin-right:0; text-align:left"><span><span>在轉碼進度頁面可以實時查看轉碼進度，也可以對文件進行重新轉碼。</span></span></p><p style="margin-left:0; margin-right:0"><img height="283" src="https://oscimg.oschina.net/oscnet/up-3a41b586d0e603478b03372628a91b3477e.png" width="1000" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span>點擊右邊的【重新轉碼】按鈕，就可以對文件重新轉碼。</span></span></p><p style="margin-left:0; margin-right:0"><img height="295" src="https://oscimg.oschina.net/oscnet/up-9879f4bfa8661840df0f33f7a28d679595f.png" width="1000" referrerpolicy="no-referrer"></p></div></div><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 16 Mar 2024 08:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283323/lxinet-1-0-0-released</guid>
            <link>https://www.oschina.net/news/283323/lxinet-1-0-0-released</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Krita 2024 規劃：更多地關注 GPU 加速和 AI]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Krita 項目團隊<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkrita.org%2Fen%2Fposts%2F2024%2F2024-roadmap%2F" target="_blank">發文</a>對 2023 年的工作進行了回顧；同時透露了項目 2024 年的一些工作規劃，其中包含了一些 2023 年未完成的事項以及新的內容。</span></p><p><span style="color:#000000">首先提到了就是在 2024 年需要將 Krita 移植到 Qt6。「這是一個大工程，不僅僅是因為功能的消失，還因為對 GPU 渲染支持的改變。在 Windows 上，OpenGL 驅動程序存在很多錯誤，正因為如此，Qt5 提供了在使用 OpenGL 的應用程序和用於 GPU 渲染的 native Direct3D 庫之間使用 Angle 兼容層的可能性。現在，除非我們重寫 GPU 渲染系統，否則就必須將 Angle 放回堆棧中。」</span></p><p><span style="color:#000000">移植到 Qt6 勢必會花費大量的時間和精力，但同時也會帶來很多新功能。項目團隊希望能在 2024 年實現的功能包括有：</span></p><ul><li><span style="color:#000000">實現一個系統來創建靈活的 text balloons 並將其與文本對象集成</span></li><li><span style="color:#000000">為 comic book Frameworks 實現新的圖層類型</span></li><li><span style="color:#000000">提供與 Blender 的集成</span></li><li><span style="color:#000000">用更靈活、更易於維護的系統替換當前的 docker 系統</span></li><li><span style="color:#000000">建立一個系統來提供工具預設</span></li><li><span style="color:#000000">創建一個新的用戶界面來處理調色板</span></li><li><span style="color:#000000">添加動畫音頻波形顯示</span></li><li><span style="color:#000000">添加對動畫參考幀工作流程的支持</span></li></ul><p><span style="color:#000000">他們還討論了使用 GPU 來提高性能。最初的想法是使用 GPU 來實現畫筆，但後來開發人員認為畫筆性能足夠好，反而是 liquefy transform tool、transform masks 和一些濾鏡太慢了。因此，他們最終決定將研究使用 GPU 來優化 transform masks。</span></p><p><span style="color:#000000">其中最有爭議的一件事情是，他們還在考慮是否在 Krita 中添加 AI 功能。</span></p><blockquote><p><span style="color:#000000">與會的藝術家們認為，生成式 AI 毫無價值，充其量只會產生平淡無奇的重複模板，但輔助式 AI 可能會很有用。為了弄清這是否屬實，我們開始研究一個特殊的項目：AI-assisted inking of sketches。這很有用，既能取代藝術創作中的繁瑣步驟，又能保留藝術個性。當然，Krita 能否真正實現這一點還不確定，但希望這次調查能幫助我們更好地理解這個問題、可能性和存在的問題。</span></p></blockquote><p><span style="color:#000000">此外，Krita 團隊，還面臨着一些人手不足的的資源挑戰。Krita 的 Android 和 ChromeOS 端口的維護人員已經忙得無法全職開發 Krita&nbsp;。為了維護 Krita 在 Android（和 ChromeOS）上的運行上，原計劃為 Krita 在 Android 上開發專門的平板電腦用戶界面的工作還沒完成；針對 Android 的自動構建功能也不再存在。</span></p><p><span style="color:#000000">在此背景下，還有開發人員退出了&nbsp;Krita 項目。Apple MacOS 商店中 Krita 的證書也已過期，但由於 Krita 的維護者在兩年前改了名，新的證書籤署過程中遇到了一些問題。</span></p><p><span style="color:#000000">「這些證書必須包含簽名者當前的法定姓名，而出於某種原因，商店很難允許擁有相同 ID 和代碼但法定姓名不同的開發者上傳軟件包。我們正在努力解決這個問題。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 16 Mar 2024 02:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283281/krita-2024-roadmap</guid>
            <link>https://www.oschina.net/news/283281/krita-2024-roadmap</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[金山辦公推出鴻蒙星河版 WPS]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">金山辦公和華為日前聯合舉辦鴻蒙星河版 (HarmonyOS NEXT) WPS Office 核心功能版本交付儀式。</span></p><p><img height="279" src="https://oscimg.oschina.net/oscnet/up-cd9743945958b8e87678dc40f556ea6a1fe.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">據瞭解，WPS Offce 核心功能版本基於 HarmonyOS NEXT 的原生互聯、原生流暢等特性開發，能夠在 PC 端更流暢運行，還能實現與手機、平板、智慧屏等多種設備之間的無縫流轉和跨端協同。</span></p><p><span style="color:#000000">例如，在常見的團隊辦公場景下，同一個文檔可以實現小屏聯動大屏，在手機、平板上進行的編輯和標註，可在 PC、智慧屏上同步演示。另外使用手機，可以直接對大屏上的 PPT 進行翻頁、視頻播放等操作，諸多辦公痛點將得以解決，多人辦公場景真正實現了高效協同。</span></p><p><span style="color:#000000">WPS 團隊還針對鴻蒙系統的特性進行了深度優化，使得軟件在運行效率、能耗控制以及跨設備協作方面都得到了顯著提升。此外，WPS Office 鴻蒙原生版還特別加強了數據安全和隱私保護功能，以適應日益增長的網絡安全需求。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 16 Mar 2024 01:30:55 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283280</guid>
            <link>https://www.oschina.net/news/283280</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Transformer Debugger —— Transformer 內部結構分析工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">Transformer Debugger 是 OpenAI 的 Superalignment 團隊開發的一款工具，旨在支持對小語言模型的特定行為進行研究。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">TDB 可以在編寫代碼之前進行快速探索，能夠幹預前向傳遞並查看它對特定行為的影響。它可以用來回答諸如 "為什麼模型會輸出 token A 而不是 token B" 或 "為什麼 attention head H 會關注 token T" 之類的問題。它通過識別對行為有貢獻的特定組件（neurons、attention heads、autoencoder latents），顯示自動生成的關於導致這些組件激活最強烈的原因的解釋，以及追蹤組件之間的連接以幫助發現聯繫。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">本次開源發佈的內容包括：</span></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenai%2Ftransformer-debugger%2Fblob%2Fmain%2Fneuron_viewer%2FREADME.md" target="_blank">Neuron viewer</a>：一個 React 應用程序，託管 TDB 以及包含有關各個模型組件（<span style="color:#1f2328">MLP&nbsp;</span>neurons、attention heads and autoencoder latents for both）信息的頁面。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenai%2Ftransformer-debugger%2Fblob%2Fmain%2Fneuron_explainer%2Factivation_server%2FREADME.md" target="_blank">Activation server</a>：對主題模型進行推理，為 TDB 提供數據的後端服務器。它還從公共 Azure 存儲桶讀取數據並提供數據。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenai%2Ftransformer-debugger%2Fblob%2Fmain%2Fneuron_explainer%2Fmodels%2FREADME.md" target="_blank">Models</a>：一個用於 GPT-2 模型及其自動編碼器的簡單推理庫，帶有用於<span style="color:#333333">捕獲激活的 hook</span>。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopenai%2Ftransformer-debugger%2Fblob%2Fmain%2Fdatasets.md" target="_blank">Collated activation datasets</a>：MLP neurons、attention heads 和 autoencoder latents 的頂級激活數據集示例。</li></ul><div style="text-align:start"><h4><strong><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span>設置</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4></div><p style="text-align:start"><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>按照以下步驟安裝存儲庫。首先需要 python/pip 以及 node/npm。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>雖然可選，但官方建議用戶使用虛擬環境或等效環境：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><div style="text-align:start"><pre><span><span><span><span><span><span><span style="background-color:var(--bgColor-muted, var(--color-canvas-subtle))"><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:var(--fgColor-default, var(--color-fg-default))"><span style="background-color:var(--bgColor-muted, var(--color-canvas-subtle))"><span><span><span><span style="color:var(--color-prettylights-syntax-comment)"><span><span style="color:var(--color-prettylights-syntax-comment)">#</span></span> If you're already in a venv, deactivate it.</span></span>
deactivate
<span><span style="color:var(--color-prettylights-syntax-comment)"><span><span style="color:var(--color-prettylights-syntax-comment)">#</span></span> Create a new venv.</span></span>
python -m venv <span><span style="color:var(--color-prettylights-syntax-keyword)">~</span></span>/.virtualenvs/transformer-debugger
<span><span style="color:var(--color-prettylights-syntax-comment)"><span><span style="color:var(--color-prettylights-syntax-comment)">#</span></span> Activate the new venv.</span></span><span><span style="color:var(--color-prettylights-syntax-constant)">source</span></span><span><span style="color:var(--color-prettylights-syntax-keyword)">~</span></span>/.virtualenvs/transformer-debugger/bin/activate</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><div><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>設置環境後，按照以下步驟操作：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></div></div><div style="text-align:start"><pre><span><span><span><span><span><span><span style="background-color:var(--bgColor-muted, var(--color-canvas-subtle))"><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:var(--fgColor-default, var(--color-fg-default))"><span style="background-color:var(--bgColor-muted, var(--color-canvas-subtle))"><span><span>git clone git@github.com:openai/transformer-debugger.git
<span><span style="color:var(--color-prettylights-syntax-constant)">cd</span></span> transformer-debugger

<span><span style="color:var(--color-prettylights-syntax-comment)"><span><span style="color:var(--color-prettylights-syntax-comment)">#</span></span> Install neuron_explainer</span></span>
pip install -e <span><span style="color:var(--color-prettylights-syntax-constant)">.</span></span><span><span style="color:var(--color-prettylights-syntax-comment)"><span><span style="color:var(--color-prettylights-syntax-comment)">#</span></span> Set up the pre-commit hooks.</span></span>
pre-commit install

<span><span style="color:var(--color-prettylights-syntax-comment)"><span><span style="color:var(--color-prettylights-syntax-comment)">#</span></span> Install neuron_viewer.</span></span><span><span style="color:var(--color-prettylights-syntax-constant)">cd</span></span> neuron_viewer
npm install
<span><span style="color:var(--color-prettylights-syntax-constant)">cd</span></span> ..</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></pre><div><p>要運行 TDB 應用程序，需要按照説明設置激活服務器後端和神經元查看器前端。</p><h4 style="text-align:start"><strong>Making changes</strong></h4><p>要驗證更改：</p><ul><li>運行<span>&nbsp;</span><code>pytest</code></li><li>運行<span>&nbsp;</span><code>mypy --config=mypy.ini .</code></li><li>運行激活服務器和神經元查看器並確認 TDB 和神經元查看器頁面等基本功能仍然有效</li></ul></div></div></div>
                                                                ]]>
            </description>
            <pubDate>Sat, 16 Mar 2024 01:16:55 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/transformer-debugger</guid>
            <link>https://www.oschina.net/p/transformer-debugger</link>
        </item>
    </channel>
</rss>
