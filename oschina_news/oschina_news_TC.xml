<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 13 Oct 2023 05:04:50 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Ubuntu 23.10 正式發佈，不妨趁週五升級一波！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Ubuntu 23.10 已正式發佈，代號 "Mantic Minotaur"。該版本不是 LTS 版本，僅提供九個月的支持，一直到 2024 年 7 月。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b016fea82900b50cf091fb97ed70edd800d.png" referrerpolicy="no-referrer"></p><p>Ubuntu 23.10 的默認安裝被配置為&nbsp;"<strong>Minimal"</strong>，也就是説現在默認安裝 Ubuntu 桌面是最小化安裝——不會包含額外的應用程序。當然用戶可以選擇<strong> 'Expanded installation' </strong>選項來滿足更豐富的應用需求，以便在首次啓動時安裝 LibreOffice 和 Thunderbird 等日常應用。</p><p>此外，新版本引入了對 ZFS 引導安裝的支持，提升了存儲管理需求的靈活性和選擇性。這是基於 Subiquity 的安裝程序中的一項新功能，默認情況下不加密。加密的 ZFS 引導選項將在未來的版本中開發。</p><p>從 Ubuntu 23.10 開始，在 Ubuntu Core 多年經驗的基礎上，TPM 支持的全磁盤加密 (FDE) 將作為一項實驗功能引入。在支持的平台上，用戶不再需要在啓動時手動輸入密碼。</p><p>其他值得關注的變化：</p><ul><li>桌面環境使用 GNOME 45</li><li>內核版本升級到 Linux Kernel 6.5</li><li>更新升級的安裝程序</li><li>受限的非特權用戶命名空間</li><li>默認啓用多代 LRU 頁面回收</li><li>支持 idmapped Ceph 掛載</li><li>使用 Wayland 時默認啓用原生 Wayland 模式會話，以獲得更快的瀏覽體驗</li><li>預裝採用 Flutter 編寫的全新應用商店 "App Center"</li><li>使用 Netplan 作為 NetworkManager 的默認設置存儲後端</li><li><p>支持最新發布的&nbsp;樹莓派 5&nbsp;和&nbsp;HiFive Pro P550</p></li></ul><hr><p>此前曾報道過的部分變化：</p><ul><li><a href="https://www.oschina.net/news/258253/ubuntu-23-10-zfs-install">Ubuntu 23.10 安裝工具恢復支持 ZFS 文件系統</a></li><li><a href="https://www.oschina.net/news/257464/ubuntu-23-10-tpm-fde">Ubuntu 23.10 支持基於 TPM 的全磁盤加密</a></li><li><a href="https://www.oschina.net/news/247869/ubuntu-23-10-new-app-store-deb-support">Ubuntu 23.10 引入新的 「應用商店」，優先支持 Snap 格式</a></li><li><a href="https://www.oschina.net/news/256910/gnome-45-arrives-in-ubuntu-23-10">Ubuntu 23.10 每日構建版已搭載 GNOME 45</a></li><li><a href="https://www.oschina.net/news/250357/ubuntu-noto-fonts-change">Ubuntu 23.10 調整字體包，將 DejaVu 替換為 Noto</a></li><li><a href="https://www.oschina.net/news/255590/ubuntu-23-10-no-gimp-3-0">Ubuntu 23.10 不會預裝 GIMP 3.0 測試版</a></li></ul><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fubuntu.com%2Fdownload" target="_blank">下載地址</a>&nbsp;|&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.ubuntu.com%2Ft%2Fmantic-minotaur-release-notes%2F35534" target="_blank">Release Notes</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 13 Oct 2023 02:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261571/ubuntu-23-10-ga</guid>
            <link>https://www.oschina.net/news/261571/ubuntu-23-10-ga</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[夜鶯項目發佈 v6.3.0 版本，增加 Loki 和 TDEngine 數據源支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; text-align:left">大家好，夜鶯項目發佈 v6.3.0 版本，新增 Loki 和 TDEngine 數據源支持，並持續優化部署體驗，本文為大家簡要介紹一下相關更新內容。</p><h2>Loki、TDEngine 數據源支持</h2><p style="color:#333333; text-align:left"><img alt="20231013080250" src="https://download.flashcat.cloud/ulric/20231013080250.png" referrerpolicy="no-referrer"></p><p style="color:#333333; text-align:left">實際上，從 v6.2.0 開始，就支持了這倆數據源，不過還有些小瑕疵，故而在 v6.3.0 修復並正式對外宣傳。Loki 數據源的支持是來自社區小夥伴 @tripitakav，歡迎大家積極參與夜鶯開源項目，一起完善夜鶯的生態。TDEngine 數據源的支持由 @710leo 和 @jsers 主導，感謝他們的付出，夜鶯和 TDEngine 配合，算是一個純國產化的解決方案了。</p><p style="color:#333333; text-align:left">Loki 和 TDEngine 相關功能初步發佈，可能還會有一些小問題，歡迎大家積極反饋，我們會持續優化。軟件 Bug 和建議請通過 github issue 反饋，使用上的問題可以通過<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fanswer.flashcat.cloud%2F" target="_blank">論壇</a>反饋。</p><p style="color:#333333; text-align:left">github 地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fccfos%2Fnightingale" target="_blank">https://github.com/ccfos/nightingale</a>，大家可以 star 收藏，後續有更新會收到 github 的通知。</p><h2>去除 ops.yaml</h2><p style="color:#333333; text-align:left">新下載的包，大家會發現 etc 配置目錄缺少了 ops.yaml，這是因為把這個文件的內容內置到代碼裏了，降低維護成本。如果硬盤上還是有 ops.yaml，夜鶯會自動 merge 配置文件和代碼中的內容。</p><h2>修改 edge heartbeat 接口地址</h2><p style="color:#333333; text-align:left">之前的版本 categraf 向 edge 發心跳和向中心端發心跳 heartbeat 接口路徑不一樣，給很多小夥伴造成困擾。這次升級我們想了個辦法把這倆接口路徑統一了，都是<span>&nbsp;</span><code>/v1/n9e/heartbeat</code>，這樣就不會再有困擾了。</p><h2>其他更新</h2><ul><li>feat: SMTP 設置添加測試功能</li><li>feat: Elasticsearch 即時查詢日誌表格字段列支持後端排序</li><li>feat: 儀表盤蜂窩圖添加文字背景色設置</li><li>feat: 儀表盤表格圖新增導出到 CSV</li><li>feat: 儀表盤表格圖每行展示指定聚合維度值的維度支持配置多個維度</li><li>feat: 儀表盤表格圖 override 新增根據字段名匹配方式</li><li>feat: 儀表盤單位添加 Data rate 單位</li><li>refactor: 導入 Grafana dashboard 支持更多的版本</li><li>refactor: 儀表盤折線圖 legend 表格寬度自適應</li><li>refactor: 儀表盤指標圖展示標籤值時如果是數值類型配置單位和顏色設置</li><li>fix: 告警事件中 target_ident 偶發出錯問題 by qifenggang</li><li>fix: edge 模塊，同步 user_group 信息有誤問題 by tianyanli</li><li>fix: 修復蜂窩圖 legend 衝突問題</li><li>fix: 修復儀表盤如果選擇了絕對時間分享出去的圖的篩選時間顯示成了 UTC 時間問題</li><li>fix: 修復 Elasticsearch 源儀表盤圖不同索引的其他查詢條件相同導致序列名衝突問題</li><li>fix: 修復 Guest 用戶無法查看儀表盤鏈接問題</li><li>fix: 快捷視圖修改動態過濾標籤後重新加載標籤值</li><li>fix: edge 模塊生成的告警事件 id 為空</li></ul><h3>最後</h3><p style="color:#333333; text-align:left">如果您覺得夜鶯項目不錯，歡迎到 github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fccfos%2Fnightingale" target="_blank">https://github.com/ccfos/nightingale</a><span>&nbsp;</span>給我們一顆小 🌟🌟<span>&nbsp;</span><code>:-)</code></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 13 Oct 2023 00:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261542/nightingale-release-v6-3-0</guid>
            <link>https://www.oschina.net/news/261542/nightingale-release-v6-3-0</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微軟推出 Windows Terminal Canary 版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">微軟<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcommandline%2Fintroducing-windows-terminal-canary%2F" target="_blank">宣佈</a>把 Windows Terminal Canary 添加到 Windows Terminal 系列中。</span></p><p><span style="color:#000000">Windows Terminal Canary 是 Windows Terminal 的全新 Canary 頻道，每天都會進行更新，且包含"hot off the presses"功能；旨在讓用戶有機會在新功能進入 Windows Terminal Preview 之前試用這些實驗性功能。</span></p><p><img alt="" height="202" src="https://oscimg.oschina.net/oscnet/up-d998b10577973fbed232334af00fbad489c.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">Windows Terminal Canary 可以與 Windows Terminal stable 和 Windows Terminal Preview 並行安裝。但 </span><span style="background-color:#ffffff">Canary 版</span><span style="background-color:#ffffff">也是最不穩定的版本，所以有存在很多 bug 的可能性。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff"><img alt="" height="418" src="https://oscimg.oschina.net/oscnet/up-818f3b65f2a7d533a9278b659e14d51f3a7.png" width="700" referrerpolicy="no-referrer"></span></span></p><p style="text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">Windows Terminal Canary 提供 App Installer&nbsp;發行版和便攜式 ZIP 發行版，均可從 </span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fterminal%23installing-windows-terminal-canary" target="_blank">Windows Terminal repository</a>&nbsp;<span style="color:#000000">進行<span style="background-color:#ffffff">下載。</span></span></p><p style="text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">App Installer 發行版支持自動更新。但由於平台限制，其僅適用於 Windows 11，但後續會向 Windows 10 用戶開放。</span></span><span style="background-color:#ffffff"><span style="color:#000000">Portable ZIP 發行版是一個便攜式應用程序，它不會自動更新，也不會自動檢查更新；適用於 Windows 10 (19041+) 和 Windows 11</span>。</span></p><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcommandline%2Fintroducing-windows-terminal-canary%2F" target="_blank">查看官方博客</a>。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fterminal%23installing-windows-terminal-canary" target="_blank"><strong>下載</strong></a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 06:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261430/windows-terminal-canary</guid>
            <link>https://www.oschina.net/news/261430/windows-terminal-canary</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源隱私計算平台 PrimiHub 1.6.11 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="343" src="https://oscimg.oschina.net/oscnet/up-6e98dde3777405ffe098aff18b3414cbd53.png" width="950" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#1f2328">PrimiHub 是一款由密碼學專家團隊打造的開源隱私計算平台，支持安全多方計算、聯邦學習、隱私求交、隱私查詢等。具有如下特性：</span></p><ul><li><strong>開源</strong>：完全開源、免費</li><li><strong>安裝簡單</strong>：支持 Docker 一鍵部署</li><li><strong>開箱即用</strong>：擁有<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fprimihub%2Fprimihub-platform" target="_blank">Web 界面</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.primihub.com%2Fdocs%2Fcategory%2F%25E5%2588%259B%25E5%25BB%25BA%25E4%25BB%25BB%25E5%258A%25A1" target="_blank">命令行</a><span>&nbsp;</span>和<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.primihub.com%2Fdocs%2Fcategory%2Fpython-sdk-client" target="_blank">Python SDK</a><span>&nbsp;</span>多種使用方式</li><li><strong>功能豐富</strong>：支持隱匿查詢、隱私求交、聯合統計、數據資源管理等功能</li><li><strong>靈活配置</strong>：支持自定義擴展語法、語義、安全協議等</li><li><strong>自主研發</strong>：基於安全多方計算、聯邦學習、同態加密、可信計算等隱私計算技術</li></ul><h4>1.6.11 更新了什麼？</h4><h3>新增特性</h3><ol><li>隱私求交增加 TEE 支持</li><li>缺失值填充功能可根據字段類型自動匹配適用的填充方法，支持 4 種缺失值處理方法</li><li>模型評估增加多種評估指標（分類、迴歸），支持 ROC 圖展示 
  <ul><li>分類：Acc、Precision、Recall、F1、AUC、KS、ROC</li><li>迴歸：EV、MaxE、MAE、MSE、RMSE、MedAE、R2</li></ul></li><li>聯邦數據預處理支持 TargetEncoder 特徵編碼</li><li>支持 Python 代碼調用 MPC 聯合統計功能，可在聯邦學習中使用</li></ol><h3>優化</h3><ol><li>提升交互一致性：隱私求交、隱匿查詢的交互統一</li><li>隱私求交、隱匿查詢結果支持在線預覽</li></ol><h4>項目地址</h4><ul><li><p style="margin-left:0; margin-right:0">GitHub：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fprimihub%2Fprimihub" target="_blank">https://github.com/primihub/primihub</a></p></li><li><p style="margin-left:0; margin-right:0">Gitee：<a href="https://gitee.com/primihub/primihub">https://gitee.com/primihub/primihub</a></p></li><li><p style="margin-left:0; margin-right:0">官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fprimihub.com" target="_blank">https://primihub.com</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 05:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261425/primihub-1-6-11</guid>
            <link>https://www.oschina.net/news/261425/primihub-1-6-11</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[項目管理軟件 Atlassian 斥資 9.75 億美元收購 Loom]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>總部位於澳大利亞的項目管理軟件提供商 Atlassian 宣佈計劃以近 10 億美元的價格（9.75 億美元）收購位於美國視頻消息平台 Loom。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1013/120339_F5Rb_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>兩家公司表示，此次收購將幫助 Atlassian 提高其項目管理工具中的協作能力，並讓用戶輕鬆地將視頻工作整合到他們現有的工作流程中。</p><p>在收購之前，Atlassian 是 Loom 企業級視頻平台的一個客戶。Loom 的其他知名客戶包括亞馬遜、蘋果、高盛和瞻博網絡等。</p><p>總部位於美國舊金山的 Loom 提供了一個異步視頻消息傳遞工具，可幫助用戶通過即時共享的視頻進行通信。該公司成立於 2016 年，表示其 20 萬客戶每月創建近 500 萬個 Loom 視頻。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-04936b7f95652bdd5174348d632c84c4650.png" referrerpolicy="no-referrer"></p><p>Atlassian 表示，收購完成後 Loom 仍將作為獨立產品提供，並計劃將 Loom 整合到其全套項目管理工具中。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 04:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261584</guid>
            <link>https://www.oschina.net/news/261584</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AMD 宣佈收購開源公司 Nod.ai]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">AMD 正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.amd.com%2Fen%2Fnewsroom%2Fpress-releases%2F2023-10-10-amd-to-acquire-open-source-ai-software-expert-nod-.html" target="_blank">宣佈</a>簽署收購&nbsp;Nod.ai&nbsp;的最終協議，以擴展 AMD 公司的開放式人工智能軟件能力。Nod.ai&nbsp;成立於 2013 年，是一家專門針對高性能硬件優化人工智能軟件的初創公司，其整個團隊都將會在收購後加入 AMD。此次收購的具體財務條款並未披露。</span></p><p><span style="color:#000000">「Nod.ai 的加入將為 AMD 帶來一支經驗豐富的團隊，該團隊已開發出業界領先的軟件技術，可加速部署針對 AMD Instinct 數據中心加速器、Ryzen AI 處理器、EPYC 處理器、Versal SoC 和 Radeon&nbsp; GPU 進行優化的人工智能解決方案。該協議與以開放軟件生態系統為核心的 AMD AI 發展戰略高度一致，通過開發者工具、庫和模型降低了客戶的准入門檻。」</span></p><p><img height="292" src="https://oscimg.oschina.net/oscnet/up-319fab720109f98ce2dfe943a39a4ab0a70.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">外媒指出，對 Nod.ai 的收購表明，AMD 想在快速增長的人工智能芯片市場中佔據一席之地。據行業分析師稱，到 2032 年，該市場規模將達到 3837 億美元。</span></p><p style="text-align:start"><span><span><span><span><span><span style="color:#1a202c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>AMD 人工智能事業部高級副總裁 Vamsi Boppana 表示，此次收購預計將顯着增強 AMD 為 AI 客戶提供開放軟件的能力，使他們能夠輕鬆部署針對 AMD 硬件調整的高性能 AI 模型。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span style="color:#1a202c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>「收購 Nod.ai 預計將顯着增強我們為人工智能客戶提供開放軟件的能力，使他們能夠輕鬆部署針對 AMD 硬件調整的高性能人工智能模型。」</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span><span><span style="color:#1a202c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>除了技術之外，AMD 還表示希望利用 Nod.ai 的工程人才來提高其在開源社區和開源開發者羣體內的信譽。Nod.ai 是許多研究人員使用的 SHARK 和 Torch-MLIR 等人工智能軟件庫的主要貢獻方。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span><span><span style="color:#1a202c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>近年來，AMD 一直在大力投資人工智能技術，如 CDNA、XDNA、RDNA 和 Zen 架構，以便在快速增長的人工智能市場上與 Nvidia 和英特爾等競爭對手展開競爭。相關行業報告指出，到 2032 年，全球人工智能市場規模預計將達到約 5940 億美元。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 03:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261416/amd-to-acquire-open-source-nod-ai</guid>
            <link>https://www.oschina.net/news/261416/amd-to-acquire-open-source-nod-ai</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2026 年將有 80% 的企業將採用 GenAI，增長 16 倍]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Gartner 最新發布的一份</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gartner.com%2Fen%2Fnewsroom%2Fpress-releases%2F2023-10-11-gartner-says-more-than-80-percent-of-enterprises-will-have-used-generative-ai-apis-or-deployed-generative-ai-enabled-applications-by-2026" target="_blank">報告</a><span style="color:#000000">指出，<span style="background-color:#ffffff">預測到 2026 年，超過 80% 的企業將使用生成式人工智能 (GenAI) 應用程序編程接口 (API) 或模型，和/或在生產環境中部署支持 GenAI 的應用程序。而在 2023 年，這一比例還不到 5%；這</span>意味着在短短三年內，採用或創建生成式 AI 模型的企業數量將增長 16 倍。</span></p><p><span style="color:#000000">Gartner 傑出副總裁分析師 Arun Chandrasekaran 稱，「生成式 AI 已成為企業管理層的首要任務，並引發了基礎模型之外的新工具的巨大創新。<span style="background-color:#ffffff">醫療保健、生命科學、法律、金融服務和公共部門等許多行業對生成式人工智能的需求正在不斷增加。</span>」</span></p><p><span style="color:#000000">該公司預計將在未來十年對組織產生巨大影響的<span style="background-color:#ffffff">三項創新</span>包括：</span><span style="background-color:#ffffff; color:#000000">支持 GenAI 的應用程序，基礎模型以及 AI 信任、風險和安全管理 (AI TRiSM)</span><span style="color:#000000">。</span></p><p><span style="color:#000000"><img alt="" height="312" src="https://oscimg.oschina.net/oscnet/up-121558672e450fdd70a9ec035bdf56bf188.png" width="500" referrerpolicy="no-referrer"></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">支持 GenAI 的應用程序使用&nbsp;GenAI 來實現用戶體驗 (UX) 和任務增強，以加速和協助完成用戶期望的結果。組織可以採用這些應用程序來促進員工的內部工作或為客戶提供體驗，從而改善他們的服務和客戶體驗。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">Chandrasekaran 在報告中表示：「當今 GenAI 嵌入式功能最常見的模式是文本到 X，它通過使用自然語言進行快速工程，使工作人員能夠民主地完成過去的專門任務。<span style="background-color:#ffffff">然而，這些應用程序仍然存在諸如幻覺和不準確等障礙，可能會限制廣泛的影響和採用。</span>」&nbsp;</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">基礎模型是指生成式 AI 應用程序的機器學習模型，例如&nbsp;GPT&nbsp;與 ChatGPT 的關係。&nbsp;這些基礎模型經過大量數據的訓練，用於支持可以完成各種任務的不同應用程序。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">基礎模型正處於技術成熟度曲線上預期膨脹的頂峯。Gartner 預測，到 2027 年，基礎模型將支撐 60% 的自然語言處理 (NLP) 用例，相較 2021 年的不到 5% 實現了大幅增長。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">AI TRiSM 是指能夠解決生成式 AI 模型相關問題並確保其成功部署的一組解決方案。&nbsp;<span style="background-color:#ffffff">AI TRiSM 確保 AI 模型治理、可信性、公平性、可靠性、穩健性、有效性和數據保護。AI TRiSM 包括模型可解釋性和可解釋性、數據和內容異常檢測、AI 數據保護、模型操作和對抗攻擊抵抗的解決方案和技術。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">AI TRiSM 是提供負責任的人工智能的重要框架，Gartner 預計其將在兩到五年內獲得主流採用。到 2026 年，將 AI 透明度、信任和安全性付諸實施的組織，其 AI 模型在採用率、業務目標和用戶接受度方面將提高 50%。</span></p><p><span style="color:#000000">更多詳情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gartner.com%2Fen%2Fnewsroom%2Fpress-releases%2F2023-10-11-gartner-says-more-than-80-percent-of-enterprises-will-have-used-generative-ai-apis-or-deployed-generative-ai-enabled-applications-by-2026" target="_blank">查看官方公告</a><span style="color:#000000">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 03:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261579/80-of-enterprises-generative-ai-2026</guid>
            <link>https://www.oschina.net/news/261579/80-of-enterprises-generative-ai-2026</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ubuntu 23.10 發版插曲：因包含仇恨言論，ISO 鏡像被緊急「召回」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Ubuntu 23.10 正式版今天發佈不久後，其桌面安裝程序 UI 的一組特定翻譯中<strong>被發現來自惡意貢獻者的仇恨言論</strong>。</p><blockquote><p><img alt="" src="https://static.oschina.net/uploads/space/2023/1013/110402_tO2M_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p><em>via&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fubuntu%2Fstatus%2F1712593893319930079" target="_blank">https://twitter.com/ubuntu/status/1712593893319930079</a></em></p><p>Canonical 官方知釋後立馬<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.ubuntu.com%2Ft%2Fannouncement-ubuntu-desktop-23-10-release-image-is-being-updated-to-resolve-a-malicious-translation-incident%2F39365" target="_blank">「召回」</a>已發佈的 ISO 鏡像，並表示待修正完成後再上架新的鏡像。被刪除的受影響鏡像包括 <strong>Ubuntu Desktop 23.10、Ubuntu Budgie 23.10 和 Ubuntu Desktop 每日構建</strong>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1013/113359_1piA_2720166.png" referrerpolicy="no-referrer"></p><p>官方表示，此事件僅影響桌面安裝程序中的一組翻譯，系統和數據不會受到影響。如果是從舊版本升級到 Ubuntu 23.10，沒有采用全新安裝，同樣不會受到影響。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 03:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261578/ubuntu-23-10-recalled</guid>
            <link>https://www.oschina.net/news/261578/ubuntu-23-10-recalled</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Raspberry Pi OS 發佈更新：放棄 X.org，採用 Wayland]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Raspberry Pi OS（前身為 Raspbian）是基於 Debian GNU/Linux 的自由操作系統，針對 Raspberry Pi 硬件進行了優化。</p><p>該項目的最新版本 Raspberry Pi OS 2023-10-10 基於 Debian 12 "Bookworm" 構建，<strong>將圖形接口從 X11/X.Org 會話遷移到 Wayland</strong>。Raspberry Pi OS 現在<strong>使用 Wayfire 作為輕量級 Raspberry Pi OS 桌面的 Wayland 合成器</strong>。</p><p>樹莓派官方稱基於 Wayland 的新桌面環境可以為 Raspberry Pi 4 和 5 的設備提供更好的性能、更好的系統安全性以及良好的體驗。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8faa68f5d51d90bf899bf805823647a188e.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c093a2d80e641bb6ec015ea0bd695afde59.png" referrerpolicy="no-referrer"></p><p>新版本的另一個重大變化是默認<strong>使用 PipeWire 進行音頻處理</strong>。其他變化包括 Mozilla Firefox 瀏覽器的 Raspberry Pi 優化版本、網絡增強功能以​​及各種其他更改。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.raspberrypi.com%2Fnews%2Fbookworm-the-new-version-of-raspberry-pi-os%2F" target="_blank">詳情查看發佈公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 02:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261409/raspberry-pi-os-2023-10-10</guid>
            <link>https://www.oschina.net/news/261409/raspberry-pi-os-2023-10-10</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[更穩定高效、更廣泛兼容，openKylin Wayland SIG 成功研發 wlcom 合成器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0"><strong>近日，openKylin 社區 Wayland SIG 成功研發了基於 wayland 協議的合成器 Kylin wayland-compositor（簡稱 wlcom），實現了操作系統圖形棧底層核心子系統的進一步突破。</strong></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-6de842b2f992f25b078f771458805b5ab4f.png" referrerpolicy="no-referrer"></p><p><span>圖形顯示系統是人機交互的核心模塊，目前廣泛使用的 X-Window(也常稱為 X 或 X11) 顯示系統，最初由麻省理工學院 1984 年研發，歷經近 40 年的修補與擴展，代碼量龐大，維護困難，設計也已略顯「陳舊」。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>X 顯示系統中窗管與合成器是兩個獨立組件，通信開銷大，且存在窗口內容與合成器不同步的問題，容易造成圖像撕裂；X 客戶端可篡改其他 X 客戶端窗口屬性及顯示內容，安全性不強；合成管理器必須主動向 X 顯示服務獲取所有客戶端圖像數據進行圖像合成，導致圖像顯示延遲風險增加。</span></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b1bc0c4843a031812f77b3b19a1435688d9.jpg" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>針對 X 中的上述缺陷，開源社區於 2008 提出了替代方案—wayland 顯示服務器協議。該協議下，wayland 合成器與 wayland 顯示服務合為一個整體組件，通信開銷低；客戶端之間的輸入和輸出隔離，提高了客戶端的安全性；客戶端頁面刷新時，合成器只處理數據有更新的區域，提高了顯示合成效率。</span></p><p style="margin-left:0; margin-right:0"><span>鑑於 wayland 相對 X 的巨大優勢，目前國際通用 linux 發行版本已經把 wayland 合成器作為默認的顯示服務器。但目前社區開源 wayland 合成器在兼容性及穩定性方面存在不足。一方面大多數基於 X 協議編寫的遊戲、圖形密集型等專業應用程序在 wayland 環境上兼容性較差，同時 wayland 各桌面環境定義了大量的私有協議，協議擴展難；另外，雖然 wayland 項目已經進行了十餘年，在使用上仍然不夠穩定，存在各種問題。</span></p><p style="margin-left:0; margin-right:0"><span>為解決上述問題，openKylin 社區 Wayland SIG 基於 wlroots 研發了 wayland 合成器—wlcom，其整體框架如下圖所示：</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="" height="1436" src="https://oscimg.oschina.net/oscnet/up-da45eed01db37e0cbf10899b2f3466d440a.jpg" width="2012" referrerpolicy="no-referrer"></p><p><span><span>目前，wlcom 已基本完成與 UKUI 核心組件融合，適配兼容主流媒體類、社交類、辦公類等 X 應用。關於 wlcom 更多細節，敬請關注 openKylin 公眾號。</span></span></p><p><strong>關於 Wayland SIG</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>openKylin Wayland SIG 小組由麒麟軟件有限公司發起成立，致力於新一代圖形顯示服務器相關技術研究，包括 wayland 合成器、X 兼容等，提供 wayland 相關軟件包的技術規劃、設計、開發、維護和升級服務，共同推動新一代圖形服務器技術發展及落地。</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">郵件列表：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff">wayland@lists.openkylin.top</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">SIG 主頁：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/Wayland</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 01:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261552</guid>
            <link>https://www.oschina.net/news/261552</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[KCL 社區開源雙週報 | 更多 Kubernetes 模型和 IDE 插件功能支持!]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/751c1f01c30049ae95a0ed823adca32b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1127&amp;h=435&amp;s=19510&amp;e=png&amp;a=1&amp;b=cee5bf" referrerpolicy="no-referrer"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang" target="_blank">KCL</a> 是一個開源的基於約束的記錄及函數語言並通過成熟的編程語言技術和實踐來改進對大量繁雜配置比如雲原生 Kubernetes 配置場景的編寫，致力於構建圍繞配置的更好的模塊化、擴展性和穩定性，更簡單的邏輯編寫，以及更簡單的自動化和生態工具集成。</p><p>本欄目將會雙週更新 KCL 語言社區最新動態，包括功能、官網更新和最新的社區動態等，幫助大家更好地瞭解 KCL 社區！</p><p><em><strong>KCL 官網：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2F" target="_blank">https://kcl-lang.io</a></strong></em></p><h2>內容概述</h2><p>感謝所有貢獻者過去兩週 (2023 09.07 - 10.11) 的傑出工作，以下是重點合併內容概述</p><p><strong>🔧 語言及工具鏈更新</strong></p><ul><li>KCL v0.6.0 於 9.15 發佈，更新內容包括語言、工具鏈、社區集成，詳細內容請查看 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Ff6RCZqxS2iliRGIz0036yA" target="_blank">https://mp.weixin.qq.com/s/f6RCZqxS2iliRGIz0036yA</a></li><li>KCL IDE 更新 - 支持對標準庫和內置函數的懸停提示，支持對 KCL 代碼錯誤的快速修復；發佈適配 Intellij IDEA 2023.2 的插件版本</li><li>KCL 包管理工具 KPM 更新 - kpm run 支持編譯 KCL 文件，並集成了導入工具</li><li>KCL 文檔工具更新 - 支持將 docstring Examples 章節輸出到文檔</li><li>KCL 語言更新 - 優化了一些錯誤信息的輸出，部分的錯誤信息中增加了修復建議</li></ul><p><strong>📰 官網和用例更新</strong></p><ul><li>KCL 官網新增 v0.6.0 文檔版本</li><li>KCL 模型新增容器、服務和 Pod Security Policy (PSP) 相關的配置編輯、校驗 20 個 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkrm-kcl%2Ftree%2Fmain%2Fexamples" target="_blank">https://github.com/kcl-lang/krm-kcl/tree/main/examples</a></li></ul><h2>特別鳴謝</h2><p>以下排名不分先後</p><ul><li>感謝 @jakezhu9 對 KCL Import 工具 Terraform Schema 到 KCL Schema 轉換的貢獻 🙌 <em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl-go%2Fpull%2F152" target="_blank">https://github.com/kcl-lang/kcl-go/pull/152</a></em></li><li>感謝 @jakezhu9 對 kpm 集成 Import 工具的貢獻 🙌 <em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkpm%2Fpull%2F194" target="_blank">https://github.com/kcl-lang/kpm/pull/194</a></em></li><li>感謝 @zwpaper 對 KCL 文檔和 Tree Sitter Grammar 做出的貢獻 🙌 <em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Ftree-sitter-kcl%2Fpull%2F1" target="_blank">https://github.com/kcl-lang/tree-sitter-kcl/pull/1</a></em> 等</li><li>感謝 @mrgleeco, @ghpu, @steeling, @prahaladramji, @zwpaper 等在使用 KCL 及工具鏈過程中提出的寶貴反饋和討論 🙌</li></ul><h2>精選更新</h2><h3>KCL IDE 插件更新</h3><p>在最近的 0.6.0 發佈中，KCL IDE 插件增加了標準庫和 builtin 函數的懸停提示，新增支持對 KCL 代碼錯誤的快速修復。此外，還增加了 language Server 側的 e2e 測試及 konfig 倉庫的集成測試，以保障 IDE 插件的穩定迭代。在尚未發佈的版本中，還新增了 <code>kcl-language-server version</code> 子命令以輸出版本信息。歡迎升級、使用 —— KCL 在各個 IDE 平台的插件安裝方式請查看<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fdocs%2Fuser_docs%2Fgetting-started%2Finstall%2F%232-install-kcl-ide-extension" target="_blank">https://kcl-lang.io/docs/user_docs/getting-started/install/#2-install-kcl-ide-extension</a></p><p>&nbsp;</p><h4>IntelliJ 插件</h4><ul><li>IntelliJ 插件現已適配 2023.2+ 版本，您可以在下面的鏈接中下載安裝：</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fintellij-kcl%2Freleases" target="_blank">https://github.com/kcl-lang/intellij-kcl/releases</a></p><h3>KCL 包管理工具</h3><p>kpm run 支持編譯 KCL 文件，並集成了導入工具，同時增加了 —quiet 來屏蔽輸出日誌。</p><p><img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/531a6725e8f740229e9337fccf6933d3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1136&amp;h=816&amp;s=91588&amp;e=png&amp;b=faf9f9" referrerpolicy="no-referrer"></p><h3>KCL 語言更新</h3><p>在尚未發佈的版本中，KCL 的編譯命令優化了一些錯誤信息的輸出，部分的錯誤信息中增加了修復建議： <img alt="" src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9bf254b8f62241fc877c8bb4ffba9807~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1642&amp;h=190&amp;s=99725&amp;e=png&amp;b=fefefe" referrerpolicy="no-referrer"></p><h3>KCL 模型更新</h3><p>近幾周內，我們提供了更多針對容器、服務和 Pod Security Policy (PSP) 配置編輯及校驗的使用案例。您可參照對應的示例引入以上配置和校驗： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkrm-kcl%2Ftree%2Fmain%2Fexamples" target="_blank">https://github.com/kcl-lang/krm-kcl/tree/main/examples</a></p><p>下面我們以 Kubectl KCL 插件和 disallow-svc-lb 模型進行説明，disallow-svc-lb 的作用是對 Service 資源進行校驗，不允許 Service 資源的類型設置為 <code>LoadBalancer</code>，編寫如下 YAML 文件 (manifests.yaml)：</p><pre><code>apiVersion: krm.kcl.dev/v1alpha1
kind: KCLRun
metadata:
  name: disallow-svc-lb
  annotations: 
    krm.kcl.dev/version: 0.0.1
    krm.kcl.dev/type: validation
    documentation: &gt;-
      A validation that prevents the creation of Service resources of type `LoadBalancer`
spec:
  source: oci://ghcr.io/kcl-lang/disallow-svc-lb
---
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app.kubernetes.io/name: MyApp
  ports:
    - name: http
      protocol: TCP
      port: 80
  type: LoadBalancer # 錯誤地設置了 LoadBalancer
</code></pre><p>通過 Kubectl KCL 工具在客戶端進行資源驗證：</p><pre><code>kubectl kcl apply -f manifests.yaml
</code></pre><p>我們會得到如下結果：</p><pre><code>A validation that prevents the creation of Service resources of type `LoadBalancer`, for Service: my-service
</code></pre><h3>社區動態</h3><p>集成了 KCL 0.6 的 KusionStack 發佈 0.9 版本，詳細更新內容請查看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FnZOHdmgcfOMRf0XUXfSJ-g" target="_blank">https://mp.weixin.qq.com/s/nZOHdmgcfOMRf0XUXfSJ-g</a></p><h3>活動預告</h3><h4>KCD 杭州站 10.21 日線下活動</h4><p>Kubernetes Community Days（KCD）杭州站將於 10.21 舉行線下活動，活動詳情及報名：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FrnNhmT4yoO66bGYNtFtG6g" target="_blank">https://mp.weixin.qq.com/s/rnNhmT4yoO66bGYNtFtG6g</a></p><h4>KCL 開源雙週會</h4><p>近期 KCL 開源雙週會將於 10.12 進行，歡迎社區小夥伴踴躍參與、交流：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fcommunity%2Fdiscussions%2F8" target="_blank">https://github.com/kcl-lang/community/discussions/8</a></p><p>點擊鏈接入會，或添加至會議列表： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmeeting.tencent.com%2Fdm%2FHc6sNpqTWnPb" target="_blank">https://meeting.tencent.com/dm/Hc6sNpqTWnPb</a></p><p>#騰訊會議：778-2381-6338</p><p>複製該信息，打開手機騰訊會議即可參與</p><h2>其他資源</h2><p>❤️ 感謝所有 KCL 用戶和社區小夥伴在社區中提出的寶貴反饋與建議。預計 11 月底我們會正式發佈 KCL v0.7 新版本，敬請期待!</p><p>更多其他資源請參考：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2F" target="_blank">KCL 網站</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkusionstack.io%2F" target="_blank">KusionStack 網站</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fkcl-lang.io%2Fdocs%2Fcommunity%2Frelease-policy%2Froadmap" target="_blank">KCL 2023 路線規劃</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Fmilestone%2F7" target="_blank">KCL v0.7.0 Milestone</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fkcl%2Fissues" target="_blank">KCL Github Issues</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Forgs%2Fkcl-lang%2Fdiscussions" target="_blank">KCL Github Discussion</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkcl-lang%2Fcommunity" target="_blank">KCL Community</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 12:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261492</guid>
            <link>https://www.oschina.net/news/261492</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中興通訊「星雲研發大模型」：AI 編程助手、1000 億 token]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2023 年 10 月 11 日-13 日，在中國移動全球合作伙伴大會舉辦期間，中興通訊「星雲研發大模型」亮相，<strong>旨在輔助開發人員進行需求分析、產品設計、編程、測試、版本部署等</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0ea8f6611738c94f383a5186925f9339ae3.png" referrerpolicy="no-referrer"></p><p>據介紹，<strong>「星雲研發大模型」支持白名單機制有效控制使用範圍</strong>，以及代碼特徵值識別有效識別敏感代碼片段、敏感詞識別機制可實時監測並攔截敏感內容，還有後台審計機制可完整回溯安全事件等。</p><p>中興通訊表示，2023 年 4 月，「星雲研發大模型」使用啓動，截至目前，<strong>日活人數達 1.2 萬人，&nbsp;代碼採納率達 40%~45%，編碼提效 30%，整體研發提效 10%</strong>。</p><p>中興通訊將領域數據、Know-How 知識積累、數十萬篇通信領域技術文檔和<strong>1000 億 token</strong>的無線 / 核心網 / 雲代碼語料等注入大模型，進行增量預訓練，使用並行訓練框架。</p><p>中興通訊稱：「自研部署方案使用動態 batch 策略、PagedAttention 技術，結合無損模型量化，吞吐量大幅提升，<strong>單 GPU（A800）達到 1500tokens / s，僅使用 4 張 GPU 卡（A800）可滿足超千人使用需求</strong>。對比業界常規的部署方案，單 GPU 吞吐量分別提升 10 + 倍和 20 + 倍；結合 int4 量化技術，在模型精度不下降情況下，模型大小和顯存使用量均下降一半。」</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 09:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261477</guid>
            <link>https://www.oschina.net/news/261477</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源中國發布大模型技術圖譜（LLM Tech Map）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>LLM 技術圖譜 (LLM Tech Map) 是將 LLM 相關技術進行系統化和圖形化的呈現，此圖譜主要特點是「<strong>專注於技術人視角</strong>」，不求從 LLM 產業角度匯聚信息，而是希望讓從事相關工作或是想了解 LLM 的技術人有一個快速感知。</p><p><span style="color:#e67e22"><strong>核心價值：幫助技術人快速瞭解 LLM 的核心技術和關鍵方向。</strong></span></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-89419d5edbf373da239902e38c150921bc4.png" referrerpolicy="no-referrer"></p><p>LLM 技術圖譜（LLM Tech Map）從<strong>基礎設施</strong>、<strong>大模型</strong>、<strong>Agent</strong>、<strong>AI 編程</strong>、<strong>工具和平台</strong>，以及<strong>算力</strong>幾個方面，為開發者整理了當前 LLM 中最為熱門和硬核的技術領域以及相關的軟件產品和開源項目。</p><hr><h3>基礎設施</h3><p>LLM 技術圖譜（LLM Tech Map）的基礎設施部分主要包括以下幾個方面：</p><ul><li>向量數據庫：向量數據庫是專門用於存儲和檢索向量數據的數據庫，它可以為 LLM 提供高效的存儲和檢索能力。</li><li>數據庫向量支持：傳統數據庫通常不支持向量數據的存儲和檢索，數據庫向量支持可以為傳統數據庫添加向量數據的存儲和檢索能力。</li><li>大模型框架、微調 (Fine Tuning)：針對大模型的開發。</li><li>大模型訓練平台與工具</li></ul><h3>大模型</h3><p>LLM 技術圖譜（LLM Tech Map）的大模型部分主要包括以下幾個方面：</p><ul><li>備案上線的中國大模型：有牌照提供服務的大模型，需要注意的是大模型和相應的產品多半名稱不同。</li><li>知名大模型：在全球範圍內，已經發布了多款知名大模型，這些大模型在各個領域都取得了突破性的進展。</li><li>知名大模型應用：LLM 已經在多種應用場景中得到了應用，包括文本生成、機器翻譯、問答、自然語言推理等。</li></ul><h3>AI Agent（LLM Agent）</h3><p>LLM Agent 是指基於 LLM 技術構建的智能代理，它可以用於各種任務，比如讓機器與 ChatGPT 交互，一層一層挖掘信息，自動化完成任務；比如由機器人構成的虛擬小鎮。</p><h3>AI 編程</h3><p>讓 LLM 幫你編寫代碼。</p><h3>工具和平台</h3><p>LLM 技術圖譜（LLM Tech Map）的工具和平台部分主要包括以下幾個方面：</p><ul><li>LLMOps：簡單點説（大家當前在説的），就是「快速從大模型到應用」。</li><li>大模型聚合平台：匯聚大模型能力，提供服務。</li><li>開發工具：其它開發相關的 LLM 工具。</li></ul><h3>算力</h3><p>LLM 模型的訓練和部署需要大量的算力，算力是 LLM 技術發展的關鍵因素。</p><hr><p><strong>LLM Tech Map 已託管到 Gitee：<a href="https://gitee.com/oschina/llm-map" target="_blank">https://gitee.com/oschina/llm-map</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 09:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261467/oschina-llm-map</guid>
            <link>https://www.oschina.net/news/261467/oschina-llm-map</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SiFive 推出兩款新型高性能 RISC-V 處理器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">RISC-V 芯片廠商 SiFive <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sifive.com%2Fpress%2Fsifive-announces-differentiated-solutions-for-generative" target="_blank">宣佈</a>推出兩款新產品 SiFive Performance P870 CPU 和 SiFive Intelligence X390，主要面向高性能計算和 AI/ML 應用。</span></p><p style="text-align:start"><span style="color:#000000">SiFive Performance P870 和 SiFive Intelligence X390 提供低功耗、計算密度和矢量計算能力，旨在為消費電子、汽車技術和基礎設施領域的數據密集型計算應用程序提供顯着的性能提升。</span></p><p style="text-align:start"><span style="color:#000000">SiFive 高管強調了該公司致力於推動高性能 RISC-V 創新並縮小與其他指令集架構的差距。並表示，消費電子和基礎設施等領域對半導體的需求不斷增長，推動了 RISC-V 生態系統的快速擴張。</span></p><p style="text-align:start"><img height="265" src="https://oscimg.oschina.net/oscnet/up-f6db62d251fa51cb784cdb2fef741ac53e2.png" width="500" referrerpolicy="no-referrer"></p><p style="text-align:start"><img height="254" src="https://oscimg.oschina.net/oscnet/up-44006158dd13e95de661c64ecf3bb99eddc.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff"><strong>SiFive </strong></span><strong>Performance</strong><span style="background-color:#ffffff"><strong> P870</strong></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">P870 </span>專為高性能消費類應用而設計，也可與數據中心的矢量處理器一起使用。<span style="background-color:#ffffff">在指令集架構可用性、吞吐量、並行性和內存帶寬方面</span>為 RISC-V 性能樹立了新標準。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">P870 具有一個&nbsp;</span></span><span style="background-color:#ffffff; color:#000000">6 發射亂序執行核心</span><span style="color:#000000"><span style="background-color:#ffffff">和一個共享集羣高速緩存。與上一代 SiFive 性能處理器相比，P870 峯值單線程性能提升了 50% (specINT2k6)，最多可支持 32 </span>核集羣<span style="background-color:#ffffff">。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">此外，P870 完全兼容 Google 對 RISC-V 上 Android 的平台要求，還提供其他經過驗證的 SiFive 功能：</span>128b VLEN 長度的 RISC-V 矢量 (RVV)、矢量加密和 Hypervisor 擴展、IOMMU 和先進中斷架構 (AIA)、非包含性 (non-inclusive) 三級緩存、經過驗證的 RISC-V WorldGuard 安全設計。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff"><strong>SiFive </strong></span><strong>Intelligence&nbsp;</strong><span style="background-color:#ffffff"><strong>X390</strong></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">SiFive Intelligence X390 以其前身 SiFive Intelligence X280 為基礎，<span style="background-color:#ffffff">憑藉單核配置、雙倍矢量長度和雙矢量 ALU，將矢量計算性能提高了 4 倍，並將持續數據帶寬量增加了 4 倍。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">藉助 SiFive 矢量協處理器接口擴展 (VCIX)，公司可以輕鬆添加自己的矢量指令和/或加速硬件，並允許用戶通過自定義指令大幅提高性能。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">功能包括：1024 位 VLEN、512 位 DLEN、單/雙矢量 ALU、VCIX（2048 位輸出，1024 位輸入）。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">「<span style="background-color:#ffffff">將 P870 高性能通用計算 SoC 與由 X390 和客戶 AI 硬件引擎組成的高性能 NPU 集羣結合在一起，為產品設計人員提供高度靈活、低功耗和可編程的解決方案，併為複雜工作負載提供卓越的計算密度。</span>」</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">SiFive 強調了客戶對這些組合解決方案的濃厚興趣，並表示其中一些客戶使用高性能 SiFive 產品在芯片開發和商業化方面取得了成功。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 09:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261465/sifive-two-new-high-performance-risc-v-processors</guid>
            <link>https://www.oschina.net/news/261465/sifive-two-new-high-performance-risc-v-processors</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微軟稱黑客組織正在利用 Atlassian 新的 0day 漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2023%2F10%2F11%2Fchinese-state-hackers-atlassian-zero-day%2F" target="_blank">根據科技媒體 Techcrunch 報道</a>，微軟的威脅情報團隊在 X（前身為 Twitter）上發佈的帖子<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FMsftSecIntel%2Fstatus%2F1711871732644970856" target="_blank">表示</a>，它觀察到一個名為 Storm-0062 的黑客組織正在利用 Atlassian Confluence 數據中心和服務器中最近披露的一個關鍵缺陷。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/162312_aNLm_2720166.png" referrerpolicy="no-referrer"></p><p>Atlassian 在 10 月 4 日披露了其 Confluence 數據中心和服務器中的一個漏洞：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fconfluence.atlassian.com%2Fsecurity%2Fcve-2023-22515-privilege-escalation-vulnerability-in-confluence-data-center-and-server-1295682276.html" target="_blank">CVE-2023-22515</a>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/162610_P2fX_2720166.png" referrerpolicy="no-referrer"></p><p>微軟安全團隊表示，它從 9 月 14 日起就觀察到了漏洞利用。Atlassian 本週更新了安全通知，稱該漏洞正被活躍利用，並表示此漏洞可能允許遠程攻擊者<strong>創建未經授權的管理員帳戶來訪問 Confluence 服務器</strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 08:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261452/atlassian-zero-day</guid>
            <link>https://www.oschina.net/news/261452/atlassian-zero-day</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 高性能輕量級代理庫 ProxyDispatch]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-proxydispatch" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#proxydispatch"></a>ProxyDispatch</h1><p><a href="https://gitee.com/dotnetchina/ProxyDispatch/blob/master/LICENSE"><img src="https://img.shields.io/badge/license-MIT-orange?cacheSeconds=10800" alt="license" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FProxyDispatch"><img src="https://img.shields.io/nuget/v/ProxyDispatch.svg?cacheSeconds=10800" alt="nuget" referrerpolicy="no-referrer"></a><a href="https://gitee.com/dotnetchina"><img src="https://img.shields.io/badge/organization-dotNET%20China-yellow?cacheSeconds=10800" alt="dotNET China" referrerpolicy="no-referrer"></a></p><p>基於 DispatchProxy 和 Roslyn 實現的高性能輕量級代理庫，支持類、接口、同步方法、異步方法攔截。</p><h2><a id="user-content-安裝" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E5%AE%89%E8%A3%85"></a>安裝</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">dotnet</span><span class="w"></span><span class="nx">add</span><span class="w"></span><span class="nx">package</span><span class="w"></span><span class="nx">ProxyDispatch</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-快速入門" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8"></a>快速入門</h2><p>我們在<a href="https://gitee.com/link?target=https%3A%2F%2Ffurion.baiqian.ltd%2Fdocs%2Fjob%2F">主頁</a>上有不少例子，這是讓您入門的第一個：</p><ol><li>定義代理攔截器，並實現 <code>AspectDispatchProxy</code> 抽象方法：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">public</span><span class="k">class</span><span class="nc">YourClassProxy</span><span class="p">:</span><span class="n">AspectDispatchProxy</span></span><span id="LC2" class="line"><span class="p">{</span></span><span id="LC3" class="line"><span class="c1">// 攔截同步</span></span><span id="LC4" class="line"><span class="k">public</span><span class="k">override</span><span class="kt">object</span><span class="nf">Invoke</span><span class="p">(</span><span class="n">Invocation</span><span class="n">invocation</span><span class="p">)</span></span><span id="LC5" class="line"><span class="p">{</span></span><span id="LC6" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用同步方法：</span><span class="p">{</span><span class="n">invocation</span><span class="p">.</span><span class="n">Method</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC7" class="line"><span class="kt">var</span><span class="n">result</span><span class="p">=</span><span class="n">invocation</span><span class="p">.</span><span class="nf">Proceed</span><span class="p">();</span></span><span id="LC8" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用同步方法結束，返回值：</span><span class="p">{</span><span class="n">result</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC9" class="line"><span class="k">return</span><span class="n">result</span><span class="p">;</span></span><span id="LC10" class="line"><span class="p">}</span></span><span id="LC11" class="line"></span><span id="LC12" class="line"><span class="c1">// 攔截異步</span></span><span id="LC13" class="line"><span class="k">public</span><span class="k">override</span><span class="k">async</span><span class="n">Task</span><span class="nf">InvokeAsync</span><span class="p">(</span><span class="n">Invocation</span><span class="n">invocation</span><span class="p">)</span></span><span id="LC14" class="line"><span class="p">{</span></span><span id="LC15" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用異步 Task 方法：</span><span class="p">{</span><span class="n">invocation</span><span class="p">.</span><span class="n">Method</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC16" class="line"><span class="k">await</span><span class="n">invocation</span><span class="p">.</span><span class="nf">ProceedAsync</span><span class="p">();</span></span><span id="LC17" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"~~~調用異步 Task 方法結束"</span><span class="p">);</span></span><span id="LC18" class="line"><span class="p">}</span></span><span id="LC19" class="line"></span><span id="LC20" class="line"><span class="c1">// 攔截異步帶返回值</span></span><span id="LC21" class="line"><span class="k">public</span><span class="k">override</span><span class="k">async</span><span class="n">Task</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span><span class="n">InvokeAsync</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">Invocation</span><span class="n">invocation</span><span class="p">)</span></span><span id="LC22" class="line"><span class="p">{</span></span><span id="LC23" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用異步 Task&lt;T&gt; 方法：</span><span class="p">{</span><span class="n">invocation</span><span class="p">.</span><span class="n">Method</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC24" class="line"><span class="kt">var</span><span class="n">result</span><span class="p">=</span><span class="k">await</span><span class="n">invocation</span><span class="p">.</span><span class="n">ProceedAsync</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;();</span></span><span id="LC25" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~調用異步 Task&lt;T&gt; 方法結束，返回值：</span><span class="p">{</span><span class="n">result</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC26" class="line"><span class="k">return</span><span class="n">result</span><span class="p">;</span></span><span id="LC27" class="line"><span class="p">}</span></span><span id="LC28" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="2"><li>定義需要攔截的類和接口：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">public</span><span class="k">class</span><span class="nc">YourClass</span><span class="p">:</span><span class="n">IYourClass</span></span><span id="LC2" class="line"><span class="p">{</span></span><span id="LC3" class="line"><span class="c1">// 同步方法</span></span><span id="LC4" class="line"><span class="k">public</span><span class="kt">string</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="kt">string</span><span class="n">str</span><span class="p">)</span></span><span id="LC5" class="line"><span class="p">{</span></span><span id="LC6" class="line"><span class="k">return</span><span class="n">str</span><span class="p">;</span></span><span id="LC7" class="line"><span class="p">}</span></span><span id="LC8" class="line"></span><span id="LC9" class="line"><span class="c1">// 異步方法</span></span><span id="LC10" class="line"><span class="k">public</span><span class="k">async</span><span class="n">Task</span><span class="nf">AsyncMethod</span><span class="p">()</span></span><span id="LC11" class="line"><span class="p">{</span></span><span id="LC12" class="line"><span class="k">await</span><span class="n">Task</span><span class="p">.</span><span class="n">CompletedTask</span><span class="p">;</span></span><span id="LC13" class="line"><span class="p">}</span></span><span id="LC14" class="line"></span><span id="LC15" class="line"><span class="c1">// 異步方法帶返回值</span></span><span id="LC16" class="line"><span class="k">public</span><span class="k">async</span><span class="n">Task</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="kt">int</span><span class="n">num</span><span class="p">)</span></span><span id="LC17" class="line"><span class="p">{</span></span><span id="LC18" class="line"><span class="k">await</span><span class="n">Task</span><span class="p">.</span><span class="nf">Delay</span><span class="p">(</span><span class="m">10</span><span class="p">);</span></span><span id="LC19" class="line"><span class="k">return</span><span class="n">num</span><span class="p">+</span><span class="m">100</span><span class="p">;</span></span><span id="LC20" class="line"><span class="p">}</span></span><span id="LC21" class="line"></span><span id="LC22" class="line"><span class="c1">// 泛型方法</span></span><span id="LC23" class="line"><span class="k">public</span><span class="n">T</span><span class="n">GenericMethod</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">T</span><span class="n">x</span><span class="p">)</span></span><span id="LC24" class="line"><span class="p">{</span></span><span id="LC25" class="line"><span class="k">return</span><span class="n">x</span><span class="p">;</span></span><span id="LC26" class="line"><span class="p">}</span></span><span id="LC27" class="line"><span class="p">}</span></span><span id="LC28" class="line"></span><span id="LC29" class="line"><span class="k">public</span><span class="k">interface</span><span class="nc">IYourClass</span></span><span id="LC30" class="line"><span class="p">{</span></span><span id="LC31" class="line"><span class="c1">// 同步方法</span></span><span id="LC32" class="line"><span class="kt">string</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="kt">string</span><span class="n">str</span><span class="p">);</span></span><span id="LC33" class="line"></span><span id="LC34" class="line"><span class="c1">// 異步方法</span></span><span id="LC35" class="line"><span class="n">Task</span><span class="nf">AsyncMethod</span><span class="p">();</span></span><span id="LC36" class="line"></span><span id="LC37" class="line"><span class="c1">// 異步方法帶返回值</span></span><span id="LC38" class="line"><span class="n">Task</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="kt">int</span><span class="n">num</span><span class="p">);</span></span><span id="LC39" class="line"></span><span id="LC40" class="line"><span class="c1">// 泛型方法</span></span><span id="LC41" class="line"><span class="n">T</span><span class="n">GenericMethod</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">T</span><span class="n">x</span><span class="p">);</span></span><span id="LC42" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="3"><li>創建攔截代理對象：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 創建攔截對象</span></span><span id="LC2" class="line"><span class="kt">var</span><span class="n">yourClass</span><span class="p">=</span><span class="n">AspectDispatchProxy</span><span class="p">.</span><span class="n">Decorate</span><span class="p">&lt;</span><span class="n">IYourClass</span><span class="p">,</span><span class="n">YourClassProxy</span><span class="p">&gt;(</span><span class="k">new</span><span class="nf">YourClass</span><span class="p">());</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="n">yourClass</span><span class="p">.</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="s">"百小僧"</span><span class="p">);</span></span><span id="LC5" class="line"><span class="k">await</span><span class="n">yourClass</span><span class="p">.</span><span class="nf">AsyncMethod</span><span class="p">();</span></span><span id="LC6" class="line"><span class="k">await</span><span class="n">yourClass</span><span class="p">.</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="m">100</span><span class="p">);</span></span><span id="LC7" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"泛型方法 GenericMethod 調用，返回值："</span><span class="p">+</span><span class="n">yourClass</span><span class="p">.</span><span class="nf">GenericMethod</span><span class="p">(</span><span class="s">"Furion"</span><span class="p">));</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>輸出如下：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">~~~調用同步方法：System.String SyncMethod<span class="o">(</span>System.String<span class="o">)</span></span><span id="LC2" class="line">~~~調用同步方法結束，返回值：百小僧</span><span id="LC3" class="line">~~~調用異步 Task 方法：System.Threading.Tasks.Task AsyncMethod<span class="o">()</span></span><span id="LC4" class="line">~~~調用異步 Task 方法結束</span><span id="LC5" class="line">~~~調用異步 Task&lt;T&gt; 方法：System.Threading.Tasks.Task<span class="sb">`</span>1[System.Int32] AsyncMethodWithResult<span class="o">(</span>Int32<span class="o">)</span></span><span id="LC6" class="line">~~~調用異步 Task&lt;T&gt; 方法結束，返回值：200</span><span id="LC7" class="line">泛型方法 GenericMethod 調用，返回值：Furion</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="4"><li>還可以直接代理類，無需接口：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 創建攔截對象（無依賴接口）</span></span><span id="LC2" class="line"><span class="kt">var</span><span class="n">yourClassNoInterface</span><span class="p">=</span><span class="n">AspectDispatchProxy</span><span class="p">.</span><span class="n">DecorateClass</span><span class="p">&lt;</span><span class="n">YourClass</span><span class="p">,</span><span class="n">YourClassProxy</span><span class="p">&gt;(</span><span class="k">new</span><span class="nf">YourClass</span><span class="p">());</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="s">"百小僧"</span><span class="p">);</span></span><span id="LC5" class="line"><span class="k">await</span><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">AsyncMethod</span><span class="p">();</span></span><span id="LC6" class="line"><span class="k">await</span><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="m">100</span><span class="p">);</span></span><span id="LC7" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"泛型方法 GenericMethod 調用，返回值："</span><span class="p">+</span><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">GenericMethod</span><span class="p">(</span><span class="s">"Furion"</span><span class="p">));</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><a href="https://gitee.com/dotnetchina/ProxyDispatch">更多文檔</a></p><h2><a id="user-content-文檔" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E6%96%87%E6%A1%A3"></a>文檔</h2><p>您可以在<a href="https://gitee.com/dotnetchina/ProxyDispatch">主頁</a>找到 ProxyDispatch 文檔。</p><h2><a id="user-content-貢獻" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E8%B4%A1%E7%8C%AE"></a>貢獻</h2><p>該存儲庫的主要目的是繼續發展 ProxyDispatch 核心，使其更快、更易於使用。ProxyDispatch 的開發在 <a href="https://gitee.com/dotnetchina/ProxyDispatch">Gitee</a> 上公開進行，我們感謝社區貢獻錯誤修復和改進。</p><h2><a id="user-content-許可證" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E8%AE%B8%E5%8F%AF%E8%AF%81"></a>許可證</h2><p>ProxyDispatch 採用 <a href="https://gitee.com/dotnetchina/ProxyDispatch/blob/master/LICENSE">MIT</a> 開源許可證。</p>]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 08:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/dotnetchina/ProxyDispatch</guid>
            <link>https://gitee.com/dotnetchina/ProxyDispatch</link>
        </item>
        <item>
            <title>
                <![CDATA[23 歲博士生修復 Firefox 中的 22 年「幽靈老 Bug」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2002 年 6 月 2 日，<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D148624" target="_blank">Firefox 用戶報告了一個 bug</a></strong>：當鼠標懸浮在工具欄圖標上時會展示相關提示（該項特性名為 '<strong>Tooltips</strong>'）。如果此時將瀏覽器從前台切換到後台，該提示會仍然留在前台——就像幽靈一樣。而擺脫這一惱人提示的唯一方法是再次將瀏覽器從後台切換到前台，然後將鼠標從工具欄上移開。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/144535_rfv0_2720166.png" referrerpolicy="no-referrer"></p><p>該 bug 的具體復現如下圖所示：</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1072dc8473f17b2efeb96b6ea9187bc9c42.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e043a3cb01187401398a4118bd1e5ef854b.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-20a34ca97d7a8aa279fbc5404fabcda5e9c.png" referrerpolicy="no-referrer"></p></blockquote><p>22 年後 Mozilla 終於為 Firefox 修復了該 bug，對應的 Bugzilla 報告也終於關閉了。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D148624" target="_blank"><img src="https://static.oschina.net/uploads/space/2023/1012/143953_bmr4_2720166.png" referrerpolicy="no-referrer"></a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farstechnica.com%2Fgadgets%2F2023%2F10%2F22-year-old-firefox-tooltip-bug-fixed-in-a-few-lines-offering-hope-to-us-all%2F" target="_blank">根據科技媒體 arstechnica 的報道</a>，幫助修復該 bug 的是斯坦福大學的一年級電機工程博士生 Yifan Zhu，這也是他第一次向開源項目貢獻補丁。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/145359_cKbi_2720166.png" referrerpolicy="no-referrer"></p><p><em>▲&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffanzhuyifan.github.io%2F" target="_blank">https://fanzhuyifan.github.io/</a></em></p><p>Zhu 出生於 1999 年，也就是該 bug 首次報告三年之前。他是在 Linux 上使用郵件客戶端 Thunderbird 時首次遭遇該 bug，認為這個 bug 太惱人了。他試着報告該 bug，結果發現它已經存在了 22 年之久，至今還沒有修復，可能是因為它是一個小問題也不會導致崩潰處理的優先度不高。</p><p>畢竟這個 bug 僅僅影響到非常小區域的 UI，用戶順手就能臨時處理，而且有很多其他比它更嚴重的 bug 在排隊等待解決，所以這個 bug 就這樣變為了「陳年老 Bug」。</p><p>於是他決定自己來修復。他知道如何編程，也正好處於博士生開始前的暑假，<strong>但此前從未向開源項目貢獻代碼，也從未在 Firefox 之類的複雜項目上工作過</strong>。</p><p>雖然衝勁十足，但 Zhu 剛開始的修 bug 之路算不上順利。他先是在整個代碼庫裏搜索 '<strong>tooltip</strong>'，然後檢查可能存在錯誤的候選內容，並插入調試打印語句跟蹤執行。這樣的工作非常耗費時間。</p><p>不過正是通過這樣的「笨方法」，Zhu 最後定位到了問題所在。當鼠標懸浮在某個元素上時，一個計時器會啓動去顯示 tooltip，在鼠標移出事件後計時器將會取消。但使用快捷鍵切換窗口或虛擬桌面時，Firefox 沒有取消計時器。Zhu 遞交了補丁，<strong>讓 tooltip 的顯示基於 Firefox 失去焦點而不是鼠標離開應用</strong>。</p><p>幾個小時後，Zhu 收到 Mozilla 資深軟件工程師 Emilio Cobos Álvarez 的回覆，他幫助完善了 Zhu 的補丁並提交到代碼庫中，並表示 Zhu 的第一個 Firefox 補丁令人印象深刻。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 07:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261435/22-year-old-firefox-tooltip-bug-fixed</guid>
            <link>https://www.oschina.net/news/261435/22-year-old-firefox-tooltip-bug-fixed</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[億圖軟件加入 openKylin，助推社區辦公生態繁榮]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">近日，深圳市億圖軟件有限公司（以下簡稱「億圖軟件」）簽署 openKylin 社區 CLA（Contributor License Agreement 貢獻者許可協議），正式加入 openKylin 開源社區。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-716e50f9d07314848b1a3d9d05b3994296a.png" referrerpolicy="no-referrer"></p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">深圳市億圖軟件有限公司成立於 2014 年，自成立以來一直致力於繪圖創意軟件的研究和開發，憑藉多年在圖形可視化領域積累的經驗，億圖已經成為國內外專業的繪圖創意類軟件提供商。其主要產品包括億圖圖示 EdrawMax、億圖腦圖 MindMaster、項目管理軟件 EdrawProj、平面設計軟件菲果、組織架構圖軟件 OrgCharting。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">億圖軟件依託萬興科技集團成熟的產品研發體系，有效保障產品質量，打造出性能可靠、安全穩定的產品和服務方案。億圖圖示、億圖腦圖已獲得國家版權局頒發的軟件著作證書和第三方機構出具的質量測試報告，產品完成度和穩定性均得到良好驗證。</span></span></p><div><p style="text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-a599eea407fc47edf19092c1bf68e52ff54.png" width="940" referrerpolicy="no-referrer"></p></div><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">在加入 openKylin 社區後，億圖軟件與 openKylin 完成了億圖圖示和億圖腦圖兩款軟件的適配，並已上架至 openKylin 軟件商店，同時，億圖項目管理軟件也在適配中。後續，億圖軟件也將持續與 openKylin 社區在生態適配、社區活動、技術交流等方面開展合作，共同推動社區生態繁榮。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 06:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261428</guid>
            <link>https://www.oschina.net/news/261428</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wordpress.com 已支持 ActivityPub 協議]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>WordPress.com <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwordpress.com%2Fblog%2F2023%2F10%2F11%2Factivitypub%2F" target="_blank">發佈公告稱</a>已支持 ActivityPub 協議——正式連接「聯邦宇宙」 (fediverse)。</p><blockquote><p>聯邦宇宙由像 Mastodon 這樣的聯合平台組成，這些平台是由獨立網站或服務器組成的網絡，這些網站或服務器可以相互通信，同時仍然單獨運行。</p><p>這很像電子郵件，用戶可以向擁有不同服務（例如 Gmail、Yahoo 等）帳戶的用戶發送電子郵件，但所有這些都可以無縫交互。同樣，聯合平台使用戶能夠在統一網絡中跨不同服務關注、共享內容並與之交互。</p></blockquote><p>ActivityPub 是開源、去中心化的社交網絡協議，目前被 Mastodon、Pixelfed 和串流服務 PeerTube 等應用使用。它提供了一個客戶端到服務器的 API 用於<strong>創建、更新和刪除內容</strong>，以及一個<strong>聯邦制的服務器到服務器 API</strong>用於<strong>傳遞通知和訂閲內容</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1545cdc089c2b02c28421e95ec08dc9554e.png" referrerpolicy="no-referrer"></p><p>▲ ActivityPub 運行原理</p><p>半年前，WordPress 母公司已經收購了 WordPress 插件&nbsp;<a href="https://www.oschina.net/news/232623/automattic-acquires-activitypub" target="_blank">ActivityPub </a>，它用於博客與許多聯合平台（包括 Mastodon、Pleroma、Friendica 等）之間的無縫集成。該插件使博客讀者能夠在這些平台上關注博主文章。</p><p><img src="https://oscimg.oschina.net/oscnet/up-043b7e29824014e389a49fff34ba108e388.png" referrerpolicy="no-referrer"></p><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwordpress.com%2Fblog%2F2023%2F10%2F11%2Factivitypub%2F" target="_blank">點此查看在 Wordpress.com 使用 ActivityPub 的具體教程</a></strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 03:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261413/wordpress-activitypub</guid>
            <link>https://www.oschina.net/news/261413/wordpress-activitypub</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PgHero —— PostgreSQL 性能儀錶板]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:start">pghero&nbsp;是一個&nbsp;<span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Postgres 的性能儀錶板。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><a href="https://pghero.dokkuapp.com/">查看實際效果</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" height="294" src="https://static.oschina.net/uploads/space/2023/0912/163042_vtOX_4252687.png" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>PgHero 可作為 Docker </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#1f2328">image</span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>、Linux 軟件包和 Rails 引擎使用。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>選擇你喜歡的安裝方法即可開始。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><a href="https://github.com/ankane/pghero/blob/master/guides/Docker.md">Docker</a></li><li><a href="https://github.com/ankane/pghero/blob/master/guides/Linux.md">Linux</a></li><li><a href="https://github.com/ankane/pghero/blob/master/guides/Rails.md">Rails</a></li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Tue, 10 Oct 2023 08:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/pghero</guid>
            <link>https://www.oschina.net/p/pghero</link>
        </item>
    </channel>
</rss>
