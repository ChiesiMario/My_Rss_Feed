<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 03 Nov 2023 07:22:23 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[【SIG 月報】10 月 openKylin 社區 SIG 組最新進展分享]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">為推動社區繁榮發展，打造開源操作系統創新生態，openKylin 社區圍繞創新硬件、人機交互、智能支撐、終端安全、互聯協同、雲端融合等多個技術領域，以技術小組的形式開展深入研究和技術創新。接下來，讓我們一起盤點 10 月份 openKylin 社區 SIG 組的最新進展：</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">10 月社區新增 SIG</span></span></strong></span></p><p>10 月社區新增 4 個 SIG 組，目前已累計成立 90 個 SIG 組，新增 SIG 組信息如下：</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong><span style="color:#ff9b0e"><span style="background-color:#f5faff">01</span></span><span style="color:#1c9cee"><span style="background-color:#f5faff">H2CHAIN SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000"><span style="background-color:#f5faff">H2CHAIN 由華夏好瑞（天津）科技有限公司發起成立。H2CHAIN（海河信創鏈）致力於搭建大規模異構區塊鏈互通互聯的高性能平台，豐富 openKylin 區塊鏈應用場景。</span></span></span></p><ul><li><span><span style="color:#000000">SIG 主頁：</span></span></li><li><span><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/H2CHAIN</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong><span style="color:#ff9b0e"><span style="background-color:#f5faff">02</span></span><span style="color:#1c9cee"><span style="background-color:#f5faff">Cinnamon SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000"><span style="background-color:#f5faff">Cinnamon 是一個易上手的，高度可定製的桌面環境，深受 Linux 愛好者喜愛。Cinnamon SIG 組由社區愛好者發起成立，負責移植 Cinnamon 桌面環境，讓其在 openKylin 擁有完美的體驗。</span></span></span></p><ul><li><span><span style="color:#000000">SIG 主頁：</span></span></li><li><span><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/Cinnamon</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong><span style="color:#ff9b0e"><span style="background-color:#f5faff">03</span></span><span style="color:#1c9cee"><span style="background-color:#f5faff">LXQt SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000"><span style="background-color:#f5faff">LXQt 是一個輕量級的桌面環境，使用 Qt 作為圖形界面庫，支持多種窗口管理器，如 Openbox、Xfwm4 或 KWin 等。LXQt SIG 組由社區愛好者發起成立，負責移植 LXQt 桌面環境，為 openKylin 提供一個快速、美觀、易用的桌面環境，同時保持低資源佔用和高可定製性。</span></span></span></p><ul><li><span><span style="color:#000000">SIG 主頁：</span></span></li><li><span><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/LXQt</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong><span style="color:#ff9b0e"><span style="background-color:#f5faff">04</span></span><span style="color:#1c9cee"><span style="background-color:#f5faff">MakerFrame SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000"><span style="background-color:#f5faff">MakerFrame SIG 組由社區愛好者發起成立，負責為 openKylin 開發簡單高效的遊戲框架引擎，致力於讓專業人士和非專業人士都來開發跨平台的遊戲和應用，大力促進 openKylin 遊戲生態推廣。</span></span></span></p><ul><li><span><span style="color:#000000">SIG 主頁：</span></span></li><li><span><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/MakerFrame</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">10 月社區 SIG 活躍度彙總</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">10 月社區新增有效 PR 數 411 個、倉庫 Fork 數新增 550 個，SIG 組公開例會召開 10 次。截至目前，社區累計有效 PR 數 11517 個、倉庫 Fork 數 4452 個、SIG 組公開例會召開 102 次，其中：</p><ul><li><span><span style="color:#000000">10 月社區 SIG 組 PR 貢獻 top15 如下：</span></span></li></ul><div><p style="text-align:center"><img height="537" src="https://oscimg.oschina.net/oscnet/up-52c4cf042b90758cb944f6bb2cdd076db70.png" width="794" referrerpolicy="no-referrer"></p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">10 月社區 SIG 組活躍地圖分佈情況（顏色越深代表越活躍，參考維度：PR、issue、SIG 會議）如下：</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-0aa7f9b3b5d67f3ce0208dec81b09816e3a.png" referrerpolicy="no-referrer"></p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">10 月社區技術進展與成果</span></span></strong></span></p><h1>一、UKUI SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">UKUI（Ultimate Kylin User Interface）SIG 小組致力於桌面環境相關軟件包的規劃、維護和升級工作，滿足各種設備和用戶需求的桌面環境程序，主要包含程序啓動器（開始菜單）、用戶配置、文件管理、登錄鎖屏、桌面、網絡工具、快捷配置等，為用戶提供基本的圖形化操作平台。桌面核心組件開發工具以 Qt、C++為主，宗旨是始終如一地提升系統的操作體驗，提供集穩定性、美觀性、流暢性和便捷性為一體的桌面環境。10 月進展如下：</span></span></p><ul><li><span><span style="color:#000000">【任務欄 4.X】託盤區分類、非合併狀態圖標拖拽及動畫功能實現；</span></span></li><li><span><span style="color:#000000">【任務欄 4.X】全局配置加載邏輯優化；</span></span></li><li><span><span style="color:#000000">【USD】新增多媒體控制協議實現及接口；</span></span></li><li><span><span style="color:#000000">【小插件框架】新增對配置文件目錄的文件監聽功能；</span></span></li><li><span><span style="color:#000000">【元數據】新增 png 格式元數據解析，新增 ocr 解析異常處理；</span></span></li><li><span><span style="color:#000000">【quick-items】新增調整訪問系統調色板和字體的方式，添加適配 UKUI 風格的窗口；</span></span></li><li><span><span style="color:#000000">【託盤網絡】單網卡場景顯示策略優化 ；</span></span></li><li><span><span style="color:#000000">【主題框架】主題框架優化部分控件背景和樣式；</span></span></li><li><span><span style="color:#000000">【側邊欄】優化側邊欄快捷配置面板進出動；</span></span></li><li><span><span style="color:#000000">【搜索】新增命令行查詢索引狀態&amp;進度功能、託盤右鍵功能和 OCR 開關和內容索引開關詢問彈窗；</span></span></li><li><span><span style="color:#000000">修復系統監視器、控制面板電源搜索、側邊欄喚出和隱藏異常等相關問題；</span></span></li><li><span><span style="color:#000000">完成與 openEuler FT 團隊線下 meetup 技術分享會。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎各位感興趣的社區開發者加入我們，一起打造 openKylin 桌面系統穩定易用的桌面環境！</span></span></p><h1>二、RISC-V SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">本</span>SIG 組主要負責 RISC-V 架構開源軟件包的維護，發佈 openKylin 的 RISC-V 版本，進行軟件包構建、系統構建等工作。10 月 RISC-V SIG 組進展如下：</span></p><ul><li><span><span style="color:#000000">解決鑑釋平板觸屏問題，製作平板的新鏡像；</span></span></li><li><span><span style="color:#000000">編譯荔枝派 1.2.1 版本 sdk，解決 GPU 適配問題，完成了鏡像內核 moudle，GPU 驅動，mesa 庫等移植工作，構建新版本荔枝派鏡像；</span></span></li><li><span><span style="color:#000000">構建 RISC-V 專屬 PPA，用於後續 RISC-V 定製包版本編譯及鏡像發行；</span></span></li><li><span><span style="color:#000000">解決算能新開發板的啓動問題，製作新鏡像；</span></span></li><li><span><span style="color:#000000">開始編寫根據 RISC-V 硬件類型修改鏡像中配置的包 kylin-riscv-hardware-config，後續可以通過裝包的方式實現各硬件鏡像的快速配置；</span></span></li><li><span><span style="color:#000000">成功集成 RISC-V 版本 nim 語言開發編譯環境到 RISC-V 專屬 PPA；</span></span></li><li><span><span style="color:#000000">調研從上游源代碼編譯包至鏡像製作的全流程，初步具備 RISC-V 版本鏡像獨立發行的能力；</span></span></li><li><span><span style="color:#000000">二進制翻譯針對 Wine 與 steam 添加對應的包裝函數，如 vulkan 插件集，OpenCL 及其內存操作相關函數。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對 RISC-V 開發平台技術方向感興趣的愛好者加入到 RISC-V SIG！</span></span></p><h1>三、Release SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Release SIG 主要負責協調各個 SIG 組，把控版本開發進度和風險，制定版本發佈計劃，完成版本發佈工作等。Release SIG 10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">推動 openKylin 2.0 基礎庫組件選型、新特性需求開發進展，新需求評審等；</span></span></li><li><span><span style="color:#000000">完成 openKylin 2.0 pre-alpha1 構建，處理版本構建問題；</span></span></li><li><span><span style="color:#000000">推動 openKylin 遺留缺陷 issue 修復，集成 1023 版本提測。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對 openKylin 社區版本集成、版本管理、版本發行等工作感興趣的愛好者加入到 Release SIG！</span></span></p><h1>四、Packaging SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Packaging SIG 負責維護 openKylin 社區的軟件包打包規範，維護公共軟件包，以及協調和決策社區版本發佈過程中的包依賴問題。10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">Sogou-ime-ng 閉源組件包上傳；</span></span></li><li><span><span style="color:#000000">openKylin 中科睿芯 rv64g 非壓縮指令集架構倉庫創建，chroot 製作調試；</span></span></li><li><span><span style="color:#000000">openKylin 2.0 AI 軟件包選型分析，編譯部署方式調研；</span></span></li><li><span><span style="color:#000000">測試評審任務發佈平台-生態軟件適配任務提交的構建成果；</span></span></li><li><span><span style="color:#000000">2.0 基礎庫軟件 systemd 依賴包選型構建：[nile] json-c(0.15-ok1), cryptsetup(2:2.4.3-ok1); 構建 2.0 基礎庫軟件 network-manager 的依賴包 netplan.io，並解決編譯問題；</span></span></li><li><span><span style="color:#000000">nvidia-driver-510 安裝問題分析解決；</span></span></li><li><span><span style="color:#000000">openkylin-2.0-pre-alpha1 預編譯版本報錯，缺少"dhcpcd-base、dracut-install"，新構建軟件包 dhcpcd，dracut。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對 openKylin 社區軟件自主選型、編譯打包工作感興趣的社區愛好者加入我們！</span></span></p><h1>五、QA SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">QA SIG 組致力於提升 openKylin 社區版本質量，包括社區版本測試、質量保障等。10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">審核 1.0.1 發佈版本用戶反饋 issue 50+條；</span></span></li><li><span><span style="color:#000000">openKylin 2.0 版本測試：</span></span></li><li><span><span style="color:#000000">1）UKUI4.10 需求測試用例編寫：共 120 個需求需要進行用例編寫，已完成 14 個，整體進度：18.3%；</span></span></li><li><span><span style="color:#000000">2）輸出 2.0 版本測試計劃；</span></span></li><li><span><span style="color:#000000">3）openKylin-1.0.1-1023 周版本測試，截止目前回歸 bug25 個，通過 18 個，失敗 3 個，阻塞 4 個，整體進度 40%。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對 openKylin 社區版本測試、質量管理感興趣的社區愛好者加入我們！</span></span></p><h1>六、SecurityGovernance SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin SecurityGovernance SIG 通過接收和響應 openKylin 社區的產品安全問題報告、提供社區安全指導，開展安全治理等活動提升社區產品的安全性。10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">Genmai 項目：完成 C/S 架構開發，實現根據服務器版本自動更新功能，解決傳輸數據耗費時長過程而導致失敗的問題；</span></span></li><li><span><span style="color:#000000">Genmai 項目：完善 PDF 報告格式優化功能；</span></span></li><li><span><span style="color:#000000">Genmai 項目：編制項目技術白皮書，發佈 TS 版的技術白皮書；</span></span></li><li><span><span style="color:#000000">Genmai 項目：新增安全基線檢測項 100+；</span></span></li><li><span><span style="color:#000000">Genmai 項目：優化 106 個 POC 檢測的輸出內容；</span></span></li><li><span><span style="color:#000000">Genmai 項目：新增集成 POC 測試用例 14 個；</span></span></li><li><span><span style="color:#000000">Genmai 項目：研發了 CVE-2023-4911、CVE-2023-38545、CVE-2022-2602 POC 三個；</span></span></li><li><span><span style="color:#000000">Genmai 項目：驗證使用了 docker 容器運行內核 POC 的破壞性，調研內核漏洞檢測的可行性；</span></span></li><li><span><span style="color:#000000">解決 C/S 架構數據返回接口異步故障的問題。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對 openKylin 版本安全全漏洞挖掘/驗證、安全漏洞修復等安全方面工作感興趣的社區愛好者加入我們！</span></span></p><h1>七、OpenSDK SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">OpenSDK SIG 組負責開發者套件（base、system、applications）規劃、開發、維護等工作，致力於解決應用在多操作系統中的兼容性問題。10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">擴展了處理器、內存、網絡等詳細信息獲取接口；</span></span></li><li><span><span style="color:#000000">新增賬戶管理模塊，包含創建用戶、修改密碼、用戶名校驗等功能；</span></span></li><li><span><span style="color:#000000">新增 sdk release note；</span></span></li><li><span><span style="color:#000000">規範了 SDK 的動態庫存放路徑。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對開發者套件感興趣的社區愛好者們加入 OpenSDK SIG 組！</span></span></p><h1>八、CompatWinApp SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">CompatWinApp SIG 組致力於將大量的 Windows 系統應用程序引入到 openKylin 系統。SIG 組將通過研究應用兼容技術和指令翻譯技術，研製完善的 Windows 應用兼容方案，讓更多的 Windows 應用能兼容運行於 openKylin 系統，不斷繁榮 openKylin 軟件生態。10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">修復 Wine 助手下載程序頁面無法點擊其他鏈接的問題，改為彈出提示框，提示用戶點擊其他鏈接可能出錯；</span></span></li><li><span><span style="color:#000000">修復當應用下載鏈接更新時無法下載的問題，改提示用戶下載新版本軟件還是舊版本軟件；</span></span></li><li><span><span style="color:#000000">修復 wine riched20 中導致微信輸入框光標異常，滾輪失效的問題；</span></span></li><li><span><span style="color:#000000">為 win-program 倉庫開發分支上 1000 多個應用配置文件增加下載詳情頁參數；</span></span></li><li><span><span style="color:#000000">Wine 助手在 openKylin 社區開源事項通過內部審核，代碼已上傳 wine-assistant 倉庫，累計有效代碼約 8000 行；</span></span></li><li><span><span style="color:#000000">開發 Wine 助手幫助文檔功能；</span></span></li><li><span><span style="color:#000000">openKylin Wine 助手發佈公測。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對應用兼容技術和指令翻譯技術感興趣的愛好者加入到 CompatWinApp SIG！</span></span></p><h1>九、Infrastructure SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Infrastructure SIG 負責 openKylin 社區的基礎平台系統功能的開發、維護。10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">openKylin 看板功能增強，增加倉庫大小、代碼總行數統計；</span></span></li><li><span><span style="color:#000000">openKylin 看板相關問題修復，貢獻者數據、PR 數據統計等；</span></span></li><li><span><span style="color:#000000">openKylin 看板修復當倉庫默認分支為 null 時新增倉庫數據到數據庫報錯問題；</span></span></li><li><span><span style="color:#000000">門禁檢查增加合規性檢查。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對 openKylin 社區基礎設施平台開發維護感興趣的愛好者加入到 Infrastructure SIG！</span></span></p><h1>十、Security SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Security SIG 負責研製操作系統安全防護技術和功能，提供並維護操作系統安全防禦機制。針對目前 openKylin 開源版本中的安全功能、安全組件等軟件包進行維護和 cve 修復；並結合目前 Linux 平台上的一些安全技術進行研究、開源安全軟件進行維護和研製、Linux 系統中的安全加固方案進行工具化設計和研製。10 月份 SIG 組進展如下：</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">openKylin 2.0 需求研製：</span></span></p><ul><li><span><span style="color:#000000">【身份認證】國密支持、賬戶安全：</span></span></li><li><span><span style="color:#000000">1）openKylin 社區身份認證添加國密支持，本地編包功能驗證通過，待提交 gitee；</span></span></li><li><span><span style="color:#000000">2）libxcrypt 添加 sm3 支持，已提交代碼，已合入；</span></span></li><li><span><span style="color:#000000">3）pam 添加 sm3 支持，pam 修改正在調試中；</span></span></li><li><span><span style="color:#000000">【強訪】添加 RISC-V 系統調用審計支持：調試 audit 包 riscv64 架構編譯問題。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對安全技術感興趣的社區愛好者加入 Security SIG 組！</span></span></p><h1>十一、GPU SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin GPU SIG 組致力於 GPU 驅動相關技術研究，包括 OpenGL、OpenCL、Vulkan、VDPAU 和 VAAPI 等，提供 GPU 相關軟件包的技術規劃、設計、開發、維護和升級服務，共同推動國產 GPU 技術發展。GPU SIG 組 10 月份進展如下：</span></span></p><ul><li><span><span style="color:#000000">完成景美 JM9100 顯卡驅動適配 openKylin 系統，完成 patch 提交、評審、合併等工作。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對 CPU 驅動、國產 GPU 技術、顯示等相關領域感興趣的社區小夥伴加入 GPU SIG 組！</span></span></p><h1>十二、TrustedComputing SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">可信計算興趣組（Trusted Computing SIG）主要目標是致力可信計算基礎軟件開源與優化，並提供可信計算相關的應用規範與接口，探索國內外可信計算技術的應用實踐。10 月份 SIG 組進展如下：</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">openKylin 2.0 需求研製：</span></span></p><ul><li><span><span style="color:#000000">可信軟件棧：本地進行 tpm2-tss、tpm2-abrmd 的驗證打包。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">歡迎所有對可信計算技術感興趣的社區愛好者和開發者加入 TrustedComputing SIG 組！</span></span></p><h1>十三、I18n SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">I18N SIG 組負責 openKylin 社區國際化和本地化相關工作，包括多語言開發框架、多語言平台開發和維護，以及社區、版本內文檔的翻譯管理相關工作。10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">翻譯官網新聞 7 篇。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對操作系統、網站網頁、文檔等翻譯工作感興趣的社區愛好者們加入 I18n SIG 組！</span></span></p><h1>十四、InputMethod SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">本 SIG 組致力於組建輸入法開源社區，推進開源輸入法框架及開源輸入法在社區維護。10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">評審 OK 輸入法設計文檔，包括引擎設計文檔和 UI 設計文檔；</span></span></li><li><span><span style="color:#000000">討論輸入法通用插件 SDK，以減少輸入法廠商適配難度；</span></span></li><li><span><span style="color:#000000">解決優麒麟系統默認集成搜狗輸入法問題，提升使用優麒麟系統的用戶輸入體驗；</span></span></li><li><span><span style="color:#000000">向 fcitx 社區貢獻關於虛擬鍵盤 Callback 的 pr，支持第三方開發虛擬鍵盤；</span></span></li><li><span><span style="color:#000000">向 fcitx 社區貢獻關於 UKUI 環境判斷的 pr，支持 fcitx 診斷工具識別 UKUI 桌面環境。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對 openKylin 社區 fcitx 輸入法框架、桌面虛擬鍵盤開發工作感興趣的社區愛好者加入我們！</span></span></p><h1>十五、Kernel SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Kernel SIG 組致力於新硬件適配、新功能、新特性開發。不斷提升內核健壯性、穩定性，能更好的為 openKylin 系統和應用程序提供底層技術支持。10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">6.1 內核從 6.1.55 更新到 6.1.59。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對內核感興趣的社區小夥伴加入 openKylin 社區 Kernel SIG 組！</span></span></p><h1>十六、Virtualization SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Virtualization SIG 組致力於構建 openKylin 社區系統虛擬化技術，打造面向端、邊、雲的全場景虛擬化解決方案。10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">qemu:修復丟失的 cq eventidx 更新。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對虛擬化組件或軟件包技術感興趣的社區小夥伴加入 openKylin 社區 Virtualization SIG 組！</span></span></p><h1>十七、Framework SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">本 SIG 組致力於為 openKylin 社區提供集程序編輯、編譯、調試、發佈、分析等全套開發功能的編程環境，涵蓋通用集成開發環境、編譯工具鏈、運行時環境、類庫等，10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">maven 插件，gradle 插件， clangd 插件，死鎖檢測插件，cmake 插件，java 插件等完善中英文 readme；</span></span></li><li><span><span style="color:#000000">離線插件管理器增加刷新插件列表，以及主動關閉插件預覽信息的按鈕；</span></span></li><li><span><span style="color:#000000">clangd 插件修復 shift-f1 跳轉到文檔功能提示安裝插件的問題；</span></span></li><li><span><span style="color:#000000">java 依賴管理添加遠程開發模式下，導出 jar 包成功，屏蔽打開 Jar 包按鈕；</span></span></li><li><span><span style="color:#000000">ide-gitlens 插件修復同時安裝上游 gitlens 插件和本插件的情況下報錯問題；</span></span></li><li><span><span style="color:#000000">項目管理插件：添加 deb 源碼打包功能；修復 war 打包，針對帶有括號的特殊工程打包失敗的錯誤；修復創建項目、deb、rpm 打包字段檢查邏輯和輸出問題；優化界面輸入框行高與對齊問題；修復創建項目默認路徑問題；完善 depends.json。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎對集成開發環境研發感興趣的社區開發者和愛好者加入 Framework SIG！</span></span></p><h1>十八、RTHypervisor SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">RTHypervisor SIG 小組致力於實時虛擬化技術的研究，目前主要包括 Jailhouse，提供工控、車載等領域實時控制的虛擬化解決方案，Jailhouse 項目 10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">新增 arm64 平台上基於 INTx 中斷的 pci 設備隔離，實現了 pci 設備在 jailhouse 下的透傳功能。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎所有對 openKylin 社區實時虛擬化技術感興趣的社區愛好者加入我們！</span></span></p><h1>十九、SystemService SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">系統服務小組致力於服務管理的技術研究，提供系統基礎組件的集合和服務管理，提供穩定的系統底層環境。10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">openKylin-2.0 systemd 編包工作，完成 upstream、pristine-tar、openkylin/nile 以及 packaging/openkylin/nile 分支代碼整理工作；</span></span></li><li><span><span style="color:#000000">修復編譯錯誤，完成 amd64、arm64、riscv64 架構的編譯。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">歡迎社區對基礎能力搭建感興趣的開發者或愛好者加入我們！</span></span></p><h1>二十、FAQ SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">FAQ SIG 小組致力於收集各渠道社區開發者、愛好者等用戶反饋的問題，並建立相關標準化流程推動問題解答或解決同時，在這一過程中不斷為 openKylin 社區積累 FAQ 知識庫。10 月主要進展如下：</span></span></p><ul><li><span><span style="color:#000000">收集論壇、社羣高頻問題並提交 issue 指派給開發；</span></span></li><li><span><span style="color:#000000">調查部分用戶硬件驅動適配情況，提交 issue 指派解決網卡驅動適配問題；</span></span></li><li><span><span style="color:#000000">收集用戶針對桌面環境的建議並反饋給 UKUI SIG。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">歡迎社區熱心、善於解答問題的小夥伴加入 FAQ SIG 組！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">關於 openKylin 社區 SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span>openKylin（開放麒麟）社區是一個自由開放的社區，社區中所有的 SIG 小組都是開放的，任何人和組織都可以參與。你可以選擇加入已有 SIG，也可以選擇創建新的 SIG。截至目前，openKylin 社區已有<strong>90</strong>個 SIG 在運行，包括 Architecture、Infrastructure、Release、Kernel、Security、Compatibility 等。</span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">關於 openKylin 社區</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span>openKylin（開放麒麟）社區旨在以「共創」為核心，在開源、自願、平等、協作的基礎上，通過開源、開放的方式與企業構建合作伙伴生態體系，共同打造桌面操作系統頂級社區，推動 Linux 開源技術及其軟硬件生態繁榮發展。</span></p><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">社區理事成員單位包括麒麟軟件、普華基礎軟件、中科方德、麒麟信安、凝思軟件、一銘軟件、中興新支點、元心科技、中國電科 32 所、技德系統、北京麟卓、先進操作系統創新中心、飛騰、兆芯、龍芯中科、景美、京東科技、平頭哥、申泰信息、海光等 21 家產業同仁和行業機構。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 03 Nov 2023 06:35:18 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264771</guid>
            <link>https://www.oschina.net/news/264771</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[等了 7 年，vscode 史上呼聲最高的「浮動窗口」 特性，終於實現了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>7 年，你知道我這 7 年怎麼過來的嗎？</p></blockquote><p><img alt="張家輝表情包 gif，抖音張家輝表情包合集_手機搜狐網" src="https://static.oschina.net/uploads/img/202311/03121335_cc2C.gif" referrerpolicy="no-referrer"></p><p>等了 7 年，開發者呼聲極高的 vscode 「浮動窗口」 特性，終於實現了。</p><p><img height="1400" src="https://static.oschina.net/uploads/space/2023/1103/120112_40ZK_3820517.png" width="2174" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fvscode%2Fissues%2F10121" target="_blank">https://github.com/microsoft/vscode/issues/10121</a></p><p>該提案是 2016 年就有人提出，數千人贊同，期間帖子也增長到 300 多條，可見這一特性的呼聲之高。</p><p><img height="1536" src="https://static.oschina.net/uploads/space/2023/1103/121308_KoQP_3820517.png" width="2660" referrerpolicy="no-referrer"></p><p>就在近期發佈的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_floating-editor-windows" target="_blank">vscode October 2023 (version 1.84) </a>更新中，終於實現了對浮動窗口的支持（預覽特性）：</p><div class="ckeditor-html5-video" style="text-align:center"><video controls="controls" controlslist="nodownload" src="https://code.visualstudio.com/assets/updates/1_84/floating-windows.mp4">
  &nbsp;
 </video></div><p>vscode 團隊也開心地在 issue 最後「結帖」。</p><p><img height="1540" src="https://static.oschina.net/uploads/space/2023/1103/120113_i7Zd_3820517.png" width="1872" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 03 Nov 2023 04:04:47 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264749/vscode-floating-editor-windows</guid>
            <link>https://www.oschina.net/news/264749/vscode-floating-editor-windows</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Arm 投資樹莓派]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Arm <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnewsroom.arm.com%2Fnews%2Fraspberry-pi-investment" target="_blank">宣佈</a></u>已對樹莓派 (Raspberry Pi) 進行戰略投資，並收購了後者的少部分股權，進一步擴大兩家公司之間的長期合作伙伴關係，攜手為物聯網開發者社區提供關鍵解決方案。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1103/103538_1Bm3_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>Arm 表示，這項投資進一步鞏固了自 2008 年開始的合作伙伴關係，並見證了許多基於 Arm 的熱門樹莓派產品的發佈，而樹莓派最新一代旗艦產品 <a href="https://www.oschina.net/news/259858/introducing-raspberry-pi-5">Raspberry Pi 5 已於 10 月底上市</a>。</p><p>Arm 物聯網業務線高級副總裁兼總經理 Paul Williamson 表示：「隨着邊緣和端點人工智能應用的快速增長，基於 Arm 的平台（如樹莓派）對於推動全球高性能物聯網設備的採用至關重要，因為它們使開發人員能夠更快、更輕鬆地進行創新。這項戰略投資進一步證明瞭我們對開發者社區的持續承諾，以及我們與樹莓派的合作關係。」</p><p>樹莓派首席執行官 Eben Upton 表示：Arm 技術一直是我們創建的平台的核心，而這項投資是我們長期合作關係的重要里程碑。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 02:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264730/arm-raspberry-pi-investment</guid>
            <link>https://www.oschina.net/news/264730/arm-raspberry-pi-investment</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[深言科技聯合清華大學 NLP 實驗室開源 LingoWhale-8B 模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">深言科技與清華大學 NLP 實驗室共同研發的語鯨 LingoWhale-8B 模型已面向社會開源。</span></p><p style="margin-left:0; margin-right:0"><span style="color:#000000">深言科技（DeepLang AI）由清華大學計算機系自然語言處理實驗室（THUNLP）與北京智源人工智能研究院（BAAI）共同孵化，是國內最早開展大模型研發與探索大模型落地的創業公司之一。公司創始團隊曾深度參與智源·悟道大模型的研發，目前已發佈產品包括世界首箇中文及跨語言反向詞典 WantWords、名句語義檢索系統 WantQuotes、智能寫作工具深言達意等。</span></p><p><span style="color:#000000">根據<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FDJ8saXn9wOhuK2v_x-lVSQ" target="_blank">介紹</a>，LingoWhale-8B 模型是擁有約 80 億參數的中英雙語大語言模型，在 C-Eval、MMLU、CMMLU 等多個權威的公開評測基準上，在 10B 以下開源模型中達到領先效果。</span></p><p>LingoWhale-8B 是深言科技與清華大學 NLP 實驗室共同推出的語鯨系列大模型中首個開源的中英雙語大語言模型。</p><p>LingoWhale-8B 模型在數萬億 token 的高質量中英數據上進行預訓練，具有強大的基礎能力，在多個公開評測基準上均達到領先效果。在預訓練階段，模型使用 8K 的上下文長度進行訓練，能夠完成更長上下文的理解和生成任務。LingoWhale-8B 模型對學術研究<strong>完全開放</strong>，開發者通過郵件申請並獲得官方商用許可後，即可<strong>免費商用</strong>。</p><p>在開源模型權重的同時，項目團隊也提供了符合用戶習慣的 Huggingface 推理接口以及 LoRA 等參數高效微調示例，便於開發者快速使用 LingoWhale-8B 模型。</p><p>受模型參數量影響，大模型固有的幻覺問題、數學計算能力相對較弱、生成內容有無法預見性等問題在 LingoWhale-8B 模型中仍然存在。因此建議在使用前瞭解這些問題，評估可能存在的風險。後續版本的語鯨大模型將會針對此類問題進行持續優化。</p><h4><strong>測評分析</strong></h4><p><span style="background-color:#ffffff"><span style="color:#3f3f3f">截至 10 月 24 日，在中文領域權威評測 C-Eval 中，</span></span><strong>LingoWhale-8B 模型的性能僅次於 GPT-4</strong><span style="background-color:#ffffff"><span style="color:#3f3f3f">。在 C-Eval、CMMLU、GAOKAO 測評中，性能超過 GPT-3.5Turbo，在 10B 以下尺寸模型中性能處於領先位置。</span></span></p><p><span style="background-color:#ffffff"><span style="color:#3f3f3f"><img alt="" height="122" src="https://oscimg.oschina.net/oscnet/up-61dd8a402d70f3fb6aec85b2fed702eeeb7.png" width="500" referrerpolicy="no-referrer"></span></span></p><p><strong><span style="color:#3f3f3f">一些示例：</span></strong></p><p><img alt="" height="500" src="https://oscimg.oschina.net/oscnet/up-333f791c81206afba4f06c2312f9341df88.png" width="269" referrerpolicy="no-referrer">&nbsp;<img alt="" height="501" src="https://oscimg.oschina.net/oscnet/up-9749d978fa111b77c07bdf07348dec30ef5.png" width="299" referrerpolicy="no-referrer"></p><p><img alt="" height="289" src="https://oscimg.oschina.net/oscnet/up-1ad6a289253e964f8715f8610900e858395.png" width="269" referrerpolicy="no-referrer">&nbsp;<img alt="" height="354" src="https://oscimg.oschina.net/oscnet/up-082b16c3e8e0198200f7aa32d91bcfda558.png" width="299" referrerpolicy="no-referrer"></p><p><img alt="" height="1087" src="https://oscimg.oschina.net/oscnet/up-c1b525b15cc376c23f24cd7500bd6fd3fa8.png" width="270" referrerpolicy="no-referrer">&nbsp;<img alt="" height="1087" src="https://oscimg.oschina.net/oscnet/up-5c686d13e35bbfc670e1c3fbad8b9824689.png" width="188" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 06:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264763</guid>
            <link>https://www.oschina.net/news/264763</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[國外 HR：如果看到簡歷有參與開源貢獻的內容，直接扔掉]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>自稱曾負責 FAANG（美國科技巨頭）招聘工作的「獵頭」在推特<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fallgarbled%2Fstatus%2F1719266732869886325" target="_blank">發表瞭如內容</a></u>：</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1103/120614_vhOu_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>他表示自己在招人的時候，<strong>如果看到開發者的簡歷出現參與開源貢獻的內容</strong>，會直接把簡歷扔掉。他認為，開發者有這麼多的空閒時間來不求回報地寫代碼，對工作的投入程度能有多高？</p><p>他繼續補充道：「對於初級開發者來説，他們參與開源可以理解。但對於高級開發者來説，這表明他們缺乏成熟度。」</p><p>最後他附上了自己拒絕別人求內推的截圖：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fb3a53178796db604e1b3319b0bf7346147.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 04:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264751</guid>
            <link>https://www.oschina.net/news/264751</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[工信部印發《人形機器人創新發展指導意見》]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">工信部印發《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fzwgk%2Fzcwj%2Fwjfb%2Ftz%2Fart%2F2023%2Fart_48fe01d562644aedb7ea3f4256df8190.html" target="_blank">人形機器人創新發展指導意見</a>》（以下簡稱《意見》），稱人形機器人集成人工智能、高端製造、新材料等先進技術，有望成為繼計算機、智能手機、新能源汽車後的顛覆性產品，深刻變革人類生產生活方式，重塑全球產業發展格局。</span></p><p><span style="color:#000000"><img alt="" height="235" src="https://oscimg.oschina.net/oscnet/up-e0dd1b4474430fc2cabd5233ea56d86217a.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">《意見》制定了「<strong>發展目標</strong>」，提出到 2025 年，人形機器人創新體系初步建立，「大腦、小腦、肢體」等一批關鍵技術取得突破，確保核心部組件安全有效供給。整機產品達到國際先進水平，並實現批量生產，在特種、製造、民生服務等場景得到示範應用，探索形成有效的治理機制和手段。培育 2-3 家有全球影響力的生態型企業和一批專精特新中小企業，打造 2-3 個產業發展集聚區，孕育開拓一批新業務、新模式、新業態。</span></p><p><span style="color:#000000">到 2027 年，人形機器人技術創新能力顯著提升，形成安全可靠的產業鏈供應鏈體系，構建具有國際競爭力的產業生態，綜合實力達到世界先進水平。產業加速實現規模化發展，應用場景更加豐富，相關產品深度融入實體經濟，成為重要的經濟增長新引擎。</span></p><p><span style="color:#000000">在人形機器人「<strong>關鍵技術</strong>」方面，實現「大腦、小腦、肢體」等一批關鍵技術的突破，構建完善人形機器人制造業技術創新體系。</span></p><p><span style="color:#000000"><img alt="" height="324" src="https://oscimg.oschina.net/oscnet/up-33f7aa057684c9a6e96f4feafd4136da564.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">《意見》還提出要培育重點產品，包括打造整機產品、夯實基礎部組件以及推動軟件創新。</span></p><p><span style="color:#000000"><img alt="" height="76" src="https://oscimg.oschina.net/oscnet/up-6c4003a2566dddbba0b4f95f929adc9dea1.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000"><img alt="" height="388" src="https://oscimg.oschina.net/oscnet/up-3b2fde75892e62a9b44b6a627ae12e14c24.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">在人形機器人的<strong>場景應用</strong>方面，特種環境和製造業是有望最先應用的領域。除此之外，《意見》還提出要加快民生及重點行業推廣，拓展人形機器人在醫療、家政等民生領域服務應用，重點提升人機交互可靠性和安全性，開發具有複雜區域引導、靈活操作、魯棒行走、多模態人機交互的解決方案，滿足生命健康、陪伴護理等高品質生活需求。推動人形機器人在農業、物流等重點行業應用落地，提升人機交互、靈巧抓取、分揀搬運、智能配送等作業能力。</span></p><p><span style="color:#000000">《意見》的最後部分，提出了營造產業生態、健全產業標準體系、加強安全治理能力等舉措。其中在「營造產業生態」部分，提到了要「<strong>完善創新載體和開源環境</strong>」。</span></p><p><span style="color:#000000">包括支持建設人形機器人重點實驗室、製造業創新中心，凝聚產學研各界優勢力量，提升關鍵共性技術供給能力。成立人形機器人百人會等行業組織，促進技術交流、供需對接、國際合作，深化創新鏈產業鏈資金鍊人才鏈融合。以及建設人形機器人開源社區，推進開源基金會能力建設，加強對重點企業開源項目的支持力度，匯聚全球開發者協同創新。</span></p><p><span style="color:#000000">完整內容可<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fzwgk%2Fzcwj%2Fwjfb%2Ftz%2Fart%2F2023%2Fart_48fe01d562644aedb7ea3f4256df8190.html" target="_blank">查看官方公告</a></strong>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 04:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264748</guid>
            <link>https://www.oschina.net/news/264748</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[LAMMPS —— 分子動力學模擬工具包]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>LAMMPS （"Large-scale Atomic/Molecular Massively Parallel Simulator"，大尺度原子/分子並行模擬工具）是由桑迪亞國家實驗室開發的一套分子動力學模擬的開源程序包。LAMMPS 當前使用 C++編寫，早期版本使用 Fortran77 以及 Fortran90。</p><p>LAMMPS 使用 MPI 實現多機器並行計算，在新的版本中，支持基於 CUDA 和 OpenCL 的 GPU 計算。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fa7cce2ba0e5a4796cb2d6eb8a1e3dccd07.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-323a95d8c05b97b23b41450fa6c6867b9f0.png" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p>LAMMPS 提供了元素週期表中原子對應的經驗勢函數，可進行與實際體系對應的分子動力學模擬，例如計算金屬鋁的晶格常數，或水的密度，得到與實驗吻合的結果。另一方面也提供了多種模型勢函數，可用於進行粗粒化模擬，例如模擬基於粒子-彈簧模型的高分子鏈的性質。</p><p>LAMMPS 作為實用程序包，採取了很多成熟的優化算法。例如在短程相互作用的計算中運用韋爾萊表和元胞列表優化臨近粒子的掃描。</p><p>用戶可在下至個人電腦，上至計算機集羣上運行 LAMMPS。在並行環境下，LAMMPS 使用空間分解技術，將整個模擬體系分解成若干個更小的體系傳遞給不同處理器執行，邊界的處理則使用「幽靈原子」保證整體的連續。LAMMPS 對粒子密度均勻的立方體盒子體系的效率最高。</p><p>LAMMPS 具有廣泛的硬件加速支持，例如 GPU (CUDA, OpenCL, HIP, SYCL), Intel Xeon Phi, 以及基於 OpenMP 多線程支持。</p><p>LAMMPS 最初為一美國政府與私人機構合作項目，由美國能源部與另外三所私有企業實驗室合作開發。目前由桑迪亞國家實驗室負責維護和發佈。</p></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 03:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/lammps</guid>
            <link>https://www.oschina.net/p/lammps</link>
        </item>
        <item>
            <title>
                <![CDATA[Deno 1.38：新增 HTML 文檔生成器、支持 HMR]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Deno 1.38 已正式<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38" target="_blank">發佈</a></u>。</p><p>公告寫道，此版本為<code>deno doc</code>命令引入了重大改進，其中包括使用<code>deno doc --html</code>生成靜態站點文檔的能力。另外改進了 Node.js 兼容性、支持 HMR（模塊熱更新）。</p><p><strong>主要變化</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-doc-updates" target="_blank">改進<code>deno doc</code></a>：新的&nbsp;<code>deno doc --html</code>&nbsp;命令可生成包含項目文檔的靜態站點。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23hot-module-replacement" target="_blank">模塊熱更新</a>：新的&nbsp;<code>--unstable-hmr</code>&nbsp;flag 將檢測變更，重新加載服務器，同時保留狀態。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23nodejs-compatibility-improvements" target="_blank">改進 Node.js 兼容性</a>：現在從 Node 遷移時，使用 Deno 會更加容易。因為可以使用所選擇的 npm 包管理器。通過&nbsp;<code>npm</code>&nbsp;安裝 npm 模塊並使用 Deno 運行它。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23fastest-jsx-transform" target="_blank">快速的 JSX 轉換</a>：通過字符串連接而不是對象分配將 JSX 轉換速度提高約 7-20 倍</li><li><code>deno run --env</code>&nbsp;：對&nbsp;<code>.env</code>&nbsp;文件的內置支持</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23websockets-improvements" target="_blank">改進 WebSockets</a>：支持 HTTP/2 上的 RFC8841 Websocket 以及修復錯誤</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-task-supports-head-command" target="_blank"><code>deno task</code>&nbsp;支持&nbsp;<code>head</code>&nbsp;命令</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23vscode-extension-and-language-server" target="_blank">針對 VSCode 擴展和語言服務器的穩定性改進</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23denotest-support-in-the-repl" target="_blank">REPL 中的&nbsp;<code>Deno.test</code>&nbsp;支持</a>：與 Jupyter 運行良好</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23jupyter-notebook-updates" target="_blank">Jupyter Notebook 更新</a>：支持富文本 HTML 輸出</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-api-changes" target="_blank"><code>Deno</code>&nbsp;API 變更</a>：&nbsp;<code>Deno.serve</code>&nbsp;現在支持 unix 套接字</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23web-api-changes" target="_blank">Web API 變更</a>：添加了&nbsp;<code>window.name</code>&nbsp;和&nbsp;<code>EventSource</code>&nbsp;</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23standard-library-updates" target="_blank">標準庫更新</a>：棄用<code>std/http/server.ts</code></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23granular---unstable--flags" target="_blank">細粒度&nbsp;<code>--unstable-*</code>&nbsp;flags</a>：更好地對內部功能進行標記</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23performance-improvements" target="_blank">改進性能</a>：當不使用可轉移項時，&nbsp;<code>structuredClone</code>&nbsp;現在速度要快得多</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23v8-120" target="_blank">V8 升級到 12.0</a>：引入&nbsp;<code>Array.fromAsync</code>&nbsp;和&nbsp;<code>Promise.withResolvers</code>&nbsp;</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38" target="_blank">詳情</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 03:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264739/deno-1-38</guid>
            <link>https://www.oschina.net/news/264739/deno-1-38</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 開源的知識圖譜抽取與構建工具 DeepKE]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Farxiv.org%2Fpdf%2F2201.03335.pdf">DeepKE</a><span>&nbsp;</span>是一個開源的知識圖譜抽取與構建工具，支持<strong>cnSchema、低資源、長篇章、多模態</strong>的知識抽取工具，可以基於<strong>PyTorch</strong>實現<strong>命名實體識別</strong>、<strong>關係抽取</strong>和<strong>屬性抽取</strong>功能。同時為初學者提供了<a href="https://gitee.com/ZJU_NLP/DeepKE">用戶手冊</a>,<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fzjunlp.github.io%2FDeepKE%2F">文檔</a>，<a href="https://gitee.com/link?target=https%3A%2F%2Fcolab.research.google.com%2Fdrive%2F1vS8YJhJltzw3hpJczPt24O0Azcs3ZpRi%3Fusp%3Dsharing">Google Colab 教程</a>,<span>&nbsp;</span><a href="https://gitee.com/link?target=http%3A%2F%2Fdeepke.zjukg.cn%2FCN%2Findex.html">在線演示</a>,<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Farxiv.org%2Fpdf%2F2201.03335.pdf">論文</a>和<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fzjunlp%2FDeepKE%2Fblob%2Fmain%2Fdocs%2Fslides%2FSlides-DeepKE-cn.pdf">演示文稿</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 03:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264738</guid>
            <link>https://www.oschina.net/news/264738</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 同城售後系統退款業務重構心得]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h1_1"></span><h1><span><span><span>一、重構背景</span></span></span></h1><span id="OSC_h3_2"></span><h3><span><span><span>1.1、退款</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>到家、小時購、天選退款有</span></span></span><span><span><strong><span>2 套</span></strong></span></span><span><span><span>結構，代碼邏輯混亂；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>其中小時購、天選部分售後單是和平生 pop 交互退款，部分是和售後中台交互退款；並且</span></span></span><span><span><strong><span>兼容 3 套</span></strong></span></span><span><span><span>邏輯；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>痛點</span></strong></span></span><span><span><span>：代碼繁重，缺乏合理性的設計，後續迭代</span></span></span><span><span><strong><span>開發</span></strong></span></span><span><span><span>以及</span></span></span><span><span><strong><span>維護成本高</span></strong></span></span><span><span><span>，同時增加了系統的</span></span></span><span><span><strong><span>風險和不穩定性</span></strong></span></span></p><span id="OSC_h3_3"></span><h3><span><span><span>1.2、金額計算</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>到家、小時購兩套獨立的邏輯結構計算，在此基礎上針對退差和非退差又實現了</span></span></span><span><span><strong><span>2 套</span></strong></span></span><span><span><span>邏輯；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>針對商品件維度、商品行維度、售後單維度計算金額混亂，</span></span></span><span><span><strong><span>缺乏領域邊界</span></strong></span></span><span><span><span>和</span></span></span><span><span><strong><span>分層設計</span></strong></span></span><span><span><span>；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>痛點</span></strong></span></span><span><span><span>：售後單維度、商品行維度、拆分件維度金額</span></span></span><span><span><strong><span>計算混亂</span></strong></span></span><span><span><span>，代碼</span></span></span><span><span><strong><span>缺乏層次結構</span></strong></span></span><span><span><span>；代碼</span></span></span><span><span><strong><span>易讀性</span></strong></span></span><span><span><span>、</span></span></span><span><span><strong><span>維護成本</span></strong></span></span><span><span><span>、後續</span></span></span><span><span><strong><span>擴展性</span></strong></span></span><span><span><span>存在問題</span></span></span></p><span id="OSC_h3_4"></span><h3><span><span><span>1.3、售後逆向賬</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>售後單詳情接口、申訴單詳情接口，針對到家和小時購做了</span></span></span><span><span><strong><span>兩套</span></strong></span></span><span><span><span>邏輯；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>其中售後單詳情接口針對小時購黑名單、小時購白名單、天選、到家退差、到家非退差做了</span></span></span><span><span><strong><span>5 套</span></strong></span></span><span><span><span>邏輯處理；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>並且這兩個接口都是實時從拆分獲取金額進行售後逆向拆分計算，可以直接從數據庫中進行取值賦值，不需要進行售後單維度的拆分計算；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>痛點</span></strong></span></span><span><span><span>：代碼大量</span></span></span><span><span><strong><span>冗餘</span></strong></span></span><span><span><span>、改動</span></span></span><span><span><strong><span>成本高</span></strong></span></span><span><span><strong><span>、</span></strong></span></span><span><span><span>增加了系統的</span></span></span><span><span><strong><span>風險</span></strong></span></span><span><span><span>和</span></span></span><span><span><strong><span>不穩定性</span></strong></span></span></p><span id="OSC_h1_5"></span><h1><span><span><span>二、重構思路和方案</span></span></span></h1><span id="OSC_h3_6"></span><h3><span><span><span>2.1、重構思路</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>什麼是重構呢？</span></strong></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>名詞</span></strong></span></span><span><span><span>：對軟件內部結構的一種調整，目的是在不改變軟件觀察行為的的前提下提高其可理解性、降低其修改成本；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>動詞</span></strong></span></span><span><span><span>：使用一系列手法，在不改變軟件可觀察行為的前提下，調整其結構</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>重構的目的是使系統或代碼更容易被理解、修改、迭代</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>重構祕訣：膽大心細</span></strong></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>膽大</span></strong></span></span><span><span><span>（意味着有勇氣和決心去改變和改進現有的代碼。重構可能涉及對複雜的代碼結構進行修改，甚至可能需要重寫部分代碼。膽大的開發者願意麪對這些挑戰，相信通過改變可以帶來更好的結果）</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>心細</span></strong></span></span><span><span><span>（指的是在進行重構時保持細緻入微的思考和行動。這包括仔細分析代碼的結構和邏輯，理解代碼的功能和依賴關係，以及考慮每個重構步驟可能帶來的潛在影響。心細的開發者會在重構過程中小心翼翼地處理每個細節，以確保代碼的正確性和可維護性）</span></span></span></p><div><span>1.</span><span><span><span><span>把握好重構時機：當我發現售後退款、金額計算等業務模塊代碼存在質量問題、可讀性差、可維護性差或存在壞味道時，並且在項目需求排期並不緊張的情況下，是進行重構的好時機；</span></span></span></span></div><div><span>2.</span><span><span><span><span>前期梳理很重要，先找到痛點 ；不宜長線作戰，不宜和業務並行</span></span></span></span></div><div><span>3.</span><span><span><span><span>明確出目標和價值：售後退款、金額計算重構後能提高開發效率、降低維護、開發成本等</span></span></span></span></div><div><span>4.</span><span><span><span><span>確定重構的目標：首先要明確需要進行重構的代碼塊或功能，並明確重構的目標是什麼。例如，可能需要提高代碼的可讀性、可維護性或性能。</span></span></span></span></div><div><span>5.</span><span><span><span><span>分析代碼壞味道：使用代碼靜態分析工具或手動檢查代碼，識別出可能存在的</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qinglite.cn%2Fdoc%2F87036476d565d55f9" target="_blank" rel="nofollow"><span><span><span>代碼壞味道</span></span></span></a><span><span><span>；例如退款業務中存在 1000 多行的類、600 多行的方法，過多的變量參數、諸多重複代碼等</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qinglite.cn%2Fdoc%2F87036476d565d55f9" target="_blank" rel="nofollow"><span><span><span>代碼壞味道</span></span></span></a><span><span><span>。</span></span></span></span></div><div><span>6.</span><span><span><span><span>選擇適當的重構技術：根據售後</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qinglite.cn%2Fdoc%2F87036476d565d55f9" target="_blank" rel="nofollow"><span><span><span>代碼壞味道</span></span></span></a><span><span><span>的種類和重構的目標，選擇適當的重構技術。我採用的重構手法是：</span></span></span><span><span><strong><span>小規模重構--&gt;大規模重構--&gt;頂層設計模式；</span></strong></span></span><span><span><span>採用</span></span></span><span><span><strong><span>先小後大，從大到全</span></strong></span></span><span><span><span>的思路進行重構設計</span></span></span><span><span><strong><span>。小規模重構</span></strong></span></span><span><span><span>：提取方法、消除超大類或函數方法、提取類、重命名、合併重複代碼等方法；</span></span></span><span><span><strong><span>大規模重構：</span></strong></span></span><span><span><span>採用的是</span></span></span><span><span><span style="background-color:#ffffff; color:#121212">分層、模塊化、解耦、抽象可複用性等手法；</span></span></span><span><span><strong><span>設計模式</span></strong></span></span><span><span><span>：退款業務採用策略模式+抽象工廠；金額計算業務採用策略模式+抽象工廠+責任鏈模式</span></span></span></span></div><div><span>7.</span><span><span><span><span>編寫測試用例：在進行重構之前，編寫適當的測試用例來驗證重構後的代碼的正確性。測試用例應該覆蓋重構的代碼塊或功能的各種情況。</span></span></span></span></div><div><span>8.</span><span><span><span><span>執行重構：根據選擇的重構技術，逐步修改代碼。確保每次修改後的代碼仍然通過之前編寫的測試用例。</span></span></span></span></div><div><span>9.</span><span><span><span><span>運行測試用例：在每次重構之後，運行之前編寫的測試用例，確保重構後的代碼仍然正確。</span></span></span></span></div><div><span>10.</span><span><span><span><span>重構後的代碼評估：評估重構後的代碼是否達到了預期的目標，例如是否提高了代碼的可讀性、可維護性或性能。</span></span></span></span></div><span id="OSC_h3_7"></span><h3><span><span><span>2.2、重構方案</span></span></span></h3><span id="OSC_h4_8"></span><h4><span><span><span>2.2.1、重構前系統交互圖</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-26-11-376gFGFKNu12gfcLVl.jpg" referrerpolicy="no-referrer"></div><span id="OSC_h4_9"></span><h4><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>2.2.2、重構後系統交互圖</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-14-36ObaevqtLBg9cVzc.jpg" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span><span><span><span>退款業務強耦合到售後系統中，並且業務代碼分散到各個業務層，嚴重缺乏系統的領域邊界和分層設計，重構後退款業務邏輯不強依賴售後核心業務邏輯，做到可以獨立部署。</span></span></span></p><span id="OSC_h4_10"></span><h4><span><span><span>2.2.3、重構前金額計算流程圖</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-14-36iGWAfxWUQyTZ36p7.jpg" referrerpolicy="no-referrer"></div><span id="OSC_h4_11"></span><h4><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span><span><span><span>2.2.4、重構後金額計算流程圖</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>﻿</span></span></span><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-14-36j10tVMXAKR9byPI10.jpg" referrerpolicy="no-referrer"></p><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span><span><span><span>將 2 套金額計算業務邏輯利用設計模式將其合併為 1 套金額計算業務邏輯，打造防腐層</span></span></span></p><span id="OSC_h3_12"></span><h3><span><span><span>2.3、重構設計類圖</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>依據上述制定的設計方案流程圖，我進行了 UML 類圖的繪製，以下是關於金額計算業務模塊的類圖</span></span></span></p><span id="OSC_h4_13"></span><h4><span><span><span>2.3.1、抽象工廠+策略模式類圖</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-26-20-06MV8CDpmNrSRORvC.jpg" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span></p><span id="OSC_h4_14"></span><h4><span><span><span>2.3.2、責任鏈模式類圖</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-19-53VbsjALJmOdmrz24d.jpg" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span></p><span id="OSC_h1_15"></span><h1><span><span><span>三、系統穩定性保障</span></span></span></h1><span id="OSC_h3_16"></span><h3><span><span><span>3.1、小步重構</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>將售後重構分成退款、金額計算、逆向賬三個步驟，並在每個步驟之後運行測試用例。這樣可以及時發現並修復引入的錯誤，避免錯誤在整個系統中蔓延</span></span></span></p><span id="OSC_h3_17"></span><h3><span><span><span>3.2、逐步驗證</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在每個重構步驟之後，進行系統的逐步驗證。分批次進行上線灰度，灰度配置絕對隔離，不能複用。確保系統的各個部分在重構過程中都能正常運行，並與其他部分協調良好。</span></span></span></p><span id="OSC_h3_18"></span><h3><span><span><span>3.3、監控和性能測試</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在重構完成後，進行系統的監控和性能測試，確保重構沒有引入性能問題或影響系統的穩定性。如果發現問題，及時進行修復和優化。</span></span></span></p><span id="OSC_h3_19"></span><h3><span><span><span>3.4、團隊代碼審查和測試</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在進行重構時，與團隊成員進行合作，並進行代碼審查。多個人的視角和經驗可以幫助發現潛在的問題，並提供改進的建議；針對重構代碼進行深度解刨，能更有效地保障重構的安全性。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>重構業務及時通知測試人員，使測試人員能夠評估到測試點，更加完善測試用例</span></span></span></p><span id="OSC_h3_20"></span><h3><span><span><span>3.5、灰度步驟</span></span></span></h3><span id="OSC_h4_21"></span><h4><span><span><span>3.5.1、bcp 持續比對校驗</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-18-21kccs6qUAZpiH6EU.jpg" referrerpolicy="no-referrer"></div><span id="OSC_h4_22"></span><h4><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>3.5.2、按照商家灰度</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>依據售後單量 </span></span></span><span><span><span style="color:#c41d7f">小-&gt;中-&gt;大 </span></span></span><span><span><span>的順序逐步進行灰度切量，觀察其退款、金額計算等售後單數據是否異常</span></span></span></p><span id="OSC_h1_23"></span><h1><span><span><span>四、重構成果</span></span></span></h1><div><span>1.</span><span><span><span><span>降低開發、維護成本</span></span></span></span></div><div><span>2.</span><span><span><span><span>提升代碼質量、系統穩定性</span></span></span></span></div><div><span>3.</span><span><span><span><span>系統擴展性和靈活性的加強；</span></span></span></span></div><div><span>4.</span><span><span><span><span>系統應用、業務邊界定位更加清晰</span></span></span></span></div><div><span>5.</span><span><span><span><span>統一和規範售後核心業務脈絡，降低業務學習成本，提升開發效率</span></span></span></span></div><div><span>6.</span><span><span><span><span>提升自己的技術能力、代碼質量意識、問題解決能力、團隊合作和溝通能力；經典著作《重構》這本書中有這麼一段話：</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span style="color:#e13c39">一開始，我所做的重構都停留在細枝末節上。隨着代碼趨向簡潔，我發現自己可以看到一些設計層面的東西了，這些是我以前理解不到的，如果沒有重構，我達不到這種高度</span></span></span></p><span id="OSC_h1_24"></span><h1><span><span><span>五、code show</span></span></span></h1><span id="OSC_h3_25"></span><h3><span><span><span>5.1、重構前金額計算</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>到家售後單金額計算 service 方法</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-17-21suiEaSppoaot524r.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span> 京東售後單金額計算 service 方法 </span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>一個大的金額計算 class 類就有 1000 多行代碼，每個方法中都有幾百行代碼，以下是到家售後單金額計算部分代碼</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-17-24SIMdGahcCnlwMft.png" referrerpolicy="no-referrer"></div><span id="OSC_h3_26"></span><h3><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span><span><span><span>5.2、重構後金額計算</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>到家和京東售後單金額計算用同一個接口才承接業務實現，並且使用策略+抽象工廠模式實現到家、小時購、天選業務的金額計算</span></span></span></p><div><img alt="" height="485" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-16-06zo6Ussx10DiTM9aZ.png" width="949" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span></p><p><span><span><span>策略模式獲取金額拆分結果集</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-16-197BtKUjnliCO0tWL.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span></p><p><span><span><span>金額計算核心方法只有 4 步驟</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-16-07Hh7lMDbD24dz710Z8.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span></p><p><span><span><span>其中金額計算的核心則採用的是責任鏈業務進行計算</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-16-18tYPt18htIb24Wqq18K.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span></p><p><span><span><span>在件維度、sku 維度針對不同的業務又採用了責任鏈模式進行金額計算</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-16-20yiO6J10jVGmJJdK.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span></p><span id="OSC_h1_27"></span><h1><span><span><span>六、參考文獻</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>代碼的壞味道： </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qinglite.cn%2Fdoc%2F87036476d565d55f9" target="_blank" rel="nofollow"><span><span><span>https://www.qinglite.cn/doc/87036476d565d55f9</span></span></span></a><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span style="background-color:#ffffff; color:#202124">《重構改善既有代碼的設計》：[美]MartinFowler</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>《敏捷軟件開發》：[美]RobertC.Martin</span></span></span></p><blockquote><p>作者：京東零售，高凱</p><p>來源：京東雲開發者社區，轉載請註明來源</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 03:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10140342</guid>
            <link>https://my.oschina.net/u/4090830/blog/10140342</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中國信通院杜劉通等：全球 6G 技術產業發展態勢]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h4><strong>0&nbsp; 引言</strong></h4><p>當前，以移動通信技術為代表的信息通信技術蓬勃發展，已成為加速數字經濟與實體經濟融合的重要推動力，在推動全球經濟社會發展、產業結構變革和技術迭代創新方面持續發揮關鍵作用。縱觀全球，5G 已進入規模化商用階段。據全球移動供應商協會統計，截至 2023 年 5 月，全球已有 99 個國家和地區的 254 家運營商推出了商用 5G 網絡服務[1]。我國已建成規模較大、技術較先進的 5G 網絡。與此同時，隨着移動通信技術的持續演進，6G 逐漸成為全球科技創新的重點領域。本文將從國際標準研究進展、全球發展態勢、國內相關研究工作三個角度梳理全球 6G 發展現狀，提出推動 6G 發展建議，為開展 6G 研究提供有益參考。</p><h4><strong>1&nbsp; 6G 發展概述</strong></h4><p>按照移動通信技術「十年一代」的發展規律，6G 最早將於 2030 年進入商用階段。2022 年 3 月，國際電信聯盟（International Telecommunication Union，ITU）正式啓動 6G 研究，明確了 6G 國際標準工作計劃。2022 年 6 月，ITU 發佈了面向 2030 及未來國際移動通信（International Mobile Telecommunications，IMT）技術趨勢的報告[2]，其中指出，未來移動通信的關鍵使能技術將包括增強型無線空口技術（如超大規模天線、新型調製編碼技術與多址接入技術等）、感知與通信融合、人工智能與通信融合、新維度無線通信（如智能超表面等）、高頻段（如太赫茲等）通信以及新型無線網絡架構等，6G 總體技術框架逐步形成。2023 年 6 月 12 日至 22 日，ITU 完成《IMT 面向 2030 及未來發展的框架和總體目標建議書》（簡稱《建議書》）[3]，明確了 6G 發展目標、典型場景、能力指標等內容，對後續 6G 技術和標準研究有重要指導作用[4]。</p><p>在發展目標方面，6G 將推動實現包容性、泛在連接、可持續性、創新、安全性/隱私性/韌性、標準化和互操作、互通性七大目標，成為更好連接物理世界和虛擬世界、承載新用戶、賦能新應用的新型數字基礎設施；在典型場景方面，6G 將在 5G 三大典型場景的基礎上持續增強和擴展，包含沉浸式通信、超大規模連接、極高可靠低時延、人工智能與通信融合、感知與通信融合、泛在連接六大場景；在性能指標方面，《建議書》明確了 6G 的 15 個關鍵能力指標，除傳統移動通信的峯值速率、體驗速率、頻譜效率、區域流量密度、連接密度、覆蓋、移動性、時延、可靠性等指標外，6G 還將在安全性/隱私/韌性、定位、感知、智能、可持續發展、互操作等維度新增性能指標。</p><p>筆者根據移動通信國際標準制定的經驗發現，ITU 作為國際移動通信標準的評估及認定機構，將在 2024—2026 年進一步細化和完善 6G 性能指標要求，制定相應評估方法；2027 年將針對制定的指標開展候選技術方案徵集，預計在 2029 年完成 6G 基礎版本標準，2030 年左右啓動 6G 商用部署。作為目前影響力較大的移動通信國際標準制定組織，第三代合作伙伴計劃（The 3rd Generation Partnership Project，3GPP）在 2022 年 6 月宣佈正式凍結 5G 移動通信國際標準 Release 17，並正式啓動了 Release 18 版 5G 國際標準研製工作，5G 標準制定進入 5G 增強（5G-Advanced，5G-A）發展階段，感知與通信融合、人工智能與通信融合的部分功能將在此階段逐步實現，為後續 6G 標準制定奠定有力基礎。根據 3GPP 已公佈的標準制定計劃，最早將於 2025 年啓動 6G 有關國際標準研製工作，並預計 2029 年左右完成 6G 國際標準基礎版本。</p><h4><strong>2&nbsp; 全球主要國家和地區 6G 發展情況</strong></h4><p><strong>2.1&nbsp; 美國</strong></p><p>美國在產業組織和政府等層面積極推動 6G 研發合作。在產業組織層面，美國由電信行業解決方案聯盟（Alliance for Telecommunications Industry Solutions，ATIS）牽頭成立了 Next G 聯盟，旨在加強 6G 技術、網絡、應用等領域的合作。除傳統通信設備商及運營商外，還積極吸納微軟、谷歌、英特爾等信息技術領域軟/硬件企業，實現從 6G 研發、測試到商用的全流程合作。2022 年 8 月 11 日，ATIS 與歐洲 6G 智慧網絡和業務產業協會（6G Smart Networks and Services Industry Association，6G-IA）簽署了一份 6G 合作諒解備忘錄。雙方將在 6G 通信系統和網絡領域強化交流合作，開展 6G 研討會、試驗等多項活動，並計劃共同推動全球 6G 統一標準的相關合作。2021 年 12 月，Next G 聯盟和韓國 5G 論壇宣佈簽署諒解備忘錄，共同促進下一代移動通信方面的合作。在政府層面，2021 年 12 月，美國通過《未來網絡法案》，要求美國聯邦通信委員會（Federal Communications Commission，FCC）建立 6G 工作組，6G 工作組由政府、通信設備商、運營商等組成，負責向美國國會提交與 6G 國際標準、建設部署、產業鏈、供應鏈等相關的報告。2022 年 1 月，FCC 成立了技術諮詢委員會（Technical Advisory Council，TAC），領導人工智能和 6G 等技術的研究，重點關注新型頻譜共享和新型無線通信等技術。2023 年 4 月，美國政府召集學術界、工業界、社會組織、政府部門、參眾兩院等代表在白宮召開 6G 研討會，並以美國國家安全委員會（National Security Council，NSC）名義發佈關於 6G 設計原則的報告，在技術可信及國家安全、開放及互操作、安全及隱私保護、成本可控及可持續發展、頻率及製造、標準及國際合作 6 個方面闡述了對 6G 設計原則的考慮，強調 6G 應建立在與美國及其盟友價值觀相符的技術標準之上。2023 年 5 月，Next G 聯盟發佈「6G——創新和投資的下一個前沿」倡議書（簡稱「倡議書」），指出 6G 作為下一代移動通信技術將定義 2030 年以後的國際經濟格局。倡議書認為，當前是強化政府、行業和學術界合作以保持美國未來領先優勢的關鍵時刻，呼籲國會和政府充分資助已有的 6G 法案，並啓動 6G 立法新進程，強化美國在無線技術創新領域的領導者地位。2023 年 6 月，美國和英國聯合發佈《二十一世紀美英經濟夥伴關係大西洋宣言》，宣佈將在 6G 等關鍵和新興技術領域加強合作，包括共同制定願景，深化在 5G 及 6G 解決方案領域的技術創新合作，推進聯合研發項目。</p><p><strong>2.2&nbsp; 歐盟</strong></p><p>歐盟設立 6G 相關研發項目，加大資金投入，積極推進 6G 研發。2017 年，歐盟便啓動了包括糾錯碼、信道編碼、調製技術在內的 6G 基礎技術研究項目。2018 年，芬蘭國家技術研究中心聯合奧盧大學、諾基亞公司等實施為期 8 年的 6G 旗艦項目，計劃總投資 2.9 億美元，研究內容為包含 6G 願景、挑戰、應用和技術方案在內的完整 6G 生態系統[5]。2020 年，歐盟推出了 2021—2027 年的科研資助框架「歐洲地平線」，開展包括下一代移動通信網絡在內的六大關鍵技術研究，並於 2021 年 1 月正式啓動 6G 旗艦項目 Hexa-X，該項目為期兩年半，項目整體由諾基亞負責，愛立信為技術負責單位，此外西門子、英特爾、法國電信 Orange、芬蘭阿爾託大學等在內的多家設備商、運營商及科研機構也參與其中。Hexa-X 項目包括智能連接、多網聚合、可持續性、全球服務覆蓋、極致體驗和安全性六大研究方向。2021 年 2 月，歐盟通過立法提案，由歐盟聯合私營企業資助設立「智能網絡和服務聯合夥伴」（Smart Network and Services Joint Undertaking，SNS-JU）項目，用於構建服務全歐洲的 6G 試驗性基礎設施。目前，該計劃已分別於 2022 年 10 月和 2023 年 1 月啓動了兩批次項目。此外，歐盟成立了 6G-IA 作為歐洲下一代移動通信網絡與業務研究的重要平台，6G-IA 在 5G 基礎設施公私合作伙伴關係（5G Infrastructure Public Private Partnership，5G-PPP）和 SNS-JU 中代表私營企業，歐盟則代表公共部門。6G-IA 匯聚了歐洲運營商、製造商、研究機構、垂直行業等多方參與者，組織開展面向超五代移動通信（Beyond 5G，B5G）及 6G 的技術研發、試驗驗證、標準研製、頻譜規劃等研究。</p><p><strong>2.3&nbsp; 日本</strong></p><p>日本政府通過推出相關政策和設立研究項目，立足產業優勢推動 6G 發展。2020 年 6 月，日本總務省發佈《Beyond 5G 推進戰略》，明確 6G 發展目標及研究開發、知識產權和標準化推進戰略。2020 年底，成立 B5G 推進聯盟以實現 B5G 標準和知識產權戰略及進一步增強日本在 B5G 領域的國際競爭力。2021 年 10 月，日本政府宣佈擬放寬 6G 頻段試驗牌照，簡化申請手續，縮短審批時間，並進一步放寬試驗頻段範圍，提升日本本土製造商國際競爭力。2023 年 3 月，日本總務省宣佈在情報通信研究機構（National Institute of Information and Communications Technology，NICT）設立信息通信研究開發基金，用於實施創新信息通信技術（Beyond 5G（6G））基金項目。該基金以成功開發下一代信息通信基礎設施、實現 30% 國際市場份額為目標，重點支持以下三類項目：一是對於具有技術優勢、有明確海外擴張戰略及計劃並且技術相對成熟（即在假設場景下已開發出初步原型樣機用於性能測試）的研發項目，基金最多可支持此類項目一半的總研發成本，即每個項目每年可獲數十億日元（原則上不超過 100 億日元）資金支持；二是對於處在研發早期階段（即技術處在概念形成及應用探索階段），需較長時間才能落地的項目，每年可支持 1 億日元（原則上不超過 10 億日元）；三是對於提升無線電頻譜效率的研發項目，每年資助資金則取決於項目規模[6]。</p><p><strong>2.4&nbsp; 韓國</strong></p><p>韓國以實現全球最早 6G 商用為目標，強化政府引導和產業帶動模式加速 6G 創新。韓國政府成立了由科學和信息通信技術部、運營商、設備企業、研究機構等組成的 6G 研發戰略委員會，該委員會將負責制定韓國 6G 相關研究項目，定期組織召開研討會以評估審查現有 6G 研發戰略中各子項計劃的進度，以及基於實際情況調整後續策略。2021 年 6 月，韓國科學和信息通信技術部宣佈將於 2025 年前投入 2 200 億韓元（約合人民幣 12.6 億元）用於加強韓國在未來的技術競爭力，研究領域包括研發 6G 關鍵技術、研製國際標準、夯實產業基礎三大戰略領域[7]。2022 年 11 月，韓國宣佈設立面向 6G 服務應用的商業化研究項目，計劃於 2026 年進行 6G 技術的早期商業化展示，並於 2027 年啓動 6G 早期商用網絡部署。2023 年 2 月，韓國發布「K-Network 2030」戰略，將原計劃 2026 年啓動的 6G 商業化項目提前至 2024 年，並投入 6 253 億韓元用於技術研發、產業基礎、人才培養等方面，推動韓國 6G 商用從 2030 年提前到 2028 年[8]。</p><h4><strong>3&nbsp; 我國 6G 發展情況</strong></h4><p>我國前瞻啓動 6G 研究，在政策文件、技術研究、標準推進、技術試驗等多方面採取有力舉措，紮實推動 6G 發展。在政策文件方面，2021 年 3 月至 12 月，我國先後發佈了《中華人民共和國國民經濟和社會發展第十四個五年規劃和 2035 年遠景目標綱要》《「十四五」信息通信行業發展規劃》《「十四五」數字經濟發展規劃》《「十四五」國家信息化規劃》[9-11]，提出要「前瞻佈局 6G 網絡技術儲備」「開展 6G 基礎理論及關鍵技術研發，構建 6G 願景、典型應用場景和關鍵能力指標體系，鼓勵企業深入開展 6G 潛在技術研究」「積極參與 6G 標準研究，形成一批 6G 核心研究成果」「前瞻佈局第六代移動通信（6G）網絡技術儲備，加大 6G 技術研發支持力度，積極參與推動 6G 國際標準化工作」「加強新型網絡基礎架構和 6G 研究，加快地面無線與衞星通信融合、太赫茲通信等關鍵技術研發」。</p><p>2019 年 6 月，我國工業和信息化部會同國家發展和改革委員會、科學技術部指導產業界成立了 IMT-2030（6G）推進組（簡稱「6G 推進組」），作為我國推進 6G 發展的主要產業平台，聯合產、學、研、用各方力量在 6G 願景需求、技術研發、試驗驗證、國際合作等方面持續推動 6G 發展。在願景需求研究方面，6G 推進組先後發佈《6G 總體願景與潛在關鍵技術白皮書》等[12-13]，提出 6G 總體願景、典型場景、關鍵能力指標，展現產業界對 6G 發展目標如何發展的階段性思考，凝聚業界關於 6G 發展的廣泛共識。ITU 於 2023 年 6 月召開第 44 次會議，完成《IMT 面向 2030 及未來發展的框架和總體目標建議書》，我國提出的 5 類典型場景和 14 項關鍵能力指標等核心研究成果成功納入其中[2]。技術研究方面，6G 推進組聯合產業界開展系統整體架構、新型無線技術、新型網絡技術等 6G 潛在關鍵技術研究，持續發佈系列研究報告，有力推動形成 6G 創新發展共識。2022 年 8 月，6G 推進組啓動 6G 技術試驗，針對太赫茲通信、通信感知一體化、智能超表面 3 項無線關鍵技術和算力網絡、分佈式自治網絡 2 項網絡關鍵技術開展測試。2022 年 11 月，啓動面向 6G 的關鍵技術全球徵集，針對技術跨域融合發展趨勢帶來的 6G 技術創新難度大、更新速度快等挑戰，面向全球高等院校、科研院所、科技企業、推進組織等開展 6G 潛在關鍵技術徵集。同時，積極參與 ITU 相關研討會,輸出我國 6G 研究成果，支撐 ITU 完成面向 2030 及未來 IMT 技術趨勢的報告，推動我國技術研究納入 6G 總體框架，助力全球 6G 技術產業發展。在國際交流合作方面，6G 推進組已與歐洲 6G-IA 和韓國 5G 論壇等產業組織簽署了合作意向，在 6G 願景需求、技術研究等領域開展合作，共同發佈研究成果。2022 年 6 月，6G 推進組與 6G-IA 簽署 6G 合作備忘錄。2023 年 5 月，6G 推進組與 6G-IA 共同舉辦線上 6G 主題研討會，雙方代表就 6G 願景需求、技術趨勢等熱點議題進行了深入交流。</p><h4><strong>4&nbsp; 結束語</strong></h4><p>當前，移動通信產業發展如火如荼，有助於全球經濟和社會可持續發展。未來，可以從以下幾方面加強技術研究和產業研發。</p><p>一是立足 5G 基礎推動 6G 發展。移動通信產業發展代際演進明顯，6G 的發展離不開 5G 的堅實基礎。當前正處在 5G 規模應用和 5G-A 標準制定的關鍵時期，一方面，要進一步凝聚產業力量，特別是垂直行業的力量，深挖產業需求，加快推動 5G 在生產生活關鍵領域的深入融合應用；另一方面，要繼續強化 5G-A 關鍵技術研究和標準推進，持續打造良好產業生態，為 6G 發展築牢基礎。</p><p>二是強化 6G 潛在關鍵技術研究。產業代際演進的核心動力是關鍵技術的突破，面臨跨域融合的技術發展趨勢。要積極發揮產業推進平台作用，持續開展面向 6G 的關鍵技術徵集活動，匯聚產、學、研、用各方面力量，從基礎技術、原創技術、應用技術等多個角度推動 6G 理論創新和工程實現取得突破；同時，要注重發揮技術試驗承擔「研」與「產」之間橋樑的作用，用好橫向對比和縱向突破，推動技術不斷迭代成熟，加速技術產業化。</p><p>三是深化國際交流合作。歷經數十年發展，移動通信的蓬勃健康發展離不開全球產業界的共同努力。要不斷深化 6G 技術、標準、市場等領域交流合作與協同創新。一方面鼓勵與國際產業組織、科研院所等共同開展 6G 研究項目，互相參與試驗驗證，積極參與 ITU、3GPP 等國際標準化組織的技術和標準化交流活動，深化全球 6G 創新共識；另一方面積極召開全球 6G 發展大會等活動，邀請國內外專家分享最新研究成果，推動技術研究和產業發展不斷取得更廣泛共識。</p><h4><strong>作者簡介</strong></h4><blockquote><p style="margin-left:0; margin-right:0"><strong><span style="color:#3e3e3e">杜劉通</span></strong><strong><span style="color:#3e3e3e">&nbsp;&nbsp;</span></strong></p><p>中國信息通信研究院移動通信創新中心工程師，博士，主要從事 5G、6G 技術產業研究等方面的研究工作。</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#3e3e3e">徐曉燕&nbsp; &nbsp;</span></strong></p><p>通信作者。中國信息通信研究院移動通信創新中心高級工程師，博士，主要從事面向 6G 的技術預研、ITU 相關標準化活動等方面的研究工作。</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#3e3e3e">杜瀅&nbsp;&nbsp;</span></strong></p><p>中國信息通信研究院移動通信創新中心副主任，教授級高級工程師，主要從事無線移動通信技術和標準等方面的研究工作。</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#3e3e3e">魏克軍&nbsp; &nbsp;</span></strong></p><p>中國信息通信研究院移動通信創新中心副總工程師，教授級高級工程師，主要從事無線移動通信技術等方面的研究工作。</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#3e3e3e">金彎彎&nbsp; &nbsp;</span></strong></p><p>中國人民大學經濟學院本科生在讀，主要從事信息通信行業產業經濟政策等方面的研究工作。</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 03:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264732</guid>
            <link>https://www.oschina.net/news/264732</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visual Studio Code 1.84 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Visual Studio Code 1.84 現已發佈，具體更新內容如下：</span></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_accessibility" target="_blank">更多音頻提示</a>&nbsp;</strong>- 新的音頻提示可指示清除、保存和格式化活動。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_workbench" target="_blank">自定義活動欄位置</a>&nbsp;</strong>- 將活動欄移至頂部以緊湊顯示。</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a02489be8fd5595d8dc82350d192b5472a2.gif" width="400" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_hide-editor-tabs" target="_blank">隱藏編輯器選項卡</a>&nbsp;</strong>- 顯示多個、單個或不顯示編輯器選項卡。</li></ul><p><img alt="" height="207" src="https://oscimg.oschina.net/oscnet/up-398420c769b24caa7db39e15dfc6428ae6b.gif" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_maximize-editor-group" target="_blank">最大化 Editor Groups</a>&nbsp;</strong>- 快速展開活動的 Editor Group。</li></ul><p><img alt="" height="318" src="https://oscimg.oschina.net/oscnet/up-f7316c4fd42416ea0211da2c2149213e46f.gif" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_python" target="_blank">Python 改進</a>&nbsp;</strong>- 更好地在終端中運行代碼，更輕鬆地創建虛擬環境。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_fastapi-tutorial" target="_blank">FastAPI 教程</a>&nbsp;</strong>- 瞭解如何使用 VS Code 開發 Python FastAPI 應用程序。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_gradle-for-java" target="_blank">Gradle for Java</a></strong>&nbsp;- 改進了對 Java Gradle 項目的支持。</li></ul><p><img height="104" src="https://oscimg.oschina.net/oscnet/up-239bfee4e76f665ff20e9fda7fc279bbaea.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_github-copilot" target="_blank">Preview：GitHub Copilot</a></strong>&nbsp;- 聊天「代理」，生成 commit 消息，終端支持。</li></ul><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84" target="_blank">查看官方公告</a>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 02:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264731/vs-code-1-84-released</guid>
            <link>https://www.oschina.net/news/264731/vs-code-1-84-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[商城系統平台端更新登錄、經營狀況、平台管理模塊]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><div><p style="margin-left:0; margin-right:0"><strong>登錄功能模塊</strong></p></div><div><ul><li><span>密碼登錄：輸入框提示語調整為【請輸入手機號，或 賬號】</span></li><li><strong><span style="color:#df2a3f">賬號、密碼</span></strong><span> 位數：限定為 11 位</span></li><li><span>在線時長：token 有效期 30 天 ，避免頻繁登錄</span></li><li><span>重複登錄：處於登錄狀態打開後直接進入系統即可，目前操作用戶名和密碼沒有錯誤但登錄提示【用戶名或密碼錯誤】需要清緩存才行</span></li><li><span>店鋪名稱：需將店鋪名稱顯示全</span></li><li><span>重置：</span><strong><span style="color:#df2a3f">所有搜索功能模塊中都加上【重置】功能</span></strong></li></ul><p style="margin-left:0; margin-right:0"><strong><span>修改密碼</span></strong></p><ul><li><span>將待修改用戶的手機號顯示出來，取消脫敏展示樣式</span></li><li><span>驗證碼：改為與登錄操作一致滑動圖片將驗證碼填入框內</span></li></ul></div><p><strong>經營概況模塊</strong></p><div><span>日註冊用戶數：將【今日訪客數】改為【今日註冊用戶數】，即今日註冊成功的總用戶數</span></div><p>&nbsp;</p><p><strong>平台管理模塊</strong></p></div><div><ul><li><span>菜單順序：店鋪管理、供應商管理、門店管理</span></li><li><span>刪除：當刪除【店鋪、供應商】時，需同步將【簽約類目、自己的商品】一併刪除</span></li></ul><p style="margin-left:0; margin-right:0"><strong><span>店鋪管理</span></strong></p><ul><li><span>店鋪評分：將【商品評分】改為【店鋪評分】，店鋪評分是指本店已售評價商品的平均分</span></li><li><span>店鋪 ID：將【ID】改為【店鋪 ID】</span></li><li><span>添加類目：添加類目中需增加百分比符號顯示</span></li></ul></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 01:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264722</guid>
            <link>https://www.oschina.net/news/264722</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌宣佈「移動優先索引」工作已完成]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Google 搜索的博客<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevelopers.google.com%2Fsearch%2Fblog%2F2023%2F10%2Fmobile-first-is-here" target="_blank">近日更新的文章稱</a></u>，<span style="background-color:rgba(255, 255, 255, 0.65); color:#000000">七年前開始的<strong>移動優先索引&nbsp;</strong></span><strong>(Mobile-FirstIndexing) </strong>工作<span style="background-color:rgba(255, 255, 255, 0.65); color:#000000">現已完成。</span></p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1102/184543_fsMq_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>Google 在 6 年半前就開始採用移動優先索引，在發佈了一個又一個截止日期後，Google 最終取消了截止日期。</p><p>2016 年 11 月，Google 首次推出了移動優先索引。到 2018 年 12 月，Google 搜索結果中的一半網站都來自移動優先索引。簡單地説，移動優先索引就是 Google 將從移動瀏覽器的視角抓取你的網站，並使用該移動版本進行索引和排名。</p><p>Google 在 2020 年 3 月初，宣佈所有網站切換到移動優先索引的截止日期為 2020 年 9 月。當時 Google 表示："為了簡化，我們將從 2020 年 9 月開始對所有網站切換到移動優先索引。隨後在 2020 年 7 月，Google 再次將最後期限推遲到 2021 年 3 月。"</p><p>但在今年 5 月份，Google 事實上已經完成了網站移動索引的切換，但直到現在才正式宣佈。Google 將減少傳統桌面 Googlebot 的抓取次數。</p><p>Google 解釋説，「有一小部分網站根本無法在移動設備上運行，這些網站主要是頁面向所有移動用戶顯示錯誤，移動版網站被 robots.txt 屏蔽，而桌面版網站允許抓取，或者移動網站上的所有頁面都重定向到主頁。」</p><p>Google 表示，這類問題是搜索引擎無法解決的，目前將繼續嘗試用我們傳統的桌面版 Googlebot 爬蟲抓取這些網站，並將每年對名單進行幾次重新評估。</p><p>Search Console 的變化方面，Google 宣佈將關閉 Google 搜索控制枱設置頁面中的索引爬蟲信息。Google 解釋説："由於所有在移動設備上運行的網站現在都主要由我們的移動爬蟲抓取，因此不再需要這些信息。"</p><p>由於移動優先索引現在已經真正完成，這意味着 Google 很快將完全停止通過其傳統的桌面爬蟲進行抓取。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 10:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264670/mobile-first-is-here</guid>
            <link>https://www.oschina.net/news/264670/mobile-first-is-here</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌：正在完善 Android 中的 RISC-V 支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">谷歌曾在 2022 年 11 月的 RISC-V 峯會上宣佈已開始接受 RISC-V 補丁。一年後的現在，該公司則表示其正在完善 Android 中對 RISC-V 的支持。「我們的最新更新是，現在我們不僅接受補丁，而且還開始在 Android 中成熟地支持 RISC-V。」</span></p><p><span style="color:#000000">負責 Android 平台編程語言的 Lars Bergstrom 和負責低級操作系統的 Greg Simon <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensource.googleblog.com%2F2023%2F10%2Fandroid-and-risc-v-what-you-need-to-know.html" target="_blank">在博客中表示</a>，他們已經確定了一組關鍵的擴展（包括 rva22 配置文件和矢量/加密擴展），以確保運行 RISC-V 的 CPU 具有高性能。</span></p><p><span style="color:#000000">開發人員現在可以在自己的計算機上構建、測試和運行對 RISC-V 的 Android 支持。可以使用 Cuttlefish 虛擬設備支持：</span></p><pre><code>$ lunch aosp_cf_riscv64_phone-userdebug
$ m -j
$ launch_cvd -cpus=8 -memory_mb=8192</code></pre><p><span style="color:#000000">然後可以使用 vncviewer 連接到正在運行的設備並進行交互。</span></p><p><span style="color:#000000"><img alt="" height="278" src="https://oscimg.oschina.net/oscnet/up-f4e707629f0afb6b046e5c2c412f90a99fd.gif" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">目前，這些補丁將支持構建和運行基本的 Android 開源項目體驗，但尚未完全優化。例如，針對 Android Runtime (ART) 的完全優化後端工作仍在進行中。此外，AOSP、外部項目和編譯器還沒有生成經過全面優化的精簡代碼，這些代碼也沒有利用最新批准的擴展（如向量擴展）。但谷歌方面表示，他們相信<span style="background-color:#ffffff">該平台已經為實驗和協作做好了準備。</span></span></p><p><span style="color:#000000">展望未來，<span style="background-color:#ffffff">該公司的目標是在今年年底最終確定 NDK ABI，以及在 Android 的公共 CI 上提供金絲雀構建；同時提供 x86-64 和 ARM64 上的 RISC-V，以便在主機上更輕鬆地測試 riscv64 Android 應用程序。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">到 2024 年，他們則計劃推出公開可用的模擬器</span><span style="background-color:#ffffff">；</span><span style="background-color:#ffffff">具有完整的功能集，可以測試各種設備外形尺寸的應用程序。</span>「<span style="background-color:#ffffff">正如我們最近與高通公司合作宣佈的那樣，我們預計可穿戴設備將成為第一個可用的形式因素</span>」。本月早些時候，高通曾宣佈正在與谷歌合作開發&nbsp;RISC-V Wear OS 芯片。</span></p><p><span style="color:#000000">不僅限於 <span style="background-color:#ffffff">Android 操作系統</span>，谷歌方面還透露其正在與社區和 RISE（RISC-V 軟件生態系統）積極合作。並表示，接下來將繼續並擴大對 RISC-V International 的投資。「Android 對 RISC-V 的支持依賴於從工具鏈到基本支持庫的廣泛貢獻。我們非常感謝無數項目為支持 RISC-V 構建配置和高質量實施所做的不懈努力。」</span></p><p><span style="color:#000000">RISE 項目的成立旨在為運行高級操作系統的高性能、高能效 RISC-V 處理器內核提供一種加速軟件可用性的方法，不僅包括 Android，還包括 Linux 和其他操作系統，涉及高性能計算等多個應用領域。RISE 項目的成員包括 Andes、谷歌、英特爾、Imagination Technologies、聯發科、英偉達、高通技術、紅帽、Rivos、三星、SiFive、T-Head 和 Ventana。</span></p><p><span style="color:#000000">有興趣為 Android 中的 RISC-V 支持做出貢獻的開發人員可以</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoogle%2Fandroid-riscv64" target="_blank">在 GitHub 上</a><span style="color:#000000">找到有關構建和測試的詳細信息。谷歌鼓勵開發者社區的參與，以進一步增強該平台。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 10:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264668/android-and-risc-v</guid>
            <link>https://www.oschina.net/news/264668/android-and-risc-v</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DoltgreSQL 發佈，基於 Git 的 PostgreSQL]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>DoltSQL 的工作原理是模擬 PostgreSQL 服務器，並將接收到的命令轉換為交給底層 Dolt 服務器的 AST。</p></blockquote><p>Dolt 是一個基於 Git 協議的開源 SQL 數據庫，「版本控制的數據庫」，使用 Golang 語言編寫。首先它和 MySQL 關係型數據庫一樣，用於存儲和管理數據，具有表、視圖等概念，支持數據的增刪改查等操作。它還提供了一個命令行工具，完美支持所有的 Git 命令，允許用戶像使用一個 git 倉庫一樣對數據進行 fork、clone、branch、merge、push 和 pull 等操作。</p><p>Dolt 可以替代 MySQL，因為它實現了 MySQL 的語法和線協議，但它並不包含任何 MySQL 的代碼，因為解決數據庫版本控制問題的複雜性和挑戰需要定製的解決方案。目前 Dolt 也已經準備好投入生產。</p><p><img height="920" src="https://static.oschina.net/uploads/space/2023/1102/183217_nsBr_3820517.png" width="1636" referrerpolicy="no-referrer"></p><p>而當前發佈的 DoltSQL 是對 PostgreSQL 的支持。DoltSQL 的工作原理是模擬 PostgreSQL 服務器，並將接收到的命令轉換為交給底層 Dolt 服務器的 AST。這使得能夠快速啓動並運行，同時利用 Dolt 已經提供的特性。DoltSQL 團隊解決，在採取這種方法之前，考察了很多其它方法，從編寫外部數據包裝器，到為 PostgreSQL 構建新的存儲後端，甚至是分叉 PostgreSQL 本身。但許多方法都無法完全支持版本控制功能，而其它方法（如分叉 PostgreSQL）可能需要數年的開發時間。</p><p>使用方式：</p><ol><li><p>Download the <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdolthub%2Fdoltgresql%2Freleases" target="_blank"><strong>latest release</strong></a></p></li><li><p>Put the binary on your PATH.</p></li><li><p>Navigate to a directory you want your database data stored (eg. <code>~/doltgresql</code>).</p></li><li><p>Run <code>doltgres</code>. This will create a <code>doltgres</code> user and a <code>doltgres</code> database.</p></li><li><p>Open a new terminal. Connect with the following command: <code>psql -h localhost -U doltgres</code>. This will connect to the <code>doltgres</code> database with the <code>doltgres</code> user.</p></li><li><p>Run <code>CREATE TABLE example (pk INT8 PRIMARY KEY);</code>&nbsp;運行 <code>CREATE TABLE example (pk INT8 PRIMARY KEY);</code></p></li></ol><p>詳情查看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.dolthub.com%2Fblog%2F2023-11-01-announcing-doltgresql%2F" target="_blank">https://www.dolthub.com/blog/2023-11-01-announcing-doltgresql</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 10:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264666/announcing-doltgresql</guid>
            <link>https://www.oschina.net/news/264666/announcing-doltgresql</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[macOS Sonoma 中的 grep 命令被損壞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>蘋果開發者論壇上的一則帖子<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fforums%2Fthread%2F738862" target="_blank">寫道</a>：</p><blockquote><p>macOS Sonoma 中的 grep 命令遭到了損壞，具體情況是出現<strong>斷言失敗 (Assertion Fails) 問題</strong>。</p><p>目前在新版系統中，macOS 上最新的<code>grep</code><strong>會索引到當前字符串超出的範圍</strong>，由於<code>grep</code>終止了當前行緩衝區帶有一個額外的空字符（不是原始輸入文件的一部分），所以它恰好觸發了<code>assert</code>來檢查當前字符（在字符串之外）有多少字節寬。</p><p><img src="https://static.oschina.net/uploads/space/2023/1102/180554_3aG1_2720166.png" referrerpolicy="no-referrer"></p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fforums%2Fthread%2F738862" target="_blank">https://developer.apple.com/forums/thread/738862</a></em></p></blockquote><p>這名發帖者表示，macOS 工程師原本是試圖修復一個錯誤，沒想到卻破壞了另一個正常的功能 —— grep 命令。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 10:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264665</guid>
            <link>https://www.oschina.net/news/264665</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Transformers.js 2.7.0 發佈，新增文本轉語音]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Transformers.js 支持在瀏覽器中實現最先進的機器學習——無需服務器。它提供預訓練模型和熟悉的 API，支持自然語言處理、計算機視覺、音頻和多模態領域的任務。</p><p>藉助 Transformers.js，開發者可以直接在瀏覽器中運行文本分類、圖像分類、語音識別等任務，這使其成為 ML 從業者和研究人員的強大工具。</p><p>最近發佈的<strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxenova%2Ftransformers.js%2Freleases%2Ftag%2F2.7.0" target="_blank"> Transformers.js 2.7.0 </a></u></strong>添加了一項重要功能：文本轉語音。</p><p>下面是演示視頻：</p><div class="ckeditor-html5-video" style="text-align:center"><video controls="controls" src="https://user-images.githubusercontent.com/26504141/277378666-9fa5131d-0e07-47fa-9a13-122c1b69d233.mp4">
  &nbsp;
 </video></div><p>&nbsp;</p><p>開發者表示目前只支持 speecht5 的文本轉語音，將來會添加其他模型，如 bark 和 MMS。</p><p>為了展示在瀏覽器中文本轉語音的強大功能，開發者還發布了一個簡單的示例應用：</p><ul><li>演示：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FXenova%2Ftext-to-speech-client" target="_blank">https://huggingface.co/spaces/Xenova/text-to-speech-client</a></li><li>代碼：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxenova%2Ftransformers.js%2Ftree%2Fmain%2Fexamples%2Ftext-to-speech-client" target="_blank">https://github.com/xenova/transformers.js/tree/main/examples/text-to-speech-client</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 06:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264606/transformers-js-2-7-0-released</guid>
            <link>https://www.oschina.net/news/264606/transformers-js-2-7-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenFunction 1.2.0 發佈：集成 KEDA http-addon 作為同步函數運行時]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenFunction%2FOpenFunction" target="_blank">OpenFunction</a> 是一個開源的雲原生 FaaS（Function as a Service，函數即服務）平台，旨在幫助開發者專注於業務邏輯的研發。我們非常高興地宣佈 OpenFunction 又迎來了一次重要的更新，即 v1.2.0 版本的發佈！</p><p>本次更新中，我們繼續致力於為開發者們提供更加靈活和強大的工具，並在此基礎上加入了一些新的功能點。該版本集成了 KEDA http-addon 作為同步函數運行時；支持在啓用 SkyWalking 跟蹤時添加環境變量；支持記錄構建時間等。此外，還升級了部分組件及修復了多項 bug。</p><p>以下是該版本更新的主要內容：</p><h2>集成 KEDA http-addon 作為同步函數運行時</h2><p>KEDA http-addon 是一個 KEDA 的附加組件，它可以根據 HTTP 流量的變化自動地調整 HTTP 服務器的規模（包括從零開始擴容和縮容到零）。</p><p>KEDA http-addon 的工作原理是，它會在 Kubernetes 集羣中創建一個名為 Interceptor 的組件，用來接收所有的 HTTP 請求，並將請求轉發給目標應用。同時，它會將請求隊列的長度報告給一個名為 External Scaler 的組件，用來觸發 KEDA 的自動擴縮容機制。這樣，你的 HTTP 應用就可以根據實際的流量需求動態地調整副本數。</p><p>在 OpenFunction v1.2.0 版本中，我們集成了 KEDA http-addon 作為同步函數運行時的一種選擇。這意味着，你可以使用 OpenFunction 來創建和管理基於 HTTP 的函數，並利用 KEDA http-addon 的能力來實現高效且靈活的彈性伸縮。你只需在創建 Function 資源時指定 <code>serving.triggers[*].http.engine</code> 的值為 keda ，並且在 <code>serving.scaleOptions</code> 中配置 <code>keda.httpScaledObject</code> 相關參數，就可以部署和運行你的 HTTP 函數了。</p><h2>支持在啓用 SkyWalking 跟蹤時添加環境變量</h2><p>SkyWalking 是一個開源的應用性能監控（APM）系統，它可以幫助你觀察和分析你的應用在不同環境中的運行狀況。OpenFunction 支持在部署函數時啓用 SkyWalking 跟蹤，以便你可以更好地理解和優化你的函數性能。</p><p>在 OpenFunction v1.2.0 版本中，我們增加了一個新的功能，即支持在啓用 SkyWalking 跟蹤時添加環境變量。這樣，你可以在創建 Function 資源時指定一些自定義的環境變量來控制 SkyWalking 的一些配置參數。這些環境變量會被傳遞給函數容器，並影響 SkyWalking 的採集和上報行為。</p><h2>當 Function、Builder 和 Serving 狀態變化時支持記錄事件</h2><p>事件（Event）是 Kubernetes 中一種重要的資源類型，它可以記錄集羣中發生的一些重要或者有趣的事情。事件可以幫助用戶和開發者瞭解集羣中資源的狀態變化和異常情況，並採取相應的措施。</p><p>在 OpenFunction v1.2.0 版本中，我們支持當 Function、Builder 和 Serving 狀態變化時記錄事件。這樣，你可以通過查看事件來獲取更多關於函數構建和運行過程中發生的事情的信息。例如，你可以看到函數構建開始、結束、失敗等事件；函數運行時創建、更新、刪除等事件。</p><h2>其他的改進和優化</h2><p>除了上述的主要變化，該版本還有以下更改和增強：</p><ul><li>升級了 KEDA 到 v2.10.1 ，HPA（自動伸縮）API 版本到 v2 ，提高了穩定性和兼容性</li><li>支持記錄構建時間，以便你可以瞭解函數構建的耗時情況</li><li>調整了 CI 流程，修復了一些小問題</li><li>修復了一個在 keda http-addon 運行時中的 bug ，該 bug 會導致函數無法正常運行</li><li>升級了 charts 中的一些組件，包括 keda ，dapr 和 contour ，以保持最新的版本和功能</li></ul><p>以上就是 OpenFunction v1.2.0 的主要功能變化，在此十分感謝各位貢獻者的參與和貢獻。</p><p>瞭解更多關於 OpenFunction 和本次版本更新的信息，歡迎訪問我們的官方網站和 Github 頁面。</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenfunction.dev%2F" target="_blank">官網</a>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenfunction.dev%2F" target="_blank">https://openfunction.dev/</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenFunction%2FOpenFunction%2Freleases%2Ftag%2Fv1.2.0" target="_blank">Github</a>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenFunction%2FOpenFunction%2Freleases%2Ftag%2Fv1.2.0" target="_blank">https://github.com/OpenFunction/OpenFunction/releases/tag/v1.2.0</a></li></ul><blockquote><p>本文由博客一文多發平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 發佈！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 06:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10140452</guid>
            <link>https://my.oschina.net/u/4197945/blog/10140452</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[計算流體力學 (CFD) 開源軟件精選合集]]>
            </title>
            <description>
                <![CDATA[計算流體力學 (CFD) 開源軟件精選合集]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 04:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/project/awesome?columnId=17</guid>
            <link>https://www.oschina.net/project/awesome?columnId=17</link>
        </item>
    </channel>
</rss>
