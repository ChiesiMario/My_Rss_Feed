<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sun, 12 Nov 2023 22:59:47 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[阿里雲嚴重故障，全線產品受影響（已恢復）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>22:30 更新：阿里雲稱，<strong>受影響雲產品均已恢復，因故障影響部分雲產品的數據（如監控、賬單等）可能存在延遲推送情況，不影響業務運行</strong>。</p><p>&nbsp;</p><p>19:33 更新：阿里雲稱，工程師通過分批重啓組件服務，絕大部分地域控制枱服務已恢復訪問。</p><p><img src="https://static.oschina.net/uploads/space/2023/1112/194354_8AJz_2720166.png" referrerpolicy="no-referrer"></p><p>來源：<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fnoticelist%2Farticleid%2F1064981333.html" target="_blank">https://help.aliyun.com/noticelist/articleid/1064981333.html</a></em></u></p><p>&nbsp;</p><p>19:00 更新：<strong>阿里雲已確認故障原因與某個底層服務組件有關，工程師正在緊急處理中</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-21fe108caa0ffe2bf02998ed8b9185bbce6.png" referrerpolicy="no-referrer"></p><p>官方通告顯示，阿里雲全線產品受影響。</p><p><img src="https://static.oschina.net/uploads/space/2023/1112/192749_ICdb_2720166.png" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p>18:20 更新，官方迴應：</p><blockquote><p>2023-11-12 18:14<br> (GMT+8)<br> 尊敬的客戶：您好！<br> 北京時間 2023 年 11 月 12 日 17:44 起，阿里雲監控發現雲產品控制枱訪問及 API 調用出現異常，阿里雲工程師正在緊急介入排查。非常抱歉給您的使用帶來不便，若有任何問題，請隨時聯繫我們。</p></blockquote><hr><p>今天下午 17:50 左右，大量網友表示阿里雲盤出現訪問故障，其手機端和電腦端均無法登錄，具體報錯信息如下：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ad5c239c350f3277020b8cc7e597a5871a8.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3e011677674370654775af30139a5838081.png" referrerpolicy="no-referrer"></p><p>與此同時，許多開發者稱阿里雲 OSS 服務出現故障，並且無法進入控制枱。有人指出，阿里雲的 RAM 服務 (Resource Access Management) 整個掛掉，所以影響到所有使用 RAM 的服務。</p><p><img src="https://static.oschina.net/uploads/space/2023/1112/181542_tcJ3_2720166.png" referrerpolicy="no-referrer"></p><p><img height="268" src="https://static.oschina.net/uploads/space/2023/1112/181847_WbQS_2720166.png" width="1002" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/1112/181907_j4TS_2720166.png" referrerpolicy="no-referrer"></p><p>隨後微博實時熱搜顯示，阿里旗下多款產品均出現訪問故障：</p><p><img src="https://static.oschina.net/uploads/space/2023/1112/183202_tC6p_2720166.png" referrerpolicy="no-referrer"></p><p>據稱此次故障是阿里雲中心化 API 服務故障，導致控制枱無法訪問且 API 無法使用。</p><p>由於該故障為全域故障。所有部署於阿里雲且高度依賴阿里雲 API 的平台均出現故障情況，包括<strong>淘寶、釘釘、鹹魚、阿里雲盤、不背單詞</strong>等。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 10:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266144</guid>
            <link>https://www.oschina.net/news/266144</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[UNIX 時間即將進入 17 億紀元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>UNIX 時間（或稱 POSIX 時間）是 UNIX 或類 UNIX 系統使用的時間表示方式：從 UTC 1970 年 1 月 1 日 0 時 0 分 0 秒起至現在的總秒數，不考慮閏秒（由於 UTC 包括了閏秒，但在 POSIX 時間中閏秒會被忽略以提供一種簡便且兼容的計算時差的方法。因此&nbsp;POSIX 時間轉換後不一定是 UTC，儘管它也存在）。</p><p>再過兩天，北京時間 2023/11/15&nbsp;06:13:20，UNIX 時間將進入 1700000000&nbsp;紀元。</p><p><img src="https://static.oschina.net/uploads/space/2023/1112/173535_gh8g_2720166.png" referrerpolicy="no-referrer"></p><p>上一次「億級更新」：<em><u><a href="https://www.oschina.net/news/118614/unix-time-reached-1600m">UNIX 時間 16 億秒紀念</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 09:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266134</guid>
            <link>https://www.oschina.net/news/266134</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[湯不熱 (Tumblr) 涼了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>WordPress 聯合創始人兼 Automattic CEO —— Matt Mullenweg 近日在其 Tumblr 賬號<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tumblr.com%2Fphotomatt%2F733551497286172672%2Ftranslation-of-internalspeak-to-externalspeak" target="_blank">迴應</a>了一份被泄露的公司內部備忘錄。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1112/164725_xseW_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>下圖即為被泄露的備忘錄截圖：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8dc1de6ca95482b835d9520554bae36e77c.png" referrerpolicy="no-referrer"></p><p>Matt 先是肯定了內容的真實性，但表示不完整，所以他決定公開説明關於這份備忘錄的具體情況。</p><p>這份備忘錄談論了關於 Tumblr 的下一步計劃。Matt 表示，Tumblr 產品和營銷團隊的 139 名員工中的絕大多數將被分配到其它部門，客戶支持和服務以及信任和安全部門的員工將留下來，繼續原來的工作。</p><p>該決策意味着 Tumblr 事實上進入了維護模式，往後只保證最基礎的運營。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-440c4e4db036d1382e33a921d5dfacaa70a.png" referrerpolicy="no-referrer"></p><p>Tumblr 成立於 2007 年，2013 年被雅虎以 11 億美元收購，2019 年被 WordPress 母公司 Automattic 以僅僅 300 萬美元收購。Tumblr 曾以大量成人內容聞名，但 2018 年 12 月它宣佈禁止成人內容。此舉導致 Tumblr&nbsp;流量大跌，流失了海量用戶。很多人認為從這個時候起，湯不熱就已經涼了。</p><p>Tumblr 試過掙扎，去年 11 月，Automattic 公司決定有限度地讓藝術家重新在 Tumblr 上發佈成人內容，希望藉此召回用戶。但它又彆扭地表示，禁止藝術家通過成人內容獲利。因此藝術家和創作者們並沒有回來，用戶也沒有。</p><p>Matt 在備忘錄説道，他們在收購 Tumblr 之後的四年裏，為該業務投入了大約 200 名全職員工，並花費了超過 1 億美元試圖扭轉 Tumblr 的虧本局面。但該目標現在仍沒實現。不過他表示不會解僱任何員工，員工可以在其他部門就職，每個人都可以列出他們最想做的三項工作。</p><p>延伸閲讀：<u><em><a href="https://www.oschina.net/news/219050/tumblr-will-support-activitypub" target="_blank">WordPress 創始人稱 Tumblr 將支持 ActivityPub 協議</a></em></u></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 09:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266133</guid>
            <link>https://www.oschina.net/news/266133</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[焰火十二卷現已支持通過 Snapcraft 安裝]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>焰火十二卷是一款免費開源的色彩編輯器。它可以幫助你從色彩轉輪或者其他地方生成一組和諧的色彩。你可以將這些色彩分享給其他人，或者應用到你自己的創作當中。該軟件已發佈至 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsnapcraft.io%2Frickrack" target="_blank">Snapcraft</a>，只需要執行命令：</p><p><code>snap install rickrack</code></p><p>即可在 Ubuntu、CentOS、openSUSE 等 Linux 發行版上安裝。</p><p>&nbsp;</p><p><img height="1080" src="https://oscimg.oschina.net/oscnet/up-ec8db5e2f1cd5291f8f25d954fa78b6f85c.jpg" width="1920" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 06:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266114</guid>
            <link>https://www.oschina.net/news/266114</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[多家互聯網公司急招鴻蒙程序員]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，網易、美團等多家互聯網公司發佈和鴻蒙系統有關崗位招聘，加快推進鴻蒙原生應用開發轉型。</p><p>11 月 8 日，美團<a href="https://www.oschina.net/news/265725">發佈</a>了鴻蒙高級工程師、鴻蒙基建工程師等多個鴻蒙開發相關崗位，主要開發美團鴻蒙 App、大眾點評鴻蒙 App。根據脈脈平台，美團鴻蒙基建工程師崗位給出的月薪在 4 萬元到 6 萬元之間。</p><p><img alt="up-ae63f8c42eec2e0095d1026cb5f531df31b.png" src="https://oscimg.oschina.net/oscnet/up-ae63f8c42eec2e0095d1026cb5f531df31b.png" referrerpolicy="no-referrer"></p><p>11 月 10 日，網易更新了高級/資深 Android 開發工程師崗位，職位要求參與雲音樂多端多 OS 的產品（Android、鴻蒙等）研發迭代。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bd02726e9b32c06796408d6ee345fa87c40.png" referrerpolicy="no-referrer"></p><p>脈脈平台顯示，釘釘也發佈了鴻蒙開發工程師崗位，月薪在 1.5 萬元到 3 萬元之間。</p><p>智聯招聘平台顯示，2023 年 1 月至 10 月，招聘鴻蒙相關崗位的行業主要集中在互聯網、計算機軟件和運營商/增值服務相關行業，崗位主要是軟件研發、移動研發相關的 Android 開發工程師、C++開發工程師、嵌入式軟件開發、Java 開發工程師和軟件測試等職類。相關崗位對學歷和經驗要求也相對較高，要求本科及以上學歷和 3 年以上工作經驗的招聘職位數佔比分別超 75% 和 43%，平均招聘薪資達 17537 元/月，超市場平均水平。</p><p>在此之前，旅行領域 App 同程旅行與華為簽署鴻蒙生態協議，並正式啓動鴻蒙原生版 App 開發。據悉，同程旅行鴻蒙原生版 App 將於 2023 年年底完成全量版本開發。</p><p>據瞭解，目前華為已經與合作伙伴和開發者在社交、影音、遊戲、資訊、金融、旅行等 18 個領域全面展開合作，全力推進鴻蒙生態建設。</p><p>9 月 25 日華為秋季全場景新品發佈會上，餘承東宣佈，全面啓動鴻蒙原生應用，HarmonyOS NEXT 開發者預覽版將在 2024 年第一季度面向開發者開放。</p><p>數據顯示，截至今年 8 月，鴻蒙生態設備數已超過 7 億，220 萬開發者投入到鴻蒙生態的開發。</p><hr><p>延伸閲讀：<em><u><a href="https://www.oschina.net/news/261747" target="news">深圳信息職業技術學院開設「開源鴻蒙班」</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 05:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266107</guid>
            <link>https://www.oschina.net/news/266107</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rust GUI 工具包 Slint 發佈 1.3，改進原生樣式和 JavaScript API]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Slint（最初稱為 "SixtyFPS"）是一個 Rust 編寫的綜合性 UI 工具包，用於為桌面和嵌入式設備構建原生用戶界面。</p><p>近日，<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fslint.dev%2Fblog%2Fslint-1.3-released" target="_blank">Slint 發佈了 1.3 版本</a></u>，引入許多增強開發體驗的新功能和改進。</p><blockquote><p>下載地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fslint-ui%2Fslint%2Freleases%2Ftag%2Fv1.3.0" target="_blank">https://github.com/slint-ui/slint/releases/tag/v1.3.0</a></u></em></p></blockquote><p>下面是值得關注的亮點：</p><ul><li><strong>為 Windows 和 Mac 引入新的默認原生樣式</strong></li></ul><p>公告寫道，此版本修改了默認樣式，以提供更真實的 Windows 和 macOS 界面。其中 Fluent 設計語言用於現代 Windows 應用程序，而 Cupertino 則體現了 macOS 應用程序的外觀和風格。這兩種風格都採用純 Slint 代碼實現。</p><p>至於 Linux，Slint 繼續使用 Qt，以確保一致的「原生」 Linux 風格。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-7d44a5c79f0bd18acb0c3a65df338039f97.png" referrerpolicy="no-referrer"></p><p><em>Cupertino style on Mac</em></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-55de0a6d124adc84cb8b57404014de0bba1.png" referrerpolicy="no-referrer"></p><p><em>Fluent style on Windows</em></p><ul><li><strong>基於 napi-rs 的 NodeJS API</strong></li></ul><p>新版本現在使用 napi-rs crate 進行 NodeJS 集成。因此 Slint 支持兼容所有最新的 NodeJS 版本，並可集成到 NodeJS 事件循環中。</p><p>尋找 Electron 替代方案，希望使用 JavaScript 創建輕量級 GUI 應用程序的開發者可以考慮使用 Slint。</p><p>詳情查看文檔和教程：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fslint.dev%2Fdocs%2Fnode%2F" target="_blank">https://slint.dev/docs/node/</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fslint.dev%2Fdocs%2Ftutorial%2Fnode%2F" target="_blank">https://slint.dev/docs/tutorial/node/</a></p><ul><li><strong>啓動 Android 版移植開發工作</strong></li></ul><p>Slint 開發團隊已開始嘗試將 Slint 引入 Android。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-661056d1be12ae12e60be09594c00f47c75.png" referrerpolicy="no-referrer"></p><ul><li><strong>簡化導入組件庫的步驟</strong></li></ul><p>現在可以輕鬆地將組件庫導入到代碼庫中。新版本附帶了支持從外部庫導入組件的基礎設施。庫搜索路徑在構建腳本中或通過環境變量定義。</p><p>以下例子演示了將代碼從<code>foo</code>庫導入<code>FooWidget</code>&nbsp;</p><pre><code>import { FooWidget } from "@foo";</code></pre><p>……</p><p>詳情查看<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fslint.dev%2Fblog%2Fslint-1.3-released" target="_blank">發佈公告</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 11 Nov 2023 03:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266101/slint-1-3-released</guid>
            <link>https://www.oschina.net/news/266101/slint-1-3-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[比爾·蓋茨：AI Agent 將顛覆軟件行業]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>比爾·蓋茨在其個人網站<strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gatesnotes.com%2FAI-agents" target="_blank">撰文</a></u></strong>談論了&nbsp;<strong>AI Agent</strong>，稱它將徹底改變大眾使用電腦的方式，並顛覆軟件行業。</p><p><img src="https://static.oschina.net/uploads/space/2023/1111/211033_XnvN_2720166.png" referrerpolicy="no-referrer"></p><blockquote><p>AI Agent 屬於人工智能領域的術語，是一種能夠感知環境、進行決策和執行動作的智能實體。不同於傳統的人工智能，AI Agent 具備通過獨立思考、調用工具去逐步完成給定目標的能力。</p></blockquote><p>比爾·蓋茨認為，現在要在電腦上執行任何任務，必須先告訴設備啓動相應的程序。但它們無法幫助用戶發送郵件、分享自拍、分析數據、安排聚會獲購買電影票，即便是最好的網站，也無法完全瞭解自己的工作、生活、興趣和人際關係。並且使用這些信息為你做事的能力也有限。這種事情在今天只有與另一個人（例如親密的朋友或私人助理）合作時才有可能實現。</p><p>但是未來五年內，上述情況將徹底改變。用戶只需要用簡潔明瞭的語言「告訴」設備自己想做什麼，軟件便可根據用戶分享信息的多少、對用戶生活的瞭解程度，作出個性化的迴應。在不久的將來，任何上網的人都可以擁有一個由遠遠超出當今技術的&nbsp;<span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">AI 驅動的個人助理。</span></p><p>比爾·蓋茨説道，這種對自然語言做出反應，並能根據對用戶的瞭解完成許多不同任務的軟件被稱為<strong> Agent</strong>。而他在這 30 多年來，一直在思考關於 Agent 的問題，並在 1995 年出版的《未來之路》<em>(The Road Ahead)&nbsp;</em>一書中對其進行了論述。但直到最近，由於人工智能的進步，Agent 才變得切實可行。</p><p>他認為，<strong>Agent 不僅會改變每個人與計算機交互的方式。它們還將顛覆軟件行業，掀起自我們從輸入命令到點擊圖標以來最大的計算革命</strong>。而 AI Agent 最令人興奮的影響是它們將使當今對大多數人來説過於昂貴的服務民主化。它們將在四個領域產生特別大的影響：醫療保健、教育、生產力以及購物娛樂。</p><p>原文：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gatesnotes.com%2FAI-agents" target="_blank">https://www.gatesnotes.com/AI-agents</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 13:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266065/bill-gate-talk-about-ai-agents</guid>
            <link>https://www.oschina.net/news/266065/bill-gate-talk-about-ai-agents</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Unity 中國版——「團結引擎」全面支持 OpenHarmony]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Unity 中國<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FPtRYKloNoBFpicvPGiDFgw" target="_blank">宣佈</a></u>與開放原子開源基金會達成平台級戰略合作。</p><p><strong>據稱團結引擎已全面支持 OpenHarmony 操作系統</strong>，同時將為 OpenHarmony 生態快速帶來更多高品質遊戲與實時 3D 內容。Unity 稱現在用戶可以「在 OpenHarmony 框架中感受到與安卓和 iOS 同樣絲滑的遊戲體驗」。</p><p>目前，<strong>團結引擎已全面適配 OpenHarmony 各項系統能力</strong>，包括但不限於 Ability 框架適配、XComponent 能力適配、ArkUI 適配等等。同時，開發者可以通過團結引擎完成底層渲染架構、文件系統、觸控系統和音視頻等系統能力相適配。</p><p>據介紹，Unity 中國引擎研發團隊將引擎原來的各項能力在 OpenHarmony 上進行實現，從而兼容原來所有的接口及邏輯實現。現在，開發者可以直接通過 Editor 導出 Ability Project 用於 Deveco Studio 的開發，也能直接打包出安裝包，加速項目的適配開發。</p><p>出包環節，團結引擎延用了 Unity 2022 LTS 版本的高效打包流程，確保開發者不會在陌生的環境下進行打包操作，降低學習成本。通過在團結引擎中新增的 "OpenHarmony 平台"&nbsp;的 BuildTarget，開發者能夠<strong>一鍵切換平台和構建出包</strong>，可使得項目組在不增加額外人手和時間成本的基礎上，快速完成出包、審核、上架的流程。</p><hr><p>團結引擎是 Unity 中國研發團隊推出的 Unity 中國版引擎，它以<strong>Unity 2022 LTS</strong>為研發基礎。上個月，<u><a href="https://www.oschina.net/news/261999">「團結引擎」開啓內測</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 10:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265946</guid>
            <link>https://www.oschina.net/news/265946</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linux 上的 .NET 8 獨立體積減少 50%]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>.NET 7 首次引入了以<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fdotnet%2Fcore%2Fdeploying%2Fnative-aot%2F" target="_blank">原生 AOT (Native AOT)</a></u>發佈應用程序的選項。基於此特性，開發者使用原生 AOT 發佈應用程序可以創建一個完全獨立 (self-contained) 的版本，它不需要運行時，所有內容都包含在一個文件中。</p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fdotnet%2Fcore%2Fwhats-new%2Fdotnet-8%23native-aot-support" target="_blank">微軟介紹道</a></u>，.NET 8 為原生 AOT 發佈帶來了以下改進：</p><ul><li>增加對 x64 和 macOS Arm64 架構的支持</li><li>將 Linux 上原生 AOT 應用程序的大小最多減少 50%<br><br> 下表顯示了使用原生 AOT 發佈的 "Hello World" 應用程序的大小，其中包括 .NET 7 與 .NET 8 上的整個 .NET 運行時：<br><img height="414" src="https://static.oschina.net/uploads/space/2023/1111/184357_9MxX_2720166.png" width="2356" referrerpolicy="no-referrer"></li></ul><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fdotnet%2Fcore%2Fwhats-new%2Fdotnet-8" target="_blank">點此查看詳情</a></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 10:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266051</guid>
            <link>https://www.oschina.net/news/266051</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Delphi 12 & C++ Builder 12、RAD Studio 12 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Embarcadero&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.embarcadero.com%2Fannouncing-the-availability-of-rad-studio-12-athens%2F" target="_blank">宣佈推出</a>&nbsp;RAD Studio 12 Athens、Delphi 12 和 C++Builder 12。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a4795d0d48233907f1b605736e791483854.png" referrerpolicy="no-referrer"></p><p><strong>主要變化</strong></p><ul><li><p>將 Visual Assist 集成到 C++Builder 的 IDE，為 C++ 語言提供一流的代碼補全、代碼導航和重命名重構</p></li><li><p>針對 Win64 的基於 Clang 的 C++ 編譯器的顯着更新預覽，支持最新的 C++ 標準語言功能，並提供與外部庫和 C++ 代碼的更好集成</p></li><li><p>Delphi 添加新語法，包括多行字符串文字，以滿足一些相關的客戶端請求</p></li><li><p>面向 FireMonkey 的 Skia 支持，通過為 FireMonkey 採用新基礎，在所有目標平台上渲染圖形和 UI 控件時提供更高的性能和質量<br><img alt="" src="https://oscimg.oschina.net/oscnet/up-b9cf21f2bee48c1513779da33754ba3506b.png" referrerpolicy="no-referrer"></p></li><li><p>為 VCL 重新設計的 MDI 和新的選項卡式 UI 架構，可幫助現有應用程序實現現代化視覺風格，用最少的改動為現有程序添加對 HighDPI 和樣式的支持</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e33699c1811a0468b2671c69abedc285d33.png" referrerpolicy="no-referrer"></p></li><li><p>新的 FireDAC 示例查詢 (QBE) 組件可簡化數據過濾，新的 Delphi JSON 嚮導可將流行 JSON 格式的數據映射添加到對象，就像使用 XML 那樣<br><img alt="" src="https://oscimg.oschina.net/oscnet/up-656591200601e9a491ae85969df8b0a6755.png" referrerpolicy="no-referrer"></p></li><li><p>改進 IDE 的生產力和質量，使 RAD Studio 能夠更輕鬆、更快速地執行日常任務<br><img alt="" src="https://oscimg.oschina.net/oscnet/up-1a7c54b8ab0163f5c28e4b9df1734487caf.png" referrerpolicy="no-referrer"></p></li><li><p>支持 RAD Server 中的智能 ID，讓託管的 REST API 更加強大和靈活，同時保持 RAD Server 的易用性</p></li></ul><p>詳情查看<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.embarcadero.com%2Fannouncing-the-availability-of-rad-studio-12-athens%2F" target="_blank">發佈公告</a>。</p><hr><p>延伸閲讀：<em><u><a href="https://www.oschina.net/news/241121/delphi-11-n-cbuilder-11-ce-released" target="news">Delphi 11 和 C++Builder 11 社區版發佈</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 10:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265941/rad-studio-12-athens</guid>
            <link>https://www.oschina.net/news/265941/rad-studio-12-athens</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bytebase 2.11.0 - 支持 OceanBase Oracle 模式]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>🚀 新功能</h2><ul><li>支持 OceanBase Oracle 模式。</li><li>支持設置 MySQL 在線變更參數。</li><li>新增項目數據庫查看者的角色。</li></ul><h2>🎄 改進</h2><ul><li>支持在項目中直接選擇所有用戶併為之添加角色。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-5201834160b7cab041ef604993e52243517.png" alt="file" referrerpolicy="no-referrer"></p><ul><li>調整了項目頁面的佈局。</li><li>在 SQL 編輯器中通過懸浮面板展示表和列的詳情。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-d67bf21c4131f374bed4fd7aefcd4cedef9.png" alt="file" referrerpolicy="no-referrer"></p><h2>🪦 不再支持</h2><ul><li>Bytebase 新版本中將不再提供書籤功能。我們建議您使用瀏覽器的書籤功能作為替代方案。</li></ul><h2>🐞 Bug 修復</h2><p>修復在 Azure DevOps 或 Bitbucket 中重命名文件無法觸發在 Bytebase 中工單創建的問題。</p><h2>🎠 社區</h2><p>感謝 @bds-congnguyen 提交 fix: update bytebase-sql-review.yml for CICD #8984</p><h2>📕 安裝及升級</h2><p>參考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbytebase%2Fbytebase%23installation" target="_blank">升級指南</a>。如果從之前版本升級，獲取新版本後，重新啓動升級即可。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 09:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/10141966</guid>
            <link>https://my.oschina.net/u/6148470/blog/10141966</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Stability AI 再融資 5000 萬美元，英特爾領投]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#494949"><span style="color:#000000">彭博社援引消息人士的話</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2023-11-09%2Fstability-ai-gets-intel-backing-in-new-financing%3Fsrnd%3Dtechnology-ai" target="_blank"><span style="color:#2980b9">報道稱</span></a><span style="color:#000000">，AI 初創公司 Stability AI 已獲得了由英特爾領投的新一輪融資。該公司在這筆交易中以可轉換票據的形式籌集了近 5000 萬美元，交易於 10 月份完成。</span></p><p style="color:#494949"><span style="color:#000000">Stability AI 是 Stable Diffusion 背後的公司，Stable Diffusion 是一個文本轉圖像模型，是除 OpenAI 之外其他較為流行的生成式 AI 工具之一。</span></p><p style="color:#494949"><span style="color:#000000">彭博社指出，此次現金注入正值 Stability AI 的關鍵時刻，因為該公司最近遇到了一些挑戰。一方面是公司高層出現了一些更替，解僱了包括人力資源主管在內的六名高級員工。</span></p><p style="color:#494949"><span style="color:#000000">另一方面則是董事會代表之間存在一些分歧。Stability AI 的主要投資者 Coatue Management 對其首席執行官 Emad Mostaque 的領導能力有些意見，並考慮增加一名聯合首席執行官或總裁。</span></p><p style="color:#494949"><img height="219" src="https://static.oschina.net/uploads/space/2023/1110/153216_qixm_4252687.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#494949"><span style="color:#000000">知情人士透露，Coatue 已於 10 月離開了 Stability AI 董事會。並表示原因在於英特爾對 Stability 的投資，因為 Coatue 持有英特爾的競爭對手 AMD 公司的大量股份。目前 Coatue 公司仍持有 Stability 公司 5000 萬美元的股份。</span></p><p style="color:#494949"><span style="color:#000000">另一位投資者 Lightspeed Venture Partners 的 Gaurav Gupta 最近也辭去了 Stability AI 董事會觀察員的職務，原因是他與管理層在公司發展方向上存在意見分歧。目前，Coatue 和 Lightspeed 的代表都拒絕對此發表評論。</span></p><p style="color:#494949"><span style="color:#000000">此外，Stability AI 還面臨聯合創始人 Cyrus Hodes 的訴訟，他聲稱自己在 Stability AI 達到 10 億美元估值里程碑之前被欺騙以低估值出售了手中的股票。但 Stability AI 對這些説法提出了異議。</span></p><p style="color:#494949"><span style="color:#000000">Stability AI 對其未來前景表示樂觀。該公司聲稱，員工流動是初創企業生態系統中的正常現象，並強調其對董事會成員的指導和專業知識的重視。還進一步強調了其顯着的收入增長，稱其在過去一年中增長了十倍，並預測隨着其推出更多產品，到年底收入將進一步擴大。</span></p><p style="color:#494949"><span style="color:#000000">Stability AI 發言人在一份聲明中<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.pymnts.com%2Fartificial-intelligence-2%2F2023%2Freport-stability-ai-secures-50-million-in-financing%2F" target="_blank">表示</a>： 「Stability AI 公司正以強勁、健康的態勢繼續其在生成式 AI 領域的世界領先工作。去年，我們的收入增長了十倍，隨着我們繼續推出新產品，我們的目標是在今年年底前進一步增長。我們是全球唯一一家獨立、開源、多模態（圖像、語言、代碼、三維、音頻）人工智能公司。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 09:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265920/stability-ai-intel-50-million</guid>
            <link>https://www.oschina.net/news/265920/stability-ai-intel-50-million</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 開源量化交易框架 AmazingQuant]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-amazingquant" class="anchor" href="https://gitee.com/zhanggao2013/AmazingQuant#amazingquant"></a>AmazingQuant<br></h1><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fzhanggao2013%2FAmazingQuant%2Fwatchers"><img src="https://img.shields.io/github/watchers/zhanggao2013/AmazingQuant.svg?style=social&amp;label=Watchers&amp;" alt="Github workers" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fzhanggao2013%2FAmazingQuant%2Fstargazers"><img src="https://img.shields.io/github/stars/zhanggao2013/AmazingQuant.svg?style=social&amp;label=Star&amp;" alt="GitHub stars" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fzhanggao2013%2FAmazingQuant%2Ffork"><img src="https://img.shields.io/github/forks/zhanggao2013/AmazingQuant.svg?style=social&amp;label=Fork&amp;" alt="GitHub forks" referrerpolicy="no-referrer"></a></p><h1><a id="user-content-1 簡介" class="anchor" href="https://gitee.com/zhanggao2013/AmazingQuant#1%E7%AE%80%E4%BB%8B"></a>1.簡介</h1><p>AmazingaQuant——為交易而生的智能投研 Lab。包含策略模型研究服務、量化數據服務、指標計算服務、績效分析服務四大功能模塊。<br>
1.1 策略研究服務<br>
　　四大策略體系的研究體系<br>
（1）選股體系<br>
　　中低頻組合選股模型、強勢短線模型<br>
（2）風險預警體系<br>
　　事件風險等建立黑白名單模型<br>
（3）擇時體系<br>
　　倉位控制擇時、行業風格輪動<br>
（4）T+0 體系<br>
　  全市場股票分類（活躍型與穩定型），做 T0 模型<br></p><p>1.2 量化數據服務<br>
1.2.1 歷史數據存儲<br>
存儲到服務器的 mongoDB 作為數據服務器，並保存到本地的 HDF5，滿足策略需求。<br>
（1）基礎行情數據<br>
　　tick、1min、5min、日線等週期的股票、指數<br>
（2）基本面數據<br>
　　財務數據<br>
　　股本數據<br>
（3）行情衍生數據<br>
　　龍虎榜數據<br>
　　指數成分股數據<br>
　　行業板塊成分股數據<br>
　　行業指數日線行情數據<br></p><p>1.2.1  實時行情對接<br>
（1）股票、指數的 tick 數據實時全推行情<br>
（2）重採樣為 1min、5min、日線等三個週期數據<br></p><p>1.3 指標計算服務<br>
　　歷史指標計算滿足策略研究，實時指標計算滿足實盤交易<br>
（1）日線、周線、月線、年線週期等低頻指標的歷史數據計算，固定存儲為 HDF5 格式，<br>
（2）分鐘、tick 週期等高頻數據指標計算，歷史數據計算和實時指標計算兩部分<br></p><p>1.4 績效分析服務<br>
　　回測數據格式對接，滿足策略研究的評價；實盤數據格式對接，滿足實盤運行的監控。<br>
1.4.1 淨值數據分析<br>
（1）年化波動率,日收益波動率,月收益波動率，該值表明因子對收益率貢獻的波動程度<br>
（2）日收益率分佈,月收益率分佈,正收益天數,負收益天數,日勝率,月勝率,峯度,偏度<br>
（3）最大回撤<br>
（4）夏普比率,calmar 比率,特雷諾比率,索提諾比率<br>
（5）beta,跟蹤誤差,信息比率<br>
1.4.2 交易數據分析<br>
（1）也針對回測的：滑點損失<br>
（2）總交易次數、日均交易次數、勝率（個股從建倉到完全平倉）、平均持倉週期、換手率、交易費用、總交易金額<br>
（3）分每隻股票統計，交易數量、金額、時間<br>
1.4.3 持倉數據分析<br>
（1）持倉行業市值、佔比<br>
（2）持倉估值風格分析<br>
（3）持倉綜合風格分析<br>
1.4.4 績效歸因<br>
（1）多因子歸因<br>
　　投資收益分為每個風格（行業）因子收益、特殊收益、日內調倉收益 <br>
（2）brinson 歸因<br>
　　投資收益分為基準收益和超額收益，其中超額收益分為：資產配置收益、個股選擇收益和交互收益<br>
（3）收益分解<br>
　　市場中性策略,基本分解公式為：總收益=交易收益+選股收益+擇時收益+基差收益+交易成本<br>
　　純股票策略,基本分解公式為：總收益=交易收益+選股收益+擇時收益+基準收益+交易成本<br></p><p>下圖是總體框架架構。<br><img src="https://github.com/zhanggao2013/AmazingQuant/blob/master/documents/framework_architecture.jpg" alt="" referrerpolicy="no-referrer"></p><ul><li>data_center
<ul><li>to_mongoDB 存放行情、財務等各種數據到 MongoDB 的存儲模塊</li><li>get_data   策略中從數據庫中取數據的接口模塊</li></ul></li><li>trade_center
<ul><li>mossion_engine   包含下單任務（event_order）和風控（event_risk_management）兩部分的 engine，分別完成下單前的檢查和風控</li><li>broker_engine    分為回測時的 simulate 的 broker（主要是 event_deal）撮合成交和連接實盤交易 CTP、xSpeed 等接口兩部分</li></ul></li><li>strategy_center
<ul><li>bar_engine       在回測或者交易模式下，用<code>逐 K 線</code>的方式執行每一根 bar 的交易邏輯，可在日線、分鐘線、分筆下運行</li></ul></li><li>analysis_center
<ul><li>analysis_engine  對回測形成的交易記錄進行分析和可視化，淨值、年化收益、alpha、beta、回撤等指標，brison、Fama 等經典模型的實現</li></ul></li></ul><h1><a id="user-content-2 安裝配置" class="anchor" href="https://gitee.com/zhanggao2013/AmazingQuant#2%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE"></a>2.安裝配置</h1><ul><li>MongoDB 3.4 <br>
建議使用 shard，<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fzhanggao2013%2FAmazingQuant%2Fblob%2Fmaster%2Fdocuments%2FMongoDB_config.md">配置啓動項示例</a></li><li>pymongo <br>
python 調用 MongoDB</li><li>talib <br>
技術指標計算庫</li><li>anaconda <br>
python 3.5 的版本，如果大於 3.5 的版本，ctp 的接口暫時不能用，因為編譯問題，後續可以解決</li><li>Linux Ubuntu <br>
開發環境是 ubuntu，當然也可以在 windows 下用，但是數據庫的配置和 ctp 等交易接口需要重新做</li><li>安裝 AmazingQuant
pip install AmazingQuant  直接安裝</li></ul><h1><a id="user-content-3 策略編寫" class="anchor" href="https://gitee.com/zhanggao2013/AmazingQuant#3%E7%AD%96%E7%95%A5%E7%BC%96%E5%86%99"></a>3.策略編寫</h1><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">#-*- coding: utf-8 -*-</span></span><span id="LC2" class="line"></span><span id="LC3" class="line"><span class="c1"># ------------------------------</span></span><span id="LC4" class="line"><span class="c1"># @Time    : 2019/11/14</span></span><span id="LC5" class="line"><span class="c1"># @Author  : gao</span></span><span id="LC6" class="line"><span class="c1"># @File    : example_strategy.py.py</span></span><span id="LC7" class="line"><span class="c1"># @Project : AmazingQuant</span></span><span id="LC8" class="line"><span class="c1"># ------------------------------</span></span><span id="LC9" class="line"><span class="kn">import</span><span class="nn">time</span></span><span id="LC10" class="line"></span><span id="LC11" class="line"><span class="kn">from</span><span class="nn">AmazingQuant.utils.performance_test</span><span class="kn">import</span><span class="n">Timer</span></span><span id="LC12" class="line"><span class="c1"># import strategy 基類</span></span><span id="LC13" class="line"><span class="kn">from</span><span class="nn">AmazingQuant.strategy_center.strategy</span><span class="kn">import</span><span class="o">*</span></span><span id="LC14" class="line"></span><span id="LC15" class="line"><span class="c1"># 取各種數據</span></span><span id="LC16" class="line"><span class="kn">from</span><span class="nn">AmazingQuant.data_center.api_data.get_index_member</span><span class="kn">import</span><span class="n">GetIndexMember</span></span><span id="LC17" class="line"><span class="kn">from</span><span class="nn">AmazingQuant.indicator_center.save_get_indicator</span><span class="kn">import</span><span class="n">SaveGetIndicator</span></span><span id="LC18" class="line"><span class="kn">from</span><span class="nn">AmazingQuant.utils.logger</span><span class="kn">import</span><span class="n">Logger</span></span><span id="LC19" class="line"><span class="kn">from</span><span class="nn">AmazingQuant.environment</span><span class="kn">import</span><span class="n">Environment</span></span><span id="LC20" class="line"></span><span id="LC21" class="line"></span><span id="LC22" class="line"><span class="c1"># 繼承 strategy 基類</span></span><span id="LC23" class="line"><span class="k">class</span><span class="nc">MaStrategy</span><span class="p">(</span><span class="n">StrategyBase</span><span class="p">):</span></span><span id="LC24" class="line"><span class="k">def</span><span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">strategy_name</span><span class="o">=</span><span class="s">'ma_strategy'</span><span class="p">):</span></span><span id="LC25" class="line"><span class="s">"""</span></span><span id="LC26" class="line"><span class="s">        用戶定義類變量</span></span><span id="LC27" class="line"><span class="s">        取本地數據</span></span><span id="LC28" class="line"><span class="s">        :param strategy_name:</span></span><span id="LC29" class="line"><span class="s">        """</span></span><span id="LC30" class="line"><span class="nb">super</span><span class="p">().</span><span class="n">__init__</span><span class="p">(</span><span class="n">strategy_name</span><span class="o">=</span><span class="n">strategy_name</span><span class="p">)</span></span><span id="LC31" class="line"></span><span id="LC32" class="line"><span class="c1"># 取指數成分股實例</span></span><span id="LC33" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">index_member_obj</span><span class="o">=</span><span class="n">GetIndexMember</span><span class="p">()</span></span><span id="LC34" class="line"><span class="c1"># 取 K 線數據實例</span></span><span id="LC35" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">data_class</span><span class="o">=</span><span class="n">GetKlineData</span><span class="p">()</span></span><span id="LC36" class="line"><span class="c1"># 取指標實例</span></span><span id="LC37" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">indicator</span><span class="o">=</span><span class="n">SaveGetIndicator</span><span class="p">()</span></span><span id="LC38" class="line"></span><span id="LC39" class="line"><span class="c1"># 取指標數據</span></span><span id="LC40" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">ma5</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">indicator</span><span class="p">.</span><span class="n">get_indicator</span><span class="p">(</span><span class="s">'ma5'</span><span class="p">)</span></span><span id="LC41" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">ma10</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">indicator</span><span class="p">.</span><span class="n">get_indicator</span><span class="p">(</span><span class="s">'ma10'</span><span class="p">)</span></span><span id="LC42" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">now</span><span class="o">=</span><span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span></span><span id="LC43" class="line"><span class="n">Environment</span><span class="p">.</span><span class="n">logger</span><span class="o">=</span><span class="n">Logger</span><span class="p">(</span><span class="n">strategy_name</span><span class="p">)</span></span><span id="LC44" class="line"></span><span id="LC45" class="line"><span class="k">def</span><span class="nf">initialize</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span></span><span id="LC46" class="line"><span class="c1"># 設置運行模式，回測或者交易</span></span><span id="LC47" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">run_mode</span><span class="o">=</span><span class="n">RunMode</span><span class="p">.</span><span class="n">BACKTESTING</span><span class="p">.</span><span class="n">value</span></span><span id="LC48" class="line"><span class="c1"># 設置回測資金賬號</span></span><span id="LC49" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">account</span><span class="o">=</span><span class="p">[</span><span class="s">'test0'</span><span class="p">]</span></span><span id="LC50" class="line"><span class="c1"># 設置回測資金賬號資金量</span></span><span id="LC51" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">capital</span><span class="o">=</span><span class="p">{</span><span class="s">'test0'</span><span class="p">:</span><span class="mi">2000000</span><span class="p">}</span></span><span id="LC52" class="line"><span class="c1"># 設置回測基準</span></span><span id="LC53" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">benchmark</span><span class="o">=</span><span class="s">'000300.SH'</span></span><span id="LC54" class="line"><span class="c1"># 設置復權方式</span></span><span id="LC55" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">rights_adjustment</span><span class="o">=</span><span class="n">RightsAdjustment</span><span class="p">.</span><span class="n">FROWARD</span><span class="p">.</span><span class="n">value</span></span><span id="LC56" class="line"><span class="c1"># 設置回測起止時間</span></span><span id="LC57" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">start</span><span class="o">=</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2018</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span></span><span id="LC58" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">end</span><span class="o">=</span><span class="n">datetime</span><span class="p">(</span><span class="mi">2019</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span></span><span id="LC59" class="line"><span class="c1"># 設置運行週期</span></span><span id="LC60" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">period</span><span class="o">=</span><span class="s">'daily'</span></span><span id="LC61" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">index_member_obj</span><span class="p">.</span><span class="n">get_all_index_members</span><span class="p">()</span></span><span id="LC62" class="line"><span class="n">_</span><span class="p">,</span><span class="n">index_members_all</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">index_member_obj</span><span class="p">.</span><span class="n">get_index_members</span><span class="p">(</span><span class="s">'000300.SH'</span><span class="p">)</span></span><span id="LC63" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">universe</span><span class="o">=</span><span class="n">index_members_all</span></span><span id="LC64" class="line"></span><span id="LC65" class="line"><span class="c1"># 設置在運行前是否緩存日線，分鐘線等各個週期數據</span></span><span id="LC66" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">daily_data_cache</span><span class="o">=</span><span class="bp">True</span></span><span id="LC67" class="line"><span class="n">Environment</span><span class="p">.</span><span class="n">logger</span><span class="p">.</span><span class="n">info</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">universe</span><span class="p">)</span></span><span id="LC68" class="line"></span><span id="LC69" class="line"><span class="c1"># 回測滑點設置，按固定值 0.01,20-0.01 = 19.99;百分比 0.01,20*(1-0.01) = 19.98;平倉時用'+'</span></span><span id="LC70" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">set_slippage</span><span class="p">(</span><span class="n">stock_type</span><span class="o">=</span><span class="n">StockType</span><span class="p">.</span><span class="n">STOCK</span><span class="p">.</span><span class="n">value</span><span class="p">,</span><span class="n">slippage_type</span><span class="o">=</span><span class="n">SlippageType</span><span class="p">.</span><span class="n">SLIPPAGE_FIX</span><span class="p">.</span><span class="n">value</span><span class="p">,</span><span class="n">value</span><span class="o">=</span><span class="mf">0.01</span><span class="p">)</span></span><span id="LC71" class="line"></span><span id="LC72" class="line"><span class="c1"># 回測股票手續費和印花稅，賣出印花稅，千分之一；開倉手續費，萬分之三；平倉手續費，萬分之三，最低手續費，５元</span></span><span id="LC73" class="line"><span class="c1"># 滬市，賣出有萬分之二的過戶費，加入到賣出手續費</span></span><span id="LC74" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">set_commission</span><span class="p">(</span><span class="n">stock_type</span><span class="o">=</span><span class="n">StockType</span><span class="p">.</span><span class="n">STOCK_SH</span><span class="p">.</span><span class="n">value</span><span class="p">,</span><span class="n">tax</span><span class="o">=</span><span class="mf">0.001</span><span class="p">,</span><span class="n">open_commission</span><span class="o">=</span><span class="mf">0.0003</span><span class="p">,</span></span><span id="LC75" class="line"><span class="n">close_commission</span><span class="o">=</span><span class="mf">0.00032</span><span class="p">,</span></span><span id="LC76" class="line"><span class="n">close_today_commission</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">min_commission</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span></span><span id="LC77" class="line"><span class="c1"># 深市不加過戶費</span></span><span id="LC78" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">set_commission</span><span class="p">(</span><span class="n">stock_type</span><span class="o">=</span><span class="n">StockType</span><span class="p">.</span><span class="n">STOCK_SZ</span><span class="p">.</span><span class="n">value</span><span class="p">,</span><span class="n">tax</span><span class="o">=</span><span class="mf">0.001</span><span class="p">,</span><span class="n">open_commission</span><span class="o">=</span><span class="mf">0.0003</span><span class="p">,</span></span><span id="LC79" class="line"><span class="n">close_commission</span><span class="o">=</span><span class="mf">0.0003</span><span class="p">,</span></span><span id="LC80" class="line"><span class="n">close_today_commission</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="n">min_commission</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span></span><span id="LC81" class="line"></span><span id="LC82" class="line"><span class="k">def</span><span class="nf">handle_bar</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">event</span><span class="p">):</span></span><span id="LC83" class="line"><span class="n">Environment</span><span class="p">.</span><span class="n">logger</span><span class="p">.</span><span class="n">info</span><span class="p">(</span><span class="s">'self.time_tag'</span><span class="p">,</span><span class="bp">self</span><span class="p">.</span><span class="n">time_tag</span><span class="p">,</span><span class="n">datetime</span><span class="p">.</span><span class="n">now</span><span class="p">(),</span><span class="p">(</span><span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span><span class="o">-</span><span class="bp">self</span><span class="p">.</span><span class="n">now</span><span class="p">)</span><span class="o">*</span><span class="mi">1000</span><span class="p">)</span></span><span id="LC84" class="line"><span class="n">Environment</span><span class="p">.</span><span class="n">logger</span><span class="p">.</span><span class="n">debug</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="n">bar_position_data_list</span><span class="p">))</span></span><span id="LC85" class="line"><span class="c1"># 取當前 bar 的持倉情況</span></span><span id="LC86" class="line"><span class="k">with</span><span class="n">Timer</span><span class="p">(</span><span class="bp">True</span><span class="p">):</span></span><span id="LC87" class="line"><span class="n">available_position_dict</span><span class="o">=</span><span class="p">{}</span></span><span id="LC88" class="line"><span class="k">for</span><span class="n">position</span><span class="ow">in</span><span class="n">Environment</span><span class="p">.</span><span class="n">bar_position_data_list</span><span class="p">:</span></span><span id="LC89" class="line"><span class="n">available_position_dict</span><span class="p">[</span></span><span id="LC90" class="line"><span class="n">position</span><span class="p">.</span><span class="n">instrument</span><span class="o">+</span><span class="s">'.'</span><span class="o">+</span><span class="n">position</span><span class="p">.</span><span class="n">exchange</span><span class="p">]</span><span class="o">=</span><span class="n">position</span><span class="p">.</span><span class="n">position</span><span class="o">-</span><span class="n">position</span><span class="p">.</span><span class="n">frozen</span></span><span id="LC91" class="line"><span class="n">index_member_list</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">index_member_obj</span><span class="p">.</span><span class="n">get_index_member_in_date</span><span class="p">(</span><span class="bp">self</span><span class="p">.</span><span class="n">time_tag</span><span class="p">)</span></span><span id="LC92" class="line"></span><span id="LC93" class="line"><span class="n">close_price_all</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">data_class</span><span class="p">.</span><span class="n">get_market_data</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="n">daily_data</span><span class="p">,</span><span class="n">stock_code</span><span class="o">=</span><span class="n">index_member_list</span><span class="p">,</span></span><span id="LC94" class="line"><span class="n">field</span><span class="o">=</span><span class="p">[</span><span class="s">'close'</span><span class="p">],</span></span><span id="LC95" class="line"><span class="n">start</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">time_tag</span><span class="p">,</span><span class="n">end</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">time_tag</span><span class="p">)</span></span><span id="LC96" class="line"><span class="c1"># 循環遍歷股票池</span></span><span id="LC97" class="line"><span class="k">for</span><span class="n">stock</span><span class="ow">in</span><span class="n">index_member_list</span><span class="p">:</span></span><span id="LC98" class="line"><span class="c1"># 取當前股票的收盤價</span></span><span id="LC99" class="line"><span class="n">close_price</span><span class="o">=</span><span class="n">close_price_all</span><span class="p">[</span><span class="s">'close'</span><span class="p">][</span><span class="n">stock</span><span class="p">]</span></span><span id="LC100" class="line"><span class="k">if</span><span class="n">close_price</span><span class="p">:</span></span><span id="LC101" class="line"><span class="n">ma5</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">ma5</span><span class="p">[</span><span class="n">stock</span><span class="p">][</span><span class="bp">self</span><span class="p">.</span><span class="n">time_tag</span><span class="p">]</span></span><span id="LC102" class="line"><span class="n">ma20</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">ma10</span><span class="p">[</span><span class="n">stock</span><span class="p">][</span><span class="bp">self</span><span class="p">.</span><span class="n">time_tag</span><span class="p">]</span></span><span id="LC103" class="line"><span class="k">if</span><span class="n">ma5</span><span class="ow">and</span><span class="n">ma20</span><span class="p">:</span></span><span id="LC104" class="line"><span class="c1"># 如果 5 日均線突破 20 日均線，並且沒有持倉，則買入這隻股票 100 股，以收盤價為指定價交易</span></span><span id="LC105" class="line"><span class="k">if</span><span class="n">ma5</span><span class="o">&gt;</span><span class="n">ma20</span><span class="ow">and</span><span class="n">stock</span><span class="ow">not</span><span class="ow">in</span><span class="n">available_position_dict</span><span class="p">.</span><span class="n">keys</span><span class="p">()</span><span class="ow">and</span><span class="n">stock</span><span class="ow">in</span><span class="n">index_member_list</span><span class="p">:</span></span><span id="LC106" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">trade</span><span class="p">.</span><span class="n">order_shares</span><span class="p">(</span><span class="n">stock_code</span><span class="o">=</span><span class="n">stock</span><span class="p">,</span><span class="n">shares</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span><span class="n">price_type</span><span class="o">=</span><span class="s">'fix'</span><span class="p">,</span></span><span id="LC107" class="line"><span class="n">order_price</span><span class="o">=</span><span class="n">close_price</span><span class="p">,</span></span><span id="LC108" class="line"><span class="n">account_id</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">account</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span></span><span id="LC109" class="line"><span class="n">Environment</span><span class="p">.</span><span class="n">logger</span><span class="p">.</span><span class="n">info</span><span class="p">(</span><span class="s">'buy'</span><span class="p">,</span><span class="n">stock</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="s">'fix'</span><span class="p">,</span><span class="n">close_price</span><span class="p">,</span><span class="bp">self</span><span class="p">.</span><span class="n">account</span><span class="p">)</span></span><span id="LC110" class="line"><span class="c1"># 如果 20 日均線突破 5 日均線，並且有持倉，則賣出這隻股票 100 股，以收盤價為指定價交易</span></span><span id="LC111" class="line"><span class="k">elif</span><span class="n">ma5</span><span class="o">&lt;</span><span class="n">ma20</span><span class="ow">and</span><span class="n">stock</span><span class="ow">in</span><span class="n">available_position_dict</span><span class="p">.</span><span class="n">keys</span><span class="p">():</span></span><span id="LC112" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">trade</span><span class="p">.</span><span class="n">order_shares</span><span class="p">(</span><span class="n">stock_code</span><span class="o">=</span><span class="n">stock</span><span class="p">,</span><span class="n">shares</span><span class="o">=-</span><span class="mi">100</span><span class="p">,</span><span class="n">price_type</span><span class="o">=</span><span class="s">'fix'</span><span class="p">,</span></span><span id="LC113" class="line"><span class="n">order_price</span><span class="o">=</span><span class="n">close_price</span><span class="p">,</span></span><span id="LC114" class="line"><span class="n">account_id</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">account</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span></span><span id="LC115" class="line"><span class="n">Environment</span><span class="p">.</span><span class="n">logger</span><span class="p">.</span><span class="n">info</span><span class="p">(</span><span class="s">'sell'</span><span class="p">,</span><span class="n">stock</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="s">'fix'</span><span class="p">,</span><span class="n">close_price</span><span class="p">,</span><span class="bp">self</span><span class="p">.</span><span class="n">account</span><span class="p">)</span></span><span id="LC116" class="line"><span class="k">for</span><span class="n">stock</span><span class="ow">in</span><span class="n">available_position_dict</span><span class="p">.</span><span class="n">keys</span><span class="p">():</span></span><span id="LC117" class="line"><span class="k">if</span><span class="n">stock</span><span class="ow">not</span><span class="ow">in</span><span class="n">index_member_list</span><span class="p">:</span></span><span id="LC118" class="line"><span class="n">Trade</span><span class="p">(</span><span class="bp">self</span><span class="p">).</span><span class="n">order_shares</span><span class="p">(</span><span class="n">stock_code</span><span class="o">=</span><span class="n">stock</span><span class="p">,</span><span class="n">shares</span><span class="o">=-</span><span class="mi">100</span><span class="p">,</span><span class="n">price_type</span><span class="o">=</span><span class="s">'fix'</span><span class="p">,</span></span><span id="LC119" class="line"><span class="n">order_price</span><span class="o">=</span><span class="n">close_price</span><span class="p">,</span></span><span id="LC120" class="line"><span class="n">account_id</span><span class="o">=</span><span class="bp">self</span><span class="p">.</span><span class="n">account</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span></span><span id="LC121" class="line"><span class="n">Environment</span><span class="p">.</span><span class="n">logger</span><span class="p">.</span><span class="n">info</span><span class="p">(</span><span class="s">'sell not in index_member_list'</span><span class="p">,</span><span class="n">stock</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="s">'fix'</span><span class="p">,</span><span class="n">close_price</span><span class="p">,</span></span><span id="LC122" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">account</span><span class="p">)</span></span><span id="LC123" class="line"><span class="bp">self</span><span class="p">.</span><span class="n">now</span><span class="o">=</span><span class="n">time</span><span class="p">.</span><span class="n">time</span><span class="p">()</span></span><span id="LC124" class="line"></span><span id="LC125" class="line"></span><span id="LC126" class="line"><span class="k">if</span><span class="n">__name__</span><span class="o">==</span><span class="s">'__main__'</span><span class="p">:</span></span><span id="LC127" class="line"><span class="c1"># 測試運行完整個策略所需時間，滬深 300 動態股票池，一年數據，均線策略,10s 完成,10S 績效分析</span></span><span id="LC128" class="line"><span class="k">with</span><span class="n">Timer</span><span class="p">(</span><span class="bp">True</span><span class="p">):</span></span><span id="LC129" class="line"><span class="c1"># 運行策略，設置是否保存委託，成交，資金，持倉</span></span><span id="LC130" class="line"><span class="n">ma_strategy</span><span class="o">=</span><span class="n">MaStrategy</span><span class="p">()</span></span><span id="LC131" class="line"><span class="n">ma_strategy</span><span class="p">.</span><span class="n">run</span><span class="p">(</span><span class="n">save_trade_record</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span></span><span id="LC132" class="line"></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h1><a id="user-content-4 聯繫方式" class="anchor" href="https://gitee.com/zhanggao2013/AmazingQuant#4%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F"></a>4.聯繫方式</h1><ul><li>微信號 (轉發我的公眾號文章後，可加入微信羣):：<br>
gao_me150 <br></li><li>微信公眾號：<br>
水善量化説<br><img src="https://github.com/zhanggao2013/AmazingQuant/blob/master/documents/wechat.jpg" alt="" referrerpolicy="no-referrer"></li></ul>]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 08:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/zhanggao2013/AmazingQuant</guid>
            <link>https://gitee.com/zhanggao2013/AmazingQuant</link>
        </item>
        <item>
            <title>
                <![CDATA[Qt for MCUs 2.6 正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Qt for MCUs 2.6 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qt.io%2Fblog%2Fqt-for-mcus-2.6-released" target="_blank">已正式發佈</a></u>。</p><p><img alt="" height="209" src="https://oscimg.oschina.net/oscnet/up-1d29cb32cd9a03916a5df5f55447b185ac5.png" width="400" referrerpolicy="no-referrer"></p><p><strong>主要變化</strong></p><ul><li>新增適用於 Qt Quick Ultralite 的新 QML API</li><li>全新基準測試功能以性能作為核心</li><li>支持文件系統（技術預覽階段）<br><br><img alt="" src="https://oscimg.oschina.net/oscnet/up-7b08c587742518ad46f54d307a19f79b004.png" referrerpolicy="no-referrer"><p>&nbsp;</p></li><li>GHS MULTI IDE 集成汽車工具<br><br><img alt="" src="https://oscimg.oschina.net/oscnet/up-e4a8e70cbfb8132bdd2875d44b56ff8d0a0.png" referrerpolicy="no-referrer"><p>&nbsp;</p></li><li>支持 AUTOSAR Classic<br><br><img alt="" src="https://oscimg.oschina.net/oscnet/up-d2e6120102dc2cb439a25080c1d3142d307.png" referrerpolicy="no-referrer"><p>&nbsp;</p></li></ul><p>公告寫道，新版本引入代碼生成優化是為了減少生成的 C++ 代碼中的冗餘，進而將大多數應用程序的 .text 部分大小減少 1% 到 8%，從而降低總體 ROM/閃存要求。</p><p>此外，AnimatedSprite 實現進行了一些改進，以查找和優化幀之間的多個獨特區域，從而進一步減少存儲多個幀以顯示啓動序列等複雜動畫所需的閃存佔用空間。</p><p>最後，Qt for MCU 2.7 將於明年 3 月推出，官方稱計劃通過引入新功能和性能提升來繼續改進框架。預計未來版本中的一些令人興奮的功能包括：全功能虛擬鍵盤、靜態全屏 GUI 旋轉、漸變、硬件加速 JPEG、支持自定義圖像解碼器、CMSIS 包等等。</p><p>詳情查看<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc.qt.io%2FQtForMCUs-2.6%2Fqtul-changes.html" target="_blank"><u>Changelog</u></a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 08:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265905/qt-for-mcus-2-6-released</guid>
            <link>https://www.oschina.net/news/265905/qt-for-mcus-2-6-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中國電信發佈千億級參數星辰語義大模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#494949"><span><span style="color:#222222">在 2023 數字科技生態大會上，中國</span><span style="color:#222222">國電信發佈千億級參數規模的星辰語義大模型。同時，星辰多模態大模型、星辰系列行業大模型也一併亮相。</span></span></p><p style="color:#494949"><span><span style="color:#222222">根據介紹，星辰語義大模型是中國電信自研大模型的升級，由此前的百萬參數量級升至千億，升級後在抑制幻覺、外推窗口、交互體驗、多輪理解能力上均有所提升。</span></span></p><p style="color:#494949"><span><span style="color:#222222">技術方面，星辰語義擁有超 12 億風格數據、訓練顯存降低 50%、推理提速 4.5 倍；中文意象理解生成能力提升 30%；語義細粒度生成效果提升 25%。在創意提效方面，星辰語義生產時間較此前生產工具減少 92%；設計成本下降 95%。</span></span></p><p style="color:#494949"><span><span style="color:#222222">中國電信方面表示，計劃於今年 12 月開源百億參數大模型；2024 年 4 月開源千億參數大模型，明年 3 月實現平台工具的開放。</span></span></p><p style="color:#494949"><span><span style="color:#222222">此外，中國電信還在會議現場陸續發佈了一連串產品及平台，其中一站式智算服務平台「慧聚」可實現模型開發、任務管理、模型優化、服務部署、模型服務等多項功能；中國電信「天衍」量子計算雲平台則具備指數級加速大模型訓練速率的潛力。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 06:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265881</guid>
            <link>https://www.oschina.net/news/265881</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IntelliJ IDEA 2023.3 Beta 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#494949"><span style="display:none">&nbsp;</span><span style="color:#000000">IntelliJ IDEA 2023.3 Beta 版本現已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fidea%2F2023%2F11%2Fintellij-idea-2023-3-beta%2F" target="_blank">發佈</a>，此版本包括搶先體驗計劃期間引入的所有重要更新。以下是即將發佈的主要版本中最值得注意的改進和新增功能列表：</span></p><ul><li><span style="color:#000000">完全支持 Java 21 功能</span></li><li><span style="color:#000000">調試器中的 Run to Cursor 嵌入選項</span></li><li><span style="color:#000000">具有代碼編輯操作的浮動工具欄</span></li><li><span style="color:#000000">支持 GitLab snippets</span></li><li><span style="color:#000000">All-in-one diff viewer</span></li><li><span style="color:#000000">Maven 和 Gradle 導入的改進</span></li><li><span style="color:#000000">OpenAPI 規範的可視化編輯</span></li><li><span style="color:#000000">Quarkus 和 Micronaut 的增強功能</span></li><li><span style="color:#000000">Spring 6.1 功能支持</span></li><li><span style="color:#000000">Spring for GraphQL 支持</span></li><li><span style="color:#000000">開箱即用的 Kubernetes 工具</span></li><li><span style="color:#000000">Extended Dev Containers 支持</span></li><li><span style="color:#000000">HTTP 客戶端改進</span></li></ul><p style="color:#494949"><span style="color:#000000"><strong>最新的 Kotli</strong><strong>n 版本支持現已隨</strong><strong> IDE 更新一起提供</strong></span></p><p style="color:#494949"><span style="color:#000000">從 v2023.3 開始，對新 Kotlin 版本的支持與 IntelliJ IDEA 和 Android Studio 更新一起提供，這意味着用戶不再需要從 JetBrains Marketplace 更新 Kotlin 插件。在每個主要 IDE 版本中，都可以有即將推出的 Kotlin Beta 和穩定版本的內置支持。</span></p><p style="color:#494949"><span style="color:#000000"><strong>Java Gradle 項目中的 Kotlin 自動配置</strong></span></p><p style="color:#494949"><span style="color:#000000">如果將 Kotlin 文件添加到 Java 模塊，IntelliJ IDEA 現在可以通過更改構建腳本自動將所有需要的 Kotlin 依賴項添加到模塊。你可以輕鬆查看這些更改並撤消它們。&nbsp;</span></p><p style="color:#494949"><span style="color:#000000">目前，滿足特定標準的 Gradle 項目可以進行自動配置，其中一些標準包括：</span></p><ul><li><span style="color:#000000">Gradle 版本必須與該項目可用的 Kotlin 版本兼容。&nbsp;</span></li><li><span style="color:#000000">模塊不得包含「buildSrc」文件夾。</span></li><li><span style="color:#000000">Gradle sync 不得正在進行，中。&nbsp;</span></li></ul><p style="color:#494949"><span style="color:#000000">如果無法自動配置，IDE 將建議用戶可以像以前一樣手動配置 Kotlin。<span style="display:none">&nbsp;</span></span></p><p style="color:#494949"><span style="color:#000000"><strong>插件更新</strong></span></p><p style="color:#494949"><span style="color:#000000">在 IntelliJ IDEA 2023.3 及更高版本中，對插件分發進行了更改。Android、Ant 和 GlassFish 插件現已通過 JetBrains Marketplace 提供。這也適用於 IntelliJ IDEA 社區版的 XPathView 插件。</span></p><p><span style="color:#000000">詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fidea%2F2023%2F11%2Fintellij-idea-2023-3-beta%2F" target="_blank">查看官方博客</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 06:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265876/intellij-idea-2023-3-beta</guid>
            <link>https://www.oschina.net/news/265876/intellij-idea-2023-3-beta</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[諾基亞在開源雲平台 Sylva 成功進行 5G 獨立組網測試]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>諾基亞<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nokia.com%2Fabout-us%2Fnews%2Freleases%2F2023%2F11%2F09%2Fnokia-conducts-successful-tests-of-5g-standalone-core-with-orange-on-sylva-open-source-cloud-stack%2F" target="_blank">發佈新聞稿稱</a></u>，他們與電信運營商 Orange 共同合作，在開源雲平台 Sylva 成功進行了 5G 獨立組網 (5G Standalone Core, 5G SA) 測試。</p><p>文章提到諾基亞 5G SA 核心網絡功能的互操作性測試在法國 Orange 的 Sylva 驗證中心成功完成。</p><p><img src="https://static.oschina.net/uploads/space/2023/1110/140712_6l0n_2720166.png" referrerpolicy="no-referrer"></p><p>據介紹，Sylva 的整體目標是提供一個可被廣泛使用的開源雲平台，專為電信和邊緣計算場景而定製，以解決行業的技術挑戰。 Sylva 於 2022 年底在 Linux 歐洲基金會旗下推出，其支持者包括諾基亞和 Orange。</p><p>測試驗證是提供靈活的雲原生解決方案的關鍵一步，該解決方案可實現 5G SA 核心網絡功能的大規模部署。對於 5G 專用無線企業客戶，Sylva 旨在提供一種在邊緣設備部署工業 4.0、物聯網和 B2B2X 用例的有效方法。</p><p><img src="https://static.oschina.net/uploads/space/2023/1110/142112_gnv5_2720166.png" referrerpolicy="no-referrer"></p><p>諾基亞核心網絡、雲和網絡服務高級副總裁兼總經理 Fran Heeran 表示：「諾基亞完全雲原生的核心網絡產品組合旨在通過開放、靈活的部署選項來支持不斷髮展的電信雲環境，同時大大減少集成度，以及提供先進的自動化能力。由 Orange 主辦的 Sylva 驗證中心成功完成了 5G SA 核心用戶平面功能 (User Plane Function) 的互操作性測試，這突顯了我們的承諾和我們正在取得的進步。」</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 06:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265875</guid>
            <link>https://www.oschina.net/news/265875</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GitHub 發佈開源編程字體家族 Monaspace]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>GitHub 推出了名為「Monaspace」的開源等寬編程字體家族。</p><p><img src="https://static.oschina.net/uploads/space/2023/1110/120711_f6hb_2720166.png" referrerpolicy="no-referrer"></p><p>地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmonaspace.githubnext.com%2F" target="_blank">https://monaspace.githubnext.com/</a></u></em></p><blockquote>
 「字體家族」（typeface / font family）和 「單款字體」（font）是不同的概念，雖然通常習慣將兩者都稱作 「字體」，但一個字體家族通常包含多個單款字體，字型之間以字重（粗細）、風格（正斜體）等設置區分開來。
 <br><br> 簡而言之，「字體家族」 是一整套的設計，其中包含若干款 「字體」，即單獨的字體文件。
</blockquote><p>根據介紹，「GitHub Monaspace」作為字體家族，整體可分為<strong>「靜態」和「可變」</strong>兩種類型。</p><ul><li><code>Monaspace _____</code>代表<strong>靜態</strong></li><li><code>Monaspace _____ Var</code>或<code>VF</code>代表<strong>可變</strong></li></ul><p>其中「可變」字體的每個系列都包含一個文件（Neon、Argon 等）。GitHub Monaspace 總共包含 5 種字體，由於它們的屬性相互兼容，因此可以混搭使用。</p><p>官方介紹道，等寬字體通常彼此不兼容。因為每個字體都使用不同的字型度量，所以無法對不同的字體進行混用。不過 GitHub Monaspace 的每款字體都經過精心設計，支持無縫混搭使用和匹配。通過超越顏色和更大膽的權重的調色板，為代碼賦予更多含義，為需要更多結構和層次結構的代碼構建接口。</p><p><img src="https://static.oschina.net/uploads/space/2023/1110/121225_m9Kc_2720166.png" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/1110/121823_4wpr_2720166.png" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/1110/123709_02AU_2720166.png" referrerpolicy="no-referrer"></p><p>下面是單獨使用 Xe 字體的效果：</p><p><img height="1228" src="https://static.oschina.net/uploads/space/2023/1110/121353_QrHp_2720166.png" width="1716" referrerpolicy="no-referrer"></p><p>開發者可基於上述 5 種字體任意搭配組合使用，如下：</p><p><img src="https://static.oschina.net/uploads/space/2023/1110/121517_ONNu_2720166.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 04:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/265861</guid>
            <link>https://www.oschina.net/news/265861</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Mozilla 發佈首款大模型 Fakespot Chat]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Mozilla 今年初收購了一家利用 AI 和機器學習識別虛假和欺騙性產品評論的初創公司 Fakespot。現在它推出了自己的首款大模型 Fakespot Chat。</p><p>地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.fakespot.com%2Factivate-fakespot-chat" target="_blank">https://www.fakespot.com/activate-fakespot-chat</a></u></em></p><p>根據介紹，Fakespot Chat 會在消費者在線購物時為其提供幫助，評估商品，回答有關產品的問題，甚至提出對產品研究有用的問題。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0c8ba2eab76180ea01cd2354846b379bc1a.png" referrerpolicy="no-referrer"></p><p>Fakespot 一直在利用 AI，包括生成式 AI 技術，來提高而不是降低網上購物過程的可信度。例如，它在去年推出了一項名為"優點和缺點"的人工智能生成功能，通過自己編寫產品的優點和缺點總結，取代了閲讀評論的需要。公司表示，該功能是在數十億個數據點的基礎上訓練出來的，模型本身使用了五種不同的模型。</p><p>本週，Fakespot Chat 開始測試，購物者可以向它詢問正在考慮的產品，就像在現實世界中的實體店購物時向銷售人員尋求幫助一樣。該技術利用 AI 和機器學習對產品評論進行排序，分辨真偽，回答用戶的問題。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3195b13d6b959f1bddbd173f9fb8e7c06c6.png" referrerpolicy="no-referrer"></p><p>Mozilla 表示，聊天會話中的信息會被保存下來，這是為了改善體驗，用戶可在無需創建賬戶或泄露個人信息的前提下使用這項服務。</p><p>Mozilla 也承認，這個 AI 聊天機器人不一定總能做出正確決策，因此它邀請用戶提交反饋意見，如果他們認為該模型可以改進的話。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 03:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266008/fakespot-chat-mozillas-first-llm</guid>
            <link>https://www.oschina.net/news/266008/fakespot-chat-mozillas-first-llm</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FFmpeg 6.1]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>FFmpeg 6.1 <u><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fffmpeg.org%2Findex.html%23pr6.1" target="_blank">已正式發佈</a></u>，代號 "Heaviside"。</p><p>下載地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fffmpeg.org%2Fdownload.html%23release_6.1" target="_blank">https://ffmpeg.org/download.html#release_6.1</a></u></em></p><p><img src="https://oscimg.oschina.net/oscnet/up-9e1c78a5b6a3b63b266be5b2a83bc994beb.png" referrerpolicy="no-referrer"></p><p>作為重要版本更新，FFmpeg 6.1 包含以下值得關注的新特性：</p><ul><li>新增 Playdate 視頻解碼器和分離器</li><li>為 Windows 版本 libva-win32 擴展 VAAPI 支持</li><li>ffmpeg CLI 新增選項：-readrate_initial_burst</li><li>setpts 和 asetpts 過濾器支持命令</li><li>Vulkan 支持解碼 hwaccel，支持 H264, HEVC and AV1</li><li><strong>新增過濾器</strong><ul><li>afireqsrc audio source filter</li><li>arls filter</li><li>zoneplate video source filter</li><li>color_vulkan filter</li><li>bwdif_vulkan filter</li><li>nlmeans_vulkan filter</li><li>xfade_vulkan filter</li><li>bwdif_cuda filter</li><li>apsnr and asisdr audio filters</li><li>Bitstream filter for editing metadata in VVC streams</li><li>Bitstream filter for converting VVC from MP4 to Annex B</li><li>scale_vt filter for videotoolbox</li><li>transpose_vt filter for videotoolbox</li></ul></li><li><strong>新增解碼器</strong><ul><li>libaribcaption decoder</li><li>RivaTuner video decoder</li><li>vMix video decoder</li><li>OSQ demuxer and decoder</li></ul></li><li><strong>新增編碼器</strong><ul><li>Microsoft RLE video encoder</li><li>VAAPI AV1 encoder</li></ul></li><li>新增解析器、muxer &amp; demuxer 
  <ul><li>Essential Video Coding parser, muxer and demuxer</li><li>Essential Video Coding frame merge bsf</li><li>Raw AC-4 muxer and demuxer</li><li>Raw VVC bitstream parser, muxer and demuxer</li><li>CRI USM demuxer</li></ul></li><li><strong>其他改進</strong><ul><li>support for the P_SKIP hinting to speed up libx264 encoding</li><li>Support HEVC,VP9,AV1 codec in enhanced flv format</li><li>Support HEVC,VP9,AV1 codec fourcclist in enhanced rtmp protocol</li><li>ffmpeg CLI '-top' option deprecated in favor of the setfield filter</li><li>ffprobe XML output schema changed to account for multiple variable-fields elements within the same parent element</li><li>ffprobe -output_format option added as an alias of -of</li></ul></li></ul><p>發佈公告寫道，這個版本已經逾期至少半年了。由於版本庫中的活動不斷，不得不推遲發佈。最近終於能夠在合併 7.0 中的一些大改動之前，對該版本進行分支。</p><p>在內部，開發團隊也進行了一些修改。用於編解碼器和濾波器的 FFT、MDCT、DCT 和 DST 實現已完全替換為速度更快的 libavutil/tx。</p><p>這使得編譯後二進制文件的體積大小減少，這在小規模構建中會很明顯。 在整個視頻解碼器中，每幀的分配總量大幅減少，從而降低了開銷。</p><p>此外還對 DSP 代碼的許多部分進行了 RISC-V 優化，主要是對大型解碼器進行了合併。開發團隊稱他們努力提高每個數據包的時間戳和幀持續時間的正確性，從而提升變幀率視頻的準確性。</p><p>下一個更新將是 7.0 大版本，計劃於二月發佈。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 10 Nov 2023 02:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/266003/ffmpeg-6-1-released</guid>
            <link>https://www.oschina.net/news/266003/ffmpeg-6-1-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
