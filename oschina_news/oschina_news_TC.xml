<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 25 Dec 2023 09:15:20 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[燧原科技增資至 1 億元，騰訊為第一大股東]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">天眼查 App 顯示，上海燧原科技股份有限公司於近日發生工商變更，註冊資本由約 443 萬人民幣增至 1 億人民幣。</span></p><p><span style="color:#000000">上海燧原科技股份有限公司（曾用名：上海燧原科技有限公司）成立於 2018 年 3 月，法定代表人、董事長兼總經理為趙立東（ZHAO LIDONG），經營範圍含集成電路、計算機硬件研發、批發、零售，自有研發成果轉讓，並提供相關技術諮詢與技術服務，銷售自產產品，集成電路製造等。</span></p><p><span style="color:#000000">股東信息顯示，<span style="background-color:#ffffff">該公司由騰訊科技（上海）有限公司、趙立東、張亞林、國家集成電路產業投資基金二期股份有限公司等共同持股。其中，騰訊科技（上海）有限公司持股約 21.37%，為第一大股東。</span></span></p><p><img height="250" src="https://oscimg.oschina.net/oscnet/up-1732a5466871889cdbf8c8cbb652bc144ab.png" width="700" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 09:03:19 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272620</guid>
            <link>https://www.oschina.net/news/272620</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ruby 3.3.0 正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">Ruby 3.3.0 現已正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ruby-lang.org%2Fen%2Fnews%2F2023%2F12%2F25%2Fruby-3-3-0-released%2F" target="_blank">發佈</a>。新版本<span style="background-color:#ffffff">添加了一個名為 Prism 的新解析器，使用 Lrama 作為解析器生成器，添加了一個名為 RJIT 的新純 Ruby JIT 編譯器，以及許多性能改進，尤其是 YJIT。</span></span></p><p><span style="background-color:#ffffff; color:#333333">具體更新內容如下：</span></p><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong><span style="color:#000000"><span style="background-color:#ffffff">Prism</span></span></strong></h4><ul style="margin-left:0; margin-right:0"><li>引入&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fruby%2Fprism" target="_blank">Prism 解析器</a>作為默認 gem 
  <ul style="margin-left:0; margin-right:0"><li>Prism 是一個可移植、容錯且可維護的 Ruby 語言遞歸下降解析器</li></ul></li><li>Prism 已做好生產準備並積極維護，用戶可以使用它代替 Ripper 
  <ul style="margin-left:0; margin-right:0"><li>具體介紹可查看&nbsp;Prism 的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fruby.github.io%2Fprism%2F" target="_blank">文檔</a>。</li><li>Prism 既是一個由 CRuby 內部使用的 C 庫，又是一個可供任何需要解析 Ruby 代碼的工具使用的 Ruby gem</li><li>Prism API 中值得注意的方法有： 
    <ul style="margin-left:0; margin-right:0"><li><code class="language-plaintext">Prism.parse(source)</code>返回 AST 作為解析結果對象的一部分</li><li><code class="language-plaintext">Prism.parse_comments(source)</code>返回&nbsp;comments</li><li><code class="language-plaintext">Prism.parse_success?(source)</code>如果沒有錯誤，則返回 true</li></ul></li></ul></li><li>現在可以使用<code class="language-plaintext">ruby --parser=prism</code>或<code class="language-plaintext">RUBYOPT="--parser=prism"</code>嘗試使用&nbsp; Prism 編譯器。值得注意的是，該 flag 僅用於調試。</li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong><span style="color:#000000"><span style="background-color:#ffffff">使用 Lrama 代替 Bison</span></span></strong></h4><ul style="margin-left:0; margin-right:0"><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fruby%2Flrama" target="_blank">用 Lrama LALR 解析器生成器</a>替換 Bison&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.ruby-lang.org%2Fissues%2F19637" target="_blank">[Feature #19637]</a><ul style="margin-left:0; margin-right:0"><li>更多詳情可參閲<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frubykaigi.org%2F2023%2Fpresentations%2Fspikeolaf.html" target="_blank">Ruby Parser 的未來願景</a></li><li>為了便於維護，Lrama 內部解析器被替換為 Racc 生成的 LR 解析器</li><li>支持參數化規則<code class="language-plaintext">(?, *, +)</code>，將在 Ruby parse.y 中使用</li></ul></li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:left"><span style="color:#000000"><strong><span style="background-color:#ffffff">YJIT</span></strong></span></h4><ul style="margin-left:0; margin-right:0"><li>相對 Ruby 3.2 的主要性能改進 
  <ul style="margin-left:0; margin-right:0"><li>對 splat 和 rest 參數的支持已得到改進。</li><li>為虛擬機的堆棧操作分配了寄存器。</li><li>編譯更多帶有可選參數的調用。異常處理程序也被編譯。</li><li>不支持的調用類型和<span style="background-color:#ffffff; color:#333333">復態調用點</span>不再退出到解釋器。</li><li>Rails <code class="language-plaintext">#blank?</code>和 specialized<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frails%2Frails%2Fpull%2F49909" target="_blank"><code class="language-plaintext">#present?</code></a>等基本方法都是內聯的。</li><li>對<code class="language-plaintext">Integer#*</code>、<code class="language-plaintext">Integer#!=</code>、<code class="language-plaintext">String#!=</code>、<code class="language-plaintext">String#getbyte</code>、&nbsp;<code class="language-plaintext">Kernel#block_given?</code>、<code class="language-plaintext">Kernel#is_a?</code>、<code class="language-plaintext">Kernel#instance_of?</code>和<code class="language-plaintext">Module#===</code>進行了特別優化。</li><li>編譯速度現在比 Ruby 3.2 稍快。</li><li>現在比 Optcarrot 上的解釋器快 3 倍以上</li></ul></li><li>與 Ruby 3.2 相比顯着提高了內存使用率 
  <ul style="margin-left:0; margin-right:0"><li>編譯代碼的元數據佔用內存更少。</li><li>當應用程序的 ISEQ 超過 40,000 個時，<code class="language-plaintext">--yjit-call-threshold</code>會自動從 30 提高到 120。</li><li>添加<code class="language-plaintext">--yjit-cold-threshold</code>以跳過編譯 cold&nbsp;ISEQ。</li><li>在 Arm64 上生成更緊湊的代碼。</li></ul></li><li>Code GC 現在默認禁用 
  <ul style="margin-left:0; margin-right:0"><li><code class="language-plaintext">--yjit-exec-mem-size</code>被視為新代碼編譯停止的硬限制。</li><li>不會因 Code GC&nbsp;導致性能突然下降。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fshopify%2Fpitchfork" target="_blank">使用 Pitchfork</a>&nbsp;重新分叉的服務器上有更好的 copy-on-write&nbsp;行為&nbsp;。</li><li>如果需要，仍然可以使用<code class="language-plaintext">--yjit-code-gc</code>啓用&nbsp;code GC</li></ul></li><li>添加<code class="language-plaintext">RubyVM::YJIT.enable</code>以便在運行時啓用 YJIT 
  <ul style="margin-left:0; margin-right:0"><li>無需修改​​命令行參數或環境變量即可啓動 YJIT。Rails 7.2 將使用此方法<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Frails%2Frails%2Fpull%2F49947" target="_blank">默認啓用 YJIT</a>&nbsp;。</li><li>這也可用於僅在應用程序完成啓動後啓用 YJIT。如果想在啓動時禁用 YJIT 的同時使用其他 YJIT 選項，可以使用<code class="language-plaintext">--yjit-disable</code>。</li></ul></li><li>默認情況下提供更多 YJIT stats 
  <ul style="margin-left:0; margin-right:0"><li>現在默認情況下還提供了<code class="language-plaintext">yjit_alloc_size</code>和更多與元數據相關的統計信息。</li><li>由<code class="language-plaintext">--yjit-stats</code>生成的 <code class="language-plaintext">ratio_in_yjit</code>stat 現在可在發行版中使用，不再需要特殊的 stats 或 dev 版本才能訪問大多數統計信息。</li></ul></li><li>添加更多 profiling 功能 
  <ul style="margin-left:0; margin-right:0"><li>添加<code class="language-plaintext">--yjit-perf</code>以方便使用 Linux perf 進行分析。</li><li><code class="language-plaintext">--yjit-trace-exits</code>現在支持使用<code class="language-plaintext">--yjit-trace-exits-sample-rate=N</code>進行採樣</li></ul></li><li>更全面的測試和多個錯誤修復</li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:left"><strong><span style="color:#000000"><span style="background-color:#ffffff">RJIT</span></span></strong></h4><ul style="margin-left:0; margin-right:0"><li>引入了純 Ruby JIT 編譯器 RJIT 並取代了 MJIT。 
  <ul style="margin-left:0; margin-right:0"><li>RJIT 僅支持 Unix 平台上的 x86-64 架構。</li><li>與 MJIT 不同，它在運行時不需要 C 編譯器。</li></ul></li><li>RJIT 的存在僅用於實驗目的。 
  <ul style="margin-left:0; margin-right:0"><li>建議用戶在生產環境中繼續使用 YJIT。</li></ul></li><li>如果對為開發 JIT for Ruby 感興趣，可查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frubykaigi.org%2F2023%2Fpresentations%2Fk0kubun.html%23day3" target="_blank">k0kubun 在 RubyKaigi 第 3 天的演示</a>。</li></ul><h4 style="margin-left:0px; margin-right:0px; text-align:left"><span style="color:#000000"><strong><span style="background-color:#ffffff">M:N 線程調度器</span></strong></span></h4><ul style="margin-left:0; margin-right:0"><li>引入了 M:N 線程調度程序。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugs.ruby-lang.org%2Fissues%2F19842" target="_blank">[Feature#19842]</a><ul style="margin-left:0; margin-right:0"><li>M 個 Ruby 線程由 N 個本機線程（操作系統線程）管理，因此減少了線程創建和管理成本。</li><li>它可能會破壞 C 擴展兼容性，因此默認情況下會在主 Ractor 上禁用 M:N 線程調度程序。 
    <ul style="margin-left:0; margin-right:0"><li><code class="language-plaintext">RUBY_MN_THREADS=1</code>環境變量可在主 Ractor 上啓用 M:N 線程。</li><li>M:N 線程始終在非主 Ractor 上啓用。</li></ul></li><li><code class="language-plaintext">RUBY_MAX_CPU=n</code>環境變量用於設置<code class="language-plaintext">N</code>（本地線程的最大數量）的最大值。默認值為 8。 
    <ul style="margin-left:0; margin-right:0"><li>由於每個 Ractor 只能同時運行一個 Ruby 線程，因此將使用的本地線程數是<code class="language-plaintext">RUBY_MAX_CPU</code>中指定的線程數和正在運行的 Ractor 數量中較小的一個。因此，單 Ractor 應用程序（大多數應用程序）將只使用 1 個本地線程。</li><li>為了支持阻塞操作，可以使用<code class="language-plaintext">N</code>個以上的本地線程。</li></ul></li></ul></li></ul><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.ruby-lang.org%2Fen%2Fnews%2F2023%2F12%2F25%2Fruby-3-3-0-released%2F" target="_blank">查看官方公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 08:35:01 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272610/ruby-3-3-0-released</guid>
            <link>https://www.oschina.net/news/272610/ruby-3-3-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[國內第一個開源免費電子簽章系統發佈了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:left"><span><span><span><span><strong><span>一、前言 &nbsp;&nbsp;</span></strong><br> &nbsp;&nbsp;&nbsp;&nbsp;<span><span>如約而至，歷經一年的奮戰，開放籤電子簽章系統於 2023 年 12 月 15 日上線發佈了。</span></span><br> &nbsp;&nbsp;&nbsp;&nbsp;<span><span>開放籤是國內第一個開源免費的電子簽章系統，為企業構建安全、可信、可控、靈活的一站式電子簽章全服務體系產品鏈，我們相信將電子簽章技術、產品開源開放，能夠為產品與用戶之間帶來更多信任，讓電子簽署更加可信、簡單。</span></span><br><strong><span><span><strong>二、產品理念 &nbsp;&nbsp;</strong></span></span></strong><br> &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<strong><span><span><strong>產品的核心價值理念：讓電子簽署更簡單。</strong></span></span></strong></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span><span><span><span><span>&nbsp; &nbsp; &nbsp; &nbsp;讓電子簽章技術更加簡單：目前，市場上掌握電子簽署完整技術的開發工程師比例相對較低，同時網上相關的技術資料和工具也比較分散，很難系統性的學習和應用。所以，我們希望開放籤可以將電子簽章技術和工具完整的、開源的提供出來，讓有技術能力的個人或團隊學習或自建電子簽章系統；</span></span><br><span><span>讓電子簽章應用更加簡單：在應用層面，我們希望可以降低企業應用電子簽章產品的門檻，免費下載，零採購成本使用；</span></span><br><strong><span><span><strong>三、產品矩陣和功能</strong></span></span></strong><br> &nbsp;&nbsp;&nbsp;&nbsp;<strong>&nbsp; &nbsp;&nbsp;</strong><strong><span><span><strong>基於產品理念，開放籤的產品矩陣和功能如下：</strong></span></span></strong></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:left"><span><span><span><span><span><span>&nbsp; &nbsp; &nbsp; &nbsp;開源工具版：將電子簽章的核心技術代碼和工具進行開源，開源版採用更加寬鬆的 MIT 開源協議，且不受商業限制。產品功能包括：電子印章製作，手寫簽名生成，數字證書生成，PDF 文件轉圖片，電子簽章（關鍵字簽署、指定位置簽署），文件驗籤等。</span></span><br> &nbsp; &nbsp; &nbsp; &nbsp;<span><span>企業版：提供免費版本的電子簽章應用系統，用戶可以一鍵下載、部署安裝，部署完成後，用戶即可擁有電子簽章的基本功能。支持私有化部署、多租戶、SaaS 化等多種服務模式，提供在線簽署、電子簽章、電子印章管控、審批流程管理、數字證書服務等功能，滿足電子合同、電子保單、電子報告單、招投標文件、電子成績單、電子證明、金融憑證、會計憑證、電子處方等多種電子文件簽署場景。</span></span><br> &nbsp; &nbsp; &nbsp; &nbsp;<span><span>定製版：對於比較複雜的、定製的場景需求，開放籤提供本地化、深度定製化、專屬技術服務，為您提供專屬電子簽章平台。</span></span><br><strong><span><span><strong>四、開放籤產品地址</strong></span></span></strong><br><span><span>開源工具版下載地址：</span></span></span></span></span></span></p><p><a href="https://gitee.com/kaifangqian">gitee 倉庫地址</a>：https://gitee.com/kaifangqian</p><p><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.kaifangqian.com" target="_blank">產品官網地址</a>：www.kaifangqian.com</p><p><span style="background-color:#ffffff; color:#4d4d4d">開放籤將始終以開源、開放的價值觀持續更新系統，為用戶提供更加開放、好用的電子簽章系統。</span></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 07:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272595</guid>
            <link>https://www.oschina.net/news/272595</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[和 ChatGPT 聊天費水，提 10 個問題或消耗半升水]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>《央視財經》報道稱，如果一個用戶向 ChatGPT 問了 10 到 50 個問題，可能會消耗掉 500 毫升的水。</p><p>因為訓練和運行 AI 大模型通常需要數以萬計的服務器來提供計算資源、存儲資源以及低延遲的網絡連接，這些服務器會以集羣的方式部署在名為「數據中心」的物理場所，當它們一起工作時，會在短時間內產生高度集中的熱量，所以需要大量的水資源進行冷卻。</p><p><img height="240" src="https://oscimg.oschina.net/oscnet/up-07526f86e0540f3acb7c39b414feef1d080.png" width="500" referrerpolicy="no-referrer"></p><p>以微軟和谷歌為例。2022 年，微軟一共用掉了約 17 億加侖（約 64 億升）水，相當於可以填滿約 2500 個奧運會規格的泳池；而谷歌的數據中心和辦公室則用掉了總計 56 億加侖（約 212 億升）水，相當於 8500 個奧運會規格的游泳池。</p><p>數據顯示，現在 AI 所需要的算力預計每 100 天就會翻一番，並且在未來五年內可能會增長超過一百萬倍。研究人員預計，到 2027 年，全球範圍內的 AI 需求可能會需要消耗掉 66 億立方米的水資源，幾乎相當於美國華盛頓州全年的取水量。</p><p>美國聖克拉拉大學馬庫拉應用倫理學中心高級主管，安·斯基特表示：「我認為很快就會有監管機構開始行動，而歐盟明年就會提高相關的監管要求，要求公司披露它們的用水情況。」</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 07:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272594</guid>
            <link>https://www.oschina.net/news/272594</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 社區第三次理事會會議成功召開！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">2023 年 12 月 22 日下午，openKylin 社區第三次理事會會議在北京成功召開。本次會議由 openKylin 社區祕書長餘傑主持，麒麟軟件、普華基礎軟件、中科方德、麒麟信安、凝思軟件、中興新支點、元心科技、中國電科 32 所、技德系統、北京麟卓、先進操作系統創新中心、飛騰、兆芯、龍芯中科、景美、京東科技、玄鐵、申泰信息、海光等 21 家社區理事單位代表參會。</span></span></p><div><img alt="" height="720" src="https://oscimg.oschina.net/oscnet/up-89ff214b26c58cc74cf9c9fcbb41c82fefe.png" width="1080" referrerpolicy="no-referrer"></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社區諮詢委員會委員韓乃平為本次會議作開場致辭，向出席會議的各位來賓致以歡迎和感謝，並表示一個社區的良性發展，不僅需要主流軟硬件廠商的積極合作，更需要吸引全球眾多開源社區開發者不斷湧入。openKylin 作為我國開源操作系統根社區，通過聚合產、學、研、用等開源力量，在過去一年取得了行業矚目的成績，希望通過本次會議，共同商討如何更好推進社區發展，挖掘社區更多潛能，為推進中國信息化產業的發展作出更大的貢獻。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b126e34cb4bad1857b66cf44f36cad418cf.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#6ec1f5"><span style="background-color:#f7fcff">社區工作彙報</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社區副祕書長劉敏以線上形式參與會議，圍繞社區治理、基礎設施、SIG 組、社區版本、社區會員和品牌推廣等維度，向理事單位代表彙報 2023 年社區運營進展及 2024 年發展規劃。openKylin 社區技術委員會委員李劍峯從系統版本構建和社區技術創新等維度向理事單位代表進行彙報。</span></span></p><div><p style="text-align:center"><img alt="" height="2432" src="https://oscimg.oschina.net/oscnet/up-c40a204c7c674be4aca5f9baa697d7f0959.jpg" width="3648" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">2023 年，openKylin 社區發佈了 3 個系統版本，並圍繞桌面操作系統底層核心技術和用戶體驗提升，推出了「分級凍結」應用生命週期管理機制、軟硬件生態「原生兼容」技術、VirtIO-GPU 硬件視頻加速機制、新一代圖形顯示框架 wlcom 合成器、開明軟件包格式等一系列創新成果。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">此外，面向快速發展的人工智能技術領域，openKylin 社區積極佈局，2023 年 6 月啓動了對 AI 大模型產品的生態兼容和系統級融合，發佈 openKylin AI 框架安裝助手，並在 openKylin 1.0 版本中支持桌面 AI 大模型插件和智能語音助手功能，推動桌面操作系統智能交互創新發展。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#6ec1f5"><span style="background-color:#f7fcff">理事單位貢獻分享</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">北京麟卓總經理溫研發表《繪製輝煌，驅動未來--圖形 SIG 組工作彙報》主題分享，基於社區平台，北京麟卓成立了 GraphicSystem SIG，負責 openKylin 社區中 GPU 驅動的適配與優化、圖形軟件棧優化、基於 GPU 的通用計算、圖形處理系統綜合測試評估等與圖形系統相關的信息交流和配套軟件開發工作。未來，麟卓將於與社區加深合作，為拓展社區應用生態提供支撐。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-8281f0b89a1a8051710c2f34a8299ec7806.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">元心科技研究院副院長李何佳發表《Flutter SIG 組的工作進展及後續工作方向》主題分享，加入社區後，元心科技參與了 Security SIG 相關工作，並對相關倉庫進行了 CVE 的漏洞修復。同時發起成立了 Flutter SIG，致力於為推進 Flutter 應用開發框架在 openKylin 社區的支持，包括對 Flutter 開發環境支持和 Flutter 應用運行支持。後續，將與 openKylin 社區緊密協作，共同開展更多技術嘗試與創新探索。</span></span></p><div><p style="text-align:center"><img alt="" height="2432" src="https://oscimg.oschina.net/oscnet/up-c1d070fd8ccd1211a40b6ec0ef66c5d8f84.jpg" width="3648" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">飛騰軟件支持經理鄭俊普發表《與開放的麒麟共飛騰》主題分享，飛騰與 openKylin 社區在技術支持、開源社區建設和生態活動等方面有着密切合作。基於社區，創建了 Phytium SIG，2024 年，飛騰將圍繞服務器平台上的 openKylin 內核和軟件適配開展工作，為社區生態繁榮貢獻一份力量。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-42ac95fa812d4ddef5b497314b302201ea9.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">阿里巴巴達摩院，RISC-V 及生態高級技術專家王雲龍發表《openKylin&amp;玄鐵 RISC-V 合作進展》主題分享，王雲龍表示，玄鐵與 openKylin 社區在技術融合、軟件適配和生態推廣方面有着深度合作，基於玄鐵 CPU+openKylin 操作系統的基礎平台，聯合釘釘，三方共同努力完成了 27000+文件的編譯、Qt&amp;CEF 等核心組件、17 個第三方庫的構建工作，在 RISC-V 架構上首次實現了大型商業 IM 的流暢運行。</span></span></p><div><p style="text-align:center"><img alt="" height="2432" src="https://oscimg.oschina.net/oscnet/up-086ff4a6aea5896e7cea8088376720081e1.jpg" width="3648" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">景美產品總監邱江發表《國產 GPU 的 openKylin 開源之路》主題分享，景美在加入 openKylin 社區後發起成立 GPU SIG 組，並邀請了國內多家 GPU 廠商陸續加入並貢獻社區，目前已正式完成景美 JM9100 顯卡與 openKylin 1.0 版本操作系統的適配工作，其適配成果後續也將逐步合併到 openKylin 2.0 版本中。</span></span></p><div><p style="text-align:center"><img alt="" height="2432" src="https://oscimg.oschina.net/oscnet/up-4c6fb975407dd2b4754514f4b7c64beac2d.jpg" width="3648" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">兆芯高級產品經理張偉發表《共建 openKylin 社區》主題分享，兆芯加入社區 GPU SIG 後，積極開展 openKylin 內核在兆芯 CPU 平台上的驗證適配、性能優化、新需求支持等相關工作，協助社區有序推進 openKylin 開源操作系統的完善和版本更新，目前，兆芯最新一代開先 KX-6000G 處理器已與 openKylin 操作系統完成適配認證工作，並在 openKylin 社區代碼貢獻位列前茅。</span></span></p><div><p style="text-align:center"><img alt="" height="2432" src="https://oscimg.oschina.net/oscnet/up-7fbab6bb17d73843fd51af01b0036d508af.jpg" width="3648" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#6ec1f5"><span style="background-color:#f7fcff">閉門討論</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社區理事會作為社區決策機構和領導機構，主要職責為指導社區的發展方向，制定長期發展規劃和實施指導意見。會上，openKylin 副祕書長劉敏就 openKylin 社區章程更新向理事單位進行彙報。隨後，各理事單位圍繞</span><strong><span style="color:#000000">社區運營、生態共建、技術創新發展方向</span></strong><span style="color:#000000">等重大事宜發表了各自意見，並進行了深入討論。</span></span></p><div><p style="text-align:center"><img alt="" height="1549" src="https://oscimg.oschina.net/oscnet/up-ec6edfcdc1519d9b04b5729e9a7ed94fa38.jpg" width="3921" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#6ec1f5"><span style="background-color:#f7fcff">總結致辭</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">最後，由社區理事長朱晨對本次理事會進行總結致辭，朱晨表示，openKylin 社區的繁榮發展，離不開每一位貢獻者的辛勤付出。在今天上午的社區 2023 年度夥伴暨開發者大會上，我們對參與社區共建的優秀企業夥伴和個人開發者進行了表彰頒獎。我們很高興地看到，越來越多優秀夥伴加入，為打造國產開源操作系統根社區貢獻力量。</span></span></p><div><p style="text-align:center"><img alt="" height="720" src="https://oscimg.oschina.net/oscnet/up-6daf096096b8cee46f43e5562cd5d447400.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">未來，openKylin 將繼續秉持「開源聚力、共創未來」的社區理念，持續推動技術創新和生態拓展，打造一個更加強大和優秀的桌面操作系統開源社區，同時將不斷提升自身在開源技術發展中的影響力，為推進中國信息化產業的發展作出更大的貢獻。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 06:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272584</guid>
            <link>https://www.oschina.net/news/272584</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源共創，攜手成長 | openKylin 夥伴暨開發者年度會議圓滿落幕！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">12 月 22 日，openKylin 夥伴暨開發者年度會議在北京成功召開。本次會議以「開源共創，攜手成長」為主題，邀請了社區傑出共建單位和開發者代表線下相聚，共鑑社區新進展、共享開源操作系統新技術、共研產業未來新趨勢。</span></span></p><div><p style="text-align:center"><img height="1280" src="https://oscimg.oschina.net/oscnet/up-95191a5aa9adb13597715074c98ca955469.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><em><span><strong><span style="color:#ffce73">01</span></strong></span></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#57b8f6">會議開場致辭</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社區理事、麒麟軟件總經理孔金珠在開場致辭中表示，過去一年裏，越來越多優秀的企業夥伴和開發者加入到 openKylin 開源大家庭中，為操作系統根技術創新奠定智囊基礎。在社區 400+生態夥伴和 5500+開發者的攜手共創下，openKylin 社區取得多項技術創新成果，實現了從系統效能、功能體驗、生態融合、應用開發等方面的全棧技術創新。此次會議是一次技術的交流，也是一次思想的碰撞，更是一次創新的啓程。希望通過交流和分享，碰撞出智慧的火花，進一步推動操作系統創新技術融合。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-5f02f52e732f362c83ecc5301f00c9bc212.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><em><span><strong><span style="color:#ffce73">02</span></strong></span></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#57b8f6">社區成果回顧</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社區生態委員會主任李震寧分享了 openKylin 進展成果及未來展望，李震寧表示，2023 年，在建立中國開源操作系統根社區的信念引領下，openKylin 社區匯聚了社會各界的產業力量、院士專家、高校師生、個人開發者，共同推動社區治理體系完善、社區產品打造、系統生態建設及使用體驗提升。openKylin 社區的快速發展，充分體現了開源作為一種創新的軟件協同生產模式所綻放的活力和無限潛能。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-08a7ee5efbc0ff067ea9d9b9ea7e78bc67e.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><ul><li><span><strong><span style="color:#000000">生態共建</span></strong><span style="color:#000000">方面，目前，openKylin 社區已匯聚了涵蓋操作系統、數據庫、辦公軟件、CPU、GPU、整機、人工智能等在內的 400+企業會員和 36 所研究型、教學型、應用型的各層次高等院校。</span></span></li><li><span><strong><span style="color:#000000">版本發佈</span></strong><span style="color:#000000">方面，openKylin 社區累計發佈 6 個版本，完成 20+核心組件選型工作，累計下載量超百萬。</span></span></li><li><span><strong><span style="color:#000000">創新演進</span></strong><span style="color:#000000">方面，成立 94 個 SIG 開展技術研究與創新，其中，開明包格式環境、wlcom 合成器、KARE 生態兼容、不可變系統和跨版本升級工具等社區最新重大技術成果都將融入到 openKylin 2.0 版本中，顛覆性創新帶來全新體驗。目前 openKylin 2.0 alpha 版本已發佈，面向開發者和嘗新用戶體驗。</span></span></li><li><span><strong><span style="color:#000000">智能融合</span></strong><span style="color:#000000">方面，發佈 openKylin AI 框架安裝助手，實現一鍵安裝 AI 框架，並在 openKylin 1.0 版本中實現支持桌面 AI 大模型插件和智能語音助手功能，從智能輸入、智能輸出兩方面入手，深度融合 AI 技術，推動桌面操作系統智能交互創新發展。</span></span></li><li><span><strong><span style="color:#000000">RISC-V 布</span></strong><span style="color:#000000">局方面，openKylin 社區正式加入 RISC-V 基金會，從源碼級別自主構建了 RISC-V 開源桌面操作系統版本成為其產業聯盟成員，支持 80% 以上市場主流 RISC-V 芯片，並攜手深度數智發佈全球首款 RISC-V 筆記本電腦 DC-ROMA。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">邁向 2024 年，openKylin 社區將立足新起點、實現新跨越。以開源、開放、平等、協作模式融智共創，為用戶及開發者創造全新體驗及價值。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><em><span><strong><span style="color:#ffce73">03</span></strong></span></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#57b8f6">年度貢獻榜單揭曉</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社區的繁榮發展，離不開每一位貢獻者的辛勤付出。會上，openKylin 社區公佈了 2023 年度貢獻榜單並進行頒獎，以表彰在過去一年中為社區做出突出貢獻的傑出企業夥伴、高校共建先鋒、SIG 團隊和開發者菁英等。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#888888">感謝每一位參與社區共建的小夥伴！歡迎更多企業、高校和開發者加入社區，共同打造中國開源操作系統根社區！以下為現場部分頒獎留影：</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ec33487714ec154fceead05a87ff6e18c15.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-055afff730218da4aae68795a967a3d0076.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-28988997294bf968c922166fab67c3b46e8.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-538daf8e0d17bd318f74522b98e8a380362.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><em><span><strong><span style="color:#ffce73">04</span></strong></span></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#57b8f6">共建夥伴成果分享</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">格蘭菲市場支持科主管嶽曉帥發表《格蘭菲 openKylin 社區會員開源實踐技術分享》主題演講，嶽曉帥表示，在加入 openKylin 社區後，格蘭菲積極參與社區共建，並加入社區 GPU SIG，目前已完成了 Arise1 平台與 openKylin 操作系統的兼容適配認證工作，並在功能、性能及兼容性方面表現優異。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-6caa8d88cb5fad2a0b4f66d85c5519373b4.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">信創海河實驗室副研究員王文竹發表《信創海河實驗室 openKylin 社區會員開源實踐分享》主題演講，王文竹表示，信創海河實驗室與 openKylin 社區在 RISC-V 版本共建、運營推廣和人才培養等方面有着緊密的合作關係。雙方攜手從源碼級別自主構建了 RISC-V 開源桌面操作系統版本，目前已實現 openKylin 對算能 RISC-V 產品的全方位支持，涵蓋了桌面環境、軟件生態、容器化部署和人工智能等多個關鍵領域。未來雙方將深化合作，共同推進 RISC-V 生態技術發展。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-488499cad322a4e5f7f7ca8e2efe730b22a.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">南開大學軟件學院團委書記王真發表《南開大學+openKylin: 共同推動開源社區國際化建設》主題演講，王真表示，南開大學軟件學院作為 openKylin 社區共建夥伴，創建了 InternationalPromotion SIG，負責對接 30+國家，103 位國外留學生開展相關國際化推廣工作，目前已開展四屆國際推廣交流活動，頒發尼泊爾、肯尼亞、塞拉利昂等 11 個國家星級推廣站點授權證書。未來，雙方將進一步攜手擴大國際項目交流圈，推動 openKylin 社區科技創新合作、技術推廣交流和成果轉化應用。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-a2b78bd919f34e066c3561280f2edccd3c0.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">儒特科技 CEO 馬鐵發表《QSFramework SIG 貢獻及成果分享》主題演講，儒特科技加入社區後，發起成立了 QSFramework SIG，SIG 團隊維護的開源項目青霜框架（QSFramework），是一款新形態、輕量化、微內核 Web 引擎。目前，已正式完成 QSFramework 與 openKylin 操作系統的兼容適配，並已發佈到 openKylin 2.0 軟件倉庫，感興趣的小夥伴可以下載體驗。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-09f68cf3fcaad8955597abd5839fa41d054.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">社區個人開發者孫聖博也分享了他與 openKylin 社區的結緣故事以及在社區的開源實踐之旅，孫聖博作為一名高中生，在加入社區後，發起成立了 Cutefish SIG 等，完成了 Cutefish 等桌面環境及相關組件與 openKylin 的兼容適配。同時，還積極參與社區 RISC-V 生態共建，併成立了 FAQ SIG，負責收集各渠道開發者、愛好者等用戶反饋的問題，建立相關標準化流程推動問題解答或解決。孫聖博的發言引發陣陣掌聲，讓更多的開發者感受到了開源的魅力與活力。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-b66fe15ad20ef69fcfdceeb97f16025fe9d.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><em><span><strong><span style="color:#ffce73">05</span></strong></span></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#57b8f6">會議落幕致辭</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社區生態委員會主任李震寧在總結致辭中提到，過去一年，正是有了大家的共同努力，openKylin 才能取得今天的靚麗成績。在 openKylin 社區，各界夥伴都可以在開源、開放、協作的模式下，基於產業發展現狀、院校科研積累和開發者實踐經驗等，開放自由的交流想法與建議，並進行實踐、檢驗與完善。通過本次會議，不僅加深了社區與企業夥伴、社區與個人開發者之間的瞭解，也為 openKylin 的發展提供了新的思路和方向。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-55cfd98b21f0d69d4c5e8f11a5b09378305.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-863b3b1f00649033bd11bb0edd70ec04d76.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">展望未來，openKylin 社區也將持續把握髮展機遇，聚焦操作系統根技術，發揮社區平台支撐作用，聚合產、學、研、用及國內外開源力量，加速系統創新迭代，共同推動 openKylin 開源操作系統根社區構建，為推動形成眾研眾用眾創的開源軟件生態添磚加瓦，逐步走向同國際頂尖開源社區比肩的星辰大海。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 06:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272582</guid>
            <link>https://www.oschina.net/news/272582</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GTA 5 完整源代碼被公開泄露]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在國外正值聖誕假期之際，一個匿名用戶公開<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cyberkendra.com%2F2023%2F12%2Fgta-5-source-code-leaked-on-christmas.html" target="_blank">泄露</a>了 Rockstar 旗下知名遊戲《俠盜獵車手 5》（GTA 5）的所有源代碼。</span></p><p><span style="color:#000000">泄露的文件大約有 4GB，其中包含與遊戲 RAGE 引擎相關的關鍵文件、概念圖、遊戲聖安地列斯背景的早期地圖以及其他敏感資料。此外，還包括未發佈的《GTA 6》中的一些 Python 腳本文件和<span style="background-color:#ffffff">一個 Bully 2 文件</span>。</span></p><p><img height="287" src="https://oscimg.oschina.net/oscnet/up-cea5c5b3990f3c01ce94728fdbbf1d3c3ad.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">早在 2022 年 9 月，就有一匿名黑客聲稱獲得了《GTA 5》和《GTA 6》的源代碼，並威脅要公開這些數據企圖敲詐 Rockstar 遊戲公司。此後，Rockstar 官方也發佈聲明<span style="background-color:#ffffff">確認遭遇網絡入侵，證實了</span>大規模的《GTA 6》泄漏。</span></p><p><span style="color:#000000">時至今日，《GTA 5》的完整源代碼似乎又被泄露，並在幾個文件共享網站和專門討論《GTA》修改和黑客問題的論壇上公開。目前尚未清楚相關的泄露事件是如何發生的。但有人<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FGTAFocal%2Fstatus%2F1739051532149039111" target="_blank">推測</a>，早自 2022 年泄露事件以來，遊戲完整的源代碼就一直在被交易。</span></p><p><span style="color:#000000"><img alt="" height="500" src="https://oscimg.oschina.net/oscnet/up-9cc40522a4d848442c48a30ddc5b5226046.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">Rockstar Games 及其母公司 Take-Two Interactive 尚未就最新泄露事件發表官方聲明。</span></span></p><p><strong><span style="color:#000000"><span style="background-color:#ffffff">相關閲讀：</span></span></strong></p><ul><li><a href="https://www.oschina.net/news/210946/gta-6-leak" target="_blank">官方確認，GTA 6 源代碼泄漏</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 06:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272581/gta-5-source-code-leaked-on-christmas</guid>
            <link>https://www.oschina.net/news/272581/gta-5-source-code-leaked-on-christmas</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[周熱點 | 知名開源項目作者「在線求打錢」；No Star, No Fix；支持蘋果芯片的 Fedora 發行版推出......]]>
            </title>
            <description>
                <![CDATA[回顧一週熱門資訊。2023.12.18-2023.12.24]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 06:27:07 GMT</pubDate>
            <guid isPermaLink="false">https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649094075&#38;idx=1&#38;sn=00275798424976ecbd47ae4f4f525775&#38;chksm=880c4ca8bf7bc5be2e47003634d2fd46e6617414e6d8b2a9906ba9429ad095d432067a48c04d&#38;token=288730784&#38;lang=zh_CN#rd</guid>
            <link>https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649094075&#38;idx=1&#38;sn=00275798424976ecbd47ae4f4f525775&#38;chksm=880c4ca8bf7bc5be2e47003634d2fd46e6617414e6d8b2a9906ba9429ad095d432067a48c04d&#38;token=288730784&#38;lang=zh_CN#rd</link>
        </item>
        <item>
            <title>
                <![CDATA[生成式 AI 的下一階段將走向何方？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><strong>編者按：</strong> 最近，隨着&nbsp;ChatGPT&nbsp;的出現，很多人認為人工智能領域進入了大探索時代。然而這僅僅只是生成式 AI 發展的第一幕。</p><p>我們今天要給大家帶來的這篇文章認為，生成式 AI 已經進入第二幕，即整合時代，不同系統和企業之間將出現廣泛合作，以定製解決方案將 AI 能力深度嵌入各行各業。</p><p>文章詳細闡述了第二幕的幾個特徵：(1) 科技巨頭紛紛與 AI 初創公司建立合作伙伴關係；(2) 將生成式 AI 無縫嵌入已有產品成為主流；(3) 內容公司與模型公司達成授權協議；(4)AI 與設備、系統集成；(5) 初創公司通過 API 為大公司提供服務。</p><p>生成式 AI 正在重塑軟件世界，小公司的長期生存面臨挑戰，開源仍然至關重要。未來第三幕可能是物聯網與 AI、合成生物學的深度融合。我們有理由相信未來會出現更多驚喜。</p></blockquote><p><strong>作者 | Paul DelSignore</strong></p><p><strong>🚢🚢🚢歡迎小夥伴們加入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaihai-idp.yuque.com%2Fmwvla8%2Fdoc%3F%23" target="_blank">AI 技術軟件及技術交流羣</a>，追蹤前沿熱點，共探技術難題~</strong></p><p>生成式人工智能的歷史可追溯至 20&nbsp;世紀 60&nbsp;年代，但直到 2022 年，才迎來生成式人工智能大覺醒之年。</p><h1><strong>01 第一幕：探索</strong></h1><p>我還記得 2022 年 4 月我第一次看到 DALLE-2 時的情景，那就像是一種頓悟，我知道有大事將要發生了。我開始使用 GPT-3 和當時的一些人工智寫作工具。</p><p>然後在 8 月，開源圖像大模型 Stable Diffusion 發佈，突然間，圖像工具的數量呈現爆炸式增長。</p><p>到 2022 年 12 月，一款利用 Stable Diffusion 的手機拍照應用 Lensa AI 在短短一個月內就實現了全球近 2000&nbsp;萬次的下載記錄。</p><p>2022 年，ChatGPT 的公開發佈讓人工智能推向了新高潮，這標誌着該技術突破性地進入了主流市場。ChatGPT 在短短几個月內用戶數量就達到了 1 億。</p><p>ChatGPT 的成功讓其他行業開始思索大模型可能帶來的顛覆性變化，成為人工智能創新的催化劑。突然間，每個人都在嘗試使用生成式人工智能，幾乎每天都有新工具發佈。</p><p>舉幾個例子，比如大語言模型（GPT-4、PaLM2、Claude、LLaMA 等）、圖像、視頻和代碼模型的創新，以及 AutoGPT 和 AI 智能體的新實驗範例等等。</p><p>關於 ChatGPT 發佈以來的大量創新，我也許可以寫一本書，但如果要我用一個詞來概括，那就是：<strong>探索</strong></p><h1><strong>02 第二幕：整合</strong></h1><p>最近，紅杉（Sequoia）的一篇文章[1]，伊桑-莫利克（Ethan Mollick）的一篇文章[2]等都表明，變革之風正盛，我們正處於 Gen AI 故事的第二幕。</p><p>我也注意到了這種變化。人工智能正在走向成熟，而且正在產生一種捆綁效應（bundling effect）。我想用以下標題來定義第二幕：<strong>整合</strong></p><p>將其稱為新階段並不意味着「探索」階段已經結束，遠非如此。在未來幾年裏，我們將繼續看到令人驚歎的創新水平。</p><p><strong>Gen AI 的時間軸並不是一個階段結束，另一個新的階段接着開始，而是一個嵌套的階段。我們在接近整合時代的同時，仍將迎來創新時代。</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-4504e82e3d41c557191aa6309817670fdd5.png" alt="" referrerpolicy="no-referrer"></p><h1><strong>03 整合時代</strong></h1><p><strong>整合時代始於生成式 AI 人工智能軍備競賽元年。</strong></p><p>大型科技公司紛紛建立合作伙伴關係，以確保自己在競爭中佔據主導地位和主要優勢。這其中包括微軟&nbsp;+ OpenAI、亞馬遜&nbsp;+ Anthropic 和谷歌&nbsp;+ Nvidia。</p><p>由於 Gen AI 是一種功能、一種超級能力，而不是一種特定的應用或軟件，因此現有的科技公司都擁有一個完美的戰略來確保自己的立足點，即：<strong>將生成式 AI 融入一切。</strong></p><p>這個戰略很簡單，將人工智能的精華嵌入消費者和企業已經在使用的工具和產品中。因此，如果你想在人工智能的幫助下寫作，你不需要一個新的人工智能寫作應用程序，因為它已經包含在微軟的 Word 工具中了。</p><p>對於微軟來説，他們的計劃是將人工智能嵌入到一切中，包括他們的 365 Office 工具套件、必應搜索引擎、基於網絡的應用程序和 Xbox 遊戲機，以及最重要的，他們的 Windows 操作系統。</p><p>對於谷歌來説，他們的計劃是相同的。谷歌搜索將由他們日益強大的 LLM（如 PaLM 和 Genesis）提供支持，谷歌 Workspace 將服務於商業用途，AI 將賦能包括電子商務、導航和圖像捕捉在內的每個移動應用。</p><p>在圖像和圖形方面，儘管 Midjourney 和 Stable Diffusion 在探索時代佔據了主導地位，但 Adobe 現已通過 Firefly v2 趕上，並在其所有應用程序和創意工具套件中整合了一系列令人印象深刻的生成式 AI 功能。</p><p>亞馬遜作為雲計算提供商，現在也是 LLM 提供商，通過 Bedrock 提供模型即服務（model-as-a-service，MaaS）。</p><p>Meta 將繼續構建新的沉浸式技術，並通過 AI 增強其社交應用體驗，而我們甚至還不清楚蘋果一旦加入這場遊戲會做些什麼。AppleGPT 很可能會成為 AI 個人助理，超越包括 ChatGPT 在內的所有其他 chatbot。為什麼呢？因為它將被整合進蘋果生態系統——iPhone、電腦和其他設備中。</p><p>整合時代意味着生成式 AI 進入軟件領域，就像為家庭供電一樣。它將成為系統的一部分，成為我們已有的用戶體驗的一部分。</p><h1><strong>04 初創公司面臨的挑戰</strong></h1><p>雖然我們將繼續看到初創公司在 Discord 頻道、Github repos 和社交媒體上的驚人創新，但小公司與 Gen AI 玩長期遊戲將變得越來越困難。</p><p>至少，他們需要「繳稅「，因為大型科技公司擁有 LLM，他們擁有鐵路和電網。</p><p>毫無疑問，這就是為什麼大多數大型科技公司（Meta 除外）反對開源 LLM 的原因。不要相信關於安全問題的謊言。</p><p>這就是為什麼開源必須繼續成為生成式 AI 的一個充滿活力的組成部分。創新需要公司在不受專有 LLM 公司限制的情況下進行實驗和創新。</p><h1><strong>05 合作推動定製化</strong></h1><p>隨着生成式 AI 進入下一個階段，系統和這些公司之間的合作將增加，以便為工業和商業的各種應用提供整合 AI 能力的定製解決方案。</p><p>那看起來會是什麼樣的？</p><ul><li>隨着多模態體驗的增加，我們可能會看到專注於某一細分市場的公司與其他公司合作。最近的一個例子是 Canva + Runway。</li><li>像 Anthropic 或 OpenAI 這樣的 LLM 公司將尋找高質量的內容進行訓練。內容公司將會對模型公司進行授權或合作。最近的一個例子是 AP 將內容授權給 OpenAI[3]。</li><li>隨着設備開始變得智能並融入 AI，預計 LLM 將開始與設備連接。最近的一個例子是使用 LLM 進行視覺引導的自動駕駛[4]。</li><li>像 Pika Labs 或 Midjourney 這樣的公司將通過 API 為大公司提供服務集成。最近的一個例子是 Google 將 Adobe 的 Firefly 用於圖像生成。</li></ul><h1><strong>06 未來行動展望</strong></h1><p>如果讓我預測&nbsp;"第三幕&nbsp;"會是什麼樣子，我會説，我們將看到人工智能在物理世界中越來越多地出現。</p><p><strong>集成時代主要是人工智能與軟件&nbsp;(AI+Software)&nbsp;的融合，而生物空間時代將是人工智能與物理和生物的融合 (AI + Physical + Biology)。</strong></p><p>第三幕將是由人工智能物聯網（AIoT）和不斷湧現的合成生物學驅動的的物聯網融合時代。我們還沒有一個合適的詞來形容它，所以我稱之為&nbsp;"生物空間時代"。我相信會有更好的詞出現。</p><p><img src="https://oscimg.oschina.net/oscnet/up-9dd15fd57035e012224407de4ba25a9f7a5.png" alt="" referrerpolicy="no-referrer"></p><h1><strong>07 最後的思考</strong></h1><p><strong>生成式人工智能已進入第二幕</strong>，其特點是不同系統和企業協作的融合，協同為各行各業的各種應用提供量身定製的人工智能能力，並將其深度融入到到應用解決方案中。</p><p>作為一個謹慎的技術樂觀主義者，我深知進步將伴隨着許多挑戰。隨着生成式人工智能進一步深入我們的工具和生活，圍繞人工智能倫理、數據隱私和安全的合理擔憂也將變得突出。</p><p><strong>Thanks for reading!</strong></p><p><strong>🚢🚢🚢歡迎小夥伴們加入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaihai-idp.yuque.com%2Fmwvla8%2Fdoc%3F%23" target="_blank">AI 技術軟件及技術交流羣</a>，追蹤前沿熱點，共探技術難題~</strong></p><p><strong>END</strong></p><p><strong>參考資料</strong></p><p>[1]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sequoiacap.com%2Farticle%2Fgenerative-ai-act-two%2F" target="_blank">https://www.sequoiacap.com/article/generative-ai-act-two/</a></p><p>[2]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tandfonline.com%2Fdoi%2Ffull%2F10.1080%2F08956308.2023.2213102" target="_blank">https://www.tandfonline.com/doi/full/10.1080/08956308.2023.2213102</a></p><p>[3]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapnews.com%2Farticle%2Fopenai-chatgpt-associated-press-ap-f86f84c5bcc2f3b98074b38521f5f75a" target="_blank">https://apnews.com/article/openai-chatgpt-associated-press-ap-f86f84c5bcc2f3b98074b38521f5f75a</a></p><p>[4]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D37710865" target="_blank">https://news.ycombinator.com/item?id=37710865</a></p><p><strong>本文經原作者授權，由 Baihai IDP 編譯。如需轉載譯文，請聯繫獲取授權。</strong></p><p><strong>原文鏈接：</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2Fthe-generator%2Fthe-next-phase-of-generative-ai-984b109915ed" target="_blank">https://medium.com/the-generator/the-next-phase-of-generative-ai-984b109915ed</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 05:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/IDP/blog/10388555</guid>
            <link>https://my.oschina.net/IDP/blog/10388555</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 擬以 1000 億美元估值開啓新一輪融資]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">彭博社援引知情人士<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2023-12-22%2Fopenai-in-talks-to-raise-new-funding-at-100-billion-valuation" target="_blank">消息稱</a>，OpenAI&nbsp;正在以 1000 億美元或以上的估值籌集新一輪融資，相關談判尚處於早期階段。這筆交易將鞏固這家 ChatGPT 製造商作為全球最有價值初創公司之一的地位。</span></p><p><span style="color:#000000">可能參與本輪融資的投資者的相關信息並未有過多透露，且本輪融資的條款、估值和時間安排等細節也尚未最終確定，仍可能發生變化。根據 </span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cbinsights.com%2Fresearch-unicorn-companies" target="_blank">CBInsights 的數據</a><span style="color:#000000">，如果本輪融資按計劃進行，那麼 OpenAI 將成為美國價值第二高的初創企業，僅次於 Elon Musk 的太空探索技術公司（SpaceX）。</span></p><p><span style="color:#000000">OpenAI 對此拒絕置評。</span></p><p><img height="240" src="https://oscimg.oschina.net/oscnet/up-933407733ad072a31a3b04922263ecc0b34.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">知情人士稱，OpenAI 還與阿布扎比 G42 進行了商討，為一家新的芯片合資企業募集資金。其中一位知情人士稱，OpenAI 已經討論過從 G42 籌集 80 億至 100 億美元的資金。目前尚不清楚芯片合資企業和公司更廣泛的融資計劃之間是否有關聯。</span></p><p><span style="color:#000000">事實上，OpenAI 首席執行官 Sam Altman 一直在為代號為 Tigris 的芯片製造項目尋求資金。據彭博社上個月報道，其目標是生產能夠與英偉達半導體競爭的半導體。</span></p><p><span style="color:#000000">10 月份，G42 曾宣佈與 OpenAI 合作，"向阿聯酋和地區市場提供尖端的人工智能解決方案"，但沒有公佈具體的財務細節。G42 公司成立於 2018 年，由阿聯酋國家安全顧問兼阿布扎比投資局主席 Sheikh Tahnoon bin Zayed Al Nahyan 領導。</span></p><p><strong><span style="color:#000000">相關閲讀：</span></strong></p><ul><li><a href="https://www.oschina.net/news/259735/openai-seeks-new-valuation-90-billion" target="news">OpenAI 尋求出售現有股票，估值高達 900 億美元</a></li><li><a href="https://www.oschina.net/news/269384/openai-buy-ai-chips-startup-sam-altma" target="_blank">OpenAI 承諾從 Altman 投資的初創公司購買 AI 芯片</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 03:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272549/openai-valuation-100-billion-funding-round</guid>
            <link>https://www.oschina.net/news/272549/openai-valuation-100-billion-funding-round</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[蘋果發佈開源多模態大語言模型 Ferret]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>科技媒體 VentureBeat&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fventurebeat.com%2Fai%2Fapple-quietly-released-an-open-source-multimodal-llm-in-october%2F">報道稱</a></u>，蘋果公司在 2023 年 10 月低調發布了一款名為 Ferret 的開源多模態大語言模型，這是蘋果與哥倫比亞大學研究人員的合作成果。當時發佈的內容包括了<strong>代碼和權重</strong>（僅限研究用途，不包含商業許可），但並未引起太多關注。</p><p>隨着近期<a href="https://www.oschina.net/news/270317/mixtral-8-7b-32kseqlen">Mistral 的開源 MoE 模型</a>成為焦點，以及谷歌的 Gemini 模型即將在 Pixel Pro 上亮相，未來還將進入 Android 系統，越來越多人開始關注<strong>本地 LLMs 為小型設備提供支持</strong>的潛力。</p><p>近日，專注於醫療領域開源 AI 的歐洲非營利組織負責人 Bart de Witte 在 X 平台上分享了他的驚訝：「我之前竟然沒發現這個。」 他表示，「蘋果在 10 月份加入了開源 AI 圈子。<strong>Ferret 的推出展現了蘋果對影響深遠的 AI 研究的承諾</strong>，鞏固了它在多模態 AI 領域的領先地位…… 另外，我很期待有一天 Local Large Language Models (LLLMs) 能作為重新設計的 iOS 的一部分，在我的 iPhone 上運行。」</p><p>蘋果公司 AI/ML 研究科學家 Zhe Gan 在 10 月份發佈的一條<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fzhegan4%2Fstatus%2F1712345137983201716" target="_blank">推文</a></u>中解釋了 Ferret 的用途 —— 一個可以在圖像中 "以任何粒度對任何地方的任何東西進行參照和定位" 的系統。它還可以通過使用圖像中任何形狀的區域來做到這一點。</p><p>簡單地説，該模型可以分析圖像上繪製的區域，確定其中對用戶查詢有用的元素，並將其識別出來，在檢測到的元素周圍繪製一個邊界框。然後，它就可以將識別出的元素用作查詢的一部分，並以典型的方式作出響應。</p><p>例如，高亮顯示圖像中的動物圖片並詢問 LLM 這是什麼動物，LLM 可以確定該動物的種類，並確定用戶所指的是動物羣中的某隻動物。然後，它還可以利用圖像中檢測到的其他項目的上下文，提供進一步的回覆。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a440d5b0e01c06148ff9a53a44893647400.png" referrerpolicy="no-referrer"></p><blockquote><p><strong>GitHub</strong>：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.co%2FX29q1Kazew" target="_blank">https://github.com/apple/ml-ferret</a></u><br><strong>論文</strong>：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.co%2FOdhGoyK33r" target="_blank">https://arxiv.org/abs/2310.07704</a></u></p></blockquote><p>Ferret 擁有 (7B, 13B) 兩個版本，為了增強 Ferret 模型的能力蘋果特別收集了一個 GRIT 數據集。它包含了 1.1M 個樣本，這些樣本包含了豐富的層次空間知識。</p><p>儘管蘋果以往以其產品和技術的封閉性著稱，但現在它通過發佈開源 LLM 模型，正逐漸改變這一形象，展現出其在 AI 領域的活躍參與和創新精神。這不僅對蘋果自身，也對整個 AI 領域來説，都是一個值得關注的重要發展方向。</p><p>VentureBeat 撰稿人 Ben Dickson 寫道：「2023 年最讓你意外的人工智能進展是什麼？對我來説，是蘋果發佈了開源 LLMs（雖然是非商業許可）。」他指出，蘋果一貫以來是封閉系統、圍牆花園開發、保密、嚴格的保密協議、發佈極少細節、併為其產品申請每一項小的專利的代表。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272543/apple-quietly-released-an-open-source-multimodal-llm-in-october</guid>
            <link>https://www.oschina.net/news/272543/apple-quietly-released-an-open-source-multimodal-llm-in-october</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[De4py —— Python 逆向工程工具包]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>De4py 是一款高級 python 反混淆器，擁有漂亮的用戶界面和一系列高級功能，可幫助惡意軟件分析師和反向工程師對 python 文件等進行反混淆。</p><table border="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:1px solid var(--borderColor-default, var(--color-border-default)); box-sizing:border-box; color:#1f2328; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,&quot;Noto Sans&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; max-width:100%; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:max-content; word-spacing:0px"><tbody><tr><th>特徵</th><th>功能</th></tr></tbody><tbody><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>反混淆</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>De4py 支持一些流行的混淆器，例如：Jawbreaker、BlankOBF、PlusOBF、Wodx、Hyperion、pyobfuscate.com 混淆器</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>Pycode 執行</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>在進程內執行 python 代碼，這在許多情況下很有用，可以使程序執行您想讓它執行的操作，例如，如果程序具有許可並且它調用真正的「main」只有購買了程序才可以直接調用。</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>字符串轉儲</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>在 python 進程中轉儲字符串並將其保存為文件，這對於從內存中提取數據（例如 webhook）非常有用。</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>刪除退出功能</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>刪除退出函數，如果 python 程序在找到調試器或虛擬機時嘗試退出，該函數將非常有用</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>獲取所有功能</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>獲取 python 進程內的所有函數，這在嘗試修改內存中的 python 函數時非常有用</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>Pyshell 圖形用戶界面</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>自定義 GUI，可以輕鬆在所需進程內執行 python 代碼。</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>GUI 和控制枱支持</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>De4py 同時支持控制枱和 GUI</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>文件分析器</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>一個具有許多功能的分析器，例如檢測 python 程序是否已打包，並嘗試在使用 pyinstaller 時解包它，例如，它還有一個功能，可以顯示所有字符串或可疑字符串（可疑字符串，例如：IP、網站和「token」「discord」「leveldb」字符串和文件中的其他可疑字符串）並在一個漂亮的輸出窗口中顯示它們。</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>行為監控</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>De4py 可以監控 python 進程，查看它們是否打開了任何文件句柄、打開了進程、寫入/讀取了其他進程的內存，還可以監控該進程是否終止了其他進程，此外還可以監控套接字（包括正在傳輸的數據大小）發送和正在發送/接收的 IP）。</span></td></tr></tbody></table><p><img height="281" src="https://static.oschina.net/uploads/space/2023/1218/162454_FC7o_4252687.png" width="500" referrerpolicy="no-referrer"></p><p><img height="291" src="https://static.oschina.net/uploads/space/2023/1218/162502_5f0Q_4252687.png" width="500" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/de4py</guid>
            <link>https://www.oschina.net/p/de4py</link>
        </item>
        <item>
            <title>
                <![CDATA[聯想毛世傑：行業元宇宙願景需要分階段實現]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span>「滿足人和機器的協同效率，為現實世界提供服務，這是元宇宙的願景」，1</span></span><span><span>2</span></span><span><span>月 2</span></span><span><span>2</span></span><span><span>日，聯想集團副總裁、聯想研究院上海分院院長毛世傑在網易未來大會上表示，「而這個願景需要分階段實現。」</span></span></span></span></span></p><p><img height="333" src="https://static.oschina.net/uploads/space/2023/1225/101601_t3iM_4252687.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span>「之所以我們需要元宇宙，需要數字空間，是因為在虛擬空間裏可以實現真實世界難以實現，或者是實現成本很高的事情。」毛世傑強調，但是在構建虛擬空間以後，最終的目的仍然是要回到現實世界，一步一步賦能現實世界變得更加美好和高效。</span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span>以工業元宇宙為例，毛世傑指出，第一步是要構建元宇宙產線。在元宇宙產線中，工業產線疊加虛擬世界的信息與感知能力，可以提升人與機器人的決策能力和協作效率；</span></span><span><span>在人、機器、數據等關鍵要素融合的產線數字孿生體和工業元宇宙虛擬裝配空間中，非接觸式檢測手段可以實現三維自動化、智能化質檢；工藝仿真模型庫可以引導規範產線操作，提供專家遠程協同指導等。</span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span>第二步是要構建元宇宙工廠。在元宇宙工廠中，通過低時延、高保真、智能決策的工廠級元宇宙平台可以實現多類型工業軟件集成、沉浸交互設備實現智能巡檢、遠程協作等應用，工廠生產運營各環節信息可以全面感知和實時反饋。</span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span>第三步是打造元宇宙園區。在元宇宙園區中，虛實結合的新型園區建設模式和運營模式可以提升工業園區產業規劃和佈局能力，優化園區空間佈局、設施配套、資源調配等協同服務能力和運營效率。此外，還可以建立基於工業元宇宙的科技創新和招商引資平台，創新園區服務模式。</span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span>「未來，聯想將把持續打造成熟的工業元宇宙，開拓虛實互促的製造業增長新模式作為長期目標。」毛世傑強調。</span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272529</guid>
            <link>https://www.oschina.net/news/272529</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 支持私有部署的雲端雙鏈筆記軟件 Blossom]]>
            </title>
            <description>
                <![CDATA[<p align="center"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/blossom_name.png" height="auto" referrerpolicy="no-referrer"></p><p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-demo%2F%23%2Fsettingindex">💻️ 試用</a> | <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Findex.html">📃 文檔</a> | <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Fabout%2Fdownload.html">📥 下載</a></p><p>Blossom 是一個支持<strong>私有部署</strong>的<strong>雲端雙鏈筆記軟件</strong>，你可以將你的筆記，圖片，個人計劃安排保存在自己的服務器中，並在任意設備之間實時同步。同時還是一個動態博客。</p><p>支持 Windows，Mac，網頁客戶端，網頁移動端。</p><p align="center"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/device.png" referrerpolicy="no-referrer"></p><h1><a id="️-在線試用" class="anchor" href="https://gitee.com/blossom-editor/blossom#%EF%B8%8F-%E5%9C%A8%E7%BA%BF%E8%AF%95%E7%94%A8"></a>🛎️ 在線試用</h1><p>你可以通過<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-demo%2F%23%2Fsettingindex">在線地址</a>或<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Fabout%2Fdownload.html">下載客戶端</a>試用，詳細信息請查看<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Ftryuse.html">試用</a>文檔。</p><p><br><br></p><h1><a id="-blossom-的特點" class="anchor" href="https://gitee.com/blossom-editor/blossom#-blossom-%E7%9A%84%E7%89%B9%E7%82%B9"></a>👏 Blossom 的特點:</h1><h3><a id="完善的文件關係" class="anchor" href="https://gitee.com/blossom-editor/blossom#%E5%AE%8C%E5%96%84%E7%9A%84%E6%96%87%E4%BB%B6%E5%85%B3%E7%B3%BB"></a>完善的文件關係</h3><p>Blossom 不依賴任何三方存儲和圖牀，其本身就是一個圖牀，並且提供了完善的圖片管理，訪勿刪，以及圖片和文章的雙向關係綁定。</p><p>基於 Markdown 編寫，沒有破壞性的語法拓展，在這裏編寫的內容在任何 Markdown 軟件中都能正常顯示。</p><h3><a id="快速遷移" class="anchor" href="https://gitee.com/blossom-editor/blossom#%E5%BF%AB%E9%80%9F%E8%BF%81%E7%A7%BB"></a>快速遷移</h3><p>所有圖片和文章都支持一鍵備份和導出，可以在幾分鐘內輕鬆遷出。導出的文件可以無縫使用 VS Code 或 Obsidian 等本地軟件正常打開。</p><h3><a id="豐富的附加功能" class="anchor" href="https://gitee.com/blossom-editor/blossom#%E4%B8%B0%E5%AF%8C%E7%9A%84%E9%99%84%E5%8A%A0%E5%8A%9F%E8%83%BD"></a>豐富的附加功能</h3><ul><li>📅 <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Fplan.html">計劃安排</a></li><li>🏷️ <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Ftodo.html">待辦事項</a></li><li>🎫 <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Fnote.html">快捷便籤</a></li><li>🍅 <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Farticle.html%23tomato">番茄鍾</a></li><li>🧰 多用戶、字數統計、字數折線圖、編輯熱力圖、天氣預報、主題設置...</li></ul><p>Blossom 擁有豐富的功能，不僅僅是知識管理，更是一個可以供多人同時使用的全面實用性工具。</p><p><br><br></p><h1><a id="-docker-compose-一鍵部署" class="anchor" href="https://gitee.com/blossom-editor/blossom#-docker-compose-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2"></a>🚀 Docker Compose 一鍵部署</h1><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">docker compose -f docker/compose/blossom-mysql8.yaml up -d</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><br><br></p><h1><a id="-加入羣聊" class="anchor" href="https://gitee.com/blossom-editor/blossom#-%E5%8A%A0%E5%85%A5%E7%BE%A4%E8%81%8A"></a>🥳 加入羣聊</h1><p>加入羣聊進行溝通，反饋問題。</p><ul><li>1 羣：522359970 (即將滿)</li><li>2 羣：921906098</li></ul><p align="center"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/qq1.png" height="400" referrerpolicy="no-referrer"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/qq2.png" height="400" referrerpolicy="no-referrer"></p><h1><a id="-贊助-blossom" class="anchor" href="https://gitee.com/blossom-editor/blossom#-%E8%B5%9E%E5%8A%A9-blossom"></a>🤝 贊助 Blossom</h1><p><strong>Blossom 不會向你收取任何的費用，你可以永久免費使用！</strong></p><p>但開源軟件的收益目前很難維持生活，並且項目設計，開發，測試需要大量的時間和精力，如果你願意贊助我的工作，將非常有助於該項目的成長，並激勵我長期持續下去！</p><p><strong>感謝每一個位贊助者對 Blossom 的大力支持，Blossom 因為你們變得更好。</strong></p><table><thead><tr><th align="left">贊助者 / Sponsors</th><th align="left">贊助者 / Sponsors</th><th align="left">贊助者 / Sponsors</th><th align="left">贊助者 / Sponsors</th></tr></thead><tbody><tr><td align="left">i just walked away🏃</td><td align="left">KalyanYang</td><td align="left">dsx</td><td align="left">熊貓不是貓</td></tr><tr><td align="left">白駒過隙</td><td align="left">支付寶用戶-*發</td><td align="left">支付寶用戶-*琛</td><td align="left">支付寶匿名用戶</td></tr><tr><td align="left">疾風劍豪索隆</td><td align="left">放羊的星星</td><td align="left">立冬</td><td align="left">給你一支煙</td></tr><tr><td align="left">林詩</td><td align="left">Criesgod</td><td align="left">支付寶用戶-*偉</td><td align="left">黑醋栗和丁香</td></tr><tr><td align="left">Mr_tg000</td><td align="left">Lucky</td><td align="left">egil</td><td align="left">Glimpse</td></tr></tbody></table><hr><h4 align="center"><a id="你可以通過以下幾種方式贊助-blossom" class="anchor" href="https://gitee.com/blossom-editor/blossom#%E4%BD%A0%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E4%BB%A5%E4%B8%8B%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F%E8%B5%9E%E5%8A%A9-blossom"></a>你可以通過以下幾種方式贊助 Blossom。</h4><p align="center"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/sponsors/wechat.png" height="400" referrerpolicy="no-referrer"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/sponsors/ali.png" height="400" referrerpolicy="no-referrer"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/sponsors/aifadian.png" height="400" referrerpolicy="no-referrer"></p><br><h1><a id="更多圖片" class="anchor" href="https://gitee.com/blossom-editor/blossom#%E6%9B%B4%E5%A4%9A%E5%9B%BE%E7%89%87"></a>更多圖片</h1><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/article.png" alt="&quot;編輯器&quot;" referrerpolicy="no-referrer"></p><p align="center">編輯器</p><hr><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/article_reference.png" alt="&quot;雙鏈筆記&quot;" referrerpolicy="no-referrer"></p><p align="center">雙鏈筆記</p><hr><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/picture.png" alt="&quot;照片牆&quot;" referrerpolicy="no-referrer"></p><p align="center">照片牆</p><hr><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/todo.png" alt="&quot;日曆計劃&quot;" referrerpolicy="no-referrer"></p><p align="center">待辦事項清單</p><hr><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/plan.png" alt="&quot;日曆計劃&quot;" referrerpolicy="no-referrer"></p><p align="center">日曆計劃</p><hr><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/note.png" alt="&quot;便籤管理&quot;" referrerpolicy="no-referrer"></p><p align="center">便籤管理</p><hr><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/blog_home_pc.png" alt="&quot;博客&quot;" referrerpolicy="no-referrer"></p><p align="center">博客</p><p align="center"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/blog_home_m.png" height="600" referrerpolicy="no-referrer"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/blog_article.png" height="600" referrerpolicy="no-referrer"></p><p align="center">博客移動端</p>]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/blossom-editor/blossom</guid>
            <link>https://gitee.com/blossom-editor/blossom</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 前端 JS 安全對抗原理與實踐]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="letter-spacing: 0.578px;text-wrap: wrap;font-size: 15px;line-height: 1.6;"><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;"><section style="padding-left: 8px;display: inline-block;width: 578px;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;align-self: flex-start;flex: 0 0 auto;"><section powered-by="xiumi.us" style="color: rgba(0, 0, 0, 0.5);font-size: 14px;text-align: justify;"><p>作者：vivo 互聯網安全團隊- Luo Bingsong</p></section></section></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="text-align: left;"><section style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;color: rgb(160, 160, 160);"><p>前端代碼都是公開的，為了提高代碼的破解成本、保證 JS 代碼裏的一些重要邏輯不被居心叵測的人利用，需要使用一些加密和混淆的防護手段。</p></section></section><section powered-by="xiumi.us" style="margin-bottom: -5px;text-align: right;line-height: 1;font-size: 5px;transform: translate3d(5px, 0px, 0px);"><section style="width: 0px;display: inline-block;vertical-align: top;border-bottom: 0.6em solid rgb(160, 160, 160);border-right: 0.6em solid rgb(160, 160, 160);border-top: 0.6em solid transparent !important;border-left: 0.6em solid transparent !important;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>一、概念解析</p></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">1.1 什麼是接口加密</span></p><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p>如今這個時代，數據已經變得越來越重要，網頁和 APP 是主流的數據載體，如果獲取數據的接口沒有設置任何的保護措施的話，數據就會被輕易地竊取或篡改。</p><p><br></p><p>除了數據泄露外，一些重要功能的接口如果沒有做好保護措施也會被惡意調用造成 DDoS、條件競爭等攻擊效果，比如如下幾個場景：</p><p><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014131" data-ratio="0.3388888888888889" data-s="300,640" src="https://oscimg.oschina.net/oscnet/7ad9ffb7-adfb-4eda-b6ab-870efe6f751f.png" data-type="png" data-w="1080" referrerpolicy="no-referrer"></p><p><br></p></section><section powered-by="xiumi.us"><p>一些營銷活動類的 Web 頁面，領紅包、領券、投票、抽獎等活動方式很常見。此類活動對於普通用戶來説應該是「拼手氣」，而對於非正常用戶來説，可以通過直接刷活動 API 接口的這種「作弊」方式來提升「手氣」。這樣對普通用戶來説就很不公平。</p><p><br></p><p>所以對重要接口都會採用加密驗籤的方式進行保護，而驗籤的加密邏輯大多數都通過 JS 代碼實現，所以保護 JS 代碼不被攻擊者竊取尤為重要。</p></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">1.2 為什麼要保護 JS 代碼</span><span style="background-color: rgb(239, 239, 239);letter-spacing: 0.034em;"></span></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: right;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: transparent;background-color: rgb(239, 239, 239);height: auto;"><section powered-by="xiumi.us" style="text-align: justify;"><ul class="list-paddingleft-1" style="width: 555.438px;"><li><p><span style="letter-spacing: 0.578px;">JavaScript 代碼運行於客戶端</span><br></p></li><li><p><span style="letter-spacing: 0.034em;">JavaScript 代碼是公開透明的</span><br></p></li></ul></section></section></section><p powered-by="xiumi.us"><span style="letter-spacing: 0.034em;">由於這兩個原因，致使 JavaScript 代碼是不安全的，任何人都可以讀、分析、複製、盜用甚至篡改。</span><br></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">1.3 應用場景</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">以下場景就通過特定的防護措施提高了攻擊成本：</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><ul class="list-paddingleft-1" style="width: 545.453px;"><li><p><span style="letter-spacing: 0.578px;">某些網站會在頁面中使用 JavaScript 對數據進行加密，以保護數據的安全性和隱私性，在爬取時需要通過解密 JavaScript 代碼才能獲取到數據。</span><br></p></li><li><p>某些網站的 URL 會有某個參數帶有一些看不太懂的長串加密參數，攻擊者要爬取的話就必須要知道這些參數是怎麼構造的，否則無法正確地訪問該 URL。</p></li><li><p><span style="letter-spacing: 0.034em;">翻看網站的 JavaScript 源代碼，可以發現很多壓縮了或者看不太懂的字符，比如 JavaScript 文件名被編碼，JavaScript 的文件內容都壓縮成幾行，JavaScript 變量也被修改成單個字符或者一些十六進制的字符，所以我們不能輕易地根據 JavaScript 找出某些接口的加密邏輯。</span></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">1.4 涉及的技術</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">這些場景都是網站為了保護數據不被輕易抓取採取的措施，運用的技術主要有：</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><ul class="list-paddingleft-1" style="width: 545.453px;"><li><p><span style="letter-spacing: 0.578px;">接口加密技術</span><br></p></li><li><p><span style="letter-spacing: 0.034em;">JavaScript 壓縮、混淆和加密技術</span><br></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>二、技術原理</p></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.1 接口加密技術</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">數據和功能一般是通過服務器提供的接口來實現，為了提升接口的安全性，客戶端會和服務端約定一種接口檢驗方式，通常是各種加密和編碼算法，如 Base64、Hex、MD5、AES、DES、RSA 等。</p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">常用的數據接口都會攜帶一個 sign 參數用於權限管控：</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><p>① 客戶端和服務端約定一種接口校驗邏輯，客戶端在每次請求服務端接口的時候附帶一個 sign 參數。<br>② sign 參數的邏輯自定義，可以由當前時間戳信息、設備 ID、日期、雙方約定好的祕鑰經過一些加密算法構造而成。<br>③ 客戶端根據約定的加密算法構造 sign，每次請求服務器的時候附帶上 sign 數。<br>④ 服務端根據約定的加密算法和請求的數據對 sign 進行校驗，如果檢驗通過，才返回數據，否則拒絕響應。</p></section></section></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014130" data-ratio="0.5841708542713567" data-s="300,640" src="https://oscimg.oschina.net/oscnet/31059832-3a24-49be-bc27-11ceb57f0134.png" data-type="png" data-w="796" referrerpolicy="no-referrer"></p><p><br></p><p>這就是一個比較簡單的接口參數加密的實現，如果有人想要調用這個接口的話，必須要破解 sign 的生成邏輯，否則是無法正常調用接口的。</p><p><br></p><p>當然上面的實現思路比較簡單，還可以增加一些時間戳信息和訪問頻次來增加時效性判斷，或使用非對稱加密提高加密的複雜程度。</p><p><br></p><p>實現接口參數加密需要用到一些加密算法，客戶端和服務器都有對應的 SDK 來實現這些加密算法，如 JavaScript 的 crypto-js、Python 的 hashlib、Crypto 等等。如果是網頁且客戶端的加密邏輯是用 JavaScript 來實現的話，其源代碼對用戶是完全可見的，所以我們需要用壓縮、混淆、加密的方式來對 JavaScript 代碼進行一定程度的保護。</p></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.2 什麼是壓縮</span></p><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p>去除 JavaScript 代碼中不必要的空格、換行等內容，使源碼都壓縮為幾行內容，降低代碼可讀性，同時可提高網站的加載速度。</p><p><br></p><p>如果僅僅是去除空格換行這樣的壓縮方式，幾乎沒有任何防護作用，這種壓縮方式僅僅是降低了代碼的直接可讀性，可以用 IDE、在線工具或 Chrome 輕鬆將 JavaScript 代碼變得易讀。</p><p><br></p><p>所以 JavaScript 壓縮技術只能在很小的程度上起到防護作用，想提高防護的效果還得依靠 JavaScript 混淆和加密技術。</p></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.3 什麼是混淆</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">使用變量混淆、字符串混淆、屬性加密、控制流平坦化、調試保護、多態變異等手段，使代碼變得難以閲讀和分析，同時不影響代碼原有功能，是一種理想且實用的 JS 保護方案。<span style="background-color: rgb(239, 239, 239);letter-spacing: 0.034em;"></span></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: right;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: transparent;background-color: rgb(239, 239, 239);height: auto;"><section powered-by="xiumi.us" style="text-align: justify;"><ul class="list-paddingleft-1" style="width: 555.438px;"><li><p><strong>變量混淆</strong><span style="letter-spacing: 0.578px;">：將變量名、方法名、常量名隨機變為無意義的亂碼字符串，降低代碼可讀性，如轉成單個字符或十六進制字符串。</span><br></p></li><li><p><strong>字符串混淆</strong>：將字符串陣列化集中放置，並進行 MD5 或 Base64 編碼存儲，使代碼中不出現明文字符串，可以避免使用全局搜索字符串的方式定位到入口點。</p></li><li><p><strong>屬性加密</strong><span style="letter-spacing: 0.578px;">：針對 JavaScript 對象的屬性進行加密轉化，隱藏代碼之間的調用關係，把 key-value 的映射關係混淆掉。</span></p></li><li><p><strong>控制流平坦化</strong><span style="letter-spacing: 0.578px;">：打亂函數原有代碼執行流程及函數調用關係，使代碼邏輯變得混亂無序。</span></p></li><li><p><strong>調試保護</strong><span style="letter-spacing: 0.578px;">：基於調試器特性，加入一些強制調試 debug 語句，無限 debug、定時 debug、debug 關鍵字，使其在調試模式下難以順利執行 JavaScript 代碼。</span></p></li><li><p><strong>多態變異</strong><span style="letter-spacing: 0.578px;">：JavaScript 代碼每次被調用時，代碼自身立刻自動發生變異，變化為與之前完全不同的代碼，避免代碼被動態分析調試。</span><span style="letter-spacing: 0.034em;"></span></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.4 什麼是加密</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">JavaScript 加密是對 JavaScript 混淆技術防護的進一步升級，基本思路是將一些核心邏輯用 C/C++語言來編寫，並通過 JavaScript 調用執行，從而起到二進制級別的防護作用，加密的方式主要有 Emscripten 和 WebAssembly 等。</p><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p><strong>1. Emscripten</strong></p><p>Emscripten 編譯器可以將 C/C++代碼編譯成 asm.js 的 JavaScript 變體，再由 JavaScript 調用執行，因此某些 JavaScript 的核心功能可以使用 C/C++語言實現。</p></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p><strong>2.WebAssembly</strong></p><p>WebAssembly 也能將 C/C++代碼轉成 JavaScript 引擎可以運行的代碼，但轉出來的代碼是二進制字節碼，而 asm.js 是文本，因此運行速度更快、體積更小，得到的字節碼具有和 JavaScript 相同的功能，在語法上完全脫離 JavaScript，同時具有沙盒化的執行環境，利用 WebAssembly 技術，可以將一些核心的功能用 C/C++語言實現，形成瀏覽器字節碼的形式，然後在 JavaScript 中通過類似如下的方式調用：</p></section><p powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014132" data-ratio="0.31203703703703706" data-s="300,640" src="https://oscimg.oschina.net/oscnet/6fc3ee11-4879-4a3a-a9fd-1ae1cf3e94de.png" data-type="png" data-w="1080" referrerpolicy="no-referrer"></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">這種加密方式更加安全，想要逆向或破解需要逆向 WebAssembly，難度極大。</p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.5 工具介紹</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>2.5.1 壓縮混淆工具</strong></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><ul class="list-paddingleft-1" style="width: 545.453px;"><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmishoo%2FUglifyJS" textvalue="Uglifyjs" linktype="text" imgurl="" tab="outerlink" data-linktype="2" style="letter-spacing: 0.578px;"><strong>Uglifyjs</strong></a><span style="letter-spacing: 0.578px;">（開源）：</span><br></p><p>用 NodeJS 編寫的 JavaScript 壓縮工具，是目前最流行的 JS 壓縮工具，JQuery 就是使用此工具壓縮，UglifyJS 壓縮率高，壓縮選項多，並且具有優化代碼，格式化代碼功能。</p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jshaman.com%2F" textvalue="jshsman" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><strong>jshaman</strong></a>：</p><p><span style="letter-spacing: 0.034em;">jshaman 是一個商業級</span><span style="letter-spacing: 0.034em;">工具，看了很多社區的評論，這個目前是最好的，可以在線免費使用，也可以購買商業版。</span></p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.jsfuck.com%2F" textvalue="jsfuck" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><strong>jsfuck</strong></a>：</p><p>開源的 js 混淆工具，原理比較簡單，通過特定的字符串加上下標定位字符，再由這些字符替換源代碼，從而實現混淆。</p></li><li><p><strong><span style="letter-spacing: 0.034em;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fyui.github.io%2Fyuicompressor%2F" textvalue="YUI Compressor" linktype="text" imgurl="" tab="outerlink" data-linktype="2">YUI Compressor</a>：</span></strong></p><p><span style="letter-spacing: 0.034em;">業界巨頭 yahoo 提供的一個前端壓縮工具，通過 java 庫編譯 css 或 js 文件進行壓縮</span></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>2.5.2 反混淆工具</strong></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><ul class="list-paddingleft-1" style="width: 545.453px;"><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbeautifier.io%2F" textvalue="jsbeautifier" linktype="text" imgurl="" tab="outerlink" data-linktype="2" style="letter-spacing: 0.578px;"><strong>jsbeautifier</strong></a><span style="letter-spacing: 0.578px;">：</span></p><p>jsbeautifier 是一個為前端開發人員製作的 Chrome 擴展，能夠直接查看經過壓縮的 Javascript 代碼。</p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Feth-sri%2FUnuglifyJS" textvalue="UnuglifyJS" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><strong>UnuglifyJS</strong></a>：</p><p>壓縮工具 uglify 對應的解混淆工具。</p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jspacker.org%2F" textvalue="jspacker" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><span style="letter-spacing: 0.034em;"><strong>jspacker</strong></span></a><span style="letter-spacing: 0.034em;">：</span></p><p><span style="letter-spacing: 0.034em;"></span><span style="letter-spacing: 0.034em;">用 PHP 編寫的壓縮工具，可以混淆代碼保護知識產權，產生的代碼兼容 IE、FireFox 等常用瀏覽器，國內大部分在線工具網站都採用這種算法壓縮。</span><br></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>三、前端安全對抗</p></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.1 前端調試手法</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.1.1 Elements</strong></p><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p>Elements 面板會顯示目前網頁中的 DOM、CSS 狀態，且可以修改頁面上的 DOM 和 CSS，即時看到結果，省去了在編輯器修改、儲存、瀏覽器查看結果的流程。</p><p><br></p><p>有時候一些 dom 節點會嵌套很深，導致我們很難利用 Element 面板 html 代碼來找到對應的節點。inspect(dom 元素) 可以讓我們快速跳轉到對應的 dom 節點的 html 代碼上。</p><p><br></p></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014129" data-ratio="0.19074074074074074" data-s="300,640" src="https://oscimg.oschina.net/oscnet/39694af8-33f5-487e-a5b7-77e04bb1b89c.png" data-type="png" data-w="1080" referrerpolicy="no-referrer"></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.1.2 Console</strong></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">Console 對象提供了瀏覽器控制枱調試的接口，Console 是一個對象，上面有很多方便的方法。</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: right;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: transparent;background-color: rgb(239, 239, 239);height: auto;"><section powered-by="xiumi.us" style="text-align: justify;"><ul class="list-paddingleft-1" style="width: 555.438px;"><li><p><strong style="letter-spacing: 0.578px;">console.log( )</strong><span style="letter-spacing: 0.578px;">：</span><span style="letter-spacing: 0.578px;">最常用的語句，可以將變量輸出到瀏覽器的控制枱中，方便開發者調用 JS 代碼</span><br></p></li><li><p><strong>console.table( )</strong>：可用於打印 obj/arr 成表格<br></p></li><li><p><strong><span style="letter-spacing: 0.034em;">console.trace( )</span></strong><span style="letter-spacing: 0.034em;">：</span><span style="letter-spacing: 0.034em;">可用於 debugger 堆棧調試，方便查看代碼的執行邏輯，看一些庫的源碼</span></p></li><li><p><strong style="letter-spacing: 0.034em;"><span style="letter-spacing: 0.034em;"></span></strong><strong style="letter-spacing: 0.034em;">console.count( )</strong><span style="letter-spacing: 0.034em;">：</span><span style="letter-spacing: 0.034em;">打印標籤被執行了幾次，預設值是 default，可用在快速計數</span></p></li><li><p><strong style="letter-spacing: 0.034em;">console.countReset( )</strong><span style="letter-spacing: 0.034em;">：</span><span style="letter-spacing: 0.034em;">用來重置，可用在計算單次行為的觸發的計數</span></p></li><li><p><strong style="letter-spacing: 0.034em;">console.group( )/console.groupEnd( )</strong><span style="letter-spacing: 0.034em;">：</span></p><p><span style="letter-spacing: 0.034em;"></span><span style="letter-spacing: 0.034em;">為了方便一眼看到自己的 log，可以用 console.group 自定義 message group 標籤，還可以多層嵌套，並用 console.groupEnd 來關閉 Group。</span></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.1.3 JS 斷點調試</strong></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">JS 斷點調試，即在瀏覽器開發者工具中為 JS 代碼添加斷點，讓 JS 執行到某一特定位置停住，方便開發者對該處代碼段進行分析與邏輯處理。</p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>&nbsp;Sources 面板</strong></p><section powered-by="xiumi.us"><p><br></p><p><strong>① 普通斷點（breakpoint）</strong></p><p>給一段代碼添加斷點的流程是："F12（Ctrl + Shift + I）打開開發工具"-&gt;"點擊 Sources 菜單"-&gt;"左側樹中找到相應文件"→"點擊行號列"即完成在當前行添加/刪除斷點操作。當斷點添加完畢後，刷新頁面 JS 執行到斷點位置停住，在 Sources 界面會看到當前作用域中所有變量和值。</p><p><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014133" data-ratio="0.2953703703703704" data-s="300,640" src="https://oscimg.oschina.net/oscnet/b8309fa8-8bcf-4c9d-9911-0c4940c2fc03.png" data-type="png" data-w="1080" referrerpolicy="no-referrer"></p><p><br></p></section><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><ul class="list-paddingleft-1" style="width: 545.453px;"><li><p><span style="letter-spacing: 0.578px;"><strong>恢復（Resume）</strong>：</span><span style="letter-spacing: 0.578px;">&nbsp;恢復按鈕 (第一個按鈕)，繼續執行，快捷鍵 F8，繼續執行，如果沒有其他的斷點，那麼程序就會繼續執行，並且調試器不會再控制程序。</span><br></p></li><li><p><strong>跨步（Step over）</strong>：運行下一條指令，但不會進入到一個函數中，快捷鍵 F10。</p></li><li><p><span style="letter-spacing: 0.034em;"><strong>步入（Step into）</strong>：</span><span style="letter-spacing: 0.034em;">快捷鍵 F11，和「下一步（Step）」類似，但在異步函數調用情況下表現不同，步入會進入到代碼中並等待異步函數執行。</span></p></li><li><p><strong>步出（Step out）</strong>：繼續執行到當前函數的末尾，快捷鍵 Shift+F11，繼續執行代碼並停止在當前函數的最後一行，當我們使用偶然地進入到一個嵌套調用，但是我們又對這個函數不感興趣時，我們想要儘可能的繼續執行到最後的時候是非常方便的。</p></li><li><p><span style="letter-spacing: 0.034em;"><strong>下一步（Step）</strong></span><span style="letter-spacing: 0.034em;">：</span><span style="letter-spacing: 0.034em;">運行下一條語句，快捷鍵 F9，一次接一次地點擊此按鈕，整個腳本的所有語句會被逐個執行，下一步命令會忽略異步行為。</span></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">啓用/禁用所有的斷點：這個按鈕不會影響程序的執行。只是一個批量操作斷點的開/關。</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><ul class="list-paddingleft-1" style="width: 545.453px;"><li><p><span style="letter-spacing: 0.578px;"><strong>察看（Watch）</strong>：</span><span style="letter-spacing: 0.578px;">顯示任意表達式的當前值</span></p></li><li><p><span style="letter-spacing: 0.034em;"><strong>調用棧（Call Stack）</strong>：</span><span style="letter-spacing: 0.034em;">顯示嵌套的調用鏈</span></p></li><li><p><span style="letter-spacing: 0.034em;"><strong>作用域（Scope）</strong>：</span><span style="letter-spacing: 0.034em;">顯示當前的變量</span></p></li><li><p><span style="letter-spacing: 0.034em;"><strong>Local</strong>：</span><span style="letter-spacing: 0.034em;">顯示當前函數中的變量</span></p></li><li><p><span style="letter-spacing: 0.034em;"><strong>Global</strong>：</span><span style="letter-spacing: 0.034em;">顯示全局變量</span></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p><strong>② 條件斷點（Conditional breakpoint）</strong></p><p>給斷點添加條件，只有符合條件時，才會觸發斷點，條件斷點的顏色是橙色。</p><p><br></p></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014135" data-ratio="0.5224111282843895" data-s="300,640" src="https://oscimg.oschina.net/oscnet/0b4c6239-c36d-463c-8821-b3c4b21aa82a.png" data-type="png" data-w="647" referrerpolicy="no-referrer"></p><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p><strong>③ 日誌斷點（logpoint）</strong></p><p>當代碼執行到這裏時，會在控制枱輸出你的表達式，不會暫停代碼執行，日誌斷點式粉紅色。</p></section><p powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="302" data-imgfileid="100014134" data-ratio="0.5037707390648567" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a82c513e-796f-42e8-b27a-f2e2c01d0b61.png" data-type="png" data-w="663" style="width: 578px;height: 291px;" referrerpolicy="no-referrer"></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>debugger 命令</strong></p><section powered-by="xiumi.us"><p><br></p><p>通過在代碼中添加"debugger;"語句，當代碼執行到該語句的時候就會自動斷點，之後的操作和在 Sources 面板添加斷點調試，唯一的區別在於調試完後需要刪除該語句。</p><p><br></p><p>在開發中偶爾會遇到異步加載 html 片段（包含內嵌 JS 代碼）的情況，而這部分 JS 代碼在 Sources 樹中無法找到，因此無法直接在開發工具中直接添加斷點，那麼如果想給異步加載的腳本添加斷點，此時"debugger;"就發揮作用了。</p></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.2 反調試手段</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.2.1 禁用開發者工具</strong></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">監聽是否打開開發者工具，若打開，則直接調用 JavaScript 的 window.close( ) 方法關閉網頁</p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">① 監聽 F12 按鍵、監聽 Ctrl+Shift+I（Windows 系統）組合鍵、監聽右鍵菜單，監聽 Ctrl+s 禁止保存至本地，避免被 Overrides。</p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="xml"><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;<span class="code-snippet__name">script</span>&gt;</span></span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//監聽 F12、Ctrl+Shift+i、Ctrl+s</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">document</span>.onkeydown = <span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params">event</span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">if</span> (event.key === <span class="code-snippet__string">"F12"</span>) {</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer">        } <span class="code-snippet__keyword">else</span><span class="code-snippet__keyword">if</span> (event.ctrlKey &amp;&amp; event.shiftKey &amp;&amp; event.key === <span class="code-snippet__string">"I"</span>) {<span class="code-snippet__comment">//此處 I 必須大寫</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer">        } <span class="code-snippet__keyword">else</span><span class="code-snippet__keyword">if</span> (event.ctrlKey &amp;&amp; event.key === <span class="code-snippet__string">"s"</span>) {<span class="code-snippet__comment">//此處 s 必須小寫</span></span></code><code><span class="code-snippet_outer">            event.preventDefault();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer">        }</span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer">    };</span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//監聽右鍵菜單</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">document</span>.oncontextmenu = <span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params"></span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer">    };</span></code><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;/<span class="code-snippet__name">script</span>&gt;</span></span></code></pre></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">② 監聽窗口大小變化</p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="xml"><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;<span class="code-snippet__name">script</span>&gt;</span></span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">var</span> h = <span class="code-snippet__built_in">window</span>.innerHeight, w = <span class="code-snippet__built_in">window</span>.innerWidth;</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.onresize = <span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params"></span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">if</span> (h !== <span class="code-snippet__built_in">window</span>.innerHeight || w !== <span class="code-snippet__built_in">window</span>.innerWidth) {</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer">        }</span></code><code><span class="code-snippet_outer">    }</span></code><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;/<span class="code-snippet__name">script</span>&gt;</span></span></code></pre></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">③ 利用 Console.log</p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="xml"><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;<span class="code-snippet__name">script</span>&gt;</span></span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//控制枱打開的時候回調方法</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__function"><span class="code-snippet__keyword">function</span><span class="code-snippet__title">consoleOpenCallback</span>(<span class="code-snippet__params"></span>)</span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">return</span><span class="code-snippet__string">""</span>;</span></code><code><span class="code-snippet_outer">    }</span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//立即運行函數，用來檢測控制枱是否打開</span></span></code><code><span class="code-snippet_outer">    !<span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params"></span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 創建一個對象</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">let</span> foo = <span class="code-snippet__regexp">/./</span>;</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 將其打印到控制枱上，實際上是一個指針</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">console</span>.log(foo);</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 要在第一次打印完之後再重寫 toString 方法</span></span></code><code><span class="code-snippet_outer">        foo.toString = consoleOpenCallback;</span></code><code><span class="code-snippet_outer">    }()</span></code><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;/<span class="code-snippet__name">script</span>&gt;</span></span></code></pre></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.2.2 無限 debugger 反調試</strong></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">① constructor</p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="xml"><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;<span class="code-snippet__name">script</span>&gt;</span></span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__function"><span class="code-snippet__keyword">function</span><span class="code-snippet__title">consoleOpenCallback</span>(<span class="code-snippet__params"></span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer">    }</span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer">    setInterval(<span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params"></span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">const</span> before = <span class="code-snippet__keyword">new</span><span class="code-snippet__built_in">Date</span>();</span></code><code><span class="code-snippet_outer">        (<span class="code-snippet__function"><span class="code-snippet__keyword">function</span>(<span class="code-snippet__params"></span>)</span>{}).constructor(<span class="code-snippet__string">"debugger"</span>)();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// debugger;</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">const</span> after = <span class="code-snippet__keyword">new</span><span class="code-snippet__built_in">Date</span>();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">const</span> cost = after.getTime() - before.getTime();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">if</span> (cost &gt; <span class="code-snippet__number">100</span>) {</span></code><code><span class="code-snippet_outer">            consoleOpenCallback();</span></code><code><span class="code-snippet_outer">        }</span></code><code><span class="code-snippet_outer">    }, <span class="code-snippet__number">1000</span>);</span></code><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;/<span class="code-snippet__name">script</span>&gt;</span></span></code></pre></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">② Function</p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="xml"><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;<span class="code-snippet__name">script</span>&gt;</span></span></code><code><span class="code-snippet_outer">    setInterval(<span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params"></span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">const</span> before = <span class="code-snippet__keyword">new</span><span class="code-snippet__built_in">Date</span>();</span></code><code><span class="code-snippet_outer">        (<span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params">a</span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">return</span> (<span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params">a</span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">return</span> (<span class="code-snippet__built_in">Function</span>(<span class="code-snippet__string">'Function(arguments[0]+"'</span> + a + <span class="code-snippet__string">'")()'</span>))</span></code><code><span class="code-snippet_outer">            })(a)</span></code><code><span class="code-snippet_outer">        })(<span class="code-snippet__string">'bugger'</span>)(<span class="code-snippet__string">'de'</span>);</span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// Function('debugger')();</span></span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// debugger;</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">const</span> after = <span class="code-snippet__keyword">new</span><span class="code-snippet__built_in">Date</span>();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">const</span> cost = after.getTime() - before.getTime();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">if</span> (cost &gt; <span class="code-snippet__number">100</span>) {</span></code><code><span class="code-snippet_outer">            consoleOpenCallback2();</span></code><code><span class="code-snippet_outer">        }</span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer">    }, <span class="code-snippet__number">1000</span>);</span></code><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;/<span class="code-snippet__name">script</span>&gt;</span></span></code></pre></section><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;"><section style="padding-left: 8px;display: inline-block;width: 578px;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;align-self: flex-start;flex: 0 0 auto;"><section powered-by="xiumi.us" style="color: rgba(0, 0, 0, 0.5);font-size: 14px;text-align: justify;"><p>有大佬寫了一個庫專門用來判斷是否打開了開發者工具，可供參考使用：<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsindresorhus%2Fdevtools-detect" textvalue="點擊查看>>" linktype="text" imgurl="" tab="outerlink" data-linktype="2">點擊查看&gt;&gt;</a></p></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.3 反反調試手段</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.3.1 禁用開發者工具</strong></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">針對判斷是否打開開發者工具的破解方式很簡單，只需兩步就可以搞定。</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><p>① 將開發者工具以獨立窗口形式打開</p><p>② 打開開發者工具後再打開網址</p></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.3.2 無限 debugger</strong></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">針對無限 debugger 反調試，有以下破解方法</p><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p>① 直接使用 dubbger 指令的，可以在 Chrome 找到對應行（格式化後），右鍵行號，選擇 Never pause here 即可。</p><p><br></p><p>② 使用了 constructor 構造 debugger 的，只需在 console 中輸入以下代碼後，點擊 F8（Resume script execution）回覆 js 代碼執行即可（直接點擊小的藍色放行按鈕即可）。</p></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer"><span class="code-snippet__built_in">Function</span>.prototype.constructor=<span class="code-snippet__function"><span class="code-snippet__keyword">function</span>(<span class="code-snippet__params"></span>)</span>{}</span></code></pre></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">③ 使用了 Function 構造 debugger 的，只需在 console 中輸入以下代碼。</p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer"><span class="code-snippet__built_in">Function</span> = <span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params"></span>) </span>{}</span></code></pre></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us" style="font-size: 16px;color: rgb(65, 95, 255);"><p>3.4 總結</p></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">JavaScript 混淆加密使得代碼更難以被反編譯和分析，從而提高了代碼的安全性，攻擊者需要花費更多的時間和精力才能理解和分析代碼，從而降低了攻擊者入侵的成功率，但它並不能完全保護代碼不被反編譯和分析，如果攻擊者有足夠的時間和資源，他們仍然可以理解代碼並找到其中的漏洞，道高一尺，魔高一丈，任何客戶端加密混淆都會被破解，只要用心都能解決，我們能做的就是拖延被破解的時間，所以儘量避免在前端代碼中嵌入敏感信息或業務邏輯。</p><p powered-by="xiumi.us"><span style="font-size: 14px;text-align: left;background-color: rgb(239, 239, 239);letter-spacing: 0.578px;"><br></span></p><section style="font-size: 15px;"><section style="margin-right: 0%;margin-bottom: 20px;margin-left: 0%;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 40%;align-self: center;flex: 0 0 auto;"><section style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><section style="border-top: 1px dotted rgb(90, 98, 114);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section><section style="display: inline-block;vertical-align: middle;width: 20%;align-self: center;flex: 0 0 auto;"><section style="text-align: center;color: rgb(45, 66, 87);font-size: 11px;" powered-by="xiumi.us"><p>END</p></section></section><section style="display: inline-block;vertical-align: middle;width: 40%;align-self: center;flex: 0 0 auto;"><section style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><section style="border-top: 1px dotted rgb(90, 98, 114);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="margin-top: 10px;margin-bottom: 10px;text-align: left;" powered-by="xiumi.us"><section style="padding-left: 1em;padding-right: 1em;display: inline-block;text-align: center;"><span style="display: inline-block;padding: 0.3em 0.5em;border-radius: 0.5em;background-color: rgb(65, 94, 255);color: rgb(255, 255, 255);" title="" opera-tn-ra-cell="_$.pages:0.layers:0.comps:1.title1"><p>猜你喜歡</p></span></section><section style="border-width: 1px;border-style: solid;border-color: transparent;margin-top: -1em;padding: 20px 10px 10px;background-color: rgb(239, 239, 239);text-align: center;"><section style="font-size: 14px;text-align: left;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247497810%26idx%3D1%26sn%3Dfb5334c9637cdde4b5125f69ed32e89f%26chksm%3Debdb88c0dcac01d6faf82e4d44e8421616ec9128f46ea494339a599c346b13212b9f1d774886%26scene%3D21%23wechat_redirect" textvalue="Hudi 在 vivo 湖倉一體的落地實踐" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">Hudi 在 vivo 湖倉一體的落地實踐</a></p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247497721%26idx%3D1%26sn%3D7fc575754a006dc68bb08cf730971cde%26chksm%3Debdb876bdcac0e7d1b579c0e69b8d36854bb08457c231640dab9418ee75dd35788e90e0688bf%26scene%3D21%23wechat_redirect" textvalue="RocksDB 在 vivo 消息推送系統中的實踐" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">RocksDB 在 vivo 消息推送系統中的實踐</a></p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247497638%26idx%3D1%26sn%3D7c773beb9f6062991ff11a068d55b132%26chksm%3Debdb8734dcac0e22e33f20a45472e8918c2b4bb7ccc47f138e3d1d37af76cd1fef986283edbd%26scene%3D21%23wechat_redirect" textvalue="線上 ES 集羣參數配置引起的業務異常案例分析" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">線上 ES 集羣參數配置引起的業務異常案例分析</a></p></li></ul></section></section></section></section><p powered-by="xiumi.us"><span style="font-size: 14px;text-align: left;background-color: rgb(239, 239, 239);letter-spacing: 0.578px;"></span></p><section class="mp_profile_iframe_wrp"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-pluginname="mpprofile" data-id="MzI4NjY4MTU5Nw==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt45QXJZicZ9gaNU2mRSlvqhQd94MJ7oQh4QFj1ibPV66xnUiaKoicSatwaGXepL5sBDSDLEckicX1ttibHg/0?wx_fmt=png" data-nickname="vivo 互聯網技術" data-alias="vivoVMIC" data-signature="分享 vivo 互聯網技術乾貨與沙龍活動，推薦最新行業動態與熱門會議。" data-from="0" data-is_biz_ban="0"></mp-common-profile><span style="background-color: rgb(239, 239, 239);font-size: 14px;letter-spacing: 0.578px;text-align: left;"></span><span style="background-color: rgb(239, 239, 239);font-size: 14px;letter-spacing: 0.578px;text-align: left;"></span></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - vivo 互聯網技術（vivoVMIC）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/vivotech/blog/10322909</guid>
            <link>https://my.oschina.net/vivotech/blog/10322909</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Sam Altman 公佈網友對 OpenAI 的新年願望清單]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Sam Altman 今日在社交平台向網友<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsama%2Fstatus%2F1738639394800906381" target="_blank">徵集</a></u>大家希望 OpenAI 在 2024 年實現的事項。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-a33e81dfe8ecf936111917e0da6407d3e23.png" referrerpolicy="no-referrer"></p></blockquote><p>從回覆來看，「AGI」是呼聲最高的請求，但 Sam Altman <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsama%2Fstatus%2F1738640093097963713" target="_blank">表示</a></u>，OpenAI 無法在 2024 年實現這一目標。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-2b8df6a16780c81b36c005e358f02452201.png" referrerpolicy="no-referrer"></p></blockquote><p>下面是 Sam Altman <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsama%2Fstatus%2F1738673279085457661" target="_blank">彙總</a></u>的網友願望清單：</p><blockquote><p>AGI (a little patience please)<br> GPT-5<br> better voice mode<br> higher rate limits<br> better GPTs<br> better reasoning<br> control over degree of wokeness/behavior<br> video<br> personalization<br> better browsing<br> 'sign in with openai'<br> open source</p></blockquote><p>翻譯如下：</p><blockquote><p>AGI（請耐心等待）<br> GPT-5<br> 更好的語音模式<br> 更高的速率限制<br> 更好的 GPTs<br> 更好的推理<br> 控制覺醒/行為的程度<br> 視頻<br> 個性化<br> 更好的瀏覽<br> '使用 openai 登錄'<br><strong>開源</strong></p></blockquote><p>不過網友似乎不太滿意 Sam Altman 把「開源」放在最後，表示<strong>「開源可能是大多數人的首選願望</strong>」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-8fb26700d80d2984ab70cc7e89c07cdf8c2.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 03:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272394</guid>
            <link>https://www.oschina.net/news/272394</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linus：聖誕夜我不看代碼，明年再發布新版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Linus Torvalds 在內核郵件列表<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Fnetdev%2FCAHk-%253DwhceLbGZwuLnR0S3V_ajedDXj%253Ds86sm89m%252BVT2YrbG1NA%40mail.gmail.com%2F" target="_blank">宣佈</a></u>，按照他們芬蘭的習俗，聖誕夜是十分重要的一天，所以週日他會休息。因此他計劃在聖誕前夕的 12 月 24 日發佈 Linux 6.7-rc7（<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Fall%2F20231224010459.release-6.7-rc7%40kdist.linux.kernel.org%2F" target="_blank">已發佈</a></u></em>），但不會在新年前夕的 12 月 31 日發佈 Linux 6.7 的正式版，而是發佈 <strong>6.7-rc8</strong>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-35e9f9e06f351f39fb1d3c9ef61e061b27d.png" referrerpolicy="no-referrer"></p><p>目前 Linux 6.7 的開發工作一切順利，但因為年終假期 Linus 決定推遲一週到明年 1 月 7 日發佈 Linux 6.7 正式版，然後在 1 月 8 日開啓 Linux 6.8 合併窗口——避免在 1 月 1 日開啓。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 02:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272392</guid>
            <link>https://www.oschina.net/news/272392</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun 1.0.19 版本更新：重要的性能優化與功能改進]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Bun 的最新版本 1.0.19 為 JavaScript 和 TypeScript 運行環境帶來了一系列重要更新。這個版本在性能、兼容性和可用性方面進行了顯著改進，解決了多個問題，並提高了整體的開發者體驗。</p><h4>增強的 TypeScript 支持：<code>@types/bun</code></h4><p>Bun 1.0.19 中的一個突出更新是重新引入<code>@types/bun</code>，此前稱為<code>bun-types</code>。這一變化極大地簡化了 Bun 與 TypeScript 的整合，解決了先前實現中的一些問題。開發者不再需要為 Bun 特別配置<code>tsconfig.json</code>，而新包無縫重導出<code>@types/node</code>包，確保了兼容性和易用性。</p><h4>改進的加密包支持</h4><p>對於 JavaScript 生態系統的安全來説，Bun 1.0.19 現在完全支持<code>bcrypt</code>和<code>argon2</code>包，這是對 N-API 兼容性改進的重要一步。這一更新允許開發者在 Bun 環境中使用這些流行的加密包進行安全的密碼哈希和驗證，使 Bun 成為構建安全應用程序的更加多功能的平台。</p><h4>性能優化</h4><p>Bun 1.0.19 引入了幾項性能增強。<code>setTimeout</code>和<code>setInterval</code>的實現在 Linux x64 系統上現在快了四倍，這要歸功於一種新的計時器堆，它有效地管理計時器。對於嚴重依賴計時器操作的應用程序來説，這一改進至關重要，提供了顯著更好的性能和資源利用。</p><p>此外，針對 Linux 系統上處理大量輸入的<code>Bun.spawnSync</code>進行了優化，為具有大量輸出的子進程提供了 50% 的性能提升。<code>Bun.peek()</code>函數也實現了驚人的 90 倍速度提升，而使用<code>expect(...).toEqual</code>比較<code>Map</code>實例現在快了 100 倍，這對於廣泛依賴這些功能的應用程序來説，是一大益處。</p><h4>用戶體驗改進</h4><p>Bun 1.0.19 引入了更好的錯誤處理，特別是對於使用<code>await</code>在<code>async</code>函數外部這類常見錯誤。這次更新提供了更有信息量的錯誤消息，幫助開發者調試並提高代碼質量。此版本還解決了<code>bun:test</code>中模塊模擬的問題，通過直接使用模塊指定符使其更直觀。</p><h4>安裝和安裝後腳本</h4><p>新版本記錄了安裝後腳本的執行速度，幫助開發者在包安裝期間識別性能瓶頸。此外，<code>bun install --verbose</code>現在將安裝後腳本的輸出實時流式傳輸，提供實時反饋，增強了安裝包過程的透明度。</p><h4>Bug 修復和升級</h4><p>Bun 1.0.19 修復了一系列問題，包括與<code>--frozen-lockfile</code>標誌相關的問題、TypeScript 解析器的邊緣案例以及與環境變量相關的迴歸。此更新還帶來了 SQLite 版本的升級（至 v3.44.2），確保內嵌的 SQLite 客戶端保持最新和安全。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 00:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272386</guid>
            <link>https://www.oschina.net/news/272386</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[蘋果將大語言模型部署到設備本地]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>蘋果研究團隊在預印本平台 arxiv&nbsp;發表論文《LLM in a flash》，介紹了一項全新的閃存技術，讓蘋果可以在其內存有限的設備上部署大語言模型。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-5a88c9804ee5a73ff25ed65e648d4f3ed16.png" referrerpolicy="no-referrer"></p><p>論文地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2312.11514.pdf" target="_blank">https://arxiv.org/pdf/2312.11514.pdf</a></u></em></p></blockquote><p>研究團隊表示，他們通過<strong>將模型參數存儲在閃存 (Flash Memory) 中</strong>——也就是儲存應用和照片的地方，解決了有效運行大語言模型容量的挑戰。與傳統用於運行大語言模型的 RAM 相比，閃存在移動設備中容量要大得多。</p><p><img src="https://oscimg.oschina.net/oscnet/up-54d369ce15b54b862ab932f6ecec8c1634f.png" referrerpolicy="no-referrer"></p><p>論文指出，這項技術可以讓 AI 模型的運行規模達到 iPhone 可用內存的兩倍。在這項技術的加持之下，LLM 的推理速度在 Apple M1 Max CPU 上提高了 4-5 倍，在 GPU 上提高了 20-25 倍。</p><hr><p>延伸閲讀</p><ul><li><a href="https://www.oschina.net/news/265689">蘋果正在利用 LLM 徹底改造 Siri，將成為殺手級 AI 應用</a></li><li><a href="https://www.oschina.net/news/263067">蘋果將在 Xcode 中原生集成 AI 編碼助手 —— 類似 GitHub Copilot</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Dec 2023 03:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272282/apple-wants-ai-to-run-directly-on-its-hardware</guid>
            <link>https://www.oschina.net/news/272282/apple-wants-ai-to-run-directly-on-its-hardware</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[國家大模型標準測試首批通過名單公佈：含阿里通義千問、騰訊混元等]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在 12 月 22 日的全國信息技術標準化技術委員會人工智能分委會全體會議期間，國內首個官方「<strong>大模型標準符合性評測</strong>」結果公佈。阿里雲、百度、360、騰訊四家企業旗下的大模型產品首批通過評測，代表着其在通用性、智能性等維度均達到國家相關標準要求。</p><p>根據公開資料，上述四家企業擁有的大模型分別為通義千問、文心一言、360 智腦、混元大模型，其中通義千問是唯一的開源模型。</p><p><img height="1762" src="https://oscimg.oschina.net/oscnet/up-e743a508e455deb1027539e309a2c3518a9.png" width="1236" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-89e98f4ad9fa0022908903e2cf46bd3ca64.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a69057c841456cdd581eeff774ee42e9e4a.png" referrerpolicy="no-referrer"></p><p>據介紹，「大模型標準符合性評測」由中國電子技術標準化研究院發起，旨在建立中國大模型標準符合性名錄，引領人工智能產業健康有序發展。該評測對外徵集了學術界、產業界幾十家頭部單位意見，覆蓋評估語言大模型通用性、智能性的 30 餘項具體評測維度。 &nbsp;</p><p>阿里方面介紹稱，通義千問是本次通過的首次大模型中唯一的開源模型。</p><p>騰訊方面介紹稱，騰訊混元大模型符合《人工智能大規模與訓練模型，第 2 部分：測評指標與方法》語言大模型的相關技術要求。該模型號稱擁有超千億參數規模、預訓練語料超 2 萬億 tokens。 &nbsp;</p><p>同時，阿里雲、騰訊雲分別以技術牽頭方、提案牽頭方的身份啓動《人工智能模型即服務（MaaS）功能要求》的討論與編制。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Dec 2023 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272275</guid>
            <link>https://www.oschina.net/news/272275</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
