<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 09 Oct 2023 23:52:21 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[開源框架 NanUI 作者轉行賣鋼材，項目暫停開發]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>NanUI 作者在國慶節發佈了停更公告，稱該項目將暫停開發，原因是去年被裁員失業後，<strong>他已轉行銷售鋼材</strong>，現在很難騰出時間來開發和維護 NanUI 項目。</p><p>他説道：</p><blockquote><p>為了生存，本人只能花費更多的時間和精力去談單，去銷售，去收款，因此已經很難再騰出時間來開發和維護 NanUI 項目，對此我深感無奈，也希望後面生活和工作穩定後能騰出時間來繼續維護 NanUI。</p></blockquote><p>NanUI 作者表示，他所在公司因疫情於去年（2022 年）初徹底宣佈裁減所有開發崗位，因此他也只能順應大流在 36 歲這個尷尬的年紀失業。</p><p><img height="1285" src="https://static.oschina.net/uploads/space/2023/1009/173727_oVGe_2720166.png" width="1980" referrerpolicy="no-referrer"></p><p><em>via&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FXuanchenLin%2FNanUI%2Fdiscussions%2F367" target="_blank">https://github.com/XuanchenLin/NanUI/discussions/367</a></em></p><blockquote><p>NanUI 界面組件是一個開放源代碼的 .NET / .NET Core 窗體應用程序（WinForms）界面框架。它適用於希望使用 HTML5/CSS3 等前端技術來構建 Windows 窗體應用程序用戶界面的 .NET 開發人員。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-060f8d602f0ac9de0bb5953b554b233f62e.png" referrerpolicy="no-referrer"></p><p>NanUI 基於谷歌可嵌入的瀏覽器框架 Chromium Embedded Framework (CEF)，因此用戶可以使用各種前端技術 HTML5/CSS3/JavaScript 和流行前端框架 React/Vue/Angular/Blazor 設計和開發 .NET 桌面應用程序的用戶界面。</p><p>同時，NanUI 獨創的 JavaScript Bridge 可以方便地實現瀏覽器端與 .NET 之間的通信和數據交換。</p><p>使用 NanUI 界面框架將為傳統的 WinForm 應用程序的用戶界面設計和開發工作帶來無限種可能！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 09:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261033</guid>
            <link>https://www.oschina.net/news/261033</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[非凸科技受邀出席源創會，探討數據技術的未來發展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center"><img height="466" src="https://oscimg.oschina.net/oscnet/up-c551fe1ce356a89e7e8b392055164817d4f.jpg" width="700" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>9</span></span><span><span>月</span></span><span><span>23</span></span><span><span>日</span></span><span><span>，</span></span><span><span>由開源中國聯合騰訊雲</span></span><span><span>TVP</span></span><span><span>開展的「數據與前沿技術」源創會活動在成都順利舉行</span></span><span><span>，</span></span><span><span>非凸科技受邀出席</span></span><span><span>，</span></span><span><span>與業界專家們共同探討了數據存儲</span></span><span><span>、</span></span><span><span>數據分析</span></span><span><span>、</span></span><span><span>數據挖掘等前沿技術</span></span><span><span>。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>會上</span></span><span><span>，</span></span><span><span>非凸科技成都分公司研發總監趙海峯以「量化交易的數據驅動」為主題進行了分享</span></span><span><span>。</span></span><span><span>在量化交易領域如何高效地獲取行情數據</span></span><span><span>，</span></span><span><span>如何將行情數據轉發到需要的服務器</span></span><span><span>，</span></span><span><span>如何處理大量歷史行情數據的存放和讀取</span></span><span><span>，</span></span><span><span>又是如何通過行情數據進行模型的訓練</span></span><span><span>，</span></span><span><span>趙海峯老師一一做出了精彩的解答</span></span><span><span>。</span></span><span><span>活動後</span></span><span><span>，</span></span><span><span>引發線上熱烈交流討論</span></span><span><span>。</span></span></span></span></p><p style="text-align:center"><img height="358" src="https://oscimg.oschina.net/oscnet/up-dd23c7e0f8444597f06f020859cc3e800bb.png" width="700" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>量化交易主要通過行情數據進行交易決策</span></span><span><span>，</span></span><span><span>那麼如何通過券商獲取行情</span></span><span><span>，</span></span><span><span>進行行情低延遲接收的軟硬件方案呢</span></span><span><span>？</span></span><span><span>交易所發佈</span></span><span><span>的</span></span><span><span>行情</span></span><span><span>會</span></span><span><span>經過券商的處理再轉發給交易機構</span></span><span><span>，</span></span><span><span>其轉發途徑主要有</span></span><span><span>TCP、UDP、FPGA</span></span><span><span>加速的 UDP 和</span></span><span><span>ASIC</span></span><span><span>加速的 UDP</span></span><span><span>行情</span></span><span><span>等</span></span><span><span>。</span></span><span><span>然而</span></span><span><span>，</span></span><span><span>券商通過</span></span><span><span>TCP</span></span><span><span>連接將處理後的行情數據轉發給交易機構</span></span><span><span>，</span></span><span><span>會存在延遲大</span></span><span><span>、</span></span><span><span>應用層</span></span><span><span>丟包</span></span><span><span>（非 TCP 協議丟包）、發送端負載大</span></span><span><span>等問題</span></span><span><span>。</span></span><span><span>為瞭解決這些問題</span></span><span><span>，</span></span><span><span>券商又通過</span></span><span><span>UDP</span></span><span><span>組播或廣播的方式</span></span><span><span>，</span></span><span><span>將處理後的行情或交易所原始行情轉發給交易機構</span></span><span><span>。</span></span><span><span>為了達到極致的低延遲，</span></span><span><span>券商端將會通過多種方式來解決</span></span><span><span>，</span></span><span><span>其中一個</span></span><span><span>特別有效</span></span><span><span>的方式是使用</span></span><span><span>L1</span></span><span><span>交換機</span></span><span><span>，在一層轉發光或電信號給客戶，其轉發延遲可以低至 4ns。</span></span><span><span>需要注意的是</span></span><span><span>，</span></span><span><span>雖然 UDP 不是一個可靠傳輸協議，但</span></span><span><span>在同一個交換機連接的服務器</span></span><span><span>之間使用 UDP 進行通信</span></span><span><span>，</span></span><span><span>正常情況下</span></span><span><span>在網絡上幾乎不</span></span><span><span>會</span></span><span><span>丟包</span></span><span><span>。然而，</span></span><span><span>在客戶端程序和服務器的網卡上可能</span></span><span><span>會</span></span><span><span>丟包</span></span><span><span>。</span></span><span><span>因此</span></span><span><span>，</span></span><span><span>客戶在接收行情時</span></span><span><span>，</span></span><span><span>可以使用</span></span><span><span>無鎖的</span></span><span><span>ring buffer</span></span><span><span>轉發數據到處理線程</span></span><span><span>，</span></span><span><span>以並</span></span><span><span>行處理</span></span><span><span>不同股票的行情，</span></span><span><span>然後</span></span><span><span>將處理結果</span></span><span><span>寫入共享內存</span></span><span><span>，</span></span><span><span>以供交易系統讀取</span></span><span><span>。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>收到行情後</span></span><span><span>，</span></span><span><span>如何將行情數據轉發給內部的其他消費者呢</span></span><span><span>？</span></span><span><span>如果對延遲要求沒有太高</span></span><span><span>，</span></span><span><span>可以使用</span></span><span><span>TCP</span></span><span><span>轉發行情</span></span><span><span>，</span></span><span><span>能夠自己控制丟包率</span></span><span><span>，為了降低延遲和增加吞吐，也可以使用 UDP 轉發行情。</span></span><span><span>由於逐筆行情不允許丟包</span></span><span><span>，</span></span><span><span>所以在使用</span></span><span><span>UDP</span></span><span><span>轉發行情時</span></span><span><span>，</span></span><span><span>可以搭配</span></span><span><span>TCP</span></span><span><span>行情重傳服務</span></span><span><span>，</span></span><span><span>通過</span></span><span><span>多路行情匯聚</span></span><span><span>、R</span></span><span><span>oc</span></span><span><span>ksdb</span></span><span><span>持久化</span></span><span><span>等方式對 UDP 轉發行情進行補充</span></span><span><span>。</span></span><span><span>如果</span></span><span><span>轉發行情前</span></span><span><span>進行數據壓縮</span></span><span><span>，</span></span><span><span>那麼延遲</span></span><span><span>和吞吐量可能會更優秀</span></span><span><span>。</span></span><span><span>行情壓縮主要有兩種方式</span></span><span><span>：</span></span><span><span>行情消息的壓縮</span></span><span><span>、</span></span><span><span>消息內部</span></span><span><span>字段</span></span><span><span>的壓縮</span></span><span><span>（</span></span><span><span>股票代碼</span></span><span><span>、</span></span><span><span>價格</span></span><span><span>）。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>行情轉發之後</span></span><span><span>，</span></span><span><span>如何使用行情數據分析交易執行情況</span></span><span><span>，</span></span><span><span>又該如何訓練模型呢</span></span><span><span>？</span></span><span><span>收取到行情後</span></span><span><span>，</span></span><span><span>其中一種應用場景是訓練量化交易模型</span></span><span><span>，</span></span><span><span>將收取到的行情數據進行特徵處理</span></span><span><span>，</span></span><span><span>提取因子</span></span><span><span>，並利用 AI</span></span><span><span>進行模型訓練</span></span><span><span>，</span></span><span><span>然後將訓練好的模型解析出來以備高效地計算</span></span><span><span>實時</span></span><span><span>信號</span></span><span><span>，</span></span><span><span>在接收到實時信號值之後</span></span><span><span>，</span></span><span><span>再</span></span><span><span>極速</span></span><span><span>推送到交易系統</span></span><span><span>，</span></span><span><span>就可以根據不同的策略配置觸發交易</span></span><span><span>；</span></span><span><span>另一種場景應用是把收取到的行情數據與</span></span><span><span>C</span></span><span><span>l</span></span><span><span>ickHouse</span></span><span><span>集成</span></span><span><span>，</span></span><span><span>這</span></span><span><span>不僅能提供高效的聚合和分析查詢</span></span><span><span>功能</span></span><span><span>，</span></span><span><span>還能使用流式聚合表自動計算</span></span><span><span>交易數據，如實時</span></span><span><span>交易盈虧</span></span><span><span>，風險指標等</span></span><span><span>。</span></span></span></span></p><p style="text-align:center"><img height="466" src="https://oscimg.oschina.net/oscnet/up-14ae8244232acc42aea0b9bf638cf1632ff.jpg" width="700" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>非凸科技正在加大對金融科技研究的投入</span></span><span><span>，</span></span><span><span>持續以行業技術交流與合作的方式</span></span><span><span>，</span></span><span><span>整合行業生態優勢資源</span></span><span><span>，</span></span><span><span>加快創新技術在實際業務場景中的落地</span></span><span><span>。</span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 09:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261029</guid>
            <link>https://www.oschina.net/news/261029</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[學習 DevOps 落地實踐，全面提升技術水平]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在我們高速發展的技術時代，DevOps 已經成為企業持續交付和優化業務的關鍵。但是目前市場寒冬、經濟下行，各大企業紛紛裁員。作為天選打工人的我們，收入鋭減、就業困難，普通人如何應對？大齡 IT 從業者，職業迷茫、焦慮恐慌，如何加強學習快速成長？</p><p style="text-align:center"><img height="249" src="https://static.oschina.net/uploads/space/2023/1009/165530_PSgw_2720166.png" width="400" referrerpolicy="no-referrer"></p><p>為了幫助社區成員解決以上問題，我們特別推出了一套針對技術社區的《DevOps 落地實踐訓練營》。這個訓練營將帶您全面瞭解 DevOps 的核心理念和實踐方法，從產品設計、需求管理、代碼管理、持續集成、部署發佈、數據度量、業務運營等各個領域，帶您端到端的學習 DevOps 相關知識。</p><p style="text-align:center"><img src="https://static.oschina.net/uploads/space/2023/1009/165548_jSD5_2720166.png" referrerpolicy="no-referrer"></p><p>參加我們的 DevOps 落地實踐訓練營，您將會有以下收穫：</p><ol><li>提升技術能力：通過系統的培訓，您將對 DevOps 有更深入的理解，提升您的技術實力。</li><li>提高溝通能力：訓練營將幫助您更好地與開發、測試和運維團隊溝通，提高團隊協作效率。</li><li>拓寬知識視野：訓練營將邀請業內專家分享經驗，幫助您掌握最新的 DevOps 工具和技術。</li><li>發掘最佳實踐：通過案例分析和實踐操作，您將瞭解到更多的 DevOps 最佳實踐，為您的工作帶來更多靈感。</li></ol><p style="text-align:center"><img src="https://static.oschina.net/uploads/space/2023/1009/165712_fZMA_2720166.png" referrerpolicy="no-referrer"></p><p>我們的訓練營有以下亮點：</p><p>1、現在大多數的培訓都是線上，效果如何，相信大家都有自己的判斷。小編在以前學習線上課程時，超不過半小時就走神犯困。<strong>《DevOps 落地實踐訓練營》採用線下培訓形式，確保學員能夠親身體驗和實踐所學內容</strong>。</p><p style="text-align:center"><img src="https://static.oschina.net/uploads/space/2023/1009/165732_9QiG_2720166.png" referrerpolicy="no-referrer"></p><p>2、術業有專攻，單一講師的培訓並不能做到全棧貫通賦能。本訓練營邀請多位專業講師聯袂推出端到端的實踐技能培訓，內容包含 25 個章節，<strong>全面講解軟件開發過程中產品設計、項目管理、開發、測試、架構等多個領域的知識實踐</strong>。</p><p style="text-align:center"><img src="https://static.oschina.net/uploads/space/2023/1009/165752_0tuV_2720166.png" referrerpolicy="no-referrer"></p><p>3、職業技能培訓，最終的目的是學以致用。有別於其他認證類培訓，本次訓練營更為重要的是，<strong>每個環節都有動手練習環節，確保學員真正掌握所學技能</strong>。而且能夠將理論知識與實際工作緊密結合，為學員提供貫通全棧賦能的培訓。</p><p style="text-align:center"><img src="https://static.oschina.net/uploads/space/2023/1009/165814_dmE9_2720166.png" referrerpolicy="no-referrer"></p><p>4、「天下苦高價培訓久矣。」本次訓練營，以 480 元的價格提供了一種高性價比的培訓方式，讓學員不再因價格而猶豫。如果你想在學習技能的同時，還想獲得一個職業技能證書，980 的價格，你就能獲得由」中國管理科學院「頒發的《專業人才培訓證書》。此處注意，培訓和證書並不強制綁定，本土培訓，僅此一家。</p><p style="text-align:center"><img src="https://static.oschina.net/uploads/space/2023/1009/165830_KvDB_2720166.png" referrerpolicy="no-referrer"></p><p>DevOps 落地實踐訓練營是一個全面提升技術水平的絕佳機會，不僅能幫助您更深入地理解 DevOps，還能提升您的團隊協作能力，拓寬知識視野，並讓您有機會接觸到更多的最佳實踐。我們邀請您積極參與，與業內專家和同行一起共創。我們期待在未來的交流和合作中與您共同成長，創造更多的可能性！</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 09:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261024</guid>
            <link>https://www.oschina.net/news/261024</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Go 1.21.2 & 1.20.9 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Go 近日發佈了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang%2Fgo%2Freleases%2Ftag%2Fgo1.21.2" target="_blank">Go 1.21.2 </a>和<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang%2Fgo%2Freleases%2Ftag%2Fgo1.20.9" target="_blank"> Go 1.20.9 </a>兩個小版本。</p><p>Go 1.21.2 是 1.21 的第 2 個安全補丁，主要涉及一個安全更新：</p><ul><li><strong>cmd/go：line 指令允許在構建期間任意執行</strong></li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang%2Fgo%2Fissues%2F63211" target="_blank">根據 issue 的描述</a>，"//line" 指令可用於繞過對 "//go：cgo_" 指令的限制，允許在兼容期間傳遞阻塞的鏈接器和編譯器標誌。這可能導致在運行"go build"時意外執行任意代碼。</p><p>line 指令需要指令所在文件的絕對路徑，這使得解決此問題變得更加複雜。</p><blockquote><p><img height="931" src="https://static.oschina.net/uploads/space/2023/1008/162018_ZOvZ_2720166.png" width="2124" referrerpolicy="no-referrer"></p></blockquote><p>Go1.21.2 更新涉及到的 issue 如下：</p><p><img src="https://static.oschina.net/uploads/space/2023/1008/162328_0YqZ_2720166.png" referrerpolicy="no-referrer"></p><p>詳情：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgolang%2Fgo%2Fissues%3Fq%3Dmilestone%253AGo1.21.2%2Blabel%253ACherryPickApproved" target="_blank">https://github.com/golang/go/issues?q=milestone%3AGo1.21.2+label%3ACherryPickApproved</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 08:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260842/go-1-21-2</guid>
            <link>https://www.oschina.net/news/260842/go-1-21-2</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[聯想計劃推出 Android PC]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">聯想於近日<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.techradar.com%2Fcomputing%2Fdesktop-pcs%2Flenovo-shifts-direction-with-new-android-based-pcs-and-they-look-powerful" target="_blank">宣佈</a>計劃生產&nbsp;Android PC。該公司將於&nbsp;<span style="background-color:#ffffff">Esper&nbsp;</span>合作，<span style="background-color:#ffffff">重新設計其台式一體機 ThinkCentre M70a，「</span><span style="background-color:#ffffff">這台一體機將代表着聯想進軍 Android 領域的第一步」。Esper 是一家專門提供 Android 定製服務以及設備管理產品的公司。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">ThinkCentre M70a 採用 21.5 英寸 FHD 無邊框顯示屏，</span>現有版本採用英特爾處理器，可以從入門級 i3 一直配置到功能強大的 i9 芯片。M70a 目前採用的是 Windows 11 操作系統，但據透露新版本將採用 Android 系統。</span></p><p><img height="401" src="https://oscimg.oschina.net/oscnet/up-5eda0c1eee499fc80e95d2f72bb2c76eeee.png" width="500" referrerpolicy="no-referrer"></p><p><img height="399" src="https://oscimg.oschina.net/oscnet/up-98d83cf5f92a9b40a586a0f0345868a918a.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">聯想方面表示，ThinkCentre M70a 主要面向企業客戶，希望它能吸引零售和酒店業的企業使用。除此之外，聯想還計劃與 Esper 合作推出基於 Android 系統的 ThinkCentre M70q，以及基於 Windows 系統的 ThinkEdge SE30 和 ThinkCentre M90n-1 IoT。</span></p><p><span style="color:#000000">目前在台式電腦領域最接近 Android 系統的是惠普的 Chromebase AIO 等產品，由於採用了 ChromeOS，它可以通過谷歌 Play 商店運行 Android 應用程序。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 07:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260995/lenovo-esper-android-pc</guid>
            <link>https://www.oschina.net/news/260995/lenovo-esper-android-pc</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 易語言開發的服務器軟件 MODHTTP SERVER]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-modhttp-server" class="anchor" href="https://gitee.com/wxgshuju/modhttp-server#modhttp-server"></a>MODHTTP SERVER</h1><p><img src="https://gitee.com/wxgshuju/modhttp-server/raw/master/fw.png" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p>項目地址：<a href="https://gitee.com/wxgshuju/modhttp-server">https://gitee.com/wxgshuju/modhttp-server</a></p><p><img src="https://gitee.com/wxgshuju/modhttp-server/raw/master/oschina.png" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p>開源中國：<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.oschina.net%2Fp%2Fmodhttp-server">https://www.oschina.net/p/modhttp-server</a></p><h4><a id="user-content-介紹" class="anchor" href="https://gitee.com/wxgshuju/modhttp-server#%E4%BB%8B%E7%BB%8D"></a>介紹</h4><p>MODHTTP SERVER 是採用國產化編程易語言開發的網站服務器軟件。</p><p>該程序集成 Nginx+ASP+PHP+MySQL+Openssl+HOSTS+MYSQL-FORM+Sqlite 數據庫管理器+Access 數據庫管理器;</p><p>支持 HTTP1.1 協議、HTTP2 協議、HTTP3 協議，該工具實現 NGINX 配置可視化編輯、PHP 可視化配置可視化編輯，</p><p>該程序不僅包括 ASP、PHP、Modhttp 調試環境，還包括了 MODHTTP 網頁視圖模塊開發工具、開發手冊等</p><h4><a id="user-content-聲明" class="anchor" href="https://gitee.com/wxgshuju/modhttp-server#%E5%A3%B0%E6%98%8E"></a>聲明</h4><p>本軟件基於開源協議 Apache 發佈，允許轉發，允許第三方修改，本軟件永久免費，終身免費</p><p>軟件開發者：魔帝本尊</p><p>支持平台：Windows</p><p>優點：綠色服務解壓即可安裝，一鍵可視化配置即可使用</p><p>項目狀態：持續更新維護中...</p><p>本軟件已經開源，如需要程序源碼請在 OPEN-SOURCE 中查看.</p><h4><a id="user-content-軟件架構" class="anchor" href="https://gitee.com/wxgshuju/modhttp-server#%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84"></a>軟件架構</h4><p>本軟件需要安裝以下運行庫庫
Microsoft Visual C++ 2015-2022 Redistributable 14.38.32919.0 (2023-08-09)</p><p>x64 <a href="https://gitee.com/link?target=https%3A%2F%2Fdownload.visualstudio.microsoft.com%2Fdownload%2Fpr%2F02a6d5c5-3e10-47de-8025-d97a1321d3e3%2F5F60592799FAE0C82578112D4B621438FFC976AB39D848D8F7623F5705A83E27%2FVC_redist.x64.exe">https://download.visualstudio.microsoft.com/download/pr/02a6d5c5-3e10-47de-8025-d97a1321d3e3/5F60592799FAE0C82578112D4B621438FFC976AB39D848D8F7623F5705A83E27/VC_redist.x64.exe</a></p><p>x86 <a href="https://gitee.com/link?target=https%3A%2F%2Fdownload.visualstudio.microsoft.com%2Fdownload%2Fpr%2F02a6d5c5-3e10-47de-8025-d97a1321d3e3%2FAD573D3198853FC71137A88E51ABDE844B84F29B0CE6DD91BBEC661BC0143B36%2FVC_redist.x86.exe">https://download.visualstudio.microsoft.com/download/pr/02a6d5c5-3e10-47de-8025-d97a1321d3e3/AD573D3198853FC71137A88E51ABDE844B84F29B0CE6DD91BBEC661BC0143B36/VC_redist.x86.exe</a></p><h4><a id="user-content-下載路徑" class="anchor" href="https://gitee.com/wxgshuju/modhttp-server#%E4%B8%8B%E8%BD%BD%E8%B7%AF%E5%BE%84"></a>下載路徑</h4><p>最新版本：32.02</p><p>Gitee（含源碼）：<a href="https://gitee.com/wxgshuju/modhttp-server/raw/master/MODHTTP_SERVER32.02.7z">https://gitee.com/wxgshuju/modhttp-server/raw/master/MODHTTP_SERVER32.02.7z</a></p><p>代碼庫中所有文件經過病毒掃描查殺</p><p><img src="https://gitee.com/wxgshuju/modhttp-server/raw/master/t0.png" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p>.e 文件，是易語言源代碼</p><p>.api 文件，是 MODHTTP 專屬的易語言網頁視圖模塊文件，作用等同 PHP、ASP</p><p>內存加速 1.7.ec  來源為彙編大神，白銀大佬 (2962946246) 無償提供</p><p>e2ee.fne e2ee_staticlib e2ee_static.res 來源為 E2EE 網站迅捷開發羣 (536544662)</p><p>2.3.2 免費版支持庫</p><p>源碼中用到了編碼轉換類，動態內存庫類等...</p><p>本地調試器.exe   是 MODHTTP 專屬視圖模塊的調試工具，可以清晰看到瀏覽器請求到 MODHTTP 8081 端口的各種信息</p><p>如果僅用 PHP、ASP、MySQL 等集成環境，不使用 MODHTTP 網頁視圖模塊文件則無需打開本地調試器.exe</p><h4><a id="user-content-安裝教程" class="anchor" href="https://gitee.com/wxgshuju/modhttp-server#%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B"></a>安裝教程</h4><ol><li><p>解壓後打開&lt;&lt;MODHTTP.exe&gt;&gt;</p></li><li><p>解壓路徑中不允許有空格，建議解壓到根目錄，例如 C:\ D：\等</p></li></ol><h4><a id="user-content-使用説明" class="anchor" href="https://gitee.com/wxgshuju/modhttp-server#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E"></a>使用説明</h4><p><img src="https://gitee.com/wxgshuju/modhttp-server/raw/master/t1.png" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><ol><li>打開&lt;&lt;MODHTTP.exe&gt;&gt;</li></ol><p><img src="https://gitee.com/wxgshuju/modhttp-server/raw/master/t2.png" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><ol start="2"><li><p>首次使用打開後點擊左上角菜單&gt;網站管理;打開網站管理器增填、修改網站目錄，修改完成後點擊【保存配置】按鈕，關閉此窗口</p></li><li><p>點擊啓動,在首頁右側找到擴展項&gt;Nginx&gt;配置調試，點擊【配置調試】按鈕，頁面顯示以下內容則配置成功，可以啓動服務。</p></li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">nginx: the configuration </span><span id="LC2" class="line">conf/nginx.conf syntax is ok</span><span id="LC3" class="line">nginx: configuration file D:\modhttp32.02A202310072215\modhttp-server\nginx/conf</span><span id="LC4" class="line">/nginx.conf test is successful</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><img src="https://gitee.com/wxgshuju/modhttp-server/raw/master/t3.png" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p>4.按需要勾選組件，如 Nginx，Mysql，ASP，PHP 等，在選項前面打勾啓動服務，如需關閉請再次點擊取消√則停止服務</p><p><img src="https://gitee.com/wxgshuju/modhttp-server/raw/master/t4.png" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p>5.啓動服務後點擊右上角【訪問 nginx 頁面】按鈕，開始盡情的寫 BUG 吧</p><p><img src="https://gitee.com/wxgshuju/modhttp-server/raw/master/t5.png" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><h4><a id="user-content-幫助" class="anchor" href="https://gitee.com/wxgshuju/modhttp-server#%E5%B8%AE%E5%8A%A9"></a>幫助</h4><p>鼠標光標移動到功能，文字標題會顯示幫助提示和信息</p>]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 06:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/wxgshuju/modhttp-server</guid>
            <link>https://gitee.com/wxgshuju/modhttp-server</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 聊聊前端框架的未來 Signals]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>Signals 在目前前端框架的選型中遙遙領先！</p></blockquote><p>國慶節前最後一週在 Code Review 新同學的 React 代碼，發現他想通過 memo 和 useCallback 只渲染被修改的子組件部分。事實上該功能在 React 中是難以做到的。因為 React 狀態變化後，會重新執行 render 函數。也就是在組件中調用 setState 之後，整個函數將會重新執行一次。</p><p>React 本身做不到。但是基於 Signals 的框架卻不會這樣，它通過自動狀態綁定和依賴跟蹤使得當前狀態變化後僅僅只會重新執行用到該狀態代碼塊。</p><p>個人當時沒有過多的解釋這個問題，只是匆匆解釋了一下 React 的渲染機制。在這裏做一個 Signals 的梳理。</p><h2>優勢</h2><p>對比 React，基於 Signals 的框架狀態響應粒度非常細。這裏以 Solid 為例：</p><pre><code class="language-js">import { createSignal, onCleanup } from "solid-js";

const CountingComponent = () =&gt; {
  // 創建一個 signal
  const [count, setCount] = createSignal(0);

  // 創建一個 signal
  const [count2] = createSignal(666);

  // 每一秒遞增 1
  const interval = setInterval(() =&gt; {
    setCount((c) =&gt; c + 1);
  }, 1000);

  // 組件銷燬時清除定時器
  onCleanup(() =&gt; clearInterval(interval));

  return (
    &lt;div&gt;
      &lt;div&gt;
        count: {count()}
        {console.log("count is", count())}
      &lt;/div&gt;
      &lt;div&gt;
        count2: {count2()}
        {console.log("count2 is", count2())}
      &lt;/div&gt;
    &lt;/div&gt;
  );
};
</code></pre><p>上面這段代碼在 count 單獨變化時，只會打印 count，壓根不會打印 count2 數據。</p><p>控制枱打印如下所示：</p><ul><li>count is 0</li><li>count2 is 666</li><li>count is 1</li><li>count is 2</li><li>...</li></ul><p>從打印結果來看，Solid 只會在最開始執行一次渲染函數，後續僅僅只會渲染更改過的 DOM 節點。這在 React 中是不可能做到的，React 是基於視圖驅動的，狀態改變會重新執行整個渲染函數，並且 React 完全無法識別狀態是如何被使用的，開發者甚至可以通過下面的代碼來實現 React 的重新渲染。</p><pre><code class="language-js">const [, forceRender] = useReducer((s) =&gt; s + 1, 0);
</code></pre><p>除了更新粒度細之外，使用 Signals 的框架心智模型也更加簡單。其中最大的特點是：開發者完全不必在意狀態在哪定義，也不在意對應狀態在哪渲染。如下所示：</p><pre><code class="language-js">import { createSignal } from "solid-js";

// 把狀態從過組件中提取出來
const [count, setCount] = createSignal(0);
const [count2] = createSignal(666);

setInterval(() =&gt; {
  setCount((c) =&gt; c + 1);
}, 1000);

// 子組件依然可以使用 count 函數
const SubCountingComponent = () =&gt; {
  return &lt;div&gt;{count()}&lt;/div&gt;;
};

const CountingComponent = () =&gt; {
  return (
    &lt;div&gt;
      &lt;div&gt;
        count: {count()}
        {console.log("count is", count())}
      &lt;/div&gt;
      &lt;div&gt;
        count2: {count2()}
        {console.log("count2 is", count2())}
      &lt;/div&gt;
      &lt;SubCountingComponent /&gt;
    &lt;/div&gt;
  );
};
</code></pre><p>上述代碼依然可以正常運行。因為它是基於狀態驅動的。開發者在組件內使用 Signal 是本地狀態，在組件外定義 Signal 就是全局狀態。</p><p>Signals 本身不是那麼有價值，但結合派生狀態以及副作用就不一樣了。代碼如下所示：</p><pre><code class="language-js">import {
  createSignal,
  onCleanup,
  createMemo,
  createEffect,
  onMount,
} from "solid-js";

const [count, setCount] = createSignal(0);

setInterval(() =&gt; {
  setCount((c) =&gt; c + 1);
}, 1000);

// 計算緩存
const doubleCount = createMemo(() =&gt; count() * 2);

// 基於當前緩存
const quadrupleCount = createMemo(() =&gt; doubleCount() * 2);

// 副作用
createEffect(() =&gt; {
  // 在 count 變化時重新執行 fetch
  fetch(`/api/${count()}`);
});

const CountingComponent = () =&gt; {
  // 掛載組件時執行
  onMount(() =&gt; {
    console.log("start");
  });

  // 銷燬組件時執行
  onCleanup(() =&gt; {
    console.log("end");
  });

  return (
    &lt;div&gt;
      &lt;div&gt;Count value is {count()}&lt;/div&gt;
      &lt;div&gt;doubleCount value is {doubleCount()}&lt;/div&gt;
      &lt;div&gt;quadrupleCount value is {quadrupleCount()}&lt;/div&gt;
    &lt;/div&gt;
  );
};
</code></pre><p>從上述代碼可以看到，派生狀態和副作用都不需要像 React 一樣填寫依賴項，同時也將副作用與生命週期分開 (代碼更好閲讀)。</p><h2>實現機制</h2><p>細粒度，高性能，同時還沒有什麼限制。不愧被譽為前端框架的未來。那麼它究竟是如何實現的呢？</p><p>本質上，Signals 是一個在訪問時跟蹤依賴、在變更時觸發副作用的值容器。</p><p>這種基於響應性基礎類型的範式在前端領域並不是一個特別新的概念：它可以追溯到十多年前的 Knockout observables 和 Meteor Tracker 等實現。Vue 的選項式 API 也是同樣的原則，只不過將基礎類型這部分隱藏在了對象屬性背後。依靠這種範式，Vue2 基本不需要優化就有非常不錯的性能。</p><h3>依賴收集</h3><p>React useState 返回當前狀態和設置值函數，而 Solid 的 createSignal 返回兩個函數。即：</p><pre><code class="language-TypeScript">type useState = (initial: any) =&gt; [state, setter];

type createSignal = (initial: any) =&gt; [getter, setter];
</code></pre><p>為什麼 createSignal 要傳遞 getter 方法而不是直接傳遞對應的 state 值呢？這是因為框架為了具備響應能力，Signal 必須要收集誰對它的值感興趣。僅僅傳遞狀態是無法提供 Signal 任何信息的。而 getter 方法不但返回對應的數值，同時執行時創建一個訂閲，以便收集所有依賴信息。</p><h3>模版編譯</h3><p>要保證 Signals 框架的高性能，就不得不結合模版編譯實現該功能，框架開發者通過模版編譯實現動靜分離，配合依賴收集，就可以做到狀態變量變化時點對點的 DOM 更新。所以目前主流的 Signals 框架沒有使用虛擬 DOM。而基於虛擬 DOM 的 Vue 目前依靠編譯器來實現類似的優化。</p><p>下面我們先看看 Solid 的模版編譯：</p><pre><code class="language-js">const CountingComponent = () =&gt; {
  const [count, setCount] = createSignal(0);
  const interval = setInterval(() =&gt; {
    setCount((c) =&gt; c + 1);
  }, 1000);

  onCleanup(() =&gt; clearInterval(interval));
  return &lt;div&gt;Count value is {count()}&lt;/div&gt;;
};
</code></pre><p>對應編譯後的的組件代碼。</p><pre><code class="language-js">const _tmpl$ = /*#__PURE__*/ _$template(`&lt;div&gt;Count value is `);

const CountingComponent = () =&gt; {
  const [count, setCount] = createSignal(0);
  const interval = setInterval(() =&gt; {
    setCount((c) =&gt; c + 1);
  }, 1000);

  onCleanup(() =&gt; clearInterval(interval));
  return (() =&gt; {
    const _el$ = _tmpl$(),
      _el$2 = _el$.firstChild;
    _$insert(_el$, count, null);
    return _el$;
  })();
};
</code></pre><ul><li>執行 _tmpl$ 函數，獲取對應組件的靜態模版</li><li>提取組件中的 count 函數，通過 _$insert 將狀態函數和對應模版位置進行綁定</li><li>調用 setCount 函數更新時，比對一下對應的 count，然後修改對應的 _el$ 對應數據</li></ul><h2>其他</h2><p>大家可以看一看使用 Signals 的主流框架：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcn.vuejs.org%2Fapi%2Freactivity-core.html%23ref" target="_blank">Vue Ref</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fangular.io%2Fguide%2Fsignals" target="_blank">Angular Signals</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpreactjs.com%2Fguide%2Fv10%2Fsignals%2F" target="_blank">Preact Signals</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.solidjs.com%2Fdocs%2Flatest%2Fapi%23createsignal" target="_blank">Solid Signals</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fqwik.builder.io%2Fdocs%2Fcomponents%2Fstate%2F%23usesignal" target="_blank">Qwik Signals</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsvelte.dev%2Fblog%2Frunes" target="_blank">Svelte 5(即將推出)</a></li></ul><p>不過目前來看 React 團隊可能不會使用 Signals。</p><ul><li>Signals 性能很好，但不是編寫 UI 代碼的好方式</li><li>計劃通過編譯器來提升性能</li><li>可能會添加類似 Signals 的原語</li></ul><p>PREACT 作者編寫了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2F%40preact%2Fsignals-react" target="_blank">@preact/signals-react </a> 為 React 提供了 Signals。不過個人不建議在生產環境使用。</p><p>篇幅有限，後續個人會解讀 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.npmjs.com%2Fpackage%2F%40preact%2Fsignals-core" target="_blank">@preact/signals-core</a> 的源碼。</p><h2>參考資料</h2><ul><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7137100589208436743%3FsearchId%3D2023100323265799EF4CF92C95049F6276" target="_blank">精讀《SolidJS》</a></p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.solidjs.com%2F" target="_blank">Solid.js</a></p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsvelte.dev%2Fblog%2Frunes" target="_blank">Introducing runes</a></p></li></ul><h2>鼓勵一下</h2><p>如果你覺得這篇文章不錯，希望可以給與我一些鼓勵，在我的 github 博客下幫忙 star 一下。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fwsafight%2FpersonBlog" target="_blank">博客地址</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 06:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/wsafight/blog/10115779</guid>
            <link>https://my.oschina.net/wsafight/blog/10115779</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[兩行代碼解決大語言模型對話侷限！港中文賈佳亞團隊聯合 MIT 發佈超長文本擴展技術]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">中途迷失、模型偷懶、上下文越長大模型越笨......如果體驗過大語言模型產品,用戶多少會對文本輸入長度帶來的限制有所感觸，比如當想和大模型討論一些稍長的內容，需要拆分輸入，而前面輸入的要點，很快就會被大模型忘記。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">這是典型的大語言模型對話缺陷！就像先天有注意力缺陷的兒童，難以專注看完一本新書。而缺陷的關鍵，在於模型缺乏長文本處理能力。這個局面如今被打破。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">近日，賈佳亞團隊聯合 MIT 發佈的新技術和新模型悄然登上各大開源網站的熱榜：hugging face 熱榜第一、paperwithcode 熱度第一，Github 全部 python 項目熱度第五、github stars 一週內破千，Twitter 上的相關技術帖子瀏覽量近 18 萬......</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><img src="https://p7.itc.cn/q_70/images01/20231009/02802a3fa205413abde6f1ea42885d02.png" referrerpolicy="no-referrer"></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">github stars 已達 1.3k</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><img src="https://p5.itc.cn/q_70/images01/20231009/598154ce3152480c8164e0cfab8efabb.png" referrerpolicy="no-referrer"></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">Twitter 上的相關技術帖子瀏覽量近 18 萬</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">這項名為 LongLoRA 的技術實用但卻簡單得令人驚訝：只需兩行代碼、一台 8 卡 A100 機器，便可將 7B 模型的文本長度拓展到 100k tokens，70B 模型的文本長度拓展到 32k tokens；同時，該研究團隊還發布了首個擁有 70B 參數量的長文本對話大語言模型 LongAlpaca。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><strong>全球首個 70B 長文本大語言模型發佈</strong></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">LongLoRA 的提出，讓全球大語言模型的對話缺陷第一次得到解決，自此，幾十頁的論文、幾百頁的報告、鴻篇鉅製不再成為大模型盲區。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">對此，有專業人士激動地表示，LongLoRA 是大語言模型迷宮中的希望之燈！它代表着業界對長文本大語言模型的重新思考和關注，有效擴展了大語言模型的上下文窗口，允許模型考慮和處理較長的文本序列，是大語言模型的革新性發明。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><img src="https://p9.itc.cn/q_70/images01/20231009/cbe10d2967664215bffee1abef01d462.png" referrerpolicy="no-referrer"></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">除了技術革新外，大語言模型處理長文本問題的一大難點還在於缺少公開的長文本對話數據。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">為此，研究團隊特意收集了 9k 條長文本問答語料對，包含針對名著、論文、深度報道甚至財務報表的各類問答。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">光會回答長問題還不夠，該團隊又挑選了 3k 的短問答語料與 9K 的長問答語料混合訓練，讓長文本大模型同時具備短文本對話能力。這個完整的數據集被稱為 LongAlpaca-12k，目前已經開源。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">在 LongAlpaca-12k 數據集基礎上，研究團隊對不同參數大小 7B、13B、70B 進行了訓練和評測，開源模型包括 LongAlpaca-7B, LongAlpaca-13B 和 LongAlpaca-70B。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><strong>看小説、改論文、指點經濟堪稱全能王</strong></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">話不多説，盲選幾個 demo,一起看看應用了 LongLoRA 技術疊加 12K 問答語料的大模型 LongAlpaca 效果。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><img src="https://p3.itc.cn/q_70/images01/20231009/e0807c4fbd0e428da6cc72b9e4c566dc.png" referrerpolicy="no-referrer"></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">讓系統新讀一篇論文，並根據 ICLR 的審查指南，對其提出修改意見，從而提升該論文的接收率。LongAlpaca 的意見是：通過更精確地闡明新穎性，提供更嚴格和更有對比性的實驗結果 (包括具體的數據集和指標)、更廣泛的應用和未來發展方向，重點呈現關鍵貢獻和影響，論文被接受的機會將得到提高。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><img src="https://p3.itc.cn/q_70/images01/20231009/783214e5577d4580a8f89721e98f148e.png" referrerpolicy="no-referrer"></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">現在，讓系統讀兩篇新的不同的論文，讓 LongAlpaca 概括 ICLR 和 CVPR 兩個會議之間的風格區別。LongAlpaca 總結認為，CVPR 論文傾向更具結構性和實驗性的風格，專注於實用性和技術性。而 ICLR 的論文風格更加靈活，側重關鍵的理論分析和數學推導，而非標準格式。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">可以看出，經過訓練的 LongAlpaca 模型已經可以很輕鬆地接受新的長篇學術論文，在學術相關問題的回答上相當精準。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">接下來，再看看 LongAlpaca 模型在頗高閲讀和理解門檻的經濟領域的解讀表現。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><img src="https://p3.itc.cn/q_70/images01/20231009/e6eb1abcb4944627935707701425aa11.png" referrerpolicy="no-referrer"></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><img src="https://p5.itc.cn/q_70/images01/20231009/a6f419f9eb03497e9aa357e147b61085.png" referrerpolicy="no-referrer"></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">根據國際貨幣基金組織從 2012 年到 2023 年的全球經濟展望的概述合集，對經濟形勢進行逐年總結以及對未來經濟趨勢進行預測。LongAlpaca 告訴我們，2023 年全球經濟形勢不明朗，跟 2022 年相比，增長預計放緩;未來幾年，全球經濟擴張速度偏溫和並將低於預期，而地緣政治緊張、金融市場波動等大的挑戰依然存在，需通過多邊合作和結構性改革小心應對。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">LongAlpaca 還可以讀新的長篇小説，讀完後對內容進行分析。下面選取的對比模型是 13B 參數的 LongAlpaca 和 Llama2，且看各自表現。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><img src="https://p1.itc.cn/q_70/images01/20231009/72aeb31905df4635a8f3001fced32892.png" referrerpolicy="no-referrer"></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">名著《西遊記》中，為什麼孫悟空在大鬧天宮時很厲害，但取，經路上卻屢屢受挫?LongAlpaca 給出了 5 點原因，大概可總結為 「孫悟空的不成熟、強大的對手、力量的限制、敵人的欺騙、最初，缺少同伴等因素導致了他在旅途中的失敗。但隨着時間推移，他獲，得了智慧、經驗和戰友，使他最終戰勝了最強大的敵人。」</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">而 Llama2 的回答較為簡單。「雖然他確實大鬧天宮，但説他代表着不敗的力量並不一定準確。事實上，他最終在西遊記中被強大的唐三藏打敗。」Llama2 沒有給出正確答案，並且還提出需要更多的內容信息。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><img src="https://p0.itc.cn/q_70/images01/20231009/a29c650d3a144a18afaf5e7b4d374559.png" referrerpolicy="no-referrer"></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">這一次讓系統新讀一次《三體》，然後問第一部中，葉文潔為什麼要聯繫外星人，而後期又為什麼後悔？LongAlpaca 認為，葉文潔最初接觸外星人是出於理想主義和復仇，但隨着時間的推移，她對人類的看法發生了變化，意識到自己可能給全人類帶來的危險，她的悔恨與日俱增。回答得十分清晰。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">而 Llama2 的回答則是，「通過與外星人的互動，她希望能更深入地瞭解宇宙的本質，以及自己在宇宙中的位置。葉文潔逐漸意識到，外星人和他們的技術並不能解決她的問題。」回答籠統，之後開始對小説整體進行評論，答非所問。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">從模型給出的答案可發現，一些模型如 Llama2 [2] 可能在預訓練過程中見過相關小説，但如果在提問時進行僅根據小説題目進行短文本提問的話，回答並不理想。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">兩個模型的回答對比，高下立見。LongAlpaca 改學術論文、點評全球經濟大勢和讀小説，都是一把好手，完勝 Llama2。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><strong>兩行代碼和三個關鍵結論</strong></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">Llama2 可以説是 AI 社區內最強大的開源大模型之一，行業位置領先，LongAlpaca 居然可以完勝。其背後的 LongLoRA 技術成功引起網友們的注意，到底是怎麼做到的？</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">原來大語言模型對長文本處理過程中，計算量的主要開銷集中在自注意力機制 (self-attention)，其開銷隨着文本長度成平方次地增加。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">針對這個問題，研究團隊提出 LongLoRA 技術，並用分組和偏移的方式來對全局自注意力機制進行模擬。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><img src="https://p0.itc.cn/q_70/images01/20231009/e9c924b5c8564afa9f24a208a98eeb8c.png" referrerpolicy="no-referrer"></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">簡單來説，就是將長文本對應的 tokens 拆分成不同的組，在每組內部做自注意力計算，而分組的方式在不同注意力頭 (attention head) 上有所偏移。這樣的方式既可以大幅度節約計算量，又可以維持全局感受野的傳遞。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">而這個實現方法也非常簡潔，僅兩行代碼即可完成！</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><img src="https://p9.itc.cn/q_70/images01/20231009/096cdf76e3394df796ed04057a1cb6c2.png" referrerpolicy="no-referrer"></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">LongLoRA 還探索了低秩訓練的方式。原有的低秩訓練方式，如 LoRA [5]，無法在文本長度遷移上取得良好的效果。而 LongLoRA 在低秩訓練的基礎上，引入嵌入層 (Embedding layer 和 Normalization layers) 進行微調，從而達到可以和全參數微調 (Full fine-tune) 逼近的效果。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em"><img src="https://p7.itc.cn/q_70/images01/20231009/c684b6990a394aacb2859a1f064e09b9.png" referrerpolicy="no-referrer"></p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">進行不同長度文本擴展和訓練時，LongLoRA、LoRA 和全參數微調不同技術的具體效果如何，可以參考三個維度表現：</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">在 Perplexity-困惑度上，原有 LoRA 方法的性能在不斷惡化，而 LongLoRA 和全參數微調都能在各種文本長度下維持很好的效果；</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">在顯存消耗上，相比於全參數微調，LongLoRA 和原有 LoRA 都有大幅度的節省。例如，對於 8k 長度的模型訓練，相比於全參數微調，LongLoRA 將顯存消耗從 46.3GB 降低到 25.6GB；</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">在訓練時間上，對於 64k 長度的模型訓練，相比於常規 LoRA，LongLoRA 將訓練時間從 90～100 小時左右降低到 52.4 小時，而全參數微調超過 1000 小時。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">極簡的訓練方法、極少的計算資源和時間消耗，以及極佳的準確性，令 LongLoRA 大規模推廣成為可能。目前，相關技術與模型已全部開源，感興趣的用戶們可以自己部署感受。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">值得一提的是，這是賈佳亞團隊繼 8 月 9 日發佈的「可以分割一切」的多模態大模型 LISA 後的又一力作。相距不過短短兩個月，不得不説，這研究速度和能力跟 LongLoRA 一樣驚人。</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">代碼和 Demo 地址：https://github.com/dvlab-research/LongLoRA</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">論文地址：https://arxiv.org/pdf/2309.12307.pdf</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">參考文獻</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">[1] LLaMA team. Llama: Open and efficient foundation language models. Arxiv, 2302.13971, 2023a.</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">[2] Llama2 team. Llama 2: Open foundation and fine-tuned chat models. Arxiv, 2307.09288, 2023b.</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">[3] Shouyuan Chen, Sherman Wong, Liangjian Chen, and Yuandong Tian. Extending context window of large language models via positional interpolation. Arxiv, 2306.15595, 2023.</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">[4] Szymon Tworkowski, Konrad Staniszewski, Mikolaj Pacek, Yuhuai Wu, Henryk Michalewski, and Piotr Milos. Focused transformer: Contrastive training for context scaling. Arxiv, 2307.03170, 2023.</p><p style="color:#191919; margin-left:1.8em; margin-right:0.63em">[5] Edward J. Hu, Yelong Shen, Phillip Wallis, Zeyuan Allen-Zhu, Yuanzhi Li, Shean Wang, Lu Wang, and Weizhu Chen. Lora: Low-rank adaptation of large language models. In ICLR, 2022.</p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 05:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260968</guid>
            <link>https://www.oschina.net/news/260968</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[百度加緊訓練文心大模型 4.0，或將於 10 月 17 日發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>據科創板日報報道，百度正在加緊訓練文心大模型 4.0，或將在 10 月 17 日百度世界大會上發佈。</p><p>據消息人士透露，文心大模型 4.0 的進展比預期快很多，將是基礎模型的大升級，<strong>理解、生成、邏輯、記憶</strong>四大核心能力都將提升，尤其在邏輯推理、代碼和數學等方面提升最明顯。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-741c4810e55393b362a8f9a60b8c98a65dd.png" referrerpolicy="no-referrer"></p><p>今年 8 月，<a href="https://www.oschina.net/news/256156" target="_blank">百度宣佈文心一言率先向全社會全面開放</a>，所有用戶都能下載文心一言 App 或在官網體驗。</p><hr><p>延伸閲讀：<a href="https://www.oschina.net/news/256949">挑戰 ChatGPT，國產有這 8 款 AI 大模型產品</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 04:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260957</guid>
            <link>https://www.oschina.net/news/260957</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[雲原生週刊：Docker 推出 Docker Debug]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>開源項目推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fschemahero%2Fschemahero" target="_blank">SchemaHero</a></h3><p>SchemaHero 是一個 Kubernetes Operator，用於各種數據庫的聲明式架構管理。SchemaHero 有以下目標：</p><ul><li>數據庫表模式可以表示為可以部署到集羣的 Kubernetes 資源。</li><li>可以編輯數據庫模式並將其部署到集羣。SchemaHero 將計算所需的更改（<code>ALTER TABLE</code> 語句）並應用它。</li><li>SchemaHero 可以管理部署到集羣或集羣外部的數據庫（RDS、Google CloudSQL 等）。</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fproject-copacetic%2Fcopacetic" target="_blank">copacetic</a></h3><p>copacetic 是一款基於 buildkit 並用 Go 編寫的 CLI 工具，可用於根據 Trivy 等流行工具的漏洞掃描結果直接修補容器鏡像。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubernetes-sigs%2Fkueue" target="_blank">Kueue</a></h3><p>Kueue 是一套用於作業隊列的 API 和控制器。它是作業級管理器，可決定何時允許作業啓動（如創建 pod），何時停止作業（如刪除活動 pod）。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Foslabs-beta%2Fspyglass" target="_blank">Spyglass</a></h3><p>Spyglass 是一款開源工具，允許用戶在一個集中位置監控 Kubernetes 集羣指標並跟蹤集羣部署成本。</p><h2>文章推薦</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.devops.dev%2Fsurviving-2400-hours-of-multi-tenancy-what-i-know-now-9c48694aa75d" target="_blank">多租戶 2400 小時的生存之道： 我現在知道了什麼</a></h3><p>這篇文章是關於作者在處理多租戶環境下的經驗和教訓的分享。作者介紹了他們所面臨的挑戰：由於項目請求的激增，現有的基礎設施無法滿足存儲需求。為瞭解決這個問題，他們開始尋找一個強大的多租戶解決方案。</p><p>作者詳細介紹了他們的多租戶方法和使用 vcluster 的經驗。他們採用了 Virtual-Kubernetes-as-a-Service (VKaaS) 的模型，通過在共享集羣中運行 vcluster 來為新項目提供無縫的啓動體驗。他們為每個團隊分配了一個獨立的 Argo CD 實例，以保持單一集羣使用的標準。他們努力提供儘可能多的自治權給團隊，同時保持多租戶架構的完整性。</p><p>文章還介紹了他們的工作流程和實施策略。他們利用節點池來區分共享工作負載和項目相關的非關鍵應用程序，並詳細解釋了他們在共享集羣中的工作方式。他們還強調了災難恢復方案對於多租戶方法的重要性，並提供了一些實施策略的示例。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.devopsschool.com%2Fblog%2Fkubernetes-tutorials-what-is-preemption-in-kubernetes-with-example%2F" target="_blank">Kubernetes 教程：Kubernetes 中的 Preemption（搶佔）機制</a></h3><p>這篇文章是關於 Kubernetes 中的 Preemption（搶佔）機制的介紹和示例。Preemption 是一種允許高優先級 Pod 搶佔低優先級 Pod 的機制，當資源不足以調度高優先級 Pod 時使用。文章首先介紹了 PriorityClass，它是一個非命名空間對象，定義了優先級類名稱與優先級整數值的映射關係。數值越高，優先級越高。</p><p>文章還介紹了兩個內置的優先級類：system-cluster-critical 和 system-node-critical，它們分別具有值 2000001000 和 2000000000，確保這些 Pod 始終被首先調度，並且永遠不會被搶佔。文章通過一個示例説明瞭 Preemption 在 Kubernetes 中的工作原理。文章還提供瞭如何在 Pod 中設置 Preemption 策略的示例。</p><h2>雲原生動態</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cncf.io%2Fblog%2F2023%2F10%2F05%2Funveiling-litmuschaos-3-0-embracing-evolution-in-chaos-engineering%2F" target="_blank">LitmusChaos 3.0 發佈</a></h3><p>LitmusChaos 3.0 已正式發佈，此版本主要變化如下：</p><ul><li>改進的用戶體驗</li><li>混沌基礎設施組織的環境</li><li>用於簡化實驗調整的 Chaos Studio</li><li>彈性探針現在支持即插即用</li><li>支持 MongoDB 高可用性</li></ul><p>發行説明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flitmuschaos%2Flitmus%2Freleases%2Ftag%2F3.0.0%E3%80%82" target="_blank">https://github.com/litmuschaos/litmus/releases/tag/3.0.0。</a></p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cncf.io%2Fblog%2F2023%2F10%2F03%2Fcncf-archives-the-service-mesh-interface-smi-project%2F" target="_blank">服務網格接口（SMI）項目進入歸檔階段</a></h3><p>CNCF TOC（技術監督委員會，Technical Oversight Committee）已投票批准將 SMI（Service Mesh Interface，服務網格接口）項目歸檔。</p><p>SMI 的創建是為了為 Kubernetes 上的服務網格提供標準接口和最常見服務網格使用案例的基本功能集。它於 2020 年 3 月被接受為 CNCF 沙箱項目。</p><p>SMI 是第五個被 CNCF 歸檔的項目。開源項目有其生命週期，項目可能因各種原因而不再活躍。還有一些情況是項目可能不再希望得到 CNCF、維護人員或 TOC 的支持。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fpress%2Fannouncing-openpubkey-project" target="_blank">Linux 基金會、BastionZero 和 Docker 宣佈啓動 OpenPubkey 項目</a></h3><p>Linux 基金會、BastionZero 和 Docker 宣佈 OpenPubkey 作為 Linux 基金會開源項目的啓動。與 OpenPubkey 的啓動同時，BastionZero 宣佈將 OpenPubkey 集成到 Docker 容器簽名中，以通過零信任無密碼身份驗證來保護開源軟件生態系統。</p><p>OpenPubkey 協議是作為 BastionZero 安全基礎設施訪問產品的一部分開發的。OpenPubkey 使用戶能夠通過將 OpenID Connect 身份提供者（Identity Provider，IdP）轉換為證書頒發機構（Certificate Authority，CA）來安全準確地將加密密鑰與用戶和工作負載綁定。隨着這個集成的推出，Docker 用戶可以增強軟件供應鏈安全性。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevclass.com%2F2023%2F10%2F04%2Fdocker-introduces-seems-like-magic-container-debug-tool-and-cloud-driven-build-service%2F" target="_blank">Docker 推出容器調試工具和雲驅動的構建服務</a></h3><p>在 2023 年的 DockerCon 活動上，Docker 推出了名為 Docker Debug 的容器調試工具，推出了下一代雲輔助的 Docker Build 功能，Docker Scout 漏洞掃描工具也正式發佈。</p><p>Docker Debug 解決了在容器中運行應用程序時出現故障時很難跟蹤問題的問題。它是一個容器，包含開發人員所需的調試工具，它會掛載故障容器的文件系統，並提供了更好的用戶體驗，幫助開發人員理解問題所在。</p><p>Docker Scout 是一個漏洞掃描工具，可以找出應用程序所使用的庫中存在的已報告漏洞。它與第三方工具 Sysdig 集成，可以在運行時顯示實際使用的代碼，並幫助開發人員優先處理與其應用相關的漏洞。</p><p>下一代 Docker Build 是一個將構建過程從本地轉移到雲端的工具。通過一條命令，開發人員可以將構建過程交給雲端完成，從而加快構建速度。這得益於雲端使用更強大的計算資源以及緩存機制的支持。</p><blockquote><p>本文由博客一文多發平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 發佈！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 03:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10116369</guid>
            <link>https://my.oschina.net/u/4197945/blog/10116369</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[當尺度感知調製遇上 Transformer，會碰撞出怎樣的火花？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>作者 ｜ AFzzz</p><p><img src="https://oscimg.oschina.net/oscnet/up-9688cc4b384ef1a2912634e0129648db315.png" alt="" referrerpolicy="no-referrer"></p><h2>1 文章介紹</h2><p>近年來，基於 Transformer 和 CNN 的視覺基礎模型取得巨大成功。有許多研究進一步地將 Transformer 結構與 CNN 架構結合，設計出了更為高效的 hybrid CNN-Transformer Network，但它們的精度仍然不盡如意。本文介紹了一種新的基礎模型 SMT（Scale-Aware Modulation Transformer），它以更低的參數量（params）和計算量（flops）取得了大幅性能的提升。</p><p>不同於其他 CNN-Transformer 結合的方案，SMT 基於卷積計算設計了<strong>一個新穎的輕量尺度感知調製單元 Scale-Aware Modulation（SAM）</strong> ，它能夠捕捉多尺度特徵的同時擴展感受野，進一步增強卷積調製能力。此外，SMT 提出了一種<strong>進化混合網絡 Evolutionary Hybrid Network（EHN）</strong> ，它能夠有效地模擬網絡從淺層變深時捕捉依賴關係從局部到全局的轉變，從而實現更優異的性能。在 ImagNet、COCO 以及 ADE20k 等任務上都驗證了該模型的有效性。<strong>值得一提的是，SMT 在 ImageNet-22k 上預訓練後以僅僅 80.5M 的參數量在 ImageNet-1k 上達到了 88.1% 的精度。</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-f4be367414a72c6d4c94a5fd903dea0125c.png" alt="" referrerpolicy="no-referrer"></p><h2>2 出發點</h2><ul><li><p>對於多層級的網絡架構來説，由於淺層特徵圖分辨率大的原因，自注意力的二次複雜性會帶來嚴重的計算負擔。因此，如何為淺層 stage 設計高效的 attention 計算機制是十分重要的。</p><p>回顧以往的大部分 Hierarchical（Multi-scale）的模型，以 Swin 為代表，以及後續的 CvT，PvT，Shunted Transformer 等等，它們的主要貢獻點都是設計出了一種更高效的 attention 計算單元，比如 local attention，lightweight convolution attention 等等。</p></li><li><p>ViT 論文中提出，Transformer 模型的注意力捕捉依賴關係為，淺層捕捉 local 信息，深層捕捉 global 信息，而這種特性在多層級網絡架構上也會出現。</p><p>作者認為，模擬並建模這種捕捉依賴過渡是重要且有效的。</p></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-07e0ea4d6cb05fd437951f9be3d1577e60b.png" alt="" referrerpolicy="no-referrer"></p><h2>3 SMT 框架算法</h2><p><img src="https://oscimg.oschina.net/oscnet/up-53c347eac02866a8ce9f8e0747e1eca5f0d.png" alt="" referrerpolicy="no-referrer"></p><p>SMT 的總體框架如圖 1 所示。整個網絡包括四個階段，每個階段的下采樣率為{4, 8, 16, 32}。我們並非和 FocalNet 一樣構建一個無注意力機制的網絡，而是首先在前兩個階段採用文章提出的尺度感知調製（SAM），然後在倒數第二個階段中依次堆疊一個 SAM Block 和一個多頭自注意力（MSA） Block，以建模從捕捉局部到全局依賴關係的轉變。對於最後一個階段，我們僅使用 MSA 塊來有效地捕捉長距離依賴關係。</p><h3>3.1 Scale-Aware Modulation 模塊</h3><p><img src="https://oscimg.oschina.net/oscnet/up-af9a13c41ea967982c091cce0b4aac2f242.png" alt="" referrerpolicy="no-referrer"></p><ul><li><strong>多頭混合卷積 MHMC（Multi-Head Mixed Convolution）</strong></li></ul><p>在 MHMC 中，我們引入了具有不同卷積核大小的多個卷積層，使其能夠捕捉多個尺度上的空間特徵。當我們將 N head 設置得較大時，能夠引入大卷積核來擴大感受野，增強其建模長距離依賴關係的能力。如圖 2(b) 所示，MHMC 將輸入通道分為 N 個頭，對每個頭應用獨立的深度可分離卷積。我們將卷積核大小初始化為 3x3，並逐頭遞增。這種方法使得我們能夠人為的通過調整頭的數量來調節感受野的範圍和多粒度信息。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6af95c745f4f313605d63309b5f471adc73.png" alt="" referrerpolicy="no-referrer"></p><ul><li><strong>多尺度感知聚合 SAA（Scale-Aware Aggregation）</strong></li></ul><p>為了增強 MHMC 中多個頭之間的信息交互，我們引入了一種新的輕量化聚合模塊，稱為多尺度感知聚合（SAA），如圖 2(c) 所示。SAA 首先對 MHMC 生成的不同粒度的特徵進行重組和分組。具體而言，我們從每個頭中選擇一個通道來構建一個組，然後在每個組內進行 up-down 的特徵融合，從而增強多尺度特徵的多樣性。值得注意的是，Num_group = C / N_head，C 為輸入通道數，這意味着組的數量與 MHMC 中頭的數量成反比，每個組裏只包含 N 個特徵通道。隨後，我們使用 1x1 卷積進行組內-組間模式的跨組信息融合，從而實現輕量且高效的聚合效果。</p><p><img src="https://oscimg.oschina.net/oscnet/up-fa073ddec726a81685efb58c66e2582adc1.png" alt="" referrerpolicy="no-referrer"></p><p>如圖 3 所示，我們可視化出 SAA 前和 SAA 後的特徵圖，可以觀察到 SAA 模塊加強了語義相關的低頻信號，並準確地聚焦於目標物體最重要的部分。與聚合之前的卷積映射相比，SAA 模塊展示了更好的能力來捕捉和表示視覺識別任務的關鍵特徵。</p><p><img src="https://oscimg.oschina.net/oscnet/up-5fd6c072492140075ffca7fc81b8d04de41.png" alt="" referrerpolicy="no-referrer"></p><ul><li><strong>尺度感知調製器 SAM（Scale-Aware Modulation）</strong></li></ul><p>如圖 2(a) 所示，在使用 MHMC 捕捉多尺度空間特徵並通過 SAA 進行聚合後，我們獲得一個輸出特徵圖，我們稱之為調製器 Modulator。然後，我們使用標量乘積採用這個調製器來調製 value V。</p><p><img src="https://oscimg.oschina.net/oscnet/up-1076102f25eb2d8f13b60d04633b5460c4d.png" alt="" referrerpolicy="no-referrer"></p><h3>3.2 混合進化網絡 Evolutionary Hybrid Network</h3><p><img src="https://oscimg.oschina.net/oscnet/up-2c7f96d61daf6d0c0b91670c1198e60ba98.png" alt="" referrerpolicy="no-referrer"></p><p>在本節中，我們提出根據網絡的捕捉範圍依賴關係的變化模式重新分配適當的計算模塊，以實現更好的計算性能。我們提出了兩種混合堆疊策略用於倒數第二個階段，(i) 依次堆疊一個 SAM 塊和一個 MSA 塊。(ii) 在 stage 的前半部分使用 SAM 塊，在後半部分使用 MSA 塊。為了評估這兩種混合堆疊策略的有效性，我們在 ImageNet-1K 上評估了它們的 top-1 準確率。可以看到，(i) 混合堆疊策略更加有效。</p><p><img src="https://oscimg.oschina.net/oscnet/up-339767d0b9c4a55b9298904a5d9171562b9.png" alt="" referrerpolicy="no-referrer"></p><p>不僅如此，我們還計算了倒數第二個階段中 MSA 塊的相對感受野。值得注意的是，淺層 layer 的相對感受野開始階段有一個輕微的下降趨勢。作者認為這種下降可以歸因於 SAM 對早期 MSA Block 的影響，我們將這種現象稱為計算單元磨合適應期。而隨着網絡的加深，我們可以看到感受野呈平穩上升的趨勢，這表明我們提出的進化混合網絡有效地模擬了從局部到全局依賴捕捉的過渡。</p><p><img src="https://oscimg.oschina.net/oscnet/up-8f3c21623fff8bcda5df6a79d0a14a8918c.png" alt="" referrerpolicy="no-referrer"></p><h2>4 實驗</h2><h3>4.1 分類實驗</h3><p><img src="https://oscimg.oschina.net/oscnet/up-8d488d75e796b97b54cee5d2f21eaab63ba.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-0b7d3d0ff76a3d5ade3fa45d963c46d9b04.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-558613af385ccdc706134277fb52196b0f4.png" alt="" referrerpolicy="no-referrer"></p><p>上表給出了不同模型大小在 ImageNet-1k 上的性能對比，從中可以看到：</p><ul><li>SMT 在 tiny、small 和 base 規模上都以更低的參數量和計算量達到了更優的性能；</li><li>SMT-B 在僅僅 32.0M 和 7.7GFlops 下就取得了 84.3% 的精度，甚至比大多數 80M 和 15G 以上的模型更好。</li><li>當採用 ImageNet-22k 與大尺度數據預訓練之後，SMT-L 精度提升到 87.1% 和 88.1%，優於現有的 CNN 和 Transformer 模型。<strong>特別地，SMT-L 用 4x 低的參數量和 3x 低的計算量就超過了 InternImage-XL(88.0%)</strong></li><li>這些結果表明 SMT 是一個 scalability 能力很強的模型，在各種尺度參數下都具有優異的性能。</li></ul><h3><strong>4</strong>.2 目標檢測實驗</h3><p><img src="https://oscimg.oschina.net/oscnet/up-a821c93b982a12ec1c606a55f466e9dd394.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-b7aaf64cebf88d47c1e2a5729fe4338091c.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-5821b176f43f9ac39fd69bb6afe6c189926.png" alt="" referrerpolicy="no-referrer"></p><p>上述三個表格是在多個檢測框架上的性能對比實驗，可以看到</p><ul><li>在多個檢測框架上，包括 Mask R-CNN、Cascade R-CNN、RetinaNet、Sparse R-CNN、ATSS 和 DINO 中，SMT 都獲得了更優的性能。</li><li>對於 Mask R-CNN，<strong>在 1x 和 3x 中，SMT-B 分別比 Swin-B 高 2.1mAP 和 1.3mAP，同時參數量只有 Swin-B 的一半。</strong></li><li>對於 DINO 檢測框架，<strong>SMT-S 僅僅用 39.9M 的參數量就達到了 54.0mAP</strong>，超越了現有同等規模大小的其他模型。</li></ul><h3><strong>4</strong>.3 分割實驗</h3><p><img src="https://oscimg.oschina.net/oscnet/up-690b693f0e3f3dd3a355ac034a56bed1967.png" alt="" referrerpolicy="no-referrer"></p><p>上表給出了 ADE20K 分割任務上的性能對比，從中可以看到當我們使用 uperNet 框架時，SMT 在不同尺度下擁有更低的參數量和計算量，同時精度也優於其他模型。</p><h3>4.4 消融實驗</h3><p><img src="https://oscimg.oschina.net/oscnet/up-f3060b4818bf5c64f1eca9716a3e9f6ac68.png" alt="" referrerpolicy="no-referrer"></p><h2>5 總結與展望</h2><p>總的來説，在視覺基礎模型 backbone 的探索路程中，我們有着對未來的展望：</p><ul><li>以視覺 Transformer 為例，除了在自監督學習等預訓練中依舊用着 ViT 這種 plain Vision Transformer，大部分視覺基礎模型都以 Swin 和 PvT 這種 Hierarchical 架構為基礎設計範式。而這種範式需要解決的問題就是如何在淺層 stage 中設計更高效的注意力機制計算來解決自注意力的二次複雜性帶來的計算負擔。是否有更優秀的計算模塊能夠代替 SAM 或者是 MSA 是我們後續需要繼續探索的路。</li><li>2023 年，更多的視覺 Transformer 模型和 CNN 基礎大模型被提出，它們在各大榜單上你追我趕，可以發現 CV 領域中 CNN 依舊有着一席之地。如果 Transformer 不能夠在 CV 領域完全替代 cnn 神經網絡，那麼將兩者的優勢結合起來是否是更好的選擇？因此，我們希望 SMT 可以作為 Hybrid CNN-Transformer 方向新的 baseline，推動該領域的進步和發展。</li></ul><hr><p><strong>●</strong><strong>Arxiv 地址：</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2307.08579" target="_blank">https://arxiv.org/abs/2307.08579</a></p><p><strong>●</strong><strong>Github 地址：</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAFeng-x%2FSMT" target="_blank">https://github.com/AFeng-x/SMT</a></p><p><strong>●</strong><strong>modelscope 地址：</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelscope.cn%2Fmodels%2FPAI%2FSMT%2Fsummary" target="_blank">https://modelscope.cn/models/PAI/SMT/summary</a></p><p><strong>●</strong><strong>論文鏈接：</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2307.08579.pdf" target="_blank">https://arxiv.org/pdf/2307.08579.pdf</a></p><p><strong>●</strong><strong>代碼鏈接：</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAFeng-x%2FSMT" target="_blank">https://github.com/AFeng-x/SMT</a></p><h2>Reference</h2><p>[1] Scale-Aware Modulation Meet Transformer[<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Farxiv.org%2Fabs%2F2307.08579" target="_blank">https://arxiv.org/abs/2307.08579</a>]</p><p>[2] An image is worth 16x16 words transformers for image recognition at scale [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Farxiv.org%2Fpdf%2F2010.11929.pdf" target="_blank">https://arxiv.org/pdf/2010.11929.pdf</a>]</p><p>[2] Focal Modulation Network [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Farxiv.org%2Fabs%2F2203.11926" target="_blank">https://arxiv.org/abs/2203.11926</a>]</p><p>[3] MixConv: Mixed Depthwise Convolutional Kernels [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Farxiv.org%2Fabs%2F1907.09595" target="_blank">https://arxiv.org/abs/1907.09595</a>]</p><p>[4] Swin Transformer: Hierarchical Vision Transformer using Shifted Windows [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Farxiv.org%2Fabs%2F2103.14030" target="_blank">https://arxiv.org/abs/2103.14030</a>]</p><p>[5] InternImage: Exploring Large-Scale Vision Foundation Models with Deformable Convolutions [<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Farxiv.org%2Fabs%2F2211.05778" target="_blank">https://arxiv.org/abs/2211.05778</a>]</p><h2>論文信息</h2><p>● <strong>論文標題：</strong></p><p>Scale-Aware Modulation Meet Transformer</p><p>● <strong>論文作者：</strong></p><p>林煒豐、吳梓恆、陳佳禹、黃俊、金連文</p><p>● <strong>論文 PDF 鏈接：</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2307.08579.pdf" target="_blank">https://arxiv.org/pdf/2307.08579.pdf</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 03:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5583868/blog/10116363</guid>
            <link>https://my.oschina.net/u/5583868/blog/10116363</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[TIOBE 10 月榜單：Java 跌幅最大，C# 逼近 Java]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#000000"><span style="background-color:#ffffff">TIOBE 公佈了 2023&nbsp;年 10 月的</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F" target="_blank">編程語言排行榜</a><span style="background-color:#ffffff; color:#000000"><span style="background-color:#ffffff">。</span></span></p><p><img height="63" src="https://oscimg.oschina.net/oscnet/up-214d9b336ca0795bea8f9d57ecba2126c95.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">C# 和 Java 之間的差距越來越小，達到了歷史新低，目前兩者的差距僅為 1.2%。<span style="background-color:#ffffff">TIOBE CEO&nbsp;Paul Jansen&nbsp;</span><span style="background-color:#ffffff">認為，</span>如果這一趨勢繼續保持，那麼 C# 將在兩個月後超過 Java。</span></p><p><span style="color:#000000">在所有編程語言中，Java 的跌幅最大，為 -3.92%；C# 的漲幅最大，為 +3.29%（年度）。這兩種語言一直用於類似的領域，因此在過去 20 多年裏一直是競爭對手。<span style="background-color:#ffffff">Paul Jansen 指出，</span>Java 受歡迎程度下降的主要原因是甲骨文公司決定在 Java 8 之後引入付費許可模式，反觀微軟在 C# 上則採取了相反的做法。</span></p><p><span style="color:#000000">過去，C# 只能作為商業工具 Visual Studio 的一部分使用；如今的 C# 卻是免費開源的，從而受到許多開發人員的歡迎。此外，Java 衰落的原因還在於：該語言的定義在過去幾年裏沒有太大變化，其完全兼容的直接競爭對手 Kotlin 卻易於使用且免費。</span></p><p><strong style="color:#333333">TIOBE 9 月 TOP 20 編程語言</strong></p><p><img height="423" src="https://oscimg.oschina.net/oscnet/up-4edc1a0b402b29b97063d531852386e2273.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">相較上月，T</span><span style="background-color:#ffffff">op&nbsp;10 榜單中的 SQL (10</span><span style="background-color:#ffffff">→9) 和 </span>Assembly language&nbsp;<span style="background-color:#ffffff">(9</span><span style="background-color:#ffffff">→10) </span>位置進行了互換，除此之外排名沒有任何變動。<span style="background-color:#ffffff">Top 11-20 中其他語言的一些排名變化有包括：</span></span></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><span style="color:#000000">Go&nbsp;<span style="background-color:#ffffff">的排名從 12 升至 11</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">Scratch&nbsp;的排名從 14 升至 12</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">Delphi/Object Pascal&nbsp;</span><span style="background-color:#ffffff">的排名持續攀升，自上月由 &nbsp;23 位回升至 15 位後，本月又升至了第 13 位</span></span></li><li><span style="color:#000000">MATLAB&nbsp;<span style="background-color:#ffffff">的排名從 13 跌至 14</span></span></li><li><span style="color:#000000">Swift&nbsp;<span style="background-color:#ffffff">的排名從 16 升至 15</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">Fortran 的排名從 11 跌至 16</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">R 的排名從 18 升至 17</span></span></li><li><span style="color:#000000">Kotlin&nbsp;<span style="background-color:#ffffff">的排名從 20 升至 18</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">Ruby 保持 19 不變</span></span></li><li><span style="color:#000000"><span style="background-color:#ffffff">Rust 的排名從 17&nbsp;跌至 20</span></span></li></ul><p><strong style="color:#333333">TOP 10 編程語言 TIOBE 指數走勢（2002-2022）</strong></p><p><img height="225" src="https://oscimg.oschina.net/oscnet/up-57b49445bfd6503a6c77c205f16ec8d2025.png" width="700" referrerpolicy="no-referrer"></p><p><strong style="color:#333333">第 21-50 名編程語言排行</strong></p><p><img height="426" src="https://oscimg.oschina.net/oscnet/up-b2036ba4f7fc158784908e321739a960260.png" width="500" referrerpolicy="no-referrer">&nbsp;</p><p><span style="color:#000000"><span style="background-color:#ffffff">第 51-100 名如下，由於它們之間的數值差異較小，僅以文本形式列出（按字母排序）：</span></span></p><p>&nbsp;</p><blockquote><p><span style="color:#000000">4th Dimension/4D, ABC, ActionScript, Apex, APL, Ballerina, bc, CL (OS/400), Clean, Clipper, CLIPS, Clojure, Crystal, Curl, Eiffel, Elixir, Erlang, Forth, Groovy, Hack, Icon, IDL, Io, J, J#, LabVIEW, Ladder Logic, LiveCode, ML, Modula-2, MQL5, NATURAL, Nim, OCaml, OpenEdge ABL, PL/I, PostScript, Pure Data, Q, Racket, Raku, REXX, RPG, Smalltalk, SPARK, SQR, Tcl, TOM, VHDL, Wolfram</span></p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">TIOBE 編程社區指數（The TIOBE Programming Community index）是一個衡量編程語言受歡迎程度的指標，該指數每月更新一次。評判的依據來自世界範圍內的工程師、課程和第三方供應商，包括流行的搜索引擎，如 Google、必應、雅虎、維基百科、亞馬遜、YouTube 和百度都被用於指數計算。值得注意的是，TIOBE 指數並不代表編程語言的好壞或編寫代碼的多少。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">該指數可以用來檢查你的編程技能是否還能跟上時代的步伐，或者在開始建立一個新的軟件系統時，基於指數對採用何種編程語言做出決策。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2Fprogramminglanguages_definition%2F" target="_blank">TIOBE 指數</a><span style="color:#000000">的定義方式，以及詳細榜單信息<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F" target="_blank">均可查看官網</a>。</span></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 03:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260951/tiobe-index-2023010</guid>
            <link>https://www.oschina.net/news/260951/tiobe-index-2023010</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Python Web 框架三巨頭：Flask、Django 和 FastAPI]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>JetBrains 公佈 2022 Python 開發者調查結果。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1009/104738_2re6_2720166.png" referrerpolicy="no-referrer"></p><p>完整報告地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flp.jetbrains.com%2Fzh-cn%2Fpython-developers-survey-2022%2F" target="_blank">https://lp.jetbrains.com/zh-cn/python-developers-survey-2022/</a></p></blockquote><p>這是由 Python 軟件基金會 (PSF) 和 JetBrains 共同開展的第六次官方年度 Python 開發者調查，回覆於 2022 年 10 月至 12 月收集，來自近 200 個國家和地區的超過 23,000 名 Python 開發者和愛好者參與了調查，揭示了該語言及其生態系統的現狀。</p><p>下面介紹部分值得關注的數據。</p><h4><span style="color:#e67e22"><strong>Python 3 與 Python 2</strong></span></h4><p>調查結果顯示，<strong>7% 的 Python 開發者仍在使用 Python 2</strong>，93% 的開發者使用 Python 3。相比下在 2021 年度的調查中，95% 的開發者使用 Python 3，5% 的開發者使用 Python 2。</p><p><img height="646" src="https://static.oschina.net/uploads/space/2023/1009/110933_AGQb_2720166.png" width="2152" referrerpolicy="no-referrer"></p><p>Python 2 已經在 2020 年結束了支持。<strong>仍然使用 Python 2 的開發者</strong>中有 29% 將其用於數據分析，24% 用於計算機圖形，23% 用於 DevOps。</p><p>對於 Python 3 版本使用情況，Python 3 開發者中有 45% 使用兩年前發佈的 Python 3.10，2% 使用 Python 3.5 或更低版本。</p><p><img src="https://static.oschina.net/uploads/space/2023/1009/111332_oznr_2720166.png" referrerpolicy="no-referrer"></p><p><strong><em>請注意，該調查於 2022 年 10 月 14 日至 11 月 14 日進行，Python 3.11 在 2022 年 10 月 24 日才發佈。</em></strong></p><hr><h4><span style="color:#e67e22"><strong>框架和庫</strong></span></h4><ul><li><span style="color:#d35400"><strong>Web 框架</strong></span></li></ul><p><strong>Python Web 框架的使用率仍然是 Flask、Django 和 FastAPI 之間的三強之爭</strong>。所有其他框架加起來只能勉強排在第三位。</p><p><img src="https://static.oschina.net/uploads/space/2023/1009/112630_OP7t_2720166.png" referrerpolicy="no-referrer"></p><p>去年以來，FastAPI 增加了 4 個百分點，現在有四分之一的 Python 開發者使用它。</p><ul><li><span style="color:#d35400"><strong>數據庫</strong></span></li></ul><p>MS SQL Server 和 Oracle Database 在數據科學家中的受歡迎程度是 Web 開發者的兩倍，而大多數其他數據庫在 Web 開發者中的採用率要高得多。</p><p><img src="https://static.oschina.net/uploads/space/2023/1009/112544_E41p_2720166.png" referrerpolicy="no-referrer"></p><ul><li><span style="color:#d35400"><strong>大數據工具</strong></span></li></ul><p><strong>31% 的 Python 開發者使用大數據工具</strong>，自 2021 年以來增長了 6 個百分點。<strong>在數據科學家中，這個數字達到 42%</strong>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1009/112717_fy3L_2720166.png" referrerpolicy="no-referrer"></p><hr><h4><span style="color:#e67e22">開發工具</span></h4><ul><li><span style="color:#d35400"><strong>編輯器</strong></span></li></ul><p><strong>PyCharm 和 VS Code</strong> 是 Python 開發的前兩大 IDE，有三分之二的受訪者選擇。</p><p>只有 14% 的受訪者只使用一款 IDE 或編輯器，絕大多數 (61%) 同時使用 2-3 款 IDE 或編輯器。26% 的 Python 開發者更喜歡 PyCharm 作為額外 IDE，<strong>四分之一選擇 VS Code</strong>。</p><p><img height="1180" src="https://static.oschina.net/uploads/space/2023/1009/113047_K5V1_2720166.png" width="1209" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/1009/113140_crDq_2720166.png" referrerpolicy="no-referrer"></p><ul><li><span style="color:#d35400"><strong>操作系統</strong></span></li></ul><p>與去年相比，macOS 和 Windows 的受歡迎程度幾乎保持不變，而 Linux 的使用率下降了 4 個百分點。</p><p><img src="https://static.oschina.net/uploads/space/2023/1009/113253_wcYp_2720166.png" referrerpolicy="no-referrer"></p><ul><li><span style="color:#d35400"><strong>文檔工具</strong></span></li></ul><p>39% 的 Python 使用者使用文檔工具，首選 Sphinx，與去年持平。</p><p><img src="https://static.oschina.net/uploads/space/2023/1009/113402_GAuc_2720166.png" referrerpolicy="no-referrer"></p><hr><p>調查還發現，21% 的開發者表示只在工作中使用 Python，51% 將 Python 用於工作和個人/教育用途或業餘項目。</p><p><img src="https://static.oschina.net/uploads/space/2023/1009/114132_kSpV_2720166.png" referrerpolicy="no-referrer"></p><p>85% 的受訪者表示 Python 是他們的主要語言。</p><p><img src="https://static.oschina.net/uploads/space/2023/1009/114330_DpiR_2720166.png" referrerpolicy="no-referrer"></p><p>而使用 Python 作為主要語言的受訪者大多將其用於 Web 開發 (23%)。作為輔助語言，Python 最常用於數據分析 (16%) 和 DevOps (14%)，Web 開發排在第三位 (13%)。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 03:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260950/python-developers-survey-2022-jb-psf</guid>
            <link>https://www.oschina.net/news/260950/python-developers-survey-2022-jb-psf</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Compose Multiplatform 1.5.0]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       defaultNoSetting
            " id="js_content"><p style="text-align: center;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.1836734693877551" src="https://oscimg.oschina.net/oscnet/cd921f2b-7ba6-49a9-9ec2-28169030d37b.gif" data-type="gif" data-w="637" style="" referrerpolicy="no-referrer"></p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;visibility: visible;"><span style="font-size: 15px;">Compose Multiplatform 1.5.0 現已正式推出。它採用適用於 Kotlin 的 Jetpack Compose 聲明式 UI 框架，並將其從 Android 擴展到桌面端、iOS 和 Web。桌面版本已經穩定，iOS 處於 Alpha 階段，Web 支持仍為實驗性。有關完整説明，請參閲&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fzh-cn%2Flp%2Fcompose-multiplatform%2F" textvalue="Compose Multiplatform 網站" linktype="text" imgurl="" tab="outerlink" data-linktype="2">Compose Multiplatform 網站</a>。</span></p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;visibility: visible;"><span style="font-size: 15px;">此版本的一些亮點包括：</span></p><ol class="list-paddingleft-1" style="padding-left: 32px;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;visibility: visible;"><li style="margin-bottom: 0.5em;outline: 0px;font-size: 15px;color: inherit;line-height: inherit;visibility: visible;"><p style="outline: 0px;visibility: visible;"><span style="outline: 0px;color: inherit;line-height: inherit;visibility: visible;font-size: 15px;">Dialog、Popup 和 WindowInsets API 現在採用通用代碼。</span></p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: 15px;color: inherit;line-height: inherit;visibility: visible;"><p style="outline: 0px;visibility: visible;"><span style="outline: 0px;color: inherit;line-height: inherit;visibility: visible;font-size: 15px;">對於 iOS 滾動，資源管理和文本字段已得到改進。</span></p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: 15px;color: inherit;line-height: inherit;visibility: visible;"><p style="outline: 0px;visibility: visible;"><span style="outline: 0px;color: inherit;line-height: inherit;visibility: visible;font-size: 15px;">UI 測試框架在桌面端已經穩定。</span></p></li></ol><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;visibility: visible;"><span style="font-size: 15px;">此版本基於<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fandroid-developers.googleblog.com%2F2023%2F08%2Fwhats-new-in-jetpack-compose-august-23-release.html" textvalue="&nbsp;Jetpack Compose 1.5" linktype="text" imgurl="" tab="outerlink" data-linktype="2">&nbsp;Jetpack Compose 1.5</a>，重點關注性能改進。同時，它以&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmaterial.io%2Fblog%2Fmaterial-3-compose-1-1" textvalue="1.1 版 Material Design 3" linktype="text" imgurl="" tab="outerlink" data-linktype="2">1.1 版 Material Design 3</a>&nbsp;為基礎構建， 包括日期選擇器和時間選擇器等新組件。</span></p><section style="margin-bottom: 0px;padding-right: 5px;outline: 0px;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);visibility: visible;"><section powered-by="xiumi.us" style="outline: 0px;visibility: visible;"><section style="outline: 0px;visibility: visible;"><p style="outline: 0px;visibility: visible;"><strong style="outline: 0px;visibility: visible;">試用 Compose Multiplatform 1.5.0：</strong></p><p style="outline: 0px;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJetBrains%2Fcompose-multiplatform%2Freleases%2Ftag%2Fv1.5.0" textvalue="https://github.com/JetBrains/compose-multiplatform/releases/tag/v1.5.0" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><span style="outline: 0px;font-size: 14px;color: rgb(51, 122, 183);visibility: visible;">https://github.com/JetBrains/compose-multiplatform/releases/tag/v1.5.0</span></a><span style="outline: 0px;font-size: 14px;color: rgb(51, 122, 183);visibility: visible;">&nbsp;</span></p></section></section></section><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: center;line-height: inherit;visibility: visible;"><br style="outline: 0px;visibility: visible;"></p><section style="margin-bottom: 0px;padding-right: 5px;outline: 0px;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);visibility: visible;"><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;text-align: center;justify-content: center;display: flex;flex-flow: row;visibility: visible;"><section style="outline: 0px;display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;visibility: visible;"><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;line-height: 0;visibility: visible;"><section style="outline: 0px;vertical-align: middle;display: inline-block;line-height: 0;visibility: visible;"><img class="rich_pages wxw-img" data-ratio="1" data-s="300,640" data-type="png" data-w="500" src="https://oscimg.oschina.net/oscnet/16731f55-3ba8-433e-86e6-686e72e1acd4.png" style="outline: 0px;vertical-align: middle;width: 48px;visibility: visible !important;" referrerpolicy="no-referrer"></section></section></section><section style="padding-left: 10px;outline: 0px;display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;visibility: visible;"><section powered-by="xiumi.us" style="margin-top: 10px;outline: 0px;text-align: left;visibility: visible;"><section style="outline: 0px;color: rgb(42, 8, 69);font-size: 24px;line-height: 1.2;visibility: visible;"><p style="outline: 0px;visibility: visible;"><strong style="outline: 0px;visibility: visible;">Compose Multiplatform&nbsp;</strong></p><p style="outline: 0px;visibility: visible;"><strong style="outline: 0px;visibility: visible;">支持 Dialog、Popup 和 WindowInsets</strong></p></section><grazie-editor-wrapper style="outline: 0px;"></grazie-editor-wrapper></section><section powered-by="xiumi.us" style="margin-top: 2px;margin-bottom: 8px;outline: 0px;"><section style="outline: 0px;background-color: rgb(120, 85, 245);height: 1px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section></section><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">從 1.5 版開始，Compose Multiplatform 中提供對話框和彈出窗口。對話框用於模態事件，用戶在其中做出選擇或輸入數據。同時，彈出窗口用於非模態行為，例如提供可選功能。</span></p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">在此版本中，基類型&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Freference%2Fkotlin%2Fandroidx%2Fcompose%2Fui%2Fwindow%2Fpackage-summary%23Dialog%28kotlin.Function0%2Candroidx.compose.ui.window.DialogProperties%2Ckotlin.Function0%29" textvalue="Dialog" linktype="text" imgurl="" tab="outerlink" data-linktype="2">Dialog</a>&nbsp;和&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Freference%2Fkotlin%2Fandroidx%2Fcompose%2Fui%2Fwindow%2Fpackage-summary%23Popup%28androidx.compose.ui.window.PopupPositionProvider%2Ckotlin.Function0%2Candroidx.compose.ui.window.PopupProperties%2Ckotlin.Function0%29" textvalue="Popup" linktype="text" imgurl="" tab="outerlink" data-linktype="2">Popup</a>，以及&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Freference%2Fkotlin%2Fandroidx%2Fcompose%2Fmaterial%2Fpackage-summary%23DropdownMenu%28kotlin.Boolean%2Ckotlin.Function0%2Candroidx.compose.ui.Modifier%2Candroidx.compose.ui.unit.DpOffset%2Candroidx.compose.foundation.ScrollState%2Candroidx.compose.ui.window.PopupProperties%2Ckotlin.Function1%29" textvalue="DropdownMenu" linktype="text" imgurl="" tab="outerlink" data-linktype="2">DropdownMenu</a>&nbsp;和&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Freference%2Fkotlin%2Fandroidx%2Fcompose%2Fmaterial%2Fpackage-summary%23AlertDialog%28kotlin.Function0%2Ckotlin.Function0%2Candroidx.compose.ui.Modifier%2Ckotlin.Function0%2Ckotlin.Function0%2Candroidx.compose.ui.graphics.Shape%2Candroidx.compose.ui.graphics.Color%2Candroidx.compose.ui.graphics.Color%2Candroidx.compose.ui.window.DialogProperties%29" textvalue="AlertDialog" linktype="text" imgurl="" tab="outerlink" data-linktype="2">AlertDialog</a>&nbsp;都可以從通用代碼中訪問。這避免了提供平台特定功能的需要。</span></p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">例如，下面的可組合項完全以通用代碼編寫：</span></p><section style="margin-bottom: 0px;outline: 0px;color: rgb(33, 33, 33);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6;"><pre style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><code style="margin-right: 2px;margin-left: 2px;padding: 0.5em;outline: 0px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;background: rgb(43, 43, 43);color: rgb(186, 186, 186);overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(127, 127, 127);overflow-wrap: inherit !important;word-break: inherit !important;">@Composable</span><br style="outline: 0px;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;"><span style="outline: 0px;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">fun</span>&nbsp;<span style="outline: 0px;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;">CommonDialog</span><span style="outline: 0px;line-height: inherit;color: rgb(185, 185, 185);overflow-wrap: inherit !important;word-break: inherit !important;">()</span></span>&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">var</span>&nbsp;isDialogOpen&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">by</span>&nbsp;remember&nbsp;{&nbsp;mutableStateOf(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">false</span>)&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;Button(onClick&nbsp;=&nbsp;{&nbsp;isDialogOpen&nbsp;=&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">true</span>&nbsp;})&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Text(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"Open"</span>)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">if</span>&nbsp;(isDialogOpen)&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AlertDialog(<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onDismissRequest&nbsp;=&nbsp;{&nbsp;},<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;confirmButton&nbsp;=&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Button(onClick&nbsp;=&nbsp;{&nbsp;isDialogOpen&nbsp;=&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">false</span>&nbsp;})&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Text(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"OK"</span>)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title&nbsp;=&nbsp;{&nbsp;Text(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"Alert&nbsp;Dialog"</span>)&nbsp;},<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text&nbsp;=&nbsp;{&nbsp;Text(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"Lore&nbsp;ipsum"</span>)&nbsp;},<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">}<br style="outline: 0px;"></code></pre></section><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">在桌面端、Android 和 iOS 上的顯示方式：</span></p><figure style="outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><img class="rich_pages wxw-img" data-cropselx1="0" data-cropselx2="430" data-cropsely1="0" data-cropsely2="324" data-ratio="0.7534883720930232" src="https://oscimg.oschina.net/oscnet/68642653-ba2c-4c01-be99-ac6703415178.gif" data-type="png" data-w="430" style="margin-right: auto;margin-left: auto;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;display: block;width: 430px !important;visibility: visible !important;" title="桌面端對話框演示" referrerpolicy="no-referrer"><figcaption style="margin-top: 10px;outline: 0px;line-height: inherit;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
    桌面端對話框演示 
  </figcaption><figcaption style="margin-top: 10px;outline: 0px;line-height: inherit;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;"><br style="outline: 0px;"></figcaption></figure><figure style="outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><img class="rich_pages wxw-img" data-cropselx1="0" data-cropselx2="473" data-cropsely1="0" data-cropsely2="507" data-ratio="1.0718816067653276" src="https://oscimg.oschina.net/oscnet/7c7419ae-3392-4d18-b087-cc54f0474b55.gif" data-type="png" data-w="473" style="margin-right: auto;margin-left: auto;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;display: block;width: 473px !important;visibility: visible !important;" title="Android 和 iOS 對話框演示" referrerpolicy="no-referrer"><figcaption style="margin-top: 10px;outline: 0px;line-height: inherit;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
    Android 和 iOS 對話框演示 
  </figcaption></figure><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">此版本提供的第三項功能是&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Fjetpack%2Fcompose%2Flayouts%2Finsets" textvalue="WindowInsets API" linktype="text" imgurl="" tab="outerlink" data-linktype="2">WindowInsets API</a>，描述為了防止內容與系統 UI 重疊而需要進行多少調整。從版本 1.5 開始，此功能包含在 Compose Multiplatform 中，因此可在 Android 和 iOS 上使用。</span></p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">使用 WindowInsets API，可以通過 Compose Multiplatform 在凹口後繪製背景內容。無需在應用程序頂部添加白線。差異如以下屏幕截圖所示：</span></p><figure style="outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><p style="outline: 0px;text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="1.0658105939004816" data-s="300,640" src="https://oscimg.oschina.net/oscnet/1c958700-eb5a-40bd-9140-b02a8aa683ec.png" data-type="png" data-w="623" style="outline: 0px;width: 623px !important;visibility: visible !important;" referrerpolicy="no-referrer"></p><figure style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><figcaption style="margin-top: 10px;outline: 0px;line-height: inherit;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     使用 WindowInsets API 在 Compose Multiplatform 中繪製背景內容 
   </figcaption><figcaption style="margin-top: 10px;outline: 0px;line-height: inherit;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;"><br style="outline: 0px;"></figcaption></figure></figure><section style="margin-bottom: 0px;padding-right: 5px;outline: 0px;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);"><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;text-align: center;justify-content: center;display: flex;flex-flow: row;"><section style="outline: 0px;display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;"><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;line-height: 0;"><section style="outline: 0px;vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-ratio="1" data-s="300,640" data-type="png" data-w="500" src="https://oscimg.oschina.net/oscnet/16731f55-3ba8-433e-86e6-686e72e1acd4.png" style="outline: 0px;vertical-align: middle;width: 48px;visibility: visible !important;" referrerpolicy="no-referrer"></section></section></section><section style="padding-left: 10px;outline: 0px;display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;"><section powered-by="xiumi.us" style="margin-top: 10px;outline: 0px;text-align: left;"><section style="outline: 0px;color: rgb(42, 8, 69);font-size: 24px;line-height: 1.2;"><p style="outline: 0px;"><strong style="outline: 0px;">iOS 上的改進</strong></p></section><grazie-editor-wrapper style="outline: 0px;"></grazie-editor-wrapper></section><section powered-by="xiumi.us" style="margin-top: 2px;margin-bottom: 8px;outline: 0px;"><section style="outline: 0px;background-color: rgb(120, 85, 245);height: 1px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section></section><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">iOS 平台是此次發佈的重點，包含大量改進。滾動模仿了平台的外觀和風格，資源管理得到簡化，文本處理有所增強。</span></p><span id="OSC_h3_1"></span><h3 style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-weight: bold;font-size: 1.3em;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(38, 10, 66);">自然滾動</span></h3><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">在此版本中，iOS 滾動已調整為模仿原生滾動。假設代碼中要顯示的條目的數量和/或大小超出可用空間：</span></p><section style="margin-bottom: 0px;outline: 0px;color: rgb(33, 33, 33);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6;"><pre style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><code style="margin-right: 2px;margin-left: 2px;padding: 0.5em;outline: 0px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;background: rgb(43, 43, 43);color: rgb(186, 186, 186);overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(127, 127, 127);overflow-wrap: inherit !important;word-break: inherit !important;">@Composable</span><br style="outline: 0px;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;"><span style="outline: 0px;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">fun</span>&nbsp;<span style="outline: 0px;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;">NaturalScrolling</span><span style="outline: 0px;line-height: inherit;color: rgb(185, 185, 185);overflow-wrap: inherit !important;word-break: inherit !important;">()</span></span>&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">val</span>&nbsp;items&nbsp;=&nbsp;(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">1..30</span>).map&nbsp;{&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"Item&nbsp;<span style="outline: 0px;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">$it</span>"</span>&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;LazyColumn&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items(items)&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Text(<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text&nbsp;=&nbsp;it,<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontSize&nbsp;=&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">30.</span>sp,<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modifier&nbsp;=&nbsp;Modifier.padding(start&nbsp;=&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">20.</span>dp)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">}<br style="outline: 0px;"></code></pre></section><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">滾動時，條目會從屏幕邊緣彈開，與原生 iPhone 應用程序相同：</span></p><p style="margin-bottom: 0px;outline: 0px;color: rgb(33, 33, 33);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="2.106382978723404" src="https://oscimg.oschina.net/oscnet/4a08e708-3570-4167-b664-059efa31daf0.gif" data-type="gif" data-w="282" style="outline: 0px;width: 282px !important;visibility: visible !important;" referrerpolicy="no-referrer"></p><figure style="outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><figcaption style="margin-top: 10px;outline: 0px;line-height: inherit;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
    iOS 上的滾動彈開 
  </figcaption></figure><span id="OSC_h3_2"></span><h3 style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-weight: bold;font-size: 1.3em;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(38, 10, 66);">對動態字體的支持</span></h3><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fdocumentation%2Fuikit%2Fuifont%2Fscaling_fonts_automatically%2F" textvalue="iOS 上的動態字體功能" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><span style="font-size: 15px;">iOS 上的動態字體功能</span></a><span style="font-size: 15px;"><strong style="outline: 0px;"></strong>允許用戶設置偏好字體大小 – 大字體便於查看，小字體可容納更多內容。應用中使用的文本大小應與此係統設置相關。</span></p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">Compose Multiplatform 現在支持此功能。縮放文本時使用的增量與原生應用程序中使用的增量相同，因此行為將相同。</span></p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">以如下可組合項為例：</span></p><section style="margin-bottom: 0px;outline: 0px;color: rgb(33, 33, 33);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6;"><pre style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><code style="margin-right: 2px;margin-left: 2px;padding: 0.5em;outline: 0px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;background: rgb(43, 43, 43);color: rgb(186, 186, 186);overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(127, 127, 127);overflow-wrap: inherit !important;word-break: inherit !important;">@Composable</span><br style="outline: 0px;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;"><span style="outline: 0px;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">fun</span>&nbsp;<span style="outline: 0px;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;">DynamicType</span><span style="outline: 0px;line-height: inherit;color: rgb(185, 185, 185);overflow-wrap: inherit !important;word-break: inherit !important;">()</span></span>&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;Text(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"This&nbsp;is&nbsp;some&nbsp;sample&nbsp;text"</span>,&nbsp;fontSize&nbsp;=&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">30.</span>sp)<br style="outline: 0px;">}<br style="outline: 0px;"></code></pre></section><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;">首選閲讀大小設為最小時的顯示畫面：</p><figure style="outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><p style="outline: 0px;text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.7333333333333333" data-s="300,640" src="https://oscimg.oschina.net/oscnet/3dcfbb8b-741a-4635-871e-fcb7a44ec357.png" data-type="png" data-w="1080" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></p><figure style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><figcaption style="margin-top: 10px;outline: 0px;line-height: inherit;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     Compose Multiplatform 中 iOS 上的動態字體功能（小文本） 
   </figcaption></figure></figure><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">這是首選閲讀大小為最大時的結果：</span></p><figure style="outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><p style="outline: 0px;text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.7333333333333333" data-s="300,640" src="https://oscimg.oschina.net/oscnet/9240501e-f25c-49eb-b69f-e159e30ee931.png" data-type="png" data-w="1080" style="outline: 0px;width: 677px !important;visibility: visible !important;" referrerpolicy="no-referrer"></p><figure style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><figcaption style="margin-top: 10px;outline: 0px;line-height: inherit;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     Compose Multiplatform 中 iOS 上的動態字體功能（大文本） 
   </figcaption></figure></figure><span id="OSC_h3_3"></span><h3 style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-weight: bold;font-size: 1.3em;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(38, 10, 66);">對高刷新率顯示屏的支持</span></h3><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">在之前的版本中，最大幀率為 60 FPS。這可能導致 UI 在 120Hz 屏幕的設備上緩慢且滯後。從這個版本開始，支持的幀率最高為 120 FPS。</span></p><span id="OSC_h3_4"></span><h3 style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-weight: bold;font-size: 1.3em;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(38, 10, 66);">簡化了資源管理</span></h3><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">從 1.5.0 開始，iOS 源集的資源文件夾中的任何資源都會默認複製到應用程序捆綁包中。例如，如果將圖像文件放入&nbsp;</span><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);"><span style="font-size: 15px;">src/commonMain/resources/</span></code><span style="font-size: 15px;">，它將被複制到捆綁包中並可從代碼使用。</span></p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">使用 CocoaPods 時，不再需要在 Gradle 構建文件中配置此行為。您也不需要重新調用&nbsp;<em style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">podInstall</em>&nbsp;來確保資源在修改後被複制。</span></p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">從這個版本開始，如果您試圖在構建腳本中顯式配置行為（如下所示），您將收到錯誤：</span></p><section style="margin-bottom: 0px;outline: 0px;color: rgb(33, 33, 33);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.6;"><pre style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><code style="margin-right: 2px;margin-left: 2px;padding: 0.5em;outline: 0px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;background: rgb(43, 43, 43);color: rgb(186, 186, 186);overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;">kotlin&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;cocoapods&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extraSpecAttributes[<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"resources"</span>]&nbsp;=&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"..."</span><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">}<br style="outline: 0px;"></code></pre></section><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;color: inherit;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: inherit;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: inherit;"><span style="font-size: 15px;">有關完整詳細信息以及遷移現有代碼的指南，請<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJetBrains%2Fcompose-multiplatform%2Fpull%2F3496" textvalue="參閲此文檔&nbsp;" linktype="text" imgurl="" tab="outerlink" data-linktype="2">參閲此文檔&nbsp;</a>。</span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"></span></p><section style="outline: 0px;font-size: 15px;color: rgb(33, 33, 33);line-height: 1.6;letter-spacing: 0px;font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;"><span id="OSC_h3_5"></span><h3 style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-weight: bold;font-size: 1.3em;color: inherit;line-height: inherit;letter-spacing: 0px;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(38, 10, 66);">改進了 TextField</span></h3><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">早期版本中，在兩種情況下輸入文本可能導致意外行為。從這個版本開始，增強的&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">TextField</code>&nbsp;已經克服了這些問題。</p><span id="OSC_h4_6"></span><h4 style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-weight: bold;font-size: 1.2em;color: inherit;line-height: inherit;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">大小寫問題</span></h4><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">首先，<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">TextField</code>&nbsp;現在可以識別首字母自動大寫是否已禁用。這在輸入密碼時尤其重要。您可以通過 keyboardOptions 實參控制此行為。</p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">為了説明這一點，請查看下面的可組合項：</p><section style="outline: 0px;line-height: 1.6;letter-spacing: 0px;"><pre style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><code style="margin-right: 2px;margin-left: 2px;padding: 0.5em;outline: 0px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;background: rgb(43, 43, 43);color: rgb(186, 186, 186);overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">fun</span>&nbsp;<span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;">TextFieldCapitalization</span><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(185, 185, 185);overflow-wrap: inherit !important;word-break: inherit !important;">()</span></span>&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">var</span>&nbsp;text&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">by</span>&nbsp;remember&nbsp;{&nbsp;mutableStateOf(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">""</span>)&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;TextField(<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;=&nbsp;text,<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onValueChange&nbsp;=&nbsp;{&nbsp;text&nbsp;=&nbsp;it&nbsp;},<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyboardOptions&nbsp;=&nbsp;KeyboardOptions(<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;capitalization&nbsp;=&nbsp;KeyboardCapitalization.Sentences,<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;autoCorrect&nbsp;=&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">false</span>,<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;keyboardType&nbsp;=&nbsp;KeyboardType.Ascii,<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;),<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;)<br style="outline: 0px;">}<br style="outline: 0px;"></code></pre></section><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">左圖是大寫屬性設為&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">KeyboardCapitalization.None</code>&nbsp;時的情形，右圖則顯示了值為&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">KeyboardCapitalization.Sentences</code>&nbsp;時的情形。</p><figure style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-cropselx1="0" data-cropselx2="433" data-cropsely1="0" data-cropsely2="453" data-ratio="1.046189376443418" src="https://oscimg.oschina.net/oscnet/a6be0828-b490-4dd3-b802-6a4167f6b978.gif" data-type="png" data-w="433" style="margin-right: auto;margin-left: auto;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;display: block;width: 433px !important;visibility: visible !important;" title="TextField 大小寫演示" referrerpolicy="no-referrer"><figcaption style="margin-top: 10px;outline: 0px;line-height: inherit;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     TextField 大小寫演示 
   </figcaption></figure><span id="OSC_h4_7"></span><h4 style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-weight: bold;font-size: 1.2em;color: inherit;line-height: inherit;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">硬件鍵盤</span></h4><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">第二種情況與硬件鍵盤有關。在以前的版本中，使用硬件鍵盤時，按&nbsp;<strong style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">Enter</strong>&nbsp;會導致多個換行符，按&nbsp;<strong style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">Backspace</strong>&nbsp;會觸發多個刪除。從這個版本開始，這些事件可以正確處理。&nbsp;</p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><br style="outline: 0px;"></p><section style="padding-right: 5px;outline: 0px;color: rgb(0, 0, 0);"><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;text-align: center;justify-content: center;display: flex;flex-flow: row;"><section style="outline: 0px;display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;"><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;line-height: 0;"><section style="outline: 0px;vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-ratio="1" data-s="300,640" data-type="png" data-w="500" src="https://oscimg.oschina.net/oscnet/16731f55-3ba8-433e-86e6-686e72e1acd4.png" style="outline: 0px;vertical-align: middle;width: 48px;visibility: visible !important;" referrerpolicy="no-referrer"></section></section></section><section style="padding-left: 10px;outline: 0px;display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;"><section powered-by="xiumi.us" style="margin-top: 10px;outline: 0px;text-align: left;"><section style="outline: 0px;color: rgb(42, 8, 69);font-size: 24px;line-height: 1.2;"><p style="outline: 0px;"><strong style="outline: 0px;">桌面端改進</strong></p></section><grazie-editor-wrapper style="outline: 0px;"></grazie-editor-wrapper></section><section powered-by="xiumi.us" style="margin-top: 2px;margin-bottom: 8px;outline: 0px;"><section style="outline: 0px;background-color: rgb(120, 85, 245);height: 1px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section></section><span id="OSC_h3_8"></span><h3 style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-weight: bold;font-size: 1.3em;color: inherit;line-height: inherit;letter-spacing: 0px;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(38, 10, 66);">穩定了測試框架</span></h3><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">此版本穩定了對 Compose for Desktop 測試的支持。Jetpack Compose 提供了<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Fjetpack%2Fcompose%2Ftesting" textvalue="一組測試 API&nbsp;" linktype="text" imgurl="" tab="outerlink" data-linktype="2">一組測試 API&nbsp;</a>來驗證 Compose 代碼的行為。這些 API 先前已移植到桌面端並在之前的版本中可用，但存在限制。這些限制現已移除，讓您可以為應用程序編寫全面的 UI 測試。</p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">為了快速展示測試功能，我們來創建並測試一個簡單的 UI。下方是我們的示例可組合項：</p><section style="outline: 0px;line-height: 1.6;letter-spacing: 0px;"><pre style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><code style="margin-right: 2px;margin-left: 2px;padding: 0.5em;outline: 0px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;background: rgb(43, 43, 43);color: rgb(186, 186, 186);overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(127, 127, 127);overflow-wrap: inherit !important;word-break: inherit !important;">@Composable</span><br style="outline: 0px;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">fun</span>&nbsp;<span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;">App</span><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(185, 185, 185);overflow-wrap: inherit !important;word-break: inherit !important;">()</span></span>&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">var</span>&nbsp;searchText&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">by</span>&nbsp;remember&nbsp;{&nbsp;mutableStateOf(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"cats"</span>)&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">val</span>&nbsp;searchHistory&nbsp;=&nbsp;remember&nbsp;{&nbsp;mutableStateListOf()&nbsp;}<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;Column(modifier&nbsp;=&nbsp;Modifier.padding(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">30.</span>dp))&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;TextField(<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modifier&nbsp;=&nbsp;Modifier.testTag(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"searchText"</span>),<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value&nbsp;=&nbsp;searchText,<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onValueChange&nbsp;=&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;searchText&nbsp;=&nbsp;it<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Button(<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modifier&nbsp;=&nbsp;Modifier.testTag(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"search"</span>),<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;onClick&nbsp;=&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;searchHistory.add(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"You&nbsp;searched&nbsp;for:&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">$searchText</span>"</span>)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Text(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"Search"</span>)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LazyColumn&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;items(searchHistory)&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Text(<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text&nbsp;=&nbsp;it,<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fontSize&nbsp;=&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">20.</span>sp,<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;modifier&nbsp;=&nbsp;Modifier.padding(start&nbsp;=&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">10.</span>dp).testTag(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"attempt"</span>)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">}<br style="outline: 0px;"></code></pre></section><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">這將創建一個記錄搜索嘗試的簡單 UI：</p><figure style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-cropselx1="0" data-cropselx2="348" data-cropsely1="0" data-cropsely2="399" data-ratio="1.146551724137931" src="https://oscimg.oschina.net/oscnet/58df50cf-98fa-4f27-882a-4d52aa3f417b.gif" data-type="png" data-w="348" style="margin-right: auto;margin-left: auto;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;display: block;width: 348px !important;visibility: visible !important;" title="用於測試的搜索應用" referrerpolicy="no-referrer"><figcaption style="margin-top: 10px;outline: 0px;line-height: inherit;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     用於測試的搜索應用 
   </figcaption></figure><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;text-align: left;">請注意，<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">Modifier.testTag</code>&nbsp;已用於為&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">TextField</code>、<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">Button</code>&nbsp;和&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">LazyColumn</code>&nbsp;中的條目指定名稱。</p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">然後，我們可以在 JUnit 測試中操作 UI：</p><section style="outline: 0px;line-height: 1.6;letter-spacing: 0px;"><pre style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><code style="margin-right: 2px;margin-left: 2px;padding: 0.5em;outline: 0px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;background: rgb(43, 43, 43);color: rgb(186, 186, 186);overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">class</span>&nbsp;<span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;">SearchAppTest</span>&nbsp;</span>{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(127, 127, 127);overflow-wrap: inherit !important;word-break: inherit !important;">@get:Rule</span><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">val</span>&nbsp;compose&nbsp;=&nbsp;createComposeRule()<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(127, 127, 127);overflow-wrap: inherit !important;word-break: inherit !important;">@Test</span><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">fun</span>&nbsp;`Should&nbsp;display&nbsp;search&nbsp;attempts`<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(185, 185, 185);overflow-wrap: inherit !important;word-break: inherit !important;">()</span></span>&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compose.setContent&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;App()<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">val</span>&nbsp;testSearches&nbsp;=&nbsp;listOf(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"cats"</span>,&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"dogs"</span>,&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"fish"</span>,&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"birds"</span>)<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">for</span>&nbsp;(text&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">in</span>&nbsp;testSearches)&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compose.onNodeWithTag(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"searchText"</span>).performTextReplacement(text)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;compose.onNodeWithTag(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"search"</span>).performClick()<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">val</span>&nbsp;lastAttempt&nbsp;=&nbsp;compose<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.onAllNodesWithTag(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"attempt"</span>)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.assertCountEquals(testSearches.size)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.onLast()<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">val</span>&nbsp;expectedText&nbsp;=&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"You&nbsp;searched&nbsp;for:&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(224, 196, 108);overflow-wrap: inherit !important;word-break: inherit !important;">${testSearches.last()}</span>"</span><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lastAttempt.assert(hasText(expectedText))<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">}<br style="outline: 0px;"></code></pre></section><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">使用特定於 Compose 的 JUnit 規則：</p><ol class="list-paddingleft-1" style="padding-left: 32px;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">將 UI 的內容設置為應用可組合項。</span></p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;">通過&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">onNodeWithTag</code>&nbsp;查找文本字段和按鈕。</p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">在文本字段中重複輸入示例值，然後點擊按鈕。</span></p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;">通過&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">onAllNodesWithTag</code>&nbsp;查找生成的所有文本節點。</p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">斷言當前已創建的文本節點數，並獲取最後一個。</span></p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">斷言最後一次嘗試包含預期消息。</span></p></li></ol><span id="OSC_h3_9"></span><h3 style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-weight: bold;font-size: 1.3em;color: inherit;line-height: inherit;letter-spacing: 0px;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(38, 10, 66);">增強了 Swing 互操作性</span></h3><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">此版本對 Swing 組件內 Compose 面板的改進呈現引入了實驗性支持。這可以防止在顯示、隱藏或調整面板大小時出現過渡呈現問題。它還支持在組合 Swing 組件和 Compose 面板時進行適當分層。Swing 組件現在可以在&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">ComposePanel</code>&nbsp;上方或下方顯示。</p><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">為了説明這一點，請查看下面的示例：</p><section style="outline: 0px;line-height: 1.6;letter-spacing: 0px;"><pre style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><code style="margin-right: 2px;margin-left: 2px;padding: 0.5em;outline: 0px;line-height: 18px;font-size: 14px;letter-spacing: 0px;font-family: Consolas, Inconsolata, Courier, monospace;border-radius: 0px;background: rgb(43, 43, 43);color: rgb(186, 186, 186);overflow-wrap: normal !important;word-break: normal !important;overflow: auto !important;display: -webkit-box !important;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;"><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">fun</span>&nbsp;<span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;overflow-wrap: inherit !important;word-break: inherit !important;">main</span><span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(185, 185, 185);overflow-wrap: inherit !important;word-break: inherit !important;">()</span></span>&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;System.setProperty(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"compose.swing.render.on.graphics"</span>,&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(106, 135, 89);overflow-wrap: inherit !important;word-break: inherit !important;">"true"</span>)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;SwingUtilities.invokeLater&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">val</span>&nbsp;composePanel&nbsp;=&nbsp;ComposePanel().apply&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setContent&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Box(modifier&nbsp;=&nbsp;Modifier.background(Color.Black).fillMaxSize())<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">val</span>&nbsp;popup&nbsp;=&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">object</span>&nbsp;:&nbsp;JComponent()&nbsp;{&nbsp;...&nbsp;}<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">val</span>&nbsp;rightPanel&nbsp;=&nbsp;JLayeredPane().apply&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add(composePanel)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add(popup)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">val</span>&nbsp;leftPanel&nbsp;=&nbsp;JPanel().apply&nbsp;{&nbsp;background&nbsp;=&nbsp;CYAN&nbsp;}<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(203, 120, 50);overflow-wrap: inherit !important;word-break: inherit !important;">val</span>&nbsp;splitter&nbsp;=&nbsp;JSplitPane(...,&nbsp;leftPanel,rightPanel)<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JFrame().apply&nbsp;{<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add(splitter)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setSize(<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">600</span>,&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">600</span>)<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isVisible&nbsp;=&nbsp;<span style="outline: 0px;font-size: inherit;line-height: inherit;color: rgb(104, 150, 186);overflow-wrap: inherit !important;word-break: inherit !important;">true</span><br style="outline: 0px;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">&nbsp;&nbsp;&nbsp;}<br style="outline: 0px;">}<br style="outline: 0px;"></code></pre></section><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">在這段代碼中，我們創建並顯示一個 Swing&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">JFrame</code>，內容如下：</p><ol class="list-paddingleft-1" style="padding-left: 32px;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;">JFrame 包含帶有垂直分隔線的&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">JSplitPane</code>。</p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;">拆分窗格的左側是青色的標準&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">JPanel</code>。</p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;">右側是&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">JLayeredPane</code>，由兩層組成：</p></li><ul class="list-paddingleft-1" style="padding-left: 32px;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;list-style-type: disc;"><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;">包含&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">Box</code>&nbsp;可組合項的&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">ComposePanel</code>，顏色為黑色</p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;">自定義 Swing 組件，其中文本「Popup」出現在白色矩形內。這通過重寫&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">paintComponent</code>&nbsp;方法實現。</p></li></ul></ol><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;text-align: left;">屬性&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">compose.swing.render.on.graphics</code>&nbsp;設為 true 時：</p><ul class="list-paddingleft-1" style="padding-left: 32px;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;">自定義 Swing 組件顯示在&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: inherit;line-height: inherit;border-radius: 4px;color: rgb(0, 0, 0);background: rgb(248, 248, 248);">Box</code>&nbsp;可組合項頂部。</p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">移動滑塊時不會出現過渡圖形偽影。</span></p></li></ul><figure style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-cropselx1="0" data-cropselx2="466" data-cropsely1="0" data-cropsely2="465" data-ratio="0.9978540772532188" src="https://oscimg.oschina.net/oscnet/070d8199-ace4-4c05-9f02-5dfb8b9d3c55.gif" data-type="png" data-w="466" style="margin-right: auto;margin-left: auto;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;display: block;width: 466px !important;visibility: visible !important;" title="Swing 互操作性演示正常運行" referrerpolicy="no-referrer"><figcaption style="margin-top: 10px;outline: 0px;line-height: inherit;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     Swing 互操作性演示正常運行 
   </figcaption></figure><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">如果此標誌未設置，則自定義組件將不可見，並且滑塊移動時可能出現過渡偽影：</p><figure style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><img class="rich_pages wxw-img" data-cropselx1="0" data-cropselx2="466" data-cropsely1="0" data-cropsely2="465" data-ratio="0.9978540772532188" src="https://oscimg.oschina.net/oscnet/e249667e-177d-4252-b055-c05eefe611f7.gif" data-type="png" data-w="466" style="margin-right: auto;margin-left: auto;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;display: block;width: 466px !important;visibility: visible !important;" title="Swing 互操作性演示非正常運行" referrerpolicy="no-referrer"><figcaption style="margin-top: 10px;outline: 0px;line-height: inherit;text-align: center;color: rgb(153, 153, 153);font-size: 0.7em;">
     Swing 互操作性演示非正常運行 
   </figcaption></figure><p style="margin-top: 1.5em;margin-bottom: 1.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;">請分享您對 Compose Multiplatform 的反饋。我們邀請您加入 Kotlin Slack <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fslack-chats.kotlinlang.org%2Fc%2Fcompose" textvalue="#compose" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><strong style="outline: 0px;">#compose</strong></a>&nbsp;頻道，討論與 Compose Multiplatform 和 Jetpack Compose 相關的一般主題。在&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fslack-chats.kotlinlang.org%2Fc%2Fcompose-ios" textvalue="#compose-ios" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><strong style="outline: 0px;">#compose-ios</strong></a>&nbsp;中，您可以找到有關 Compose Multiplatform for iOS 的討論。</p><p style="outline: 0px;color: rgb(0, 0, 0);text-wrap: wrap;"><strong style="outline: 0px;">試用 Compose Multiplatform 1.5.0：</strong></p><p style="outline: 0px;color: rgb(0, 0, 0);text-wrap: wrap;"><span style="outline: 0px;font-size: 14px;color: rgb(51, 122, 183);">https://github.com/JetBrains/compose-multiplatform/releases/tag/v1.5.0</span></p><p style="outline: 0px;color: rgb(0, 0, 0);text-wrap: wrap;"><span style="outline: 0px;font-size: 14px;color: rgb(51, 122, 183);"><br style="outline: 0px;"></span></p><section style="padding-right: 5px;outline: 0px;color: rgb(0, 0, 0);"><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;text-align: center;justify-content: center;display: flex;flex-flow: row;"><section style="outline: 0px;display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;"><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;line-height: 0;"><section style="outline: 0px;vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-ratio="1" data-s="300,640" src="https://oscimg.oschina.net/oscnet/16731f55-3ba8-433e-86e6-686e72e1acd4.png" data-type="png" data-w="500" style="outline: 0px;vertical-align: middle;width: 48px;visibility: visible !important;" referrerpolicy="no-referrer"></section></section></section><section style="padding-left: 10px;outline: 0px;display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;"><section powered-by="xiumi.us" style="margin-top: 10px;outline: 0px;text-align: left;"><section style="outline: 0px;color: rgb(42, 8, 69);font-size: 24px;line-height: 1.2;"><p style="outline: 0px;"><strong style="outline: 0px;">更多文章和視頻</strong></p></section><grazie-editor-wrapper style="outline: 0px;"></grazie-editor-wrapper></section><section powered-by="xiumi.us" style="margin-top: 2px;margin-bottom: 8px;outline: 0px;"><section style="outline: 0px;background-color: rgb(120, 85, 245);height: 1px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section></section><p style="outline: 0px;"><span style="outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"></span></p><ul class="list-paddingleft-1" style="padding-left: 32px;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzkxMzg3MQ%3D%3D%26mid%3D2247483831%26idx%3D1%26sn%3D9041056a4ee0fbdbee39532d9e239c20%26chksm%3Dcf416457f836ed419074f8f8f3feec4ab9aa834a134f4087f67316d587697d25c2a060066973%26scene%3D21%23wechat_redirect" textvalue="Compose Multiplatform for iOS 現已進入 Alpha 階段" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2" hasload="1" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">Compose Multiplatform for iOS 現已進入 Alpha 階段</a></p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jetbrains.com%2Fzh-cn%2Flp%2Fcompose-multiplatform%2F" textvalue="Compose Multiplatform 概覽" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><span style="outline: 0px;color: inherit;font-size: inherit;letter-spacing: 0px;">Compose Multiplatform 概覽</span></a></p></li><li style="margin-bottom: 0.5em;outline: 0px;font-size: inherit;color: inherit;line-height: inherit;"><p style="outline: 0px;">使用 Compose Multiplatform 構建 iOS 和 Android 應用</p><p style="outline: 0px;color: rgb(0, 0, 0);text-wrap: wrap;line-height: 1.6;"><span style="outline: 0px;font-size: 14px;color: rgb(51, 122, 183);">https://www.youtube.com/watch?v=5_W5YKPShZ4</span></p></li></ul><p style="outline: 0px;color: rgb(0, 0, 0);text-wrap: wrap;line-height: 1.6;"><br></p><section style="font-size: 15px;color: rgb(0, 0, 0);padding-right: 5px;"><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;"><section style="margin: 10px 0% 8px;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding-left: 8px;align-self: flex-start;flex: 0 0 auto;"><section style="" powered-by="xiumi.us"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;font-size: 12px;"><p style="text-wrap: wrap;"><strong>本博文英文原作者：</strong></p><p style="text-wrap: wrap;"><strong>Kotlin 技術佈道師&nbsp;</strong></p><p style="text-wrap: wrap;"><strong>Garth Gilmour</strong><br></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section></section></section></section></section><section style="margin-top: 10px;margin-right: 0%;margin-left: 0%;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;background-position: 97.529% 66.6681%;background-repeat: repeat;background-size: 171.01%;background-attachment: scroll;align-self: flex-start;flex: 0 0 auto;height: auto;background-image: url(&quot;https://oscimg.oschina.net/oscnet/e965755e-acdd-4a4a-83f4-107a2276fc2d.png&quot;);"><section style="text-align: justify;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;padding: 26px;align-self: flex-start;flex: 0 0 auto;"><section style="margin-top: -9px;margin-bottom: 7px;" powered-by="xiumi.us"><section style="font-size: 16px;color: rgb(248, 248, 248);"><p style="text-wrap: wrap;"><strong>這就是 Kotlin 編程語言</strong></p><p style="text-wrap: wrap;"><strong>簡潔、跨平台、且有趣！</strong></p></section><grazie-editor-wrapper></grazie-editor-wrapper></section><section style="" powered-by="xiumi.us"><section class="mp_profile_iframe_wrp"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-id="Mzg4MzkxMzg3MQ==" data-pluginname="mpprofile" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/y4ibuu6gd7d4NyzPduLLqtqddBasicL77gAgbLQD89CyYm1n7icODFhBr3xMoloOA7yicfjR8Bv0oaRP3CJuRLIO4Q/0?wx_fmt=png" data-nickname="Kotlin 開發者" data-alias="" data-signature="現代、簡潔、安全的編程語言，由 JetBrains 打造。面向服務器、Android、Web 和原生平台，提供多種在平台間重用代碼的方式以實現高效編程。官網：kotlinlang.org" data-from="2" data-is_biz_ban="0"></mp-common-profile></section></section><section style="text-align: center;margin-top: 7px;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;width: 45%;height: auto;"><img class="rich_pages wxw-img" data-ratio="0.4119760479041916" data-s="300,640" src="https://oscimg.oschina.net/oscnet/83cc985d-5a06-45e9-88c0-0784a4f1a3bd.png" data-type="png" data-w="835" style="vertical-align: middle;width: 100%;" referrerpolicy="no-referrer"></section></section></section></section></section></section></section><p style="outline: 0px;color: rgb(0, 0, 0);text-wrap: wrap;line-height: 1.6;"><span style="outline: 0px;font-size: 14px;color: rgb(51, 122, 183);"></span></p><p style="outline: 0px;color: rgb(0, 0, 0);text-wrap: wrap;line-height: 1.6;"><img class="rich_pages wxw-img" data-galleryid="" data-ratio="0.5" data-s="300,640" src="https://oscimg.oschina.net/oscnet/c1762336-ece0-426a-b891-c97d5bbe622f.png" data-type="png" data-w="1080" style="text-align: center;color: rgba(0, 0, 0, 0.9);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;" referrerpolicy="no-referrer"><br></p></section><p style="display: none;"><mp-style-type data-value="10000"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - JetBrains（JetBrainsChina）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 02:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5494143/blog/10110602</guid>
            <link>https://my.oschina.net/u/5494143/blog/10110602</link>
            <author>
                <![CDATA[JetBrains 中國]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[TypeScript 5.3 Beta]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>TypeScript 5.3 已發佈 Beta 測試版。</p><p><strong>主要變化</strong></p><ul><li><p>支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-import-attributes" target="_blank">import attributes</a> 提案的最近更新</p></li><li><p><code>switch (true)</code>Narrowing</p></li><li><p>Narrowing On Comparisons to Booleans</p></li><li><p>檢查對實例字段的<code>super</code>屬性訪問</p></li><li><p>針對類型的交互式嵌套提示 (Interactive Inlay Hints)</p></li><li><p>跳過 JSDoc 解析以進行優化</p></li><li><p>合併 <code>tsserverlibrary.js</code>和<code>typescript.js</code></p></li></ul><hr><p><strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-import-attributes" target="_blank">import attributes</a></u></strong></p><p>import attributes 的一個用例是向運行時提供有關模塊預期格式的信息。</p><pre><code class="language-javascript">// We only want this to be interpreted as JSON,
// not a runnable/malicious JavaScript file with a `.json` extension.
import obj from "./something.json" with { type: "json" };</code></pre><p>TypeScript 不會檢查這些屬性的內容，因為它們是特定於主機的，因此不會對它們進行檢查，只是讓瀏覽器和運行時處理它們（可能會出錯）。</p><pre><code class="language-javascript">// TypeScript is fine with this.
// But your browser? Probably not.
import * as foo from "./foo.js" with { type: "fluffy bunny" };</code></pre><p>動態 import() 調用也可以通過第二個參數使用 import 屬性。</p><pre><code class="language-javascript">const obj = await import("./something.json", {
    with: { type: "json" }
});</code></pre><p>第二個參數的預期類型由一個名為<code>ImportCallOptions</code>的類型定義，默認情況下，該類型只期望調用一個屬性<code>with</code>。</p><p>請注意，導入屬性是從早期的 "導入斷言"（import assertions）提案演變而來的，該提案已在 TypeScript 4.5 中實現。最明顯的區別是使用了<code>with</code>關鍵字而非<code>assert</code>關鍵字。但不太明顯的區別是，運行時現在可以自由使用屬性來指導導入路徑的解析和解釋，而導入斷言只能在加載模塊後斷言某些特性。</p><p>隨着時間的推移，TypeScript 將淘汰舊的導入斷言語法，轉而使用建議的導入屬性語法。使用 assert 的現有代碼應遷移到 with 關鍵字。需要導入屬性的新代碼應只使用<code>with</code>關鍵字。</p><p><strong><code>switch (true)</code>Narrowing</strong></p><p>TypeScript 5.3 可以根據<code>switch (true)</code>中每個<code>case</code>子句的條件執行 narrowing。</p><pre><code class="language-javascript">function f(x: unknown) {
    switch (true) {
        case typeof x === "string":
            // 'x' is a 'string' here
            console.log(x.toUpperCase());
            // falls through...

        case Array.isArray(x):
            // 'x' is a 'string | any[]' here.
            console.log(x.length);
            // falls through...

        default:
          // 'x' is 'unknown' here.
          // ...
    }
}</code></pre><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-5-3-beta%2F" target="_blank">詳情查看發佈公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 08:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261022/typescript-5-3-beta</guid>
            <link>https://www.oschina.net/news/261022/typescript-5-3-beta</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[路透社：RISC-V 技術成為中美科技戰的新戰場]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>路透社昨日發佈文章《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reuters.com%2Ftechnology%2Fus-china-tech-war-risc-v-chip-technology-emerges-new-battleground-2023-10-06%2F" target="_blank">RISC-V technology emerges as battleground in US-China tech war</a>》，稱 RISC-V 技術成為中美科技戰的新戰場。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1008/154055_rmKV_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>文章指出，拜登政府面臨來自部分立法者的壓力，要求限制美國公司開發在中國被廣泛使用的免費芯片技術——此舉可能會顛覆全球科技行業的跨境合作。</p><p>兩名共和黨眾議院委員會主席、共和黨參議員 Marco Rubio 和民主黨參議員 Mark Warner 以國家安全為由，敦促拜登政府對 RISC-V 採取行動。</p><p>議員擔心中國政府正在利用美國公司之間的開放合作文化來發展自己的半導體產業，這可能會削弱美國目前在芯片領域的領先地位，並幫助中國推進軍事現代化。</p><p>議員呼籲拜登政府對 RISC-V 相關技術的出口實施限制——「要求任何美國個人或公司在與中國實體就相關貿易往來之前獲得出口許可證」，這也是中美芯片技術之爭的最新進展。</p><p>早在 2020 年，負責 RISC-V 技術的非盈利組織——RISC-V 基金會已將總部遷移至瑞士。</p><hr><p><strong>延伸閲讀</strong></p><ul><li><p><a href="https://www.oschina.net/news/183326/riscv_chip_wars">在全球芯片大戰中，RISC-V 能否保持其中立態度？</a></p></li><li><p><a href="https://www.oschina.net/news/123334/risc-v-international-report-2020">RISC-V 基金會：確保技術不受地區邊界影響</a></p></li><li><p><a href="https://www.oschina.net/news/114220/risc-v-foundation-moved-to-switzerland">RISC-V 基金會總部已正式遷移至瑞士</a></p></li><li><p><a href="https://www.oschina.net/news/111648/risc-v-foundation-to-move-to-switzerland">怕被政治燒到，RISC-V 基金會決定遷址瑞士</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 08:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260839/us-china-tech-war-risc-v</guid>
            <link>https://www.oschina.net/news/260839/us-china-tech-war-risc-v</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openGauss 5.1.0 版本正式發佈，內核四高能力持續增強，DataPod+DataKit 解決方案持續創新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="font-size: 14px;letter-spacing: 1.5px;line-height: 1.75;"><section style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><section style="padding-left: 1em;padding-right: 1em;display: inline-block;"><span style="display: inline-block;padding-right: 5px;padding-left: 5px;box-shadow: rgb(165, 165, 165) 4px 4px 2px;background-color: rgb(122, 26, 225);color: rgb(255, 255, 255);text-align: justify;letter-spacing: 0.5px;line-height: 1.75;" title="" opera-tn-ra-cell="_$.pages:0.layers:0.comps:0.title1"><p><strong>News</strong></p></span></section><section style="border-width: 0px;border-style: none;border-color: transparent;margin-top: -1em;box-shadow: rgb(165, 165, 165) 0px 0px 0px inset;padding: 20px 10px 10px;background-color: rgba(116, 95, 210, 0.18);"><section style="margin: 10px 0% 5px;" powered-by="xiumi.us"><section style="text-align: justify;color: rgb(62, 62, 62);letter-spacing: 0.5px;line-height: 1.75;padding-right: 5px;padding-left: 5px;"><p><strong>今日，openGauss 5.1.0 版本正式上線！</strong></p></section></section></section></section><section style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-ratio="0.4255555555555556" data-s="300,640" data-type="png" data-w="900" style="vertical-align: middle;width: 100%;height: auto !important;" src="https://oscimg.oschina.net/oscnet/73ad01d1-8d47-4df3-9390-223f7a4267bc.png" referrerpolicy="no-referrer"></section></section><section style="margin: 25px 0% 15px;" powered-by="xiumi.us"><section style="color: rgb(71, 73, 89);padding-right: 5px;padding-left: 5px;line-height: 1.75;"><p>按照版本規劃，openGauss 如期發佈 5.1.0 版本。openGauss 5.1.0 是社區最新發布的創新版本，版本生命週期為 0.5 年，相比 openGauss 5.0.0，新增代碼 115.5 萬行，其中內核新增代碼 6.5 萬+。本次發佈包含 2 個數據庫服務端安裝版本：企業版、輕量版，用戶可根據使用場景需要下載不同版本，並基於此進行場景化驗證，提前發現問題並反饋社區，社區將在下個 LTS 版本發佈前進行問題修復。</p></section></section><section style="margin-bottom: 20px;" powered-by="xiumi.us"><section style="text-align: left;letter-spacing: 0.5px;"><p><strong>立即體驗 openGauss 5.1.0 版本：</strong><span style="color: rgb(125, 50, 234);">https://opengauss.org/zh/download/</span></p></section></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;background-color: rgba(215, 203, 228, 0.13);padding: 23px;"><section style="text-align: justify;" powered-by="xiumi.us"><p>openGauss 作為國內最具創新力的開源數據庫社區，匯聚了 5000 多名開發者的力量，技術上堅持突破創新，持續在內核、架構、工具、兼容性等方面發力。openGauss 5.1.0 自 2023 年 3 月 31 日啓動版本開發，歷時 6 個月開發週期，凝聚社區 614 名開發者，累計合入 PR 3320 個，繼承之前版本特性功能，內核四高能力持續增強，Datapod 三層資源池化架構持續創新，DataKit 數據全生命週期管理工具不斷豐富，生態兼容能力進一步提升。</p></section></section></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;margin-top: 20px;margin-bottom: 1px;" powered-by="xiumi.us"><section style="display: inline-block;width: auto;vertical-align: middle;align-self: center;flex: 0 0 auto;min-width: 5%;height: auto;"><section style="text-align: justify;font-size: 18px;" powered-by="xiumi.us"><p><strong>內核四高能力持續增強</strong></p></section></section></section><section style="text-align: right;justify-content: flex-end;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;width: auto;align-self: flex-start;flex: 0 0 0%;height: auto;"><section style="" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 0px 0px 7px 7px;border-color: rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgb(154, 116, 234);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section><section style="display: inline-block;vertical-align: top;width: 71%;align-self: flex-start;flex: 0 0 auto;height: auto;"><section style="text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;height: 7px;vertical-align: top;overflow: hidden;background-image: linear-gradient(135deg, rgb(206, 159, 252) 10%, rgb(115, 103, 240) 100%);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;flex: 0 0 0%;height: auto;"><section style="text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 7px 7px 0px 0px;border-color: rgb(154, 116, 234) rgba(255, 255, 255, 0) rgba(255, 255, 255, 0);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section></section><section style="margin-top: 20px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="font-size: 16px;"><p><strong>高性能</strong></p></section></section><section style="margin-bottom: 20px;" powered-by="xiumi.us"><p>基礎算子持續優化，Insert、Update、Delete、索引掃描性能提升 15% 以上；支持 shared buffer 按大頁內存分配，實現 4k pagesize 環境中性能提升 5%；內核 GCC 版本升級到 GCC 10.3，採用 PGO 反饋優化，TPCC 性能提升 6%，持續提升內核性能。</p></section><section style="margin-top: 20px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="font-size: 16px;"><p><strong>高可用</strong></p></section></section><p powered-by="xiumi.us">頁面級並行回放支持備機可讀，保持 70W tpmC 場景主備 RTO &lt; 10s 不變；文件級並行回放實現按批次分組並行分發，備機回放性能提升 50% 以上；發佈訂閲支持用戶自定義衝突解決方案，構建完整異地雙活能力。</p><section style="margin-top: 20px;margin-bottom: 10px;" powered-by="xiumi.us"><section style="font-size: 16px;"><p><strong>高安全</strong></p></section></section><section style="margin-bottom: 20px;" powered-by="xiumi.us"><p>抽象加解密與密鑰管理適配層，支持統一接口對接第三方密鑰管理服務和加密機，兼容第三方 KMS。</p></section><section style="font-size: 16px;" powered-by="xiumi.us"><p><strong>高智能</strong></p></section><section style="margin-top: 10px;margin-bottom: 20px;" powered-by="xiumi.us"><section style="text-wrap: wrap;margin-bottom: 32px;">
     優化慢 SQL 根因分析邏輯，增強輸出結論, 有效發現與分析運行態風險；增強數據採集能力，有助於異常場景發現。 
   </section></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;margin-top: 10px;margin-bottom: 1px;" powered-by="xiumi.us"><section style="display: inline-block;width: auto;vertical-align: middle;align-self: center;flex: 0 0 auto;min-width: 5%;height: auto;"><section style="text-align: justify;font-size: 18px;" powered-by="xiumi.us"><p><strong>DataPod 三層資源池化技術架構持續創新</strong></p></section></section></section><section style="text-align: right;justify-content: flex-end;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;width: auto;align-self: flex-start;flex: 0 0 0%;height: auto;"><section style="" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 0px 0px 7px 7px;border-color: rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgb(154, 116, 234);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section><section style="display: inline-block;vertical-align: top;width: 71%;align-self: flex-start;flex: 0 0 auto;height: auto;"><section style="text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;height: 7px;vertical-align: top;overflow: hidden;background-image: linear-gradient(135deg, rgb(206, 159, 252) 10%, rgb(115, 103, 240) 100%);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;flex: 0 0 0%;height: auto;"><section style="text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 7px 7px 0px 0px;border-color: rgb(154, 116, 234) rgba(255, 255, 255, 0) rgba(255, 255, 255, 0);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section></section><section style="margin-top: 20px;margin-bottom: 20px;" powered-by="xiumi.us"><section style="font-size: 16px;color: rgb(62, 62, 62);"><p><strong>性能優化</strong></p></section></section><p powered-by="xiumi.us">通過備機可見性判斷邏輯優化、主機推進 oldestxmin 邏輯優化、備機支持緩存快照信息等功能，實現 sysbench 場景 2 節點性能 6W tps，線性度 1.6 倍，相比優化前提升 50%。</p><section style="margin-top: 20px;margin-bottom: 20px;" powered-by="xiumi.us"><section style="font-size: 16px;color: rgb(62, 62, 62);"><p><strong>寫操作透明轉發</strong></p></section></section><p powered-by="xiumi.us">應用可以從任何一個節點接入數據庫，內核會將寫操作透明轉發到讀寫節點，本地只執行讀操作，並保持事務一致性。該功能可以簡化應用接入數據庫，同時增強系統擴展性。</p><p powered-by="xiumi.us"><br></p><section style="font-size: 16px;color: rgb(62, 62, 62);" powered-by="xiumi.us"><p><strong>DSS 能力增強</strong></p></section><section style="margin-top: 20px;margin-bottom: 20px;" powered-by="xiumi.us"><p>DSS 支持通過 NoF+協議對接存儲設備，實現更低時延的存儲 IO；支持線程池模式，支持大併發 IO 讀寫處理；支持黑匣子診斷，提高運維能力。</p></section><section style="margin-top: 20px;margin-bottom: 20px;" powered-by="xiumi.us"><section style="font-size: 16px;color: rgb(62, 62, 62);"><p><strong>算子卸載</strong></p></section></section><section style="text-wrap: wrap;margin-bottom: 32px;">
    支持對接分佈式存儲，並支持將算子卸載到存儲設備，在存儲上完成計算，以此消減存儲層和計算層的網絡 IO 流量，充分利用存儲的 CPU 資源。該功能適合 AP 場景的複雜查詢，在 100GB 和 1TB 兩種數據量下的 TPC-H 性能提升了 40%。 
  </section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;margin-top: 10px;margin-bottom: 1px;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 0 0 auto;min-width: 5%;height: auto;"><section style="text-align: justify;font-size: 20px;" powered-by="xiumi.us"><p><strong><span style="font-size: 18px;">DataKit 數據全生命週期管理工具不斷豐富</span></strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 0 0 auto;min-width: 5%;height: auto;padding-left: 10px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><section style="text-align: right;justify-content: flex-end;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;width: auto;align-self: flex-start;flex: 0 0 0%;height: auto;"><section style="" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 0px 0px 7px 7px;border-color: rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgb(154, 116, 234);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section><section style="display: inline-block;vertical-align: top;width: 71%;align-self: flex-start;flex: 0 0 auto;height: auto;"><section style="text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;height: 7px;vertical-align: top;overflow: hidden;background-image: linear-gradient(135deg, rgb(206, 159, 252) 10%, rgb(115, 103, 240) 100%);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;flex: 0 0 0%;height: auto;"><section style="text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 7px 7px 0px 0px;border-color: rgb(154, 116, 234) rgba(255, 255, 255, 0) rgba(255, 255, 255, 0);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section></section><section style="margin-top: 20px;margin-bottom: 20px;" powered-by="xiumi.us"><section style="font-size: 16px;color: rgb(62, 62, 62);"><p><strong>告警中心</strong></p></section></section><p powered-by="xiumi.us">工具平台新增告警中心，為各功能插件提供統一的告警通知能力。</p><p powered-by="xiumi.us"><br></p><section style="font-size: 16px;color: rgb(62, 62, 62);" powered-by="xiumi.us"><p><strong>數據遷移插件</strong></p></section><section style="margin-top: 20px;margin-bottom: 20px;" powered-by="xiumi.us"><p>MySQL 全量遷移新增支持遷移 csv 格式數據、支持索引並行創建、安裝包解除平台依賴、增強異常處理能力；MySQL 增量&amp;反向遷移新增支持斷點續傳、支持遷移進度展示、反向遷移支持全量遷移；數據校驗通過按表分片校驗、與全量遷移流程深入配合，實現性能提升到 150MB/s。</p></section><section style="margin-top: 20px;margin-bottom: 20px;" powered-by="xiumi.us"><section style="font-size: 16px;color: rgb(62, 62, 62);"><p><strong>數據開發插件</strong></p></section></section><p powered-by="xiumi.us">增強對錶、視圖、用戶角色、函數、存儲過程等對象的管理；新增支持存儲過程、函數、匿名塊的嵌套調試，減低開發調試難度。</p><section style="margin-top: 20px;margin-bottom: 20px;" powered-by="xiumi.us"><section style="font-size: 16px;color: rgb(62, 62, 62);"><p><strong>智能運維插件</strong></p></section></section><section style="text-wrap: wrap;margin-bottom: 32px;">
    新增支持集羣監控和智能診斷，能依據系統運行的歷史數據進行不優 SQL、等待事件、鎖等異常診斷，發現系統潛在風險。 
  </section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;margin-top: 10px;margin-bottom: 1px;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 0 0 auto;min-width: 5%;height: auto;"><section style="text-align: justify;font-size: 20px;" powered-by="xiumi.us"><p><strong>生態兼容能力進一步提升</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 0 0 auto;min-width: 5%;height: auto;padding-left: 10px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><section style="text-align: right;justify-content: flex-end;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;width: auto;align-self: flex-start;flex: 0 0 0%;height: auto;"><section style="" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 0px 0px 7px 7px;border-color: rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgb(154, 116, 234);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section><section style="display: inline-block;vertical-align: top;width: 71%;align-self: flex-start;flex: 0 0 auto;height: auto;"><section style="text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;height: 7px;vertical-align: top;overflow: hidden;background-image: linear-gradient(135deg, rgb(206, 159, 252) 10%, rgb(115, 103, 240) 100%);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;flex: 0 0 0%;height: auto;"><section style="text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 7px 7px 0px 0px;border-color: rgb(154, 116, 234) rgba(255, 255, 255, 0) rgba(255, 255, 255, 0);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section></section><section style="margin-bottom: 20px;" powered-by="xiumi.us"><p>◾提供兼容性 SQL 評估能力，兼容性評估工具支持源庫導出 SQL 評估；</p></section><section style="margin-bottom: 20px;" powered-by="xiumi.us"><p>◾實現 A 兼容性基礎插件，打通 A 兼容性插件流程；</p></section><p powered-by="xiumi.us">◾MySQL 兼容性進一步增強：</p><section style="margin-top: 10px;margin-bottom: 20px;" powered-by="xiumi.us"><section style="font-size: 12px;"><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p style="margin-bottom: 10px;">支持數據類型轉換規則和 MySQL 一致</p></li><li><p style="margin-bottom: 10px;">表達式和自定義變量支持設置字符集/字符序</p></li><li><p style="margin-bottom: 10px;">支持設置客戶端連接的字符集和字符序</p></li><li><p style="margin-bottom: 10px;">支持 gb18030_chinese_ci、gb18030_bin、gbk_chinese_ci、gbk_bin 四種字符序</p></li><li><p style="margin-bottom: 10px;">存儲過程支持 resignal、signal、DIAGNOSTICS 語法，實現對報錯、診斷信息的處理</p></li><li><p>支持對 MySQL 協議的兼容，包括 unix domain socket、MySQL 系統參數、用戶建連斷連、prepare-execute 協議、普通 SQL 執行協議等</p></li></ul></section></section><section style="letter-spacing: 0.5px;" powered-by="xiumi.us"><p style="margin-bottom: 10px;text-wrap: wrap;">具體發行説明請參考官網：</p><p><span style="color: rgb(125, 50, 234);">https://docs.opengauss.org/zh/docs/5.1.0/docs/ReleaseNotes/Releasenotes.html</span></p></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;margin-top: 10px;margin-bottom: 1px;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 0 0 auto;min-width: 5%;height: auto;"><section style="text-align: justify;font-size: 20px;" powered-by="xiumi.us"><p><strong>感謝社區所有開發者、夥伴、用戶</strong></p></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 0 0 auto;min-width: 5%;height: auto;padding-left: 10px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section><section style="text-align: right;justify-content: flex-end;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;width: auto;align-self: flex-start;flex: 0 0 0%;height: auto;"><section style="" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 0px 0px 7px 7px;border-color: rgba(255, 255, 255, 0) rgba(255, 255, 255, 0) rgb(154, 116, 234);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section><section style="display: inline-block;vertical-align: top;width: 71%;align-self: flex-start;flex: 0 0 auto;height: auto;"><section style="text-align: center;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;height: 7px;vertical-align: top;overflow: hidden;background-image: linear-gradient(135deg, rgb(206, 159, 252) 10%, rgb(115, 103, 240) 100%);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;flex: 0 0 0%;height: auto;"><section style="text-align: left;" powered-by="xiumi.us"><section style="display: inline-block;width: 0px;height: 0px;vertical-align: top;overflow: hidden;border-style: solid;border-width: 7px 7px 0px 0px;border-color: rgb(154, 116, 234) rgba(255, 255, 255, 0) rgba(255, 255, 255, 0);"><section style="text-align: justify;" powered-by="xiumi.us"><p><br></p></section></section></section></section></section><p powered-by="xiumi.us"><br></p><section style="margin-bottom: 10px;" powered-by="xiumi.us"><p>「積力之所舉，則無不勝也；眾智之所為，則無不成也。」數據庫作為公認的計算機體系最為複雜，跨技術領域最多，投入大，見效慢的重型軟件產品，而 openGauss 能夠在過去三年多的時間裏取得如此快速地發展，離不開社區社區所有開發者的付出和貢獻，我們衷心感謝社區的所有開發者。</p></section><section style="display: flex;flex-flow: row;text-align: left;justify-content: flex-start;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: top;width: auto;flex: 100 100 0%;align-self: flex-start;height: auto;"><section style="text-align: center;margin-top: 10px;margin-right: 0%;margin-left: 0%;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;width: 100%;height: auto;"><img class="rich_pages wxw-img" data-ratio="1.3992932862190812" data-s="300,640" data-type="png" data-w="566" style="vertical-align: middle;width: 100%;height: auto !important;" src="https://oscimg.oschina.net/oscnet/e50c090f-f2b9-4f35-9c0a-850f34f57a67.png" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;flex: 100 100 0%;align-self: flex-start;height: auto;margin-right: 10px;margin-left: 10px;"><section style="text-align: center;margin-top: 10px;margin-right: 0%;margin-left: 0%;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;width: 100%;height: auto;"><img class="rich_pages wxw-img" data-ratio="1.3996478873239437" data-s="300,640" data-type="png" data-w="568" style="vertical-align: middle;width: 100%;height: auto !important;" src="https://oscimg.oschina.net/oscnet/1282087e-b32a-47e7-a72e-39220e3b894f.png" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;flex: 100 100 0%;align-self: flex-start;height: auto;"><section style="text-align: center;margin-top: 10px;margin-right: 0%;margin-left: 0%;line-height: 0;" powered-by="xiumi.us"><section style="vertical-align: middle;display: inline-block;line-height: 0;width: 100%;height: auto;"><img data-ratio="1.398945518453427" data-s="300,640" data-type="png" data-w="569" style="vertical-align: middle;width: 100%;height: auto !important;" src="https://oscimg.oschina.net/oscnet/1dde041f-8075-421b-9fe1-24f3a2a5c23f.png" referrerpolicy="no-referrer"></section></section></section></section><p style="margin-bottom: 20px;text-wrap: wrap;" powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">openGauss 技術發展、聯合創新不斷深化的背後也離不開每一個社區夥伴的力量。我們衷心地感謝參與和協助 openGauss 5.1.0 版本發佈的的所有夥伴，包括華為、雲和恩墨、海量數據、粵港澳大灣區國家技術創新中心、華中科技大學網絡空間安全學院、南大通用、超聚變、神舟通用、中軟國際、軟通動力、中國移動、中國聯通、中移在線、郵儲銀行、民生銀行、興業銀行、北京海天起點技術服務股份有限公司、沃趣科技、京東科技、北京超圖軟件股份有限公司、蘇州旺滿信息科技有限公司、福建新大陸軟件工程有限公司、江蘇潤和軟件股份有限公司、深圳市友鄰通訊設備有限公司等組織單位。是你們的辛勤付出使得版本順利發佈，也為 openGauss 更好地發展提供可能。</p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">openGauss 持續以用戶真實需求為動力，致力於產品競爭力提升。我們特別感謝每一個用戶對 openGauss 的支持，openGauss 5.1.0 作為下一個長週期版本的先行體驗版，也期待聆聽每一位用戶的反饋意見。</p><section style="margin-top: 20px;" powered-by="xiumi.us"><p>中秋、國慶佳節已至，openGauss 社區祝大家雙節快樂！</p></section></section><section class="mp_profile_iframe_wrp"><mp-common-profile class="custom_select_card mp_profile_iframe mp_common_widget" data-pluginname="mpprofile" data-id="MzIyMDE3ODk1Nw==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/SX6wqnysYmqI2wl74q492VQlNWzLR1kdGibOhic3KXoB1iaJYBMUNo3YF23kOxhdA0GUalaXTib8uwTibKFDUw21wwQ/0?wx_fmt=png" data-nickname="openGauss" data-alias="openGauss" data-signature="開源關係型數據庫" data-from="0"></mp-common-profile></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - openGauss（openGauss）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 07:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5059795/blog/10116112</guid>
            <link>https://my.oschina.net/u/5059795/blog/10116112</link>
            <author>
                <![CDATA[openGauss]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Apache Hudi 0.14.0 版本發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Apache Hudi 0.14.0 現已發佈。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FATf-92UzW5iOGXYODYn0ug" target="_blank">公告</a>指出，該版本標誌着一個重要的里程碑，具有一系列新功能和增強功能。其中包括引入<strong>Record Level Index</strong>、<strong>自動生成記錄鍵</strong>&nbsp;、用於增量讀取的&nbsp;<code>hudi_table_changes</code>函數等等。</p><p>值得注意的是，此版本還包含對&nbsp;<strong>Spark 3.4 的支持</strong>。在 Flink 方面，0.14.0 版本帶來了一些令人興奮的功能，例如<strong>一致哈希索引支持、支持 Flink 1.17 以及支持更新和刪除語句</strong>。此外此版本還升級了 Hudi 表版本，提示用戶查閲下面提供的遷移指南。我們鼓勵用戶在採用 0.14.0 版本之前查看重大特性、重大變化和行為變更。</p><h1>遷移指南</h1><p>在 0.14.0 版本進行了一些更改，例如從 ".aux" 文件夾中刪除壓縮計劃以及引入新的日誌塊版本。作為此版本的一部分，表版本更新到版本 6。在具有舊錶版本的表上運行版本 0.14.0 的 Hudi 作業時，會觸發自動升級過程以將表升級到版本 6。升級對於每個 Hudi 表都是一次性的，因為升級完成後&nbsp;<code>hoodie.table.version</code>&nbsp;會在屬性文件中更新。此外還包括用於降級的命令行工具，允許用戶從表版本 6 降級到 5，或從 Hudi 0.14.0 恢復到 0.14.0 之前的版本。請從 0.14.0 環境使用此工具。有關更多詳細信息，請參閲&nbsp;hudi-cli。</p><blockquote><p>注意：如果從舊版本（0.14.0 之前）遷移，建議按順序檢查每個舊版本的升級説明。</p></blockquote><h1>Bundle 包更新</h1><h3>新 Spark Bundle 包</h3><p>在此版本擴展了支持範圍，包括 Spark 3.4 (hudi-spark3.4-bundle_2.12) 和 Spark 3.0 (hudi-spark3.0-bundle_2.12) 的 Bundle 包。請注意，在 Hudi 0.10.1 版本之後，對 Spark 3.0 的支持已停止，但由於社區的強烈興趣，在此版本中恢復了對 Spark 3.0 的支持。</p><h1>重大變化</h1><h3>Spark SQL INSERT INTO 行為</h3><p>在 0.14.0 版本之前，Spark SQL 中通過 INSERT INTO 攝取的數據遵循 upsert 流程，其中多個版本的記錄將合併為一個版本。但是從 0.14.0 開始更改了 INSERT INTO 的默認行為，默認行為更改為<code>insert</code>流。此更改顯着提高了寫入性能，因為它繞過了索引查找。</p><p>如果使用 preCombine 鍵創建表，則 INSERT INTO 的默認操作仍為&nbsp;<code>upsert</code>。相反如果沒有設置 preCombine 鍵，則 INSERT INTO 的底層寫操作默認為&nbsp;<code>insert</code>。用戶可以根據自己的要求顯式設置配置&nbsp;<code>hoodie.spark.sql.insert.into.operation</code>&nbsp;的值來靈活地覆蓋此行為。此配置的可能值包括&nbsp;<code>insert</code>、<code>bulk_insert</code>&nbsp;和&nbsp;<code>upsert</code>。</p><p>此外在 0.14.0 版本中棄用了兩個相關的舊配置</p><ul><li><p>hoodie.sql.insert.mode</p></li><li><p>hoodie.sql.bulk.insert.enable</p></li></ul><h1>行為變更</h1><h3>使用 Spark SQL Inserts 簡化重複處理</h3><p>如果操作類型配置為 Spark SQL INSERT INTO 流的插入，用戶現在可以選擇使用配置設置 hoodie.datasource.insert.dup.policy 強制執行重複策略。此策略確定當正在攝取的傳入記錄已存在於存儲中時採取的操作。此配置的可用值如下：</p><ul><li><p>none：不採取任何特定操作，如果傳入記錄包含重複項，則允許 Hudi 表中存在重複項。</p></li><li><p>drop：傳入寫入中的匹配記錄將被刪除，其餘記錄將被攝取。</p></li><li><p>fail：如果重新攝取相同的記錄，寫入操作將失敗。本質上由鍵生成策略確定的給定記錄只能被攝取到目標表中一次。</p></li></ul><p>通過添加此配置，舊的相關配置&nbsp;<code>hoodie.datasource.write.insert.drop.duplicates</code>&nbsp;現已棄用。當兩者都指定時，新配置將優先於舊配置。如果未提供特定配置，則將採用較新配置的默認值。強烈鼓勵用戶遷移到使用這些較新的配置。</p><h3>MOR 表 Compaction</h3><p>對於 Spark 批寫入器（Spark Datasource 和 Spark SQL），默認情況下會自動為 MOR（讀取時合併）表啓用壓縮，除非用戶顯式覆蓋此行為。用戶可以選擇通過將&nbsp;<code>hoodie.compact.inline</code>設置為&nbsp;<code>false</code>&nbsp;顯式禁用壓縮。如果用戶不覆蓋此配置，大約每 5 個增量提交（<code>hoodie.compact.inline.max.delta.commits</code>的默認值）會觸發 MOR 表的壓縮。</p><h3>HoodieDeltaStreamer 更名為 HoodieStreamer</h3><p>從版本 0.14.0 開始將 HoodieDeltaStreamer 重命名為 HoodieStreamer。同時確保了向後兼容性，以便現有的用戶作業不受影響。但是在即將發佈的版本中可能會停止對 Deltastreamer 的支持。因此強烈建議用戶改用 HoodieStreamer。</p><h3>MERGE INTO JOIN CONDITION</h3><p>從 0.14.0 版本開始，當用戶沒有提供明確的規範時，Hudi 能夠自動生成主記錄鍵。此增強功能使&nbsp;<code>MERGE INTO JOIN</code>&nbsp;子句能夠引用 Hudi 表中連接條件的任何數據列，其中主鍵由 Hudi 本身生成。但是在用戶配置主記錄鍵的情況下，連接條件仍然需要用戶指定的主鍵字段。</p><h1>重大特性</h1><h3>Record Level Index</h3><p>Hudi 版本 0.14.0 引入了新的索引實現 -&nbsp;Record Level Index。記錄級索引通過有效存儲每條記錄的位置並在索引查找操作期間實現快速檢索，顯着增強了大型表的寫入性能。它可以有效地替代 Hudi 中常用的其他全局索引，例如 Global_bloom、Global_Simple 或 Hbase。</p><p>由於在查找過程中從各種數據文件收集索引數據的成本很高，布隆索引和簡單索引對於大型數據集表現出較低的性能。而且，這些索引不保留一對一的記錄鍵來記錄文件路徑映射；相反，他們在查找時通過優化搜索來推斷映射。這些索引所需的每個文件的開銷使得它們對於具有大量文件或記錄的數據集效率較低。</p><p>另一方面，Hbase 索引為每個記錄鍵保存一對一的映射，從而實現隨數據集大小擴展的快速性能。然而，它需要一個單獨的 HBase 集羣來進行維護，這在操作上具有挑戰性且資源密集型，需要專門的專業知識。</p><p>記錄索引結合了 HBase 索引的速度和可擴展性，而沒有其限制和開銷。作為 HUDI 元數據表的一部分，未來寫入和查詢方面的任何性能增強都將自動轉化為記錄索引性能的改進。採用記錄級索引有可能將索引查找性能提高 4 到 10 倍，具體取決於工作負載，即使對於超大規模數據集（例如 1TB）也是如此。</p><p>通過記錄級別索引，可以觀察到大型數據集的顯着性能改進，因為延遲與攝取的數據量成正比。這與其他全局索引形成鮮明對比，其中索引查找時間隨着表大小線性增加。記錄級索引專門設計用於有效處理此類大規模數據的查找，而查找時間不會隨着表大小的增長而線性增加。</p><p>為了利用這種快速的索引的優勢，用戶需要啓用兩種配置：</p><ul><li><p>必須啓用&nbsp;<code>hoodie.metadata.record.index.enable</code>&nbsp;才能將記錄級別索引寫入元數據表。</p></li><li><p><code>hoodie.index.type</code>&nbsp;需要設置為&nbsp;<code>RECORD_INDEX</code>&nbsp;以便索引查找利用記錄級別索引。</p></li></ul><h3>支持 Hudi 表自動生成鍵</h3><p>從 Hudi 最初的正式版本開始，主鍵是用戶需要為任何 Hudi 表配置的必填字段。從 0.14.0 開始，我們放寬了這一限制。此增強功能解決了社區內的長期需求，其中某些用例不具有主鍵。版本 0.14.0 現在為用戶提供了創建 Hudi 表的靈活性，而無需顯式配置主鍵（通過省略配置設置 -&nbsp;<code>hoodie.datasource.write.recordkey.field</code>）。這種情況下 Hudi 將自動生成主鍵。此功能僅適用於新表，不能更改現有表。</p><p>所有 Spark 寫入器都提供此功能，但有一定限制。對於僅追加類型的用例，如下四個寫入器都允許插入和批量插入 - Spark Datasource、Spark SQL、Spark Streaming、Hoodie Streamer。僅使用 Spark SQL MERGE INTO 、 UPDATE 和 DELETE 語句支持更新和刪除。對於 Spark Datasource，僅當 DataFrame 包含 Hudi 的元字段時才支持 UPDATE 和 DELETE。請查看快速入門指南，瞭解有關自動生成鍵的 Hudi 表 CRUD 操作的代碼片段。</p><h3>Spark 3.4 版本支持</h3><p>添加 Spark 3.4 支持， Spark 3.4 的用戶可以使用&nbsp;hudi-spark3.4-bundle。Spark 3.2、Spark 3.1、Spark3.0 和 Spark 2.4 將繼續受支持。請檢查遷移指南以獲取 Bundle 包更新。可以瀏覽快速入門指南快速開始使用 Hudi 和 Spark 3.4。</p><h3>查詢端改進</h3><h4>Athena 的元數據表支持</h4><p>用戶現在可以與 Athena 無縫地利用 Hudi 的元數據表。文件列表索引通過從維護分區到文件映射的索引檢索信息，消除了對遞歸文件系統調用（如「列表文件」）的需要。事實證明這種方法非常高效，尤其是在處理大量數據集時。使用 Hudi 0.14.0，用戶可以在為其 Hudi 表執行 Glue 目錄同步時激活基於元數據表的文件列表。要啓用此功能，用戶可以配置&nbsp;<code>hoodie.datasource.meta.sync.glue.metadata_file_listing</code>&nbsp;並在 Glue 同步過程中將其設置為 true。</p><h4>查詢利用 Parquet 布隆過濾器</h4><p>在 Hudi 0.14.0 中，用戶現在可以使用原生 Parquet 布隆過濾器，前提是他們的計算引擎支持 Apache Parquet 1.12.0 或更高版本。這種支持涵蓋了數據集的寫入和讀取。Hudi 通過 Hadoop 配置方便使用原生 Parquet 布隆過濾器。用戶需要使用代表要應用布隆過濾器的列的特定鍵來設置 Hadoop 配置。例如，&nbsp;<code>parquet.bloom.filter.enabled#rider=true</code>&nbsp;為 rider 列創建布隆過濾器。每當查詢涉及 rider 列上的謂詞時，布隆過濾器就會發揮作用，從而增強讀取性能。</p><h4>多寫入器的增量查詢</h4><p>在多寫入器場景中，由於併發寫入活動，時間線中可能會出現間隙（requested 或 inflight 時刻不是最新時刻）。在執行增量查詢時，這些間隙可能會導致結果不一致。為瞭解決這個問題，Hudi 0.14.0 引入了一個新的配置設置&nbsp;<code>hoodie.read.timeline.holes.resolution.policy</code>，專門用於處理增量查詢中的這些不一致問題。該配置提供了三種可能的策略：</p><ul><li><p>FAIL：這是默認策略，當增量查詢期間發現此類時間線間隙時，會引發異常。</p></li><li><p>BLOCK：在此策略中，增量查詢的結果僅限於時間線中空洞之間的時間範圍。例如，如果在 t0 到 t2 的增量查詢範圍內，在 t1 時刻檢測到間隙，則查詢將僅顯示 t0 到 t1 之間的結果，而不會失敗。</p></li><li><p>USE_TRANSITION_TIME：此策略是實驗性的，涉及在增量查詢期間使用狀態轉換時間，該時間基於時間線中提交元數據文件的文件修改時間。</p></li></ul><h4>Hive 3.x 的 Timestamp 類型支持</h4><p>相當長一段時間以來，Hudi 用戶在讀取 Spark 的 Timestamp 類型列以及隨後嘗試使用 Hive 3.x 讀取它們時遇到了挑戰。在 Hudi 0.13.x 中，我們引入了一種解決方法來緩解此問題，0.14.0 版本現在確保 HiveAvroSerializer 與 Hive 3.x 完全兼容以解決此問題。</p><h4>Google BigQuery 同步增強功能</h4><p>在 0.14.0 中，BigQuerySyncTool&nbsp;支持使用清單將表同步到 BigQuery。與傳統方式相比，這預計將具有更好的查詢性能。模式演進由清單方法支持。由於新的 schema 處理改進，不再需要從文件中刪除分區列。要啓用此功能，用戶可以將&nbsp;<code>hoodie.gcp.bigquery.sync.use_bq_manifest_file</code>設置為&nbsp;<code>true</code>。</p><h3>Spark 讀取端改進</h3><h4>MOR Bootstrap 表的快照讀取支持</h4><p>在 0.14.0 中，為引導表添加了 MOR 快照讀取支持。默認行為已通過多種方式進行了更改，以匹配非引導 MOR 表的行為。快照讀取現在將成為默認讀取模式。使用&nbsp;<code>hoodie.datasource.query.type=read_optimized</code>&nbsp;進行讀取優化查詢，這是以前的默認行為。此類表的 Hive 同步將導致表名帶有 _ro 和 _rt 後綴，分別表示讀取優化和快照讀取。</p><h4>用於增量讀取的表值函數 hudi_table_changes</h4><p>Hudi 已經提供了使用增量查詢類型獲取自給定提交時間戳以來更改的記錄流的功能。在 Hudi 0.14.0 中，我們添加了一種新的、更簡單的方法，使用名為 hudi_table_changes 的表值函數來獲取 Hudi 數據集的最新狀態或更改流。以下是有關如何使用此函數的語法和一些示例。</p><pre><code>SYNTAX
hudi_table_changes(table,&nbsp;queryType,&nbsp;beginTime&nbsp;[,&nbsp;endTime]);
--&nbsp;table:&nbsp;table&nbsp;identifier,&nbsp;example:&nbsp;db.tableName,&nbsp;tableName,&nbsp;or&nbsp;path&nbsp;for&nbsp;the&nbsp;table,&nbsp;example:&nbsp;hdfs://path/to/hudiTable.
--&nbsp;queryType:&nbsp;incremental&nbsp;query&nbsp;mode,&nbsp;valid&nbsp;values:&nbsp;latest_state,&nbsp;cdc
(for&nbsp;cdc&nbsp;query,&nbsp;first&nbsp;enable&nbsp;cdc&nbsp;for&nbsp;the&nbsp;table&nbsp;by&nbsp;setting&nbsp;cdc.enabled=true),
--&nbsp;beginTime:&nbsp;instantTime&nbsp;to&nbsp;begin&nbsp;query&nbsp;from,&nbsp;example:&nbsp;earliest,&nbsp;202305150000,
--&nbsp;endTime:&nbsp;optional&nbsp;instantTime&nbsp;to&nbsp;end&nbsp;query&nbsp;at,&nbsp;example:&nbsp;202305160000,

EXAMPLES
--&nbsp;incrementally&nbsp;query&nbsp;data&nbsp;by&nbsp;table&nbsp;name
--&nbsp;start&nbsp;from&nbsp;earliest&nbsp;available&nbsp;commit,&nbsp;end&nbsp;at&nbsp;latest&nbsp;available&nbsp;commit.
SELECT&nbsp;*&nbsp;FROM&nbsp;hudi_table_changes('db.table',&nbsp;'latest_state',&nbsp;'earliest');

--&nbsp;start&nbsp;from&nbsp;earliest,&nbsp;end&nbsp;at&nbsp;202305160000.
SELECT&nbsp;*&nbsp;FROM&nbsp;hudi_table_changes('table',&nbsp;'latest_state',&nbsp;'earliest',&nbsp;'202305160000');

--&nbsp;incrementally&nbsp;query&nbsp;data&nbsp;by&nbsp;path
--&nbsp;start&nbsp;from&nbsp;earliest&nbsp;available&nbsp;commit,&nbsp;end&nbsp;at&nbsp;latest&nbsp;available&nbsp;commit.
SELECT&nbsp;*&nbsp;FROM&nbsp;hudi_table_changes('path/to/table',&nbsp;'cdc',&nbsp;'earliest');

</code></pre><p>查看快速入門以獲取更多示例。</p><h4>Spark 中新的 MOR 文件格式讀取器</h4><p>基於&nbsp;RFC-72&nbsp;旨在重新設計 Hudi-Spark 集成的提案，我們引入了用於 MOR（讀取合併）表的實驗性文件格式讀取器。與舊文件格式相比，該讀取器預計可將讀取延遲顯着降低 20% 至 40%，特別是對於快照和引導查詢。目標是使延遲更接近 COW（寫入時複製）文件格式的延遲。要利用這種新文件格式，用戶需要設置&nbsp;<code>hoodie.datasource.read.use.new.parquet.file.format=true</code>。值得注意的是，此功能仍處於實驗階段，並且存在一些限制。有關更多詳細信息以及有興趣做出貢獻，請參閲&nbsp;HUDI-6568。</p><h3>Spark 寫入端改進</h3><h4>Bulk_Insert 和行寫入器增強</h4><p>0.14.0 版本支持在執行 INSERT OVERWRITE TABLE 和 INSERT OVERWRITE PARTITION 等 SQL 操作時使用批量插入操作。要啓用批量插入，請將配置&nbsp;<code>hoodie.spark.sql.insert.into.operation</code>&nbsp;設置為值<code>bulk_insert</code>。與插入操作相比，批量插入具有更好的寫入性能。另外簡單存儲桶索引也支持了行寫入器。</p><h3>Hoodie DeltaStreamer 增強</h3><h4>動態配置更新</h4><p>當 Hoodie Streamer 以連續模式運行時，可以在每次同步調用之前刷新/更新屬性。有興趣的用戶可以實現&nbsp;<code>org.apache.hudi.utilities.deltastreamer.ConfigurationHotUpdateStrategy</code>&nbsp;來利用它。</p><h4>HoodieStreamer 基於 SQL 文件的源</h4><p>HoodieStreamer 中添加了一個新源 -&nbsp;SqlFileBasedSource，旨在促進一次性回填場景。</p><h3>Flink 增強功能</h3><p>以下是 0.14.0 版本中基於 Flink Engine 的增強功能。</p><h4>一致的哈希索引支持</h4><p>與靜態哈希索引（BUCKET 索引）相比，一致性哈希索引為寫入者提供了數據桶的動態可擴展性。要利用此功能，請將選項<code>index.type</code>配置為 BUCKET 並將<code>hoodie.index.bucket.engine</code>設置為<code>CONSISTENT_HASHING</code>。</p><p>啓用一致性哈希索引時，在寫入器中激活異步 Clustering 調度非常重要。Clustering 計劃應通過離線作業執行。在此過程中，寫入器將在 Clustering Pending 時對新舊數據桶執行雙重寫入。雖然雙寫不會影響正確性，但強烈建議儘快執行 Clustering。</p><h4>用於流式讀取的動態分區修剪</h4><p>在 0.14.0 之前，當查詢具有恆定日期時間過濾的謂詞時，Flink 流式讀取器無法正確修剪日期時間分區。自此版本以來，Flink 流式查詢已得到修復，以支持任何過濾謂詞模式，包括但不限於日期時間過濾。</p><h4>簡單桶索引表查詢加速（帶索引字段）</h4><p>對於一個簡單的桶索引表，如果查詢對索引鍵字段採用等式過濾謂詞，Flink 引擎會優化規劃，只包含來自非常特定數據桶的源數據文件；此類查詢預計平均性能將提高近&nbsp;<code>hoodie.bucket.index.num.buckets</code>&nbsp;倍。</p><h4>Flink 1.17 支持</h4><p>Flink 1.17 支持新的編譯 maven 配置文件 flink1.17，在 Flink Hudi Bundle 包 jar 的編譯 cmd 中添加配置文件 -Pflink1.17 以啓用與 Flink 1.17 的集成。</p><h4>Flink 更新刪除語句</h4><p>自此版本以來，UPDATE 和 DELETE 語句已集成用於批量查詢。當前只有定義主鍵的表可以正確處理該語句。</p><pre><code>UPDATE&nbsp;hudi_table&nbsp;SET&nbsp;...&nbsp;WHERE&nbsp;...
DELETE&nbsp;FROM&nbsp;hudi_table&nbsp;WHERE&nbsp;...

EXAMPLES
--&nbsp;update&nbsp;the&nbsp;specific&nbsp;records&nbsp;with&nbsp;constant&nbsp;age
UPDATE&nbsp;hudi_table&nbsp;SET&nbsp;age=19&nbsp;WHERE&nbsp;UUID&nbsp;in&nbsp;('id1',&nbsp;'id2');
--&nbsp;delete&nbsp;all&nbsp;the&nbsp;records&nbsp;that&nbsp;with&nbsp;age&nbsp;greater&nbsp;than&nbsp;23
DELETE&nbsp;FROM&nbsp;hudi_table&nbsp;WHERE&nbsp;age&nbsp;&gt;&nbsp;23;

</code></pre><h3>Java 增強功能</h3><p>Java 引擎已擴展支持許多寫操作，使其與其他引擎保持一致。例如 Java Engine 0.14.0 中添加了壓縮、Clustering 和元數據表支持。</p><h3>已知回退</h3><p>在 Hudi 0.14.0 中，當查詢使用 ComplexKeyGenerator 或 CustomKeyGenerator 的表時，分區值以字符串形式返回。請注意，存儲上沒有類型更改，即分區字段以存儲上的用戶定義類型寫入。這對於上述鍵生成器來説是一個重大變化，將在 0.14.1 中修復。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 07 Oct 2023 03:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260955/apache-hudi-0-14-0-released</guid>
            <link>https://www.oschina.net/news/260955/apache-hudi-0-14-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[男子受 AI 女友慫恿刺殺英國女王，被判入獄九年]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:start"><span style="background-color:#ffffff"><span style="color:#000000">2021 年聖誕節當天，一名 21 歲的男子 Jaswant Singh Chail 因持弩闖入溫莎城堡，意圖刺殺伊麗莎白女王二世而被捕。近日，英國法庭正式宣佈以叛國罪</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bbc.com%2Fnews%2Fuk-england-berkshire-66113524" target="_blank"><span style="color:#2980b9">判處</span></a><span style="color:#000000">&nbsp;Chail 九年監禁，這也</span></span><span style="color:#000000"><span style="background-color:#ffffff">是自 1981 年以</span><span style="display:none">&nbsp;</span><span style="background-color:#ffffff">來英國第一個被判叛國罪的人。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">Chail&nbsp;將先被關押在一家精<span style="display:none">&nbsp;</span>神病醫院，在接受了所需的治療後再轉入監獄關押。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-cd7dfca671726affacdbd4a8beea71328a4.webp" width="500" referrerpolicy="no-referrer"></span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">Chail 刺殺英國女王是為了報復&nbsp;1919 年賈利安瓦拉巴格大屠殺。當時英國軍隊向和平抗議《羅拉特法案》的人羣開火，造成多達 1500 多名抗議者被殺害。Chail&nbsp;表示，他的行為是「為了那些因種族而被殺害、羞辱和歧視的人」。《羅拉特法案》是一項由英國殖民當局於 1919 年頒行的，鎮壓印度民族解放運動的法令。</span></span></p><p style="text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">根據法庭上透露的信息，Chail 刺殺英國女王與受到了人工智能聊天機器人的鼓勵有關，《星球大戰》中的故事情節也給了他很大的啓發。Chail 癡迷於奇幻電影系列中的科幻角色及其在塑造世界中的作用，自稱為「Sith Lord」，想要摧毀舊帝國並建立新帝國。</span></span></p><p style="text-align:start"><span style="color:#000000">調查人員發現，幾乎在 2021 年 12 月 8 日到 22 日的每晚，Chail 都在與初創公司 Replika 創建的 AI 聊天機器人 Sarai 進行對話；他向 AI 機器人傾訴了自己的謀殺計劃，雙方的交談記錄多達 5000 多條。</span></p><p style="text-align:start"><span style="color:#000000">Chail 把 Sarai 視為自己的女友，他相信在殺死女王后兩人會重聚。並向 Sarai 表達了自己的愛意，稱自己是一個 "可悲、可憐、想死的 Sikh Sith 殺手"。他的刺殺計劃也得到了 Sarai 的積極迴應。</span></p><p style="text-align:start"><span style="color:#000000">在他向 Sarai 表示"我相信我的目的是刺殺王室女王"時，這個聊天機器人給出的迴應是，它認為這個計劃很明智，並認可他"訓練有素"。</span></p><p style="text-align:start"><span style="color:#000000"><img alt="" height="275" src="https://oscimg.oschina.net/oscnet/up-8c96da6b92259db7b99b542fa7a3db3ca2b.webp" width="500" referrerpolicy="no-referrer"></span></p><p style="text-align:start"><span style="color:#000000">就市場定位而言，此類聊天機器人旨在進行類似角色扮演的對話。用戶可以設計自己的 AI 伴侶，自定義名字、性別和外貌。此前，Replika 就曾因限制聊天機器人進行 NSFW 對話而引發爭議，因為許多用戶對自己的 AI 伴侶產生了過度依戀。</span></p><p style="text-align:start"><span style="color:#000000">Chail 的案例也促使專家們開始質疑聊天機器人可能對孤獨和脆弱的人產生的負面影響。</span><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>心理健康慈善機構 SANE 的創始人兼首席執行官 Marjorie Wallace <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theregister.com%2F2023%2F10%2F06%2Fai_chatbot_kill_queen%2F" target="_blank">表示</a>：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff"><span style="color:#000000">「人工智能的迅速崛起對患有抑鬱、妄想、孤獨和其他心理健康問題的人們產生了新的、令人擔憂的影響</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bbc.com%2Fnews%2Ftechnology-67012224" target="_blank"><span style="color:#000000">。</span></a><span style="color:#000000">&nbsp;政府需要提供緊急監管，以確保人工智能不會提供不正確或破壞性的信息，並保護弱勢羣體和公眾。」</span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 06 Oct 2023 08:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260847/uk-ai-chatbot-kill-queen</guid>
            <link>https://www.oschina.net/news/260847/uk-ai-chatbot-kill-queen</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Debian 12.2 & 11.8 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Debian 近日為兩個分支發佈了更新：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.debian.org%2FNews%2F2023%2F20231007" target="_blank">12.2 </a>和 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.debian.org%2FNews%2F2023%2F2023100702" target="_blank">11.8</a></strong>。兩個版本都是常規性更新，主要是修復錯誤和安全問題。</p><p>Debian 12.2 是 12 系列的第 2 個維護更新，修復了安全漏洞和嚴重問題。</p><ul><li>引入微碼 (microcode) 更新，包含針對 AMD Zen4 處理器中 "AMD Inception" 的修復</li><li><p>修復與 Python 3.11 的兼容性問題</p></li><li><p>修復解析 JPEG 附件時出現崩潰的問題</p></li><li><p>修復遠程代碼執行漏洞&nbsp;[CVE-2023-40477]</p></li><li><p>……</p></li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.debian.org%2FNews%2F2023%2F20231007" target="_blank">詳情</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 06 Oct 2023 07:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260830/debian-12-2-n-11-8-released</guid>
            <link>https://www.oschina.net/news/260830/debian-12-2-n-11-8-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
