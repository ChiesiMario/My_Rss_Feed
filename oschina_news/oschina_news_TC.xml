<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 24 Jan 2024 13:15:32 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Chrome 將添加多項生成式 AI 功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>從今天開始發佈的 Chrome (M121) 版本起，Chrome 將引進一系列實驗性的生成式 AI 功能。在未來幾天內，如需嘗試這些 Chrome 新功能。只需登錄 Chrome，點擊三點菜單中的「設置」，並前往「實驗性 AI」頁面。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b9cba575d4fce922f4f42aac0344cb6d9d9.png" referrerpolicy="no-referrer"></p><p>需要注意的是，鑑於這些功能處於初步公開實驗階段，目前尚未對企業和教育賬戶開放。</p><p><strong>1. 智能組織瀏覽器標籤頁</strong></p><p>標籤組是管理眾多標籤頁的便捷方式，但手動整理它們可能較為繁瑣。Chrome 的「標籤頁組織器」能自動根據你當前打開的標籤頁建議並創建標籤組。這一功能在處理多重任務時特別有用，比如在 Chrome 中同時規劃旅行、研究某個主題和在線購物。只需右鍵點擊一個標籤頁並選擇「組織相似標籤」，或點擊標籤左側的下拉箭頭即可使用此功能。Chrome 還會為這些新的標籤組建議名稱和 emoji，方便你下次快速找到它們。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a1c0f41719a22527ad6fdd2856be376b9fc.png" referrerpolicy="no-referrer"></p><p><strong>2. 藉助文本生成圖像模型生成個性化壁紙圖片</strong></p><p>可以用 AI 生成個性化壁紙圖片，讓你的瀏覽器更具個性化。你可以輕鬆地基於所選的主題、心情、視覺風格和顏色生成定製化主題。</p><p>操作很簡單，訪問「自定義 Chrome」側面板，點擊「更改主題」，然後選擇「用 AI 創建」。例如，你或許喜歡「極光」主題，並希望以「動畫」風格和「寧靜」心情來展現它。只需選擇這些選項，Chrome 就會為你展現創造性的結果。</p><p><img src="https://oscimg.oschina.net/oscnet/up-5755f6da1b336fed96230dde19e0481af5d.png" referrerpolicy="no-referrer"></p><p><strong>3. 輔助寫作</strong></p><p>在下月發佈的 Chrome 版本中，將推出另一個實驗性的 AI 功能，幫助你在網絡上寫作 —— 無論是為餐館寫點評、回覆邀請，還是諮詢租房信息。</p><p>要開始使用，只需在 Chrome 中訪問任何網站的文本框或字段，右鍵選擇「幫助我寫作」。輸入幾個詞之後，AI 就會開始幫助你撰寫文本。</p><p>例如，假設你在一個租房網站的聯繫表格中。初始草稿可能是「我對這個地方很感興趣 - 你們允許養狗嗎？」而 Chrome 的「幫我寫作」功能則能為你提供更完整、更有説服力的文本建議。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e2e50a0592da5ac9a57d2dac2baef8646b1.png" referrerpolicy="no-referrer"></p><p>詳情：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Fproducts%2Fchrome%2Fgoogle-chrome-generative-ai-features-january-2024%2F" target="_blank">https://blog.google/products/chrome/google-chrome-generative-ai-features-january-2024/</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 10:41:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276552/chrome-generative-ai-features-january-2024</guid>
            <link>https://www.oschina.net/news/276552/chrome-generative-ai-features-january-2024</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[逆天神機 —— 17 寸的 64 核 AMD EPYC 工作站]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>廣東湛江芯聚能科技有限公司最近<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.techradar.com%2Fpro%2Fvideo-of-ridiculously-powerful-64-core-amd-epyc-workstation-laptop-emerges-but-that-pales-in-comparison-to-the-dual-socket-512-core-powerhouse-its-chinese-maker-is-working-on" target="_blank">引發了關注</a></u>，該公司發佈了一款 64 核 AMD EPYC 筆記本電腦，並宣稱正在研發雙插槽 512 核 AMD EPYC 筆電。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-98976404da8694f549b44bc840f81fe1501.png" referrerpolicy="no-referrer"></p><p>芯聚能稱，筆記本電腦市場目前處理器核心數最多的是 i9-13980hx，有 24 核，它研發的內置液冷散熱 64 核 17 寸桌面級顯卡筆記本電腦，多核性能是 i9 13980hx 的兩倍以上，整機厚度為 4.6 釐米，主機厚度僅 3.9 釐米，配備的顯卡是桌面級 RTX4080 16G。</p><p>該筆電有兩個版本，一個配備是基於 Zen3 的 EPYC 7713 CPU，另一個是配備基於 Zen4 的 EPYC 9554。考慮到 EPYC 9554 的價格 7000-9000 美元，這款筆電的價格將會非常昂貴。</p><p><img src="https://oscimg.oschina.net/oscnet/up-b79a3d6145f2049bf098fc17fb908c01094.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-962a7d2163eefd9af82c4da0903594a7f52.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xinjuneng.com.cn%2Fabout.html" target="_blank">http://www.xinjuneng.com.cn/about.html</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 10:18:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276550</guid>
            <link>https://www.oschina.net/news/276550</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OBS Studio 支持 FFmpeg VAAPI AV1 編碼器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OBS Studio 剛剛合併了支持&nbsp;FFmpeg VAAPI AV1 編碼器的 PR，這意味它將支持使用 Linux 的視頻加速接口 (Video Acceleration API, VA-API) 接口進行 AV1 視頻編碼。</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3831b08b3ec190e7ce23ab4742fc13c8d7c.png" referrerpolicy="no-referrer"><br><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fobsproject%2Fobs-studio%2Fpull%2F8832" target="_blank">https://github.com/obsproject/obs-studio/pull/8832</a></u></em></p></blockquote><p>根據描述，該 PR 於去年 5 月開提交，主要是為了添加對 VA-API 的 AV1 支持。</p><p>維護者稱已使用 Mesa 驅動程序成功測試了 VA-API AV1 編碼。因此當涉及到開源 Mesa 驅動程序支持時，VA-API AV1 編碼可用於 AMD Radeon RX 7000 系列顯卡和 Intel Arc 顯卡。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 09:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276546/obs-lands-av1-va-api</guid>
            <link>https://www.oschina.net/news/276546/obs-lands-av1-va-api</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FydeOS for You 增加對 Raspberry Pi 5 的支持，性能更優，體驗更佳]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0px; margin-right:0px"><img alt="" height="720" src="https://oscimg.oschina.net/oscnet/up-fe04bc78f070724f462d97a2e829c3660f9.jpg" width="1280" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">2023 年底，樹莓派基金會終於推出了眾望所歸的 Raspberry Pi 5。Raspberry Pi 5 配備了新的四核 2.4 GHz Cortex-A76 Arm CPU，據稱 CPU 的處理能力是上一代產品的 2-3 倍，一時間成為開發者們的新寵。</p><div><div><img height="720" src="https://pic1.zhimg.com/80/v2-03997cccf738fdb13552a01ffe5ebd58_1440w.webp" width="1280" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">FydeOS v17.1 Nostalgic Reflection 是，針對 Raspberry Pi 5 的首個 FydeOS for You 版本。在此次的發佈裏，值得一提的修改的有：</p><ul><li>Chromium 已升級至<span>&nbsp;</span><code>114.0.5735.*</code>，Chromium OS 平台更新至<span>&nbsp;</span><code>15437.44.17.*</code>，伴隨着以下上游新功能的同步： 
   <ul><li>添加了自定義系統 UI 配色的選擇，讓你的界面和壁紙更搭調，讓系統整體的視覺效果更接近 Material You 設計語言。</li><li>新增窗體分屏管理小部件支持，只需將鼠標懸浮在「最大化」按鈕上時即可出現所有選項，點擊即可快速調整該窗口的尺寸。這項功能還在試驗階段，你需要手動在<span>&nbsp;</span><u><code>chrome://flags#window-layout-menu</code></u><span>&nbsp;</span>中啓用它</li><li>優化了全局 emoji 輸入面板，讓你輸入 emoji 更輕鬆；可以通過按下<span>&nbsp;</span><code>super</code>（<span>&nbsp;</span><code>❖</code><span>&nbsp;</span>或<span>&nbsp;</span><code>⌘</code><span>&nbsp;</span>） +<span>&nbsp;</span><code>Shift</code><span>&nbsp;</span>+<span>&nbsp;</span><code>Space</code><span>&nbsp;</span>呼出它</li><li>新增了在新標籤頁中自定義你的 Chromium 瀏覽器配色和主題的功能</li></ul></li><li>FydeOS 應用商店進行了全新設計，並更新了內容；同時改進了從 FydeOS 應用商店安裝 Android 應用的機制</li><li>新增了「報告問題」和「發送反饋」功能，讓你可以直接在系統內分享你的 FydeOS 使用體驗。你可以通過按<span>&nbsp;</span><code>Alt</code><span>&nbsp;</span>+<span>&nbsp;</span><code>Shift</code><span>&nbsp;</span>+<span>&nbsp;</span><code>I</code><span>&nbsp;</span>調用，或者你也可以在 Chromium 菜單和「關於 FydeOS」頁面中找到它。還請閲讀這個<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Ffydeos.com%2Fdocs%2Fknowledge-base%2Frecipes%2Ffeedback-howto" target="_blank">如何寫出有用反饋的小建議</a></u></li><li>更新了 rEFInd 啓動器二進制文件並且更新了 rEFInd 主題</li><li>更新了一些 FydeOS 系統內置程序的圖標</li><li>增加了 HEVC（h265）視頻播放解碼功能</li><li>對系統備份和還原功能進行了優化</li><li>改進了 FydeOS 中 Linux 子系統的下載和更新方式</li><li>優化了將可選的 Widevine CDM 模塊加載到系統的方式</li><li>其它系統穩定性和性能增強</li><li>優化了系統鏡像的初始分區表及鏡像包裝方式：從 v17 開始，所有針對卡式電腦的 FydeOS for You 鏡像均支持直接燒寫在可啓動的存儲媒介上，無需額外完成一次「安裝」即可直接支持系統的 OTA 升級</li><li>最後，一個小貼士：從 FydeOS v17 開始，你將無法在系統 bash shell 中使用<span>&nbsp;</span><code>sudo su</code><span>&nbsp;</span>來提權，請使用<span>&nbsp;</span><code>sudo -i</code><span>&nbsp;</span>替代</li></ul><p style="margin-left:0; margin-right:0">希望你喜歡本次更新，有什麼想對我們説的，歡迎隨時到<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.fydeos.com%2F" target="_blank"><u>FydeOS 社區</u></a>來告訴我們。</p><p style="margin-left:0; margin-right:0">我們希望也相信，FydeOS 將逐漸成為一個更加開放的平台，你想要的所有程序，都能在 FydeOS 上使用。千里之行，這是我們的第一步，只願今後的每一步都有你相伴。</p></div></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 09:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276545</guid>
            <link>https://www.oschina.net/news/276545</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[紅帽預測開源在 2024 年發展的三個趨勢]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">紅帽全球高級副總裁兼亞太區總經理 Marjet Andriesse <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FtE2Sw1wyYTiBYVg9fbE29w" target="_blank">發文</a>，預測了開源在 2024 年發展的三個趨勢。提出了以下三個可能會對亞太區產生重大影響的關鍵趨勢：</span></p><p><strong><span style="color:#000000">一、超越雲端</span></strong></p><p><span style="color:#000000">過去，企業曾發現從非結構化數據中提取價值是一項充滿挑戰的任務。隨着數據分析的不斷進步，尤其是生成式人工智能（gen AI）對非結構化數據進行獲取和分析的能力，企業能夠更充分地利用他們的數據。這也因此帶來了對數據增加需求的情況，將所有這些數據存儲和處理在雲端可能不再是最為高效的選擇。</span></p><p><span style="color:#000000">通過將邊緣計算與當前的雲策略整合，企業可以獲得「優勢」，更有效地管理預算和工作負載。邊緣計算在亞太地區將繼續發展，預計從 2023 年的 437 億美元增長到 2027 年的 810 億美元。</span></p><p><span style="color:#000000">今年，我們很可能會看到企業繼續尋找優化成本和運營效率的方式，例如採用無服務器計算。開源解決方案也可以使這些企業定製基礎架構，以滿足其需求，在規模上實現更高水平的定製和控制。</span></p><p><strong><span style="color:#000000">二、創新的步伐由 AI 繼續加速</span></strong></p><p><span style="color:#000000">Andriesse 認為，AI 將在 2024 年繼續成為企業的重要優先事項，因為它幾乎改變了每個行業，並以我們才剛剛開始理解的方式影響着社會。儘管這將激發出新工具超越基礎模型的創新，但正是開源能夠支持 gen AI 驅動的應用程序的激增，使業務領導者能夠自信地應對變化的速度和規模。</span></p><p><span style="color:#000000">去年在 GitHub 上，首次為開源做貢獻的人的數量創下了歷史新高，而亞太區的開發者社區推動了相當大的增長。例如，印度擁有超過 1320 萬的開發者，同比增長超過 30%。僅在去年上半年，生成式 AI 項目的數量已經超過了 2022 年的兩倍以上。</span></p><p><span style="color:#000000">但是，當我們尋求利用 AI 解決我們最大的挑戰並減少工作效率低下時，企業需要確保 AI 在訪問、技能和知識上是包容的。業務領導者需要以身作則，引導企業朝着未來準備就緒的工作方式發展，以適應並茁壯成長。</span></p><p><strong><span style="color:#000000">三、安全仍然是首要任務</span></strong></p><p><span style="color:#000000">ChatGPT 將 gen AI 引入主流意識的前沿，改變了人們對 AI 的看法，並利用它改進了在經濟不確定性中的業務工作流程和資源效率。</span></p><p><span style="color:#000000">然而，對這些技術的使用方式也是一個值得關注的問題。根據紅帽 2023 全球科技展望報告，IT 領導者表示安全仍然是首要資金投入的焦點。隨着在當今信息時代數據變得越來越容易獲取，隱私和安全變得更加重要。與開源社區類似，我們可以預期對使用的軟件和組件進行更嚴格的審查。例如，採用更強大的分析工具和自動化安全測試來在開發過程的早期識別任何漏洞。這種範式轉變可能會影響開發人員的工作方式，更加強調在某些設計決策中將安全性作為核心考慮因素。</span></p><p><span style="color:#000000">Andriesse 預計，對安全的持續關注也將改變企業管理數據的方式。為了從數據中獲取最有效的見解，企業必須確保其數據準確且及時。我們將看到更多企業更加關注數據溯源，瞭解其數據的起源、完整性和真實性。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 08:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276536</guid>
            <link>https://www.oschina.net/news/276536</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【直播預告】DBA 會被雲淘汰嗎？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>DBA（Database Administrator），即數據庫管理員，專門負責管理和維護公司的數據庫。然而，隨着上雲的趨勢漸盛，許多企業都把數據庫遷到了雲平台上。雲服務提供商通常會提供自動化工具和標準化服務，這讓 DBA 的工作得到了解放，也產生了一絲危機——有人質疑：畢竟最重要的硬件管理和架構管理已經沒了需求，而日常的監控和優化工作藉助工具就能完成，是否也意味着，DBA 這一崗位要被雲淘汰了？</p><p>但持相反意見的人認為，現在談 DBA 被雲淘汰還為時過早，雲服務更多是輔助工具而非生產工具，它並沒有完全取代 DBA，只是改變了 DBA 的工作方式和職責，讓 DBA 更專注於高級的數據庫管理任務，在數據優化、安全管理、成本管理和合規性方面發揮更大的作用。</p><p>那麼，你怎麼看呢？隨着雲數據庫越來越火，企業對 DBA 這一崗位的需求會減少嗎？雲環境對 DBA 的工作產生了哪些新要求？作為個人的我們，又該補充哪些新知識，才能跟上雲時代的發展呢？</p><p>本期，OSCHINA【開源漫談】特地邀請了 5 位業內具有代表性的專家，直播探討一下，接下來，DBA 會被雲淘汰嗎？</p><p>&nbsp;</p><p><strong>直播主題：</strong>DBA 會被雲淘汰嗎？</p><p><strong>直播時間：</strong>1 月 31 日 19:00 - 20:30</p><p><strong>直播平台：</strong>「OSC 開源社區」視頻號</p><p><strong>主辦方：</strong>開源中國</p><p><strong>特邀嘉賓：</strong>馬工</p><p>&nbsp;</p><p><strong>直播亮點：</strong></p><p>1、DBA 對組織的價值是什麼？是不是不可替代的？</p><p>2、DBA 哪些工作內容是可以用雲數據庫替代的？哪些是不能被雲數據庫替代的？</p><p>3、雲數據庫引入解決了什麼問題？又有什麼新的問題？</p><p>4、雲數據庫究竟普及到什麼程度了？未來究竟會怎麼樣？</p><p>5、普通 DBA 應該怎麼應對雲數據庫？不上雲的企業怎麼應對？</p><p>&nbsp;</p><p><strong>直播嘉賓：</strong></p><div><div><div><p>&nbsp;&nbsp;<strong>主持人：</strong></p><p>&nbsp;&nbsp;馮若航，磐吉雲數 CEO / 創始人，Pigsty 作者，PostgreSQL 中文社區開源技術委員。公眾號《非法加馮》主理人。</p><p>&nbsp;&nbsp;<strong>正方：</strong></p><p>&nbsp;&nbsp;馬工，在北歐從事 Infra 工程師，公眾號《瑞典馬工》主理人。</p><p>&nbsp;&nbsp;李令輝，雲原生數據庫 clapdb 創始人，前乘法雲 CTO，美洽 CTO，滴滴出行首席架構師。目前致力於基於雲上的基礎設施新範式，提供新時代的分析型數據服務。</p><p>&nbsp;&nbsp;<strong>反方：</strong></p><p>&nbsp;&nbsp;李真旭，雲和恩墨的數據庫技術負責人，前 Oracle ACE，數據庫恢復專家。公眾號《Roger 的數據庫專欄》主理人。個人網站 www.killdb.com。</p><p>&nbsp;&nbsp;薛曉剛，Oracle ACE-Pro。PostgreSQL ACE Partner。阿里雲 MVP，墨天輪 MVP。TiDB MVA。ITPUB 論壇內存數據庫版主、核心專家、金牌顧問。個人公眾號：《四海內皆兄弟》。</p></div></div></div><p>&nbsp;</p><p>隨着上雲大潮的到來，傳統的 DBA 崗位會不會被雲服務所替代呢？快掃碼預約直播，談談你的看法吧~還可以進我們的 OSC 技術交流羣，一起抱團學習哦~</p><p style="text-align:center"><img height="2828" src="https://oscimg.oschina.net/oscnet/up-c6a3432048f888f0596656cfb3a5a7fe12b.png" width="750" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p style="text-align:left"><strong>直播福利</strong></p><ul><li><p>互動抽獎：在直播評論區提問，被直播嘉賓回覆的用戶可獲 OSC 魔方一個，名額不限。</p></li><li><p>福袋抽獎：直播中將有多輪抽獎，參與就有機會獲得 OSC T 恤、魔方等。</p></li></ul><p style="text-align:center"><img height="2160" src="https://oscimg.oschina.net/oscnet/up-4828cfaa2774ad6ebd1bd4394f0129e2ea7.png" width="3840" referrerpolicy="no-referrer"></p><p>我們直播間見吧~</p><p>&nbsp;</p><p><strong>特別鳴謝本次合作社區：</strong></p><ul><li><p><strong>Gitee</strong></p></li></ul><p>Gitee（碼雲）是開源中國於 2013 年推出的基於 Git 的代碼託管平台、企業級研發效能平台，提供中國本土化的代碼託管服務。</p><p>截止 2023 年 7 月，Gitee 已經有 1000 萬名註冊用戶和 2500 萬個代碼倉庫，是中國境內規模最大的代碼託管平台。同時，旗下企業級 DevOps 研發效能管理平台 Gitee 企業版已服務超過 26 萬家企業。</p><p>網址：https://gitee.com/</p><p>&nbsp;</p><ul><li><p><strong>PostgreSQL</strong><strong>中文社區</strong></p></li></ul><p>PostgreSQL 中文社區是一個非盈利的民間組織，目前成員都以志願者身份加入，成立的目的在於構建 PG 數據庫技術生態圈子 (內核、用戶培訓機構、廠商、服務商、軟件開發商、高校形成 「業務與利益雙向驅動」 的良性發展生態圈); 幫助企業解決人才培養和企業商用數據庫成本問題，社區會在各運營平台發佈 PostgreSQL 最新信息和 PostgreSQL 相關技術文章，推動 PG 技術在中國的發展。</p><p>官網鏈接：http://www.postgres.cn/index.php/v2/home</p><p>&nbsp;</p><ul><li><p><strong>Pigsty</strong></p></li></ul><p style="text-align:left">Pigsty 是本地優先的 RDS 開源替代，開箱即用的 PostgreSQL 發行版，自帶高可用、監控系統，PITR，IaC 與部署方案。</p><p style="text-align:left">官網鏈接：https://pigsty.cc</p><p>&nbsp;</p><ul><li><p><strong>愛可生開源社區</strong></p></li></ul><p>愛可生開源社區，一個有深度的數據庫開源社區。社區成立於 2017 年，由上海愛可生信息技術股份有限公司發起。以開源高質量的運維工具、日常分享技術乾貨內容、數據庫技術佈道為己任；目前開源的產品有：SQL 質量管理平台 SQLE、分佈式中間件 DBLE 和數據傳輸組件 DTLE 等。在這裏，你將收穫：高質量的技術內容、企業級數據庫工具及服務、豐富的社區活動。</p><p>社區地址：opensource.actionsky.com</p><p>&nbsp;</p><ul><li><p><strong>TiDB</strong></p></li></ul><p>由 TiDB 生態中的開發者、用戶、合作伙伴一起建立的分享、學習平台。TiDB 線上社區匯聚了 33448 位 TiDB 資深用戶（註冊用戶數），所有成員都可以在這裏自由發聲，互相協助解決問題。社區線上論壇 asktug.com 已經積累 23,000+ 個問題帖（主題帖數），90% 的問題都得到了解決，累計總回覆 243,000+ 個（主題帖回覆數）。</p><p>社區地址：asktug.com</p><p>&nbsp;</p><ul><li><p><strong>中國</strong><strong>開源軟件</strong><strong>推進聯盟 </strong><strong>PostgreSQL</strong><strong> 分會</strong></p></li></ul><p>中國開源軟件推進聯盟 PostgreSQL 分會（簡稱中國 PG 分會）於 2017 年成立，是開源聯盟旗下致力於推動 PostgreSQL 技術應用與生態發展的組織。我們的運營範圍包括技術佈道、用戶社羣、峯會與沙龍、培訓與認證、高校教育。</p><p>問答社區：www.pgfans.cn</p><p>&nbsp;</p><ul><li><p><strong>PolarDB</strong></p></li></ul><p>PolarDB&nbsp;開源社區是阿里雲數據庫開源產品 PolarDB 的技術交流平台，PolarDB 可以 100% 兼容 MySQL 和 PostgreSQL 生態，助力開發者和客戶通過開源版本快速使用阿里雲數據庫產品技術，並參與到技術產品的迭代過程中來。</p><p>社區地址：openpolardb.com</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 07:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/10929981</guid>
            <link>https://my.oschina.net/u/6852546/blog/10929981</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源向量數據庫 Qdrant 融資 2800 萬美元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">繼 2023 年 4 月完成 750 萬美元種子輪融資後，開源向量數據庫公司 Qdrant <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fqdrant.tech%2Fblog%2Fseries-a-funding-round%2F" target="_blank">宣佈</a>完成 2800 萬美元的 A 輪融資。由 Spark Capital 領投，公司現有投資者 Unusual Ventures 和 42CAP 參投。</span></p><p><span style="color:#000000">總部位於柏林的 Qdrant 成立於 2021 年，定位是面向下一代 AI 應用的向量數據庫，採用 Rust 編寫。Qdrant 是一個向量相似度搜索引擎和向量數據庫，提供了一個生產就緒的服務，帶有一個方便的 API 來存儲、搜索和管理點 —— 帶有額外有效載荷的向量 Qdrant 是為擴展過濾支持而定製的。使它可用於各種神經網絡或基於語義的匹配、分面搜索和其他應用程序。</span></p><p><span style="color:#000000"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-22538a14f07005d4eab56ed5ab65cabd5b7.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">向量數據庫領域在近兩年炙手可熱。向量數據庫公司 Zilliz 於 2022 年 8 月宣佈完成 6000 萬美元 B+ 輪融資，用於 Milvus 開源向量數據庫的商業化；Weaviate 在 2023 年 4 月完成 B 輪 5000 萬美元融資。此外，開源向量數據庫研發商 Chroma 公司也在去年獲得 1800 萬美元種子輪融資，Pinecone 公司則為其專有替代方案籌集了 1 億美元資金。</span></p><p><span style="color:#000000">Qdrant 在公告中表示，他們在過去的兩年裏看到了令人難以置信的用戶增長和開源社區的支持，其最近的下載量已經超過了 500 萬次。目前，Qdrant 的一些知名採用者包括德勤、埃森哲以及馬斯克旗下的 xAI 公司。</span></p><p><span style="color:#000000">Qdrant 首席執行官兼聯合創始人 Andre Zayarni 向 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2024%2F01%2F23%2Fqdrant-open-source-vector-database%2F" target="_blank">TechCrunch</a> 解釋稱，「我們的計劃是在今年第二季度進行下一次融資，但幾個月前我們收到了一份報價，因此決定節省一些時間，現在就開始擴大公司規模。籌資和聘用合適的人總是需要時間的。」</span></p><p><span style="color:#000000">值得注意的是，Zayarni 表示，在收到後續投資報價的同時，公司實際上拒絕了一家"主要數據庫市場參與者"的潛在收購要約。並補充説，鑑於公司目前主要由工程師組成，他們將利用新注入的現金組建業務團隊。</span></p><p><span style="color:#000000">Qdrant 沒有透露哪些客戶正在使用開源 Qdrant 版本，哪些客戶正在使用其託管服務。不過，Zayarni 堅稱，即使公司選擇付費購買附加服務，公司的開源特質也是主要賣點之一。</span></p><p><span style="color:#000000">「在使用專有或純雲計算解決方案時，始終存在被供應商鎖定的風險。如果供應商決定調整價格或更改其他條款，客戶需要同意或考慮遷移到其他替代方案，如果是重型生產用例，這並不容易。通過開源，對數據的控制總是更多一些，而且可以在不同的部署選項之間切換。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 07:18:40 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276529/qdrant-series-a-funding-round</guid>
            <link>https://www.oschina.net/news/276529/qdrant-series-a-funding-round</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[龍芯 LoongArch 架構在 Linux 6.8 內核初步支持 Rust]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>根據內核列表消息，龍芯 LoongArch 架構已在最新 Linux 6.8 版本中提供初步 Rust 支持。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-ec1300f650a539acb9a091893e4201647df.png" referrerpolicy="no-referrer"><br><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2F20240119110700.335741-1-chenhuacai%40loongson.cn%2FT%2F%23u" target="_blank">https://lore.kernel.org/lkml/20240119110700.335741-1-chenhuacai@loongson.cn/T/#u</a></u></em></p></blockquote><p>Linux 6.8 內核和 LoongArch 架構相關的變化還包括將最低 Clang 編譯器版本提升至 v18，為架構添加了內置 DTB 支持，並更新了默認內核配置文件。此外，補丁中還包含了一系列錯誤修復，以提升系統的穩定性和兼容性。</p><p>目前，Linux 6.8 內核的 LoongArch 相關 PR 已經被合併到主線 mainline。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 06:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276520/loongarch-linux-6-8</guid>
            <link>https://www.oschina.net/news/276520/loongarch-linux-6-8</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[200 小時深度體驗分析，DevOps 選型重磅發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#191b1f; margin-left:0px; margin-right:0px; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b31aff555046a4c349e6e088370a204b798.png" referrerpolicy="no-referrer"></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">打造一個功能全面、穩定且用戶體驗友好的 DevOps 平台對於推動持續集成、持續交付、團隊協作和效率提升至關重要。企業在選擇 DevOps 平台時，有的傾向於採用平台類產品，如 Zadig、雲效、Coding 等；而另一些企業則基於企業文化和項目需求，在已有的 CI/CD 工具（如 Jenkins、GitLab、Argo、Tekton）基礎上自建 DevOps 平台，以實現對企業內部 DevOps 方案的定製。無論是選擇平台類產品還是自建平台，都需要在搭建之前進行充分的規劃和評估，以確保滿足企業的需求並提升 DevOps 實踐的效率。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">本文將詳細分析各個 DevOps 平台和工具的設計理念、特點、侷限性等，並從多個維度（團隊規模和業務複雜度、多雲策略和廠商關聯、使用場景和業務需求等）出發，結合企業實際的業務需求給出建議，為企業 DevOps 選型指明方向。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h2_1"></span><h2><strong>DevOps 平台類產品</strong></h2><span id="OSC_h3_2"></span><h3><em><strong>Zadig</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Zadig 是由 KodeRover 公司基於 Kubernetes 研發的自助式雲原生 DevOps 平台，服務端源碼 100% 開放。Zadig 提供靈活可擴展的工作流支持、多種發佈策略編排以及一鍵安全審核等特性。該平台還支持定製的企業級 XOps 敏捷效能看板，深度集成多種企業級平台，並通過項目模板化批量快速接入，實現數千個服務的一鍵納管治理。其主要目標是幫助企業實現產研的數字化轉型，使工程師成為創新引擎，併為數字經濟的無限價值鏈接提供支持<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.koderover.com" target="_blank">[1]</a>。</p><span id="OSC_h4_3"></span><h4><strong>01-Zadig 具有以下幾個核心特性：</strong></h4><ul><li>靈活易用的高併發工作流</li><li>面向開發者的雲原生環境</li><li>高效協同的測試管理</li><li>強大免運維的模板庫</li><li>安全可靠的發佈管理</li><li>穩定高效的客戶交付</li><li>客觀精確的效能度量</li><li>雲原生 IDE 插件</li></ul><span id="OSC_h4_4"></span><h4><strong>02-Zadig 的核心優勢：</strong></h4><ul><li>設計理念：產品級交付，包含代碼、配置、數據全要素的交付</li><li>底座真雲原生架構：Zadig 基於 k8s 底座，支持較高規模的構建部署併發、多個微服務同時交付場景</li><li>用戶接入難度低：Zadig 支持導入和託管現有服務，並對現有流程幾乎無侵入極簡、開放，易於企業內落地，不需要改變用戶行為</li><li>產品可用性較強：3 年開源、大量一線真實場景高頻使用打磨，積眾家之所長，積累 15 萬企業開發者，全球累計部署 50 萬應用，2000 家企業高頻使用，穩定可靠保證，內置眾多最佳實踐工作模式</li><li>產品開放性較強：天生支持企業私有化部署，支持全球多地部署、分佈式交付分發，針對具有全球化戰略的企業更為友好</li></ul><span id="OSC_h4_5"></span><h4><strong>03-Zadig 的侷限性：</strong></h4><ul><li>設計理念和其他 DevOps 平台存在不同，初次接觸的用戶需要一定時間學習和掌握</li><li>系統依賴 K8s，對於對於未採用 K8s、完全處於傳統主機環境的企業項目而言並不適用</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_6"></span><h3><em><strong>雲效</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">雲效是阿里雲提供的一站式 DevOps 平台，提供涵蓋軟件研發全生命週期的研發工具鏈和研發管理服務，並支持公共雲、專有云多種部署形態。通過雲原生新技術和研發新模式，助力創新創業和數字化轉型企業快速實現研發敏捷和組織敏捷，打造「雙敏」組織，實現多倍效能提升<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F153739.html" target="_blank">[2]</a>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">雲效具有項目協作、代碼管理、流水線、製品倉庫、測試管理、應用交付平台、效能洞察等核心能力。</p><span id="OSC_h4_7"></span><h4><strong>01-雲效主要特點：</strong></h4><ul><li>開箱即用</li><li>企業級安全保障</li><li>實踐經驗模板化沉澱</li><li>無縫對接阿里雲產品</li></ul><span id="OSC_h4_8"></span><h4><strong>02-雲效的侷限性：</strong></h4><ul><li>系統比較厚重，遷移成本比較高</li><li>耦合度較高，跟阿里雲產品深度綁定，對於多雲架構的支持不夠友好</li><li>對於非阿里雲工具鏈的擴展較困難</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">雲效與其他平台在設計理念上存在顯著差異，雲效專注於單應用的交付，將環境管理能力主要集中在應用維度。雲效流水線以代碼庫為主要視角，隨着業務增長，流水線數量迅速增加，配置管理難度加大，所以雲效更適用於初期快速啓動 DevOps 的場景。雲效天然親和阿里雲資源和產品，對於多雲需求或全球交付需求的企業而言，接入雲效可能面臨一定的適應難度。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_9"></span><h3><em><strong>Coding</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Coding DevOps 是面向軟件研發團隊的一站式研發協作管理平台，提供從需求到設計、開發、構建、測試、發佈到部署的全流程協同及研發工具支撐<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcoding.net%2Fhelp%2Fdocs%2Fstart%2Fnew.html" target="_blank">[3]</a>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Coding 具有團隊管理、項目協同、代碼倉庫、代碼掃描、持續集成、持續部署、應用管理等核心能力</p><span id="OSC_h4_10"></span><h4><strong>01-Coding 主要特點：</strong></h4><ul><li>一站式協作平台及研發工具鏈</li><li>支持雙態研發體系建設（瀑布模型、敏捷模型）</li><li>項目度量數據可視化</li><li>無縫集成第三方平台</li></ul><span id="OSC_h4_11"></span><h4><strong>02-Coding 的侷限性：</strong></h4><ul><li>以代碼庫為核心的工作流，管理成本較高</li><li>現有工程體系遷移有一定的成本</li><li>耦合度較高，跟騰訊雲產品深度綁定，對於多雲架構的支持不夠友好</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">和其他平台的定位上存在不同，Coding 是流程協同平台，一站式為開發者提供完整的 DevOps 工具鏈。由於其天然親和騰訊雲資源和產品，對於存在多雲架構以及現有業務由其他雲平台支撐的場景不夠友好。在接入 Coding 過程中，需要做服務的初始化，有一定遷移成本。此外，Coding 構建和部署為兩個單獨的模塊，對於習慣在一條工作流走完所有流程（構建、部署、測試、配置變更、數據變更等）的用戶，可能需要重新適應或者調整使用方式。</p><span id="OSC_h2_12"></span><h2>&nbsp;</h2><span id="OSC_h2_13"></span><h2><strong>DevOps 工具類產品</strong></h2><span id="OSC_h3_14"></span><h3><em><strong>Jenkins</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Jenkins 是一款開源、可擴展的自動化構建和交付工具。其設計初衷是為了滿足不同團隊和項目的需求，提供高度可擴展和靈活的平台。通過插件和擴展，Jenkins 賦予開發團隊持續集成和交付的能力，幫助實現軟件開發的自動化、協作和快速交付<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jenkins.io%2Fdoc" target="_blank">[4]</a>。</p><span id="OSC_h4_15"></span><h4><strong>01-Jenkins 的主要特點：</strong></h4><ul><li>擴展性非常強，有大量的插件支持</li><li>分佈式構建</li><li>流水線項目 pipeline as code 支持在代碼倉庫中管理</li></ul><span id="OSC_h4_16"></span><h4><strong>02-Jenkins 的侷限性：</strong></h4><ul><li>系統本身安裝過程不復雜，但對於插件管理非常繁瑣</li><li>項目實施難度大，所有任務都需要寫腳本，維護成本高</li><li>Jenkinsfile 分散到不同的工程中，對於後期維護成本比較高</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">對用戶而言，Jenkins 需依賴眾多插件和大量腳本來解決業務交付過程中的構建、部署、測試和自動化流程串接的難題。對於雲原生的場景而言需要通過腳本的方式來操作集羣，對腳本維護和管理要求比較高。此外 Jenkins 通過插件來管理工作流的權限，權限管理負擔較重。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Zadig 和 Jenkins 的比對請參閲 「<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490637%26idx%3D1%26sn%3D6e0498b37fb15f8b8903c4997e5611d8%26chksm%3Dcfb450edf8c3d9fb758d691081f09fd85d91dbb17534ba9c18c2300725462d3806581efbd237%26scene%3D21%23wechat_redirect" target="_blank"><span style="color:#5f9cef">Zadig vs. Jenkins 詳細比對：時代的選擇與開發者之選</span></a>」一文。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_17"></span><h3><em><strong>GitLab CI/CD</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">GitLab 是一個基於 Git 的版本控制和協作平台。它提供了一套強大的工具，支持團隊協作、代碼託管、持續集成、持續交付等軟件開發過程中的多個方面<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.gitlab.com%2Fee" target="_blank">[5]</a>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">GitLab 具有代碼倉庫管理、CI/CD 流水線、效能管理、敏捷項目管理、集成其他工具等核心能力。</p><span id="OSC_h4_18"></span><h4><strong>01-GitLab 的主要特點：</strong></h4><ul><li>一站式管理 DevOps 工具</li><li>自動化工作流程加速軟件交付</li><li>與雲廠商解耦</li></ul><span id="OSC_h4_19"></span><h4><strong>02-GitLab 的侷限性：</strong></h4><ul><li>As code 工作流配置不直觀，學習和維護成本較高</li><li>缺少基本環境管理能力，需另外搭建其他平台觀測服務的情況</li><li>多角色協同過程中，權限管理比較難，需要給運維測試代碼倉庫權限才能做 CI/CD，風險較大</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">GitLab CI/CD 設計理念是以代碼倉庫為核心，對於小型項目、單倉庫順序交付的場景較為友好，而對於更為複雜的項目和團隊多角色協作，使用方面和管理上存在一定侷限性。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_20"></span><h3><em><strong>Argo</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Argo 是一個基於 Kubernetes CRD 實現的一個開源工具，基於 Kubernetes 的調度能力實現了工作流的控制和任務的運行。同時提供了一個 UI 方便用戶查看任務的詳情<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fargoproj.github.io" target="_blank">[6]</a>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Argo 有三個核心產品 Workflows 、CD、Rollouts，為持續集成、持續交付、持續部署提供底層能力。</p><ul><li>Workflows：雲原生工作流引擎，支持編排構建、測試、部署等場景，支持聲明式地管理複雜任務的執行流程</li><li>CD：基於 GitOps 的理念實現自動化部署、回滾和版本管理</li><li>Rollouts：用於實現 Kubernetes 上的藍綠髮布、金絲雀發佈、漸進式發佈等發佈策略，確保生產發佈的穩定性</li></ul><span id="OSC_h4_21"></span><h4><strong>01-Argo 的侷限性：</strong></h4><ul><li>聲明式的配置，維護和管理成本較高</li><li>本身提供的 Web UI 無法企業級安全性和合規性要求</li><li>適用 K8s 場景，對於傳統主機場景並不適用</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">儘管 Argo 在雲原生工作流引擎方面表現卓越，但對於完整的 DevOps 解決方案仍有欠缺，缺乏一系列企業管理功能，如環境管理、測試管理和權限控制，因此企業可能需要二次開發以建設相應的管理能力，以滿足多角色協作的需求。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_22"></span><h3><em><strong>Tekton</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Tekton 是一個谷歌開源的基於 Kubernetes 的雲原生 CI/CD 框架，通過定義 CRD 的方式，讓用戶可以靈活的自定義流水線以滿足自身 CI/CD 需求<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftekton.dev%2Fdocs" target="_blank">[7]</a>。</p><span id="OSC_h4_23"></span><h4><strong>01-Tekton 的主要特點：</strong></h4><ul><li>高度抽象底層，方便企業定製工作流程</li><li>與雲原生環境無縫對接</li><li>跨雲廠商、技術棧和部署環境，幫助實現標準化的 CI/CD</li></ul><span id="OSC_h4_24"></span><h4><strong>02-Tekton 的侷限性：</strong></h4><ul><li style="color: rgb(25, 27, 31); margin-left: 0px; margin-right: 0px; text-align: start;">適用 K8s 場景，對於傳統主機場景並不適用</li><li style="color: rgb(25, 27, 31); margin-left: 0px; margin-right: 0px; text-align: start;">自定義資源，有一定的學習成本</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Tekton 注重底層靈活性，儘管靈活性強，但也顯著增加了使用的難度。因此，要在 Tekton 上實現完整的 CI/CD 過程，就必須進行二次開發，門檻高，需要消耗一定建設成本。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h2_25"></span><h2><strong>各平台和工具之間的比較</strong></h2><div><img src="https://pic1.zhimg.com/80/v2-5bae69be9f8a1aa5fe51311b1f0fd99c_1440w.webp" referrerpolicy="no-referrer"></div><span id="OSC_h2_26"></span><h2>&nbsp;</h2><span id="OSC_h2_27"></span><h2><strong>DevOps 體系選型建議</strong></h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">企業在選擇 DevOps 平台時，可以從多個角度進行考量，具體選擇取決於企業的需求、文化和項目特點。以下是一些建議：</p><span id="OSC_h4_28"></span><h4><strong>01-團隊規模和業務複雜度：</strong></h4><ul><li><strong>小型團隊：</strong>適用於業務相對簡單，研發為主的團隊，可考慮選擇 GitLab 方案，以代碼管理作為入口，開啓 GitLab CI/CD 功能，適用於強調全方位版本控制的企業。</li><li><strong>中型企業：</strong>對於複雜業務、多角色協作的情況，可選擇一站式平台，如雲效、Coding、Zadig，提供開箱即用的協作工具鏈。</li><li><strong>大型團隊：</strong><span>&nbsp;</span>針對複雜場景、歷史負擔重的團隊，建議選擇功能全面、靈活可擴展的平台，如 Zadig，適用於複雜的異構環境交付流程和大規模的微服務架構。</li></ul><span id="OSC_h4_29"></span><h4><strong>02-多雲架構及全球化戰略需求：</strong></h4><ul><li><strong>多雲架構需求：</strong>若企業有多雲和全球化戰略，首選 Zadig。它天然支持企業私有化部署，廠商中立，友好支持多雲架構，並滿足國際化政策需求（i18n、出海合規等）。</li><li><strong>特定雲服務需求：</strong><span>&nbsp;</span>對於已深度關聯某一雲廠商的企業，可考慮選擇該廠商提供的平台，如雲效（阿里雲關聯）或 Coding（騰訊雲關聯）。</li></ul><span id="OSC_h4_30"></span><h4><strong>03-使用場景和業務需求：</strong></h4><ul><li><strong>全生命週期管理需求：</strong>若企業需全面管理全流程，可選擇 Coding、雲效提供的一站式協作平台。Zadig 平台側重於研發和發佈側的一站式協同，需結合第三方實現業務到研發的銜接。</li><li><strong>雲原生和微服務需求：</strong><span>&nbsp;</span>針對雲原生和微服務架構，Zadig 提供靈活可擴展的工作流支持，適合大規模的構建、部署併發和產品級交付。</li><li><strong>傳統單體業務：</strong>對於傳統的單體業務，Jenkins 是一個靈活且支持強大插件的選擇，滿足基本的構建部署需求。</li><li><strong>K8s 生態需求：</strong>Argo 是專注於 Kubernetes GitOps 持續交付工具，適用於新興企業沒有歷史負擔的情況。</li></ul><span id="OSC_h4_31"></span><h4><strong>04-DevOps 平台建設成本考量：</strong></h4><ul><li><strong>圍繞 CI/CD 工具自建平台成本估算：</strong>圍繞 Jenkins、Tekton、Argo 工具搭建 DevOps 流程串接管理平台，需要組建跨職能、有豐富 DevOps 經驗的團隊，人力成本預估至少 300 萬元/每年。</li><li><strong>直接購買商業 DevOps 平台成本估算：</strong>直接使用雲廠商公有云或採用 Zadig 私有化 DevOps 平台。成本根據團隊規模不同在 5 萬元-20 萬元/每年，可與供應商商談獲取更有競爭力的報價。</li><li><strong>開源商業產品與自研結合成本估算：</strong>針對 200 人以上團隊，推薦選擇 Zadig 作為自研平台的底層「平台工程」框架，結合自身業務進行定製開發。總體成本預估在 50 萬元/每年左右，相較於從零開始搭建團隊，採用 Zadig 可在成本上更具優勢，同時滿足企業特定需求。</li></ul><span id="OSC_h4_32"></span><h4><strong>05-數據的安全與合規考量：</strong></h4><ul><li><strong>下公有云、上行業雲：</strong>隨着技術發展和政企數字化的深入，數據已成為組織中最核心的資產。數據的安全與合規已經成為國內越來越多組織的核心關注點。在這個背景下，將核心的生產過程及數據從公有云轉移到行業私有云，已成為刻不容緩的時代需求。Zadig 作為提供標準私有模式的 DevOps 平台可以直接對接自建雲、私有云，通過雲原生技術架構迭代業務的同時又能滿足數據本地化安全管理的訴求。</li></ul><span id="OSC_h4_33"></span><h4><strong>06-原廠實施考慮因素：</strong></h4><ul><li><strong>專業支持和最佳實踐需求：</strong>如果企業注重由產品開發者提供的專業支持和最佳實踐，以降低試錯成本和減少建設週期，可優先考慮 Zadig 作為原廠實施的選擇。雲效和 Coding 生態夥伴實施，提供的技術支持和最佳實踐可能受制於生態夥伴的服務範圍和能力。</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">後續將推出雲效、Coding 等平台與 Zadig 之間詳細對比文章，提供更全面的選型分析。敬請期待！</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h2_34"></span><h2>參考鏈接：</h2><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[1] Zadig 官方資料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.koderover.com" target="_blank"><span style="color:#5f9cef">https://docs.koderover.com</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[2] 雲效官方資料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F153739.html" target="_blank"><span style="color:#5f9cef">https://help.aliyun.com/document_detail/153739.html</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[3] Coding 官方資料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcoding.net%2Fhelp%2Fdocs%2Fstart%2Fnew.html" target="_blank"><span style="color:#5f9cef">https://coding.net/help/docs/start/new.html</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[4] Jenkins 官方資料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jenkins.io%2Fdoc" target="_blank"><span style="color:#5f9cef">https://www.jenkins.io/doc</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[5] GitLab 官方資料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.gitlab.com%2Fee" target="_blank"><span style="color:#5f9cef">https://docs.gitlab.com/ee</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[6] Argo 官方資料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fargoproj.github.io" target="_blank"><span style="color:#5f9cef">https://argoproj.github.io</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[7] Tekton 官方資料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftekton.dev%2Fdocs" target="_blank"><span style="color:#5f9cef">https://tekton.dev/docs</span></a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">立即體驗 Zadig V2.0 新架構，開啓高效交付之旅！🚀&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968">Zadig，讓工程師更加專注創造</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-16e6b25cd9b3c92bc711c17b21e99e9b040.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491542%26idx%3D1%26sn%3D007a0329060f75cd6daa225fb4c3ed0e%26chksm%3Dcfb45376f8c3da6052fc628ed3083e2c27aa6f64b0b4efb8ee6473e663d62b91de05d7d067c4%26token%3D2032062673%26lang%3Dzh_CN%23rd" target="_blank">閲讀原文</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank">Zadig 在 Github</a>&nbsp;/&nbsp;<a href="https://gitee.com/koderover/zadig">Zadig 在 Gitee</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>推薦閲讀 :&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491527%26idx%3D1%26sn%3D6024fc78adfb92892c170ecc41704e3a%26chksm%3Dcfb45367f8c3da71eff88b1220aef48e5de6ff54788bff81012906443f135e77a99df07f265a%26scene%3D21%23wechat_redirect" target="_blank">Zadig v2.1.0 版本發佈：工作流與環境全面協同升級！</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490637%26idx%3D1%26sn%3D6e0498b37fb15f8b8903c4997e5611d8%26chksm%3Dcfb450edf8c3d9fb758d691081f09fd85d91dbb17534ba9c18c2300725462d3806581efbd237%26scene%3D21%23wechat_redirect" target="_blank">Zadig vs. Jenkins 詳細比對：時代的選擇與開發者之選</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491499%26idx%3D1%26sn%3D0bf38f5bde35f9f0aec0cedca79d74b4%26chksm%3Dcfb4530bf8c3da1d9e9aad6af00d150be6ffd231a3e7801512cb8b749746e3c8ceca2feafadd%26scene%3D21%23wechat_redirect" target="_blank">探索 Zadig 自測模式，一套環境多人協同，釋開發者創造力！</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491474%26idx%3D1%26sn%3D5f7c40d430e16fcbfa69104c4a46a797%26chksm%3Dcfb45332f8c3da247c792998c84b0885a3b40a534cfd2011e0e7ea30a51cadeeabb37fdba14d%26scene%3D21%23wechat_redirect" target="_blank">阿里雲 MSE + Zadig，面向開發者的全鏈路灰度發佈解決方案</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491336%26idx%3D1%26sn%3D805f7d2c44c96cab529ffef120d84ca0%26chksm%3Dcfb453a8f8c3dabe83163a873135f2a72cdddcb9faeecefe5e40f20a358681304484c56cce51%26scene%3D21%23wechat_redirect" target="_blank">ZADIG 專家版傾情上線：一鍵高效發佈，119 元/人月起，社區老友享年終福利！</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 05:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/10926966</guid>
            <link>https://my.oschina.net/koderover/blog/10926966</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源截圖程序 ScreenCapture 渲染引擎遷移到 Skia]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>功能介紹：&nbsp;</p><ul><li><span style="background-color:#ffffff; color:#333333">多屏幕截圖、跨屏幕截圖。</span></li><li><span style="background-color:#ffffff; color:#333333">畫橢圓、正圓、矩形、正方形、箭頭、標號、直線、畫自由路徑線條（填充、非填充、不同顏色、不同線框粗細、可調整大小和位置）。</span></li><li><span style="background-color:#ffffff; color:#333333">馬賽克、橡皮擦（矩形、自由路徑）、文本（滾輪調整文字大小）。</span></li><li><span style="background-color:#ffffff; color:#333333">上一步（Ctrl+Z）、下一步（Ctrl+Y）（歷史路徑中的圖形元素可以調整大小和位置）。</span></li><li><span style="background-color:#ffffff; color:#333333">保存成文件（Ctrl+S）、保存到剪切板（Ctrl+C）。</span></li><li><span style="background-color:#ffffff; color:#333333">取景框，支持快捷鍵複製 RGB 顏色 （Ctrl+R）</span><span style="background-color:#ffffff; color:#333333">和 HEX 顏色（Ctrl+H）。</span></li><li><span style="background-color:#ffffff; color:#333333">在新窗口中釘住截圖區域（Ctrl+P）。</span></li><li><span style="background-color:#ffffff; color:#333333">非常快、低內存消耗、低 CPU 使用率。</span></li><li><span style="background-color:#ffffff; color:#333333">非常小、僅一個可執行文件（4.9M），無需安裝，不依賴任何動態鏈接庫。</span></li><li><span style="background-color:#ffffff; color:#333333">可以非常容易的集成到其他應用中。</span></li><li><span style="background-color:#ffffff; color:#333333">可以隨時修改已繪製的元素（鼠標移到元素上等待 1.6 秒）。</span></li></ul><p>本次更新內容：</p><ul><li>渲染引擎從 Blend2D 切換到 Skia，體積變大了少許，能力增強了很多</li><li>CMake 支持，不再是一個簡單的 VisualStudio 工程</li><li>幾乎重寫了整個項目的代碼，代碼更加易讀，易學，易維護</li><li>優化了很多細節，繪製元素更快，更好。</li></ul><p>項目地址：</p><ul><li><a href="https://gitee.com/horsejs_admin/ScreenCapture">https://gitee.com/horsejs_admin/ScreenCapture</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxland%2FScreenCapture" target="_blank">https://github.com/xland/ScreenCapture</a></li></ul><p><img alt="" height="357" src="https://oscimg.oschina.net/oscnet/up-20b2b15f3e4c3a1dee46f6f75c3049b00c6.png" width="500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 05:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276513/screencapture-skia</guid>
            <link>https://www.oschina.net/news/276513/screencapture-skia</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ioGame17 文檔或將強制收費，netty java 遊戲服務器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>公告</h3><p>不久之後，將會發布 ioGame21；當 ioGame21 發佈後，在線文檔將對應最新版本的 ioGame21；</p><p>開發者如果不打算升級到 ioGame21 的，請提前保存好 ioGame17 相關文檔。當 ioGame21 發佈後，舊的文檔（ioGame17）將從自願付費模式轉為強制付費文檔。<strong>簡單的説，如果你不打算支付這部分文檔費用，請私下保存一份自留使用，但不得以任何形式傳播及公開</strong>。</p><p>同時，ioGame21 在線文檔依舊採用自願付費模式策略。簡單的説，我們提供了最新在線文檔的白嫖方式，如果你打算跟進框架最新版本的，依舊可以選擇白嫖在線文檔。</p><p>最後，由於精力有限，在 ioGame21 發佈後，ioGame17 將不再提供免費的修復。通常一個 fix 的批發價是 8k ~ 50k，如果你的實力雄厚，不想升級且需要 fix 時，請聯繫我們。</p><p>綜上，想繼續白嫖的，請跟進最新版本。ioGame21 在性能、簡化併發編程、吞吐量、編碼方式、全鏈路調用日誌跟蹤、 文檔閲讀...等各方面均有質的飛越。</p><h3>ioGame 是什麼？</h3><blockquote><p>ioGame 的學習成本非常低，可以説是<strong>零學習成本</strong>，即使沒有遊戲編程（網絡編程）經驗，也能輕鬆上手。開發者只需掌握普通的 java 方法或 webMVC 相關知識，就能用框架開發業務，通常在 10 分鐘內就能掌握。框架不要求開發者改變編碼習慣，而是自身適應開發者的需求。</p><p>同時，ioGame 也適用於<strong>網絡遊戲服務器、物聯網、內部系統</strong>及各種需要長連接的場景；框架採用無鎖異步化、事件驅動的架構設計；輕量級，無需依賴任何第三方中間件或數據庫就能支持集羣、分佈式。通過 ioGame 可以很容易的搭建出一個集羣無中心節點、集羣自動化、多進程的分佈式遊戲服務器。</p><p>ioGame 是一個非常適合網絡遊戲開發的框架。可以讓你輕鬆地創建高性能、低延遲、易擴展的遊戲服務器，並且節省時間和資源。如果你想要快速地開發出令人驚豔的網絡遊戲，請不要猶豫，立即選擇 ioGame 吧！框架屏蔽了很多複雜且重複性的工作，並可為項目中的功能模塊結構、開發流程等進行<strong>清晰的組織定義</strong>，減少了後續的項目維護成本。</p></blockquote><h3>ioGame 使用趨勢數據</h3><p>關注 ioGame 的遊戲服務器開發者持續增多，<strong>2022-09 ~ 至今</strong>各月的統計數據；</p><p>這裏的統計信息是關於開發者關注 ioGame 框架相關的，從統計數據中可以看出，由於 ioGame 上手簡單，功能強大等優點，得到了眾多開發者的關注。如果你想知道 ioGame 有沒有人在使用，可以先到這裏看下統計數據、開發者的評價與討論。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgpxk93%23TwVa8" target="_blank">https://www.yuque.com/iohao/game/gpxk93#TwVa8</a></p><p>這裏展示了每月的統計數據，統計數據來源於語雀後台，這些數據都是<strong>真實的、客觀存在的、活的</strong>。</p><blockquote><p><span style="color:#e74c3c"><strong>因為成本的原因，某寶某多還沒有出現能提供這種服務的商家，所以這樣的統計數據也更具真實性。</strong></span></p></blockquote><p>通過統計數據，我們可以看到每天會有很多開發者在訪問 ioGame 的在線文檔，並且這些統計數據不是來源於口嗨的，也不是主觀創造的。</p><p>所以，還在猶豫要不要使用 ioGame 的開發者們，更應該討論的是「為什麼這些開發者會選擇使用 ioGame」，而不是 ioGame 有沒有人在使用的問題。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao" target="_blank">點擊我，到語雀後台查看 ioGame 的數據</a></p><p><img alt="" height="434" src="https://foruda.gitee.com/images/1704787607029603343/5c1f2c07_5475.png" width="700" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 04:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276508</guid>
            <link>https://www.oschina.net/news/276508</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Mozilla 修復了 Firefox 長達 21 年的「陳年老 bug」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Firefox 的工單記錄頁面顯示，一個在 21 年前發現的 bug 終於被修復了。</p><p><img src="https://oscimg.oschina.net/oscnet/up-76c5db83fb95c2268e8259600065cdd5e1d.png" referrerpolicy="no-referrer"><br><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D221154" target="_blank">https://bugzilla.mozilla.org/show_bug.cgi?id=221154</a></u></em></p><p>根據描述，具體錯誤是<strong>表格單元格無法正確處理內容「溢出」的情況</strong>，不支持 'hidden'、<span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">'auto' 和 'scroll' 屬性。</span></p><p>如下圖所示：</p><p><img src="https://oscimg.oschina.net/oscnet/up-df5fc6957b0a41e01c9a1c9f33e781f13d6.png" referrerpolicy="no-referrer"></p><p>開發者在評論中指出，這個錯誤是因表格單元格框架結構存在設計缺陷導致，它沒有像行組框架那樣將框架封裝到可伸縮框架中。</p><p>看起來這不是難以解決的問題，但不知為何拖了 20 年才被修復。去年也報道過類似的修復 Firefox 「陳年老 bug」 新聞：<u><em><a href="https://www.oschina.net/news/261435/22-year-old-firefox-tooltip-bug-fixed" target="_blank">23 歲博士生修復 Firefox 中的 22 年 「幽靈老 Bug」</a></em></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 03:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276504</guid>
            <link>https://www.oschina.net/news/276504</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Oracle 的 2024 年 Java 工作規劃]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Oracle 的 Java 開發者佈道師 Nicolai Parlog 於近日發佈一段<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finside.java%2F2024%2F01%2F18%2Fnewscast-61%2F" target="_blank">視頻</a>，介紹了 2024 年的 Java 工作規劃。其中涉及了一些 OpenJDK 項目，包括 Amber、Babylon、Leyden、Lilliput、Loom、Panama 和 Valhalla。</p><blockquote><p>2024 年，Java 不斷髮展。讓我們看看 OpenJDK 項目 Amber、Babylon、Leyden、Lilliput、Loom、Panama 和 Valhalla 今年的計劃是什麼，以及它們將如何推動 Java 向前發展。無論是模式匹配還是其他語言改進、與外部代碼、內存或平台的交互、內存局部性或效率，還是啓動時間，Java 在 2024 年將在很多領域進行改進。不過請記住，任何一年的大部分工作都不會在同一年發佈，因此許多改進只能在 2025 年或更晚的時間才能使用。</p></blockquote><p><img height="281" src="https://oscimg.oschina.net/oscnet/up-e5e07b35f475f1e4f839ab54e475326a17b.png" width="500" referrerpolicy="no-referrer"></p><p>對於 Babylon 項目，Parlog 提到了 code reflection、擴展 reflection API 以及允許在方法內轉換 Java 代碼等計劃。Babylon 團隊計劃在未來幾周內發佈一些用例工作，例如 auto-differentiating、C# LINQ emulation 和 GPU 編程等。不過，Babylon 項目仍處於早期階段，所以&nbsp;Parlog 預計該項目主線在 2024 年應該不會有任何實質性的內容。</p><p>至於孵化 Java VM 和 API 功能的 Loom 項目，Parlog 認為，該項目備受矚目的日子即將結束；因為虛擬線程已經最終確定，結構化併發和作用域值 API 也已在 Java 22 中達到了第二個預覽版，預計會在今年某個時候完成。Parlog 特別希望能夠在 synchronization non-pinning 和 file I/O non-capturing 方面取得進展，至少在 Linux 上使用 io_uring；但能不能在 2024 年實現不好説，畢竟距離 JDK 23 fork 只有 5 個月的時間了。</p><p>2023 年，Leyden 項目在研究潛在 potential condensers 方面取得了進展，並且提出了一些相當大的性能改進。2024 年的計劃包括完善冷凝器（Condenser）的概念並致力於原型冷凝器的生產準備，但也很難期待今年能有任何有形的成果落地。</p><p>Amber 項目仍然是 Java 語言發展背後的動力源泉，目前預覽的三個功能包括：字符串模板、簡化 main 方法以及 statements before this() and super()。Parlog 預計，這三個功能都將在 2024 年完成。正在探索的功能還包括 with 表達式和 primitive types in patterns。</p><p><img height="283" src="https://oscimg.oschina.net/oscnet/up-96670611d834699b5c2b1066895af7b0c12.png" width="500" referrerpolicy="no-referrer"></p><p>Panama 項目「有三項工作正在進行中」：Vector API 正處於孵化階段、Foreign Function &amp; Memory API 正在改進、jextract 工具正在構建中（Panama 項目 2024 年的主要事項）。</p><p>在 Valhalla 項目中，工作將集中在值類和對象上，它們提供僅具有實例字段且缺乏對象標識的類實例 final。表示 boxed primitives 的類 Integer、Double 和 Byte 是包裝或「box」不需要標識的簡單值的類的示例。刪除標識不僅可以消除開發人員對 == 應用於這些類的含義的困惑，而且還可以顯着減少 boxed Integer、Double 和 Byte 對象的運行時開銷。</p><p>Lilliput 項目旨在縮小 HotSpot JVM 中 Java object headers 的大小並減少 Java 內存佔用。2023 年 Lilliput 合併了一種替代的 fast-locking scheme，以便按預期減小 header size，但該方案在進入黃金階段之前還需進一步改進。因此，項目團隊現在的工作重點是完善 fast-locking scheme，但 Parlog 預計 header size 的改進不會在 2024 落地。</p><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finside.java%2F2024%2F01%2F18%2Fnewscast-61%2F" target="_blank">查看完整視頻</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 03:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276501/oracles-plans-for-java-in-2024</guid>
            <link>https://www.oschina.net/news/276501/oracles-plans-for-java-in-2024</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[如何估算開源軟件的實際價值？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>哈佛商學院戰略小組 (Harvard Business School Strategy Unit) 近日發表論文<em><strong>《The Value of Open Source Software》</strong>，</em>深入研究瞭如何估算開源軟件的實際價值。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-3ca34d03d4b061341454ff8132f8928095d.png" referrerpolicy="no-referrer"></p><p><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpapers.ssrn.com%2Fsol3%2Fpapers.cfm%3Fabstract_id%3D4693148" target="_blank">https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4693148</a></em></u></p></blockquote><p>論文提到，開源軟件 (OSS) 作為一種全球公共產品，在經濟中發揮着至關重要的作用，也是我們今天使用的大多數技術的基礎。然而，由於開源軟件的非貨幣性質和缺乏集中使用跟蹤，很難衡量其價值。因此在經濟計量中，開源軟件在很大程度上仍未被計算在內。</p><p>儘管以前的研究已經估算了重新創建這種軟件的供應方成本，但由於缺乏數據，無法估算出開源軟件創造的更大的需求方（使用）價值。</p><p>為了瞭解廣泛使用的開源軟件的全部經濟和社會價值，研究人員利用了兩個互補來源的獨立全球數據，這些數據記錄了全球數百萬企業使用開源軟件的情況。</p><p>他們首先通過計算<strong>重新創建一次最廣泛使用的開源軟件的成本來估算供應方價值</strong>。然後<strong>根據每個使用該軟件的公司的替代價值計算需求方價值</strong>——如果沒有開源軟件，這些公司就需要在內部自行開發該軟件。</p><p>按此估算，被廣泛使用的開源軟件的供應方價值為 41.5 億美元，而需求方的價值要大得多，達到 8.8 萬億美元。</p><p>研究人員發現，如果沒有開源軟件，企業在軟件方面的支出將是現在的 3.5 倍。在他們的樣本中，排名前 6 的編程語言佔開源軟件需求方價值的 84%。<strong>此外，96% 的需求方價值由僅 5% 的開源軟件開發者創造</strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 03:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276494</guid>
            <link>https://www.oschina.net/news/276494</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 社區生態委員會第四次會議圓滿召開]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><span style="background-color:#ffffff">2024 年 1 月 23 日，</span><span style="background-color:#ffffff"><strong>openKylin 社區生態委員會第四次會議</strong></span><span style="background-color:#ffffff">圓滿召開。openKylin 社區生態委員會作為社區治理架構之一，主要職責為攜手社區核心夥伴，推動社區生態共建，打造創新解決方案，提升 openKylin 品牌影響力。</span></span></p><p><span><span style="background-color:#ffffff">本次會議由社區生態委員會成員單位</span><span style="background-color:#ffffff"><strong>北京技德系統技術有限公司</strong></span><span style="background-color:#ffffff">承辦，</span><span style="background-color:#ffffff"><strong>openKylin 社區生態委員會主任李震寧</strong></span><span style="background-color:#ffffff">擔任主持，20 家生態委員會單位代表於線上線下參會。會上總結和回顧了</span><span style="background-color:#ffffff"><strong>openKylin 社區兩個月來的運營發展情況</strong><strong>，</strong></span><span style="background-color:#ffffff">並針對</span><span style="background-color:#ffffff"><strong>後續重點活動計劃</strong></span><span style="background-color:#ffffff">等話題進行了討論。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-43ff9bd70670e16aaef0df0d374b5f35fff.jpg" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><span style="background-color:#ffffff"><strong>北京技德系統技術有限公司 CEO 張耀斌</strong></span></span><span style="background-color:#ffffff">作為會議的承辦方代表致辭，他表示很榮幸 openKylin 社區生態委員會走進技德，預祝第四次生態委員會會議圓滿成功！技德作為社區理事單位，成立了 AIService SIG，負責 openKylin 社區中 AI 技術相關的開發和信息交流。未來，技德也將秉承着開源聚力、共創未來的社區理念，與各生態夥伴夥伴共建共享，以社區鏈動產業共振，推動中國開源產業發展。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><span style="background-color:#ffffff"><strong>北京技德系統技術有限公司公共事務部主任王俊</strong></span></span><span><span style="background-color:#ffffff">針對 openKy</span><span style="background-color:#ffffff">lin 社區 2023 年第四季度運營亮點和要點做了回顧，從</span><span style="background-color:#ffffff">社區會員、平台、生態、SIG 和活動等方面進展向各委員進行了彙報，並對 2024 上半年活動計劃做了介紹。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">隨後，社區理事單位代表圍繞生態合作推廣、應用軟件適配和技術深度融合等方面分享了其與社區在 RISC-V 領域的合作成果。openKylin 社區 Release SIG Maintainer 張天雄就 openKylin 版本進展向各委員進行彙報。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">會議最後，各參會委員圍繞社區運營進展及後續活動規劃展開了深入探討，並針對社區建設提出了各自的看法和建議。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff">社區的發展離不開各企業夥伴的大力支持。openKylin 社區生態委員會例會每兩月召開一次，會議期間，各委員代表匯聚一堂，就社區運營進展與規劃進行細緻的探討，對 openKylin 社區運營工作具有重要指導意義。openKylin 社區也將秉持開源、開放的原則，與各夥伴共同參與、共同治理，一起打造中國領先的開源操作系統根社區。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 02:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276492</guid>
            <link>https://www.oschina.net/news/276492</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Firefox 122.0 正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Firefox 122.0 現已發佈，具體更新內容如下：</p><p><strong>New</strong></p><ul><li><p>Firefox 現在會在搜索引擎提供搜索建議時顯示圖像和描述。</p></li></ul><p><img height="214" src="https://oscimg.oschina.net/oscnet/up-4cbc89200801a7e727946349df3e26b39fc.png" width="700" referrerpolicy="no-referrer"></p><ul><li><p>翻譯功能提高了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.mozilla.org%2Fkb%2Fwebsite-translation" target="_blank">翻譯</a>網頁的質量。結果應該更加穩定。這解決了翻譯時頁面內容可能消失或交互式小部件可能損壞的問題。</p></li><li><p>Firefox 現在支持在 macOS 上創建和使用存儲在 iCloud Keychain 中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.apple.com%2Fguide%2Fmac-help%2Fcreate-a-passkey-mchl4af65d1a%2Fmac" target="_blank">密鑰。</a></p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2F" target="_blank">來自 Firefox Suggest 的 MDN Web Docs</a>&nbsp;文章建議將在地址欄中提供，供搜索 Web 開發相關信息的用戶使用。</p></li><li><p>Web 內容的換行規則現在符合 Unicode 標準。這提高了 Web 瀏覽器對換行的兼容性。針對東亞和東南亞最終用戶的另一項改進是，當雙擊中文、日語、緬甸語、老撾語、高棉語和泰語等語言的文本時，Firefox 現在支持正確的語言感知單詞選擇。</p></li><li><p>Firefox 現在為 Ubuntu、Debian 和 Linux Mint 上的 Linux 用戶提供了新的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.mozilla.org%2Fkb%2Finstall-firefox-linux%23w_install-firefox-deb-package-for-debian-based-distributions" target="_blank">.deb 軟件包。</a></p></li></ul><p><strong>Fixed</strong></p><ul><li>各種<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fsecurity%2Fadvisories%2Fmfsa2024-01%2F" target="_blank">安全</a>修復。</li></ul><p><strong>Developer</strong></p><ul><li><p>修復 Inspector Rules 視圖中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffxdx.dev%2Frules-view-enter-key%2F" target="_blank">鍵盤導航</a>。從 Firefox 122 開始，在檢查器中編輯選擇器、屬性名稱或屬性值時，Enter 鍵將不再將焦點移動到下一個輸入，而是驗證輸入的內容並聚焦匹配元素 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1861674" target="_blank">#1861674</a>) 。用戶仍然可以使用 Ctrl + Enter（macOS 上的 Cmd + Enter）或 Tab 來驗證並將焦點移動到下一個輸入。</p></li></ul><p><strong>Web Platform</strong></p><ul><li><p>啓用 offset-position 屬性，這對於大多數 offset-path 值很有用。在 offset-path&nbsp;CSS 屬性中添加了對&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fray" target="_blank">ray()</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fbasic-shape" target="_blank">basic-shape</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fbox-edge%23values" target="_blank">coord-box</a>&nbsp;的支持。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fclip-path" target="_blank">在 Clip-path</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Foffset-path" target="_blank">offset-path CSS 屬性上添加了對</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FSVG%2FElement%2Frect" target="_blank">rect()</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fbasic-shape%2Fxywh" target="_blank">xywh()</a>&nbsp;basic shapes 的支持。</p></li><li><p>Firefox 現在支持使用&nbsp;SMIL by animations&nbsp;&nbsp;對 SVG&nbsp;viewBox&nbsp;屬性進行動畫處理。</p></li><li><p>添加了 LargestContentfulPaint&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FAPI%2FLargestContentfulPaint" target="_blank">API</a>，它在用戶與網頁交互之前提供有關最大圖像或文本繪製的計時信息。</p></li><li><p>現在支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FHTML%2FElement%2Fhr" target="_blank">hr</a><span style="background-color:#ffffff; color:#42425a"><span>&nbsp;</span>in<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FHTML%2FElement%2Fselect" target="_blank">select</a>，允許網站輕鬆地在元素內使用分隔符。</p></li><li><p><code>&lt;select&gt;</code>元素現在支持 showPicker 方法，這可用於通過 JavaScript 觸發下拉行為。</p></li><li><p>未知方案的後備 URL 解析器已更改為<code>DefaultURI</code>，這提高了規範遵循性和 Web 兼容性。</p></li><li><p>啓用&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-arraybuffer-transfer" target="_blank">ArrayBuffer.prototype.transfer 提案</a>方法，該方法可以轉移&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FArrayBuffer" target="_blank">ArrayBuffer</a>&nbsp;數據的所有權。</p></li><li><p>添加了對<span style="background-color:#ffffff; color:#42425a"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FAPI%2FScreen_Wake_Lock_API" target="_blank">Screen Wake Lock API 的</a>支持。</p></li><li><p>Firefox 現在可以識別「webauthn」autocomplete token，並會在表單自動填充對話框中建議使用密碼。</p></li><li><p>腳本現在可以在 Private Browsing 模式下存儲<code>cacheAPI</code>數據。獲得在常規瀏覽模式與 Private Browsing 模式下的統一體驗。</p></li><li><p>為了進一步保護用戶隱私，Firefox 現在會對使用 currentColor 作為輸入的過濾器進行 taints filters。由於顏色可以通過 :visited&nbsp;pseudo selector 設置，它可能包含隱私敏感信息，因此必須將這些 primitives 標記為 tainted。這意味着如果你使用這樣的過濾器，將無法從&nbsp;canvas 中讀取過濾器輸出。</p></li><li><p>現在，Firefox 中默認啓用&nbsp;Uneven Level Protection Forward Error Correction&nbsp;(ULPFEC)。這為 WebRTC 服務提供了另一個可以利用的工具，為互聯網連接不穩定的用戶提高視頻質量。</p></li></ul><p><strong>未解決</strong></p><ul><li>某些配備較舊 AMD CPU 的計算機可能會在文件對話框中看到圖像縮略圖錯誤地呈現為全黑。如果是這種情況，更新顯卡驅動程序應該可以解決此問題。</li></ul><p>詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F122.0%2Freleasenotes%2F" target="_blank">查看更新説明</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 02:23:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276489/firefox-122-0-released</guid>
            <link>https://www.oschina.net/news/276489/firefox-122-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ant Engine —— 開源遊戲引擎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Ant 是由靈犀互娛開發的開源遊戲引擎。現階段僅將代碼倉庫公開，尚未正式發佈。文檔、示例等均待在 Wiki 上逐步完善。</p><p><strong>Ant 目錄結構</strong></p><ul><li>bin：編譯結果，exe/dll/lib 等</li><li>build：編譯的中間結果</li><li>clibs：c/c++代碼</li><li>engine：引擎基礎支持代碼，包括包管理器、啓動代碼等</li><li>pkg：引擎的各個功能包（包與包之間有依賴）</li><li>runtime：引擎運行時的不同平台支持</li><li>test：測試工程</li><li>tools：引擎相關的工具</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 02:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/ant-engine</guid>
            <link>https://www.oschina.net/p/ant-engine</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 摩爾斯電碼練習器 Coffee]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-zclub-coffee" class="anchor" href="https://gitee.com/FredyXu/coffee#zclub-coffee"></a>ZClub Coffee</h1><p>一個基於 ESP32 使用 ESP-IDF 架構開發的摩爾斯電碼練習器，使用 LVGL 製作圖形界面。可以實現摩爾斯電碼的本地練習以及通過網絡與其他使用此項目的 HAM 進行模擬通聯。</p><p><strong>目前項目正處於開發測試階段，不保證所有的功能都能正常使用，僅供有興趣的朋友搶先體驗。</strong></p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/screen_1.png" width="300" referrerpolicy="no-referrer"><h1><a id="user-content-項目計劃及進度" class="anchor" href="https://gitee.com/FredyXu/coffee#%E9%A1%B9%E7%9B%AE%E8%AE%A1%E5%88%92%E5%8F%8A%E8%BF%9B%E5%BA%A6"></a>項目計劃及進度</h1><ul class="task-list"><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 基礎功能</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 電碼錄入</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 電碼解譯</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""><del>配網</del></p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""><del>微信配網</del></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""><del>ESP-TOUCH 配網</del></li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" disabled=""> 模擬通聯</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> WebSocket 方式模擬通聯</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> MQTT 方式模擬通聯</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 設置</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 在練習器上進行設置</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 在 Web 頁面上進行設置</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" disabled=""> 訓練</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 鍵入訓練</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 解碼訓練</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 訓練排行榜</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" disabled=""> 網絡對講</p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" disabled=""> SDR</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 本地 SDR</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 網絡 SDR</li></ul></li></ul><h1><a id="user-content-物料清單" class="anchor" href="https://gitee.com/FredyXu/coffee#%E7%89%A9%E6%96%99%E6%B8%85%E5%8D%95"></a>物料清單</h1><p><strong>鑑於目前為測試階段，此物料清單不作為最終版本使用。所列內容可能隨時有改變。</strong></p><table><thead><tr><th align="left">名稱</th><th align="center">數量</th><th align="left">説明</th></tr></thead><tbody><tr><td align="left">ESP32 開發板</td><td align="center">1</td><td align="left"></td></tr><tr><td align="left">杜邦線</td><td align="center">若干</td><td align="left"></td></tr><tr><td align="left">揚聲器</td><td align="center">1</td><td align="left"></td></tr><tr><td align="left">旋轉編碼器</td><td align="center">1</td><td align="left"></td></tr><tr><td align="left">彩色顯示屏</td><td align="center">1</td><td align="left">顯示控制芯片 ILI9341<br>分辨率 240×320<br>觸摸控制芯片 XPT2046</td></tr><tr><td align="left">3.5 毫米音頻母座</td><td align="center">1</td><td align="left">用於連接電鍵</td></tr><tr><td align="left">3.5 毫米音頻線</td><td align="center">1</td><td align="left">公對公，用於連接電鍵。</td></tr><tr><td align="left">電鍵</td><td align="center">1</td><td align="left">手動或自動均可，或者也可以使用開關代替</td></tr><tr><td align="left">功放</td><td align="center"></td><td align="left">目前項目中並沒有使用功放，後續會添加</td></tr></tbody></table><h1><a id="user-content-使用方法" class="anchor" href="https://gitee.com/FredyXu/coffee#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95"></a>使用方法</h1><h2><a id="user-content-接線" class="anchor" href="https://gitee.com/FredyXu/coffee#%E6%8E%A5%E7%BA%BF"></a>接線</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">DISP:顯示屏  </span><span id="LC2" class="line">TOUCH:觸摸控制引腳（可以不接，使用旋轉編碼器可進行所有操作）</span><span id="LC3" class="line">KEY:電鍵  </span><span id="LC4" class="line">ROT:旋轉編碼器  </span><span id="LC5" class="line">SPK:揚聲器</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>所有模塊的 GND 均接入開發板的 GND 引腳，下表中不再重複説明。</p><table><thead><tr><th align="left">設備</th><th align="center">ESP32</th><th align="left">説明</th></tr></thead><tbody><tr><td align="left">DISP - MOSI</td><td align="center">GPIO13</td><td align="left">或標為 SDI</td></tr><tr><td align="left">DISP - CLK</td><td align="center">GPIO14</td><td align="left">或標為 SCK</td></tr><tr><td align="left">DISP - CS</td><td align="center">GPIO15</td><td align="left"></td></tr><tr><td align="left">DISP - DC</td><td align="center">GPIO2</td><td align="left"></td></tr><tr><td align="left">DISP - RESET</td><td align="center">GPIO4</td><td align="left"></td></tr><tr><td align="left">DISP - VCC</td><td align="center">VIN</td><td align="left"></td></tr><tr><td align="left">DISP - LED</td><td align="center">3V3</td><td align="left"></td></tr><tr><td align="left">TOUCH - IRQ</td><td align="center">GPIO27</td><td align="left"></td></tr><tr><td align="left">TOUCH - CS</td><td align="center">GPIO5</td><td align="left"></td></tr><tr><td align="left">TOUCH - CLK</td><td align="center">GPIO18</td><td align="left">或標為 SCK</td></tr><tr><td align="left">TOUCH - MOSI</td><td align="center">GPIO23</td><td align="left">或標為 DIN</td></tr><tr><td align="left">TOUCH - MISO</td><td align="center">GPIO19</td><td align="left">或標為 DO</td></tr><tr><td align="left">ROT - CLK</td><td align="center">GPIO33</td><td align="left"></td></tr><tr><td align="left">ROT - DT</td><td align="center">GPIO32</td><td align="left"></td></tr><tr><td align="left">ROT - SW</td><td align="center">GPIO12</td><td align="left"></td></tr><tr><td align="left">KEY - A</td><td align="center">GPIO34</td><td align="left">默認手動鍵使用該引腳</td></tr><tr><td align="left">KEY - B</td><td align="center">GPIO35</td><td align="left"></td></tr><tr><td align="left">SPK</td><td align="center">GPIO25</td><td align="left">暫時沒有使用功放，後續接線方法可能會發生改變</td></tr></tbody></table><p>如需更改引腳，可在在 coffee_lib 目錄下的 config.h 文件中進行配置。</p><h2><a id="user-content-固件上傳" class="anchor" href="https://gitee.com/FredyXu/coffee#%E5%9B%BA%E4%BB%B6%E4%B8%8A%E4%BC%A0"></a>固件上傳</h2><p>固件上傳可以使用以下三種方式</p><ul><li>使用樂鑫的 Flash download tool 工具上傳。（僅限 Windows 操作系統）</li><li>使用 IDF 工具上傳。（Windows、Linux 及 MacOS）</li><li>使用 VSCode 插件編譯上傳。（Windows、Linux 及 MacOS）</li></ul><p>以下分別介紹這三種方式的操作方法。</p><h3><a id="user-content-固件下載的方式安裝" class="anchor" href="https://gitee.com/FredyXu/coffee#%E5%9B%BA%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85"></a>固件下載的方式安裝</h3><p><strong>此方式目前僅支持 Windows 操作系統</strong></p><ol><li><p>在<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.espressif.com%2Fzh-hans%2Fsupport%2Fdownload%2Fother-tools">樂鑫工具下載頁面</a>下載 Flash 下載工具。
<img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220907-193850@2x.png" alt="" referrerpolicy="no-referrer"></p></li><li><p>根據自己手上的開發板下載對應的 USB 驅動。目前市面上的 ESP32 開發板所使用的串口轉 USB 芯片多為 CH340 或 CP2102，確認好自己的開發板的芯片信號下載對應驅動即可。</p></li><li><p>確定開發板已經被電腦正確識別後，啓動樂鑫的 Flash 下載工具。
<img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220907-200227@2x.png" alt="" referrerpolicy="no-referrer"></p></li><li><p>啓動後將<code>ChipType</code>選擇為<code>ESP32</code>，其他內容不變。如下圖：</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220907-194229@2x.png" width="200" referrerpolicy="no-referrer"></li><li><p>將 bin 目錄中的 4 個文件分別添加到工具中。記得要將工具中文件名稱前面的複選框勾選，並將每個文件對應的地址偏移寫到文件名後方。具體填寫內容如下表：</p><table><thead><tr><th align="left">文件名</th><th align="center">地址</th></tr></thead><tbody><tr><td align="left">bootloader.bin</td><td align="center">0x1000</td></tr><tr><td align="left">partition-table.bin</td><td align="center">0x8000</td></tr><tr><td align="left">ota_data_initial.bin</td><td align="center">0xd000</td></tr><tr><td align="left">coffee.bin</td><td align="center">0x10000</td></tr></tbody></table></li><li><p>選擇好正確的端口，點擊<code>START</code>後等待下載完成即可。完整的設置如下圖：</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220907-194930@2x.png" width="200" referrerpolicy="no-referrer"><p><strong>再次提醒：一定要將文件名稱前面的複選框勾選上</strong></p></li></ol><h3><a id="user-content-使用 idf 工具上傳" class="anchor" href="https://gitee.com/FredyXu/coffee#%E4%BD%BF%E7%94%A8idf%E5%B7%A5%E5%85%B7%E4%B8%8A%E4%BC%A0"></a>使用 IDF 工具上傳</h3><p>todo</p><h3><a id="user-content-使用 vscode 插件編譯上傳" class="anchor" href="https://gitee.com/FredyXu/coffee#%E4%BD%BF%E7%94%A8vscode%E6%8F%92%E4%BB%B6%E7%BC%96%E8%AF%91%E4%B8%8A%E4%BC%A0"></a>使用 VSCode 插件編譯上傳</h3><blockquote><p>使用 VSCode 中編譯使用的是樂鑫的<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fespressif%2Fvscode-esp-idf-extension">vscode-esp-idf-extension</a>擴展插件。為什麼不用<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fplatformio">PlatformIO</a>呢？因為 PlatformIO 所使用依賴庫大部分都是放在境外的服務器上，由於不便詳細闡述的原因，很多小夥伴沒有辦法正常安裝和使用。但是習慣使用 PlatformIO 的小夥伴也不用擔心，項目源碼在 PlatfromIO 上也可以正常跑通，IDF 版本使用 4.4.x 和 5 都可以，但是由於 IDF 5 的特性，使用的時候需要手動添加一些庫，例如 esp_websocket_client。具體詳情請參考樂鑫官方文檔關於<a href="https://gitee.com/link?target=https%3A%2F%2Fdocs.espressif.com%2Fprojects%2Fesp-idf%2Fzh_CN%2Fv5.0-beta1%2Fesp32%2Fmigration-guides%2Frelease-5.x%2Fremoved-components.html">從 ESP-IDF 中移出或棄用的組件</a>中的內容。</p></blockquote><ol><li><p>在<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.python.org%2Fdownloads%2F">Python 官網的下載頁面</a>下載並安裝 python3。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-221826@2x.png" width="300" referrerpolicy="no-referrer"><p>安裝時記得把底部的兩個複選框都勾選上</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-222624@2x.png" width="300" referrerpolicy="no-referrer"></li><li><p>下載保存源碼文件，git 或下載 zip 文件的方式均可。</p></li><li><p>在<a href="https://gitee.com/link?target=https%3A%2F%2Fcode.visualstudio.com%2F">官網</a>下載 VSCode。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/1662638698095.jpg" width="300/" referrerpolicy="no-referrer"></li><li><p>在 VSCode 中的擴展標籤裏搜索並安裝」ESP-IDF「擴展插件。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-202024@2x.png" width="300/" referrerpolicy="no-referrer"></li><li><p>插件下載完成後，點擊工具欄的」ESP-IDF「圖標，等待一會，初始化完成後會出現 ESP-IDF 安裝配置頁面。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-202329@2x.png" width="300/" referrerpolicy="no-referrer"></li><li><p>出現安裝配置頁面後選擇」ADVANCED「選項。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-202536@2x.png" width="300" referrerpolicy="no-referrer"></li><li><p>進入配置頁面後，在」Select download server「中儘量選擇樂鑫服務器（Espressif）而不是 Github。至於原因...這裏不便展開説明，會被屏蔽。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-202830@2x.png" width="300" referrerpolicy="no-referrer"><p>IDF 的版本選擇 4.4.X。如果選項中沒有，可以勾選」Show all ESP-IDF tags「，之後就可以列出全部可下載版本。</p><p>一切就緒後點擊」Install「。</p></li><li><p>接下來就是耐心等待下載完成</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-203938@2x.png" width="300" referrerpolicy="no-referrer"><p><strong>溫馨提示：如果不出意外的話，這一步驟需要極大的耐心</strong></p></li><li><p>接下來是下載"ESP-IDF Tools"， 同樣需要耐心等待。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-205808@2x.png" width="300" referrerpolicy="no-referrer"><p>不過好在以上兩個步驟的這個過程只需要一次即可。</p></li><li><p>打開下載的項目文件夾，連接好 ESP32 開發板，選擇正確的端口，編譯並上傳。</p></li></ol><h1><a id="user-content-功能介紹" class="anchor" href="https://gitee.com/FredyXu/coffee#%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D"></a>功能介紹</h1><h2><a id="user-content-進入設置頁面" class="anchor" href="https://gitee.com/FredyXu/coffee#%E8%BF%9B%E5%85%A5%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2"></a>進入設置頁面</h2><p>在主頁面按下編碼器按鈕即可進入設置頁面。</p><h2><a id="user-content-web 頁面設置" class="anchor" href="https://gitee.com/FredyXu/coffee#web%E9%A1%B5%E9%9D%A2%E8%AE%BE%E7%BD%AE"></a>Web 頁面設置</h2><p>在主頁長按編碼器按鈕即可彈出一個二維碼，當練習器與手機連接在同一個 WiFi 下時，掃描二維碼即可進入設置頁面。</p><h2><a id="user-content-傳輸內容格式約定" class="anchor" href="https://gitee.com/FredyXu/coffee#%E4%BC%A0%E8%BE%93%E5%86%85%E5%AE%B9%E6%A0%BC%E5%BC%8F%E7%BA%A6%E5%AE%9A"></a>傳輸內容格式約定</h2><p>目前網絡通信部分使用 WebSocket 方式，後續會添加 MQTT 方式可供選擇。兩種方式所傳輸的數據均使用同一種格式約定。具體約定內容如下：</p><p><code>發送時間|呼號|發送內容</code></p><p>其中，<code>發送時間</code>的格式為，小時:分鐘:秒鐘，每個時間使用 2 位數字表示，例如：<code>22:45:32</code>。<br>
每一部分內容之間使用」|「分割。完整示例如下：</p><p><code>22:45:32|BG7YXY|-.-. --.-</code></p><p>傳輸內容中不可包含電碼翻譯內容，電碼翻譯工作在練習器中實現。
如下內容為錯誤傳輸內容</p><p><code>22:45:32|BG7YXY|-.-.C --.-Q</code></p><p>儘管以上的傳輸內容可以正常工作，但是不建議這樣使用。原因如下：</p><ul><li><p>電碼是否需要翻譯在練習器中設定。練習器不過濾傳輸內容，會將所接收到的內容原樣輸出，所以如果將翻譯後的電碼一同傳輸會導致設置不翻譯電碼的用戶顯示出翻譯後的內容。</p></li><li><p>後續功能中還將通過網絡傳輸其他內容，將翻譯後的電碼一同傳輸將影響此功能。</p></li></ul><h2><a id="user-content-自建服務器" class="anchor" href="https://gitee.com/FredyXu/coffee#%E8%87%AA%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8"></a>自建服務器</h2><p>用戶可以自行搭建服務器使用，只需要實現如下功能即可。</p><ol><li>電碼內容通過文本格式傳輸，練習器發送的內容不包含發送時間信息，需要由服務器添加。練習器發送的內容示例如下：<code>BG7YXY|-.-. --.-</code> 。服務器需要將接收到的內容前插入時間信息，時間格式符合上一節」傳輸內容格式約定「中的要求。</li><li>將整理好的數據發送到在線的其他用戶客戶端中。最好能夠帶有羣組功能。後續我會將我的實現源碼共享出來供大家參考。</li></ol><h1><a id="user-content-特別鳴謝" class="anchor" href="https://gitee.com/FredyXu/coffee#%E7%89%B9%E5%88%AB%E9%B8%A3%E8%B0%A2"></a>特別鳴謝</h1><p>感謝 <strong>執水無為</strong> 提供關於練習器通聯訓練的促進機制的創意，稍後會在基礎功能穩定後添加進去。</p><p><strong>感謝在此項目中使用到的開源代碼的所有貢獻者們！世界因為有你們所以如此美好！</strong></p><h1><a id="user-content-更新日誌" class="anchor" href="https://gitee.com/FredyXu/coffee#%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97"></a>更新日誌</h1><p>2023-01-01</p><ul><li>完成練習器設置頁面部分</li></ul><p>2022-09-20</p><ul><li>優化設置部分</li><li>取消微信配網，改為使用 ESP 的 HTTP 服務進行設置</li><li>增加通知對話框</li></ul><p>2022-09-06</p><ul><li>優化按鍵檢查機制</li><li>優化分區表</li><li>調整 - 在播放接收到的電碼時不可鍵入電碼</li></ul><p>2022-09-05</p><ul><li>考慮到上網條件，將開發環境從 PlatformIO 更換到了樂鑫的 IDF 環境，以便下載相關內容的時候避免使用到境外服務器。</li><li>ESP-IDF 版本因為更換開發環境的原因，從 5.1.1 調整到 4.4.3</li></ul><p>2022-09-04</p><ul><li>完成電碼翻譯功能</li></ul>]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 02:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/FredyXu/coffee</guid>
            <link>https://gitee.com/FredyXu/coffee</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | Ngnix 常用配置及和基本功能講解]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left">Ngnix 已經廣泛應用於 J-one 和 Jdos 的環境部署上，本文對 Ngnix 的常用的配置和基本功能進行講解，適合 Ngnix 入門學習。</p><span id="OSC_h1_1"></span><h1>1 核心配置</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">找到 Nginx 安裝目錄下的 conf 目錄下 nginx.conf 文件，Ngnix 的基本功能配置是由它提供的。</p><span id="OSC_h2_2"></span><h2>1.1 配置文件結構</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Nginx 的配置文件 (conf/nginx.conf) 整體上分為如下幾個部分：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/86865a3b-b7da-45c7-838d-9fce9ae9761b20230313164814.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">配置層級圖如下所示。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/81aab960-45ae-4d09-a696-e70efc8bff1620230313164828.png" referrerpolicy="no-referrer"></p><span id="OSC_h2_3"></span><h2>1.2 配置文件示例</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">一個比較全的配置文件示例如下。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#880000"># 以下是全局段配置</span></code></li><li><code><span style="color:#880000">#user administrator administrators; #配置用戶或者組，默認為 nobody nobody。</span></code></li><li><code><span style="color:#880000">#worker_processes 2; #設置進程數，默認為 1</span></code></li><li><code><span style="color:#880000">#pid /nginx/pid/nginx.pid; #指定 nginx 進程運行文件存放地址</span></code></li><li><code><span style="color:#000000">error_log log</span><span style="color:#666600">/</span><span style="color:#000000">error</span><span style="color:#666600">.</span><span style="color:#000000">log debug</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#制定日誌路徑，級別：debug|info|notice|warn|error|crit|alert|emerg</span></code></li><li><code><span style="color:#880000"># events 段配置信息</span></code></li><li><code><span style="color:#000000">events </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">accept_mutex on</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#設置網路連接序列化，防止驚羣現象發生，默認為 on</span></code></li><li><code><span style="color:#000000">multi_accept on</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#設置一個進程是否同時接受多個網絡連接，默認為 off</span></code></li><li><code><span style="color:#880000">#use epoll; #事件驅動模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span></code></li><li><code><span style="color:#000000">worker_connections </span><span style="color:#006666">1024</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#最大連接數，默認為 512</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#880000"># http、配置請求信息</span></code></li><li><code><span style="color:#000000">http </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">include mime</span><span style="color:#666600">.</span><span style="color:#000000">types</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#文件擴展名與文件類型映射表</span></code></li><li><code><span style="color:#000000">default_type application</span><span style="color:#666600">/</span><span style="color:#000000">octet</span><span style="color:#666600">-</span><span style="color:#000000">stream</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#默認文件類型，默認為 text/plain</span></code></li><li><code><span style="color:#880000">#access_log off; #取消服務日誌 </span></code></li><li><code><span style="color:#000000">log_format myFormat </span><span style="color:#008800">'$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#自定義格式</span></code></li><li><code><span style="color:#000000">access_log log</span><span style="color:#666600">/</span><span style="color:#000000">access</span><span style="color:#666600">.</span><span style="color:#000000">log myFormat</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#combined 為日誌格式的默認值</span></code></li><li><code><span style="color:#000000">sendfile on</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#允許 sendfile 方式傳輸文件，默認為 off，可以在 http 塊，server 塊，location 塊。</span></code></li><li><code><span style="color:#000000">sendfile_max_chunk </span><span style="color:#006666">100k</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#每個進程每次調用傳輸數量不能大於設定的值，默認為 0，即不設上限。</span></code></li><li><code><span style="color:#000000">keepalive_timeout </span><span style="color:#006666">65</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#連接超時時間，默認為 75s，可以在 http，server，location 塊。</span></code></li><li>&nbsp;</li><li><code><span style="color:#000000">upstream mysvr </span><span style="color:#666600">{</span><span style="color:#000000"></span></code></li><li><code><span style="color:#000000">server </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">:</span><span style="color:#006666">7878</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server </span><span style="color:#006666">192.168</span><span style="color:#666600">.</span><span style="color:#006666">10.121</span><span style="color:#666600">:</span><span style="color:#006666">3333</span><span style="color:#000000"> backup</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#熱備</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">error_page </span><span style="color:#006666">404</span><span style="color:#000000"> https</span><span style="color:#666600">://</span><span style="color:#000000">www</span><span style="color:#666600">.</span><span style="color:#000000">baidu</span><span style="color:#666600">.</span><span style="color:#000000">com</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#錯誤頁</span></code></li><li><code><span style="color:#880000"># 第一個 Server 區塊開始，表示一個獨立的虛擬主機站點</span></code></li><li><code><span style="color:#000000">server </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">keepalive_requests </span><span style="color:#006666">120</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#單連接請求上限次數。</span></code></li><li><code><span style="color:#000000">listen </span><span style="color:#006666">4545</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#監聽端口</span></code></li><li><code><span style="color:#000000">server_name </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#監聽地址 </span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">~*^.+</span><span style="color:#000000">$ </span><span style="color:#666600">{</span><span style="color:#000000"></span><span style="color:#880000">#請求的 url 過濾，正則匹配，~為區分大小寫，~*為不區分大小寫。</span></code></li><li><code><span style="color:#880000">#root path; #根目錄</span></code></li><li><code><span style="color:#880000">#index vv.txt; #設置默認頁</span></code></li><li><code><span style="color:#000000">proxy_pass http</span><span style="color:#666600">://</span><span style="color:#000000">mysvr</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#請求轉向 mysvr 定義的服務器列表</span></code></li><li><code><span style="color:#000000">deny </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#拒絕的 ip</span></code></li><li><code><span style="color:#000000">allow </span><span style="color:#006666">172.18</span><span style="color:#666600">.</span><span style="color:#006666">5.54</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#允許的 ip </span></code></li><li><code><span style="color:#666600">}</span><span style="color:#000000"></span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_4"></span><h2>1.3 locat 路徑映射講解</h2><span id="OSC_h3_5"></span><h3>1.3.1 格式：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">location [ = | ~ | ~<em><span>&nbsp;</span>| !~ | !~</em><span>&nbsp;</span>| @ ] uri {…}</p><span id="OSC_h3_6"></span><h3>1.3.2 解釋：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">= 表示精確匹配，如果找到，立即停止搜索並立即處理此請求。<br> ~ 表示執行一個正則匹配，區分大小寫匹配<br> ~<em><span>&nbsp;</span>表示執行一個正則匹配，不區分大小寫匹配<br> !~ 區分大小寫不匹配<br> !~</em><span>&nbsp;</span>不區分大小寫不匹配<br> ^~ 即表示只匹配普通字符（空格）。使用前綴匹配，^表示「非」，即不查詢正則表達式。如果匹配成功，則不再匹配其他 location。<br> @ 指定一個命名的 location，一般只用於內部重定向請求。例如 error_page, try_files<br> uri 是待匹配的請求字符串，可以不包含正則表達式，也可以包含正則表達式；</p><span id="OSC_h3_7"></span><h3>1.3.3 優先級和示例：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">[不加] &lt; [~/~*] &lt; [^~] &lt; [=]<br> 示例如下：</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">location </span><span style="color:#666600">=</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000"># 精確匹配/，主機名後面不能帶任何字符串 /</span></code></li><li><code><span style="color:#880000"># 只匹配 http://abc.com</span></code></li><li><code><span style="color:#880000"># http://abc.com [匹配成功]</span></code></li><li><code><span style="color:#880000"># http://abc.com/index [匹配失敗]</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">^~</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#000000">img</span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000">#以 /img/ 開頭的請求，都會匹配上</span></code></li><li><code><span style="color:#880000">#http://abc.com/img/a.jpg [成功]</span></code></li><li><code><span style="color:#880000">#http://abc.com/img/b.mp4 [成功]</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">~*</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#660066">Example</span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000"># 則會忽略 uri 部分的大小寫</span></code></li><li><code><span style="color:#880000">#http://abc.com/test/Example/ [匹配成功]</span></code></li><li><code><span style="color:#880000">#http://abc.com/example/ [匹配成功]</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000">documents </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000"># 如果有正則表達式可以匹配，則優先匹配正則表達式。</span></code></li><li><code><span style="color:#880000">#http://abc.com/documentsabc [匹配成功]</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000">#http://abc.com/abc [匹配成功]</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h1_8"></span><h1>2 反向代理</h1><span id="OSC_h2_9"></span><h2>2.1 反向代理概念：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">反向代理 (Reverse Proxy) 是指以代理服務器來接受 internet 上的連接請求，然後將請求轉發給內部網絡上的服務器，並將從服務器上得到的結果返回給 internet 上請求連接的客戶端。真實的服務器不能直接被外部網絡訪問，所以需要一台代理服務器，而代理服務器能被外部網絡訪問的同時又跟真實服務器在同一個網絡環境，當然也可能是同一台服務器，端口不同而已。<br> 反向代理通過 proxy_pass 指令來實現。</p><span id="OSC_h2_10"></span><h2>2.2 反向代理示例：</h2><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">server </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">listen </span><span style="color:#006666">80</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server_name localhost</span><span style="color:#666600">;</span></code></li><li>&nbsp;</li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">proxy_pass http</span><span style="color:#666600">://</span><span style="color:#000000">localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">proxy_set_header </span><span style="color:#660066">Host</span><span style="color:#000000"> $host</span><span style="color:#666600">:</span><span style="color:#000000">$server_port</span><span style="color:#666600">;#為請求頭添加</span><span style="color:#660066">Host</span><span style="color:#666600">字段，用於指定請求服務器的域名/</span><span style="color:#000000">IP</span><span style="color:#666600">地址和端口號。</span><span style="color:#000000"></span></code></li><li>&nbsp;</li><li><code><span style="color:#880000"># 設置用戶 ip 地址</span></code></li><li><code><span style="color:#000000">proxy_set_header X</span><span style="color:#666600">-</span><span style="color:#660066">Forwarded</span><span style="color:#666600">-</span><span style="color:#660066">For</span><span style="color:#000000"> $remote_addr</span><span style="color:#666600">;#為請求頭添加</span><span style="color:#000000">XFF</span><span style="color:#666600">字段，值為客戶端的</span><span style="color:#000000">IP</span><span style="color:#666600">地址。</span></code></li><li><code><span style="color:#880000"># 當請求服務器出錯去尋找其他服務器</span></code></li><li><code><span style="color:#000000">proxy_next_upstream error timeout invalid_header http_500 http_502 http_503</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">當我們訪問 localhost 的時候，ngnix 就將我們的請求轉到 localhost:8081 了</p><span id="OSC_h1_11"></span><h1>3 負載均衡</h1><span id="OSC_h2_12"></span><h2>3.1 負載均衡概念：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">當有 2 台或以上服務器時，代理服務器根據規則將請求分發到指定的服務器上處理。</p><span id="OSC_h2_13"></span><h2>3.2 負載均衡策略及示例：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Nginx 目前支持多種負載均衡策略，這裏講解常用的 6 種。</p><span id="OSC_h3_14"></span><h3>3.2.1RR(round robin :輪詢，默認)：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">每個請求按時間順序逐一分配到不同的後端服務器，也就是説第一次請求分配到第一台服務器上，第二次請求分配到第二台服務器上，如果只有兩台服務器，第三次請求繼續分配到第一台上，這樣循環輪詢下去，也就是服務器接收請求的比例是 1:1， 如果後端服務器 down 掉，能自動剔除。輪詢是默認配置，不需要太多的配置<br> 同一個項目分別使用 8081 和 8082 端口啓動項目</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream web_servers </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8082</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li>&nbsp;</li><li>&nbsp;</li><li><code><span style="color:#000000">server </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">listen </span><span style="color:#006666">80</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server_name localhost</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#880000">#access_log logs/host.access.log main;</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">proxy_pass http</span><span style="color:#666600">:</span><span style="color:#880000">//web_servers;</span></code></li><li><code><span style="color:#000000">proxy_set_header </span><span style="color:#660066">Host</span><span style="color:#000000"> $host</span><span style="color:#666600">:</span><span style="color:#000000">$server_port</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_15"></span><h3>3.2.2 熱備：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">假設有 2 台服務器，當一台服務器發生事故時，才啓用第二台服務器給提供服務。服務器處理請求的順序：AAAAAA 突然 A 掛了，服務器處理請求的順序：BBBBBBBBBBBBBB…..</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream web_servers </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">server </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">:</span><span style="color:#006666">7878</span><span style="color:#666600">;</span><span style="color:#000000"></span></code></li><li><code><span style="color:#000000">server </span><span style="color:#006666">192.168</span><span style="color:#666600">.</span><span style="color:#006666">10.121</span><span style="color:#666600">:</span><span style="color:#006666">3333</span><span style="color:#000000"> backup</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#熱備 </span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_16"></span><h3>3.2.3 權重</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">跟據配置的權重的大小而分發給不同服務器不同數量的請求。如果不設置，則默認為 1。下面服務器的請求順序為：ABBABBABBABBABB….。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream web_servers </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#000000"> weight</span><span style="color:#666600">=</span><span style="color:#006666">1</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8082</span><span style="color:#000000"> weight</span><span style="color:#666600">=</span><span style="color:#006666">2</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_17"></span><h3>3.2.4 ip_hash</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">這樣每個 ip 地址固定訪問一個後端服務器，可以解決 session 的問題。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream test </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">ip_hash</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8080</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_18"></span><h3>3.2.5 fair(第三方)</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">按後端服務器的響應時間來分配請求，響應時間短的優先分配。這個配置是為了更快的給用戶響應。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream backend </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">fair</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8080</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_19"></span><h3>3.2.6 url_hash(第三方)</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">按訪問 url 的 hash 結果來分配請求，使每個 url 定向到同一個後端服務器，後端服務器為緩存時比較有效。在 upstream 中加入 hash 語句，hash_method 是使用的 hash 算法</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream backend </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">hash_method crc32</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">hash $request_uri</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8080</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">以上 6 種負載均衡各自適用不同情況下單獨或者混合使用，可以根據實際情況選擇使用，fair 和 url_hash 需要安裝第三方模塊才能使用。</p><span id="OSC_h1_20"></span><h1>4 動靜分離：</h1><span id="OSC_h2_21"></span><h2>4.1 動靜分離概念：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">動靜分離是指在 web 服務器架構中，將靜態頁面與動態頁面或者靜態內容接口和動態內容接口分開不同系統訪問的架構設計方法，進而提升整個服務訪問性能和可維護性。</p><span id="OSC_h2_22"></span><h2>4.2 動靜分離示例：</h2><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream web_servers </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8082</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">server </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">listen </span><span style="color:#006666">80</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server_name localhost</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">set $doc_root </span><span style="color:#666600">/</span><span style="color:#000000">usr</span><span style="color:#666600">/</span><span style="color:#000000">local</span><span style="color:#666600">/</span><span style="color:#000000">var</span><span style="color:#666600">/</span><span style="color:#000000">www</span><span style="color:#666600">;</span></code></li><li>&nbsp;</li><li><code><span style="color:#000000">location </span><span style="color:#666600">~*</span><span style="color:#000000"> \.</span><span style="color:#666600">(</span><span style="color:#000000">gif</span><span style="color:#666600">|</span><span style="color:#000000">jpg</span><span style="color:#666600">|</span><span style="color:#000000">jpeg</span><span style="color:#666600">|</span><span style="color:#000000">png</span><span style="color:#666600">|</span><span style="color:#000000">bmp</span><span style="color:#666600">|</span><span style="color:#000000">ico</span><span style="color:#666600">|</span><span style="color:#000000">swf</span><span style="color:#666600">|</span><span style="color:#000000">css</span><span style="color:#666600">|</span><span style="color:#000000">js</span><span style="color:#666600">)</span><span style="color:#000000">$ </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">root $doc_root</span><span style="color:#666600">/</span><span style="color:#000000">img</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">proxy_pass http</span><span style="color:#666600">://</span><span style="color:#000000">web_servers</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">proxy_set_header </span><span style="color:#660066">Host</span><span style="color:#000000"> $host</span><span style="color:#666600">:</span><span style="color:#000000">$server_port</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">error_page </span><span style="color:#006666">500</span><span style="color:#000000"></span><span style="color:#006666">502</span><span style="color:#000000"></span><span style="color:#006666">503</span><span style="color:#000000"></span><span style="color:#006666">504</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#006666">50x</span><span style="color:#666600">.</span><span style="color:#000000">html</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#666600">#出現</span><span style="color:#000000"></span><span style="color:#006666">500</span><span style="color:#000000"></span><span style="color:#006666">502</span><span style="color:#000000"></span><span style="color:#006666">503</span><span style="color:#000000"></span><span style="color:#006666">504</span><span style="color:#666600">錯誤時走內部跳轉</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">=</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#006666">50x</span><span style="color:#666600">.</span><span style="color:#000000">html </span><span style="color:#666600">{</span><span style="color:#000000"></span></code></li><li><code><span style="color:#000000">root $doc_root</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">結果：訪問<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%2Ftest.jpg" rel="nofollow" target="_blank">http://localhost/test.jpg</a><span>&nbsp;</span>時直接返回/usr/local/var/www/img 路徑下的圖片.<br> 訪問<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%2Findex.html" rel="nofollow" target="_blank">http://localhost/index.html</a><span>&nbsp;</span>就會訪問後端服務器 (tomcat 等)</p><span id="OSC_h1_23"></span><h1>5 其他常用的指令：</h1><span id="OSC_h2_24"></span><h2>5.1.return 指令</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">返回 http 狀態碼和可選的第二個參數可以是重定向的 URL</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000088">return</span><span style="color:#000000"> code </span><span style="color:#666600">[</span><span style="color:#000000">text</span><span style="color:#666600">];</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"> code URL</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"> URL</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">例如：</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"></span><span style="color:#006666">404</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000"># 直接返回狀態碼</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"></span><span style="color:#006666">404</span><span style="color:#000000"></span><span style="color:#008800">"pages not found"</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000"># 返回狀態碼 + 一段文本</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"></span><span style="color:#006666">302</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#000000">bbs </span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000"># 返回狀態碼 + 重定向地址</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"> https</span><span style="color:#666600">:</span><span style="color:#880000">//www.baidu.com ; # 返回重定向地址</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_25"></span><h2>5.2 rewrite 指令</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">重寫 URI 請求 rewrite，通過使用 rewrite 指令在請求處理期間多次修改請求 URI，該指令具有一個可選參數和兩個必需參數。<br> 第一個 (必需) 參數是請求 URI 必須匹配的正則表達式。<br> 第二個參數是用於替換匹配 URI 的 URI。<br> 可選的第三個參數重寫策略</p><ul><li>last 重寫後的 URL 發起新請求，再次進入 server 段，重試 location 的中的匹配；</li><li>break 直接使用重寫後的 URL ，不再匹配其它 location 中語句；</li><li>redirect 返回 302 臨時重定向；</li><li>permanent 返回 301 永久重定向；</li></ul><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000">users</span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">rewrite </span><span style="color:#666600">^/</span><span style="color:#000000">users</span><span style="color:#666600">/(.*)</span><span style="color:#000000">$ </span><span style="color:#666600">/</span><span style="color:#000000">show</span><span style="color:#666600">?</span><span style="color:#000000">user</span><span style="color:#666600">=</span><span style="color:#000000">$1 </span><span style="color:#000088">break</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_26"></span><h2>5.3 error_page 指令</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">使用 error_page 指令，您可以配置 NGINX 返回自定義頁面以及錯誤代碼，替換響應中的其他錯誤代碼，或將瀏覽器重定向到其他 URI。在以下示例中，error_page 指令指定要返回 404 頁面錯誤代碼的頁面 (/404.html)。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">server</span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">error_page </span><span style="color:#006666">500</span><span style="color:#000000"></span><span style="color:#006666">502</span><span style="color:#000000"></span><span style="color:#006666">503</span><span style="color:#000000"></span><span style="color:#006666">504</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#006666">50x</span><span style="color:#666600">.</span><span style="color:#000000">html</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">=/</span><span style="color:#006666">50x</span><span style="color:#666600">.</span><span style="color:#000000">html</span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">root html</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_27"></span><h2>5.4 日誌</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">訪問日誌：需要開啓壓縮 gzip on; 否則不生成日誌文件，打開 log_format、access_log 註釋</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">log_format main </span><span style="color:#008800">'$remote_addr - $remote_user [$time_local] "$request" '</span></code></li><li><code><span style="color:#008800">'$status $body_bytes_sent "$http_referer" '</span></code></li><li><code><span style="color:#008800">'"$http_user_agent" "$http_x_forwarded_for"'</span><span style="color:#666600">;</span></code></li><li>&nbsp;</li><li>&nbsp;</li><li><code><span style="color:#000000">access_log </span><span style="color:#666600">/</span><span style="color:#000000">usr</span><span style="color:#666600">/</span><span style="color:#000088">local</span><span style="color:#666600">/</span><span style="color:#000000">etc</span><span style="color:#666600">/</span><span style="color:#000000">nginx</span><span style="color:#666600">/</span><span style="color:#000000">logs</span><span style="color:#666600">/</span><span style="color:#000000">host</span><span style="color:#666600">.</span><span style="color:#000000">access</span><span style="color:#666600">.</span><span style="color:#000000">log main</span><span style="color:#666600">;</span></code></li><li>&nbsp;</li><li>&nbsp;</li><li><code><span style="color:#000000">gzip on</span></code></li></ol><span id="OSC_h2_28"></span><h2>5.5 deny 、allow 指令</h2><pre>&nbsp;</pre><ol><li><code><span style="color:#880000">#禁止訪問某個目錄</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">allow </span><span style="color:#006666">192.168</span><span style="color:#666600">.</span><span style="color:#006666">0.0</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">allow </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">deny all</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#880000">#這段配置值允許 192.168.0./24 網段和 127.0.0.1 的請求，其他來源 IP 全部拒絕。</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_29"></span><h2>5.6 內置變量</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">nginx 的配置文件中可以使用的內置變量以美元符$開始。其中，大部分預定義的變量的值由客戶端發送攜帶。<br> $args ：#這個變量等於請求行中的參數，同$query_string<br> $content_length ：請求頭中的 Content-length 字段。<br> $content_type ：請求頭中的 Content-Type 字段。<br> $document_root ：當前請求在 root 指令中指定的值。<br> $host ：請求行的主機名，為空則為請求頭字段 Host 中的主機名，再為空則與請求匹配的 server_name<br> $http_user_agent ：客戶端 agent 信息<br> $http_cookie ：客戶端 cookie 信息<br> $limit_rate ：這個變量可以限制連接速率。<br> $request_method ：客戶端請求的動作，通常為 GET 或 POST。<br> $remote_addr ：客戶端的 IP 地址。<br> $remote_port ：客戶端的端口。<br> $remote_user ：已經經過 Auth Basic Module 驗證的用戶名。<br> $request_filename ：當前請求的文件路徑，由 root 或 alias 指令與 URI 請求生成。<br> $scheme ：HTTP 方法（如 http，https）。<br> $server_protocol ：請求使用的協議，通常是 HTTP/1.0 或 HTTP/1.1。<br> $server_addr ：服務器地址，在完成一次系統調用後可以確定這個值。<br> $server_name ：服務器名稱。<br> $server_port ：請求到達服務器的端口號。<br> $request_uri ：包含請求參數的原始 URI，不包含主機名，如：」/foo/bar.php?arg=baz」。<br> $uri ：不帶請求參數的當前 URI，$uri 不包含主機名，如」/foo/bar.html」。<br> $document_uri ：與$uri 相同</p><span id="OSC_h1_30"></span><h1>6 總結</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Ngnix 是一款高性能反向代理服務器，學習它非常有必要，本文講解了 Ngnix 核心配置，介紹了反向代理，負載均衡，動靜分離三大功能，最後擴展了一些常用的指令。本文介紹了 Ngnix 的基礎用法，後續的 Ngnix 內核以及原理部分有待研究。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">作者：京東物流，殷世傑</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">來源：京東雲開發者社區，自猿其説 Tech 轉載請註明來源</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 01:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10887916</guid>
            <link>https://my.oschina.net/u/4090830/blog/10887916</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開放籤電子簽章企業版，業務線功能正確使用方法]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>一、業務線功能説明</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>業務線全稱為「開放籤電子簽章業務線管理」，顧名思義業務線功能主要是圍繞用戶不同業務場景下使用電子簽章的業務管理。用戶可根據不同的業務場景（人力資源合同簽署、內部證明文件簽署、企業對企業簽署、企業對個人簽署等），通過業務線功能配置不同的電子簽署功能，從而更加便捷、安全的管理電子簽章的應用。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>用戶可通過業務線配置電子文件簽署的業務流程，通過對業務線進行配置來確定和規範簽署文件、簽署方、簽署過程，同時也極大的簡化了簽署發起的操作。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>二、功能特點</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>靈活規範：</strong></span></span></span></strong><span><span><span>通過業務線可快速構建出企業的各類簽約場景，並進行標準化管理。例如，人事合同簽署、內部文件審批簽字、銷售合同簽署、對外報告蓋章等場景；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>操作標準：</strong></span></span></span></strong><span><span><span>通過標準化的流程，確保各方按照一致的規範和要求進行文件簽署；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>風險控制：</strong></span></span></span></strong><span><span><span>通過業務線控制，降低簽署過程中因操作不當等帶來的風險；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>提高效率：</strong></span></span></span></strong><span><span><span>自動化和簡化發起流程，提高文件簽署的效率和速度；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>合規性：</strong></span></span></span></strong><span><span><span>確保文件簽署符合法律法規和企業內部政策；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>權限可控：</strong></span></span></span></strong><span><span><span>業務線設置各類權限，包括業務線本身的管理權、使用權，同時包括通過業務線發起的簽署業務的數據查看權限、文件下載權限；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>三、業務線功能説明</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>1、視頻講解</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>（1）業務線介紹：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1oc411x7zu%2F%3Fspm_id_from%3D888.80997.embed_other.whitelist%26t%3D43" target="_blank">視頻功能講解</a></strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>（2）業務線配置介紹：</strong></span></span></span></strong></span></span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Z94y1T7gB%2F%3Fspm_id_from%3D888.80997.embed_other.whitelist%26t%3D45" target="_blank"><span><span><span><span><strong><span><span><span><strong>視頻功能講解</strong></span></span></span></strong></span></span></span></span></a></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>2、文字説明</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>（1）基本信息設置</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>編號：</strong></span></span></span></strong><span><span><span>發起簽署時，可根據預設的規則自動生成文檔編號，統一一類簽署場景的編號規範，減少發起人輸入操作，編號規則支持文本、日期、流水號、時間戳，示例：KFQ-renshi-20230101-000001;</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>主題：</strong></span></span></span></strong><span><span><span>發起簽署時，可根據預設的規則自動生成文檔主題，統一一類簽署場景的主題規範，減少發起人輸入操作，主題規則支持文本、業務線名稱、日期、流水號、時間戳、發起人姓名、接收方姓名，示例：KFQ-入職相關合同（2023 版本）-20230101-000001-李四;</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>簽署方：</strong></span></span></span></strong><span><span><span>支持經辦人發起時自行設置和經辦人發起時，按照預設流程發起並簽署兩種方式。可設置簽署順序、發起方內部簽署人和外部接收方；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>抄送：</strong></span></span></span></strong><span><span><span>是否允許抄送，為該業務線設置抄送時機、抄送的用戶類型、指定抄送人；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>簽約文件：</strong></span></span></span></strong><span><span><span>支持上傳本地文件和選擇在線模板，減少經辦人發起時重複上傳簽約文件。同時，可限制經辦人是否可刪除或新增簽約文件；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>附件：</strong></span></span></span></strong><span><span><span>限制經辦人發起簽署時是否可以上傳附件；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>簽署方式：</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>a、使用 CA 數字證書（符合電子簽名法）：簽署文件時，需要使用 CA 機構頒發的數字證書；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>b、使用平台防篡改證書（保護文件）（無法律效力）：簽署文件時，使用平台下發的防篡改證書，該證書非 CA 機構頒發，僅用於文件保護，避免文件被篡改，簽署後的文件不具備法律效力；</span></span></span></span></span></span></span></p><p><img height="709" src="https://oscimg.oschina.net/oscnet/up-3b855599317328959d0b6e8d2dbd23ef0d2.png" width="1280" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:center"><span><span><span><span><span><span><span>圖一、基本信息設置</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>（2）權限管理</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>業務線管理權限：業務線的管理權限和使用權限配置；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>簽約文件權限設置：簽約數據查看權限和簽署文件下載權限配置.</span></span></span></span></span></span></span></p><p><img height="630" src="https://oscimg.oschina.net/oscnet/up-94a4f4e4dde46ddd76822def13d63575dbd.png" width="1280" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:center"><span><span><span><span><span><span><span><span>圖二、權限管理</span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（3）簽署位置及參數設置</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>指定各簽署方的簽署位置；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>如果簽約文件中包含在線模板，可為模板中的各個參數指定對應的填寫方，在簽署環節時，各簽署人可根據設置完成待簽署文件的信息完善。</span></span></span></span></span></span></span></p><p><img height="708" src="https://oscimg.oschina.net/oscnet/up-921b6aa7ff79c0c801f4d5782b3d069f2a2.png" width="1280" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:.0001pt; margin-right:0; text-align:center"><span><span><span><span><span><span><span><span>圖三、位置及參數設置</span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>​四、總結</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>開放籤業務線具有靈活、便捷、安全的電子簽署業務配置能力。接下來業務線將持續更新，添加更多配置功能，使開放籤電子簽章系統可以滿足更多電子籤業務場景。</span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 07:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276436</guid>
            <link>https://www.oschina.net/news/276436</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
