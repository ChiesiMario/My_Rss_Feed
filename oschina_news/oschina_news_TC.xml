<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 05 Dec 2023 23:30:29 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[工信部迴應 2G/3G 「退網」：必然選擇，但要充分保障用戶權益]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，工業和信息化部答覆了網友關於保障老舊手機用戶基礎通信功能的建議。</p><p>網友留言稱，我國有大量人羣還在用老舊手機、按鍵手機等電子設備，希望工信部結合我國實際情況統籌安排，保證前述羣體基礎通信功能，循序漸進發展新通信技術，保留基本通信技術正常運轉。</p><p>對此，工信部答覆稱，2G/3G 退網是更新換代的必然選擇，也是當前國際上的主要做法。將有限的頻率資源和網絡資源用到 5G、4G 的發展中，有利於從整體上降低運營成本，提高我國網絡運營效率；也可以降低手機複雜度，提高效能，降低成本。但企業要早謀劃，早告知，必須有用戶保障措施和完善的用戶善後方案，具備提供更好的網絡覆蓋、更強的業務能力和更優的服務質量的能力。工信部將依法規推進並做好用戶權益保護工作。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-4a32c3b7dbb0f58f486c3303440f6dfb493.png" referrerpolicy="no-referrer"></p><p>來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fliuyan.people.com.cn%2Fthreads%2Fcontent%3Ftid%3D18866120" target="_blank">https://liuyan.people.com.cn/threads/content?tid=18866120</a></u></em></p></blockquote><p>對於下一步的工作，工信部表示，考慮到移動通信退網涉及用戶多、社會影響大，需統籌謀劃、合理推進，發揮市場決定作用，強化企業主體責任，由電信企業結合自身情況，制定退網計劃，適時啓用 2G 退網工作，做好輿論引導、用戶善後、關停基站、停止服務、騰退資源、申請註銷許可等工作。工信部將依法規推進並做好用戶權益保護工作。</p><p>此前在 2019 年 10 月，工信部相關負責人曾表示，目前我國移動通信網絡 2G、3G 的退網條件已逐漸成熟，鼓勵運營企業積極引導用戶遷移轉網。2021 年 11 月，工信部印發的《十四五信息通信行業發展規劃》將 2G、3G 退網列入十四五期間網絡基礎設施建設的重點工作。2023 年 8 月，工信部許可中國電信將現網用於 2G/3G/4G 系統的 800MHz 頻段頻率重耕用於 5G 公眾移動通信系統。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 11:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269662</guid>
            <link>https://www.oschina.net/news/269662</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[美圖 AI 大模型產品 Miraclevision 開放 API]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">美圖自研 AI 視覺大模型 MiracleVision（奇想智能）今日</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F2DR455nI6VS-tSSCjRSr7w" target="_blank">宣佈</a><span style="color:#000000">正式開放商業 API，提供 3 個階梯套餐。</span></p><p><span style="color:#000000">用戶接入後，生產 10 萬張以下圖片，售價 0.1 元/張；10 萬-100 萬張，售價 0.08 元/張；100 萬張以上，為 0.06 元/張。</span></p><p><span style="color:#000000">MiracleVision 於 2023 年 6 月 19 日正式亮相，目前已更新至 4.0 版本。該版本計劃將於 2024 年 1 月陸續應用於美圖秀秀、美顏相機、Wink、美圖設計室、WHEE 等美圖旗下產品。</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-b48de3e47e69e2f0e259254adca092dce54.gif" width="500" referrerpolicy="no-referrer"></span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 09:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269646</guid>
            <link>https://www.oschina.net/news/269646</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | C 語言封裝的 MySQL 預處理框架 dbassist]]>
            </title>
            <description>
                <![CDATA[<p>C 語言 mysql 預處理助手 1.0(mysql prepare dbassist1.0 for c)</p><p>介紹
一個 C 語言封裝 mysql 預處理的輕量級框架,除了實現對 mysql 預處理變量綁定代碼的封裝,還實現了 sql 語句拼接的封裝.整合了 mysql 預處理單表的 crud 和多表的聯合查詢以及多表的嵌套查詢。</p><p>運行結果</p><p><img src="https://gitee.com/solider12/lazy-cats-code-warehouse/raw/master/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-04%20171922.png" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p>預處理的優點
<img src="https://gitee.com/solider12/lazy-cats-code-warehouse/raw/master/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-12-04%20211253.png" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p>安裝教程
1.安裝 mysql 環境，參考<a href="https://gitee.com/solider12/lazy-cats-code-warehouse/blob/master/dbassist/devc++%E4%BD%BF%E7%94%A8mysql.docx">&lt;&lt;devc++使用 mysql.docx&gt;&gt;</a>
2.根據 sql 表創建結構體，結構體成員變量對應表字段。sql 參考<a href="https://gitee.com/solider12/lazy-cats-code-warehouse/blob/master/dbassist/t.sql">&lt;&lt;t.sql&gt;&gt;</a>
對應文件參考<a href="https://gitee.com/solider12/lazy-cats-code-warehouse/blob/master/dbassist/emp.c">emp.c</a>,<a href="https://gitee.com/solider12/lazy-cats-code-warehouse/blob/master/dbassist/dept.c">dept.c</a>,<a href="https://gitee.com/solider12/lazy-cats-code-warehouse/blob/master/dbassist/salgrade.c">salgrade.c</a>,
3.將文件打包成.dll 或者.a,引入項目,引入方法參考<a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2FManofletters%2Farticle%2Fdetails%2F128695793">&lt;&lt;靜態庫打包以及使用教程&gt;&gt;</a></p><p>使用説明
參考<a href="http://gitee.com/solider12/lazy-cats-code-warehouse/blob/master/dbassist/%E6%95%99%E7%A8%8B.txt" rel="nofollow">&lt;&lt;教程.txt&gt;&gt;</a></p><p>參與貢獻
Fork 本倉庫
新建 Feat_xxx 分支
提交代碼
新建 Pull Request
特技
使用 Readme_XXX.md 來支持不同的語言，例如 Readme_en.md, Readme_zh.md
Gitee 官方博客 blog.gitee.com
你可以 <a href="https://gitee.com/explore">https://gitee.com/explore</a> 這個地址來瞭解 Gitee 上的優秀開源項目
GVP 全稱是 Gitee 最有價值開源項目，是綜合評定出的優秀開源項目
Gitee 官方提供的使用手冊 <a href="https://gitee.com/help">https://gitee.com/help</a>
Gitee 封面人物是一檔用來展示 Gitee 會員風采的欄目 <a href="https://gitee.com/gitee-stars/">https://gitee.com/gitee-stars/</a></p>]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 09:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/solider12/lazy-cats-code-warehouse/tree/master/dbassist</guid>
            <link>https://gitee.com/solider12/lazy-cats-code-warehouse/tree/master/dbassist</link>
        </item>
        <item>
            <title>
                <![CDATA[喬布斯簽名蘋果公司原始支票正在拍賣中]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><span style="background-color:#ffffff">RR 拍賣（RR Auction）網站<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rrauction.com%2Fauctions%2Flot-detail%2F348161106800099-steve-jobs-signed-apple-computer-company-check-to-radioshack-july-23-1976" target="_blank">拍賣信息顯示</a>，一張由史蒂夫·喬布斯（Steve Jobs）簽名的蘋果公司支票正在拍賣中。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">這張保存完好的支票於 1976 年 7 月 23 日由喬布斯支付給 RadioShack，金額為 4.01 美元。支票抬頭是 "Apple Computer Company"，使用的是蘋果公司的第一個正式地址"770 Welch Rd., Ste. 154, Palo Alto" —— 這是當他們還在著名的喬布斯家族車庫裏運營時使用的應答服務和郵件投遞地址。</span></span></p><p><img height="368" src="https://oscimg.oschina.net/oscnet/up-779f616c84ee4db73eeea9373cdab0c5815.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">RadioShack 是一家位於波士頓的電子產品商店。蘋果公司聯合創始人<span style="background-color:#ffffff">史蒂夫・沃茲尼亞克（</span>Steve Wozniak<span style="background-color:#ffffff">）</span>少年時代曾攢錢在 RadioShack 購買了這家店首創的 TRS-80 微型計算機系統，並用它製作了臭名昭著的"blue box"--一種可以撥打免費長途電話的非法設備。</span></p><p><span style="color:#000000">這個"blue box"鞏固了<span style="background-color:#ffffff">沃茲尼亞克</span>和喬布斯之間的首次商業合作關係，二人以每個 150 美元的價格製造並銷售了大約 200 個"blue box"。喬布斯後來對他的傳記作者説，如果沒有<span style="background-color:#ffffff">沃茲尼亞克</span> 的 blue box，「就不會有蘋果公司」。換句話説：如果沒有 RadioShack，就不會有蘋果。</span></p><p><span style="color:#000000"><span style="background-color:#ffffff">該支票是蘋果公司早期歷史的見證，具有一定的收藏價值。網站信息顯示，目前該支票已有 23 次競拍出價，競拍價格已經達到 25000 美元，拍賣截止時間為 12 月 7 日。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 07:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269621/steve-jobs-signed-apple-computer-company-check</guid>
            <link>https://www.oschina.net/news/269621/steve-jobs-signed-apple-computer-company-check</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源鴻蒙人形機器人 —— 「夸父」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>樂聚機器人今日發佈了一款人形機器人——「夸父」，並稱其是「國內首款可跳躍、可適應多地形行走的開源鴻蒙人形機器人」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-09473857a0eb1a6947a7f11f51289fcd1be.png" referrerpolicy="no-referrer"></p><p>基本參數：</p><p><img src="https://oscimg.oschina.net/oscnet/up-af75b6d37c8662b720ee5b1bf1eaad79df1.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-2397c531f623e3453ecff759781f4b0cc6c.png" referrerpolicy="no-referrer"></p><p>官方介紹稱，「夸父」搭載深開鴻基於開源鴻蒙研發的 KaihongOS，採用全棧開源設計，運動控制器全面開源，可接入軌跡規劃、反饋控制、狀態估計等模塊。</p><p><img src="https://oscimg.oschina.net/oscnet/up-52552fdb57f8b58318b16bd7ca6f27ffd2c.png" referrerpolicy="no-referrer"></p><p>感知方面，「夸父」可搭載多種開鴻傳感器，配有深度攝像頭，還可搭配多種末端配件二次開發，並對接主流大模型。</p><p>此外，「夸父」 的步態算法號稱全面適配沙地、草地、障礙等多地形，採用自研一體化關節，手臂有 14 個自由度，腿部有 12 個自由度，支持 20cm 跳躍高度。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 06:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269605</guid>
            <link>https://www.oschina.net/news/269605</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[王慧文入股 OneFlow 團隊新創業公司]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>企查查公開資料顯示，就在這兩日，北京硅動科技有限公司（以下簡稱硅動科技）發生工商變更，<strong>新增王慧文為股東</strong>。同時，註冊資本由 100 萬人民幣增至約 105.26 萬人民幣。</p><p><img src="https://oscimg.oschina.net/oscnet/up-ff1c5d5e8069add76172304d962953fb253.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#222222">王慧文是美團聯合創始人、原非執行董事。</span></p><p>硅動科技成立於今年 8 月。目前，該公司法人、執行董事、經理均為 OneFlow 創始人袁進輝。公司經營範圍含軟件開發、技術進出口、電子產品銷售、人工智能應用軟件開發、人工智能通用應用系統、人工智能行業應用系統集成服務等。</p><p>OneFlow 是國內知名開源深度學習框架及開發平台，擁有完全自主知識產權，已獲得十餘項發明專利授權。OneFlow 創始人袁進輝（微博人稱老師木），2008 年 7 月自清華大學計算機係獲得工學博士學位，獲得清華大學優秀博士學位論文獎，2013 年加入微軟亞洲研究院從事大規模機器學習平台的研發工作。</p><p>其團隊上次創業一流科技時，由王慧文的光年之外收購其 46.52% 股權。</p><p>王慧文病休後，光年之外收購的核心團隊 OneFlow 宣佈重新創業。袁進輝稱，新創業項目擬解決大模型推理成本問題。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 04:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269588</guid>
            <link>https://www.oschina.net/news/269588</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[華為招數學博士的要求非常奇怪？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0; text-align:start"><span><span style="color:#4d4f53"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>華為招數學博士的要求非常奇怪？211 博士稱在數學系 10 年，沒有人能做到。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><img height="901" src="https://static.oschina.net/uploads/space/2023/1205/120954_o92w_3820517.png" width="400" referrerpolicy="no-referrer"></p><p><img height="508" src="https://static.oschina.net/uploads/space/2023/1205/121030_hxrQ_3820517.png" width="600" referrerpolicy="no-referrer"></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 04:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269587</guid>
            <link>https://www.oschina.net/news/269587</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IBM 公佈下一代量子處理器和 IBM 量子系統二號]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>IBM 在官方博客發佈了其量子計算技術演進路線圖，併發布新聞稿<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnewsroom.ibm.com%2F2023-12-04-IBM-Debuts-Next-Generation-Quantum-Processor-IBM-Quantum-System-Two%2C-Extends-Roadmap-to-Advance-Era-of-Quantum-Utility" target="_blank">介紹</a></u><strong>下一代量子處理器'IBM Quantum Heron'和 IBM 量子系統二號</strong>。</p><p>'IBM Quantum Heron' 可提供迄今為止 IBM 最高的性能指標和最低的 IBM Quantum 處理器錯誤率。</p><p>IBM 量子系統二號是該公司的第一台模塊化量子計算機，也是 IBM 以量子為中心的超級計算架構的基石。第一個 IBM 量子系統二號位於紐約州約克敦高地，已開始使用三個 IBM Heron 處理器和支持控制電子設備運行。</p><p><img src="https://oscimg.oschina.net/oscnet/up-59d5bf5d2070cf19e73e070a13ff7704814.png" referrerpolicy="no-referrer"></p><p>憑藉這一關鍵基礎，以及量子硬件、理論和軟件方面的其他突破，該公司將其 IBM 量子開發路線圖延長至 2033 年，並制定了新目標，以顯着提高門操作 (gate operation) 的質量。這樣做將增加可運行的量子電路的規模，並有助於大規模實現量子計算的全部潛力。</p><p>作為新擴展的十年 IBM 量子開發路線圖的一部分，IBM 計劃讓該系統也容納 IBM 的未來幾代量子處理器。此外，作為該路線圖的一部分，這些未來的處理器旨在逐步提高它們可以運行的操作質量，以顯着擴展它們能夠處理的工作負載的複雜性和規模。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c2b0804f8b1c3e4c4355516f0c24e37d62a.png" referrerpolicy="no-referrer"></p><p>來源：<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fresearch.ibm.com%2Fblog%2Fquantum-roadmap-2033" target="_blank">https://research.ibm.com/blog/quantum-roadmap-2033</a></em></u></p><p>IBM 還詳細介紹了新一代軟件堆棧的計劃，其中 Qiskit 1.0 將成為由穩定性和速度定義的關鍵點。此外，為了實現量子計算開發民主化，IBM 宣佈推出 Qiskit 模式。</p><p>Qiskit 模式將作為一種機制，讓量子開發者更輕鬆地創建代碼。它基於一系列工具，可以簡單地映射經典問題，使用 Qiskit 將其優化為量子電路，使用 Qiskit Runtime 執行這些電路，然後對結果進行後處理。藉助 Qiskit Patterns 與 Quantum Serverless 相結合，用戶將能夠在不同環境（例如雲​​或本地場景）中構建、部署和執行集成經典計算和量子計算的工作流程。所有這些工具都將為用戶提供構建塊，以更輕鬆地構建和運行量子算法。</p><p>此外，IBM 還通過 IBM 的企業 AI 平台 watsonx 率先<strong>使用生成式 AI 進行量子代碼編程</strong>。IBM 將集成 watsonx 提供的生成式 AI，以幫助自動開發 Qiskit 的量子代碼。這將通過 IBM Granite 模型系列的微調來實現。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 03:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269585/ibm-quantum-roadmap-2033</guid>
            <link>https://www.oschina.net/news/269585/ibm-quantum-roadmap-2033</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GDB 14.1 正式發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>GNU 調試器 GDB 14.1 現已發佈。GDB 是 Ada、C、C++、Go 與 Rust 等源代碼級調試器語言，它可以在最流行的 GNU/Linux、Unix 和 Windows 變體上運行，並且調試十幾種不同的處理器架構。</p><p><strong>主要更新內容</strong></p><ul><li><p>刪除的功能，刪除的配置：</p><ul><li><p>GDB 不再支持 AiX 4.x、5.x 和 6.x。支持的最低版本為 AiX 7.1。</p></li><li><p>&nbsp;GDB/MI 版本 1 支持已被刪除</p></li></ul></li><li><p>對 Debugger Adapter Protocol (DAP) 的初始內置支持</p></li><li><p>GDB 現在可以識別 NO_COLOR 環境變量</p></li><li><p>初步支持大於 64 位的整數類型</p></li><li><p>Breakpoints 現在可以是 inferior-specific</p></li><li><p>新的 convenience function "$_shell"，用於執行 shell 命令並返回其結果。</p></li><li><p>Python 支持</p><ul><li>新類 gdb.Thread</li><li>新類 gdb.unwinder.FrameId</li><li>新類 gdb.ValuePrinter</li><li>新的 gdb.Inferior.arguments 屬性</li><li>新的 gdb.Inferior.main_name 屬性</li><li>新的 gdb.Breakpoint.inferior 屬性</li><li>新的 gdb.Progspace.symbol_file 屬性</li><li>新的 gdb.Progspace.executable_filename 屬性</li><li>新函數 gdb.execute_mi(COMMAND, [ARG]...)</li><li>新函數 gdb.block_signals()</li><li>新方法 gdb.Frame.static_link</li><li>新的 gdb.Inferior 'clear_env'、'set_env' 和 'unset_env' 方法</li><li>新的 gdb.Type 現在具有 'is_array_like' 和 'is_string_like' 方法</li><li>新的 gdb.Value 'assign' 方法</li><li>新的 gdb.Value 'to_array' 方法</li><li>新的 gdb.Progspace 'objfile_for_address' 方法</li><li>gdb.LazyString 現在實現 __str__ 方法</li><li>新事件 gdb.ThreadExitedEvent</li><li>新事件 gdb.ExecutableChangedEvent</li><li>新事件 gdb.NewProgspaceEvent</li><li>新事件 gdb.FreeProgspaceEvent</li><li>......</li></ul></li><li><p>Remote protocol</p><ul><li><p>支持啓用或禁用單個遠程目標功能</p></li></ul></li><li><p>GDB/MI 支持</p><ul><li>新的「no-history」停止原因</li><li>支持&nbsp;inferior-specific breakpoints</li><li>在 breakpoint-created&nbsp; 的通知中和 -break-insert 命令的結果中出現的 bkpt 元組現在可以包含一個可選的"inferior"字段，用於 main breakpoint 和每個位置（如果 breakpoint 是 inferior-specific）。</li><li>嘗試使用不存在的 thread ID 創建&nbsp;thread-specific breakpoint 現在會導致錯誤</li><li>新增 "simple-values-ref-types"-list-feature 值，指示各種命令中的--simple-values 選項如何考慮引用類型。</li></ul></li><li><p>增強的 AArch64 支持</p><ul><li><p>對 Scalable Matrix Extension (SME) 和 Scalable Matrix Extension 2 (SME2) 的初步支持</p></li><li><p>「org.gnu.gdb.aarch64.pauth」指針驗證功能現已棄用，轉而使用 "org.gnu.gdb.aarch64.pauth_v2 "功能字符串。</p></li></ul></li><li><p>增強的 Ada 支持</p><ul><li><p>支持 Ada 2022 target name symbol ('@')</p></li><li><p>支持 Ada 2022 'Enum_Rep 和 'Enum_Val 屬性</p></li></ul></li><li><p>各種各樣的</p><ul><li>&nbsp;「list」命令現在接受「.」作為參數，告訴 GDB&nbsp; print 當前幀內執行點周圍的位置。</li><li>printf 和 dprintf 命令的新「%V」輸出格式。</li><li>printf 命令現在將從 inferior 獲取的字符串大小限制為"max-value-size"設置的值。</li><li>通過新的 --additional-debug-dirs=PATHs 配置選項，支持在配置時擴展 GDB 參數"debug-file-directory"的默認值。</li><li>新命令「info main」</li><li>新命令「set tui mouse-events [on|off]」（默認打開）</li><li>新命令「set always-read-ctf on|off」（默認關閉）</li><li>各種新的調試和維護命令</li></ul></li></ul><p>更多詳情可查看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mail-archive.com%2Finfo-gnu%40gnu.org%2Fmsg03236.html" target="_blank">https://www.mail-archive.com/info-gnu@gnu.org/msg03236.html</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 03:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269583/gdb-14-1-released</guid>
            <link>https://www.oschina.net/news/269583/gdb-14-1-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[男子撿女大學生手機要價千元，稱「不給錢就刷機」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，安徽合肥一男子撿到女大學生手機後索要千元，<strong>還稱「不給錢就刷機」</strong>，此事引發網友熱議。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-321b5193dd4d3196b663a2f80ebabd5db12.png" referrerpolicy="no-referrer"></p><p>當事女生張同學稱，自己回到座位上吃飯時發現手機不在身邊，跟經理交流後選擇報警，調監控發現是一名男子用盤子擋住將手機並將手機拿走。和對方協商後，自己已轉其 500 元，想等手機發貨再轉 500。對方不願意，並將手機從快遞處拿走了。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e58c37744e8fabbe6dbc168efc423841144.png" referrerpolicy="no-referrer"></p><p>據當事女生社交賬號介紹，手機對自己很重要，裏面有很多信息，以及和過世家人的珍貴回憶。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d97c453da3866dca8ce1f8d9af2e0e1e722.png" referrerpolicy="no-referrer"></p><p>12 月 3 日，當事女生再發文，稱對方已經將自己拉黑，自己仍然沒有拿到手機。</p><p>12 月 4 日，當事男子耿先生表示 ，網上消息是片面的，因張同學打電話時態度不好，一氣之下才説要錢要刷機那些話。耿先生稱，當初頭腦發熱想佔為己有，後來覺得這事不對，在警察聯繫自己後，自己也決定歸還手機。當時和對方談的是 1000 元，但對方後來又説先轉 500 元郵寄到了再轉 500 元，當時就比較氣憤，目前手機已寄出。現個人隱私被曝光，已影響到正常生活。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 03:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269578</guid>
            <link>https://www.oschina.net/news/269578</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[phpy：PHP 與 Python 互調用庫，為 PHP 引入 Python 生態]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><div><p style="margin-left:0; margin-right:0">phpy 是識沃團隊最新推出的開源項目，目標是為<span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>引入<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>生態，來彌補<span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>生態的空缺和不足。<code>phpy</code><span>&nbsp;</span>使得<span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>可以調用所有<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>的包。</p><p style="margin-left:0; margin-right:0">包括當下非常流行的<span>&nbsp;</span><code>PyTorch</code>、<code>transformers</code>、<code>TensorFlow</code><span>&nbsp;</span>等<span>&nbsp;</span><code>AI</code><span>&nbsp;</span>庫，以及<span>&nbsp;</span><code>Numpy</code>、<code>Pandas</code>、<code>Scikit</code><span>&nbsp;</span>等科學計算庫，還可以使用<span>&nbsp;</span><code>PyQt</code>、<code>wxPython</code><span>&nbsp;</span>等圖形界面庫。</p><ul><li>GitHub 地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Flink.segmentfault.com%2F%253Fenc%253D7rdRaP7JOlFKe7quatP6jw%25253D%25253D.6OehhcFnN9z4IkDIIaY6pOMhBiIrA4NJBxw3yyZASoM%25253D" target="_blank">https://github.com/swoole/phpy</a></li><li>Gitee 地址：<a href="https://gitee.com/swoole/phpy">https://gitee.com/swoole/phpy</a><p>&nbsp;</p></li></ul><blockquote>
     不建議在
     <span>&nbsp;</span><code>php-fpm/apache</code><span>&nbsp;</span>短生命週期運行環境下使用，頻繁地導入/銷燬模塊的開銷會消耗大量資源
    </blockquote><h2>編譯安裝</h2><p style="margin-left:0; margin-right:0"><code>phpy</code><span>&nbsp;</span>可以作為<span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>的擴展，也可以作為<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>的<span>&nbsp;</span><code>C</code><span>&nbsp;</span>模塊。既可以在<span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>代碼中調用<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>的庫，也可以在<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>中調用<span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>的類和函數。</p><blockquote>
     作為
     <span>&nbsp;</span><code>Python</code><span>&nbsp;</span>模塊時依賴
     <span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>的
     <span>&nbsp;</span><code>embed SAPI</code><span>&nbsp;</span>，檢查
     <span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>的目錄中，確保存在
     <span>&nbsp;</span><code>libphp.so</code></blockquote><div><pre><code class="language-text">ll /opt/php-8.1/lib/libphp.so
-rwxr-xr-x 1 htf htf 39397224 11 月 30 19:25 /opt/php-8.1/lib/libphp.so*</code></pre></div><h3>編譯依賴</h3><ol><li><code>Python 3.10</code><span>&nbsp;</span>或以上版本，建議使用<span>&nbsp;</span><code>conda</code><span>&nbsp;</span>工具來安裝</li><li><code>PHP 8.1</code><span>&nbsp;</span>或以上版本</li></ol><p style="margin-left:0; margin-right:0"><code>Python</code><span>&nbsp;</span>將安裝到<span>&nbsp;</span><code>/opt/anaconda3</code><span>&nbsp;</span>目錄下</p><ul><li><code>/opt/anaconda3/bin/python</code><code>Python</code><span>&nbsp;</span>主程序</li><li><code>/opt/anaconda3/include/python3.11</code><span>&nbsp;</span>頭文件</li><li><code>/opt/anaconda3/lib/python3.11</code><span>&nbsp;</span>動態鏈接庫目錄</li></ul><p style="margin-left:0; margin-right:0">另外需要配置<span>&nbsp;</span><code>/etc/ld.so.conf.d/conda.conf</code><span>&nbsp;</span>加入<span>&nbsp;</span><code>/opt/anaconda3/lib</code><span>&nbsp;</span>和<span>&nbsp;</span><code>/opt/php-8.1/lib</code><span>&nbsp;</span>。執行<span>&nbsp;</span><code>ldconfig</code><span>&nbsp;</span>檢查是否可以找到<span>&nbsp;</span><code>libpython3.11.so</code><span>&nbsp;</span>和<span>&nbsp;</span><code>libphp.so</code>。</p><div><pre><code class="language-text">sudo ldconfig -p |grep php
    libphp7.so (libc6,x86-64) =&gt; /opt/php-7.4/lib/libphp7.so
    libphp.so (libc6,x86-64) =&gt; /opt/php-8.0/lib/libphp.so
    
sudo ldconfig -p |grep python
    libsamba-policy.cpython-38-x86-64-linux-gnu.so.0 (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libsamba-policy.cpython-38-x86-64-linux-gnu.so.0
    libpython3.11.so.1.0 (libc6,x86-64) =&gt; /opt/anaconda3/lib/libpython3.11.so.1.0
    libpython3.11.so (libc6,x86-64) =&gt; /opt/anaconda3/lib/libpython3.11.so
    libpython3.8.so.1.0 (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libpython3.8.so.1.0
    libpython3.8.so (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libpython3.8.so
    libpython3.5m.so.1.0 (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libpython3.5m.so.1.0
    libpython3.so (libc6,x86-64) =&gt; /opt/anaconda3/lib/libpython3.so
    libpython2.7.so.1.0 (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libpython2.7.so.1.0
    libpython2.7.so (libc6,x86-64) =&gt; /usr/lib/x86_64-linux-gnu/libpython2.7.so</code></pre></div><h3>作為<span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>擴展</h3><p style="margin-left:0; margin-right:0">檢查<span>&nbsp;</span><code>config.m4</code><span>&nbsp;</span>中<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>路徑是否正確。若<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>的安裝路徑不是<span>&nbsp;</span><code>/opt/anaconda3</code>，需修改為正確的安裝路徑。</p><div><pre><code class="language-text">cd phpy
phpize
./configure
make install</code></pre></div><p style="margin-left:0; margin-right:0">安裝成功後，修改<span>&nbsp;</span><code>php.ini</code><span>&nbsp;</span>，加入<span>&nbsp;</span><code>extension=phpy.so</code>，執行<span>&nbsp;</span><code>php -m</code><span>&nbsp;</span>和<span>&nbsp;</span><code>php --ri phpy</code><span>&nbsp;</span>檢查是否成功加載擴展。</p><h3>作為<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>模塊</h3><div><pre><code class="language-text">cmake .
make -j</code></pre></div><p style="margin-left:0; margin-right:0">執行成功後，會生成<span>&nbsp;</span><code>tests/lib/phpy.so</code><span>&nbsp;</span>文件。可以在<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>中直接導入此模塊。</p><div><pre><code class="language-text">import phpy</code></pre></div><h2>使用方法</h2><h3>導入 Python 模塊</h3><div><pre><code class="language-php"><span style="color:#056de8">$os</span><span>=</span><span>PyCore</span><span>::</span><span style="color:#056de8">import</span><span>(</span><span style="color:#f1403c">'os'</span><span>);</span></code></pre></div><h3>執行函數</h3><div><pre><code class="language-php"><span style="color:#056de8">$uname</span><span>=</span><span style="color:#056de8">$os</span><span>-&gt;</span><span style="color:#056de8">uname</span><span>();</span></code></pre></div><h3>讀取屬性</h3><div><pre><code class="language-php"><span>echo</span><span style="color:#056de8">$uname</span><span>-&gt;</span><span style="color:#056de8">sysname</span><span>;</span></code></pre></div><h3>加載路徑</h3><p style="margin-left:0; margin-right:0">可使用<span>&nbsp;</span><code>PyCore::import('sys')-&gt;path-&gt;append()</code><span>&nbsp;</span>將一些目錄加入到加載路徑列表中。<br> 例如：<code>/workspace/app/user.py</code><span>&nbsp;</span>自定義的包，可以通過下面的步驟實現加載：</p><ol><li><code>PyCore::import('sys')-&gt;path-&gt;append('/workspace')</code><span>&nbsp;</span>將<span>&nbsp;</span><code>/workspace</code><span>&nbsp;</span>添加到<span>&nbsp;</span><code>sys.path</code><span>&nbsp;</span>中</li><li><code>PyCore::import('app.user')</code><span>&nbsp;</span>將自動搜索<span>&nbsp;</span><code>sys.path</code><span>&nbsp;</span>找到對應的<span>&nbsp;</span><code>app/user.py</code><span>&nbsp;</span>包並載入</li></ol><h3>內置方法</h3><ul><li><code>PyCore::str()</code><span>&nbsp;</span>將對象轉為字符串</li><li><code>PyCore::repr()</code></li><li><code>PyCore::type()</code><span>&nbsp;</span>獲取對象的類型</li><li><code>PyCore::locals()</code><span>&nbsp;</span>獲取當前空間內容的所有局部變量</li><li><code>PyCore::globals()</code><span>&nbsp;</span>獲取所有全局變量</li><li><code>PyCore::hash()</code><span>&nbsp;</span>獲取 Hash 值</li><li><code>PyCore::hasattr()</code><span>&nbsp;</span>檢測對象是否存在某個屬性</li><li><code>PyCore::id()</code><span>&nbsp;</span>獲取對象的內部編號</li><li><code>PyCore::len()</code><span>&nbsp;</span>獲取長度</li><li><code>PyCore::dir()</code><span>&nbsp;</span>獲取對象所有的屬性、方法</li><li><code>PyCore::int()</code><span>&nbsp;</span>構造一個整數</li><li><code>PyCore::float()</code><span>&nbsp;</span>構造一個浮點數</li><li><code>PyCore::fn()</code><span>&nbsp;</span>構造一個可調用函數</li><li><code>PyCore::scalar()</code><span>&nbsp;</span>將<span>&nbsp;</span><code>PyObject</code><span>&nbsp;</span>對象轉為<span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>的標量類型，例如<span>&nbsp;</span><code>PyStr</code><span>&nbsp;</span>將轉為<span>&nbsp;</span><code>PHP 字符串</code>，<code>Dict/Tuple/Set/List</code><span>&nbsp;</span>將轉為<span>&nbsp;</span><code>Array</code></li></ul><h3>內置類</h3><ul><li><code>PyObject</code>：所有其他類型的基類</li><li><code>PyDict</code>：字典類型，等同於<span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>的關聯數組</li><li><code>PyList</code>：列表類型，等同於<span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>的索引數組</li><li><code>PyTuple</code>：元組，不可變的列表</li><li><code>PyStr</code>：字符串</li><li><code>PyModule</code>：<code>Python</code><span>&nbsp;</span>包，<code>PyModule</code><span>&nbsp;</span>也是<span>&nbsp;</span><code>PyObject</code><span>&nbsp;</span>的子類</li></ul><p style="margin-left:0; margin-right:0"><code>PyObject</code><span>&nbsp;</span>是除了<span>&nbsp;</span><code>PyCore</code><span>&nbsp;</span>之外，所有其他類型的基類。非內置類的對象是<span>&nbsp;</span><code>PyObject</code><span>&nbsp;</span>的實例。<code>PyObject</code><span>&nbsp;</span>實現了<span>&nbsp;</span><code>4</code><span>&nbsp;</span>個魔術方法，用於將操作映射到<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>對象。</p><p style="margin-left:0; margin-right:0">所有類方法、參數、返回值參考<span>&nbsp;</span><code>stubs</code><span>&nbsp;</span>目錄中的文件。</p><h3>繼承關係</h3><div><pre><code class="language-text">PyObject -&gt; PyModule
         -&gt; PySequenece -&gt; PyList
                        -&gt; PyTuple
         -&gt; PySet
         -&gt; PyStr
         -&gt; PyDict
         -&gt; PyType</code></pre></div><h3>整數</h3><p style="margin-left:0; margin-right:0"><code>Python</code><span>&nbsp;</span>語言是天然支持無限精度整型計算的，可以使用<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>的整數計算能力來代替<span>&nbsp;</span><code>ext-bcmath</code></p><h3>構造</h3><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>PyCore::int()</code><span>&nbsp;</span>函數來構造一個數字，可以傳入整數、浮點數、字符串來初始化。</p><div><pre><code class="language-php"><span style="color:#056de8">$i1</span><span>=</span><span>PyCore</span><span>::</span><span style="color:#056de8">int</span><span>(</span><span style="color:#056de8">12345678</span><span>);</span><span style="color:#056de8">$i2</span><span>=</span><span>PyCore</span><span>::</span><span style="color:#056de8">int</span><span>(</span><span style="color:#f1403c">'1234567890123456789012345678901234567890'</span><span>);</span><span style="color:#056de8">$i3</span><span>=</span><span>PyCore</span><span>::</span><span style="color:#056de8">int</span><span>(</span><span style="color:#056de8">12345678.03</span><span>);</span></code></pre></div><h3>運算</h3><p style="margin-left:0; margin-right:0">整數同樣也是<span>&nbsp;</span><code>PyObject</code><span>&nbsp;</span>的實例，可以使用內置的方法類實現運算。</p><div><pre><code class="language-php"><span style="color:#056de8">$i</span><span>=</span><span>PyCore</span><span>::</span><span style="color:#056de8">int</span><span>(</span><span style="color:#056de8">12345435</span><span>);</span><span>var_dump</span><span>(</span><span>strval</span><span>(</span><span style="color:#056de8">$i</span><span>-&gt;</span><span style="color:#056de8">__pow__</span><span>(</span><span style="color:#056de8">3</span><span>)));</span><span>var_dump</span><span>(</span><span>strval</span><span>(</span><span style="color:#056de8">$i</span><span>-&gt;</span><span style="color:#056de8">__add__</span><span>(</span><span style="color:#056de8">4</span><span>)));</span></code></pre></div><p style="margin-left:0; margin-right:0">將輸出<span>&nbsp;</span><code>1881564851360655187875</code><span>&nbsp;</span>，由於超過了<span>&nbsp;</span><code>64 位</code><span>&nbsp;</span>最大精度，因此輸出結果將自動轉為字符串類型。</p><h3>命名參數</h3><p style="margin-left:0; margin-right:0"><code>phpy</code><span>&nbsp;</span>支持了<strong>命名參數</strong>，可以使用命名參數來調用<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>的函數和方法。</p><blockquote>
     順序參數必須在前，命名參數必須在最後
    </blockquote><div><pre><code class="language-php"><span>kwargs</span><span>(</span><span style="color:#056de8">$a</span><span>,</span><span style="color:#056de8">$b</span><span>,</span><span style="color:#056de8">$c</span><span>,</span><span>name</span><span>:</span><span style="color:#f1403c">'hello'</span><span>,</span><span>world</span><span>:</span><span style="color:#f1403c">'rango'</span><span>);</span></code></pre></div><p style="margin-left:0; margin-right:0">對應的<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>代碼為：</p><div><pre><code class="language-python3"><span>kwargs</span><span>(</span><span>a</span><span>,</span><span>b</span><span>,</span><span>c</span><span>,</span><span>name</span><span>:</span><span style="color:#f1403c">'hello'</span><span>,</span><span>world</span><span>:</span><span style="color:#f1403c">'rango'</span><span>)</span></code></pre></div><h3>回調函數</h3><p style="margin-left:0; margin-right:0">可將<span>&nbsp;</span><code>PHP</code><span>&nbsp;</span>的可調用對象作為<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>的回調函數。使用<span>&nbsp;</span><code>PyCore::fn(callable $fn)</code><span>&nbsp;</span>包裹即可。</p><div><pre><code class="language-php"><span style="color:#056de8">$m</span><span>=</span><span>PyCore</span><span>::</span><span style="color:#056de8">import</span><span>(</span><span style="color:#f1403c">'app.user'</span><span>);</span><span style="color:#056de8">$uuid</span><span>=</span><span>uniqid</span><span>();</span><span style="color:#056de8">$rs</span><span>=</span><span style="color:#056de8">$m</span><span>-&gt;</span><span style="color:#056de8">test_callback</span><span>(</span><span>PyCore</span><span>::</span><span style="color:#056de8">fn</span><span>(</span><span>function</span><span>(</span><span style="color:#056de8">$namespace</span><span>)</span><span>use</span><span>(</span><span style="color:#056de8">$uuid</span><span>)</span><span>{</span><span>var_dump</span><span>(</span><span style="color:#056de8">$namespace</span><span>);</span><span>return</span><span style="color:#056de8">$uuid</span><span>;</span><span>}));</span></code></pre></div><ul><li><code>import app.user</code><span>&nbsp;</span>導入了一個自定義<span>&nbsp;</span><code>Python</code><span>&nbsp;</span>包</li><li>調用了包中的一個函數<span>&nbsp;</span><code>test_callback</code>，此函數接受一個參數為<span>&nbsp;</span><code>Python Callable</code><span>&nbsp;</span>對象</li><li>使用<span>&nbsp;</span><code>PyCore::fn()</code><span>&nbsp;</span>包裹了一個<span>&nbsp;</span><code>Closure</code><span>&nbsp;</span>閉包對象作為回調，這裏也支持函數名稱字符串、對象方法的調用方式</li><li>回調函數返回了一個字符串，在<span>&nbsp;</span><code>test_callback</code><span>&nbsp;</span>函數中會得到一個<span>&nbsp;</span><code>str</code><span>&nbsp;</span>類型返回值</li></ul><p style="margin-left:0; margin-right:0">可參考下方的<span>&nbsp;</span><code>Python tkinter</code><span>&nbsp;</span>例子。</p><h2>實際案例</h2><h3>基於<span>&nbsp;</span><code>tkinter</code><span>&nbsp;</span>實現<span>&nbsp;</span><code>GUI</code><span>&nbsp;</span>的例子</h3><div><pre><code class="language-php"><span>&lt;?</span><span>php</span><span style="color:#056de8">$tkinter</span><span>=</span><span>PyCore</span><span>::</span><span style="color:#056de8">import</span><span>(</span><span style="color:#f1403c">'tkinter'</span><span>);</span><span style="color:#056de8">$root</span><span>=</span><span style="color:#056de8">$tkinter</span><span>-&gt;</span><span style="color:#056de8">Tk</span><span>();</span><span style="color:#056de8">$root</span><span>-&gt;</span><span style="color:#056de8">title</span><span>(</span><span style="color:#f1403c">'我的窗口'</span><span>);</span><span style="color:#056de8">$root</span><span>-&gt;</span><span style="color:#056de8">geometry</span><span>(</span><span style="color:#f1403c">"500x500"</span><span>);</span><span style="color:#056de8">$root</span><span>-&gt;</span><span style="color:#056de8">resizable</span><span>(</span><span>False</span><span>,</span><span>False</span><span>);</span><span style="color:#056de8">$button</span><span>=</span><span style="color:#056de8">$tkinter</span><span>-&gt;</span><span style="color:#056de8">Button</span><span>(</span><span style="color:#056de8">$root</span><span>,</span><span>text</span><span>:</span><span style="color:#f1403c">"Click Me!!"</span><span>,</span><span>command</span><span>:</span><span>PyCore</span><span>::</span><span style="color:#056de8">fn</span><span>(</span><span>function</span><span>()</span><span>{</span><span>var_dump</span><span>(</span><span>func_get_args</span><span>());</span><span>echo</span><span style="color:#f1403c">'click me!!'</span><span>.</span><span>PHP_EOL</span><span>;</span><span>}));</span><span style="color:#056de8">$button</span><span>-&gt;</span><span style="color:#056de8">pack</span><span>();</span><span style="color:#056de8">$tkinter</span><span>-&gt;</span><span style="color:#056de8">mainloop</span><span>();</span></code></pre></div><p style="margin-left:0; margin-right:0">&nbsp;</p><div><img height="689" src="https://pic1.zhimg.com/80/v2-498d3eef9a25750f9b40adb32704c254_1440w.webp" width="906" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">&nbsp;</p><h3>一個基於<span>&nbsp;</span><code>transformers</code><span>&nbsp;</span>的情感分析模型推理實現</h3><div><pre><code class="language-php"><span>&lt;?</span><span>php</span><span style="color:#056de8">$transformers</span><span>=</span><span>PyCore</span><span>::</span><span style="color:#056de8">import</span><span>(</span><span style="color:#f1403c">'transformers'</span><span>);</span><span style="color:#056de8">$os</span><span>=</span><span>PyCore</span><span>::</span><span style="color:#056de8">import</span><span>(</span><span style="color:#f1403c">'os'</span><span>);</span><span style="color:#056de8">$os</span><span>-&gt;</span><span style="color:#056de8">environ</span><span>-&gt;</span><span style="color:#056de8">__setitem__</span><span>(</span><span style="color:#f1403c">'https_proxy'</span><span>,</span><span>getenv</span><span>(</span><span style="color:#f1403c">'https_proxy'</span><span>));</span><span style="color:#056de8">$distilled_student_sentiment_classifier</span><span>=</span><span style="color:#056de8">$transformers</span><span>-&gt;</span><span style="color:#056de8">pipeline</span><span>(</span><span>model</span><span>:</span><span style="color:#f1403c">"lxyuan/distilbert-base-multilingual-cased-sentiments-student"</span><span>,</span><span>top_k</span><span>:</span><span>null</span><span>,</span><span>);</span><span style="color:#056de8">$rs</span><span>=</span><span style="color:#056de8">$distilled_student_sentiment_classifier</span><span>(</span><span style="color:#f1403c">"I love this movie and i would watch it again and again!"</span><span>);</span><span>var_dump</span><span>(</span><span>PyCore</span><span>::</span><span style="color:#056de8">scalar</span><span>(</span><span style="color:#056de8">$rs</span><span>));</span></code></pre></div><p style="margin-left:0; margin-right:0">&nbsp;</p><div><img height="634" src="https://pic3.zhimg.com/80/v2-21b58e8af0bcee2c6497e1fd9375ed3e_1440w.webp" width="910" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">&nbsp;</p></div></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 03:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269576</guid>
            <link>https://www.oschina.net/news/269576</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[百度曾出價 8500 萬挖「AI 教父」被拒]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fi.ifeng.com%2Fc%2F8VEacE2O9MM" target="_blank">鳳凰網科技</a>援引知情人士消息稱，百度曾出價 1200 萬美元 (約合 8486 萬元人民幣) 邀請「AI 教父」傑弗裏·辛頓 (Geoffrey Hinton) 及其學生加入公司。辛頓拒絕了百度的邀請，但是也對豐厚的薪酬動了心。</span></p><p><span style="color:#000000">辛頓畢業於劍橋大學，除了偶爾在微軟和谷歌任職外，他的大部分職業生涯都在學術界度過，對於報酬並不是很在意。但是，由於他自己擁有一個患有神經多樣性 (如自閉症、多動症) 的孩子，所以金錢能夠帶來經濟保障。</span></p><p><img height="331" src="https://static.oschina.net/uploads/space/2023/1205/110427_HgTn_4252687.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">「我們不知道自己值多少錢。」辛頓表示。他諮詢了收購方面的律師和專家，想出了一個計劃：「我們將組織一場拍賣，自己兜售自己。」</span></p><p><span style="color:#000000">此次人才拍賣在年度 AI 會議期間舉行，地點位於加州太浩湖的哈拉斯賭場酒店。谷歌、微軟、百度等科技巨頭均參與其中。最終，辛頓博士和他的學生們在 4400 萬美元 (約合 3.1 億元人民幣) 的價格上停止了這次拍賣，選擇加入了谷歌。</span></p><p><span style="color:#000000">今年 5 月，辛頓宣佈從谷歌離職。他表示，從谷歌辭職是為了可以自由地談論 AI 的風險；並透露，現在對自己一生從事的工作感到有些後悔。辛頓認為，隨着企業不斷改進 AI 系統，它們會變得越來越危險。</span></p><p><span style="color:#000000">辛頓指出，直到去年，谷歌一直是這項技術的「適當管理者」，小心翼翼地不釋放可能造成傷害的東西。但是現在，微軟用聊天機器人增強了必應搜索引擎，挑戰谷歌的核心業務，導致谷歌也在競相部署同樣的技術。科技巨頭們陷入了一場可能無法阻止的競爭。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269575</guid>
            <link>https://www.oschina.net/news/269575</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Django 5.0 正式發佈，最流行 Python Web 框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Django 5.0 已正式<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.djangoproject.com%2Fweblog%2F2023%2Fdec%2F04%2Fdjango-50-released%2F" target="_blank">發佈</a></u>。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-c23764df9e6fda0d09d23c81fc4d3728039.png" referrerpolicy="no-referrer"></p></blockquote><blockquote><p>根據 JetBrains 公佈的<em><u><a href="https://www.oschina.net/news/260950/python-developers-survey-2022-jb-psf"> 2022 Python 開發者調查結果</a></u></em>，Python Web 框架的三巨頭依舊是&nbsp;Flask、Django 和 FastAPI。Django 和 Flask 的使用率排名並列第一。</p><p><img src="https://static.oschina.net/uploads/space/2023/1009/112630_OP7t_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>Django 5.0 支持最新的 Python 版本，包括 Python 3.10、3.11 和 3.12。此外還引入了字段組 (field group)，用於簡化 Django 表單字段的相關元素的渲染。</p><p>下面是值得關注的變化：</p><ul><li><strong>Python 兼容性</strong></li></ul><p>Django 5.0 支持 Python 3.10、3.11 和 3.12。開發團隊建議用戶使用每個 Python 分支的最新版本。</p><p>此外，Django 4.2.x 系列是最後一個支持 Python 3.8 和 3.9 的版本。</p><ul><li><strong>針對表單字段渲染的簡化模板</strong></li></ul><p>Django 5.0 引入了字段組 (field group) 和字段組模板 (field group templates) 的概念。該特性簡化了 Django 表單字段相關元素的渲染，例如標籤、小部件、幫助文本和錯誤等。</p><p>例如下面的模板：</p><pre><code class="language-python">&lt;form&gt;
...
&lt;div&gt;
  {{ form.name.label_tag }}
  {% if form.name.help_text %}
    &lt;div class="helptext" id="{{ form.name.id_for_label }}_helptext"&gt;
      {{ form.name.help_text|safe }}
    &lt;/div&gt;
  {% endif %}
  {{ form.name.errors }}
  {{ form.name }}
  &lt;div class="row"&gt;
    &lt;div class="col"&gt;
      {{ form.email.label_tag }}
      {% if form.email.help_text %}
        &lt;div class="helptext" id="{{ form.email.id_for_label }}_helptext"&gt;
          {{ form.email.help_text|safe }}
        &lt;/div&gt;
      {% endif %}
      {{ form.email.errors }}
      {{ form.email }}
    &lt;/div&gt;
    &lt;div class="col"&gt;
      {{ form.password.label_tag }}
      {% if form.password.help_text %}
        &lt;div class="helptext" id="{{ form.password.id_for_label }}_helptext"&gt;
          {{ form.password.help_text|safe }}
        &lt;/div&gt;
      {% endif %}
      {{ form.password.errors }}
      {{ form.password }}
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
...
&lt;/form&gt;
</code></pre><p>可簡化為：</p><pre><code class="language-python">&lt;form&gt;
...
&lt;div&gt;
  {{ form.name.as_field_group }}
  &lt;div class="row"&gt;
    &lt;div class="col"&gt;{{ form.email.as_field_group }}&lt;/div&gt;
    &lt;div class="col"&gt;{{ form.password.as_field_group }}&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
...
&lt;/form&gt;
</code></pre><ul><li><strong>數據庫計算的默認值</strong></li></ul><p>新的&nbsp;<code>Field.db_default</code>&nbsp;參數用於設置數據庫計算 (database-computed) 的默認值。例如：</p><pre><code class="language-python">from django.db import models
from django.db.models.functions import Now, Pi


class MyModel(models.Model):
    age = models.IntegerField(db_default=18)
    created = models.DateTimeField(db_default=Now())
    circumference = models.FloatField(db_default=2 * Pi())
</code></pre><ul><li><strong>數據庫生成的模型字段</strong></li></ul><p>新的&nbsp;<code>GeneratedField</code>&nbsp;支持創建數據庫生成的列。該字段可在所有支持的數據庫後端上使用，以創建始終根據其他字段計算的字段。例如：</p><pre><code class="language-python">from django.db import models
from django.db.models import F


class Square(models.Model):
    side = models.IntegerField()
    area = models.GeneratedField(expression=F("side") * F("side"), db_persist=True)
</code></pre><p>詳情查看&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.djangoproject.com%2Fen%2F5.0%2Freleases%2F5.0%2F" target="_blank">Django 5.0 release notes</a></u>。</p><p>隨着 Django 5.0 的發佈，Django 4.2 已<strong>結束其 mainstream 支持</strong>，最後一個小錯誤修復版本 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.djangoproject.com%2Fweblog%2F2023%2Fdec%2F04%2Fbugfix-release%2F" target="_blank">4.2.8 已於昨天發佈</a></u>。Django 4.2 是 LTS 版本，會在 2026 年 4 月之前獲得安全和數據丟失修復。</p><p>此外，Django 4.1 的擴展支持已結束。最終安全版本 (4.1.13) 於 11 月 1 日發佈。建議所有 Django 4.1 用戶升級到 Django 4.2 或更高版本。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 02:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269569/django-5-0-released</guid>
            <link>https://www.oschina.net/news/269569/django-5-0-released</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Kubernetes 是否需要提供長期支持版本 (LTS)？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Kubernetes 目前遵循的是「N-2 支持政策」，這意味着僅 3 個最新的次要版本（N、N-1 和 N-2）會獲得安全和錯誤修復，<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubernetes%2Fenhancements%2Ftree%2Fmaster%2Fkeps%2Fsig-release%2F2572-release-cadence" target="_blank">發佈週期則為 15 周</a></u>。</p><p>因此一個 Kubernetes 版本的支持週期通常是 14 個月（12 個月的支持期和 2 個月的升級週期）。如果我們將其與 Debian（許多組織都以其支持週期為基礎的操作系統項目）進行比較，就會發現兩者之間的直接區別。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ec61c0baf042d78a1afa8c75d8e3cc0d5b6.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ab5ecef03b8c181f91320dc29e88037e42b.png" referrerpolicy="no-referrer"></p><p>可以看到，Kubernetes 作為基礎設施項目，其迭代週期還是讓許多公司無法跟上發佈節奏。</p><p>而且手動升級 K8s 集羣通常需要以下工作：</p><ul><li>檢查所有第三方擴展，例如網絡和存儲插件</li><li>升級 etcd（所有實例）</li><li>升級 kube-apiserver（所有控制平面主機）</li><li>升級 kube-controller-manager</li><li>升級 kube-scheduler</li><li>升級雲控制器管理器 cloud controller manager（如果使用的話）</li><li>升級 kubectl</li><li>排空每個節點，並更換節點或升級節點，然後讀取並監視以確保其繼續工作</li><li>根據清單上的要求運行&nbsp;<code>kubectl convert</code></li></ul><p>基於這些因素，有人提出：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmatduggan.com%2Fwhy-kubernetes-needs-an-lts%2F" target="_blank">Kubernetes 是否需要提供長期支持版本 (LTS)</a></u>？</p><p>原因如下：</p><p>第一，Kubernetes 是一個複雜的容器編排系統，由許多不同的組件和模塊組成。這些組件和模塊需要經過持續的維護和更新，以確保其安全性和穩定性。通過提供 LTS 版本，可以為用戶提供一個穩定的基礎，使他們能夠在長期內使用 Kubernetes 而不必頻繁升級。</p><p>其次，許多組織在使用 Kubernetes 時會構建複雜的應用程序和基礎架構。這些應用程序和基礎架構可能依賴於特定版本的 Kubernetes，並且可能需要進行大量的測試和驗證才能在新版本上運行。通過提供 LTS 版本，可以確保這些組織能夠在長期內維持其應用程序和基礎架構的穩定性，而不必擔心由於升級到新版本而導致的不兼容性和故障。</p><p>此外，許多組織可能面臨着合規性和監管要求。這些要求可能要求他們使用特定版本的軟件，並且在一段時間內保持該版本的支持。通過提供 LTS 版本，Kubernetes 可以滿足這些合規性和監管要求，使組織能夠在其環境中使用 Kubernetes 而不必擔心違反規定。</p><p>最後，對於那些不具備大規模升級和遷移能力的組織來説，LTS 版本可以提供更長時間的支持和穩定性。這些組織可能沒有足夠的資源和時間來頻繁升級和遷移他們的應用程序和基礎架構。通過提供 LTS 版本，Kubernetes 可以幫助這些組織保持其系統的穩定性和可靠性，而不必承擔頻繁升級的風險和成本。</p><p>據瞭解，<strong>k8s 團隊正在恢復之前解散的 LTS 工作組。</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-a772b9c5674382c227b5d4bd8b132023e3f.png" referrerpolicy="no-referrer"></p><p><strong>目前其郵件列表還沒有任何內容：</strong><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgroups.google.com%2Fa%2Fkubernetes.io%2Fg%2Fwg-lts" target="_blank">https://groups.google.com/a/kubernetes.io/g/wg-lts</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 05 Dec 2023 02:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269564/kubernetes-needs-an-lts</guid>
            <link>https://www.oschina.net/news/269564/kubernetes-needs-an-lts</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[墨幹理工套件 V1.2.0 發佈了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">從 V1.2.0 開始，我們將墨幹編輯器重命名為墨幹理工套件。因為墨幹編輯器主要為理工科相關的日常寫作服務，使用墨幹編輯器這個名字可能會令人困惑，所以原來的墨幹編輯器 V1.x.y，在墨幹理工套件中成為了學術寫作產品<strong>Mogan Research</strong>，另外後續墨幹理工套件還會發布代碼編輯器<strong>Mogan Code</strong>和幻燈片產品<strong>Mogan Beamer</strong>。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>Mogan Code</strong>的中文名為<strong>墨碼</strong>，<strong>Mogan Beamer</strong>的中文名為<strong>墨板</strong>。這兩個待發布的產品命名比較直觀。<strong>Mogan Research</strong>的中文名為<strong>墨硯</strong>，和 2012 年的諾貝爾文學獎獲得者莫言發音類似，期待更多的華人獲得諾貝爾物理學獎、諾貝爾化學獎。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">墨幹理工套件 V1.2.0 包含以下組件：</p><ul><li>墨硯 V1.2.0 (Mogan Research v1.2.0)</li></ul><h2>重要變更</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">在 GNU TeXmacs 2.1.2 的基礎上：</p><ul><li>開源之夏<code>Mogan Draw on wasm</code>項目： 
  <ul><li>改善繪圖工具的用戶體驗</li><li>將繪圖工具編譯到了 wasm 可直接在瀏覽器中使用</li></ul></li><li>開源之夏<code>可編輯 PDF</code>項目： 
  <ul><li>新增導出 PDF 並將 tm 文檔作為附件嵌入的功能</li><li>可以直接使用墨幹打開帶有 tm 文檔附件的 PDF 文檔</li></ul></li><li>新增墨客星球社區文檔入口：幫助-&gt;墨客星球</li><li>升級到 Qt 6.5.3</li><li>採用 S7 Scheme 作為底層的 Scheme 腳本引擎以改進性能</li><li>採用 KDE 社區 Breeze 圖標以美化用戶界面</li><li>在 Windows 和 macOS 修復大量失效或者和系統衝突的快捷鍵</li><li>大量用戶界面的細節改進：比如顯示可用快捷鍵、調整界面翻譯等等</li><li>若干中文排版的重要改進：比如中英文之間自動插入很小的間隔等等</li><li>若干字體相關重要改進：比如設置 Linux 平台默認中文字體等等</li><li>修復若干參考文獻相關的錯誤</li><li>調整若干默認配置項，改善用戶體驗</li><li>修復若干導致墨幹直接崩潰或者卡死的錯誤</li><li>按照 Linux/macOS/Windows 的規範調整 TEXMACS_HOME_PATH 的路徑</li><li>移除內置文檔，直接加載最新的 GNU TeXmacs 官方文檔</li><li>實驗功能：Mogan Research 已經通過 WASM 從桌面軟件變成瀏覽器可直接訪問的應用</li></ul><h2>已知問題</h2><ul><li>點擊<code>工具-&gt;鍵盤-&gt;編輯鍵盤快捷鍵</code>會崩潰</li><li>安裝之後初次啓動由於需要加載系統所有字體比較慢</li><li>菜單中仍舊有部分沒有翻譯為中文</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">v1.2.1 將於 2024/01/01 發佈，以解決以上問題。</p><h2>實際影響用戶體驗的詳細變更</h2><ul><li>開源之夏：繪圖工具（項目 23，27，50） 
  <ul><li>新增繪製<code>橢圓</code>和<code>扇形</code>的功能，焦點工具欄沒有配置相關圖標，可以使用<code>插入</code>菜單插入</li><li>畫圓的方式從三點畫圓改為兩點畫圓</li><li>複製粘貼一個繪圖對象時，新對象會在原對象的位置上少量偏移，避免重合</li><li>按下 Shift 再單擊，效果等同於右鍵，方便不使用鼠標只使用觸摸板的場合下繪圖</li><li>旋轉或者放縮時，將鼠標變成小手的形狀</li></ul></li><li>用戶界面 (項目 69，71) 
  <ul><li>在右鍵菜單中添加了複製和粘貼的快捷方式</li><li>修復數學模式下<code>插入-&gt;高次方根式</code>失效的問題</li><li>模式工具欄中的<code>sys-chinese</code>顯示為<code>默認字體</code>，表示中文文檔默認採用系統自帶的中文字體</li><li>幻燈片模式下，不翻譯主題下拉菜單中的主題名</li><li>不翻譯<code>調試</code>中的各種調試選項，比如<code>auto</code>，<code>keyboard</code></li><li>不翻譯<code>版本-&gt;對比</code>中的菜單項</li><li>在界面和代碼中使用 macOS 而不是 Mac OS</li><li>退出墨乾的彈出窗口中，開啓對於 Cancel 的翻譯</li><li>在模式工具欄中，直接使用語言而不是國旗顯示當前的文檔語言</li></ul></li><li>快捷鍵（項目 20, 59, 71） 
  <ul><li>修復無法輸入中文全角雙引號的問題</li><li>修復<code>工具-&gt;鍵盤-&gt;顯示鍵盤按鍵</code>無法顯示中文輸入的問題</li><li>顯示模式工具欄中下拉菜單中的快捷鍵</li><li>顯示模式工具欄中標號、摺疊等圖標的快捷鍵</li><li>修復<code>插入-&gt;數學-&gt;多行公式</code>的快捷鍵提示</li><li>新增用於刪除一個單詞<code>(kill-word)</code>的 Emacs 風格快捷鍵</li><li>新增<code>std V</code>（<code>Ctrl+Shift+v</code>或者<code>Command+Shift+v</code>）用於粘貼純文本</li><li>幻燈片模式下，交換<code>下一個</code>和<code>下一屏</code>的快捷鍵，方便使用翻頁筆展開當前屏幕的摺疊內容</li><li>文本模式下，將下上標、下標、上劃線、下劃線的快捷鍵調整為 Tab 循環風格的快捷鍵</li><li>文本模式下，將列表的快捷鍵<code>Option+e</code>和<code>Option+i</code>改為 Markdown 風格的快捷鍵，避免和 macOS 系統快捷鍵衝突</li><li>Windows 平台下，<code>編輯</code>菜單中的複製、粘貼、剪切的快捷鍵提示改為<code>C-c</code>，<code>C-v</code>,<span>&nbsp;</span><code>C-x</code></li><li>Linux 和 Windows 平台下，Emacs 風格的 meta 從 Windows 鍵調整為 Alt，避免和系統快捷鍵衝突</li><li>macOS 快捷鍵風格中，結構化插入的快捷鍵前綴從 Ctrl 改為 Option，避免和 macOS 系統快捷鍵衝突</li><li>macOS 快捷鍵風格中，將<code>cmd</code>鍵從<code>Ctrl</code>改為<code>Option</code>，比如<code>插入-&gt;節</code>從<code>Ctrl+1</code>變為<code>Option+1</code></li><li>macOS 快捷鍵風格中，將插入符號的快捷鍵從<code>Ctrl+q</code>改為<code>Option+q</code>，避免 Qt 6 無法識別<code>Ctrl+q</code>的問題</li></ul></li><li>字體（項目 11） 
  <ul><li>Linux 平台下，使用<code>Noto CJK SC</code>作為默認中文字體</li><li>採用默認中文字體來渲染帶圈的數字（例如：①、②、③）</li></ul></li><li>排版（項目 69） 
  <ul><li>書籍樣式的章名從<code>章 1</code>調整為<code>第 1 章</code></li><li>依據 W3C 的中文排版需求，調整標點符號的行首行尾禁則（只在文檔語言為中文時生效）</li><li>依據 W3C 的中文排版需求，在中文和英文之間加入很小的間隔（只在文檔語言為中文時生效）</li><li>修復中文字體大小在使用默認字體時偏小的問題</li><li>修復文檔中指示標籤無法渲染中文的問題</li></ul></li><li>參考文獻（項目 12，63） 
  <ul><li>修復中文亂碼的問題</li><li>修復中文關鍵字無法搜索的問題</li><li>修復參考文獻生成若干格式錯誤</li><li>改進參考文件引用編號的合併</li></ul></li><li>表格（項目 52） 
  <ul><li>修復子表格寬度設置無效的問題</li></ul></li><li>幻燈片（項目 6） 
  <ul><li>內置 GNU TeXmacs 官網的幻燈片主題資源，避免下載時間過長的問題</li></ul></li><li>格式轉換（項目 9） 
  <ul><li>修復 PDF 導出文件中文檔元數據亂碼問題</li><li>修復 PDF 導出文件中含中文超鏈接目標亂碼和懸浮提示亂碼的問題</li><li>修復 HTML 導出文件中標題亂碼問題</li></ul></li><li>用戶首選項（項目 10） 
  <ul><li><code>通用-&gt;顯示詢問</code>調整為<code>通過彈出窗口</code></li><li><code>其它-&gt;執行文檔更新</code>調整為<code>三次</code></li><li>進入繪圖模式（插入繪圖區域或者在當前位置繪製）默認顯示網格，可使用快捷鍵<code>#</code>切換</li><li>繪圖模式的網格默認單位長度從 1 調整為 2</li><li>默認開啓<code>轉換-&gt;PDF-&gt;展開幻燈片中的可摺疊對象</code></li></ul></li><li>穩定性（項目 7） 
  <ul><li>修復內存少量泄露的問題</li><li>修復將比較大的數轉換為羅馬數字崩潰的問題</li><li>修復版本工具中使用粗粒度做文檔比較崩潰的問題</li><li>Linux 平台下，修復錯誤的環境變量 LC_PAPER 導致崩潰的問題</li></ul></li></ul><h2>開發者相關變更</h2><ul><li>使用 xmake 2.8.5 作為構建工具，並配置了 Ubuntu/macOS/Windows 三個平台的 CI 和 CD</li><li>在 Git 倉庫的 devel 目錄下使用 tm 文檔做項目管理，確立了 Git 提交信息的規範</li><li>在<code>開發者</code>菜單中可以直接點擊查看當前版本的項目管理，也可以直接打開錯誤模版和特性模版</li><li>Windows 平台下，使用 msvc 而不是 mingw 來構建整個軟件</li><li>HTML 和 LaTeX 的導入導出、各種界面語言的翻譯詞典、編程語言的高亮初步插件化</li><li>TeXmacs 的基礎代碼重構為 Lolly 項目作為 Mogan 的依賴</li><li>在 Lolly 項目中引入 tbox 依賴解決棘手的字符編碼以及跨平台的文件訪問等問題</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 12:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269498</guid>
            <link>https://www.oschina.net/news/269498</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源｜Timeplus 為全球開發者開源高性能實時數據平台核心]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>2023 年 9 月 21 日&nbsp;</strong>- Timeplus，業界最快最強的實時流式分析平台之一，宣佈將其核心引擎 「Proton」 正式開源提供給全球開發者。Timeplus 在融合 ClickHouse 的歷史在線分析處理的基礎上，開發了一款全新的流式數據處理優先、統一歷史數據從存儲到計算原生一體化的實時數據平台。這意味着企業現在可以使用統一 SQL 語言實時無縫地查詢流式數據和歷史數據，進行實時處理分析，實時生成報表。相對於其他流式數據處理技術而言，Timeplus 的高效和簡潔的統一架構，不僅可以提供增強的數據處理及分析功能以及更好的性能，更可以讓企業大大降低實時數據處理的開發、部署和運維成本。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Timeplus 的聯合創始人兼首席執行官王亭表示：「Timeplus 是一家由工程師創辦，併為工程師服務的公司。我們廣泛的開發者用戶都表示十分喜歡 Timeplus 產品的簡單、高效和優雅，許多人也都希望我們能開放源代碼。我們傾聽到大家的心聲，非常高興地正式宣佈核心引擎‘Proton’的開源，同時和 ClickHouse 成為合作伙伴併為社區作貢獻，這將惠及全球的開發者。用戶可以從高效的流式處理分析和 OLAP 歷史分析結閤中受益。」</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Timeplus 認為僅靠單一的流式處理無法滿足實時分析的複雜需求。要實時找到問題的根源並精確處理相關內容，需要參考歷史數據。通過使用 Timeplus 和 ClickHouse 的集成，開發者現在可以無縫地關聯歷史數據和統一分析，以解決複雜的實時分析需求。例如：在線與離線數據的關聯比較、數據回填和回測等。同時，用戶現在也能更輕鬆、更經濟、更快速地運行統一的實時分析，來應對一系列具有挑戰性的多樣化用例的分析問題，比如在金融服務和物聯網等領域的分析。在實際使用中，Timeplus 客戶使用統一高效的 SQL 流式處理完成實時分析，可以大幅度降低總體擁有成本（TCO），只是使用其他系統的 10%。</p><h4><strong>為應對行業挑戰而生，為業界提供實時分析的創新技術方案</strong></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Timeplus 解決了一個極其困難的技術挑戰：在單一內核提供了簡單、高效、統一的流式分析與歷史分析的融合。通過與 ClickHouse OLAP 分析能力的無縫整合，Timeplus 提供了強大的流式處理及複雜的增量計算能力，徹底改變了數據工程師和分析師的工作方式。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">許多行業都需要創新的方法來實現實時持續智能。例如資本市場，從優化成本以及基礎設施來支持更可靠的交易，到在不斷變化的市場環境下進行實時的風險控制和欺詐檢測，實時處理技術一直至關重要。開發者常常陷入一個 「三難選擇」 的境地，他們必須在速度、功能和開放性之間做出權衡，通常只能選擇其中一個或兩個。Timeplus 基於 SQL 的開放標準實現了歷史和流式分析的強大功能以及超低延遲。通過將核心開源，Timeplus 為整個社區的開發者提供了機會，一起來參與到實時流式數據分析的平台創新中。Timeplus 強大的流式 SQL 和實時分析能力也能更好地幫助開發者加速各行各業的競爭優勢。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">正如華泰證券信息技術部聯席負責人、數字化運營部總經理王玲表示：「在今天瞬息萬變的市場中，企業必須具備實時運營能力，否則將不進而退。Timeplus 填補了市場上的重要空白，它支持流式 SQL，不僅易於使用且分析速度快。這項技術使企業從流數據中提取洞見變得更加容易，節省了數百小時開發成千上萬行代碼的時間。Timeplus 能夠實時監控並同步分析大量數據，大幅提升企業風控管理和成本分析的水平。」</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Timeplus 產品在 2022 年 3 月份推出，目前擁有超過 250 家客戶在這個平台上使用和測試。迄今為止，公司已經從領先的全球投資者中獲得 900 萬美元的天使輪融資，這些投資者包括高瓴創投、Sentinel Capital 的創始人 Jeremy Kranz、Apple 前供應鏈高級副總裁 Rory Sexton、世界流式數據技術先驅和 StreamBase 的創始人 Richard Tibbetts 等在內的天使投資者。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">全球開發者和技術愛好者還在猶豫什麼，快來訪問<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimeplus-io%2Fproton" target="_blank">GitHub 上的 Proton</a>，只需幾分鐘的時間就可以啓動預配置的 Docker 鏡像，快速對接各種數據開始體驗流批一站式實時數據處理和分析。歡迎大家查看代碼，運行樣例，提交反饋和貢獻社區。</p><h4>有關 Timeplus</h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Timeplus 是一個 「流式優先」 的實時數據平台。它提供強大的端到端功能，幫助團隊快速直觀地處理流式數據和歷史數據。該平台使數據工程師和平台工程師能夠通過使用 SQL 解鎖流式數據價值。Timeplus 的控制枱允許開發人員輕鬆連接到各種不同的數據源（如 Apache Kafka, Confluent Cloud, Redpanda, CSV 文件上傳），通過 SQL 查詢探索流式數據模式，向其他系統或個人發送實時洞察和警報，並創建儀錶板和可視化圖標。更多信息請訪問：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ftimeplus.com" target="_blank">timeplus.com</a><span>&nbsp;</span>或<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftimeplus-io%2Fproton" target="_blank">https://github.com/timeplus-io/proto</a>，同時也歡迎大家多多關注我們的微信公眾號：Timeplus 公司。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 11:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269485</guid>
            <link>https://www.oschina.net/news/269485</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[讓代碼運行起來，比代碼可讀性重要]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#101828; margin-left:0px; margin-right:0px; text-align:start">"代碼的閲讀勝於編寫"這句話現在已經是程序員共識，它提醒我們，在編寫代碼時不能僅追求方便，而忽視那些將來需要閲讀和修改代碼的人。更一般地説，"代碼的閲讀勝於編寫"傳達了一個觀點：通過保持代碼可維護性，保持簡潔、編寫測試和文檔等方式來使得代碼易於理解是一個明智的投資。它關乎對軟件開發週期的全局視角。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">讓我用更簡潔的表達方式來表述這個觀點：</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">維護者 &gt; 作者</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">我認為這種思路可以超越編寫代碼，並作為一個經驗法則用於問題識別和決策。</p><h3>代碼的使用勝於閲讀</h3><p style="color:#101828; margin-left:0px; margin-right:0px; text-align:start">代碼只是達到目標的手段。軟件應該有一個目的，它應該為用戶提供服務。無論代碼是否編寫良好、可維護性如何，以及所使用技術是否先進，如果軟件不能實現其目標並給用戶帶來良好體驗，則一切都沒有意義：</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">用戶 &gt; 維護者 &gt; 作者</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">或者，既然我們不再需要區分開發人員角色：</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">用戶 &gt; 開發者</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">因此，與其猜測或詢問用戶需求，最好的方法是儘早、頻繁地將程序放在用戶面前，並結合他們的反饋來改進。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">這是一個強大的思維模式，只要在開發過程中牢記用戶，我們就能走得更遠。這大致是我學習這個職業以及我職業生涯前半段對它的理解方式。</p><h3>代碼的運行勝於閲讀</h3><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">當我説"運行"時，我不僅指執行程序，還包括在生產環境中操作它，包括部署、升級、觀察、審計、監控、修復和廢棄等等。正如丹·麥金利所説：在保持系統可靠工作方面，長期成本幾乎總是遠遠超過你在構建過程中遇到的任何不便。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">我們可以將這個觀點納入我們的小模型中：</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">用戶 &gt; 運維 &gt; 開發</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">我花了一些時間才完全理解這一點，因為根據我的經驗，很多正在構建的軟件實際上從未真正投入生產使用，至少沒有達到重要規模。大多數軟件都是基於從未經過測試的假設構建而成。但當你將代碼運行在生產環境中時，簡潔性原則就有了新的維度。它不再僅僅關乎代碼本身，而是關乎減少移動部件並瞭解其故障模式。它關乎交付產品並確保即使在出現故障時也能正常工作。</p><h3>此外，還有商業因素</h3><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">我説過，在開發過程中牢記用戶可以幫助我們走得更遠。這適用於軟件對用戶有價值且良好運行的假設。對於開發人員來説，這是一個方便的抽象：我們提供優秀、可工作的軟件，而業務則負責將其轉化為利潤。這在消費者和企業軟件領域通常有效。但最終，這種抽象會被證明是一種過度簡化，並且我們可以從中受益，將一些商業觀點納入我們的工作流程：</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">商業 &gt; 用戶 &gt; 運維 &gt; 開發</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">最明顯的例子就是預算：我們沒有無限資源來滿足用戶需求，所以需要衡量成本和收益。還有市場營銷、截止日期、利益相關者和投資者等因素。個人興趣和政治也會產生影響。某些決策在孤立考慮我們的軟件、團隊或用戶時是合理的，但當考慮整個組織時可能不再合適。有時，我們需要關注能夠產生收入的事務，而不是隻迎合用戶。我將再次回到這個問題。</p><h3>反向思考</h3><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">我們得到了一個小模型，它表達了軟件開發中各種因素的相對重要性，或許可以幫助我們看到更大的圖景並專注於重要的事情。現在我想看一下一些常見的軟件開發功能障礙，並看看它們如何與該模型相匹配。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>難以維護的代碼</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">作者 &gt; 維護者</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">這是我們起點。這是聰明而懶惰的代碼變成了意大利麪條和鬼屋，這是過早優化，這是隻有卡洛斯才能碰觸那個模塊等等。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>不可用的軟件</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">開發者 &gt; 用戶</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">由那些不從用戶那裏學習或將技術放在第一位的團隊製作的軟件。過度工程化程序、惡化用戶體驗的"現代化"、破壞瀏覽器功能的 Web 應用等等。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>只在我的機器上運行</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">開發者 &gt; 運維</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">沒有考慮操作問題而設計出來的軟件。這是過於複雜、有很多移動部分、為小數據負載設計高級數據庫、由單個小團隊管理的微服務生態系統。這是過早為規模而架構的軟件。這是由與在它出現故障時被叫醒的人不同的人設計的軟件。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>正確的事情</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">開發者 &gt; 商業</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">將代碼視為目標本身。這是自命不凡的工匠們、泰坦尼克號上的音樂家和 Lisp 黑客製作的軟件。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>以簡歷為導向的開發</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">開發者 &gt; *</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">沒有風險，開發人員可以做他們想做的任何事情。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>虛構的軟件</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">商業 &gt; 用戶 &gt; <s>運維 &gt;</s><span style="color:#101828">&nbsp;開發</span></p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">這是已經構建但很少（或從未）投入生產使用的軟件。我稱之為虛構的軟件。Charity Majors 稱之為活在謊言中。</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">商業 &gt; <s>用戶 &gt;</s><span style="color:#101828">&nbsp;運維 &gt; 開發</span></p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">另一種虛構的軟件是那些沒有用戶但具有可擴展性（大規模）的軟件。這是無法解決問題或解決錯誤問題，可能沒有人關心問題。這種軟件源於採用一些炒作技術並將其應用於所有事物，直到出現模糊地符合某個用例需求。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><strong>晚期資本主義</strong></p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start"><s>商業 &gt;</s><span style="color:#101828">&nbsp;用戶 &gt; 運維 &gt; 開發</span></p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">風險投資支持下沒有商業模式或其商業模式是增長至壟斷然後剝削用戶的軟件。</p><h3>全局來看</h3><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">如果你還沒有關閉瀏覽器標籤，讓我總結一下：</p><blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">商業 &gt; 用戶</p></blockquote><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">這個觀點可能很難接受。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">正如我上面提到的，我學習這個工作時，軟件是為最終用戶解決問題的。這在《程序員修煉之道》的最後一個提示中得到了總結，該提示説我們的目標是讓用戶滿意，而不僅僅是交付代碼。但自從我開始從事程序員工作，並且隨着軟件變得無處不在，我發現這種假設越來越難以維持。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">有很多正在生產的軟件根本不關心其用戶，或者操縱用戶，或者將其變成產品。這不僅限於社交媒體：作為用戶，在沒有彈窗試圖吸引我的注意力之前，我甚至不能預訂房間、訂購食物或點擊 Windows 開始按鈕；在進行谷歌搜索時，我會得到一堆垃圾信息。</p><p style="color:#101828; margin-left:0; margin-right:0; text-align:start">我們認為做好工作意味着什麼與行業中相當大一部分人認為能夠獲利是相矛盾的，我認為這解釋了許多軟件專業人士日益感到不適的原因。雖然我們不能迴避對我們領域的經濟現實，但也許我們應該更加堅定地站在道德立場上，不傷害用戶。承認用戶並非始終排在商業之前，但商業也不應無條件地居於第一位：</p><blockquote><p style="color:#101828; margin-left:0px; margin-right:0px; text-align:start">用戶 &gt; 運維 &gt; 開發<br> 商業 &gt; 運維 &gt; 開發<br> 商業 ≹ 用戶</p></blockquote><p>原文鏈接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Folano.dev%2F2023-11-30-code-is-run-more-than-read%2F" target="_blank">https://olano.dev/2023-11-30-code-is-run-more-than-read</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 10:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269471</guid>
            <link>https://www.oschina.net/news/269471</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 8 極致性能優化 AOT]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h1_1"></span><h1><strong>前言</strong></h1><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">.NET8 對於性能的優化是方方面面的，所以 AOT 預編譯機器碼也是不例外的。本篇來看下對於 AOT 的優化。</p><span id="OSC_h1_2"></span><h1><span><strong><span style="color:#3c70c6">概述</span></strong></span></h1><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">首先要明確一個概念，.NET 裏面的 AOT 它是原生的。什麼意思呢？也就是説通過 ILC 編譯器 (AOT 編譯器，參考:<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5NDYwNjU4MA%3D%3D%26mid%3D2247484180%26idx%3D1%26sn%3D418cc4dc2d124a107f52c34739181e50%26chksm%3Dc01c4e8ff76bc79991e1b1086487f5a60d0068c358969c47945843ac88be74aa90de38ed9302%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span>.Net 7 新編譯器 ILC 簡析</span></strong></a>) 編譯出來的代碼是各個平台上可以直接運行的二進制代碼。比如 MacOS 的二進制，Linux 二進制等等。所以稱之為原生。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">C#源碼被 ILC 編譯之後，生成了一個完全原生態代碼的可執行文件。在執行的時候不需要 JIT 來編譯任何東西，因為 JIT 已經在 ILC 裏面被充分利用過了。實際上 AOT 裏面也沒有包含 JIT。那麼它如何優化呢？只能是在 ILC 裏面調用 JIT 的時候了。所以它這個優化依然依靠 JIT。<span>.NET8 裏面優化 AOT 的一個典</span><span>型的例子，就是 ASP.NET 應用程序在使用 AOT 的時候表現不錯，同時也降低了總成本。</span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">在.NET8 裏面優化 AOT 的一個重要的目標就是減少 AOT 可執行文件的大小，關於這點的效果。我們現在就可以看到</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">下面創建一個控制枱應用程序</p><pre><code><span>dotnet <span style="color:#ca7d37">new</span><span style="color:#ca7d37">console</span> -o nativeaotexample -f net7<span style="color:#0e9ce5">.0</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">由於上面是通過.NET7.0 創建的，我們把這個控制枱的 csproj 更改下</p><pre><code><span><span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">TargetFramework</span>&gt;</span>net7.0<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">TargetFramework</span>&gt;</span></span></code><code><span>改為</span></code><code><span><span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">TargetFrameworks</span>&gt;</span>net7.0;net8.0<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">TargetFrameworks</span>&gt;</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">可以輕鬆的構建.NET7.0 或者.NET8.0 的程序</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">繼續​​​​​​​</p><pre><code><span>把<span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">PropertyGroup</span>&gt;</span>...<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">PropertyGroup</span>&gt;</span>項中添加如下</span></code><code><span><span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">PublishAot</span>&gt;</span>true<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">PublishAot</span>&gt;</span>編譯成 AOT 文件</span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">下面我們就可以通過 dotnet publish 發佈它了，linux 如下：</p><pre><code><span><span style="color:#ca7d37">dotnet</span><span style="color:#ca7d37">publish</span><span style="color:#ca7d37">-f</span><span style="color:#ca7d37">net7</span><span>.0</span><span style="color:#ca7d37">-r</span><span style="color:#ca7d37">linux-x64</span><span style="color:#ca7d37">-c</span><span style="color:#ca7d37">Release</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">現在它生成了一個.NET7.0 版本的獨立可執行文件，可通過&nbsp;ls/dir 輸出目錄以查看生成的二進制大小</p><pre><code><span><span>12820K</span><span style="color:#dd1144">/home/stoub/nativeaotexample/bin/Release/net7.0/linux-x64/publish/nativeaotexample</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">這個大約是 13M 左右，我們再來看下.NET8.0</p><pre><code><span><span style="color:#ca7d37">dotnet</span><span style="color:#ca7d37">publish</span><span style="color:#ca7d37">-f</span><span style="color:#ca7d37">net8</span><span>.0</span><span style="color:#ca7d37">-r</span><span style="color:#ca7d37">linux-x64</span><span style="color:#ca7d37">-c</span><span style="color:#ca7d37">Release</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">生成的可執行文件大小如下:</p><pre><code><span><span>1536K&nbsp;/home/stoub/nativeaotexample/bin/Release/net8.0/linux-x64/publish/nativeaotexample</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff">1.5M 的大小，這個優化的力度不可不大啊。整整優化了將近 10</span>倍<span style="background-color:#ffffff">的體積。</span><span style="background-color:#ffffff">這就是.NET8.0 的優化魔力。</span></p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">但是優化的情況遠不止如此，比如説我們可以配置 csproj 使 AOT 的體積更小​​​​​​​</p><pre><code><span>csproj 添加如下 size 表示要生成的 AOT 大小</span></code><code><span><span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">OptimizationPreference</span>&gt;</span>Size<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">OptimizationPreference</span>&gt;</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff">如果我們不需要全球化代碼和數據，需要特</span>定<span style="background-color:#ffffff">的代碼和數據，並且使用不變模式，可以 csproj 添加如下選項</span></p><pre><code><span><span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">InvariantGlobalization</span>&gt;</span>true<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">InvariantGlobalization</span>&gt;</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">如果你不想在 AOT 異常的時候拋出堆棧，那麼你也可以在 csproj 裏面添加如下</p><pre><code><span><span style="color:#0e9ce5">&lt;<span style="color:#0e9ce5">StackTraceSupport</span>&gt;</span>false<span style="color:#0e9ce5">&lt;/<span style="color:#0e9ce5">StackTraceSupport</span>&gt;</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">重新通過 dotnet publish net8.0 發佈了之後，它的體積還可以繼續減小</p><pre><code><span><span>1248K</span><span style="color:#dd1144">/home/stoub/nativeaotexample/bin/Release/net8.0/linux-x64/publish/nativeaotexample</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">再次縮小了 0.3M 大小。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">然而，你以為到此優化就為止了嗎?並沒有，.NET8 不僅對 AOT 編譯器內部進行了改進，而且還對單個庫也進行了性能優化和改進。比如 HttpClient。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">當然除了體積的優化之外，還有其它的優化，比如避免了在讀取靜態字段時的輔助調用，再比如 BenchmarkDotNet 也是支持 AOT 化的，也就是性能測試上面的支持。我們可以只使用 --runtimes nativeaot7.0 nativeaot8.0，而不使用 --runtimes net7.0 net8.0，如下代碼​​​​​​​</p><pre><code><span><em>// dotnet run -c Release -f net7.0 --filter "*" --runtimes nativeaot7.0 nativeaot8.0</em></span></code><code><span><span style="color:#ca7d37">using</span> BenchmarkDotNet.Attributes;</span></code><code><span><span style="color:#ca7d37">using</span> BenchmarkDotNet.Running;</span></code><code><span>BenchmarkSwitcher.FromAssembly(<span style="color:#ca7d37">typeof</span>(Tests).Assembly).Run(args);</span></code><code><span>[<span style="color:#afafaf">HideColumns(<span>"Error"</span>, <span>"StdDev"</span>, <span>"Median"</span>, <span>"RatioSD"</span>)</span>]</span></code><code><span><span style="color:#ca7d37">public</span><span style="color:#ca7d37">class</span><span style="color:#dd1144">Tests</span></span></code><code><span>{</span></code><code><span><span style="color:#ca7d37">private</span><span style="color:#ca7d37">static</span><span style="color:#ca7d37">readonly</span><span style="color:#ca7d37">int</span> s_configValue = <span style="color:#0e9ce5">42</span>;</span></code><code><span>    [<span style="color:#afafaf">Benchmark</span>]</span></code><code><span><span><span style="color:#ca7d37">public</span><span style="color:#ca7d37">int</span><span style="color:#dd1144">GetConfigValue</span>()</span> =&gt; s_configValue;</span></code><code><span>}</span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">上面代碼可以通過如下 AOT 化運行</p><pre><code><span><span style="color:#ca7d37">dotnet</span><span style="color:#ca7d37">run</span><span style="color:#ca7d37">-c</span><span style="color:#ca7d37">Release</span><span style="color:#ca7d37">-f</span><span style="color:#ca7d37">net7</span><span>.0</span><span style="color:#ca7d37">--filter</span> "*" <span style="color:#ca7d37">--runtimes</span><span style="color:#ca7d37">nativeaot7</span><span>.0</span><span style="color:#ca7d37">nativeaot8</span><span>.0</span></span></code></pre><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">BenchmarkDotNet 輸出如下</p><table cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; box-sizing:border-box !important; color:rgba(0, 0, 0, 0.9); display:table; font-family:system-ui,-apple-system,BlinkMacSystemFont,&quot;Helvetica Neue&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei UI&quot;,&quot;Microsoft YaHei&quot;,Arial,sans-serif; font-size:17px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:0.544px; margin:0px 0px 10px; max-width:100%; orphans:2; outline:0px; overflow-wrap:break-word !important; padding:0px; text-align:justify; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:676.989px; word-spacing:0px"><tbody><tr><th>Method</th><th>Runtime</th><th>Mean</th><th>Ratio</th></tr></tbody><tbody><tr><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">GetConfigValue</td><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">NativeAOT 7.0</td><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">1.1759 ns</td><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">1.000</td></tr><tr><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">GetConfigValue</td><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">NativeAOT 8.0</td><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">0.0000 ns</td><td style="border-collapse:collapse; border-color:#c0c0c0; border-style:solid; border-width:1px">0.000</td></tr></tbody></table><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">可以看到即使是性能測試的 Benchmark，AOT 優化也是不放過的。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">另外還值得一提的地方就是分層，因為 AOT 裏面沒有分層的概念。但是即時編譯也就是不是 AOT 編譯的時候，一個方法從 tier0 提升到 tier1,方法裏面的靜態字段必須被初始化過了。AOT 裏面添加了一個快速路徑檢查字段是否初始化，避免一些不必要的開銷。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">其它的一些改進，比如 AOT 鎖的實現方式。使用了一種混合方式，開始使用輕量級自旋鎖，後面升級到使用 System.Threading.Lock 類型，這個應該會在.NET9.0 裏面釋放出來。</p><p style="color:#4a4a4a; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#4a4a4a; margin-left:0px; margin-right:0px"><strong>歡迎關注公眾號 (jianghupt），文章首發地。</strong></p><p><span><img alt="" height="430" src="https://oscimg.oschina.net/oscnet/up-3243ba74c89867eabc4277de83aa83aa7bb.png" width="430" referrerpolicy="no-referrer"></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 09:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5407571/blog/10316035</guid>
            <link>https://my.oschina.net/u/5407571/blog/10316035</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌推遲「最強 AI」Gemini 的發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">The Information 援引知情人士<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theinformation.com%2Farticles%2Fgoogle-postpones-big-ai-launch-as-openai-zooms-ahead" target="_blank">消息稱</a>，谷歌已悄悄地將旨在與 OpenAI 競爭的對話式人工智能 Gemini 的公開亮相推遲到 2024 年 1 月。</span></p><p><span style="color:#000000">谷歌在 2023 年 I/O 大會上首次透露正在開發 Gemini 以作為下一代基礎模型，據稱這是該公司迄今為止創建的最強大的對話式 AI。Gemini 被描述為一個可以處理多種數據的多模態 AI 聊天機器人，能夠根據草圖和書面描述的結合來理解和生成文本、圖像和其他類型的內容。還可以根據用戶的要求總結文本、幫助軟件工程師編寫代碼等。</span></p><p><span style="color:#000000">該公司表示，新模型將展現出「令人印象深刻的多模態能力」，這是之前的任何大模型中都從未出現過的。此外，他們還在開發 API，使得開發人員可以直接將 Gemini 集成到第三方應用程序中。</span></p><p><span style="color:#000000"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-ce616c5439bca81a98416dd64866cdde1d9.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">谷歌原定於本週在美國紐約、華盛頓和加州舉行的發佈會上推出 Gemini，但在他們「發現 AI 無法可靠地處理一些非英語查詢」後。首席執行官 Sundar Pichai 決定取消原定的一系列活動，並推遲 Gemini 的發佈。谷歌希望 Gemini 最終能超越 OpenAI 的 GPT-4 模型，而全球化支持是 Gemini 的主要功能之一。</span></p><p><span style="color:#000000">研究機構 SemiAnalysis 在 8 月份的一篇博文中<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsiliconangle.com%2F2023%2F12%2F03%2Fgoogle-reportedly-postpones-launch-next-gen-chatbot-gemini-early-next-year%2F" target="_blank">表示</a>，Gemini 擁有強大的計算能力，它看起來已經準備好 "將 OpenAI 的模型打得落花流水"。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 08:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269444/google-delays-launch-gemini</guid>
            <link>https://www.oschina.net/news/269444/google-delays-launch-gemini</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[美團 CEO 王興發佈內部信：多項技術崗負責人調動]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>美團 CEO 王興近日發佈內部信，公佈了多項技術崗負責人的調動。</p><p>內部信顯示，由穆榮均、張錦懋牽頭籌備技術委員會下成立技術治理籌備小組。錦懋卸任基礎研發平台負責人，繼續任技術委員會主席並負責技術委員會現有工作；原美團平台技術部負責人韓建換崗擔任基礎研發平台負責人，彙報至王興。原快驢事業部產品和運營及技術負責人司天歌換崗擔任美團平台技術部負責人，彙報至美團平台負責人李樹斌。</p><hr><p>以下為全文：</p><p>為更好的實現「幫大家吃得更好，生活更好」的使命，落實「零售+科技」戰略，一方面需要進一步提升科技支撐零售各業務的效能，助力各團隊和合作夥伴卓越運營，提升客戶體驗；另一方面需要進一步加強自動車、無人機、AI 特別是大模型技術等領域的研發投入，在公司豐富的零售業務場景中積極探索新應用、新體驗。經公司研究決定：</p><p>1、在技術委員會下成立技術治理籌備小組，由榮均、錦懋牽頭籌備。錦懋卸任基礎研發平台負責人，繼續任技術委員會主席並負責技術委員會現有工作，彙報至王興。技術治理籌備小組的目標是經過一段時間的籌備，明確後續公司技術治理的範圍、目標、原則、組織保障和運作機制等，在公司堅定的決心、長期的耐心支持下，以循序漸進的節奏、穩紮穩打的方式，機制性的長期推進公司技術治理工作。</p><p>2、原美團平台技術部負責人韓建換崗擔任基礎研發平台負責人，彙報至王興。</p><p>3、原快驢事業部產品和運營及技術負責人司天歌換崗擔任美團平台技術部負責人，彙報至美團平台負責人李樹斌。</p><p>過去幾年，公司持續建設領導梯隊，提升組織能力，鼓勵、支持廣大同學在前線和後線、區域和總部之間，不同職能、不同業務之間換崗，實現「Z 字型」發展，同時也在不同的角度為公司發展創造價值。期待錦懋、韓建、天歌在新的崗位上為公司長期發展貢獻更大力量！</p><p>個人介紹：</p><p>張錦懋，2014 年 7 月加入公司，在公司多次換崗鍛鍊發展，歷任技術工程部、美團平台及酒旅事業羣/技術研發部、用戶平台/算法與數據研發部、用戶平台/大數據與算法部、基礎研發平台負責人。錦懋擔任多年技術委員會主席，具備優秀的技術判斷、架構能力，對公司技術棧有全面深入的理解，在深潛、敢想、學習並好奇方面表現出色，相信未來能站在公司更高的層面貢獻更大價值，幫助公司在技術治理工作上往前邁進。</p><p>韓建，2015 年 10 月加入公司，在公司多次換崗鍛鍊發展，歷任外賣事業部/技術部、外賣事業部、到家研發平台、美團平台技術部負責人。韓建兼具業務和平台技術團隊管理經驗，技術視野廣闊，具備主人翁精神，在力求正確、招聘並發展最佳人才方面有優秀的展現，相信在新崗位上能夠更好支撐全公司的公共技術平台和服務。</p><p>司天歌，2016 年 12 月加入公司，在公司多次換崗鍛鍊發展，歷任美團 App 技術部負責人、快驢技術部負責人、快驢產品與運營部負責人。天歌兼具平台和業務技術視角，具備主人翁精神，學習並好奇，極度關注客戶並深潛，相信能在新崗位上更好的建設美團 App 技術基建，支撐各業務發展。</p><p>以上組織調整與任命自本公告發布之日起生效。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 04 Dec 2023 07:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/269428</guid>
            <link>https://www.oschina.net/news/269428</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
