<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[開源中國-最新資訊]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[開源中國-最新資訊 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 26 Feb 2024 09:46:13 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[基於 Qt5 的 Windows 截圖工具，可代替微信和搜狗截圖]]>
            </title>
            <description>
                <![CDATA[<p><img src="https://gitee.com/tujiaw/ntscreenshot/raw/master/ntscreenshot_demo.png" alt="ntscreenshot" referrerpolicy="no-referrer"><img src="https://gitee.com/tujiaw/ntscreenshot/raw/master/ntscreenshot_demo2.png" alt="ntscreenshot" referrerpolicy="no-referrer"></p><p><a href="https://gitee.com/tujiaw/ntscreenshot/tree/master/release">已編譯好的綠色包下載</a></p><h1><a id="user-content-ntscreenshot" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#ntscreenshot"></a>ntscreenshot</h1><p>Windows 截圖工具，基本功能都實現了，陸陸續續也花了不少時間，<a href="https://gitee.com/tujiaw/ntscreenshot">源碼地址</a>有興趣的 Star 一下吧。</p><h1><a id="user-content-功能列表" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#%E5%8A%9F%E8%83%BD%E5%88%97%E8%A1%A8"></a>功能列表</h1><h2><a id="user-content-基本的截圖功能" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#%E5%9F%BA%E6%9C%AC%E7%9A%84%E6%88%AA%E5%9B%BE%E5%8A%9F%E8%83%BD"></a>基本的截圖功能</h2><ul><li>託盤菜單</li><li>全局快捷鍵設置，默認 F5 截圖，F6 貼圖</li><li>開機自啓動設置</li><li>移動鼠標自動感知選區</li><li>放大器，放大當前鼠標所在像素點周圍區域</li><li>顯示選區大小，鼠標光標座標，光標所在位置像素的顏色</li><li>c 鍵複製當前顏色</li><li>移動鼠標選擇選區</li><li>方向鍵進行像素級移動</li><li>截圖背景透明度設置</li><li>保存截圖到剪切板</li><li>保存截圖到文件目錄</li></ul><h2><a id="user-content-貼圖" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#%E8%B4%B4%E5%9B%BE"></a>貼圖</h2><ul><li>貼圖管理</li><li>貼圖邊框</li></ul><h2><a id="user-content-標註" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#%E6%A0%87%E6%B3%A8"></a>標註</h2><ul><li>基本圖形文字標註</li><li>支持改顏色，畫筆、字體大小</li><li>支持馬賽克</li><li>支持撤銷</li></ul><h2><a id="user-content-上傳圖牀" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#%E4%B8%8A%E4%BC%A0%E5%9B%BE%E5%BA%8A"></a>上傳圖牀</h2><p>需要配置服務器</p><h2><a id="user-content-設置" class="anchor" href="https://gitee.com/tujiaw/ntscreenshot#%E8%AE%BE%E7%BD%AE"></a>設置</h2><p>託盤右鍵菜單打開設置窗口</p>]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 09:45:10 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/tujiaw/ntscreenshot</guid>
            <link>https://gitee.com/tujiaw/ntscreenshot</link>
        </item>
        <item>
            <title>
                <![CDATA[GitHub Copilot 會擴大代碼的不安全性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>開發者安全公司 Snyk 發文<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsnyk.io%2Fblog%2Fcopilot-amplifies-insecure-codebases-by-replicating-vulnerabilities%2F" target="_blank">指出</a>，GitHub Copilot 可以複製代碼中現有的安全問題。即當用戶現有的代碼庫存在安全問題時，GitHub Copilot 可能會基於此提供一些不安全的代碼建議；「這意味着，項目中現有的安全債務會讓使用 Copilot 的不安全開發變得更不安全。」</p><p>另一方面，如果代碼庫已經高度安全，則 Copilot 生成存在安全問題的代碼的可能性就會較小，因為它可以利用的不安全代碼上下文較少。這也極大地激勵了人們投入時間來減少現有代碼庫中的漏洞，從而減少未來通過生成式 AI 編碼助手引入的問題。</p><p>Snyk 表示， GitHub Copilot、Amazon CodeWhisperer 和 ChatGPT 等生成式 AI 編碼助手在生產力和代碼效率方面實現了重大飛躍。但這些工具不理解代碼語義，因此無法對其進行判斷。</p><p>GitHub Copilot 根據從大量現有代碼存儲庫中學到的模式和結構生成代碼片段。雖然這種方法有優點，但在安全方面也存在明顯的缺點。Copilot 的代碼建議可能會無意中複製鄰接文件中存在的現有安全漏洞和不良做法，導致不安全的編碼實踐，併為一系列安全漏洞打開大門。</p><p><img height="287" src="https://oscimg.oschina.net/oscnet/up-af08dd68db7fed4ac1bc73918bf7af185e2.png" width="500" referrerpolicy="no-referrer"></p><p>為了減少 AI 助手生成的代碼中重複出現現有的安全問題，Snyk 建議採取以下措施：</p><ul><li>開發人員應該對代碼進行手動審查。</li><li>安全團隊應該建立 SAST（security application security testing）護欄，包括策略。</li><li>開發人員應遵守安全編碼指南。</li><li>安全團隊應該為開發團隊提供培訓和意識，並對每個團隊積壓的問題進行優先級和分類。</li><li>執行團隊應強制要求設置安全護欄。</li></ul><p>更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsnyk.io%2Fblog%2Fcopilot-amplifies-insecure-codebases-by-replicating-vulnerabilities%2F" target="_blank">查看官方博客</a>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 08:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280334/github-copilot-amplifies-insecure-codebases</guid>
            <link>https://www.oschina.net/news/280334/github-copilot-amplifies-insecure-codebases</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🔥 周熱點 | Warp 正式發佈 Linux 版本；披着 Windows 11 外衣的 Ubuntu：能跑 exe 程序、支持 Android 應用.....]]>
            </title>
            <description>
                <![CDATA[回顧一週熱門資訊。2024.02.19-2024.02.25]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 07:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649094405&#38;idx=1&#38;sn=76fa95b2d568a613ee5903f8d3976d4a&#38;chksm=880c4216bf7bcb00d586ffe8ded38f9c3b4426ec5ddfc0f8617a965327c402a814e03533dd08&#38;token=1383836775&#38;lang=zh_CN#rd</guid>
            <link>https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649094405&#38;idx=1&#38;sn=76fa95b2d568a613ee5903f8d3976d4a&#38;chksm=880c4216bf7bcb00d586ffe8ded38f9c3b4426ec5ddfc0f8617a965327c402a814e03533dd08&#38;token=1383836775&#38;lang=zh_CN#rd</link>
        </item>
        <item>
            <title>
                <![CDATA[1024 分辨率下最快模型，字節跳動文生圖開放模型 SDXL-Lightning 發佈]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img src="https://oscimg.oschina.net/oscnet/up-73d9ffe00a0d63e36ff98fa923e79b6bf92.png" alt="" referrerpolicy="no-referrer"></p><blockquote><p>文章來源｜字節跳動智能創作團隊</p></blockquote><p>很高興跟大家分享我們最新的文生圖模型 —— SDXL-Lightning，它實現了前所未有的速度和質量，並且已經向社區開放。</p><p>模型：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FByteDance%2FSDXL-Lightning" target="_blank">https://huggingface.co/ByteDance/SDXL-Lightning</a></p><p>論文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2402.13929" target="_blank">https://arxiv.org/abs/2402.13929</a></p><p><img src="https://oscimg.oschina.net/oscnet/up-dbb8391e5301fe0818c07c5007701e0819d.png" alt="" referrerpolicy="no-referrer"></p><h2>閃電般的圖像生成</h2><p>生成式 AI 正憑藉其根據文本提示（text prompts）創造出驚豔圖像乃至視頻的能力，贏得全球的矚目。然而，當前最先進的生成模型依賴於擴散過程（diffusion），這是一個將噪聲逐步轉化為圖像樣本的迭代過程。這個過程需要耗費巨大的計算資源並且速度較慢，在生成高質量圖像樣本的過程中，單張圖像的處理時間約為 5 秒，其中通常需要多次（20 到 40 次）調用龐大的神經網絡。這樣的速度限制了有快速、實時生成需求的應用場景。如何在提升生成質量的同時加快速度，是當前研究的熱點領域，也是我們工作的核心目標。</p><p>SDXL-Lightning 通過一種創新技術——<strong>漸進式對抗蒸餾（Progressive Adversarial Distillation）</strong>——突破了這一障礙，實現了前所未有的生成速度。該模型能夠在短短 2 步或 4 步內生成極高質量和分辨率的圖像，將計算成本和時間降低十倍。我們的方法甚至可以在 1 步內為超時敏感的應用生成圖像，雖然可能會稍微犧牲一些質量。</p><p>除了速度優勢，SDXL-Lightning 在圖像質量上也有顯著表現，並在評估中超越了以往的加速技術。在實現更高分辨率和更佳細節的同時保持良好的多樣性和圖文匹配度。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6b51a9297b11683e92da115b696de953036.gif" alt="" referrerpolicy="no-referrer"> 速度對比示意</p><p>原始模型（20 步），我們的模型（2 步）</p><h2>模型效果</h2><p>我們的模型可以通過 1 步、2 步、4 步和 8 步來生成圖像。推理步驟越多，圖像質量越好。</p><p>以下是我們的 4 步生成結果： <img src="https://oscimg.oschina.net/oscnet/up-015feba9e22188c5c0903fb75dce3e8b13f.png" alt="" referrerpolicy="no-referrer"></p><p>以下是我們的 2 步生成結果： <img src="https://oscimg.oschina.net/oscnet/up-4943949b28735497159ae73bd6222f0c97a.png" alt="" referrerpolicy="no-referrer"></p><p>與以前的方法（Turbo 和 LCM）相比，我們的方法生成的圖像在細節上有顯著改進，並且更忠實於原始生成模型的風格和佈局。</p><p><img src="https://oscimg.oschina.net/oscnet/up-99a60575458ab118c0706dcfb0fcd00f199.png" alt="" referrerpolicy="no-referrer"></p><h2>回饋社區，開放模型</h2><p>開源開放的浪潮已經成為推動人工智能迅猛發展的關鍵力量，字節跳動也自豪地成為這股浪潮的一部分。我們的模型基於目前最流行的文字生成圖像開放模型 SDXL，該模型已經擁有一個繁榮的生態系統。現在，我們決定將 SDXL-Lightning 開放給全球的開發者、研究人員和創意從業者，以便他們能訪問並運用這一模型，進一步推動整個行業的創新和協作。</p><p>在設計 SDXL-Lightning 時，我們就考慮到與開放模型社區的兼容。社區中已有眾多藝術家和開發者創建了各種各樣的風格化圖像生成模型，例如卡通和動漫風格等。為了支持這些模型，我們提供 SDXL-Lightning 作為一個增速插件，它可以無縫地整合到這些多樣風格的 SDXL 模型中，為各種不同模型加快圖像生成的速度。</p><p><img src="https://oscimg.oschina.net/oscnet/up-9b1d4811ae28daa9f18b7dc72848ab191b5.png" alt="" referrerpolicy="no-referrer"> 我們的模型也可以和目前非常流行的控制插件 ControlNet 相結合，實現極速可控的圖片生成。</p><p><img src="https://oscimg.oschina.net/oscnet/up-9215316be3b78c2af2c84a7df0cc9760b1f.png" alt="" referrerpolicy="no-referrer"> 我們的模型也支持開源社區裏目前最流行的生成軟件 ComfyUI，模型可以被直接加載來使用： <img src="https://oscimg.oschina.net/oscnet/up-db434e5743cd4966699ba28133c7606abfe.png" alt="" referrerpolicy="no-referrer"></p><h2>關於技術細節</h2><p>從理論上來説，圖像生成是一個由噪聲到清晰圖像的逐步轉化過程。在這一過程中，神經網絡學習在這個轉化流（flow）中各個位置上的梯度。</p><p>生成圖像的具體步驟是這樣的：首先，我們在流的起點，隨機採樣一個噪聲樣本，接着用神經網絡計算出梯度。根據當前位置上的梯度，我們對樣本進行微小的調整，然後不斷重複這一過程。每一次迭代，樣本都會更接近最終的圖像分佈，直至獲得一張清晰的圖像。</p><p><img src="https://oscimg.oschina.net/oscnet/up-586c0cfa75fa7c3308fa9421e66f6bb352d.png" alt="" referrerpolicy="no-referrer"><em>圖：生成流程</em><em>（</em><em>圖片來自</em><em>：</em><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2011.13456" target="_blank">https://arxiv.org/abs/2011.13456</a></em><em>）</em></p><p>由於生成流複雜且非直線，生成過程必須一次只走一小步以減少梯度誤差累積，所以需要神經網絡的頻繁計算，這就是計算量大的原因。</p><p><img src="https://oscimg.oschina.net/oscnet/up-13ed5521422c15757fe99d8e1c85130cdc0.png" alt="" referrerpolicy="no-referrer"><em>圖：曲線流程</em><em>（</em><em>圖片來自</em><em>：</em><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2210.05475" target="_blank">https://arxiv.org/abs/2210.05475</a></em><em>）</em></p><p>為了減少生成圖像所需的步驟數量，許多研究致力於尋找解決方案。一些研究提出了能減少誤差的採樣方法，而其他研究則試圖使生成流更加直線化。儘管這些方法有所進展，但它們仍然需要超過 10 個推理步驟來生成圖像。</p><p>另一種方法是模型蒸餾，它能夠在少於 10 個推理步驟的情況下生成高質量圖像。不同於計算當前流位置下的梯度，模型蒸餾改變模型預測的目標，直接讓其預測下一個更遠的流位置。具體來説，我們訓練一個學生網絡直接預測老師網絡完成了多步推理的後的結果。這樣的策略可以大幅減少所需的推理步驟數量。通過反覆應用這個過程，我們可以進一步降低推理步驟的數量。這種方法被先前的研究稱之為漸進式蒸餾。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6d96b685339c4b2a6d8f5b95cf6be348912.png" alt="" referrerpolicy="no-referrer"><em>圖：漸進式蒸餾</em><em>，學生網絡預測老師網絡多步後的結果</em></p><p>在實際操作中，學生網絡往往難以精確預測未來的流位置。誤差隨着每一步的累積而放大，導致在少於 8 步推理的情況下，模型產生的圖像開始變得模糊不清。</p><p>為瞭解決這個問題，我們的策略是不強求學生網絡精確匹配教師網絡的預測，而是讓學生網絡在概率分佈上與教師網絡保持一致。換言之，學生網絡被訓練來預測一個概率上可能的位置，即使這個位置並不完全準確，我們也不會對它進行懲罰。這個目標是通過對抗訓練來實現的，引入了一個額外的判別網絡來幫助實現學生網絡和教師網絡輸出的分佈匹配。</p><p>這是我們研究方法的簡要概述。在我們的技術論文（<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2402.13929" target="_blank">https://arxiv.org/abs/2402.13929</a>）中，我們提供了更深入的理論分析、訓練策略以及模型的具體公式化細節。</p><h2>SDXL-Lightning 之外</h2><p>儘管本研究主要探討瞭如何利用 SDXL-Lightning 技術進行圖像生成，但我們所提出的漸進式對抗蒸餾方法的應用潛力不侷限於靜態圖像的範疇。這一創新技術也可以被運用於快速且高質量生成視頻、音頻以及其他多模態內容。我們誠摯邀請您在 HuggingFace 平台上體驗 SDXL-Lightning，並期待您寶貴的意見和反饋。</p><p>模型：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2FByteDance%2FSDXL-Lightning" target="_blank">https://huggingface.co/ByteDance/SDXL-Lightning</a></p><p>論文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2402.13929" target="_blank">https://arxiv.org/abs/2402.13929</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 07:36:47 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6210722/blog/11044777</guid>
            <link>https://my.oschina.net/u/6210722/blog/11044777</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[國內首部文生視頻 AI 動畫片將在央視開播]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">由中央廣播電視總枱製作的中國首部文生視頻 AI 動畫片《千秋詩頌》，將於 2 月 26 日起在總枱央視綜合頻道（CCTV-1）18:40 檔開播，首次推出六集。</span></p><p><img height="398" src="https://oscimg.oschina.net/oscnet/up-202804fca1b5f2955175a418d3c4a78ad2f.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">《千秋詩頌》是國內首部以我國自主 AIGC 技術支撐製作的系列動畫片，</span><span style="color:#000000">依託中央廣播電視總枱「央視聽媒體大模型」，運用 AI 技術聚焦統編語文教材 200 多首詩詞，轉化為唯美的國風動畫片。</span></p><div style="text-align:start"><span style="color:#000000">節目綜合運用可控圖像生成、人物動態生成、文生視頻等最新技術成果，支持了從美術設計到動效生成，再到後期成片的各個環節，實現了「有聲言詩和無聲畫意」的有機融合。</span></div><div style="text-align:start">
 &nbsp;
</div><p><span style="color:#000000">根據介紹，在同等預算條件下，按照傳統動畫製作流程計算，《千秋詩頌》至少需要 8 個月時間，依託大模型後，製作週期縮短至 4 個月。目前，這項應用仍處於產研結合階段，未來大模型研發成熟後，製作週期和動畫精細度都會加速迭代升級。</span></p><p><span style="color:#000000">節目的技術總指導、上海人工智能實驗室領軍科學家林達華介紹稱，《千秋詩頌》通過科學家和藝術家的跨界合作，不斷突破技術與藝術之間的界限，為 AI 技術和媒體創作深度融合的探索邁出了重要一步。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 07:29:09 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280320</guid>
            <link>https://www.oschina.net/news/280320</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[開源日報 | 為什麼擋不住英偉達；Sora 不靠蠻力]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>歡迎閲讀 OSCHINA 編輯部出品的開源日報，每天更新一期。</p><h3><span style="color:#e67e22"><strong># 2024.2.23</strong></span></h3><h2><strong><span style="color:#16a085">今日要點</span></strong></h2><p><strong>OpenSource Daily</strong></p><h3><a href="https://www.oschina.net/news/279907/echarts-5-5-0" target="_blank">Apache ECharts 5.5.0 引入 1KB 的客戶端輕量運行時</a></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong style="color:#333333">在 5.5.0 版本中，我們新增了客戶端輕量運行時</strong><span style="background-color:#ffffff; color:#333333">，客戶端無需加載完整 ECharts 即可實現部分交互。這樣，我們可以在服務端渲染圖表，然後在客戶端加載輕量運行時，實現一些常見的交互。這意味着，</span><strong style="color:#333333">只需要加載&nbsp;4KB 的輕量運行時（gzip 後 1KB），即可實現帶初始動畫和部分常用交互形式的圖表</strong><span style="background-color:#ffffff; color:#333333">。這一改進將極大地提升頁面加載速度，特別是對於移動端的體驗。</span></p><h3><a href="https://www.oschina.net/news/279954/java-virtual-threads-pinning-issue" target="_blank">Oracle 致力解決 Java 虛擬線程 「Pinning」 問題</a></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">虛擬線程在 2023 年 9 月發佈的 JDK 21 中正式成為一項穩定功能。該功能在 Java 生態系統中反響極佳，但仍存在一些痛點。Oracle 日前在&nbsp;Inside Java 網站上詳細<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finside.java%2F2024%2F02%2F21%2Fquality-heads-up%2F" target="_blank">介紹</a>了虛擬線程的 「Pinning」 問題。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">最常見的兩種情況是：(a) 虛擬線程在 synchronized method 中駐留（如執行 socket I/O）；(b)<span>&nbsp;</span><span style="color:#333333">虛擬線程阻塞進入&nbsp;synchronized method</span>，因為對象的相關監視器被另一個線程持有。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6a2e93ce6802a570c1704258c9a589e998e.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span style="color:#16a085">今日觀察</span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-b2647b78f90f168fbe94870901603370b9e.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">- 微博<span>&nbsp;</span></span><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1464484735%2FO1OCA77rn" target="_blank">zibuyu9</a></em></u></p><hr><h2><span style="color:#16a085"><strong>今日推薦</strong></span></h2><p><img src="https://oscimg.oschina.net/oscnet/up-154377718c801865b6bdcbff50e301efb9c.png" referrerpolicy="no-referrer"></p><hr><h2><span style="color:#16a085"><strong>開源之聲</strong></span></h2><p><img height="592" src="https://oscimg.oschina.net/oscnet/up-4ce7cc4480c1bf19d2608d9b28aaefcc0ff.png" width="1650" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-199b252f58314913ee2d31f583785b25af9.png" referrerpolicy="no-referrer"></p><hr><h2><span style="color:#16a085"><strong>每日項目榜</strong></span></h2><p><strong><span style="background-color:#e67e22">每日 Gitee 精選</span></strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-268a8c2b0c4687d66bb89c8efe12b66fed9.png" referrerpolicy="no-referrer"></p><blockquote><h4><strong><span style="background-color:#e67e22">在線閲讀完整日報內容，訪問：</span></strong><br><u><em><strong><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/92n4c9ryegpcq1z/015_sora_KcAkRNX93Y.pdf">開源日報第 015 期：為什麼擋不住英偉達；Sora 不靠蠻力</a></strong></em></u></h4></blockquote><hr><p><strong>往期回顧</strong></p><ul><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC013%E6%9C%9F%EF%BC%9A%E7%AD%89%E5%88%B0%20Sora%20%E5%BC%80%E6%BA%90%E4%BA%86%E7%AB%8B%E5%88%BB%E6%8E%A8%E5%87%BA%E5%B1%9E%E4%BA%8E%E6%88%91%E4%BB%AC%E8%87%AA%E5%B7%B1%E7%9A%84%E5%A4%A7%E6%A8%A1%E5%9E%8B.pdf">開源日報第 013 期：等到 Sora 開源了立刻推出屬於我們自己的大模型</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC012%E6%9C%9F%EF%BC%9ASora%20%E7%BB%99%E4%B8%AD%E5%9B%BD%20AI%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9C%9F%E5%AE%9E%E5%8F%98%E5%8C%96%EF%BC%9BDart%203.3%20%E5%8F%91%E5%B8%83.pdf">開源日報第 012 期：Sora 給中國 AI 帶來的真實變化；Dart 3.3 發佈</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC11%E6%9C%9F%EF%BC%9A%E7%9B%AE%E5%89%8D%E8%BF%98%E6%B2%A1%E6%9C%89%E2%80%9C%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%89%88Linux%E2%80%9D.pdf">開源日報第 011 期：目前還沒有「大模型版 Linux」</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC010%E6%9C%9F%EF%BC%9ATauri%20v2%20%E6%94%AF%E6%8C%81%20Android%20%E5%92%8C%20iOS%EF%BC%8C%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%96%B0%E9%80%89%E6%8B%A9.pdf">開源日報第 010 期：Tauri v2 支持 Android 和 iOS，跨平台開發新選擇</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5009%E6%9C%9F%EF%BC%9AVue.js%E8%AF%9E%E7%94%9F10%E5%91%A8%E5%B9%B4%EF%BC%9B%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC%E8%A7%A3%E9%87%8AMeta%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E6%BA%90%E5%85%B6AI%E6%8A%80%E6%9C%AF.pdf">開源日報第 009 期：Vue.js 誕生 10 週年；扎克伯格解釋 Meta 為什麼要開源其 AI 技術</a></li><li><a href="https://www.oschina.net/news/277585">開源日報第 008 期：推動中國開源軟硬件發展的經驗與建議</a></li><li><a href="https://www.oschina.net/news/277415">開源日報第 007 期：「Linux 中國」 開源社區宣佈停止運營</a></li><li><a href="https://www.oschina.net/news/277214">開源日報第 006 期：選擇技術棧一定要選擇開源的</a></li><li><a href="http://www.oschina.net/news/277040">開源日報第 005 期：RISC-V 萬兆開源交換機發售；npm 存在大量武林外傳視頻</a></li><li><a href="https://www.oschina.net/news/276864">開源日報第 004 期：百度輸入法在候選詞區域植入廣告；大神用 Excel 構建 CPU</a></li></ul><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 04:06:19 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280290</guid>
            <link>https://www.oschina.net/news/280290</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[JetBrains 在其所有 IDE 中推出新終端測試版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">JetBrains 宣佈在其 IDE 中集成了新終端（Beta），並將從 2024.1 版本開始在 UI 中提供。用戶可以 Settings/Preferences | Tools | Terminal | Enable New Terminal 中切換舊版和新版終端。目前，它僅支持 Bash、Zsh 和 PowerShell，其他 shell 仍在開發中。</span></p><p><span style="color:#000000"><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-e70691932299e4ec5737278cff2d512db84.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">新終端保留了舊終端的主要功能，並添加可提高生產力和效率的新功能。「新終端旨在結合基本功能和高級功能，是一種熟悉的工具，以全新的方式呈現，並具有一組擴展的功能。我們的目標是保留終端工作的功能，增強便利性和簡單性，並解決長期存在的問題。」</span></p><h4><strong><span style="color:#000000">視覺變化</span></strong></h4><p><span style="color:#000000">從視覺上看，新終端與新 UI 的外觀和風格保持一致，並且可在從 2024.1 版本開始的所有 JetBrains IDE 中使用。新終端的主要視覺區別在於每個命令都以單獨的塊呈現，以幫助用戶快速定位每個命令的開始和結束，增強輸出的可讀性。此更改還帶來了其他新功能：例如使用箭頭輕鬆在塊間導航，以及使用戶能夠輕鬆在提示和輸出之間切換的⌘↑ / ⌘↓（macOS）和 Ctrl+↑ / Ctrl+↓（Windows 和 Linux）快捷鍵。</span></p><p><img height="201" src="https://oscimg.oschina.net/oscnet/up-39347304fe50e1769512e9e718eea543d82.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">另一個重大變化是 command completio 功能，支持命令、路徑、參數和選項，旨在簡化命令輸入。</span></p><p><img height="206" src="https://oscimg.oschina.net/oscnet/up-94190c719098f89c43bacfda6e1af905baf.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">以及新增了便捷的命令歷史記錄，可以進行篩選，更容易瀏覽最近執行的命令。改進了配色方案，使得調色板現在既美觀又易於閲讀。</span></p><p><img height="204" src="https://oscimg.oschina.net/oscnet/up-8464c12985cb2039b524c53c86e47d95883.png" width="500" referrerpolicy="no-referrer"></p><h4><strong><span style="color:#000000">架構變化</span></strong></h4><p><span style="color:#000000">一些顯著變更包括：</span></p><p><span style="color:#000000">完全控制了終端的提示區域。用戶現在可以在命令輸入期間使用編輯器動作並使用鼠標移動光標。在這個階段，可能會存在一些問題，比如 shell 快捷鍵無法工作，行為不符合預期等，團隊正在努力解決這些問題。</span></p><p><span style="color:#000000">重新設計了 command completion 功能，將 IDE 的所有知識整合到建議中。由於相關更新仍在進行中，可能會導致一些補全選項不可用，或者與 shell-based completion 不同。</span></p><p><span style="color:#000000">添加了我們自己的命令提示符，顯示當前目錄、Git 分支、Python 虛擬環境和 Anaconda 環境。此舉旨在提供豐富的現代命令提示符，即使在 shell 中未配置也是如此。鑑於有些人更喜歡使用與系統終端中相同的提示符，項目團隊還在研究支持這種情況的自定義選項。</span></p><h4><strong><span style="color:#000000">下一步</span></strong></h4><p><span style="color:#000000">JetBrains 計劃為新終端提供許多其他功能，比如更多的可視化自定義選項、在內置和 Shell 提示符之間切換的能力、區塊的上下文操作、更好的選項卡管理和 AI 新功能。</span></p><p><span style="color:#000000">包括引入更多終端自定義選項（字體、間距等）、改進 command completion 功能、添加在內置提示符和 shell 提示符之間切換的功能、引入塊的上下文操作以及簡化終端中的選項卡管理。以及計劃實施有用的 AI 功能，例如協助輸入命令或解釋所獲得的結果。</span></p><p><span style="color:#000000">更多詳情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fidea%2F2024%2F02%2Fthe-new-terminal-beta-is-now-in-jetbrains-ides%2F" target="_blank">查看官方博客</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 03:28:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280280/jetbrains-ides-new-terminal-beta</guid>
            <link>https://www.oschina.net/news/280280/jetbrains-ides-new-terminal-beta</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Windows + VSCode + WSL 的 Web 開發體驗秒了 Mac]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Ruby on Rails 作者 DHH 狠狠地吹了一波 Windows 的開發體驗，他表示已使用 Windows PC 超過一週，<strong>在 VSCode、WSL 和英特爾 CPU 的加持下，運行編程測試的速度比 M3 Max 還快</strong>，整體感覺完全可以替代 macOS 進行 Web 開發。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-b3c494233cc676d511e7a6f7847642826e0.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fdhh%2Fstatus%2F1761830698758066298" target="_blank">https://twitter.com/dhh/status/1761830698758066298</a></u></em></p></blockquote><p>DHH 説道：「微軟竟然能把 Linux 與 Windows 整合得這麼好。我原以為在 WSL 下運行肯定會受到性能上的影響。或者説，它會變得笨拙和卡頓。但事實並非如此。……因此，我們要為微軟點贊！通過與 Linux 和開源握手言和，微軟為開發者提供了極具生產力的工具組合。現在，英特爾和 AMD 的芯片也終於在硬件方面給蘋果帶去了競爭壓力。」</p><p>延伸閲讀：<u><em><a href="https://www.oschina.net/news/261816/you-can-t-get-faster-than-no-build" target="_blank">DHH 鋭評 「打包工具」：前端根本不需要構建 (No Build)</a></em></u></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 03:09:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280277/vscode-wsl-for-web-development</guid>
            <link>https://www.oschina.net/news/280277/vscode-wsl-for-web-development</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Flax Engine —— 多平台 3D 遊戲引擎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#1f2328">Flax Engine 是一款用 C++ 和 C# 編寫的高品質現代 3D 遊戲引擎。</span></p><p>特性：</p><ul><li>無縫 C# 和 C++ 腳本編寫</li><li>自動繪製調用批處理和實例化</li><li>默認情況下，每個資產都使用異步內容流</li><li>跨平台支持（Windows、Linux、Android、macOS、iOS、PS4、PS5、Switch、Xbox One、Xbox Series X/S...）</li><li>實時全局照明（DDGI 和帶有自定義軟件光線追蹤的反射）</li><li>GPU 光照貼圖烘焙</li><li>可視化腳本</li><li>視覺特效工具</li><li>嵌套預製件</li><li>大世界（世界座標的 64 位精度）</li><li>本地化工具</li><li>在線服務（Steam、Xbox Live、PSN...）</li><li>多人遊戲網絡</li><li>動畫工具和功能</li><li>開放世界工具（地形、樹葉、霧、關卡流）</li><li>在編輯器中熱重載 C#/C++</li><li>技術美術人員的遊戲全局變量</li><li>提供完整的源代碼</li><li>來自引擎開發人員的直接溝通和幫助</li><li>輕量級開發（完整的倉庫克隆 + 編譯不到 3 分鐘）</li></ul><p><img alt="" height="260" src="https://static.oschina.net/uploads/space/2023/0918/162245_QJFM_4252687.jpg" width="500" referrerpolicy="no-referrer"></p><p><img alt="" height="265" src="https://static.oschina.net/uploads/space/2023/0918/162326_omZj_4252687.jpg" width="500" referrerpolicy="no-referrer"></p><p><img alt="" height="267" src="https://static.oschina.net/uploads/space/2023/0918/162336_iDUN_4252687.jpg" width="500" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 03:05:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/flax-engine</guid>
            <link>https://www.oschina.net/p/flax-engine</link>
        </item>
        <item>
            <title>
                <![CDATA[中國電子擬向中國軟件投資 20 億元，打造操作系統核心技術]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">中國軟件與技術服務股份有限公司發佈《2024 年度向特定對象發行 A 股股票預案》。</span><span>本次向特定對象發行股票數量不超過 90,130,689 股（含本數），佔中國軟件<span>本次發行前總股數 10.48%，不超過本次發行前總股本的 30%。</span></span></p><p><span>本次發行各認購對象擬認購金額及股份數量如下：</span></p><p><img height="121" src="https://oscimg.oschina.net/oscnet/up-8d4ed7ad29265e08c048bc38bcc8773ac52.png" width="500" referrerpolicy="no-referrer"></p><p><span>本次向特定對象發行股票擬募集資金總額（含發行費用）<span>不超過 20 億元，扣除發行費用後的募集資金淨額擬全部投入以下項目：</span></span></p><p><img height="144" src="https://oscimg.oschina.net/oscnet/up-81bd21ed796c2a4beeaa9d20999d342b32d.png" width="500" referrerpolicy="no-referrer"></p><p><span>中國電子最近一年及一期主要財務數據如下：</span></p><p><img height="230" src="https://oscimg.oschina.net/oscnet/up-c39035eccf16806bb7c97fc21491281f6c0.png" width="500" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FVakZAoL5LtCSGSWad8jxrw" target="_blank">公告</a>指出，<span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">本次全部募集資金以麒麟軟件為主體，投入「移固融合終端操作系統產品研發」、「面向雲化的服務器操作系統產品研發」、「嵌入式操作系統能力平台建設」三個項目。</span></p><p>詳情可<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.sse.com.cn%2Fdisclosure%2Flistedinfo%2Fannouncement%2Fc%2Fnew%2F2023-09-23%2F688418_20230923_K1H9.pdf" target="_blank">查看完整文件</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 02:36:17 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280270</guid>
            <link>https://www.oschina.net/news/280270</link>
            <author>
                <![CDATA[來源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推薦 | 智能杯墊產品 iCupBox]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-icupbox" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#icupbox"></a>iCupBox</h1><ul><li>csdn 博客 (tao.jiang)： <a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fweixin_42887343">https://blog.csdn.net/weixin_42887343</a></li><li>csdn 博客 (dan.yin)： <a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fweixin_38880029">https://blog.csdn.net/weixin_38880029</a></li></ul><h2><a id="user-content-項目介紹" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D"></a>項目介紹</h2><ul><li>這是一款智能杯墊產品，基於 GTD 時間管理理念設計，目的是提醒人們專心工作和及時喝水休息，提高工作效率。</li></ul><p>項目分為客戶端 APP 和杯墊固件系統：</p><ul><li>客戶端 APP，使用 QML 開發，集成 GTD 時間管理方法，與杯墊固件系統通訊，控制杯墊固件系統的顯示內容；</li><li>杯墊固件系統，使用的 esp8266 作為主控，集成 WIFI、藍牙、紅外對管、0.96 寸 oled、dht11 溫濕度模塊、ds1302 時鐘模塊鋰電池、鋰電池充電模塊。</li></ul><p>各部分作用：</p><ul><li>WIFI，用於 PC 客戶端 APP 的數據通訊；</li><li>_ 藍牙，用於手機客戶端 APP 的數據通訊；_</li><li>紅外對管，用於杯子就位檢測；</li><li>oled：用於信息顯示及提示喝水休息；</li><li>dht11:檢測環境溫濕度；</li><li>ds1302：用於系統時鐘管理（保存和輸出準確時間）</li></ul><h2><a id="user-content-設計原理" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E8%AE%BE%E8%AE%A1%E5%8E%9F%E7%90%86"></a>設計原理：</h2><p>使用番茄工作法，選擇一個待完成的任務，將番茄時間設為 25 分鐘，專注工作，中途不允許做任何與該任務無關的事，直到番茄時鐘響起，
然後進行短暫休息一下（5 分鐘就行），然後再開始下一個番茄。每 4 個番茄時段多休息一會兒。
番茄工作法會極大地提高了工作的效率，還會有意想不到的成就感。</p><h2><a id="user-content-總體功能介紹" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E6%80%BB%E4%BD%93%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D"></a>總體功能介紹</h2><ul><li>1、喝水提醒；</li><li>2、日程提醒；</li><li>3、時間顯示；</li><li>4、溫度監測；</li><li>5、濕度監測；</li><li>6、詩詞播報；</li><li>7、天氣播報；</li></ul><h2><a id="user-content-詳細功能説明" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E8%AF%A6%E7%BB%86%E5%8A%9F%E8%83%BD%E8%AF%B4%E6%98%8E"></a>詳細功能説明</h2><ul><li>1、規劃當日計劃，根據 SMART 原則，製作月計劃、日計劃，並同步到杯墊固件系統；</li><li>2、提醒喝水休息，目前時間定為 25 分鐘提醒一次，超過後，每 15 分鐘時提醒一次；</li><li>3、自動圖片顯示，每次提醒都有對應的系列圖片顯示；</li><li>4、當處於提醒狀態，除了圖片顯示外，屏幕還會閃爍，類似 led 閃爍效果用於提醒</li><li>5、提醒狀態一共分為 5 個等級，分別為 15min、25min、55min，後續這些時間可通過上位機設置。</li><li>6、時間、溫濕度顯示功能，交叉顯示一些基本信息，如當前時間，環境中的溫度、濕度。在提示狀態下，該節目也會帶有閃爍提示效果。</li><li>7、自動對時，內置時鐘模塊，雖然設置好後比較準確，但是還是可以通過連接 WiFi 自動校準時間，該功能後續考慮是否需要。</li><li>8、詩詞顯示，在等待喝水的過程中，可以隨機顯示一些界面或信息，其中詩詞就是一個方面。</li></ul><h2><a id="user-content-項目文件説明" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6%E8%AF%B4%E6%98%8E"></a>項目文件説明</h2><ul><li>mcuCode/cupHold ：杯墊中 esp8266 的代碼</li><li>doc ：一些項目的輸出文檔</li><li>setAppCode : 項目上位機代碼，用於設計杯墊的一些配置，如時間、喝水提醒時長、顯示的圖片等等</li><li>tools ： 項目中需要用到的一些工具</li><li>3DModel ： 杯墊的外殼文件，可直接用切圖軟件打開後，輸出給 3D 打印機打印</li><li>showIMG ： 一些顯示效果</li></ul><h2><a id="user-content-硬件電路" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E7%A1%AC%E4%BB%B6%E7%94%B5%E8%B7%AF"></a>硬件電路</h2><ul><li>電路圖*</li></ul><h2><a id="user-content-開發歷程" class="anchor" href="https://gitee.com/jiangtao008/iCupBox#%E5%BC%80%E5%8F%91%E5%8E%86%E7%A8%8B"></a>開發歷程</h2><ul><li>tao.jiang：項目截至目前-2022-4-3，陸陸續續搞了一個月，其中最喜歡做的就是硬件設計和焊接了，重回老本行。。。。。。最不喜歡的就是這個小屏幕的 UI 設計，比 pc 端軟件的 ui 麻煩太多了，像素少也就算了，還不支持灰度（只有二值化）。</li><li>dan.yin：2022 年 7 月 2 日正式加入本項目，主要負責本產品規則和上位機實施，作為一開源項目愛好者，將不遺餘力的貢獻一份力量。</li></ul><p><img src="https://gitee.com/jiangtao008/iCupBox/raw/master/showIMG/readme/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230604125622.jpg" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p><img src="https://gitee.com/jiangtao008/iCupBox/raw/master/showIMG/readme/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230604125743.jpg" alt="輸入圖片説明" referrerpolicy="no-referrer"></p><p><img src="https://gitee.com/jiangtao008/iCupBox/raw/master/showIMG/readme/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230604125007.jpg" alt="輸入圖片説明" referrerpolicy="no-referrer"></p>]]>
            </description>
            <pubDate>Mon, 26 Feb 2024 02:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/jiangtao008/iCupBox</guid>
            <link>https://gitee.com/jiangtao008/iCupBox</link>
        </item>
        <item>
            <title>
                <![CDATA[基於 Rust 開發的終端應用 Warp 發佈 Linux 版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Warp 是一個基於 Rust 開發的現代化終端應用，內置 AI 功能，支持 CPU 加速。</p><p>此前 Warp 僅面向 Mac 平台提供，近日其開發團隊終於<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.warp.dev%2Fblog%2Fwarp-for-linux" target="_blank">發佈</a></u>了 Linux 版本，用戶可在大多數主流 Linux 發行版上安裝 Warp，包括 Ubuntu、Fedora、Arch Linux 或 Red Hat，目前提供的安裝包格式包括：</p><ul><li><strong>.deb (apt)</strong></li><li><strong>.rpm (yum/dnf/zypper)</strong></li><li><strong>.pkg.tar.zst (pacman)</strong></li><li><strong>.AppImage</strong></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4de6b7dfa97856c11c9134895a8dd615060.png" referrerpolicy="no-referrer"></p><p><strong>Warp for Linux 特性</strong></p><ul><li><p>基於 Rust 編寫，所有圖形渲染都直接在 GPU 上完成，性能極佳</p></li><li><p>支持 zsh、bash 和 fish 等 shell</p></li><li><p>擁有現代化的編輯特性，比如鼠標支持、自動完成、語法高亮和多光標支持</p></li><li><p>Warp AI 可以幫助開發者查找忘記的命令、調試錯誤或通過自然語言轉換為命令行</p></li><li><p>Warp Drive 可以將終端變得協作化，開發者可以將重要的命令保存為可重用的工作流，並與團隊成員共享</p></li></ul><hr><p>Warp 團隊介紹了開發 Linux 版本的一些技術挑戰。由於 Linux 上的 GPU API 與 macOS 上的 Metal API 有很大區別，因此 Warp 團隊使用了開源的 Rust 庫來實現跨平台渲染，例如 wgpu、winit 和 cosmic-text。<strong>除了平台特定的抽象之外，Linux 版本的 Warp 與 Mac 版本共享了大約 98% 的代碼</strong>。</p><p>值得一提的是，為了更好地支持跨平台抽象，Warp 團隊還擴展了其內部基於 Rust 的 UI 框架，並計劃在未來開源該框架。</p><p>現在，Warp 已經支持 macOS 和 Linux 兩個主流平台。Warp 團隊正在積極開發 Windows 版本，預計將在今年晚些時候發佈。下載地址：<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.warp.dev%2Fget_warp%3Flinux%3Dtrue%26auto_download%3Dfalse" target="_blank">https://app.warp.dev/get_warp</a></em></u></p><p><img src="https://oscimg.oschina.net/oscnet/up-606dd90d1e674b566bbb400477a9e8f3704.png" referrerpolicy="no-referrer"></p><hr><p><strong>延伸閲讀：<u><em><a href="https://www.oschina.net/news/276588/zed-is-now-open-source" target="news">Rust 編寫的 Zed 編輯器正式開源</a></em></u></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 25 Feb 2024 11:09:37 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280197/warp-for-linux</guid>
            <link>https://www.oschina.net/news/280197/warp-for-linux</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[周鴻禕：Sora 的技術路線如果被開源，國內將能很快趕上]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>360 集團創始人周鴻禕近日接受了新京報的獨家採訪，在被問及國內大模型企業如何追趕 Sora 時，他認為：</p><blockquote><p>「Sora 的技術路線如果被開源，國內將能很快趕上，但在追趕 Sora 時，算力有可能成為門檻，對此，集中國內所有 AI 企業的算力或許是方法之一。」</p></blockquote><p>周鴻禕對新京報貝殼財經記者表示，Sora 所代表的技術路線出爐後，國外也有兩條路線的鬥爭，一條是 OpenAI 的閉源，另一條是以 Meta 為代表的開源，「開源路線的目標就要打破閉源，他們會不斷去猜測閉源是怎麼做的，最後再開源出來。<strong>開源出來的好處是，很多小公司和大公司的個人成員會積極地在開源項目中借鑑他人成果，同時再貢獻自己的成果，其化學作用會非常明顯</strong>。」</p><p>周鴻禕同時認為，在追趕 Sora 方面，算力可能也是一個坎。Sora 視頻分析對算力的消耗應該是遠遠超過千億模型的。所以，當現在國內顯卡都被卡脖子之後，算力就可能會是一個問題。「目前，Meta 已經有 50 萬塊 GPU，明年可能會買百萬塊，微軟應該也會按照百萬級別去下訂單。而國內的所有人工智能公司加在一起可能有 50 萬塊 GPU，但都分散在各個公司裏。」&nbsp;</p><p>來源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fm.bjnews.com.cn%2Fdetail%2F1708743244168689.html" target="_blank">https://m.bjnews.com.cn/detail/1708743244168689.html</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 25 Feb 2024 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280267</guid>
            <link>https://www.oschina.net/news/280267</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | LangChain 原理學習筆記]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;visibility: visible;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img __bg_gif" data-backh="96" data-backw="578" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="96" data-imgfileid="503044953" data-ratio="0.16666666666666666" src="https://oscimg.oschina.net/oscnet/5d6661c6-490a-4660-829f-c96629c9c1aa.gif" data-type="gif" data-w="636" style="outline: 0px;letter-spacing: 0.544px;font-size: var(--articleFontsize);border-radius: 8px;text-align: justify;width: 100%;visibility: visible !important;background-size: 16px !important;height: auto;" referrerpolicy="no-referrer"><br style="outline: 0px;visibility: visible;"></section><section data-mpa-template="t" data-mpa-template-id="502" data-mpa-category="模板" style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;"><section data-mpa-category="模板" data-mid="" style="padding-right: 1px;padding-left: 1px;outline: 0px;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;"><section data-mid="" style="outline: 0px;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;"><section data-mid="" style="outline: 0px;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section><section data-mid="" style="padding-left: 7px;outline: 0px;display: flex;justify-content: flex-start;align-items: center;visibility: visible;"><section data-mid="" style="margin-right: 7px;outline: 0px;text-align: left;visibility: visible;"><p data-mid="" style="outline: 0px;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &quot;PingFang SC&quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;"><br style="outline: 0px;visibility: visible;"></p></section><section data-mid="" style="margin-bottom: 4px;outline: 0px;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section></section></section><section data-mid="" style="padding: 7px 14px 9px 19px;outline: 0px;width: 675px;text-align: left;border-bottom: 1px solid rgb(58, 92, 244);visibility: visible;"><p style="outline: 0px;min-height: 24px;letter-spacing: 0.578px;text-align: justify;visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="text-align: left;font-size: 15px;letter-spacing: 1px;">最新越發覺得 AI 的發展，對未來是一場革命，LangChain 已經在工程設計上有了最佳實踐，類似於 AI 時代的編程模型或編程框架，有點 Spring 框架的意思。之前在 LangChain 上也有些最佳實踐，所以在這裏分享記錄下。</span></p></section></section></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.75em;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503044950" data-ratio="0.3161764705882353" data-s="300,640" src="https://oscimg.oschina.net/oscnet/c23e6652-3a60-4f04-91a9-75c32aeb79c6.png" data-type="png" data-w="408" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;">LangChain 解決什麼問題</span></section><p style="outline: 0px;visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: justify;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">LangChain 是基於 LLM 之上的，在應用層和底層 LLM 之前的一個很好的編程框架，如果把 LLM 比喻為各種類型的數據庫、中間件等這些基礎設施，應用層是各種業務邏輯的組合之外，那麼 LangChain 就負責橋接與業務層和底層 LLM 模型，讓開發者可以快速地實現對接各種底層模型和快速實現業務邏輯的軟件開發框架。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">那麼 LangChain 是如何做到的呢？試想一下，現在底層有一個大模型的推理能力，除了在對話框手動輸入跟他聊天之外。如何用計算機方式跟它互動呢？如果把一次 LLM 調用當作一個原子能力，如何編排這些原子能力來解決一些業務需求呢？Langchain 就是來解決這個事情的。</span></p><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;visibility: visible;line-height: 1.75em;"><br></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="503044952" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/4a2ee990-1779-43cc-a673-50748e9a264e.png" data-type="png" data-w="422" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;color: rgb(0, 17, 255);">LangChain 的幾個核心概念</span></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><span id="OSC_h4_1"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Model I/O</span></strong></span></h4><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">這裏重點把背後的 LLM 模型做了一層封裝，開發者可以通過更改配置的方式快速切換底層 LLM 模型，比如 chatgpt，chatGLM、通義千問等模型。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">同時還有些高階功能：比如提供了緩存等功能，這樣對於語義上類似的 query，如果緩存有，那麼 langchain 可以快速返回結果，而不需要調用大模型。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></p><span id="OSC_h4_2"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Retriver</span></strong></span></h4><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">檢索是為瞭解決大模型打通用戶的本身數據，做一些面向業務屬性的東西。這裏的檢索並非傳統的關係型數據庫，更多的是與大模型的本身邏輯相似的，比如向量數據庫。</span></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><strong>一個經典的結合 LLM 和外部用戶的文檔進行智能答疑的場景</strong></span></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">文檔-&gt;分詞-&gt;embedding-&gt;向量數據庫</span></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">query-&gt;向量數據庫查詢-&gt;TOP N-&gt;上下文+ 用戶提問 + prompt -&gt; LLM -&gt; 返回結果</span></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">一個經典的圖如下：</span></section><section style="min-height: 24px;text-align: center;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-backh="368" data-backw="578" data-imgfileid="503044954" data-ratio="0.637962962962963" src="https://oscimg.oschina.net/oscnet/ea3e7438-856d-47b9-b1d4-20042680f627.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" width="2400" referrerpolicy="no-referrer"></section><section style="min-height: 24px;text-align: left;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><strong>關鍵技術：文檔如何拆分、embedding 過程、 TOPN 向量距離的選擇</strong></span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">embedding 技術選型</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">embedding 是將現實中的物體通過向量化的方法轉化為高維向量，可被機器學習模型所識別。他是一種映射，同時也保證了能清晰地表達現實物體的特徵。基於此，可以進行一些歸類分析、迴歸分析等。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">現在市面上常見的 embedding 方法有通義千問的 embedding 等方法。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">向量數據庫：</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">向量數據庫底層存儲的是一堆向量，它提供了根據向量相似度進行查詢的能力，一般情況下，向量相似度代表了現實世界中物體的相似度。比如」我的名字是小明「 和「我叫小明」這兩句話所代表的含義幾乎是相同的，那麼在 embedding 之後，基於向量數據庫進行查詢的時候，它們倆的相似度就會很近。</span></p><section style="min-height: 24px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></section><span id="OSC_h4_3"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Chain</span></strong></span></h4><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">各種類型的 chain，chain 代表了各種業務類型的組合，類似於工作流的編排。</span></p><section style="min-height: 24px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><span id="OSC_h4_4"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Memory</span></strong></span></h4><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">LLM 本身提供了記憶的能力，同時提供了接口，開發者可以將歷史的對話記錄傳入給 LLM。LangChain 需要使用外部存儲保存這些歷史的會話和記憶。可以使用數據庫、緩存等進行保存。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></p><span id="OSC_h4_5"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Agent</span></strong></span></h4><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">重點是代理工具</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">代理工具可以讓應用程序基於大模型的推理能力，然後進行代理工具或代理服務的調用。因為 LLM 是沒有「聯網」的能力的，如果想解決特定的應用場景，代理工具是個完美的選擇。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">代理工具通常包含三個方面：用戶輸入、prompt 編排 LLM 思考與路由代理的過程、背後的代理服務。其中難點可能就在於 prompt 設計了。通常的「套路」是這樣的：</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">ReAct 模型</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">輸入：用戶的問題</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">思考過程：如果是情況 1（這個是需要 LLM 進行意圖識別進行思考的），那麼推理和提取出一些關鍵參數，調用 agent1，如果是情況 2，那麼推理和提取出一些關鍵參數，調用 agent2</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">Act：調用 agent1 對應一個 JSON 格式化的輸入，調用 function1，返回結果。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">觀察：觀察調用後的結果，再結合推理的能力，再進行循環思考。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-wrap: wrap;text-align: center;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);margin-top: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-imgfileid="503044951" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/335c2740-2ac6-4cd0-a8bc-d421b0bc2086.png" data-type="png" data-w="422" style="outline: 0px;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></section><p style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-wrap: wrap;text-align: center;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;color: rgb(0, 17, 255);letter-spacing: 1px;">LangChain 的在實際場景中的實踐</span></p><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">集團內部開發了一個 JAVA 版本的 LangChain 框架，以下實踐基於此框架與開源大模型 chatGLM-6B 進行。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><span id="OSC_h4_6"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">淘寶開放平台智能問答</span></strong></span></h4><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">淘寶開放平台對內託管了上萬個 API，每天在內部羣裏都會有開發者諮詢 API 發佈問題，之前我們是通過 NLP 來實現智能問答的，現將它升級為基於大模型的智能問答，以下是具體的技術實現過程。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_7"></span><h4 style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">知識庫 Embedding 過程</span></h4></li></ul><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"></span><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">由於之前已經沉澱好了很多知識庫，都是 Question-Answer 的這種形式，這裏我們對 Question，也就是問題進行 Embedding，此處採用通義千問提供的 Embedding 方法。</span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">知識庫 embedding：</span></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer">TongYiEmbeddings embeddings = <span class="code-snippet__keyword">new</span> TongYiEmbeddings();</span></code><code><span class="code-snippet_outer">embeddings.setServerAccessId(ALINLP_EMBEDDINGS_ACCESSID);</span></code><code><span class="code-snippet_outer">embeddings.setServerUrl(ALINLP_EMBEDDINGS_SERVER_URL);</span></code><code><span class="code-snippet_outer">embeddings.setServerUuid(ALINLP_EMBEDDINGS_UUID);</span></code><code><span class="code-snippet_outer">Document <span class="code-snippet__built_in">document</span> = <span class="code-snippet__keyword">new</span> Document();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">document</span>.setPageContent(rawText);</span></code><code><span class="code-snippet_outer">List&lt;Document&gt; documents = embeddings.embedDocument(Arrays.asList(<span class="code-snippet__built_in">document</span>));</span></code><code><span class="code-snippet_outer">Document  vecDocument= documents.get(<span class="code-snippet__number">0</span>);</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 向量化知識</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">String</span> embeddingString = <span class="code-snippet__built_in">JSON</span>.toJSONString(vecDocument.getEmbedding()).replaceAll(<span class="code-snippet__string">"\\["</span>, <span class="code-snippet__string">"{"</span>)</span></code><code><span class="code-snippet_outer">.replaceAll(<span class="code-snippet__string">"\\]"</span>, <span class="code-snippet__string">"}"</span>);</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">return</span> embeddingString;</span></code></pre></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_8"></span><h4 style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">向量數據庫存儲和查詢</span></h4></li></ul><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"></span><br></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">此處採用 hologres 向量數據庫，圖中紅框表示知識庫問題與回答在數據庫中具體的向量化存儲數據。</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;"><span style="font-size: 15px;"></span></span></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-backh="129" data-backw="578" data-imgfileid="503044958" data-ratio="0.22255192878338279" src="https://oscimg.oschina.net/oscnet/b1a595f8-7ea6-4f3c-a5d7-ebcc2d405d65.png" data-type="png" data-w="674" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">向量距離數據庫查詢：</span></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="sql"><code><span class="code-snippet_outer"><span class="code-snippet__keyword">select</span> origin_content <span class="code-snippet__keyword">as</span> originContent,</span></code><code><span class="code-snippet_outer">        origin_title <span class="code-snippet__keyword">as</span> originTitle,</span></code><code><span class="code-snippet_outer">        pm_approx_squared_euclidean_distance(embedding_title, <span class="code-snippet__comment">#{embeddingTitle}) as distance</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">from</span> vs_knowledge</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">order</span><span class="code-snippet__keyword">by</span> distance <span class="code-snippet__keyword">asc</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">limit</span><span class="code-snippet__comment">#{limit}</span></span></code><code><span class="code-snippet_outer"></span></code></pre></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">大模型問答鏈路</span></p></li></ul><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;"><strong><br></strong></span></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">問答 chain 的基本實現：</span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer"><span class="code-snippet__comment">//1. 初始化 ChatGLM 的參數</span></span></code><code><span class="code-snippet_outer">ChatGLMV2Internal chatGLMV2Internal = <span class="code-snippet__keyword">new</span> ChatGLMV2Internal();</span></code><code><span class="code-snippet_outer">chatGLMV2Internal.setTemperature(<span class="code-snippet__number">0.01</span>d);</span></code><code><span class="code-snippet_outer">chatGLMV2Internal.setMaxLength(<span class="code-snippet__number">2048</span>);</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//2. 提示詞編寫</span></span></code><code><span class="code-snippet_outer">PromptTemplate prompt = <span class="code-snippet__keyword">new</span> PromptTemplate();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">String</span> template = <span class="code-snippet__string">"已知信息：\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"{context} \n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"根據上述已知信息，簡潔和專業的來回答用戶的問題。如果無法從中得到答案，請説 「根據已知信息無法回答該問題」 或 「沒有提供足夠的相關信息」，不允許在答案中添加編造成分，答案請使用中文。問題是：{question}"</span>;</span></code><code><span class="code-snippet_outer">prompt.setTemplate(template);</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//3. 向量數據庫檢索配置，比如最大向量距離</span></span></code><code><span class="code-snippet_outer">RetrievalQA qa = <span class="code-snippet__keyword">new</span> RetrievalQA();</span></code><code><span class="code-snippet_outer">qa.setRecommend(<span class="code-snippet__number">5</span>);</span></code><code><span class="code-snippet_outer">qa.setMaxDistanceValue(<span class="code-snippet__number">10000.0</span>d);</span></code><code><span class="code-snippet_outer">qa.setLlm(chatGLMV2Internal);</span></code><code><span class="code-snippet_outer">qa.setPrompt(prompt);</span></code><code><span class="code-snippet_outer">qa.setRetriever(holoRetriver.asRetriever());</span></code><code><span class="code-snippet_outer">qa.init();</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//4. LLM 大模型問答</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">Map</span>&lt;<span class="code-snippet__built_in">String</span>, <span class="code-snippet__built_in">Object</span>&gt; inputs = <span class="code-snippet__keyword">new</span> HashMap&lt;&gt;();</span></code><code><span class="code-snippet_outer">inputs.put(<span class="code-snippet__string">"question"</span>, question);</span></code><code><span class="code-snippet_outer">inputs.put(<span class="code-snippet__string">"input"</span>, question);</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">Map</span>&lt;<span class="code-snippet__built_in">String</span>, <span class="code-snippet__built_in">Object</span>&gt; outputs = qa.run(inputs);</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">llmKonwledgeDO.setContent(<span class="code-snippet__built_in">String</span>.valueOf(outputs.get(<span class="code-snippet__string">"text"</span>)));</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 補充 doclist</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">return</span> llmKonwledgeDO;</span></code></pre></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><span id="OSC_h4_9"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">AI Agent 實踐</span></strong></span></h4><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">以下實現了一個網關</span><span style="font-size: 15px;letter-spacing: 1px;">API 調用日誌解析的 agent。</span></p><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">Agent 工具註冊：</span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="powershell"><code><span class="code-snippet_outer">this.setName(<span class="code-snippet__string">"ApiLogTool"</span>);</span></code><code><span class="code-snippet_outer">this.setDescription(<span class="code-snippet__string">"這是一個調用日誌查詢接口，如果[{question}]中包含 requestId 關鍵字,你可以請求這個工具與日誌系統進行交互，調用這個工具。\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"請先提取出 requestId 的值，將它賦值為 value。調用參數：[{\"</span>requestId\<span class="code-snippet__string">": \"</span>value\<span class="code-snippet__string">", \"</span>type\<span class="code-snippet__string">": \"</span>String\<span class="code-snippet__string">", \"</span>description\<span class="code-snippet__string">": \"</span>調用請求 id\<span class="code-snippet__string">"}]。"</span>);</span></code></pre></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;"><strong><br></strong></span></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">工具解析：</span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer"><span class="code-snippet__built_in">Map</span>&lt;<span class="code-snippet__built_in">String</span>,<span class="code-snippet__built_in">Object</span>&gt; parse = (<span class="code-snippet__built_in">Map</span>&lt;<span class="code-snippet__built_in">String</span>,<span class="code-snippet__built_in">Object</span>&gt;)<span class="code-snippet__built_in">JSON</span>.parse(toolInput);</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">if</span>(parse.get(<span class="code-snippet__string">"requestId"</span>)==<span class="code-snippet__literal">null</span>){</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">return</span><span class="code-snippet__keyword">new</span> ToolExecuteResult(<span class="code-snippet__string">""</span>);</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">String</span> requestId = parse.get(<span class="code-snippet__string">"requestId"</span>).toString();</span></code><code><span class="code-snippet_outer">ApiLogSearchQuery apiLogSearchQuery = <span class="code-snippet__keyword">new</span> ApiLogSearchQuery();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//日誌查詢解析處理</span></span></code></pre></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;">思考決策邏輯：</span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer"><span class="code-snippet__keyword">public</span><span class="code-snippet__keyword">static</span> final <span class="code-snippet__built_in">String</span> FORMAT_INSTRUCTIONS_CH =</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"用戶提出了一個問題: {question} \n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"你可以選擇使用下面這些工具：\n"</span>+</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"{tool_list_description}"</span>+</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"\n"</span>+</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"同時你的思考過程如下："</span>+</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"Thought: 每一次你需要首先思考你應該做什麼\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"Action: 你需要決定是否使用工具，應該是[{tool_names}] 中的一個 Action，格式為 JSON。如果匹配不到工具，就不要思考了，直接返回結果，請不要把思考過程返回給用戶。\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"Input: 如果匹配到工具，使用的工具的輸入參數，賦值給 params\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"Observation: 如果匹配到工具，工具的輸出結果，格式為[]。\n"</span> +</span></code><code><span class="code-snippet_outer"><span class="code-snippet__string">"Answer: 每一步回答問題的答案，格式為 JSON。你可以多次使用 Thought/Action/Input/Observation/Answer 來一步一步的思考如何回答問題。\n"</span>;</span></code></pre></section><p style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);font-size: 15px;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503044956" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/457ebbb7-b2db-4f81-af49-cb94bd9aa6dc.png" data-type="png" data-w="256" style="outline: 0px;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;font-size: 15px;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);text-align: center;line-height: normal;"><span style="outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;">個人小思考</span></section><section style="min-height: 24px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><strong><br></strong></span></section><ol class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 1.5em;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);min-height: 24px;line-height: 1.75em;"><li style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;text-align: justify;line-height: 1.75em;font-size: 15px;letter-spacing: 1px;"><section style="outline: 0px;min-height: 24px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 1px;">未來微服務 HSF 這種形式會向上往 agent 工廠或者 agent 服務框架這種形式演進，因為這個框架搭好了後，後面各個業務方快速集成到 agent 服務上，可被上層 AI 應用層調用</span></section></li><li style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;text-align: justify;line-height: 1.75em;font-size: 15px;letter-spacing: 1px;"><section style="outline: 0px;min-height: 24px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 1px;">如果多個 agent 聯動了，才是真正的智能</span></section></li><li style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;text-align: justify;line-height: 1.75em;font-size: 15px;letter-spacing: 1px;"><section style="outline: 0px;min-height: 24px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;letter-spacing: 1px;">如何定義 agent？</span></section></li></ol><section style="outline: 0px;min-height: 24px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;">Agent 體系架構可以分為慎思型、反應型和混合型。</span></section><section style="outline: 0px;min-height: 24px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;">慎思型構建負責規劃和推理行為，反應型構建處理需要快速響應的重要事件。</span></section><section style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);min-height: 24px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><strong><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;">信念-期望-意圖（Belief-Desire-ltension， BDI) 體系架構是混合型體系架構的一個重要類型。</span></strong><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;">Agent 的表示形式，Agent 的行為可以被描述成好像擁有信念、期望和意圖等思維狀態。<strong>信念表示 Agent 擁有的知識，期望描述 Agent 追求的目標，意圖説明 Agent 選擇計劃以實現哪些目標。</strong></span></section><section style="min-height: 24px;text-align: justify;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;"><br></span></section><section style="min-height: 24px;text-align: center;line-height: 1.75em;margin-bottom: 0px;margin-top: 0px;"><img class="rich_pages wxw-img" data-imgfileid="503044957" data-ratio="0.4925925925925926" src="https://oscimg.oschina.net/oscnet/6bf178e3-ef35-4c6d-8abc-81ef9528723d.png" data-type="png" data-w="1080" width="1080" referrerpolicy="no-referrer"></section><section style="min-height: 24px;text-align: center;line-height: 1.75em;margin-bottom: 0px;margin-top: 0px;"><span style="font-size: 12px;color: rgb(136, 136, 136);">openai 提供的 agent 概念</span></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><p style="margin-bottom: 0px;outline: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);font-size: 11pt;font-family: DengXian;color: rgb(0, 0, 0);letter-spacing: normal;text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503044955" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/319926d9-6e10-4a37-853a-8e49a4bef5bd.png" data-type="png" data-w="256" style="outline: 0px;font-size: 14.6667px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 133px !important;" referrerpolicy="no-referrer"></p><p style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.75em;text-align: center;"><span style="outline: 0px;box-sizing: inherit;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;">團隊介紹</span></p><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="min-height: 24px;text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;">我們是淘天集團商家與開放平台團隊，目前主要圍繞商家的日常經營場景，為中小商家提供高效易用的電商工具。</span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;font-size: 15px;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);text-align: justify;line-height: normal;"><br></section><section data-role="outer" label="Powered by 135editor.com" style="margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span><span style="outline: 0px;"><strong style="outline: 0px;">&nbsp;拓展閲讀&nbsp;</strong></span><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span></section><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><br style="outline: 0px;"></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;min-height: 24px;clear: both;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect" textvalue="3DXR 技術" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">3DXR 技術</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect" textvalue="終端技術" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">終端技術</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect" textvalue="音視頻技術" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">音視頻技術</a></section><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect" textvalue="服務端技術" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">服務端技術</a><span style="outline: 0px;letter-spacing: 0.544px;">&nbsp;|&nbsp;</span><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect" textvalue="技術質量" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">技術質量</a>&nbsp;|&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect" textvalue="數據算法" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">數據算法</a></p><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><br style="outline: 0px;"></p><section class="mp_profile_iframe_wrp" style="margin-bottom: 24px;outline: 0px;"><mp-common-profile class="custom_select_card mp_profile_iframe js_wx_tap_highlight" data-pluginname="mpprofile" data-id="MzAxNDEwNjk5OQ==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;wxfrom=19" data-nickname="大淘寶技術" data-alias="AlibabaMTT" data-signature="大淘寶技術官方賬號" data-from="2" data-index="0" data-origin_num="697" data-isban="0" data-biz_account_status="0" data-weui-theme="light" data-is_biz_ban="0"></mp-common-profile></section></section><section style="display: none;line-height: 1.75em;"><br></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公眾號 - 大淘寶技術（AlibabaMTT）。<br>如有侵權，請聯繫 support@oschina.cn 刪除。<br>本文參與「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源創計劃</a>」，歡迎正在閲讀的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 25 Feb 2024 02:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/11044513</guid>
            <link>https://my.oschina.net/u/4662964/blog/11044513</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wubuntu：披着 Windows 11 外衣的 Ubuntu]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>眾所周知，Ubuntu 是最受歡迎的 Linux 發行版之一。而微軟擁抱 Linux 之後，Windows 成為了最好的 Linux 發行版（不是）。如果將兩者結合，會碰撞出怎樣的火花？</p><p><strong>Wubuntu，又稱 "Windows Ubuntu"</strong>，是基於 Ubuntu 開發的操作系統，其最具特色之處在於<strong>完全復刻了 Windows 的所有外觀和功能</strong>，而且運行時不需要具備 TPM、安全啓動或任何其他硬件要求。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-b78011bce450db4cf20d1bb7cc559cd4cb6.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wubuntu.org%2F" target="_blank">https://www.wubuntu.org/</a></u></em></p></blockquote><p><span>此外，Wubuntu</span>&nbsp;通過集成 Wine 提供了與 Windows 應用的兼容性，開發者稱 Wubuntu 支持運行 Windows 的 .exe 和 .msi&nbsp;程序，以及支持 Android 應用。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bc1f4a6dcc383b64786c013151ada03e885.png" referrerpolicy="no-referrer"></p><p>Wubuntu 使用的技術棧：</p><p><img src="https://oscimg.oschina.net/oscnet/up-d127229369e54b269f10365f1fad568a5d1.png" referrerpolicy="no-referrer"></p><p>Wubuntu 運行效果：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2e20ee135339d10eb33a0777b818ad6c9f1.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ffec60452f4b93085c10c897e93761e16df.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-62e9f8b8a805f7ed3d4598c1d5c957a3119.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-1725fe7868e691dfed08e9814c6661a523e.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-61332db8d1390d860514df218a3d8a55444.png" referrerpolicy="no-referrer"></p><p>這界面不能説和 Windows 11 一模一樣，只能説完全一致，微軟法務部看了真的不會律師函警告嗎？</p><p>此外，根據官網的信息，Wubuntu 提供免費版和專業版，其中專業版需要付費購買密鑰才可使用，價格為 35 美元。但官方沒有介紹兩者的功能差異。</p><p>Wubuntu 下載地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wubuntu.org%2Findex.php%2Fget%2Fwubuntu" target="_blank">https://www.wubuntu.org/index.php/get/wubuntu</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 24 Feb 2024 10:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280083/wubuntu-windows-ubuntu</guid>
            <link>https://www.oschina.net/news/280083/wubuntu-windows-ubuntu</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Databend 開源週報第 132 期]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img src="https://oscimg.oschina.net/oscnet/up-42f77d1f307b752e9544a0efaded2715eae.png" alt="" referrerpolicy="no-referrer"></p><blockquote><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdatafuselabs%2Fdatabend" target="_blank">Databend</a> 是一款現代雲數倉。專為彈性和高效設計，為您的大規模分析需求保駕護航。自由且開源。即刻體驗雲服務：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.databend.cn" target="_blank">https://app.databend.cn</a> 。</p></blockquote><h2>What's On In Databend</h2><p>探索 Databend 本週新進展，遇到更貼近你心意的 Databend 。</p><h3>提供對 <code>CREATE [ OR REPLACE ]</code> 的全面支持</h3><p>Databend 現已提供對 <code>CREATE [ OR REPLACE ]</code> 語法糖的全面支持，以覆蓋潛在的 <code>DROP IF EXISTS ...</code> + <code>CREATE ...</code> 用例。</p><p>目前支持該語法糖的對象包括：<code>DATABASE</code>、<code>TABLE</code>、<code>VIEW</code>、<code>AGGREGATING INDEX</code>、<code>STREAM</code>、<code>CONNECTION</code>、<code>FUNCTION</code>、<code>FILE FORMAT</code>、<code>MASKING POLICY</code> 等。</p><p>如果您想了解更多信息，歡迎聯繫 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatabend.cn%2Fcontact-us%2F" target="_blank">Databend 團隊</a>，或查看下面列出的資源。</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdatafuselabs%2Fdatabend%2Fissues%2F14299" target="_blank">Issue #14299 | tracking: CREATE OR REPLACE</a></li></ul><h2>Code Corner</h2><p>一起來探索 Databend 和周邊生態中的代碼片段或項目。</p><h3>利用 Databend Cloud 進行查詢剖析</h3><p>Databend Cloud 提供可視化分析工具以簡化對複雜查詢的剖析和理解。</p><p>該剖析工具可以跟蹤每個步驟的性能，從 TableScan 持續時間到 HashJoin 的詳細信息，並監控數據外溢情況。幫助您輕鬆分析查詢成本和時間，進行針對性優化。</p><p><img src="https://oscimg.oschina.net/oscnet/up-fc41fb6d19013fb622f80bea9d8bcac3ac8.png" alt="" referrerpolicy="no-referrer"></p><p>Databend 團隊也充分利用該工具評估代碼變更對查詢執行的影響。例如 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdatafuselabs%2Fdatabend%2Fpull%2F14561" target="_blank">PR #14561 | feat: use materialized cte for standard stream</a> 。</p><h2>Highlights</h2><p>以下是一些值得注意的事件，也許您可以找到感興趣的內容。</p><ul><li>支持 JSON 運算符 <code>#-</code> 。</li><li>在標準流中使用物化公用表表達式（Materialized CTE），以避免重複掃描。</li><li>閲讀文檔 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.databend.com%2Fguides%2Fdata-management%2F" target="_blank">Docs | Data Management</a> 瞭解如何利用 Databend 管理、恢復和保護您的數據。</li></ul><h2>What's Up Next</h2><p>我們始終對前沿技術和創新理念持開放態度，歡迎您加入社區，為 Databend 注入活力。</p><h3>支持多表插入</h3><p>Databend 計劃支持多表插入以允許使用一條語句有條件地或無條件地插入多個表。</p><p>多表插入語句可以減少執行多個條件插入所需的表掃描和 SQL 。主要適用於數據倉庫中的 ETL 過程，支持並行化和/或將非關係型數據轉換為關係型格式。</p><pre><code class="language-sql">-- Unconditional multi-table insert
INSERT [ OVERWRITE ] ALL
  intoClause [ ... ]
&lt;subquery&gt;

-- Conditional multi-table insert
INSERT [ OVERWRITE ] { FIRST | ALL }
  { WHEN &lt;condition&gt; THEN intoClause [ ... ] }
  [ ... ]
  [ ELSE intoClause ]
&lt;subquery&gt;
</code></pre><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdatafuselabs%2Fdatabend%2Fissues%2F14565" target="_blank">Issue #14565 | Feature: Multi-table Inserts support</a></p><p>如果你對這個主題感興趣，可以嘗試解決其中的部分問題或者參與討論和 PR review 。或者，你可以點擊 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.databend.rs%2Fi-m-feeling-lucky" target="_blank">https://link.databend.rs/i-m-feeling-lucky</a> 來挑選一個隨機問題，祝好運！</p><h2>Changelog</h2><p>前往查看 Databend 每日構建的變更日誌，以瞭解開發的最新動態。</p><p>地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdatafuselabs%2Fdatabend%2Freleases" target="_blank">https://github.com/datafuselabs/databend/releases</a></p><h2>Contributors</h2><p>非常感謝貢獻者們在本週的卓越工作。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c21d62bccf01220d44b5608d571b364bb7e.png" alt="" referrerpolicy="no-referrer"></p><h2>Connect With Us</h2><p>Databend 是一款開源、彈性、低成本，基於對象存儲也可以做實時分析的新式數倉。期待您的關注，一起探索雲原生數倉解決方案，打造新一代開源 Data Cloud。</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatabend.rs" target="_blank">Databend Website</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdatafuselabs%2Fdatabend%2Fdiscussions" target="_blank">GitHub Discussions</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FDatafuse_Labs" target="_blank">Twitter</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.databend.rs%2Fjoin-slack" target="_blank">Slack Channel</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 24 Feb 2024 04:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5489811/blog/11044054</guid>
            <link>https://my.oschina.net/u/5489811/blog/11044054</link>
            <author>
                <![CDATA[原創]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2024 年，只有搞顏色的 P 站真正關心網站性能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2024 年，大家覺得一個網站 JS 文件的平均大小應該是多少？1MB、5MB、10MB，還是更加大呢？</p><p>近年來，層出不窮的現代化前端技術讓人眼花繚亂，再加上終端設備的配置越來越高，許多網站似乎不用再過分擔心性能問題 —— 常常打開網站就要下載超過 10M 的&nbsp;<span>JS 文件。</span></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-25992e8199a790e84d4276053e0858e1b77.png" referrerpolicy="no-referrer"></p><p>知名開源開發者 Nikita Prokopov 對常見網站的 JS 文件大小進行了統計（未壓縮），結果有點令人出乎意料。</p><hr><h3><strong><span style="background-color:#e67e22">以靜態頁面為主的網站</span></strong></h3><ul><li><h4>Wikipedia, 0.2&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1421231d12c5140f4dc29b93285f2916686.png" referrerpolicy="no-referrer"></p><ul><li><h4>Linear, 3&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e8a9b91df6faa5480f2103efd9cd244aa66.png" referrerpolicy="no-referrer"></p><ul><li><h4>Zoom, 6&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-63b072146754bdd245d2af6dcb63dc79c3e.png" referrerpolicy="no-referrer"></p><ul><li><h4>Vercel, 6&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-158a201b80b904688e2a4f9590f8345b4df.png" referrerpolicy="no-referrer"></p><ul><li><h4>Gitlab,<span style="background-color:#f1c40f"> 13&nbsp;MB</span></h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3de67d966870abe2b064d536d3f770d66bc.png" referrerpolicy="no-referrer"></p><ul><li><h4>Medium, 3&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a132d36ae636b6435528e8d174ad233f7d2.png" referrerpolicy="no-referrer"></p><ul><li><h4>Quora, 4.5&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3a6c4a73ff80a50c4052aa7faeced43118b.png" referrerpolicy="no-referrer"></p><ul><li><h4>Pinterest, <span style="background-color:#f1c40f">10&nbsp;MB</span></h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bb825579fd8f6d787be8051e5b32e081fed.png" referrerpolicy="no-referrer"></p><hr><h3><strong><span style="background-color:#e67e22">以搜索功能為主的網站</span></strong></h3><ul><li><h4>StackOverflow, 3.5&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-860ef367515f1ea0ae55c567ed403a1a9c4.png" referrerpolicy="no-referrer"></p><ul><li><h4>NPM, 4&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e55316c24ebe2e2a885a576106ac801e0b9.png" referrerpolicy="no-referrer"></p><ul><li><h4>Airbnb, 7&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a59cfa95b748bb2888d93b3b647a63ca416.png" referrerpolicy="no-referrer"></p><ul><li><h4>Booking.com, <span style="background-color:#f1c40f">12&nbsp;MB</span></h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fee82c93858ef67b723612d9e1ae53314ed.png" referrerpolicy="no-referrer"></p><ul><li><h4>Google, 9&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d677500f815f8156922beb9938670463a68.png" referrerpolicy="no-referrer"></p><h3><span style="background-color:#e67e22">具有簡單交互的單應用網站</span></h3><ul><li><h4>Google Translate, 2.5&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-31a83dfa4eba4b19f6010f5479ce06fc03b.png" referrerpolicy="no-referrer"></p><ul><li><h4>ChatGPT, 7&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-76109ab4826fd1e649be9e2d303e44be5ff.png" referrerpolicy="no-referrer"></p><h3><span style="background-color:#e67e22">視頻/多媒體類網站</span></h3><ul><li><h4>Loom, 7&nbsp;MB</h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-35a3913d214fb0b4ee6edc2929f9cec5b77.png" referrerpolicy="no-referrer"></p><ul><li><h4>YouTube, <span style="background-color:#f1c40f">12&nbsp;MB</span></h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-11c1827cfb0fcf18a4d1ab929ce533a8d42.png" referrerpolicy="no-referrer"></p><ul><li><h4>Pornhub, <span style="background-color:#16a085">&nbsp;1.4&nbsp;MB</span></h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-6531a939e4e613a4503e6bec46e4e5eb0eb.png" referrerpolicy="no-referrer"></p><p>目前看下來，維基百科網站的 JS 文件最小，僅有 0.2MB。Pornhub 次之，為 1.4MB。</p><p>但這倆在下面這個網站前面都是弟弟——</p><ul><li><h4><strong>jQuery, 0.1 MB</strong></h4></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a30ca6a8e2eb8cbc214df1411e42772b4c4.png" referrerpolicy="no-referrer"></p><hr><p>最後看看本站：</p><p><img src="https://oscimg.oschina.net/oscnet/up-8c7490be3117d1e5730f1bb2d6ab1bb8e77.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 23 Feb 2024 09:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279994/js-bloat-2024</guid>
            <link>https://www.oschina.net/news/279994/js-bloat-2024</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Oracle 致力解決 Java 虛擬線程「Pinning」問題]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>虛擬線程在 2023 年 9 月發佈的 JDK 21 中正式成為一項穩定功能。該功能在 Java 生態系統中反響極佳，但仍存在一些痛點。Oracle 日前在&nbsp;Inside Java 網站上詳細<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finside.java%2F2024%2F02%2F21%2Fquality-heads-up%2F" target="_blank">介紹</a>了虛擬線程的「Pinning」問題。</p><p>最常見的兩種情況是：(a) 虛擬線程在 synchronized method 中駐留（如執行 socket I/O）；(b) <span style="color:#333333">虛擬線程阻塞進入&nbsp;synchronized method</span>，因為對象的相關監視器被另一個線程持有。</p><p>在這兩種情況下，載體或本地線程都不會被釋放去做其他工作。因此可能會影響性能和可擴展性，並可能<span style="color:#333333">在某些情況下</span>導致飢餓和死鎖。官方最近發佈的一個<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finside.java%2F2024%2F02%2F17%2Fvirtual-threads-next-steps%2F" target="_blank">Virtual Threads Next Steps</a>&nbsp;視頻中則更詳細地解釋了其中的原因，並討論了一些潛在的解決方案。</p><p><img height="196" src="https://oscimg.oschina.net/oscnet/up-6a2e93ce6802a570c1704258c9a589e998e.png" width="500" referrerpolicy="no-referrer"></p><p>項目團隊正在努力解決這些問題。Java Project Loom 的新早期訪問版本<span style="color:#4e4242">引入了對對象監視器實現的更改</span><span style="color:#333333">，但不適用這兩種常見情況。因此 </span><span style="color:#4e4242">Loom&nbsp;</span><span style="color:#333333">團隊正在尋求用戶的幫助，以測試這些更新的對象監控器在使用虛擬線程的代碼和大量同步的庫中的可靠性和性能。可通過&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmail.openjdk.org%2Fpipermail%2Floom-dev%2F" target="_blank">Loom 郵件列表</a>&nbsp;<span style="color:#333333">報告或反饋問題。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 23 Feb 2024 06:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/279954/java-virtual-threads-pinning-issue</guid>
            <link>https://www.oschina.net/news/279954/java-virtual-threads-pinning-issue</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Koordinator v1.4 正式發佈！為用戶帶來更多的計算負載類型和更靈活的資源管理機制]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h3_1"></span><h3>背景</h3><p style="text-align:justify">Koordinator 作為一個積極發展的開源項目，自 2022 年 4 月發佈 v0.1.0 版本以來，經歷了多次迭代，持續為 Kubernetes 生態系統帶來創新和增強。項目的核心是提供混部工作負載編排、混部資源調度、混部資源隔離和混部性能調優的綜合解決方案，幫助用戶優化容器性能，並提升集羣資源使用效率。</p><p style="text-align:justify">在過去的版本迭代中，Koordinator 社區不斷壯大，已經得到了包括阿里巴巴、螞蟻科技、Intel、小米、小紅書、愛奇藝、360、有贊、趣玩、美亞柏科、PITS 等知名企業工程師的積極參與和貢獻。每一個版本都是在社區共同努力下推進的，反映了項目在實際生產環境中解決問題的能力。</p><p style="text-align:justify"><strong>今天我們很高興的向大家宣佈，Koordinator v1.4.0 版本正式發佈。</strong>在本次發佈中，Koordinator 引入了 Kubernetes 與 YARN 負載混部、NUMA 拓撲對齊策略、CPU 歸一化和冷內存上報等新特性，同時重點增強了彈性配額管理、宿主機非容器化應用的 QoS 管理、重調度防護策略等領域的功能。這些新增和改進點旨在更好地支持企業級 Kubernetes 集羣環境，特別是對於複雜和多樣化的應用場景。</p><p style="text-align:justify">v1.4.0 版本的發佈，將為用戶帶來更多的計算負載類型支持和更靈活的資源管理機制，我們期待這些改進能夠幫助用戶應對更多企業資源管理挑戰。在 v1.4.0 版本中，共有 11 位新加入的開發者參與到了 Koordinator 社區的建設，他們是&nbsp;<em>@shaloulcy，@baowj-678，@zqzten，@tan90github，@pheianox，@zxh326，@qinfustu，@ikaven1024，@peiqiaoWang，@bogo-y，@xujihui1985</em>，感謝期間各位社區同學的積極參與和貢獻，也感謝所有同學在社區的持續投入。</p><span id="OSC_h3_2"></span><h3>版本功能特性解讀</h3><span id="OSC_h4_3"></span><h4>1. 支持 K8s 與 YARN 混部</h4><p style="text-align:justify">Koordinator 已經支持了 K8s 生態內的在離線混部，然而在 K8s 生態外，仍有相當數量的大數據任務運行在傳統的 Hadoop YARN 之上。YARN 作為發展多年的大數據生態下的資源管理系統，承載了包括 MapReduce、Spark、Flink 以及 Presto 等在內的多種計算引擎。</p><p style="text-align:justify">Koordinator 社區會同來自阿里雲、小紅書、螞蟻金服的開發者們共同啓動了 Hadoop YARN 與 K8s 混部項目 Koordinator YARN Copilot，支持將 Hadoop NodeManager 運行在 kubernetes 集羣中，充分發揮不同類型負載錯峯複用的技術價值。Koordinator YARN Copilot 具備以下特點：</p><ul><li><strong>面向開源生態</strong></li></ul><p style="text-align:justify">基於 Hadoop YARN 開源版本，不涉及對 YARN 的侵入式改造；</p><ul><li><strong>統一資源優先級和 QoS 策略</strong></li></ul><p style="text-align:justify">YARN NM 使用 Koordinator 的 Batch 優先級資源，遵循 Koordinator QoS 管理策略；</p><ul><li><strong>節點級別的資源共享</strong></li></ul><p style="text-align:justify">Koordinator 提供的混部資源，既可被 K8s Pod 使用，也可被 YARN task 使用，不同類型的離線應用可運行在同一節點。</p><p style="text-align:center"><img src="https://pic2.zhimg.com/80/v2-ac0aa93eb176110201a885bb0d474c31_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">關於 Koordinator YARN Copilot 的詳細設計，以及在小紅書生產環境的使用情況，請參考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttp%253A%2F%2Fmp.weixin.qq.com%2Fs%253Fspm%253Da2c6h.13046898.publish-article.4.5bb96ffaCJHZTt%2526__biz%253DMzUzNzYxNjAzMg%253D%253D%2526mid%253D2247559704%2526idx%253D1%2526sn%253D3aed8968e50c85f7af7d7e79387b9365%2526chksm%253Dfae7e1d7cd9068c10df63fa4cc9362ee259bcb9c5a4f7d68439d6f9779bb31492b072142582e%2526scene%253D21%2523wechat_redirect" target="_blank">往期文章：《Koordinator 助力雲原生應用性能提升：小紅書混部技術實踐》</a>以及社區官方文檔<strong>[1]</strong>。</p><span id="OSC_h4_4"></span><h4>2. 引入 NUMA 拓撲對齊策略</h4><p style="text-align:justify">運行在 Kubernetes 集羣中的工作負載日益多樣化。尤其是在機器學習等領域，對於高性能計算資源的需求持續上升。在這些領域中，不僅需要大量 CPU 資源，還經常需要 GPU 和 RDMA 等其他高速計算資源配合使用；並且，為了獲得最佳的性能，這些資源往往需要在同一個 NUMA 節點，甚至同一個 PCIE 中。</p><p style="text-align:justify">Kubernetes 的 Kubelet 提供了 Topology Manager 來管理資源分配的 NUMA 拓撲，試圖在 Kubelet 的 Admission 階段從節點層面對齊多種資源的拓撲。然而，節點組件沒有調度器的全局視角以及為 Pod 選擇節點的時機，可能導致 Pod 被調度到無法滿足拓撲對齊策略的節點上，從而導致 Pod 由於 Topology Affinity 錯誤無法啓動。</p><p style="text-align:justify">為瞭解決這一問題，Koordinator 將 NUMA 拓撲選擇和對齊的時機放在中心調度器中，從集羣級別優化資源之間的 NUMA 拓撲。在本次發佈的版本中，Koordinator 將 CPU 資源（包含 Batch 資源）的 NUMA 感知調度和 GPU 設備的 NUMA 感知調度作為 alpha 功能支持，整套 NUMA 感知調度快速演進中。</p><p style="text-align:justify">Koordinator 支持用戶通過節點的 Label 配置節點上多種資源的 NUMA 拓撲對齊策略，可配置策略如下：</p><ul><li>None 是默認策略，不執行任何拓撲對齊。</li><li>BestEffort 表示節點不嚴格按照 NUMA 拓撲對齊來分配資源。只要節點的剩餘總量滿足 Pods 的需求，調度器總是可以將這樣的節點分配給 Pods。</li><li>Restricted 表示節點嚴格按照 NUMA 拓撲對齊來分配資源，即調度器在分配多個資源時必須只選擇相同的一個或多個 NUMA 節點，否則不應使用該節點；可以使用多個 NUMA 節點。例如，如果一個 Pod 請求 33C，並且每個 NUMA 節點有 32C，那麼它可以被分配使用兩個 NUMA 節點。如果這個 Pod 還需要請求 GPU/RDMA，那麼它需要位於與 CPU 相同的 NUMA 節點上。</li><li>SingleNUMANode 與 Restricted 類似，也是嚴格按照 NUMA 拓撲對齊，但與 Restricted 不同的是，Restricted 允許使用多個 NUMA 節點，而 SingleNUMANode 只允許使用一個 NUMA 節點。</li></ul><p style="text-align:justify">舉例，我們可以為 node-0 設置策略 SingleNUMANode：</p><pre><code>apiVersion: v1
kind: Node
metadata:
  labels:
    node.koordinator.sh/numa-topology-policy: "SingleNUMANode"
  name: node-0
spec:
  ...</code></pre><p style="text-align:justify">在生產環境中，用戶可能已經開啓了 Kubelet 的拓撲對齊策略，這個策略會由 koordlet 更新到 NodeResourceTopologyCRD 對象中的 TopologyPolicies 字段。當 Kubelet 的策略和用戶在 Node 上設置的策略相沖突時，以 Kubelet 策略為準。Koordinator 調度器基本採用與 Kubelet Topology Manager 相同的 NUMA 對齊策略語義，Kubelet 策略 SingleNUMANodePodLevel 和 SingleNUMANodeContainerLevel 被映射為 SingleNUMANode。</p><p style="text-align:justify">在為節點配置好 NUMA 對齊策略的前提下，調度器可以為每個 Pod 選出許多個符合條件的 NUMA Node 分配結果。Koordinator 當前支持 NodeNUMAResource 插件配置 CPU 和內存資源的 NUMA Node 分配結果打分策略，包括 LeastAllocated 和 MostAllocated，默認為 LeastAllocated 策略，資源支持配置權重。調度器最終將選擇得分最高的 NUMA Node 分配結果。如下例，我們配置 NUMA Node 分配結果打分策略為 MostAllocated：</p><pre><code>apiVersion: kubescheduler.config.k8s.io/v1beta2
kind: KubeSchedulerConfiguration
profiles:
  - pluginConfig:
      - name: NodeNUMAResource
        args:
          apiVersion: kubescheduler.config.k8s.io/v1beta2
          kind: NodeNUMAResourceArgs
          scoringStrategy:  # Here configure Node level scoring strategy
            type: MostAllocated
            resources:
              - name: cpu
                weight: 1
              - name: memory
                weight: 1
              - name: "kubernetes.io/batch-cpu"
                weight: 1
              - name: "kubernetes.io/batch-memory"
                weight: 1
          numaScoringStrategy: # Here configure NUMA-Node level scoring strategy
            type: MostAllocated
            resources:
              - name: cpu
                weight: 1
              - name: memory
                weight: 1
              - name: "kubernetes.io/batch-cpu"
                weight: 1
              - name: "kubernetes.io/batch-memory"
                weight: 1</code></pre><span id="OSC_h4_5"></span><h4>3. ElasticQuota 再進化</h4><p style="text-align:justify">為了充分地利用集羣資源、降低管控系統成本，用戶常常將多個租戶的負載部署在一個集羣中。在集羣資源有限的情況下，不同租戶之間必然會發生資源爭搶。有的租戶的負載可能一直被滿足，而有的租戶的負載一直無法得到執行。這就產生對公平性的訴求。配額機制是非常自然地保障租戶間公平性的方式，給每個租戶一個配額，租戶可以使用配額內的資源，超過配額的任務將不被調度和執行。然而，簡單的配額管理無法滿足租戶對雲的彈性期待。用戶希望除了配額之內的資源請求可以被滿足外，配額之外的資源請求也可以按需地被滿足。</p><p style="text-align:justify">在之前的版本中，Koordinator 複用了上游 ElasticQuota 的協議，允許租戶設置 Min 表達其一定要滿足的資源訴求，允許設置 Max 限制其最大可以使用的資源和表達在集羣資源不足的情況下對集羣剩餘資源的使用權重。另外，Koordinator 觀察到，一些租戶可能通過 Min 申請了配額，但是實際的任務申請可能並沒有充分利用該配額。由此，為了更近一步地提高資源利用率，Koordinator 允許租戶間借用/歸還資源。</p><p style="text-align:justify">除了提供彈性的配額機制滿足租戶按需訴求外，Koordinator 在 ElasticQuota 上增加註解將其組織成樹的結構，方便用戶表達樹形的組織架構。</p><p style="text-align:center"><img src="https://pic1.zhimg.com/80/v2-0f15360828d04b31ebe10218c08a8758_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">上圖是使用了 Koordinator 彈性配額的集羣中常見的 Quota 結構樹。Root Quota 是連接配額與集羣中實際資源之間的橋樑。在之前的設計中，Root Quota 只在調度器邏輯中存在，在本次發佈中，我們將 Root Quota 也通過 CRD 的形式暴露給用戶，用戶可以通過 koordinator-root-quota 這個 ElasticQuota CRD 查看 Root Quota 信息。</p><p style="text-align:justify"><strong>3.1 引入 Multi QuotaTree</strong></p><p style="text-align:justify">大型集羣中的節點的形態是多樣的，例如雲廠商提供的 ECS VM 會有不同的架構，常見的是 amd64 和 arm64，相同架構又會有不同種類的機型，而且一般會把節點按可用區劃分。不同類型的節點放到同一個 Quota Tree 中管理時，其特有的屬性將丟失，當用戶希望精細化管理機器的特有屬性時，當前的 ElasticQuota 顯得不夠精確。為了滿足用戶靈活的資源管理或資源隔離訴求，Koordinator 支持用戶將集羣中的資源劃分為多份，每一份由一個 Quota Tree 來管理，如下圖所示：</p><p style="text-align:center"><img src="https://pic4.zhimg.com/80/v2-e673d71606d710f3a447f0e504527d43_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">同時，為了幫助用戶簡化管理複雜性，Koordinator 在 v1.4.0 中，引入了 ElasticQuotaProfile 機制，用戶可以通過 nodeSelector 快速的將節點關聯到不同的 QuotaTree 中，如下實例所示：</p><pre><code>apiVersion: quota.koordinator.sh/v1alpha1
kind: ElasticQuotaProfile
metadata:
  labels:
    kubernetes.io/arch: amd64
  name: amd64-profile
  namespace: kube-system
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/arch: amd64 // 挑選 amd64 節點
  quotaName: amd64-root-quota   // 匹配的 root quota 名稱
---
apiVersion: quota.koordinator.sh/v1alpha1
kind: ElasticQuotaProfile
metadata:
  labels:
    kubernetes.io/arch: arm64   
  name: arm64-profile
  namespace: kube-system
spec:
  nodeSelector:
    matchLabels:
      kubernetes.io/arch: arm64  // 挑選 arm64 節點
  quotaName: arm64-root-quota    // 匹配的 root quota 名稱</code></pre><p style="text-align:justify">關聯好 QuotaTree 之後，用戶在每一個 QuotaTree 中與之前的 ElasticQuota 用法一致。當用戶提交 Pod 到對應的 Quota 時，當前仍然需要用戶完成 Pod NodeAffinity 的管理，以確保 Pod 運行在正確的節點上。未來，我們會增加一個特性幫助用戶自動管理 Quota 到 Node 的映射關係。</p><p style="text-align:justify"><strong>3.2 支持 non-preemptible</strong></p><p style="text-align:justify">Koordinator ElasticQuota 支持把 ElasticQuota 中 min 未使用的部分共享給其他 ElasticQuota 使用從而提高資源利用效率，但當資源緊張時，會通過搶佔機制把借用配額的 Pod 搶佔驅逐走拿回資源。</p><p style="text-align:justify">在實際生產環境中，有一些在線服務如果從其他 ElasticQuota 中借用了這部分額度，後續又發生了搶佔，是可能影響服務質量的。這類工作負載實質上是不能被搶佔的。</p><p style="text-align:justify">為了實現這個機制，Koordinator v1.4.0 引入了新的 API，用戶只需要在 Pod 上聲明 quota.scheduling.koordinator.sh/preemptible: false 表示這個 Pod 不可以被搶佔。</p><p style="text-align:justify">調度器調度時發現 Pod 聲明瞭不可搶佔，那麼此類 Pod 的可用配額的上限不能超過 min，所以這裏也需要注意的是，啓用該能力時，一個 ElasticQuota 的 min 需要設置的合理，並且集羣內有相應的資源保障。</p><p style="text-align:justify">這個特性不會破壞原有的行為。</p><pre><code>apiVersion: v1
kind: Pod
metadata:
  name: pod-example
  namespace: default
  labels:
    quota.scheduling.koordinator.sh/name: "quota-example"
    quota.scheduling.koordinator.sh/preemptible: false
spec:
...</code></pre><p style="text-align:justify"><strong>3.3 其它改進</strong></p><p style="text-align:justify">1. Koordinator Scheduler 過去支持跨 Namespace 使用同一個 ElasticQuota 對象，但有一些場景下，希望只被一個或者多個有限的 Namespace 可以共享同一個對象，為了支持這個場景，用戶可以在 ElasticQuota 上增加 annotation quota.scheduling.koordinator.sh/namespaces，對應的值為一個 JSON 字符串數組。</p><p style="text-align:justify">2. 性能優化：過去的實現中，當 ElasticQuota 發生變化時，ElasticQuota 插件會重建整棵 Quota 樹，在 v1.4.0 版本中做了優化。</p><p style="text-align:justify">3. 支持忽略 Overhead：當 Pod 使用一些安全容器時，一般是在 Pod 中聲明 Overhead 表示安全容器自身的資源開銷，但這部分資源成本最終是否歸於終端用戶承擔取決於資源售賣策略。當期望不用用戶承擔這部分成本時，那麼就要求 ElaticQuota 忽略 overhead。在 v1.4.0 版本中，可以開啓 featureGate ElasticQuotaIgnorePodOverhead 啓用該功能。</p><span id="OSC_h4_6"></span><h4>4. CPU 歸一化</h4><p style="text-align:justify">隨着 Kubernetes 集羣中節點硬件的多樣化，不同架構和代數的 CPU 之間性能差異顯著。因此，即使 Pod 的 CPU 請求相同，實際獲得的計算能力也可能大不相同，這可能導致資源浪費或應用性能下降。CPU 歸一化的目標是通過標準化節點上可分配 CPU 的性能，來保證每個 CPU 單元在 Kubernetes 中提供的計算能力在異構節點間保持一致。</p><p style="text-align:justify">為瞭解決該問題，Koordinator 在 v1.4.0 版本中實現了一套支持 CPU 歸一化機制，根據節點的資源放大策略，調整節點上可分配的 CPU 資源數量，使得集羣中每個可分配的 CPU 通過縮放實現算力的基本一致。整體的架構如下圖所示：</p><p style="text-align:center"><img src="https://pic4.zhimg.com/80/v2-b0e335f164d52e400107a5294a2a7dbb_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">CPU 歸一化分為兩個步驟：</p><p style="text-align:justify">1. CPU 性能評估，計算不同 CPU 的性能基準，可以參考工業級性能評測標準 SPEC CPU<strong>[2]</strong>，這部分 Koordinator 項目未提供；</p><p style="text-align:justify">2. 配置 CPU 歸一化係數到 Koordinator，調度系統基於歸一化係數來調度資源，這部分 Koordinator 提供。</p><p style="text-align:justify">將 CPU 歸一化比例信息配置到 koord-manager 的 slo-controller-config 中，配置示例如下：</p><pre><code>apiVersion: v1
kind: ConfigMap
metadata:
  name: slo-controller-config
  namespace: koordinator-system
data:
  cpu-normalization-config: |
    {
      "enable": true,
      "ratioModel": {
         "Intel(R) Xeon(R) Platinum 8269CY CPU @ 2.50GHz": {
           "baseRatio": 1.29,
           "hyperThreadEnabledRatio": 0.82,
           "turboEnabledRatio": 1.52,
           "hyperThreadTurboEnabledRatio": 1.0
         },
         "Intel Xeon Platinum 8369B CPU @ 2.90GHz": {
           "baseRatio": 1.69,
           "hyperThreadEnabledRatio": 1.06,
           "turboEnabledRatio": 1.91,
           "hyperThreadTurboEnabledRatio": 1.20
         }
      }
    }
  # ...</code></pre><p style="text-align:justify">對於配置了 CPU 歸一化的節點，Koordinator 通過 Webhook 攔截 Kubelet 對 Node.Status.Allocatable 的更新以實現 CPU 資源的縮放，最終在節點上呈現出歸一後的 CPU 資源可分配量。</p><span id="OSC_h4_7"></span><h4>5. 改進的重調度防護策略</h4><p style="text-align:justify">Pod 遷移是一個複雜的過程，涉及審計、資源分配、應用啓動等步驟，並且與應用升級、擴展場景以及集羣管理員的資源操作和維護操作混合在一起。因此，如果同時有大量 Pods 正在進行遷移，可能會對系統的穩定性產生影響。此外，如果同一工作負載的許多 Pods 同時被遷移，也會影響應用的穩定性。此外，如果同時遷移多個作業中的 Pods，可能會造成驚羣效應。因此，我們希望順序處理每個作業中的 Pods。</p><p style="text-align:justify">Koordinator 在之前提供的 PodMigrationJob 功能中已經提供了一些防護策略來解決上述問題。在 v1.4.0 版本中，Koordinator 將之前的防護策略增強為仲裁機制。當有大量的 PodMigrationJob 可以被執行時，由仲裁器通過排序和篩選，來決定哪些 PodMigrationJob 可以得到執行。</p><p style="text-align:justify">排序過程如下：</p><ul><li>根據遷移開始時間與當前時間的間隔進行排序，間隔越小，排名越高。</li><li>根據 PodMigrationJob 的 Pod 優先級進行排序，優先級越低，排名越高。</li><li>按照工作負載分散 Jobs，使得同一作業中的 PodMigrationJobs 靠近。</li><li>如果作業中已有 Pods 正在遷移，則該 PodMigrationJob 的排名更高。</li></ul><p style="text-align:justify">篩選過程如下：</p><ul><li>根據工作負載、節點、命名空間等對 PodMigrationJob 進行分組和篩選。</li><li>檢查每個工作負載中正在運行狀態的 PodMigrationJob 數量，達到一定閾值的將被排除。</li><li>檢查每個工作負載中不可用副本的數量是否超出了最大不可用副本數，超出的將被排除。</li><li>檢查目標 Pod 所在節點上正在遷移的 Pod 數量是否超過單個節點的最大遷移量，超出的將被排除。</li></ul><span id="OSC_h4_8"></span><h4>6. 冷內存上報</h4><p style="text-align:justify">為提升系統性能，內核一般儘可能不讓應用程序請求的頁面緩存空閒，而是儘可能將其分配給應用程序。雖然內核分配了這些內存，但是應用可能不再訪問，這些內存被稱為冷內存。</p><p style="text-align:justify">Koordinator 在 1.4 版本中引入冷內存上報功能，主要為未來冷內存回收功能打下基礎。冷內存回收主要用於應對兩個場景：</p><ul><li>對於標準的 Kubernetes 集羣，當節點內存水位過高時，突發的內存請求容器導致系統直接內存回收，操作系統的直接內存回收觸發時會影響已經運行容器的性能，如果回收不及時極端場景可能觸發整機 oom。保持節點內存資源的相對空閒，對提升運行時穩定性至關重要。</li><li>在混部場景中，高優先級應用程序請求但未使用的資源可以被低優先級應用程序回收利用。對內存而言，操作系統未回收的內存，是不能被 Koordinator 調度系統看到的。為了提高混部資源效率，回收容器未使用的內存頁面可以提高整機的資源利用效率。</li></ul><p style="text-align:justify">Koordlet 在 Collector Plugins 中添加了一個冷頁面回收器，用於讀取由 kidled（Anolis 內核）、kstaled（Google）或 DAMON（Amazon）導出的 cgroup 文件 memory.idle_stat。該文件包含頁面緩存中的冷頁面信息，並存在於 memory 的每個層次結構中。目前 koordlet 已經對接了 kidled 冷頁面收集器並提供了其他冷頁面收集器接口。</p><p style="text-align:justify">在收集冷頁面信息後，冷頁面回收器將把收集到的指標（例如節點、Pod 和容器的熱頁面使用量和冷頁面大小）存到 metriccache 中，最後該數據會被上報到 NodeMetric CRD 中。</p><p style="text-align:justify">用戶可以通過 NodeMetric 啓用冷內存回收和配置冷內存收集策略，當前提供了 usageWithHotPageCache、usageWithoutPageCache 和 usageWithPageCache 三種策略，更多的細節詳見社區設計文檔<strong>[3]</strong>。</p><span id="OSC_h4_9"></span><h4>7. 非容器化應用的 QoS 管理</h4><p style="text-align:justify">在企業容器化過程中，除了已經運行在 K8s 上的應用，可能還會存在一些非容器化的應用運行在主機上。為了更好兼容企業在容器化過程這一過渡態，Koordinator 開發了節點資源預留機制，可以在尚未容器化的應用預留資源並賦予特定的 QoS 特性。與 Kubelet 提供的資源預留配置不同，Koordinator 主要目標是解決這些非容器化應用與容器化應用運行時的 QoS 問題，整體的方案如下圖所示：</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-5edba11d4ab8bac0dcef2bc16d12d4f6_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">目前，應用程序需要按照規範將進程啓動到對應的 cgroup 中，Koordinator 未實現自動的 cgroup 搬遷工具。針對宿主機非容器化應用，支持 QoS 如下：</p><ul><li><strong>LS (Latency Sensitive)</strong><ul><li>CPU QoS(Group Identity)：應用按照規範將進程運行在 cgroup 的 cpu 子系統中，koordlet 根據 CPU QoS 的配置 resource-qos-config 為其設置 Group Identity 參數；</li><li>CPUSet Allocation：應用按照規範將進程運行在 cgroup 的 cpu 子系統中，koordlet 將為其設置 cpu share pool 中的所有 CPU 核心。</li></ul></li><li><strong>BE (Best-effort)</strong><ul><li>CPU QoS(Group Identity)：應用按照規範將進程運行在 cgroup 的 cpu 子系統中，koordlet 根據 CPU QoS 的配置為其設置 Group Identity 參數。</li></ul></li></ul><p style="text-align:justify">關於宿主機應用 QoS 管理的詳細設計，可以參考社區文檔<strong>[4]</strong>，後續我們將陸續增加其他 QoS 策略對宿主機應用的支持。</p><span id="OSC_h4_10"></span><h4>8. 其它特性</h4><p style="text-align:justify">除了上述新特性和功能增強外，Koordinator 在 v1.4.0 版本還做了一些如下的 bugfix 和優化：</p><ul><li><strong>RequiredCPUBindPolicy</strong></li></ul><p style="text-align:justify">精細化 CPU 編排支持 Required 的 CPU 綁定策略配置，表示嚴格按照指定的 CPU 綁定策略分配 CPU，否則調度失敗。</p><ul><li><strong>CICD</strong></li></ul><p style="text-align:justify">Koordinator 社區在 v1.4.0 提供了一套 e2e 測試的 Pipeline；提供了 ARM64 鏡像。</p><ul><li><strong>Batch 資源計算策略優化</strong></li></ul><p style="text-align:justify">支持了 maxUsageRequest 的計算策略，用於更保守地超賣高優資源；優化了節點上短時間大量 Pod 啓停時，Batch allocatable 被低估的問題；完善了對 hostApplication、thirdparty allocatable、dangling pod used 等特殊情況的考慮。</p><ul><li><strong>其它</strong></li></ul><p style="text-align:justify">利用 libpfm4&amp;perf group 優化 CPI 採集、SystemResourceCollector 支持自定義的過期時間配置、BE Pod 支持根據 evictByAllocatable 策略計算 CPU 滿足度、Koordlet CPUSetAllocator 修復了對於 LS 和 None Qos 的 Pod 的過濾邏輯、RDT 資源控制支持獲得 sandbox 容器的 task IDs 等。</p><p style="text-align:justify">通過 v1.4.0 Release<strong>[5]</strong>頁面，可以看到更多包含在 v1.4.0 版本的新增功能。</p><span id="OSC_h3_11"></span><h3>未來計劃</h3><p style="text-align:justify">在接下來的版本中，Koordinator 目前規劃了以下功能：</p><ul><li><strong>Core Scheduling</strong></li></ul><p style="text-align:justify">在運行時側，Koordinator 開始探索下一代 CPU QoS 能力，通過利用 Linux Core Scheduling 等內核機制，增強的物理核維度的資源隔離，降低混部的安全性風險，相關工作詳見 Issue #1728<strong>[6]</strong>。</p><ul><li><strong>設備聯合分配</strong></li></ul><p style="text-align:justify">在 AI 大模型分佈式訓練場景中，不同機器 GPU 之間通常需要通過高性能網卡相互通信，且 GPU 和高性能網卡就近分配的時候性能更好。Koordinator 正在推進支持多種異構資源的聯合分配，目前已經在協議上和調度器分配邏輯上支持聯合分配；單機側關於網卡資源的上報邏輯正在探索中。</p><p style="text-align:justify">更多信息，敬請關注 Milestone v1.5.0<strong>[7]</strong>。</p><span id="OSC_h3_12"></span><h3>結語</h3><p style="text-align:justify">最後，我們十分感謝 Koordinator 社區的所有貢獻者和用戶，是您們的積極參與和寶貴意見讓 Koordinator 不斷進步。我們期待您繼續提供反饋，並歡迎新的貢獻者加入我們的行列。</p><p style="text-align:justify"><strong>相關鏈接：</strong></p><p style="text-align:justify">[1] 社區官方文檔</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fkoordinator.sh%2Fzh-Hans%2Fdocs%2Fnext%2Fdesigns%2Fkoordinator-yarn%2F%253Fspm%253Da2c6h.13046898.publish-article.5.5bb96ffaCJHZTt" target="_blank">https://koordinator.sh/zh-Hans/docs/next/designs/koordinator-yarn/</a></em></u></p><p style="text-align:justify">[2] SPEC CPU</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fwww.spec.org%2Fcpu2017%2F%253Fspm%253Da2c6h.13046898.publish-article.6.5bb96ffaCJHZTt" target="_blank">https://www.spec.org/cpu2017/</a></em></u></p><p style="text-align:justify">[3] 設計文檔</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fkoordinator-sh%2Fkoordinator%2Fblob%2Fmain%2Fdocs%2Fproposals%2Fkoordlet%2F20230728-support-cold-memory-compute.md%253Fspm%253Da2c6h.13046898.publish-article.7.5bb96ffaCJHZTt%2526file%253D20230728-support-cold-memory-compute.md" target="_blank">https://github.com/koordinator-sh/koordinator/blob/main/docs/proposals/koordlet/20230728-support-cold-memory-compute.md</a></em></u></p><p style="text-align:justify">[4] 社區文檔</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fkoordinator.sh%2Fzh-Hans%2Fdocs%2Fnext%2Fuser-manuals%2Fhost-application-qos%2F%253Fspm%253Da2c6h.13046898.publish-article.8.5bb96ffaCJHZTt" target="_blank">https://koordinator.sh/zh-Hans/docs/next/user-manuals/host-application-qos/</a></em></u></p><p style="text-align:justify">[5] v1.4.0 Release</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fkoordinator-sh%2Fkoordinator%2Freleases%2Ftag%2Fv1.4.0%253Fspm%253Da2c6h.13046898.publish-article.9.5bb96ffaCJHZTt%2526file%253Dv1.4.0" target="_blank">https://github.com/koordinator-sh/koordinator/releases/tag/v1.4.0</a></em></u></p><p style="text-align:justify">[6] Issue #1728</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fkoordinator-sh%2Fkoordinator%2Fissues%2F1728%253Fspm%253Da2c6h.13046898.publish-article.10.5bb96ffaCJHZTt" target="_blank">https://github.com/koordinator-sh/koordinator/issues/1728</a></em></u></p><p style="text-align:justify">[7] Milestone v1.5.0</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fkoordinator-sh%2Fkoordinator%2Fmilestone%2F14%253Fspm%253Da2c6h.13046898.publish-article.11.5bb96ffaCJHZTt" target="_blank">https://github.com/koordinator-sh/koordinator/milestone/14</a></em></u></p><p style="text-align:justify"><em>作者：喬普</em></p><p style="text-align:justify"><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.aliyun.com%2Farticle%2F1423263%3Futm_content%3Dg_1000390303" target="_blank">原文鏈接</a></strong></p><p style="text-align:justify"><strong>本文為阿里雲原創內容，未經允許不得轉載。</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 23 Feb 2024 06:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/yunqi/blog/11044520</guid>
            <link>https://my.oschina.net/yunqi/blog/11044520</link>
            <author>
                <![CDATA[阿里云云棲號]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[為什麼 Chromebook 鍵盤採用小寫字母？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Chromebook 鍵盤上的所有按鍵都是小寫字母。自 2010 年推出第一款 Chromebook 原型機 CR-48 以來，他們就一直如此。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fdbc3ca95eb510cf632ffad2f3b12b6bf02.png" referrerpolicy="no-referrer"></p><p>谷歌最近<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Fproducts%2Fchromebooks%2Fchromebooks-lowercase-keyboard%2F" target="_blank">解釋</a></u>了他們對「全小寫鍵盤」的設計思路。當時參與早期 Chromebook 設計的 ChromeOS 團隊高級主管 Alexander Kuscher 認為可以對按鍵進行精簡，從而打造一款易於使用、對用戶友好的鍵盤。</p><p>Chromebook 團隊高級產品經理 Donny Reynolds 提出：</p><blockquote><p>我們已經習慣了鍵盤上的大寫字母，但如果你進入一個文本開始編寫文檔，並開始在傳統鍵盤上鍵入，按鍵就會與屏幕上顯示的不一致，對吧？你按下大寫'D'鍵，但出現的卻是小寫'd'。</p></blockquote><p>因此，他們決定不再為 Chromebook 鍵盤印上大寫字母——確保用戶「所見即所得」。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-f381533dbaf1652c58fb82ffd2f52aa40f7.png" referrerpolicy="no-referrer"></p><p>其實當時許多手機和平板電腦已經配備了簡化的現代鍵盤——Android 手機在 2008 年首次亮相時就採用了小寫鍵盤。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e678bff4959ef28477371fd4d648545eed9.png" referrerpolicy="no-referrer"></p><p><em>早在 2008 年初代 G1 推出時，Android 就開啓了小寫鍵盤革命</em>。</p><p>因此 Donny Reynolds 表示：「當我們開始製造 Chromebook 時，我們自問‘計算機如何才能與眾不同，而且沒有幾十年來的包袱？看起來更友好是我們計算機設計的一個重要組成部分，我認為小寫鍵盤確實已經成為幾乎自己的標誌性品牌，以幫助實現這一目標。」</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 23 Feb 2024 04:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280052/chromebooks-lowercase-keyboard</guid>
            <link>https://www.oschina.net/news/280052/chromebooks-lowercase-keyboard</link>
            <author>
                <![CDATA[來源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
