<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 18 Jan 2024 06:14:04 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[智谱 AI 推出新一代基座模型 GLM-4，发起大模型开源基金]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2024 年 01 月 16 日，在「智谱 AI 技术开放日 (Zhipu DevDay)」上，智谱 AI 发布新一代基座大模型 GLM-4，支持 128K 的上下文窗口长度，单次提示词能处理的文本可达 300 页，文生图和多模态理解得到增强，支持处理 Excel、PDF、PPT 等格式的文件，可自动调用代码解释器进行复杂的方程或微积分求解。</p><p><img src="https://oscimg.oschina.net/oscnet/up-ec790242fcd97c4ae3b363227a23e2c4e15.png" referrerpolicy="no-referrer"></p><p>此外还发布了 All Tools、GLMs、MaaS API、大模型科研基金、大模型开源基金以及「Z 计划」创业基金等内容。</p><p>其中「大模型开源基金」包括三个「一千」：</p><ul><li>第一个「一千」，是 1000 张卡。智谱 AI 将为大模型开源社区提供一千张卡，助力开源开发；</li><li>第二个「一千」，是 1000 万人民币。智谱 AI 将提供 1000 万元的现金用来支持与大模型相关的开源项目。</li><li>第三个「一千」是 1000 亿 tokens。智谱 AI 将为优秀的开源开发者提供 1000 亿免费 API tokens。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-59f5243472f2ad88a4dcdaa6399e4738afc.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 06:09:02 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276067</guid>
            <link>https://www.oschina.net/news/276067</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[操作教程｜JumpServer 堡垒机结合 Ansible 进行批量系统初始化]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start"><br> 运维人员常常需要对资产进行系统初始化的操作，而初始化服务器又是一项繁琐的工作，需要花费运维人员大量的时间和精力。为了提高效率，许多组织会使用自动化工具和脚本来简化这些任务。自动化工具的运用可以大幅降低运维人员的工作量，同时也能有效规避出错的风险。</p><p style="color:#000000; text-align:start">Ansible 作为近年来十分火爆的一款开源运维自动化工具，可以帮助管理人员简化系统配置、应用部署和任务执行等操作。同时，Ansible 也可以结合 JumpServer 作为批量资产运维工具，进行批量系统初始化操作，能够很好地满足广大运维人员的实际需求。</p><p style="color:#000000; text-align:start">本文将介绍<strong>通过 JumpServer 内置的 Ansible 模块批量初始化 Linux 服务器</strong>的具体方法，希望对广大企业的运维人员提高运维管理效率有所帮助。</p><p style="color:#000000; text-align:start"><em><strong>一、Ansible 简介</strong></em></p><p style="color:#000000; text-align:start">Ansible 是自动化运维领域最为常用的工具之一。它基于 Python 语言开发，集合了众多运维工具（例如 Puppet、Cfengine、Chef、Func、Fabric）的优点，操作简单，功能强大，支持批量系统配置、批量程序部署、批量运行命令等功能。</p><p style="color:#000000; text-align:start">通过 Ansible 实现运维自动化，能够提高运维工程师的工作效率，减少人为失误。Ansible 本身集成了非常丰富的模块可以实现各种管理操作，并且能够与多个平台进行交互对接。</p><p style="color:#000000; text-align:start">Playbook 模式（即剧本模式）是 Ansible 的主要管理方式，也是 Ansible 功能强大的关键所在。Playbook 模式是通过多个 Task（即任务）集合来完成某类功能的，例如 Web 服务的安装部署、数据库服务器的批量备份等，可以简单地把 Playbook 理解为通过组合多条「<em>ad-hoc</em>」操作的配置文件。</p><p style="color:#000000; text-align:start"><img alt="" height="607" src="https://oscimg.oschina.net/oscnet/up-ec97596bbe3c49a8c994571701019aeee95.png" width="1080" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><em><strong>二、实施方案</strong></em></p><p style="color:#000000; text-align:start">JumpServer 作为运维安全审计管理平台，本身内置 Ansible 模块，可以实现对服务器等资产的安全管控。用户通过 JumpServer 的认证和授权功能，获得相应权限后才能使用 Ansible 对目标主机进行操作，确保了操作的安全性。</p><p style="color:#000000; text-align:start">同时，Ansible 可以通过 JumpServer 来管理和执行各种任务，例如配置管理、软件部署、批量命令执行等，简化了操作流程。<strong>结合 Ansible 和 JumpServer 堡垒机，可以实现对服务器的中心化管理，提高系统的安全性和运维效率，提升企业的运维管理能力。</strong></p><p style="color:#000000; text-align:start"><strong><span style="color:#28937c">1. 准备工作</span></strong></p><p style="color:#000000; text-align:start"><span style="color:#3e3e3e">■</span><span>&nbsp;</span>准备一台机器，部署 JumpServer 运维安全审计系统；</p><p style="color:#000000; text-align:start">■ 准备若干台 Linux 服务器，用于测试批量系统初始化操作是否成功。</p><p style="color:#000000; text-align:start"><strong><span style="color:#279a81">2. 创建 Playbook 作业</span></strong></p><p style="color:#000000; text-align:start">■ 登录 JumpServer 堡垒机，进入工作台界面；</p><p style="color:#000000; text-align:start"><img alt="" height="1474" src="https://oscimg.oschina.net/oscnet/up-82354437e26c9b76f3c5992f00b0bbf3d3f.png" width="2936" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 1 登录 JumpServer 堡垒机</span></p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-abf08146ebcada9c11197b445ff8a2a98a3.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 2 进入 JumpServer 工作台界面</span></p><p style="color:#000000; text-align:start">■ 在 JumpServer 中选择「作业中心」→「模版管理」→「Playbook 管理」，创建 Playbook 模板；</p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-ff732debcb7b6a9d2fb42ba36cc207470c8.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 3 创建 Playbook 模板</span></p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-dfdbd4fb2f6ab209505de32fde75836a7b2.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 4 创建模板详情</span></p><p style="color:#000000; text-align:start">■ 创建完成之后，管理页面会出现新创建的模板信息，并填写模板内容；</p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-d34497b1cbbb7896422ff3d523b0a76dd73.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 5 新创建的模板</span></p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-6a04c7fdc288b0184cf3eb08899e775994e.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 6 填写模板内容</span></p><p style="color:#000000; text-align:start">Playbook 具体内容如下：</p><pre><code>[root@v3 ~]# cat main.yml
## write your playbook here
---
- hosts: all
  vars:
  remote_user:
 
  tasks:
  - name: 关闭防火墙
    service: name=firewalld state=stopped enabled=no
  
  - name: 关闭 selinux
    lineinfile:
      dest: /etc/selinux/config
      regexp: "^SELINUX="
      line: "SELINUX=disabled"
   
  - name: 即时生效
    shell: setenforce 0 ; swapoff -a
  
  - name: 关闭 swap
    lineinfile:
      dest: /etc/fstab
      regexp: ".*swap"
      line: ""
  
  - name: 拷贝时区
    copy: src=/usr/share/zoneinfo/Asia/Shanghai dest=/etc/localtime
  
  - name: 更新源
    shell: yum repolist
   
  - name: 安装 lrzsz
    yum: name=lrzsz 
  
  - name: 安装 net-tools
    yum: name=net-tools 
  
  - name: 安装 wget
    yum: name=wget 
  
  - name: 安装 gcc
    yum: name=gcc 
  
  - name: 安装开发者工具库
    yum: name='@Development Tools'
  
  - name: 更改内核最大连接数
    copy: src=/etc/security/limits.conf dest=/etc/security/limits.conf 
  
  - name: 设置 java 连接数
    shell: sed -i '$a vm.max_map_count=262144' /etc/sysctl.conf ; sysctl -p</code></pre><p style="color:#000000; text-align:start">■ 在 JumpServer 中选择「作业中心」→「作业管理」，创建 Playbook 作业；</p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-3a1e53325ee0a2f9877ccd8049c04b00aa1.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 7 创建 Playbook 作业</span></p><p style="color:#000000; text-align:start">■ 按照如下图示填写所需的信息；</p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-0806c230c209c2edb080e5d151d71622652.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 8 填写作业信息</span></p><p style="color:#000000; text-align:start">■ Playbook 作业创建成功后，运行 Playbook 作业进行测试；</p><p style="color:#000000; text-align:start"><img alt="" height="924" src="https://oscimg.oschina.net/oscnet/up-b412d1b6ae03bcb0fda9a3e8a2b718e7267.png" width="1872" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 9 运行新创建的作业</span></p><p style="color:#000000; text-align:start">■ 运行成功。在 JumpServer 中创建 Playbook 模板后，如果需要新增服务器，运维人员只需要创建一个 Playbook 作业即可快速完成资产的系统初始化，轻松解放双手。</p><p style="color:#000000; text-align:start"><img alt="" height="600" src="https://oscimg.oschina.net/oscnet/up-9e4dc8f829c9be4ddaecbc8f611080d5aa1.png" width="900" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 10 成功执行 Playbook 作业</span></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 03:45:30 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276059</guid>
            <link>https://www.oschina.net/news/276059</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[红帽正在开发 AI 工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Red Hat 工程师 Jiri Kyjovsky&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.fedoraproject.org%2Farchives%2Flist%2Fdevel%40lists.fedoraproject.org%2Fthread%2FMHUCYUJS7VZBESFYTALNAVPARK4RHPQO%2F" target="_blank">透露称</a></u>，他们正在开发一款名为"<strong>Log Detective</strong>"的 AI 工具，通过人工智能模型来帮助分析 RPM 包构建失败的原因。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4011afdd7b7b4264fa60f8d2096ddb05293.png" referrerpolicy="no-referrer"></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flog-detective.com%2F%23about" target="_blank">https://log-detective.com/</a></u></em></p><p>该工具将利用 AI 模型来识别和解释构建失败，并提供简单的建议以解决问题。Log Detective 的目标是使 RPM 打包人员更容易找出构建失败的原因。他们正在训练 AI 模型，以便它能够理解 RPM 构建日志，并用简单的语言解释失败原因，并提供修复建议。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flog-detective.com%2F" target="_blank">Log Detective 官网写道</a>：</p><blockquote><p>每个构建都会产生数千行输出，分割在多个日志文件中。相关的错误消息可能在任何地方。这就像大海捞针一样。</p><p>经验丰富的打包者有一种直觉，错误消息最有可能出现在哪里，但无论如何，这个过程都很乏味。新手则常常被复杂性所淹没，完全错过错误消息。</p><p>Log Detective 通过训练 AI 模型来理解 RPM 构建日志，并用简单的语言解释错误，提供修复方法的建议，开发者根本不需要打开日志。</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 03:34:01 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276057/red-hat-ai-log-detective</guid>
            <link>https://www.oschina.net/news/276057/red-hat-ai-log-detective</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linus Torvalds 重新开始为 Linux 6.8 合并新代码]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>上周末，Linus Torvalds 所居住的俄勒冈州波特兰地区<u><a href="https://www.oschina.net/news/275878/linux-6-8-merge-window-hiatus">遭遇严重冬季风暴</a></u>，导致互联网和电力中断。因此在 Linux 6.8 合并窗口期间，Linus 的 Git 合并工作被迫中断近五天。但从内核仓库的最新动态来看，合并工作现已重新启动。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-597e98686d727d741b06dac623483c6803b.png" referrerpolicy="no-referrer"></p><p>Linus Torvalds 今天在 social.kernel.org 上<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsocial.kernel.org%2Fusers%2Ftorvalds" target="_blank">发布的最后一条消息称</a></u>，他的第五天"休假"正在进行，他所在地区希望今晚之前恢复供电，尽管昨天也有过类似的承诺，但没有实现。但在这不不久后，他开始为 Linux 6.8 合并新代码：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-7160aba63cd79c783f54e5bd0d0f2f11d6a.png" referrerpolicy="no-referrer"></p><p>到目前为止，他还没有在 Linux 内核邮件列表上宣布是否需要延长合并窗口，或者因为 4~5 天的停机时间而做其他改动，但至少内核树上有了新代码。</p><p>Linux 6.8 将带来许多新功能。如果原计划不变，Linux 6.8-rc1 应该会在本周日发布，标志着合并窗口的结束，而稳定版 6.8 内核应该会在 3 月中旬发布。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276056/linux-6-8-merges-resume</guid>
            <link>https://www.oschina.net/news/276056/linux-6-8-merges-resume</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[网易有道自研知识库问答引擎 QAnything 开源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>网易有道<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FkFOqYqhpy0Q4OvvGul-3qA" target="_blank">宣布</a>自研的知识库问答引擎 QAnything 正式开源：Q 是 question，A 是 answer，QAnything 的目标在于「万物皆可问」。</p><p>除了可以调用云端大模型服务，还支持纯本地部署。系统支持 word、ppt、excel、pdf、图片等多种文档格式，直接导入进去即可像"ChatGPT"一样问答。</p><p><img alt="" height="443" src="https://oscimg.oschina.net/oscnet/up-dd1c3f39b8916876b15ad0cc25aeaa24bfa.png" width="500" referrerpolicy="no-referrer"></p><p>（QAnything 系统架构图）</p><p>QAnything 的主要原理是基于检索增强的生成（Retrieval Augmented Generation，简称 RAG）。作为有道自研的 RAG 引擎，QAnything 结合了用户私有数据和大模型的优势——用户的任何内容，以任意的形式存在，比如各种格式的文档，音频，数据库等，都可以在 QAnything 的支持下，变成可以针对其内容进行问答的使用方式，通过这个技术框架用户可以很方便地搭建自己的智能知识助手。</p><p>值得一提的是，QAnything 是一套完整的 RAG 系统，包括专门优化的自研的 embedding 和 rerank 模型，微调后的 LLM，优化后的推理代码，向量数据库，以及一个立即上手可用的前端。所有的算法模型（包括 7B 大模型+embedding/rerank+OCR）占用显存不超过 16G。</p><p>如今，QAnything 已在有道翻译文档问答、有道速读及有道内部业务的客服系统等多个产品中进行了应用。</p><p><img height="225" src="https://oscimg.oschina.net/oscnet/up-6945d43fa219cdaa7b5009ef9ffeb614e4e.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">公告表示，目前 QAnything 项目还在不断迭代，欢迎大家参与开发，并给予更多反馈。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276054</guid>
            <link>https://www.oschina.net/news/276054</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rufus 4.4 发布，开源 USB 启动盘制作工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">Rufus 4.4 已发布，此版本修复了此前版本中存在的诸多 Bug，进一步增强了兼容性，并带来了多项改进。</span></p><blockquote><p>Rufus 是一款格式化和创建 USB 启动盘的辅助工具，适用于以下场景：</p><ul><li>需要将可引导 ISO (Windows、Linux、UEFI 等) 刻录到 USB 安装媒介的情况</li><li>需要处理未安装操作系统的设备的情况</li><li>需要在 DOS 环境下刷写 BIOS 或其他固件的情况</li><li>需要运行低级工具的情况</li></ul></blockquote><p>4.4&nbsp;新增 GRUB 2.12（Unix 操作系统的引导加载器）支持，并针对某些 UEFI bootloaders 中包含损坏符号链接的 Linux 发行版，提供变通解决方案。此外还修复了处理 .FFU 镜像（即保存镜像时）时的崩溃问题，并不再列出 Microsoft Dev Drives（这是为开发人员相关任务和工作流程优化的特殊 Windows 11 分区），此外改善了对 SDCX 读卡器的支持。</p><p>主要变化：</p><ul><li>为使用损坏的符号链接作为 UEFI 引导加载器的发行版（如 Linux Mint 21.3）添加变通方式。</li><li>添加对 GRUB 2.12 的支持。</li><li>修复保存 .ffu 镜像时遇到崩溃问题。</li><li>修复某些 Linux ISO 在 MBR 模式下无法添加 UEFI:NTFS 分区的问题。</li><li>防止列出 Microsoft Dev Drives。</li><li>改善对 SDXC 读卡器的支持。</li><li>通过将数据区域的起点对齐至 1 MB，改进大型 FAT32 格式化。</li></ul><p>下载地址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frufus.ie%2Fzh%2F" target="_blank">https://rufus.ie/zh/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276053/rufus-4-4-released</guid>
            <link>https://www.oschina.net/news/276053/rufus-4-4-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[WeChatMsg - 开源微信聊天记录管理工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>WeChatMsg 是一款开源的微信聊天管理工具。</p><div><a href="https://memotrace.lc044.love/"><img height="240" src="https://memotrace.lc044.love/img/logo%20-%20%E5%89%AF%E6%9C%AC.png" referrerpolicy="no-referrer"></a></div><blockquote><div>&nbsp;</div><h2>前言</h2><div><p>我深信有意义的不是微信，而是隐藏在对话框背后的一个个<strong>深刻故事</strong>。未来，每个人都能拥有 AI 的陪伴，而你的数据能够赋予它有关于你过去的珍贵记忆。我希望每个人都有将自己的生活痕迹👨‍👩‍👦👚🥗🏠️🚴🧋⛹️🛌🛀留存的权利，而不是遗忘💀。</p><p><strong>所以《留痕》</strong></p></div></blockquote><h2 style="text-align:start">🍉功能</h2><ul><li>还原微信聊天界面
<ul><li>🗨文本✅</li><li>🏝图片✅</li><li>🐻‍❄️表情包✅</li><li>拍一拍等系统消息✅</li></ul></li><li>导出聊天记录
<ul><li>sqlite 数据库✅</li><li>HTML(文本、图片、视频、表情包、语音、文件、系统消息)✅</li><li>CSV 文档✅</li><li>TXT 文档✅</li><li>Word 文档✅</li></ul></li><li>分析聊天数据，做成可视化年报 (急需前端大佬提供优质模板)</li><li>🔥<strong>项目持续更新中</strong></li><li>开发计划
<ul><li>自主选择年度报告年份</li><li>一键导出全部表情包、文件、图片、视频、语音</li><li>合并多个备份数据</li><li>批量导出数据</li><li>个人年度报告</li><li>群组年度报告</li><li>按日期、关键词索引</li></ul></li><li>小伙伴们想要其他功能可以留言哦📬</li><li>🔥项目正处于并将长期处于发展阶段，给我一些时间♾️，你所期望的未来都会实现</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/wechatmsg</guid>
            <link>https://www.oschina.net/p/wechatmsg</link>
        </item>
        <item>
            <title>
                <![CDATA[好好的 「代码优化」 是怎么一步步变成 「过度设计」 的]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;visibility: visible;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img __bg_gif" data-backh="96" data-backw="578" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="96" data-imgfileid="503042843" data-ratio="0.16666666666666666" src="https://oscimg.oschina.net/oscnet/0cd486c9-de1a-49c7-a79b-2306f73c35c6.gif" data-type="gif" data-w="636" style="outline: 0px;letter-spacing: 0.544px;font-size: var(--articleFontsize);border-radius: 8px;text-align: justify;width: 100%;visibility: visible !important;background-size: 16px !important;height: auto;" referrerpolicy="no-referrer"><br style="outline: 0px;visibility: visible;"></section><section data-mpa-template="t" data-mpa-template-id="502" data-mpa-category="模板" style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;"><section data-mpa-category="模板" data-mid="" style="padding-right: 1px;padding-left: 1px;outline: 0px;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;"><section data-mid="" style="outline: 0px;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;"><section data-mid="" style="outline: 0px;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section><section data-mid="" style="padding-left: 7px;outline: 0px;display: flex;justify-content: flex-start;align-items: center;visibility: visible;"><section data-mid="" style="margin-right: 7px;outline: 0px;text-align: left;visibility: visible;"><p data-mid="" style="outline: 0px;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &quot;PingFang SC&quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;"><br style="outline: 0px;visibility: visible;"></p></section><section data-mid="" style="margin-bottom: 4px;outline: 0px;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section></section></section><section data-mid="" style="padding: 7px 14px 9px 19px;outline: 0px;width: 675px;text-align: left;border-bottom: 1px solid rgb(58, 92, 244);visibility: visible;"><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.578px;text-align: justify;visibility: visible;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 0.578px;text-wrap: wrap;">有一天 Review 师妹的代码，看到一行很难看的代码，毕竟师妹刚开始转 JAVA，一些书写小习惯还是要养成，所以锱铢必较还是有必要的，于是给出了一些优化思路的建议，以及为什么要这么做。建议完后，我并没有停下」追求极致「的脚步，随着不断的思考，发现这段代码的优化慢慢变得五花八门起来了，完成了一次「代码优化」到「过度设计」的典型思考过程，这过程中涉及了很多 Java 的语法糖及设计模式的东西，很典型，能启发思考，遂记录下来。</span></p></section></section></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br style="outline: 0px;visibility: visible;"></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503042840" data-ratio="0.3161764705882353" data-s="300,640" data-type="png" data-w="408" src="https://oscimg.oschina.net/oscnet/32fe6b4b-8bdc-4381-812a-d4d61bf97d58.png" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;">一切的开始</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">起初是一段很简单的代码，开始仅仅是将外域的一些标识符转换为域内的标识符。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public&nbsp;Integer&nbsp;parseSaleType(String&nbsp;saleTypeStr){</span></code><code><span class="code-snippet_outer">  if(saleTypeStr == null || saleTypeStr.equals("")){</span></code><code><span class="code-snippet_outer">    return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  if(saleTypeStr.equals("JX")){</span></code><code><span class="code-snippet_outer">    return 1;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  return null;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">逻辑上很简单，实现的逻辑看上去也没啥大问题，基本学校的老师也是这么教的。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="503042842" data-ratio="0.3056872037914692" data-s="300,640" data-type="png" data-w="422" src="https://oscimg.oschina.net/oscnet/9766627e-6900-4974-8a8e-eabb92ae0829.png" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;color: rgb(0, 17, 255);">语法规范</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);">但是嘛<span style="color: rgb(62, 62, 62);letter-spacing: 1px;">，不好看也容易犯错误，鸡蛋里挑骨头也得挑，于是给出了几个写代码的建议：</span></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><span id="OSC_h4_1"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">有函数式方法的尽量用</span></strong></span></h4><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer"><span class="code-snippet__comment">//saleTypeStr == nullObjects.isNull(saleTypeStr)</span></span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">首先呢，虽然由于判断 null 这么写不会报错，但是按照常量写==前面的要求，应该倒过来写。另外，这种有 JDK 原生函数式的判断方法，还是优先使用函数式的写法，一来是有方法名比较直观，另外也是方便之后熟练使用 Lamada，别写出 .filter(x -&gt; null == x) 这样的写法，还是 .filter(Objects::isNull) 更可读些。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(20, 20, 220);font-weight: bold;letter-spacing: 0.578px;background-color: rgb(255, 255, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-indent: 0em;"><br></span></section><span id="OSC_h4_2"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">判断字符串为空不要自己写容易漏逻辑，尽量使用现成的方法</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="bash"><code><span class="code-snippet_outer">//if(saleTypeStr&nbsp;==&nbsp;null&nbsp;||&nbsp;saleTypeStr.equals(""))</span></code><code><span class="code-snippet_outer">if(StringUtils.isBlank(saleTypeStr))</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">虽然原方法里无论判不判断空字符或者空格字符都不会影响最终方法的表征，但是从第一行想表达的判断「字符串是不是为空」这件事来看，这行并不能判断「空格字符」存在的情况，所以词不达意，另外也趁机强化记忆下 isBlank 和 isEmpty 的区别。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">org.apache.commons.lang3 里有很多工具类，方法比较成熟逻辑也比较完整。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">同理 org.apache.commons.collections4.CollectionUtils 还有一堆集合操作的工具。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><span id="OSC_h4_3"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">equals 判定，常量写前面</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="bash"><code><span class="code-snippet_outer">//if(saleTypeStr.equals("JX"))</span></code><code><span class="code-snippet_outer">if("JX".equals(saleTypeStr))</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">虽然前面判断过 null，所以这里并不会报空指针，但是但凡之后书写前面漏了，这里就开始报错了。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><span id="OSC_h4_4"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">少用魔法值，定义常量</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><strong style="color: rgb(62, 62, 62);font-size: 14px;letter-spacing: 0.034em;"></strong></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">private&nbsp;static&nbsp;final&nbsp;String&nbsp;JX_SALE_TYPE_STR&nbsp;=&nbsp;"JX";</span></code><code><span class="code-snippet_outer">private static final Integer JX_SALE_TYPE_INT = 1;</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">但凡同一个魔法值在多处用，就怕漏改，所以收束定义在常量下，至少能保证全局引用的统一性。</span></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><span id="OSC_h4_5"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-top: 8px;margin-bottom: 8px;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">无状态方法，可选择定义为类静态</span></strong></span></h4><p style="line-height: 1.75em;margin-top: 8px;margin-bottom: 8px;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">//public&nbsp;Integer&nbsp;parseSaleType(String&nbsp;saleTypeStr)public static Integer parseSaleType(String saleTypeStr)</span></code></pre></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><br></section><section style="line-height: 1.75em;margin-bottom: 8px;margin-top: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">方法本身跟所在类的实例对象状态无关，且不会诱发线程安全问题，故符合被定义为 static 的条件，可先于对象创建在方法区，防止每个对象创建一次的时候，堆内存创建一次。</span></section><section data-mpa-template="t" mpa-from-tpl="t"><section style="margin: 33px auto;visibility: visible;" mpa-from-tpl="t"><section style="transform: scale(0.9);transform-origin: center center;box-sizing: border-box;visibility: visible;margin-top: 0px;margin-bottom: 0px;line-height: normal;"><section style="display: flex;flex-flow: row;text-align: center;justify-content: center;box-sizing: border-box;visibility: visible;" mpa-from-tpl="t"><section style="display: inline-block;vertical-align: middle;width: 156.797px;align-self: center;box-sizing: border-box;visibility: visible;" mpa-from-tpl="t"><section style="margin-top: 0.5em;margin-bottom: 0.5em;box-sizing: border-box;visibility: visible;" mpa-from-tpl="t"><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042841" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/3b57d41f-bf50-46bc-9f31-e741973316f3.png" data-type="png" data-w="422" style="outline: 0px;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></section><p style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;color: rgb(0, 17, 255);letter-spacing: 1px;">逻辑简化</span></p></section></section></section></section></section></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">语法的问题强调完，就得再琢磨琢磨这段逻辑需不需要这么多代码来表述了，乍眼一看没问题，但其实没必要写这么多。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><span style="font-size: var(--articleFontsize);letter-spacing: 0.034em;text-align: left;"><br></span></section><span id="OSC_h4_6"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">明确主体逻辑</span></strong></span></h4><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><strong style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></strong></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><strong style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;"><span style="font-size: 15px;color: rgb(62, 62, 62);">判断入参有效性 -&gt; 处理核心逻辑 -&gt; 缺省返回</span></strong><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;font-size: 15px;color: rgb(62, 62, 62);">，其实这个方法的构建思路是非常标准且合乎常理的，思考习惯很好，只是在这个简单的方法场景不免逻辑有些冗余。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><span style="font-size: 15px;color: rgb(62, 62, 62);">其实再看这个方法，最核心的逻辑就是把字符串对应到数字上，其他不命中的情况返回 null 就可以了，那么简化逻辑后，为空判定其实可以去掉，直接变为：</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">private&nbsp;static&nbsp;final&nbsp;String&nbsp;JX_SALE_TYPE_STR&nbsp;=&nbsp;"JX";</span></code><code><span class="code-snippet_outer">private static final Integer JX_SALE_TYPE_INT = 1;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  if(JX_SALE_TYPE_STR.equals(saleTypeStr)){</span></code><code><span class="code-snippet_outer">    return JX_SALE_TYPE_INT;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  return null;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section><section><section powered-by="xiumi.us"><p style="white-space: normal;margin-top: 0px;margin-bottom: 0px;"><strong style="letter-spacing: 0.034em;"><span style="font-size: 15px;"><br></span></strong></p><span id="OSC_h4_7"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">语法简化：三元运算符</span></strong></span></h4><p><br></p></section></section><section style="margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 0.034em;">再仔细看下场景有没有成熟的范式，【布尔式+返回值+非此即彼】，三元运算符可堪一用。</span></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  return JX_SALE_TYPE_STR.equals(saleTypeStr) ? JX_SALE_TYPE_INT : null;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="font-size: 15px;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><section powered-by="xiumi.us"><p style="white-space: normal;"><br></p><span id="OSC_h4_8"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">语法简化：Optional</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><br></h4><span id="OSC_h4_9"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="font-size: 15px;">这个场景范式也满足，【可能为空，有后续处理，有条件，有缺省值】，Optional 也算完美契合。</span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><br></h4></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cpp"><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  Optional.ofNullable(saleTypeStr).filter(JX_SALE_TYPE_STR::equals).map(o -&gt; JX_SALE_TYPE_INT).orElse(null);</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><p style="line-height: 1.75em;margin-top: 0px;margin-bottom: 8px;"><br></p><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><section powered-by="xiumi.us" style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><section powered-by="xiumi.us" style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;"><span id="OSC_h4_10"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">方法独立存在的必要性讨论</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><br></h4><span id="OSC_h4_11"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;">其实语法简化到三元运算符和 Optional 这一步，如果一个方法体内只有这一行，这个方法独立存在的必要性的就开始存疑了，如果所有的转换流程都能收束在工程中的某个环节上，且保证这个方法的引用仅存在一处，那么这一行代码其实放在主干代码上更好，防止来回跳转的代码阅读障碍，当然这也仅仅是在现状下的讨论，如果存在且不仅限于以下几种状况时还得独立出来：</span></h4></section></section></section></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">未来除了一种逻辑分支外，还会扩展其他分支，并且有被扩展的可能；</span></section></section></section></li><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">虽然还是一种逻辑分支，但是判断的内容变长了，跟上下文和调用状态有关；</span></section></section></section></li><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">虽然还是一种逻辑分支，但是逻辑总在调整；</span></section></section></section></li><li style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;">一处定义，多点引用；</span></section></section></section><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><br></section></section></section></li></ol><section style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;font-size: 15px;"><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042839" data-ratio="0.328125" data-s="300,640" data-type="png" data-w="256" src="https://oscimg.oschina.net/oscnet/0b0881dd-148e-4d14-91fe-eb53964d59ed.png" style="outline: 0px;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;">继续拓展：定义枚举</span></section></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">「如无必要，勿增实体」</span></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">假如这个传入的字符其实还有很多种，返回的映射也有很多种的时候，其实在这里继续写一堆常量定义就很不理智了。</span></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><section style="text-align: left;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row nowrap;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><section style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;font-size: 15px;" powered-by="xiumi.us"><p style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;font-size: 15px;"><br></p><span id="OSC_h4_12"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">值枚举构建</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></h4><span id="OSC_h4_13"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">考虑继续将入参的所有可能和出参的所有可能，可以构建为两组枚举值，这样所有的同簇常量就被放到一起了。</span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-backh="189" data-backw="455" data-galleryid="" data-imgfileid="503042846" data-ratio="0.4153846153846154" data-s="300,640" src="https://oscimg.oschina.net/oscnet/f6a249a0-4411-4e31-abcc-705c6bab2de0.png" data-type="png" data-w="455" style="text-align: center;color: rgba(0, 0, 0, 0.9);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;width: 100%;" referrerpolicy="no-referrer"></h4></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">public&nbsp;enum&nbsp;SaleTypeStrEnum{</span></code><code><span class="code-snippet_outer">  JX,</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@AllArgsConstructor</span></code><code><span class="code-snippet_outer">@Getter</span></code><code><span class="code-snippet_outer">public enum SaleTypeIntEnum{</span></code><code><span class="code-snippet_outer">  JX(1),</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">  private Integer code;</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;font-size: 15px;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><section style="text-align: left;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row nowrap;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><span style="font-size: 15px;letter-spacing: 1px;">但是这个枚举功能并不完善，因为从入参映射为 SaleTypeStrEnum，依然需要一段转换的逻辑，需要用到 SaleTypeStrEnum::name 来判定传参命中了哪个，所以这个逻辑不应该放在枚举外，继续补充：</span></section></section></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public&nbsp;enum&nbsp;SaleTypeStrEnum{</span></code><code><span class="code-snippet_outer">  JX,</span></code><code><span class="code-snippet_outer">  // OTHERS </span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">  public static SaleTypeStrEnum getByName(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    for (SaleTypeStrEnum value : SaleTypeStrEnum.values()) {</span></code><code><span class="code-snippet_outer">      if(value.name().equals(saleTypeStr)){</span></code><code><span class="code-snippet_outer">        return value;</span></code><code><span class="code-snippet_outer">      }</span></code><code><span class="code-snippet_outer">    }</span></code><code><span class="code-snippet_outer">    return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;letter-spacing: 1px;text-align: left;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">方法有了，但是每次传进来值都要遍历整个枚举，O(n) 效率太低了，还是老规矩，空间换时间。</span><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="font-size: 15px;color: rgb(62, 62, 62);"><br></span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">public&nbsp;enum&nbsp;SaleTypeStrEnum{</span></code><code><span class="code-snippet_outer">  JX,</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  /**</span></code><code><span class="code-snippet_outer">    * 预热转换关系到内存</span></code><code><span class="code-snippet_outer">    */</span></code><code><span class="code-snippet_outer">  private static Map&lt;String, SaleTypeStrEnum&gt; NAME_MAP = Arrays.stream(SaleTypeStrEnum.values()).collect(Collectors.toMap(SaleTypeStrEnum::name, Function.identity()));</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public static SaleTypeStrEnum getByName(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    return NAME_MAP.get(saleTypeStr);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;text-align: left;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">这样每次检索就是 O(1) 了，那么最终方法体内也能使用 switch 管理原本的 if-else</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="cs"><code><span class="code-snippet_outer">public&nbsp;static&nbsp;Integer&nbsp;parseSaleType(String&nbsp;saleTypeStr){</span></code><code><span class="code-snippet_outer">  switch(SaleTypeStrEnum.getByName(saleTypeStr)){</span></code><code><span class="code-snippet_outer">    case JX:return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">    // OTHERS</span></code><code><span class="code-snippet_outer">    default:return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="font-size: 15px;margin-top: 0px;margin-bottom: 0px;"><section style="text-align: justify;justify-content: flex-start;margin: 10px 0%;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: bottom;width: auto;align-self: flex-end;flex: 0 0 0%;height: auto;line-height: 0;"><section style="text-align: right;" powered-by="xiumi.us"><br></section></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><section style="display: inline-block;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;"><section powered-by="xiumi.us"><p style="white-space: normal;"><br></p><span id="OSC_h4_14"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="letter-spacing: 1px;"><span style="outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">关系枚举构建</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></h4><span id="OSC_h4_15"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="text-align: left;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">再仔细思考下，其实这里在描述的内容，无论是哪个枚举描述的内容都是同一件事物，方法本身就是描述两个不同编码的转换关系，且转换关系本身就是单向的，且映射路径极度简单，所以简单化一点，可以直接构建转换关系枚举﻿。</span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: center;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042845" data-ratio="0.5683453237410072" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a9fb2fe6-5cab-4fa2-9653-70f97f05993f.png" data-type="png" data-w="278" style="color: rgb(62, 62, 62);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;text-align: center;letter-spacing: 0.578px;" referrerpolicy="no-referrer"></h4></section></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">@Getter</span></code><code><span class="code-snippet_outer">@AllArgsConstructor</span></code><code><span class="code-snippet_outer">public enum SaleTypeRelEnum {</span></code><code><span class="code-snippet_outer">  // 不在分别定义两类变量，而是直接定义变量映射关系</span></code><code><span class="code-snippet_outer">  JX("JX", 1),</span></code><code><span class="code-snippet_outer">  // OTHERS</span></code><code><span class="code-snippet_outer">  ;</span></code><code><span class="code-snippet_outer">  private String fromCode;</span></code><code><span class="code-snippet_outer">  private Integer toCode;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  private static Map&lt;String, SaleTypeRelEnum&gt; FROM_CODE_MAP = Arrays.stream(SaleTypeRelEnum.values()).collect(Collectors.toMap(SaleTypeRelEnum::getFromCode, Function.identity()));</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public static SaleTypeRelEnum get(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    return FROM_CODE_MAP.get(saleTypeStr);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public static Integer parseCode(String saleTypeStr){</span></code><code><span class="code-snippet_outer">    return Optional.ofNullable(SaleTypeRelEnum.get(saleTypeStr)).map(SaleTypeRelEnum::getToCode).orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;">如果将转关系作为枚举，那么从职责上划分，转换这个动作应该是封闭在枚举内的固有行为，而不该暴露在外，故原来对方法的引用其实应该转为对关系枚举中 SaleTypeEnum::parseCode 方法的引用，O(1) 检索且封闭性良好，同时支持更多简单单向映射关系的管理，要是以后出现的新场景都是这种关系，那够扛很久嘞。</span></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.034em;"><br></span></section><section style="outline: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);font-size: 11pt;font-family: DengXian;color: rgb(0, 0, 0);letter-spacing: normal;text-align: center;margin-top: 0px;margin-bottom: 0px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-imgfileid="503042844" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/aec4be25-424c-421a-bd55-847d3abb75e1.png" data-type="png" data-w="256" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 133px !important;" referrerpolicy="no-referrer"></section><section style="outline: 0px;text-align: center;margin-top: 0px;margin-bottom: 0px;line-height: 1.75em;"><span style="outline: 0px;box-sizing: inherit;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;text-wrap: wrap;background-color: rgb(255, 255, 255);letter-spacing: 1px;">继续拓展：设计模式</span></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">枚举的前提还是基于无状态前提，如果转换的的映射关系不再单纯，变得复杂，枚举的简单映射管理就不 work 了。</span></section><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">﻿</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">「万事不决，上设计模式」</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">﻿</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">哎~就是玩儿~</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">策略模式-简单实现</span></strong></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 1px;">首先，依然将传入的字符串作为路由依据，但是传入的内容为了防止有未来扩展，所以构造一个上下文，策略本身基于上下文来处理，借助上文定义的值枚举做策略路由。</span></p><section style="text-align: center;margin-top: 0px;margin-bottom: 0px;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042848" data-ratio="0.42483660130718953" data-s="300,640" src="https://oscimg.oschina.net/oscnet/8374ff02-4a1a-4ed7-9a87-c797f2e3fcff.png" data-type="png" data-w="459" style="height: auto !important;" referrerpolicy="no-referrer"></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">/**</span></code><code><span class="code-snippet_outer">  * 定义策略接口</span></code><code><span class="code-snippet_outer">  */</span></code><code><span class="code-snippet_outer">public interface SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  Integer parse(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">/**</span></code><code><span class="code-snippet_outer">  * 策略实现</span></code><code><span class="code-snippet_outer">  */</span></code><code><span class="code-snippet_outer">public class JxSaleTypeParseStrategy implements SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">/**</span></code><code><span class="code-snippet_outer">  * 调用上下文</span></code><code><span class="code-snippet_outer">  */</span></code><code><span class="code-snippet_outer">@Data</span></code><code><span class="code-snippet_outer">public class SaleTypeParseContext{</span></code><code><span class="code-snippet_outer">  private SaleTypeStrEnum saleTypeStr;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  private SaleTypeParseStrategy parseStrategy;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public Integer pasre(){</span></code><code><span class="code-snippet_outer">    return parseStrategy.parse(this);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">public static Integer parseSaleType(String saleTypeStr){</span></code><code><span class="code-snippet_outer">  SaleTypeStrEnum saleTypeEnum = SaleTypeStrEnum.getByName(saleTypeStr);</span></code><code><span class="code-snippet_outer">  SaleTypeParseContext context = new SaleTypeParseContext();</span></code><code><span class="code-snippet_outer">  context.setSaleTypeStr(saleTypeEnum);</span></code><code><span class="code-snippet_outer">  switch(saleTypeStr){</span></code><code><span class="code-snippet_outer">    // 策略路由</span></code><code><span class="code-snippet_outer">    case JX:context.setParseStrategy(new JxSaleTypeParseStrategy());break;</span></code><code><span class="code-snippet_outer">    // 继续扩展</span></code><code><span class="code-snippet_outer">    default:return null;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  return context.parse();</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">当然，如果是这种没有上下文强依赖的策略，无论是静态单例还是 Spring 单例都会是一个不错的选择。SaleTypeParseContext 本身可以继续扩展内容和其他属性继<span style="color: rgb(62, 62, 62);">续丰富参数，策略实现中也可以继续针对更多参数扩充逻辑。</span></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);font-size: 16px;font-weight: bold;text-indent: 0em;text-align: left;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);letter-spacing: 1px;"><strong style="outline: 0px;visibility: visible;"><span style="background-color: rgb(255, 255, 255);font-weight: bold;text-align: left;color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);font-size: 16px;font-weight: bold;letter-spacing: 1px;text-indent: 0em;text-align: left;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><span style="text-wrap: wrap;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="text-wrap: wrap;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: left;color: rgb(0, 17, 255);letter-spacing: 1px;outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">策略工厂-手动容器</span></strong></span></strong><strong style="outline: 0px;visibility: visible;"></strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">策略是个好东西，但是简单实现下，这里依然将策略实现的路由过程交给了调用方来做，那么每增加一种实现，调用点还要继续改，要是恰好有若干调用点就完犊子了，并不优雅，所以搞个中间层容器工厂，解耦一下依赖。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;"><br></span></p><p style="text-align: center;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042847" data-ratio="0.3641207815275311" data-s="300,640" src="https://oscimg.oschina.net/oscnet/04ea1adc-df26-4624-87ea-c935c47a385b.png" data-type="png" data-w="563" style="height: auto !important;" referrerpolicy="no-referrer"></p><p style="text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public static class SaleTypeParseStrategyContainer{</span></code><code><span class="code-snippet_outer">  public final static Map&lt;SaleTypeStrEnum, SaleTypeParseStrategy&gt; STRATEGY_MAP = new HashMap&lt;&gt;();</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  @PostConstruct</span></code><code><span class="code-snippet_outer">  public void init(){</span></code><code><span class="code-snippet_outer">    STRATEGY_MAP.put(SaleTypeStrEnum.JX, new JxSaleTypeParseStrategy());</span></code><code><span class="code-snippet_outer">    // 继续拓展</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext){</span></code><code><span class="code-snippet_outer">    return Optional.ofNullable(STRATEGY_MAP.get(saleTypeParseContext.getSaleTypeStr())).map(strategy-&gt; strategy.parse(saleTypeParseContext)).orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;">容器内手动创建各个策略的实现的单例后进行托管，那调用方只需要去构建上下文就好了，实际调用的方法更换为 SaleTypeParseStrategyContainer::parse，那后续无论策略如何丰富，调用方都不需要再感知这部分变化。后续出现了新的策略实现，<span style="color: rgb(62, 62, 62);">则在工厂内继续追加路由表即可。</span></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;"><strong style="font-size: 16px;letter-spacing: 1px;text-indent: 0em;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"><span style="text-indent: 0em;font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><br></span></strong></span></strong></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;"><strong style="font-size: 16px;letter-spacing: 1px;text-indent: 0em;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"><span style="color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">注册与发现&amp;策略工厂-Spring 容器</span></strong></span></strong><strong style="font-size: 16px;letter-spacing: 1px;text-indent: 0em;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"></strong></span></p><section><section powered-by="xiumi.us"><section><section powered-by="xiumi.us"><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;letter-spacing: 1px;">如果考虑到策略会依赖 Spring 的 bean 和其他有状态对象，那么这里也可以改成 Spring 的注入模式，同时继续将「支持哪种情况」由托管方容器移动至策略内部，改成由策略实现自身去注册到容器中。</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042850" data-ratio="0.33276740237691" data-s="300,640" src="https://oscimg.oschina.net/oscnet/5f1309e8-d605-426f-867e-20fef37033d9.png" data-type="png" data-w="589" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;text-align: center;" referrerpolicy="no-referrer"></section></section></section></section></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">public&nbsp;interface&nbsp;SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  Integer parse(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">  // 所支持的情况</span></code><code><span class="code-snippet_outer">  SaleTypeStrEnum support();</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public class JxSaleTypeParseStrategy implements SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public SaleTypeStrEnum support() {</span></code><code><span class="code-snippet_outer">    return SaleTypeStrEnum.JX;</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public static class SaleTypeParseStrategyContainer{</span></code><code><span class="code-snippet_outer">  public final static Map&lt;SaleTypeStrEnum, SaleTypeParseStrategy&gt; STRATEGY_MAP = new HashMap&lt;&gt;();</span></code><code><span class="code-snippet_outer">  @Autowired</span></code><code><span class="code-snippet_outer">  private List&lt;SaleTypeParseStrategy&gt; parseStrategyList;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  @PostConstruct</span></code><code><span class="code-snippet_outer">  public void init(){</span></code><code><span class="code-snippet_outer">    parseStrategyList.stream().forEach(strategy-&gt; STRATEGY_MAP.put(strategy.support(), strategy));</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext){</span></code><code><span class="code-snippet_outer">    return Optional.ofNullable(STRATEGY_MAP.get(saleTypeParseContext.getSaleTypeStr())).map(strategy-&gt; strategy.parse(saleTypeParseContext)).orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);">这样的话，连容器都不用改了，追加策略实现的改动只与当前策略有关，调用方和容器类都不需要感知了，但是缺点就在于如果有俩策略支持的情况相同，取到的是哪个<span style="color: rgb(62, 62, 62);letter-spacing: 1px;">就听天由命了~</span></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;color: rgb(62, 62, 62);letter-spacing: 1px;"><br></span></p><p style="font-size: 15px;text-align: left;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(20, 20, 220);font-weight: bold;letter-spacing: 1px;background-color: rgb(255, 255, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-indent: 0em;"><strong style="letter-spacing: 1px;text-indent: 0em;text-wrap: wrap;font-size: 16px;text-align: left;color: rgb(0, 17, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;"><span style="color: rgb(20, 20, 220);text-indent: 0em;outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;"><span style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;outline: 0px;visibility: visible;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong></span><strong style="font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">注册与发现&amp;责任链</span></strong></span></strong></span></p><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;"><br></span></section><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;">当然如果不能事先知道「支持哪种情况」，只能在运行时判断「是否支持」，将事前判定改为运行时判定，广义责任链会是一个不错的选择，把所有策略排成一排，谁举手说自己能处理就谁处理。</span></section><p style="font-size: 15px;text-align: left;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;"><br></span></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(62, 62, 62);font-size: 15px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;">﻿</span><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042849" data-ratio="0.3082077051926298" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e9efe248-d032-45da-a437-a20a73077a84.png" data-type="png" data-w="597" style="text-align: center;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: var(--articleFontsize);letter-spacing: 0.034em;" referrerpolicy="no-referrer"></section><section style="text-align: justify;margin-top: 0px;margin-bottom: 0px;"><br></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="java"><code><span class="code-snippet_outer">public&nbsp;interface&nbsp;SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  Integer parse(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">  // 用于判断是否支持</span></code><code><span class="code-snippet_outer">  boolean support(SaleTypeParseContext saleTypeParseContext);</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public class JxSaleTypeParseStrategy implements SaleTypeParseStrategy{</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeIntEnum.JX.getCode();</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">  @Override</span></code><code><span class="code-snippet_outer">  public boolean support(SaleTypeParseContext saleTypeParseContext) {</span></code><code><span class="code-snippet_outer">    return SaleTypeStrEnum.JX.equals(saleTypeParseContext.getSaleTypeStr());</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">@Component</span></code><code><span class="code-snippet_outer">public static class SaleTypeParseStrategyContainer{</span></code><code><span class="code-snippet_outer">  @Autowired</span></code><code><span class="code-snippet_outer">  private List&lt;SaleTypeParseStrategy&gt; parseStrategyList;</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">  public Integer parse(SaleTypeParseContext saleTypeParseContext){</span></code><code><span class="code-snippet_outer">    return parseStrategyList.stream()</span></code><code><span class="code-snippet_outer">        .filter(strategy-&gt;strategy.support(saleTypeParseContext))</span></code><code><span class="code-snippet_outer">        .findAny()</span></code><code><span class="code-snippet_outer">        .map(strategy-&gt;strategy.parse(saleTypeParseContext))</span></code><code><span class="code-snippet_outer">        .orElse(null);</span></code><code><span class="code-snippet_outer">  }</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><section style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><br></section><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;font-size: 15px;">这样的实现，依然可以将改动收束在策略本体上，修改相对集中，可以无耦地进行扩展。</span></section><section style="font-size: 15px;text-align: justify;justify-content: flex-start;flex-flow: row;vertical-align: bottom;width: auto;min-width: 10%;flex: 0 0 auto;height: auto;align-self: flex-end;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(62, 62, 62);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-align: justify;font-size: 15px;"><br></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042853" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/564c4bbd-3a0d-430c-bde8-35f76f4e0d5a.png" data-type="png" data-w="256" style="outline: 0px;color: rgb(51, 51, 51);font-size: 20px;font-weight: bold;letter-spacing: 0.578px;visibility: visible !important;width: 134px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;font-size: 18px;color: rgb(0, 17, 255);">其他拓展</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">以上还只是在 JAVA 语言内去玩一些花样，在当前这种场景下肯定是有过度设计的嫌疑，7 行代码可以缩到 1 行，也可以扩充到 70 行，所以说嘛：</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">「用代码行数来考量一个程序员是不太合适滴！~」</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">﻿</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">当然了，也还可以继续借助其他的中间件搞花样，包括但不限于：</span></section><ol class="list-paddingleft-1" style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;"><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">植入 Diamond 走走动态配置开关的思路；<br></span></section></li><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">植入 QLExpress 搞搞逻辑表达式的思路；</span></section></li><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">把策略实现改成 HsfProvider 走分布式调用思路；</span></section></li><li style="line-height: 1.75em;margin-top: 0px;margin-bottom: 0px;font-size: 15px;letter-spacing: 1px;"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">借助一些成熟的网关走服务路由的的调用思路；</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">就不再此再过多展开了。</span><span style="color: rgb(100, 99, 99);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 0.578px;text-align: center;"></span></section><p><br></p><section data-role="outer" label="Powered by 135editor.com" style="margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span><span style="outline: 0px;"><strong style="outline: 0px;">&nbsp;拓展阅读&nbsp;</strong></span><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span></section><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><br style="outline: 0px;"></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;min-height: 24px;clear: both;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect" textvalue="3DXR 技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">3DXR 技术</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect" textvalue="终端技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">终端技术</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect" textvalue="音视频技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">音视频技术</a></section><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect" textvalue="服务端技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">服务端技术</a><span style="outline: 0px;letter-spacing: 0.544px;">&nbsp;|&nbsp;</span><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect" textvalue="技术质量" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">技术质量</a>&nbsp;|&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect" textvalue="数据算法" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">数据算法</a></p><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><br style="outline: 0px;"></p><section class="mp_profile_iframe_wrp" style="margin-bottom: 24px;outline: 0px;"><mp-common-profile class="custom_select_card mp_profile_iframe js_wx_tap_highlight" data-pluginname="mpprofile" data-id="MzAxNDEwNjk5OQ==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;wxfrom=19" data-nickname="大淘宝技术" data-alias="AlibabaMTT" data-signature="大淘宝技术官方账号" data-from="2" data-index="0" data-origin_num="690" data-isban="0" data-biz_account_status="0" data-weui-theme="light" data-is_biz_ban="0"></mp-common-profile></section></section><section><section powered-by="xiumi.us"><section><section><section><section><article data-identifier-application__slash__x-doc-key="mxPOGyPLWx65nKa9"></article></section></section></section></section></section></section><section style="margin-bottom: 0px;"><section style="display: none;margin-top: 0px;"><br></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - 大淘宝技术（AlibabaMTT）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/10860307</guid>
            <link>https://my.oschina.net/u/4662964/blog/10860307</link>
            <author>
                <![CDATA[大淘宝技术]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MySQL 8.3.0 GA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>MySQL 8.3.0 于 2024 年 1 月 16 日正式发行，该版本的一些主要变化包括：</p><ul><li><p>企业版的数据屏蔽和脱敏功能中增加了在副本（次要成员）服务器的的内存中刷新数据的能力。可以通过「masking_dictionaries_flush()」函数进行手动刷新，也可以通过调度组件使用新的变量「componet_masking.dictionaries_flush_interval_seconds」配置为定时刷新。</p></li><li><p>企业版支持使用「component_telemetry」组件，收集服务器 OpenTelemetry 格式的度量数据。（仅支持 Linux 平台）</p></li><li><p>删除--innodb 和 --skip-innodb 服务器选项。从 MySQL 5.6 版本起，innoDB 作为默认的存储引擎，--innodb 和 --skip-innodb 服务器选项已经失去存在的意义，在此版本正式删除</p></li><li><p>删除 InnoDB memcached 插件。该插件在 8.0.22 中降级使用，在此版本中正式删除</p></li><li><p>删除 MySQL 复制中部分服务器选项和变量。这些变量在之前的版本进行了降级使用，在此版本中正式删除，包括：</p><ul><li><p>--slave-rows-search-algorithms</p></li><li><p>log_bin_use_v1_events</p></li><li><p>--relay-log-info-file</p></li><li><p>--relay-log-info-repository</p></li><li><p>--master-info-file</p></li><li><p>--master-info-repository</p></li><li><p>transaction_write_set_extraction</p></li><li><p>group_replication_ip_whitelist</p></li><li><p>group_replication_primary_member</p></li></ul></li><li><p>禁止使用非空的「IGNORE_SERVER_IDS」列表。从此版本起，当开启基于 GTID 进行复制时，将不再允许「CHANGE REPLICATION SOURCE TO」指向一个非空的「IGNORE_SERVER_IDS」列表，（由于「IGNORE_SERVER_IDS」与 GTID 模式不兼容，在 8.0 中已经降级处理），同理，如果一个已经存在的复制通道，在创建时使用了忽略服务器的列表，当其开启 GTID 模式时，也将报错。用户可以使用「CHANGE REPLICATION SOURCE TO IGNORE_SERVER_IDS = ();」清空忽略的服务器列表。</p></li><li><p>GTID 扩展格式。基于 GTID 的复制扩展了 GTID 的格式，用户可以为 GTID 打上标签，方便对一组事务进行识别管理。新的格式为「UUID:&lt;TAG&gt;:NUMBER」，「&lt;TAG&gt;」是任意字符串，可以通过「SET gtid_next」进行设置，并在当前会话中持久有效。</p></li><li><p>自动化升级。在 Windows 上，MySQL Configurator 可以执行原地升级。例如「MySQL Server」8.3.0 可以取代现有的 MySQL Server 8.2.0 安装，包括更新和重命名数据目录。</p></li><li><p>增加了「explain_json_format_version」系统变量，用于「EXPLAIN FORMAT=JSON」语句。1 为默认值，与之前的格式一致，2 是基于访问路径的，目的为未来的优化器提供更好的兼容性。</p></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#222222">以上内容是 8.3.0 版本的一个快速浏览，详细信息可访问<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.oracle.com%2Fmysql%2Fcategory%2Fmsq-announcements" target="_blank">MySQL 官网</a><span style="background-color:#ffffff; color:#222222">。</span><span style="background-color:#ffffff; color:#333333">&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#222222">稿源：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fyi5j80lvOBNqCRWMBz5fqQ" target="_blank">https://mp.weixin.qq.com/s/yi5j80lvOBNqCRWMBz5fqQ</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 02:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276047/mysql-8-3-0-ga</guid>
            <link>https://www.oschina.net/news/276047/mysql-8-3-0-ga</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[禅道软件获 2024 首个 GVP（最有价值开源项目）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">2024 开门见喜！1 月 1 日，</span><strong>禅道项目管理软件与旗下产品「ZUI 前端 UI 框架」入选 Gitee 最有价值开源项目计划</strong><span style="background-color:#ffffff; color:#333333">，</span><span style="background-color:#ffffff; color:#337fe5"><strong>禅道项目管理软件荣获 2024 首个 GVP（最有价值开源项目）</strong></span><span style="background-color:#ffffff; color:#333333">！</span></p><div><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Fzentao%2F202401%2Ff_2bcd4ea0943f839941cedad5b6bc543e.jpg" target="_blank"><img align="" alt="禅道-最有价值开源项目" height="298" src="https://cdn.easycorp.cn/web/data/upload/zentao/202401/f_2bcd4ea0943f839941cedad5b6bc543e.jpg" width="500" referrerpolicy="no-referrer"></a></div><p><span style="background-color:#ffffff; color:#333333">GVP（Gitee Most Valuable Project）最有价值开源项目计划是 Gitee 综合评定出的优秀开源项目的展示平台，代表了开源项目的高质量能力与水平。</span><br> &nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在十四年的开源之路中，禅道项目管理软件在技术架构、产品创新、产品质量、社区参与度和用户影响力等方面都有着出色的表现。同时，禅道不断关注和研究业内实践，有机融合 IPD、SAFe、CMMI、Scrum、看板、瀑布和 DevOps 等七大项目管理模型，吸收人工智能（AI）、商业智能（BI）和信息管理（IM）等前沿技术，<strong><span style="color:#337fe5">旨在为用户提供专业高效的项目管理工具及落地解决方案</span></strong>。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Fzentao%2F202401%2Ff_a7a01cec65c980b562bb018f156b7065.jpg" target="_blank"><img align="" alt="禅道-全生命周期项目管理软件" height="1425" src="https://cdn.easycorp.cn/web/data/upload/zentao/202401/f_a7a01cec65c980b562bb018f156b7065.jpg" width="500" referrerpolicy="no-referrer"></a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.easycorp.cn%2Fweb%2Fdata%2Fupload%2Fzentao%2F202401%2Ff_fcca93a985b436fd8e7b9270e65c223a.jpg" target="_blank"><img align="" alt="禅道-全生命周期项目管理软件" height="1079" src="https://cdn.easycorp.cn/web/data/upload/zentao/202401/f_fcca93a985b436fd8e7b9270e65c223a.jpg" width="500" referrerpolicy="no-referrer"></a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 18 Jan 2024 00:56:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276041/zentao-gvp</guid>
            <link>https://www.oschina.net/news/276041/zentao-gvp</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[阿里云 MongoDB 7.0 正式发布，带来更加强大、高效、安全的数据库解决方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0"><strong>2024 年 1 月 10 日，阿里云 MongoDB 7.0 版本正式发布</strong>，带来了诸多创新功能和显著改进，旨在提升性能、增强数据管理能力，并为开发者提供更丰富、更灵活的工具集。无论是在大规模数据处理、实时分析还是在构建高性能应用方面，MongoDB 7.0 都无疑是值得期待和信赖的选择。</p><p><img alt="" height="412" src="https://oscimg.oschina.net/oscnet/up-29cecb902f8b727b7168e653596a751f1dd.png" width="748" referrerpolicy="no-referrer"><img alt="" src="https://xiumi.us/studio/v5#/paper/for/509077302/cube/0" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><em><strong><span>开发简化</span></strong></em></p><p style="margin-left:0; margin-right:0">增强查询语言，包括操作符、变量和索引，<strong>可在 MongoDB 直接执行多种数值运算和高性能查询</strong>，提升工作效率。</p><p style="margin-left:0; margin-right:0"><em><strong><span>性能提升</span></strong></em></p><p style="margin-left:0; margin-right:0">通过自动碎片整理减少数据 chunk 的数量和引入新的查询执行引擎，<strong>使查询性能较 6.0 版本有大幅的提升</strong>。</p><p style="margin-left:0; margin-right:0"><span><em><strong>简化迁移</strong></em></span></p><p style="margin-left:0; margin-right:0">让迁移和系统间的数据同步变得更简单，<strong>使得从传统关系型数据库业务负载转移到阿里云 MongoDB 的任务更加快速和弹性</strong>，从而突破传统关系型数据库的限制和扩展的瓶颈。</p><p style="margin-left:0; margin-right:0"><em><strong><span>安全性</span></strong></em></p><p style="margin-left:0; margin-right:0">MongoDB 是能够快速实施可搜索加密方案的领先平台，<strong>让开发者在加密资料不解密的情况下进行查询，快速找到所需资料。</strong></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">MongoDB 高级解决方案专家黄东旭表示：</p><p style="margin-left:0; margin-right:0">「<strong>MongoDB 7.0 通过持续创新和优化，为开发者和企业用户提供更强大、高效、安全的数据库解决方案。MongoDB 从诞生起就是由开发者而创建，为开发者而创建。在未来，MongoDB 也会继续将开发者置于首位，为开发者提供更多、更强大的新功能。</strong>」</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">阿里云 MongoDB 技术专家钟离表示：</p><p style="margin-left:0; margin-right:0">「<strong>MongoDB 7.0 带来了不少新特性，而阿里云在云原生上能够提供包括快速弹性、快速克隆回档和智能运维等特性，使得阿里云与 MongoDB 的合作实现一加一大于二的效果。</strong>」</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><strong>阿里云 MongoDB 7.0 的发布标志着这个业界领先的 NoSQL 数据库系统的一个重要里程碑。</strong>MongoDB 在 2019 年就被 Stack Overflow 评为<strong>最被开发者喜爱</strong>的数据库，目前在数据库领域的知名排行榜 DB-Engines Rankings 中已上升至<strong>第五</strong>。MongoDB 这些年一直在不断地进行版本的演进，从 2015 年的 3.0 的版本，到刚发布的 7.0 版本，持续推出更优质的功能和特性，让开发者可以获得集成丰富工具的统一平台，改善开发体验，对应用负载进行现代化改造。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p><img alt="" height="408" src="https://oscimg.oschina.net/oscnet/up-104c407750f6abbe4f6aa7da113ddc5a669.png" width="741" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong>阿里云是中国唯一能提供 MongoDB 最新版本的云厂商。</strong>从 2021 年 5 月国内独家首发 5.0 版本，到如今的 7.0 版本 ，阿里云 MongoDB 始终跟随 MongoDB 公司的发布节奏，致力于为开发者带来最新版本的云服务体验。阿里云与 MongoDB 战略合作四周年，目前已经成为 MongoDB 在中国最大的云服务提供商，业务拓展至互联网、游戏、汽车、制造、零售等行业，累计为数万名客户提供 MongoDB 云服务。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">请访问产品网站，了解更多阿里云 MongoDB 的介绍。</p><p><img alt="" height="325" src="https://oscimg.oschina.net/oscnet/up-b457fd48dd92ec01dddf398b0536e6adbb5.png" width="588" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">关注获取更多精彩内容</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0">中国官方网站</p><p style="margin-left:0; margin-right:0">www.mongodb.com/zh-cn</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 14:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276036/mongodb-7-0-released</guid>
            <link>https://www.oschina.net/news/276036/mongodb-7-0-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[书生·浦语 2.0（InternLM2）大语言模型正式开源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>1 月 17 日，书生·浦语 2.0（InternLM2）发布会暨书生·浦源大模型挑战赛启动仪式在上海举行。上海人工智能实验室与商汤科技联合香港中文大学和复旦大学正式发布新一代大语言模型<strong>书⽣·浦语 2.0（InternLM2）</strong>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-52e9a3ed647ca67a108395c42fa403f5137.jpg" referrerpolicy="no-referrer"></p><blockquote><p>开源地址</p><ul><li>Github：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FInternLM%2FInternLM" target="_blank">https://github.com/InternLM/InternLM</a></li><li>HuggingFace：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Finternlm" target="_blank">https://huggingface.co/internlm</a></li><li>ModelScope：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelscope.cn%2Forganization%2FShanghai_AI_Laboratory" target="_blank">https://modelscope.cn/organization/Shanghai_AI_Laboratory</a></li></ul></blockquote><p>据介绍，InternLM2 是在 2.6 万亿 token 的高质量语料上训练得到的。沿袭第一代书生·浦语（InternLM）的设定，InternLM2 包含 7B 及 20B 两种参数规格及基座、对话等版本，满足不同复杂应用场景需求。秉持「以高质量开源赋能创新」理念，上海 AI 实验室继续提供 InternLM2 免费商用授权。</p><p>InternLM2 的核心理念在于回归语言建模的本质，致力于通过提高语料质量及信息密度，实现模型基座语言建模能力获得质的提升，进而在数理、代码、对话、创作等各方面都取得长足进步，<strong>综合性能达到同量级开源模型的领先水平。</strong>其支持 200K token 的上下文，一次性接收并处理约 30 万汉字的输入内容，准确提取关键信息，实现长文本中「大海捞针」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-7c9cb74f4a31bdfb986e5bd545788786bac.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-318647a9bfbcddcb935f2efd51bc26c7cdf.png" referrerpolicy="no-referrer"></p><p>此外，InternLM2 的各项能力获得全面进步，相比于初代 InternLM，在推理、数学、代码等方面的能力提升尤为显著，综合能力领先于同量级开源模型。</p><p>根据大语言模型的应用方式和用户关注的重点领域，研究人员定义了语言、知识、推理、数学、代码、考试等六个能力维度，在 55 个主流评测集上对多个同量级模型的表现进行了综合评测。评测结果显示，InternLM2 的轻量级（7B）及中量级（20B）版本性能在同量级模型中表现优异。</p><p><img src="https://oscimg.oschina.net/oscnet/up-63b21de53ea876e2f73bebcc2d1cb185f26.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-5b27ccfd736b8e6c812fa412f2b84901be4.png" referrerpolicy="no-referrer"></p><ul></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 12:09:49 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276033/shanghai-ai-lab-internlm2</guid>
            <link>https://www.oschina.net/news/276033/shanghai-ai-lab-internlm2</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Google Chrome V8 < 120.0.6099.224 越界内存访问漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>漏洞描述</h2><p>Google Chrome V8 是一个由 Google 开发的开源 JavaScript 引擎，用于 Google Chrome 及 Chromium 中。</p><p>Google Chrome 120.0.6099.224 版本之前中，当通过 runtime-object.cc 的 DeleteObjectPropertyFast 删除对象属性时，可能未能正确处理内存或属性映射，导致越界内存访问漏洞。攻击者可以通过诱导用户访问恶意链接并利用此漏洞进行内存读取或写入，从而可能导致代码执行。</p><p>漏洞已被 Google 发现在野利用。</p><table><tbody><tr><th>漏洞名称</th><th>Google Chrome V8 &lt; 120.0.6099.224 越界内存访问漏洞</th></tr></tbody><tbody><tr><td>漏洞类型</td><td>越界写入</td></tr><tr><td>发现时间</td><td>2024-01-17</td></tr><tr><td>漏洞影响广度</td><td>广</td></tr><tr><td>MPS 编号</td><td>MPS-bfqk-dgjp</td></tr><tr><td>CVE 编号</td><td>CVE-2024-0519</td></tr><tr><td>CNVD 编号</td><td>-</td></tr></tbody></table><h2>影响范围</h2><p>Chrome@(-∞, 120.0.6099.224)</p><p>chromium@(-∞, 120.0.6099.224)</p><h2>修复方案</h2><p>将 Chrome 升级至 120.0.6099.224 及以上版本</p><p>将 chromium 升级至 120.0.6099.224 及以上版本</p><h2>参考链接</h2><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oscs1024.com%2Fhd%2FMPS-bfqk-dgjp" target="_blank">https://www.oscs1024.com/hd/MPS-bfqk-dgjp</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln%2Fdetail%2FCVE-2024-0519" target="_blank">https://nvd.nist.gov/vuln/detail/CVE-2024-0519</a></p><p>&nbsp;</p><p>&nbsp;</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fv8%2Fv8%2Fcommit%2F18a8ac81c65b1ce6637d34696cb21b9d4e602a21" target="_blank">Commit</a></p><p>    </p><h2>免费情报订阅&amp;代码安全检测</h2><p>OSCS 是国内首个开源软件供应链安全社区，社区联合开发者帮助全球顶级开源项目解决安全问题，并提供实时的安全漏洞情报，同时提供专业的代码安全检测工具为开发者免费使用。社区开发者可以通过配置飞书、钉钉、企业微信机器人获取一手的情报。</p><p>免费代码安全检测工具： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.murphysec.com%2F%3Fsrc%3Dosc" target="_blank">https://www.murphysec.com/?src=osc</a></p><p>免费情报订阅： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oscs1024.com%2Fcm%2F%3Fsrc%3Dosc" target="_blank">https://www.oscs1024.com/cm/?src=osc</a></p><p>具体订阅方式详见： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oscs1024.com%2Fdocs%2Fvuln-warning%2Fintro%2F%3Fsrc%3Dosc" target="_blank">https://www.oscs1024.com/docs/vuln-warning/intro/?src=osc</a></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4aeef4048430ca1baea7afb51fe0f5dc3dd.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 08:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276015</guid>
            <link>https://www.oschina.net/news/276015</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国产 Java ORM：sqltoy-orm 5.2.90 发版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>开源地址：</strong></p><ul><li>github:&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchenrenfei%2Fsagacity-sqltoy" target="_blank">https://github.com/sagframe/sagacity-sqltoy</a></li><li>gitee:&nbsp;<a href="https://gitee.com/sagacity/sagacity-sqltoy">https://gitee.com/sagacity/sagacity-sqltoy</a></li><li>idea 插件 (可直接在 idea 中检索安装):&nbsp;&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fthreefish%2Fsqltoy-idea-plugins" target="_blank">https://github.com/threefish/sqltoy-idea-plugins</a></li><li>sqltoy 脚手架项目：https://gitee.com/momoljw/sss-rbac-admin</li><li>sqltoy lambda 项目:&nbsp;https://gitee.com/gzghde/sqltoy-plus</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>更新内容</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">1、<span style="background-color:#ffffff; color:#40485b">增强 loop 中 LocalDateTime 和 LocalTime 的输出精度</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy-orm 是 JPA 和超强查询的融合体</strong></p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23jpa%25E9%2583%25A8%25E5%2588%2586" target="_blank">JPA 部分</a></h3><ul><li>类似 JPA 的对象化 CRUD、对象级联加载和新增、更新</li><li>强化 update 操作，提供弹性字段修改能力，不同于 hibernate 先 load 后修改，而是一次数据库交互完成修改，确保了高并发场景下数据的准确性</li><li>改进了级联修改，提供了先删除或者先置无效，再覆盖的操作选项</li><li>增加了 updateFetch、updateSaveFetch 功能，强化针对强事务高并发场景的处理，类似库存台账、资金台账，实现一次数据库交互，完成锁查询、不存在则插入、存在则修改，并返回修改后的结果</li><li>增加了树结构封装，便于统一不同数据库树型结构数据的递归查询</li><li>支持分库分表、支持多种主键策略 (额外支持基于 redis 的产生特定规则的业务主键)、加密存储、数据版本校验</li><li>提供了公共属性赋值 (创建人、修改人、创建时间、修改时间、租户)、扩展类型处理等</li><li>提供了多租户统一过滤和赋值、提供了数据权限参数带入和越权校验</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%259F%25A5%25E8%25AF%25A2%25E9%2583%25A8%25E5%2588%2586" target="_blank">查询部分</a></h3><ul><li>极为直观的 sql 编写方式，便于从客户端 &lt;--&gt; 代码，双向快速迁移，便于后期变更维护</li><li>支持缓存翻译、反向缓存匹配 key 代替 like 模糊查询</li><li>提供了跨数据库支持能力：不同数据库的函数自动转换适配，多方言 sql 根据实际环境自动匹配、多数据库同步测试，大幅提升了产品化能力</li><li>提供了取 top 记录、随机记录等特殊场景的查询功能</li><li>提供了最强大的分页查询机制：1) 自动优化 count 语句；2) 提供基于缓存的分页优化，避免每次都执行 count 查询；3) 提供了独具特色的快速分页；4) 提供了并行分页</li><li>提供了分库分表能力</li><li>提供了在管理类项目中极为价值的：分组汇总计算、行列转换 (行转列、列转行)、同比环比、树形排序、树形汇总，相关算法自然集成</li><li>提供了基于查询的层次化数据结构封装</li><li>提供了大量辅助功能：数据脱敏、格式化、条件参数预处理等</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsagframe%2Fsagacity-sqltoy%23%25E6%2594%25AF%25E6%258C%2581%25E5%25A4%259A%25E7%25A7%258D%25E6%2595%25B0%25E6%258D%25AE%25E5%25BA%2593" target="_blank">支持多种数据库</a></h3><ul><li>常规的 mysql、oracle、db2、postgresql、 sqlserver、dm、kingbase、sqlite、h2、 oceanBase、polardb、guassdb、tidb</li><li>支持分布式 olap 数据库: clickhouse、StarRocks、greenplum、impala (kudu)</li><li>支持 elasticsearch、mongodb</li><li>所有基于 sql 和 jdbc 各类数据库查询</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>sqltoy 特点介绍：</strong></p><ul><li><strong>sqltoy 的核心构建思想</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="868" src="https://oscimg.oschina.net/oscnet/up-a385d72ceb030d705e8e5803ca3cd4c09a1.png" width="1136" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的对比 mybatis (plus) 的核心点：查询语句编写、可阅读性、可维护性</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="923" src="https://oscimg.oschina.net/oscnet/up-05295a7a1813978134a5e49a7cff0f0e1ab.png" width="1873" referrerpolicy="no-referrer"></p><ul><li><strong>对象化 crud 是基础，但 sqltoy 有针对性的改进：update、updateSaveFetch、updateFetch 等</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><img alt="" height="845" src="https://oscimg.oschina.net/oscnet/up-6b8e8204061eec3d2096a50e9899548351e.png" width="1745" referrerpolicy="no-referrer"></p><ul><li><strong>sqltoy 的缓存翻译，大幅减少表关联简化 sql，让你的查询性能成几何级提升</strong></li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/85287e14aa3e428fbabe297472596455?from=pc" referrerpolicy="no-referrer"></p><ul><li><strong>极致的分页，同样帮助你实现查询的性能大幅提升</strong></li></ul><ol><li>快速分页:@fast () 实现先取单页数据然后再关联查询，极大提升速度</li><li>分页优化器:page-optimize 让分页查询由两次变成 1.3~1.5 次 (用缓存实现相同查询条件的总记录数量在一定周期内无需重复查询</li><li>sqltoy 的分页取总记录的过程不是简单的 select count (1) from (原始 sql)；而是智能判断是否变成:select count (1) from 'from 后语句 '， 并自动剔除最外层的 order by</li><li>sqltoy 支持并行查询：parallel="true"，同时查询总记录数和单页数据，大幅提升性能</li></ol><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p6-tt.byteimg.com/origin/pgc-image/3d5f7094da154671985dd390f56f6302?from=pc" referrerpolicy="no-referrer"></div><div>
 &nbsp;
</div><ul><li><strong>便利的跨数据库统计计算：数据旋转</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/949bc75b5c53441c98284dae2bed11fe?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：无限极分组统计 (含汇总求平均)</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p1-tt.byteimg.com/origin/pgc-image/f5edc52adbbe4a1ca327d9a9b0c5d64c?from=pc" referrerpolicy="no-referrer"></div><ul><li><strong>便利的跨数据库统计计算：同比环比</strong></li></ul><div><img alt="阐述 sqltoy 为什么秒杀 mybatis(plus)" src="https://p3-tt.byteimg.com/origin/pgc-image/b9d435e2852644c9a4c9e062cc3d46d7?from=pc" referrerpolicy="no-referrer"></div><div>
 5、树形表排序汇总
</div><div><p style="margin-left:0; margin-right:0"><img height="274" src="https://oscimg.oschina.net/oscnet/up-1773cce82b98a943d42caaa62f60d80f3d0.png" width="1002" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="403" src="https://oscimg.oschina.net/oscnet/up-8717f1c442767b08f2406019ae9b63721cb.png" width="409" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">6、扩展集成</p><p style="margin-left:0; margin-right:0"><img height="961" src="https://oscimg.oschina.net/oscnet/up-6603ed15ec936dea45c4f6fb7318f4a062b.png" width="1965" referrerpolicy="no-referrer"></p></div><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 04:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275992/sqltoy-orm-5-2-90-released</guid>
            <link>https://www.oschina.net/news/275992/sqltoy-orm-5-2-90-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凌鲨 0.7.9 版本更新]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>凌鲨 0.7.9 版本更新</h1><ul><li>服务端版本: 0.2.25</li><li>改进: 微应用存储按用户隔离</li><li>改进: 接口集合迁移到内容面板</li><li>改进: 数据标注迁移到内容面板</li><li>改进: 创建项目时新增接口集合和数据标注目录</li><li>修复: 修复目录模式下沟通面板显示不全的问题</li></ul><h1>相关截图</h1><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-684f0c5c669deceebf057a36190b1706814.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-5a239b6e6ea379cf7352c670d4843d0abbc.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-c42cbab8126c8065247c5491c338c1f2c26.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-ef7610ce321c75963207427f3a5a4ff9d9e.png" width="1500" referrerpolicy="no-referrer"></p><p><img height="750" src="https://oscimg.oschina.net/oscnet/up-9f3fa1690a27edbadce21c63009e4d4a510.png" width="1500" referrerpolicy="no-referrer"></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 04:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275991/lingsha-0-7-9-released</guid>
            <link>https://www.oschina.net/news/275991/lingsha-0-7-9-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IoTDB 存在远程代码执行漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>漏洞描述</h2><p>Apache IoTDB 是时序数据的数据管理系统，为用户提供数据采集、存储、分析等特定服务。JEXL 是一个表达式语言引擎，全称是 Java 表达式语言 (Java Expression Language)，可以在 java 程序中动态地运算一些表达式</p><p>在受影响版本中，由于 IoTDB 通过 UDTFJexl.java 实现 JEXL 表达式支持。攻击者可以通过配置 UDF，调用 JEXL 表达式来执行 JAVA 命令，导致存在远程代码执行漏洞。</p><table><tbody><tr><th>漏洞名称</th><th>IoTDB 存在远程代码执行漏洞</th></tr></tbody><tbody><tr><td>漏洞类型</td><td>表达式语言注入</td></tr><tr><td>发现时间</td><td>2024-01-15</td></tr><tr><td>漏洞影响广度</td><td>一般</td></tr><tr><td>MPS 编号</td><td>MPS-c4ml-t1ka</td></tr><tr><td>CVE 编号</td><td>CVE-2023-46226</td></tr><tr><td>CNVD 编号</td><td>-</td></tr></tbody></table><h2>影响范围</h2><p>iotdb@[1.0.0, 1.3.0)</p><p>org.apache.iotdb:iotdb-core@[1.0.0, 1.3.0)</p><h2>修复方案</h2><p>将 org.apache.iotdb:iotdb-server 升级至 1.3.0 及以上版本</p><p>将组件 iotdb 升级至 1.3.0 及以上版本</p><h2>参考链接</h2><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oscs1024.com%2Fhd%2FMPS-c4ml-t1ka" target="_blank">https://www.oscs1024.com/hd/MPS-c4ml-t1ka、 证明影响版本</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln%2Fdetail%2FCVE-2023-46226" target="_blank">证明影响版本</a></p><p>    </p><h2>免费情报订阅&amp;代码安全检测</h2><p>OSCS 是国内首个开源软件供应链安全社区，社区联合开发者帮助全球顶级开源项目解决安全问题，并提供实时的安全漏洞情报，同时提供专业的代码安全检测工具为开发者免费使用。社区开发者可以通过配置飞书、钉钉、企业微信机器人获取一手的情报。</p><p>免费代码安全检测工具： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.murphysec.com%2F%3Fsrc%3Dosc" target="_blank">https://www.murphysec.com/?src=osc</a></p><p>免费情报订阅： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oscs1024.com%2Fcm%2F%3Fsrc%3Dosc" target="_blank">https://www.oscs1024.com/cm/?src=osc</a></p><p>具体订阅方式详见： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oscs1024.com%2Fdocs%2Fvuln-warning%2Fintro%2F%3Fsrc%3Dosc" target="_blank">https://www.oscs1024.com/docs/vuln-warning/intro/?src=osc</a></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4aeef4048430ca1baea7afb51fe0f5dc3dd.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 02:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275982</guid>
            <link>https://www.oschina.net/news/275982</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun 1.0.23 版本发布，打包部署更便捷]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Bun 这个兼具运行时、打包工具、转译器和包管理器多重功能的 JavaScript 工具，在日前迎来了 1.0.23 版本的更新。本次更新针对社区反馈修复了 40 个 bug，共计获得了 194 个赞。更新使 Bun 在打包部署等方面的易用性有所提升。</p><h2>引入 SQLite 数据库：轻松管理数据</h2><p>Bun v1.0.23 的一大亮点是引入了对 SQLite 数据库的支持。开发者现在可以直接在 Bun 中导入 SQLite 数据库，极大简化了在项目中使用 SQLite 的流程。通过简单的<code>import</code>语句，开发者能够轻松导入和管理数据库，这对于需要处理数据存储和读取的应用程序来说，无疑是一个巨大的便利。</p><pre><code class="language-javascript">import db from './my.db' with {type: "sqlite"};</code></pre><div><div><p>此外，Bun 也支持将 SQLite 数据库嵌入到单文件可执行程序中。这意味着开发者可以创建包含数据库的独立应用程序，极大地简化了部署过程。</p><h2>性能提升：更快的 TCP 和 bug 修复</h2><p>在性能方面，Bun v1.0.23 做出了显著的优化。特别是在 Linux 系统上，TCP 传输性能提升了 4%，这得益于减少了系统调用次数。这一改进对于需要处理大量网络数据的应用来说，无疑是一个巨大的提升。</p></div></div><div><div><h2>Node.js 兼容性和资源管理</h2><p>对于 Node.js 的兼容性，Bun v1.0.23 也进行了重要的更新，解决了一些先前版本中存在的问题。例如，现在可以在 Bun 环境中无缝使用 Node.js 内置模块，如<code>fs</code>和<code>path</code>。此外，Bun 还引入了对 TC39 提出的第三阶段提案——资源管理（Resource Management）的支持。这意味着开发者可以更加有效地管理文件句柄、数据库连接和网络套接字等资源。</p><pre><code class="language-javascript">async function * g() {
  await using handle = acquireFileHandle(); // async-block-scoped critical resource
}</code></pre></div></div><h2>其他重要更新</h2><ul><li><strong>SQLite 升级至 3.45.0 版本</strong>：加入了 JSONB 支持，使得存储和读取 JSON 数据更加高效。</li><li><strong>嵌入.node 文件的支持</strong>：允许开发者在构建时将 NAPI 插件<code>.node</code>文件嵌入，使得打包本地 Node.js 模块变得简单。</li><li><strong>HTTP 服务器头部限制提升</strong>：从 50 提升到 100，增强了服务器的处理能力。</li><li><strong>增强的<code>import.meta</code>支持</strong>：新增了<code>import.meta.dirname</code>和<code>import.meta.filename</code>支持，增强了与 Node.js 的兼容性。</li><li><strong><code>fs/promises</code>中的<code>FileHandle</code>支持</strong>：使得文件操作更加灵活和强大。</li><li><strong>众多 bug 修复和性能优化</strong>：包括 zlibBufferSync 的错误处理、<code>Bun.spawn()</code>中的文件描述符泄漏、URL 处理的一致性问题等。</li></ul><p>本次更新使 Bun 成为 Web 应用打包部署更便捷高效的选择。相信随着 Bun 的持续完善，会有更多开发者加入使用。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 17 Jan 2024 02:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275980/bun-1-0-23-released</guid>
            <link>https://www.oschina.net/news/275980/bun-1-0-23-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CXYGZL-程序员工作流，持续迭代升级中]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>概述</h2><p>现在开源的工作流引擎，基本都是以 BPMN.js 为基础的，导致使用门槛过高，非专业人员无法驾驭。本工作流借鉴钉钉/飞书的方式，以低代码方式降低用户使用门槛，即使是普通企业用户也可以几分钟内就能搭建自己的工作流引擎。</p><p>官网：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cxygzl.com" target="_blank">程序员工作流</a></p><h2>本次更新内容</h2><ol><li>【新增】流程报表支持条件筛选导出</li><li>【新增】流程支持多版本管理，支持暂存功能</li><li>【新增】用户任务支持任务监听器</li><li>【新增】用户任务支持审批时限</li><li>【新增】支持用户属性中的多选当做分支条件</li><li>【新增】单选多选表单支持远程加载选项</li><li>【优化】流程报表在发起流程的时候记录数据，流程完成的时候完善数据；新增流程状态、审批结果等字段</li><li>【优化】签署合同自动生成电子证书并保存</li><li>【优化】流程结束删除相关流程实例字段</li><li>【优化】记录用户任务是否自动完成</li><li>【优化】创建流程添加 redis 锁防止重复创建</li><li>【修复】签署合同签章错位问题</li></ol><h2>功能介绍</h2><h3>便捷</h3><p>已适配 H5、微信小程序和钉钉小程序，随时随地可以发起流程、处理任务、查看流程执行情况，不遗漏任何一个瞬间<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cxygzl.com" target="_blank"><img alt="" src="https://www.cxygzl.com/assets/imgs/121111.png" referrerpolicy="no-referrer"></a></p><h3>好用</h3><p>通过低代码方式，拖拽表单、自定义流程图即可实现自己的工作流。所有配置所见所得，无需复杂配置<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cxygzl.com" target="_blank"><img alt="" src="https://www.cxygzl.com/assets/imgs/2023080601.png" referrerpolicy="no-referrer"></a></p><h3>专业</h3><p>支持排他网关、包容网关、延时器、子流程等多种节点以及流程监听器、动态表单权限等专业功能，实现流程与业务的丝滑接入<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cxygzl.com" target="_blank"><img alt="" src="https://pro.cxygzl.com/api/file/show/2024-01-16/15bedf5b31474e429ad317483d0bff62.png" referrerpolicy="no-referrer"></a></p><h2>强大</h2><p>审批只是其中一个功能，业务编排、动态表单等也不在话下。用户动态属性更是提供更多扩展，使得流程更加丰富<br><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cxygzl.com" target="_blank"><img alt="" src="https://pro.cxygzl.com/api/file/show/2024-01-16/593dd697e27949a6ae9e60da0e14b308.png" referrerpolicy="no-referrer"></a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 16 Jan 2024 07:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275934/cxygzl-updated</guid>
            <link>https://www.oschina.net/news/275934/cxygzl-updated</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[新增 PostgreSQL 数据库管理功能，1Panel 开源面板 v1.9.3 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start"><br> 2024 年 1 月 15 日，现代化、开源的 Linux 服务器运维管理面板 1Panel 正式发布 v1.9.3 版本。</p><p style="color:#000000; text-align:start">在这一版本中，1Panel 新增了 PostgreSQL 数据库管理功能，并且支持设置 PHP 运行环境扩展模版。此外，我们进行了 30 多项功能更新和问题修复。1Panel 应用商店新增了 3 款应用，并且更新了 22 款应用。感谢社区用户们的反馈和支持，使得新版本的 1Panel 功能更加完善。</p><h1>亮点更新</h1><p style="color:#000000; text-align:start"><strong><span style="color:#005eeb">■ 新增 PostgreSQL 数据库管理功能</span></strong></p><p style="color:#000000; text-align:start">1Panel v1.9.3 版本引入了全新的 PostgreSQL 数据库管理功能，为用户提供更为强大的数据库管理体验。现在，用户可以直接在 1Panel 操作界面上执行各种 PostgreSQL 数据库操作，从而实现更加高效的数据管理和维护。</p><p style="color:#000000; text-align:start">这一功能允许用户轻松连接到其 PostgreSQL 数据库实例，并且进行创建、编辑和删除数据库等操作，不仅简化了 PostgreSQL 数据库的日常管理任务，还提升了用户在 1Panel 平台上的工作效率。无论是数据库管理员、开发人员还是普通用户，都能通过 1Panel v1.9.3 版本的 PostgreSQL 数据库管理功能轻松、便捷地管理数据。</p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-76afc4b8d76840fd1bc41ba935fc57e5af4.gif" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 1 PostgreSQL 数据库管理功能</span></p><p style="color:#000000; text-align:start"><strong><span style="color:#005eeb">■ 支持设置 PHP 运行环境扩展模版</span></strong></p><p style="color:#000000; text-align:start">1Panel v1.9.3 版本允许用户自定义 PHP 运行环境扩展模版。用户可以轻松进行批量操作，针对不同的 PHP 扩展进行灵活设置。</p><p style="color:#000000; text-align:start">此外，这一版本还支持用户针对不同项目创建不同的模版，为用户提供了更为便捷的维护和管理体验。这种灵活性不仅有助于提高开发效率，同时也有助于项目的稳定性和安全性。通过简单的界面操作，用户可以快速配置所需的 PHP 扩展，无需深入了解复杂的技术细节。</p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-bc85cb6ceb0af6317774c9dac1466494f0b.gif" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><span>▲ 图 2 设置 PHP 运行环境扩展模版</span></p><h1>新增功能</h1><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>网站：PHP 运行环境页面增加扩展模版；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>网站：OpenResty 状态栏增加清除反向代理缓存功能；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>数据库：新增 PostgreSQL 数据库管理功能；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>容器：容器列表增加与容器相关联的网站和应用资源。</p><h1>功能优化</h1><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>网站：创建网站时支持输入中文域名；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>应用商店：支持根据应用名称和描述信息进行搜索；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>应用商店：Halo、Gitea 支持选择 PostgreSQL 数据库；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>应用商店：phpMyAdmin 隐藏部分系统数据库；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>数据库：同步服务器数据库信息时不再创建关联用户；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>容器：支持用户选择是否展示应用商店容器；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>容器：优化容器监控请求频率；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>主机：自动清理压缩失败的 ZIP 文件；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>工具箱：适配 Fail2ban v0.10.2 版本；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>计划任务：支持备份 PostgreSQL 数据库；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>系统：优化部分校验的提示信息；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>系统：更新系统中所使用的 IP 地址库；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>系统：添加类型转换安全检查。</p><h1>Bug 修复</h1><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>网站：修复了证书申请界面复制按钮在复制内容时出现的错误；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>网站：修复了因网站文件层级过多而导致的授权超时问题；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>网站：修复了反向代理网站在开启 HTTPS 后 HSTS 配置失效的问题；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>网站：修复了部分场景下申请证书超时的问题；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>数据库：修复了 MySQL Root 密码输入框在部分场景下出现换行问题；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>容器：修复了镜像清理操作时仅显示当前页中未使用镜像的问题；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>主机：修复了文件列表跳转每页条数限制不生效的问题；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>工具箱：修复了工具箱中 hosts 解析没有忽略「#」注释的问题；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>计划任务：修复了网站日志正在写入时可能会导致日志切割失败的问题；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>日志审计：修复了网站日志页面在网站为空时报错的问题；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>日志审计：修复了部分场景下网站日志清理日志按钮无法点击的问题；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>面板设置：修复了部分场景下创建和恢复快照提示「.db-wal」等事务文件被删除的问题；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>面板设置：修复了关闭面板 SSL 异常的问题；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>系统：修复了部分页面因右侧抽屉内容过多而导致显示不完整的问题。</p><h1>应用商店</h1><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>新增 One API；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>新增 Dockge；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>添加 Twikoo；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>DataEase 版本升级至 v2.2.0；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>AList 版本升级至 v3.30.0；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>uuWAF 版本升级至 v2.7.0；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>IT-Tools 版本升级至 2023.12.21；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>ddns-go 版本升级至 v5.7.1；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>Redis 版本升级至 v7.2.4；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>Jenkins 版本升级至 v2.440；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>MinIO 版本升级至 2024-01-05；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>Flarum 版本升级至 v1.8.3；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>Audiobookshelf 版本升级至 v2.7.1；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>OpenLiteSpeed 版本升级至 v1.7.19；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>File Browser 版本升级至 v2.27.0；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>Memos 版本升级至 v0.18.2；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>Mailserver 版本升级至 v13.2.0；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■<span>&nbsp;</span></span>ClickHouse 版本升级至 v23.12.2；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>EMQX 版本升级至 v5.4.1；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>Draw.io 版本升级至 v22.1.18；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>Nexus Repository 版本升级至 v3.64.0；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>Metabase 版本升级至 v0.48.2；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>RabbitMQ 版本升级至 v3.12.12；</p><p style="color:#000000; text-align:start"><span style="color:#005eeb">■</span><span>&nbsp;</span>MongoDB 版本升级至 v7.0.5。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 16 Jan 2024 02:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275917/1panel-1-9-3</guid>
            <link>https://www.oschina.net/news/275917/1panel-1-9-3</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[腾讯 APIJSON 插件 apijson-influxdb 开源，支持物联网时序数据库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img height="1570" src="https://oscimg.oschina.net/oscnet/up-bdaf900bde612e78f2a7ac5ec7f7dda180c.png" width="2202" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">腾讯 APIJSON 是一种专为 API 而生的 JSON 网络传输协议，以及，基于这套协议实现的 ORM 库。<br><strong>为各种增删改查提供了完全自动化的万能 API，零代码实时满足千变万化的各种新增和变更需求。</strong><br> 能大幅降低开发和沟通成本，简化开发流程，缩短开发周期。适合中小型前后端分离的项目。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>自 2016 年开源 7 年来发展迅速，目前 16K+ Star 位居 400W Java 开源项目前 100。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>国内，腾讯、华为、阿里巴巴、字节跳动、美团、拼多多、百度、京东、网易、快手、圆通，等 和<br> 国外 Google, Apple, Microsoft, Amazon, Tesla, Meta(FB), Paypal 等数百个知名大厂员工 Star，<br> 也有，腾讯、华为、字节跳动、Microsoft、Zoom、知乎，等 工程师/专家/架构师，提了 PR/Issue，<br> 还被，腾讯、华为、百度、SHEIN、快手、中兴、传音、圆通、美图，等各大知名厂商用于各类项目。</strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1352" src="https://oscimg.oschina.net/oscnet/up-05507add1ab73979181e2a721832b2ef017.png" width="1850" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="1344" src="https://oscimg.oschina.net/oscnet/up-b0118180bc641918130cef0f4dee2bf1ca1.png" width="1634" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><h1>apijson-influxdb<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjitpack.io%2F%23APIJSON%2Fapijson-influxdb" target="_blank"><img alt="" src="https://camo.githubusercontent.com/55f0e390e03835ec2f3c0b4b5900f178c1b9936e2812bf6713752eba0cc42c35/68747470733a2f2f6a69747061636b2e696f2f762f4150494a534f4e2f6170696a736f6e2d696e666c757864622e737667" referrerpolicy="no-referrer"></a></h1><p style="color:#1f2328; text-align:start">腾讯<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FAPIJSON" target="_blank">APIJSON</a><span>&nbsp;</span>6.1.0+ 的 InfluxDB 数据库插件，可通过 Maven, Gradle 等远程依赖。<br> An InfluxDB plugin for Tencent<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FAPIJSON" target="_blank">APIJSON</a><span>&nbsp;</span>6.1.0+</p><p><img height="537" src="https://oscimg.oschina.net/oscnet/up-2622b2a410334f159d06a034274178e5160.png" width="1280" referrerpolicy="no-referrer"></p><p style="color:#1f2328; text-align:start"><span>&nbsp;</span><img height="774" src="https://oscimg.oschina.net/oscnet/up-85ca42d8fe14a70bfc0c3b0ab5128d4eb43.png" width="1280" referrerpolicy="no-referrer"></p><h2>添加依赖</h2><h2>Add Dependency</h2><h3>Maven</h3><h4>1. 在 pom.xml 中添加 JitPack 仓库</h4><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">repositories</span>&gt;
&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">repository</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">id</span>&gt;jitpack.io&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">id</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">url</span>&gt;https://jitpack.io&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">url</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">repository</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">repositories</span>&gt;
</pre></div><h4>2. 在 pom.xml 中添加 apijson-influxdb 依赖</h4><div><pre>&lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;com.github.APIJSON&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">groupId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;apijson-influxdb&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">artifactId</span>&gt;
    &lt;<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;LATEST&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">version</span>&gt;
&lt;/<span style="color:var(--color-prettylights-syntax-entity-tag)">dependency</span>&gt;</pre><div><h2>使用</h2><h2>Usage</h2><p style="color:#1f2328; text-align:start">在你项目继承 AbstractSQLExecutor 的子类重写方法 execute<br> Override execute in your SQLExecutor extends AbstractSQLExecutor</p><div><pre><span style="color:var(--color-prettylights-syntax-constant)">@</span><span style="color:var(--color-prettylights-syntax-constant)">Override</span><span style="color:var(--color-prettylights-syntax-keyword)">public</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">JSONObject</span><span>execute</span>(<span style="color:var(--color-prettylights-syntax-constant)">@</span><span style="color:var(--color-prettylights-syntax-constant)">NotNull</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">SQLConfig</span>&lt;<span style="color:var(--color-prettylights-syntax-storage-modifier-import)">Long</span>&gt; <span>config</span>, <span style="color:var(--color-prettylights-syntax-storage-modifier-import)">boolean</span><span>unknownType</span>) <span style="color:var(--color-prettylights-syntax-keyword)">throws</span><span>Exception</span> {
            <span style="color:var(--color-prettylights-syntax-keyword)">if</span> (<span>config</span>.<span style="color:var(--color-prettylights-syntax-entity)">isInfluxDB</span>()) {
                <span style="color:var(--color-prettylights-syntax-keyword)">return</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">InfluxdbUtil</span>.<span style="color:var(--color-prettylights-syntax-entity)">execute</span>(<span>config</span>, <span style="color:var(--color-prettylights-syntax-constant)">null</span>, <span>unknownType</span>);
            }
   
            <span style="color:var(--color-prettylights-syntax-keyword)">return</span><span style="color:var(--color-prettylights-syntax-entity)">super</span>.<span style="color:var(--color-prettylights-syntax-entity)">execute</span>(<span>config</span>, <span>unknownType</span>);
        }</pre><div>
    &nbsp;
   </div></div><br><span style="background-color:#ffffff; color:#1f2328">在你项目继承 AbstractSQLConfig 的子类重写方法 execute</span><br><span style="background-color:#ffffff; color:#1f2328">Override execute in your SQLConfig extends AbstractSQLConfig</span><div><pre><span style="color:var(--color-prettylights-syntax-constant)">@</span><span style="color:var(--color-prettylights-syntax-constant)">Override</span><span style="color:var(--color-prettylights-syntax-keyword)">public</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">String</span><span>getSchema</span>() {
<span style="color:var(--color-prettylights-syntax-keyword)">return</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">InfluxDBUtil</span>.<span style="color:var(--color-prettylights-syntax-entity)">getSchema</span>(<span style="color:var(--color-prettylights-syntax-entity)">super</span>.<span style="color:var(--color-prettylights-syntax-entity)">getSchema</span>(), <span style="color:var(--color-prettylights-syntax-constant)">DEFAULT_SCHEMA</span>, <span style="color:var(--color-prettylights-syntax-entity)">isInfluxDB</span>());
}

<span style="color:var(--color-prettylights-syntax-constant)">@</span><span style="color:var(--color-prettylights-syntax-constant)">Override</span><span style="color:var(--color-prettylights-syntax-keyword)">public</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">String</span><span>getSQLSchema</span>() {
<span style="color:var(--color-prettylights-syntax-keyword)">return</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">InfluxDBUtil</span>.<span style="color:var(--color-prettylights-syntax-entity)">getSQLSchema</span>(<span style="color:var(--color-prettylights-syntax-entity)">super</span>.<span style="color:var(--color-prettylights-syntax-entity)">getSQLSchema</span>(), <span style="color:var(--color-prettylights-syntax-entity)">isInfluxDB</span>());
}
</pre></div></div></div><p style="color:#1f2328; text-align:start">有问题可以去 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FTencent%2FAPIJSON" target="_blank">Tencent/APIJSON</a> 提 issue</p><p style="color:#1f2328; text-align:start">&nbsp;</p><h4>点右上角 ⭐Star 支持一下，谢谢 ^_^</h4><p style="color:#1f2328; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FAPIJSON%2Fapijson-influxdb" target="_blank">https://github.com/APIJSON/apijson-influxdb</a></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 16 Jan 2024 02:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/275914</guid>
            <link>https://www.oschina.net/news/275914</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
