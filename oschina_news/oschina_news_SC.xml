<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 05 Feb 2024 02:41:52 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Tauri v2 支持 Android 和 iOS，跨平台开发新选择]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Tauri v2 首个 Beta 已发布，新版本添加了<strong>对移动端（iOS 和 Android）的支持</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a84ea1fdc7a280dc620420b12cee4e8bf63.png" referrerpolicy="no-referrer"></p><p>公告<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbeta.tauri.app%2Fblog%2Ftauri-2-0-0-beta%2F" target="_blank">写道</a></u>：「Tauri v2 是支持跨平台开发的一个重大里程碑，开发桌面和移动应用程序从未如此简单。你可以将现有的桌面程序无缝迁移到移动设备，并获得原生 API 和 Tauri CLI 的出色开发者体验。」</p><blockquote><p>Tauri 是一个桌面 UI 框架，可让开发者使用每个平台的 Webview 技术栈为所有主要桌面操作系统构建应用程序，目前支持 Windows/macOS/Linux 等平台。开发者通过 Tauri 几乎可以使用任何编译为 HTML、JS 和 CSS 的前端框架来构建桌面 UI。</p><p>Tauri 核心库采用 Rust 编写，使用 Tauri 开发的应用程序的后端是一个基于 Rust 的二进制文件，带有一个前端可以与之交互的 API，通过 JS Api 调用后台接口。</p></blockquote><p><strong>Tauri v2 新特性</strong></p><ul><li>改进 IPC</li><li>支持多 Webview</li><li>新增菜单和托盘图标 JavaScript APIs</li><li>新增原生上下文菜单</li><li>实现多个窗口 API</li><li>移动端原生 API 目前支持通知、对话框、NFC、条形码读取、生物识别、剪贴板和深度链接 (deep link)</li></ul><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftauri-apps%2Ftauri%2Freleases%2Ftag%2Ftauri-cli-v2.0.0-beta.1" target="_blank">Release Notes</a></u></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 05 Feb 2024 02:01:51 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277805/tauri-2-0-0-beta</guid>
            <link>https://www.oschina.net/news/277805/tauri-2-0-0-beta</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[pgx —— PostgreSQL 的纯 Go 驱动程序和工具包]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>pgx 是用于 PostgreSQL 的纯 Go 驱动程序和工具包。</p><p>pgx 驱动程序是一个低级、高性能的接口，它 expose 了 PostgreSQL 特有的功能，如 LISTEN / NOTIFY 和 COPY。它还包括一个标准<code>database/sql</code>接口适配器。</p><p>工具包组件是一组相关的软件包，用于实现 PostgreSQL 的功能，如解析线协议和 PostgreSQL 与 Go 之间的类型映射。这些底层软件包可用于实现替代驱动程序、代理、负载平衡器、逻辑复制客户端等。</p><p><strong>用法示例：</strong></p><pre style="text-align:start"><span style="color:var(--color-prettylights-syntax-keyword)">package</span> main

<span style="color:var(--color-prettylights-syntax-keyword)">import</span> (
<span style="color:var(--color-prettylights-syntax-string)">"context"</span><span style="color:var(--color-prettylights-syntax-string)">"fmt"</span><span style="color:var(--color-prettylights-syntax-string)">"os"</span><span style="color:var(--color-prettylights-syntax-string)">"github.com/jackc/pgx/v5"</span>
)

<span style="color:var(--color-prettylights-syntax-keyword)">func</span><span style="color:var(--color-prettylights-syntax-entity)">main</span>() {
<span style="color:var(--color-prettylights-syntax-comment)">// urlExample := "postgres://username:password@localhost:5432/database_name"</span><span>conn</span>, <span>err</span><span style="color:var(--color-prettylights-syntax-constant)">:=</span><span>pgx</span>.<span style="color:var(--color-prettylights-syntax-entity)">Connect</span>(<span>context</span>.<span style="color:var(--color-prettylights-syntax-entity)">Background</span>(), <span>os</span>.<span style="color:var(--color-prettylights-syntax-entity)">Getenv</span>(<span style="color:var(--color-prettylights-syntax-string)">"DATABASE_URL"</span>))
<span style="color:var(--color-prettylights-syntax-keyword)">if</span><span>err</span><span style="color:var(--color-prettylights-syntax-constant)">!=</span><span style="color:var(--color-prettylights-syntax-constant)">nil</span> {
<span>fmt</span>.<span style="color:var(--color-prettylights-syntax-entity)">Fprintf</span>(<span>os</span>.<span style="color:var(--color-prettylights-syntax-constant)">Stderr</span>, <span style="color:var(--color-prettylights-syntax-string)">"Unable to connect to database: %v<span>\n</span>"</span>, <span>err</span>)
<span>os</span>.<span style="color:var(--color-prettylights-syntax-entity)">Exit</span>(<span style="color:var(--color-prettylights-syntax-constant)">1</span>)
}
<span style="color:var(--color-prettylights-syntax-keyword)">defer</span><span>conn</span>.<span style="color:var(--color-prettylights-syntax-entity)">Close</span>(<span>context</span>.<span style="color:var(--color-prettylights-syntax-entity)">Background</span>())

<span style="color:var(--color-prettylights-syntax-keyword)">var</span><span>name</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">string</span><span style="color:var(--color-prettylights-syntax-keyword)">var</span><span>weight</span><span style="color:var(--color-prettylights-syntax-storage-modifier-import)">int64</span><span>err</span><span style="color:var(--color-prettylights-syntax-constant)">=</span><span>conn</span>.<span style="color:var(--color-prettylights-syntax-entity)">QueryRow</span>(<span>context</span>.<span style="color:var(--color-prettylights-syntax-entity)">Background</span>(), <span style="color:var(--color-prettylights-syntax-string)">"select name, weight from widgets where id=$1"</span>, <span style="color:var(--color-prettylights-syntax-constant)">42</span>).<span style="color:var(--color-prettylights-syntax-entity)">Scan</span>(<span style="color:var(--color-prettylights-syntax-constant)">&amp;</span><span>name</span>, <span style="color:var(--color-prettylights-syntax-constant)">&amp;</span><span>weight</span>)
<span style="color:var(--color-prettylights-syntax-keyword)">if</span><span>err</span><span style="color:var(--color-prettylights-syntax-constant)">!=</span><span style="color:var(--color-prettylights-syntax-constant)">nil</span> {
<span>fmt</span>.<span style="color:var(--color-prettylights-syntax-entity)">Fprintf</span>(<span>os</span>.<span style="color:var(--color-prettylights-syntax-constant)">Stderr</span>, <span style="color:var(--color-prettylights-syntax-string)">"QueryRow failed: %v<span>\n</span>"</span>, <span>err</span>)
<span>os</span>.<span style="color:var(--color-prettylights-syntax-entity)">Exit</span>(<span style="color:var(--color-prettylights-syntax-constant)">1</span>)
}

<span>fmt</span>.<span style="color:var(--color-prettylights-syntax-entity)">Println</span>(<span>name</span>, <span>weight</span>)
}
</pre><p><strong>特性：</strong></p><ul><li>支持大约 70 种不同的 PostgreSQL 类型</li><li>自动语句准备和缓存</li><li>批量查询</li><li>单次往返查询方式</li><li>完整的 TLS 连接控制</li><li>对自定义类型的二进制格式支持（允许更快的编码/解码）</li><li><code>COPY</code>协议支持，实现更快的批量数据加载</li><li>Tracing 和 logging 支持</li><li>带有 after-connect hook 的连接池，用于任意连接设置</li><li><code>LISTEN</code>/<code>NOTIFY</code></li><li>将 PostgreSQL 数组转换为整数、浮点数和字符串的 Go 切片映射</li><li><code>hstore</code>支持</li><li><code>json</code>和<code>jsonb</code>支持</li><li>将<code>inet</code>和<code>cidr</code>PostgreSQL 类型映射为<code>netip.Addr</code>和<code>netip.Prefix</code></li><li>Large object&nbsp; 支持</li><li>NULL 映射为&nbsp;pointer to pointer</li><li>支持自定义类型的<code>database/sql.Scanner</code>和<code>database/sql/driver.Valuer</code>接口</li><li>通知响应处理</li><li>使用保存点模拟嵌套事务</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Mon, 05 Feb 2024 01:58:57 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/pgx</guid>
            <link>https://www.oschina.net/p/pgx</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 云原生开发工具 KubeVPN]]>
            </title>
            <description>
                <![CDATA[<p><img src="https://raw.githubusercontent.com/wencaiwulue/kubevpn/master/samples/flat_log.png" alt="kubevpn" referrerpolicy="no-referrer"></p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubenetworks%2Fkubevpn%2Factions"><img src="https://img.shields.io/github/actions/workflow/status/kubenetworks/kubevpn/release.yml?logo=github" alt="GitHub Workflow" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubenetworks%2Fkubevpn%2Fblob%2Fmaster%2Fgo.mod"><img src="https://img.shields.io/github/go-mod/go-version/kubenetworks/kubevpn?logo=go" alt="Go Version" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgoreportcard.com%2Freport%2Fgithub.com%2Fwencaiwulue%2Fkubevpn"><img src="https://goreportcard.com/badge/github.com/wencaiwulue/kubevpn?style=flat" alt="Go Report" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fcodeclimate.com%2Fgithub%2Fkubenetworks%2Fkubevpn%2Fmaintainability"><img src="https://api.codeclimate.com/v1/badges/b5b30239174fc6603aca/maintainability" alt="Maintainability" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubenetworks%2Fkubevpn%2Fblob%2Fmain%2FLICENSE"><img src="https://img.shields.io/github/license/kubenetworks/kubevpn" alt="GitHub License" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fhub.docker.com%2Fr%2Fnaison%2Fkubevpn"><img src="https://img.shields.io/docker/pulls/naison/kubevpn?logo=docker" alt="Docker Pulls" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubenetworks%2Fkubevpn%2Freleases"><img src="https://img.shields.io/github/v/release/kubenetworks/kubevpn?logo=smartthings" alt="Releases" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgodoc.org%2Fgithub.com%2Fkubenetworks%2Fkubevpn"><img src="https://godoc.org/github.com/kubenetworks/kubevpn?status.png" alt="GoDoc" referrerpolicy="no-referrer"></a></p><h1><a id="kubevpn" class="anchor" href="https://gitee.com/kubevpn/kubevpn#kubevpn"></a>KubeVPN</h1><p><a href="https://gitee.com/kubevpn/kubevpn/blob/master/README.md">English</a> | <a href="https://gitee.com/kubevpn/kubevpn/blob/master/README_ZH.md">中文</a> | <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubenetworks%2Fkubevpn%2Fwiki%2F%25E6%259E%25B6%25E6%259E%2584">维基</a></p><p>KubeVPN 是一个云原生开发工具。通过连接云端 kubernetes 网络，可以在本地使用 k8s dns 或者 Pod IP / Service IP
直接访问远端集群中的服务。拦截远端集群中的工作负载的入流量到本地电脑，配合服务网格便于调试及开发。同时还可以使用开发模式，直接在本地使用 Docker
模拟 k8s pod runtime 将容器运行在本地 (具有相同的环境变量，磁盘和网络)。</p><h2><a id="快速开始" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B"></a>快速开始</h2><h4><a id="从-github-release-下载编译好的二进制文件" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E4%BB%8E-github-release-%E4%B8%8B%E8%BD%BD%E7%BC%96%E8%AF%91%E5%A5%BD%E7%9A%84%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6"></a>从 Github release 下载编译好的二进制文件</h4><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubenetworks%2Fkubevpn%2Freleases%2Flatest">链接</a></p><h4><a id="从-自定义-krew-仓库安装" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E4%BB%8E-%E8%87%AA%E5%AE%9A%E4%B9%89-krew-%E4%BB%93%E5%BA%93%E5%AE%89%E8%A3%85"></a>从，自定义 Krew 仓库安装</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="o">(</span></span><span id="LC2" class="line">  kubectl krew index add kubevpn https://github.com/kubenetworks/kubevpn.git <span class="o">&amp;&amp;</span><span class="se">\</span></span><span id="LC3" class="line">  kubectl krew <span class="nb">install </span>kubevpn/kubevpn <span class="o">&amp;&amp;</span> kubectl kubevpn </span><span id="LC4" class="line"><span class="o">)</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="自己构建二进制文件" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E8%87%AA%E5%B7%B1%E6%9E%84%E5%BB%BA%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%96%87%E4%BB%B6"></a>自己构建二进制文件</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="o">(</span></span><span id="LC2" class="line">  git clone https://github.com/kubenetworks/kubevpn.git <span class="o">&amp;&amp;</span><span class="se">\</span></span><span id="LC3" class="line"><span class="nb">cd </span>kubevpn <span class="o">&amp;&amp;</span> make kubevpn <span class="o">&amp;&amp;</span> ./bin/kubevpn</span><span id="LC4" class="line"><span class="o">)</span></span><span id="LC5" class="line"></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="安装-bookinfo-作为-demo-应用" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E5%AE%89%E8%A3%85-bookinfo-%E4%BD%9C%E4%B8%BA-demo-%E5%BA%94%E7%94%A8"></a>安装 bookinfo 作为 demo 应用</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">kubectl apply <span class="nt">-f</span> https://raw.githubusercontent.com/kubenetworks/kubevpn/master/samples/bookinfo.yaml</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="功能" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E5%8A%9F%E8%83%BD"></a>功能</h2><h3><a id="链接到集群网络" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E9%93%BE%E6%8E%A5%E5%88%B0%E9%9B%86%E7%BE%A4%E7%BD%91%E7%BB%9C"></a>链接到集群网络</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubevpn connect</span><span id="LC2" class="line">Password:</span><span id="LC3" class="line">start to connect</span><span id="LC4" class="line">get cidr from cluster info...</span><span id="LC5" class="line">get cidr from cluster info ok</span><span id="LC6" class="line">get cidr from cni...</span><span id="LC7" class="line"><span class="nb">wait </span>pod cni-net-dir-kubevpn to be running <span class="nb">timeout</span>, reason , ignore</span><span id="LC8" class="line">get cidr from svc...</span><span id="LC9" class="line">get cidr from svc ok</span><span id="LC10" class="line">get cidr successfully</span><span id="LC11" class="line">traffic manager not exist, try to create it...</span><span id="LC12" class="line">label namespace default</span><span id="LC13" class="line">create serviceAccount kubevpn-traffic-manager</span><span id="LC14" class="line">create roles kubevpn-traffic-manager</span><span id="LC15" class="line">create roleBinding kubevpn-traffic-manager</span><span id="LC16" class="line">create service kubevpn-traffic-manager</span><span id="LC17" class="line">create deployment kubevpn-traffic-manager</span><span id="LC18" class="line">pod kubevpn-traffic-manager-66d969fd45-9zlbp is Pending</span><span id="LC19" class="line">Container     Reason            Message</span><span id="LC20" class="line">control-plane ContainerCreating</span><span id="LC21" class="line">vpn           ContainerCreating</span><span id="LC22" class="line">webhook       ContainerCreating</span><span id="LC23" class="line"></span><span id="LC24" class="line">pod kubevpn-traffic-manager-66d969fd45-9zlbp is Running</span><span id="LC25" class="line">Container     Reason           Message</span><span id="LC26" class="line">control-plane ContainerRunning</span><span id="LC27" class="line">vpn           ContainerRunning</span><span id="LC28" class="line">webhook       ContainerRunning</span><span id="LC29" class="line"></span><span id="LC30" class="line">Creating mutatingWebhook_configuration <span class="k">for </span>kubevpn-traffic-manager</span><span id="LC31" class="line">update ref count successfully</span><span id="LC32" class="line">port forward ready</span><span id="LC33" class="line">tunnel connected</span><span id="LC34" class="line">dns service ok</span><span id="LC35" class="line">+---------------------------------------------------------------------------+</span><span id="LC36" class="line">|    Now you can access resources <span class="k">in </span>the kubernetes cluster, enjoy it :<span class="o">)</span>    |</span><span id="LC37" class="line">+---------------------------------------------------------------------------+</span><span id="LC38" class="line">➜  ~</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubectl get pods <span class="nt">-o</span> wide</span><span id="LC2" class="line">NAME                                       READY   STATUS             RESTARTS   AGE     IP                NODE              NOMINATED NODE   READINESS GATES</span><span id="LC3" class="line">authors-dbb57d856-mbgqk                    3/3     Running            0          7d23h   172.29.2.132      192.168.0.5       &lt;none&gt;           &lt;none&gt;</span><span id="LC4" class="line">details-7d8b5f6bcf-hcl4t                   1/1     Running            0          61d     172.29.0.77       192.168.104.255   &lt;none&gt;           &lt;none&gt;</span><span id="LC5" class="line">kubevpn-traffic-manager-66d969fd45-9zlbp   3/3     Running            0          74s     172.29.2.136      192.168.0.5       &lt;none&gt;           &lt;none&gt;</span><span id="LC6" class="line">productpage-788df7ff7f-jpkcs               1/1     Running            0          61d     172.29.2.134      192.168.0.5       &lt;none&gt;           &lt;none&gt;</span><span id="LC7" class="line">ratings-77b6cd4499-zvl6c                   1/1     Running            0          61d     172.29.0.86       192.168.104.255   &lt;none&gt;           &lt;none&gt;</span><span id="LC8" class="line">reviews-85c88894d9-vgkxd                   1/1     Running            0          24d     172.29.2.249      192.168.0.5       &lt;none&gt;           &lt;none&gt;</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ ping 172.29.2.134</span><span id="LC2" class="line">PING 172.29.2.134 <span class="o">(</span>172.29.2.134<span class="o">)</span>: 56 data bytes</span><span id="LC3" class="line">64 bytes from 172.29.2.134: <span class="nv">icmp_seq</span><span class="o">=</span>0 <span class="nv">ttl</span><span class="o">=</span>63 <span class="nb">time</span><span class="o">=</span>55.727 ms</span><span id="LC4" class="line">64 bytes from 172.29.2.134: <span class="nv">icmp_seq</span><span class="o">=</span>1 <span class="nv">ttl</span><span class="o">=</span>63 <span class="nb">time</span><span class="o">=</span>56.270 ms</span><span id="LC5" class="line">64 bytes from 172.29.2.134: <span class="nv">icmp_seq</span><span class="o">=</span>2 <span class="nv">ttl</span><span class="o">=</span>63 <span class="nb">time</span><span class="o">=</span>55.228 ms</span><span id="LC6" class="line">64 bytes from 172.29.2.134: <span class="nv">icmp_seq</span><span class="o">=</span>3 <span class="nv">ttl</span><span class="o">=</span>63 <span class="nb">time</span><span class="o">=</span>54.293 ms</span><span id="LC7" class="line">^C</span><span id="LC8" class="line"><span class="nt">---</span> 172.29.2.134 ping statistics <span class="nt">---</span></span><span id="LC9" class="line">4 packets transmitted, 4 packets received, 0.0% packet loss</span><span id="LC10" class="line">round-trip min/avg/max/stddev <span class="o">=</span> 54.293/55.380/56.270/0.728 ms</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubectl get services <span class="nt">-o</span> wide</span><span id="LC2" class="line">NAME                      TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class="o">(</span>S<span class="o">)</span>                              AGE     SELECTOR</span><span id="LC3" class="line">authors                   ClusterIP   172.21.5.160    &lt;none&gt;        9080/TCP                             114d    <span class="nv">app</span><span class="o">=</span>authors</span><span id="LC4" class="line">details                   ClusterIP   172.21.6.183    &lt;none&gt;        9080/TCP                             114d    <span class="nv">app</span><span class="o">=</span>details</span><span id="LC5" class="line">kubernetes                ClusterIP   172.21.0.1      &lt;none&gt;        443/TCP                              319d    &lt;none&gt;</span><span id="LC6" class="line">kubevpn-traffic-manager   ClusterIP   172.21.2.86     &lt;none&gt;        8422/UDP,10800/TCP,9002/TCP,80/TCP   2m28s   <span class="nv">app</span><span class="o">=</span>kubevpn-traffic-manager</span><span id="LC7" class="line">productpage               ClusterIP   172.21.10.49    &lt;none&gt;        9080/TCP                             114d    <span class="nv">app</span><span class="o">=</span>productpage</span><span id="LC8" class="line">ratings                   ClusterIP   172.21.3.247    &lt;none&gt;        9080/TCP                             114d    <span class="nv">app</span><span class="o">=</span>ratings</span><span id="LC9" class="line">reviews                   ClusterIP   172.21.8.24     &lt;none&gt;        9080/TCP                             114d    <span class="nv">app</span><span class="o">=</span>reviews</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ curl 172.21.10.49:9080</span><span id="LC2" class="line">&lt;<span class="o">!</span>DOCTYPE html&gt;</span><span id="LC3" class="line">&lt;html&gt;</span><span id="LC4" class="line">  &lt;<span class="nb">head</span><span class="o">&gt;</span></span><span id="LC5" class="line">    &lt;title&gt;Simple Bookstore App&lt;/title&gt;</span><span id="LC6" class="line">&lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">"utf-8"</span><span class="o">&gt;</span></span><span id="LC7" class="line">&lt;meta http-equiv<span class="o">=</span><span class="s2">"X-UA-Compatible"</span><span class="nv">content</span><span class="o">=</span><span class="s2">"IE=edge"</span><span class="o">&gt;</span></span><span id="LC8" class="line">&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">"viewport"</span><span class="nv">content</span><span class="o">=</span><span class="s2">"width=device-width, initial-scale=1"</span><span class="o">&gt;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="域名解析功能" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%8A%9F%E8%83%BD"></a>域名解析功能</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ curl productpage.default.svc.cluster.local:9080</span><span id="LC2" class="line">&lt;<span class="o">!</span>DOCTYPE html&gt;</span><span id="LC3" class="line">&lt;html&gt;</span><span id="LC4" class="line">  &lt;<span class="nb">head</span><span class="o">&gt;</span></span><span id="LC5" class="line">    &lt;title&gt;Simple Bookstore App&lt;/title&gt;</span><span id="LC6" class="line">&lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">"utf-8"</span><span class="o">&gt;</span></span><span id="LC7" class="line">&lt;meta http-equiv<span class="o">=</span><span class="s2">"X-UA-Compatible"</span><span class="nv">content</span><span class="o">=</span><span class="s2">"IE=edge"</span><span class="o">&gt;</span></span><span id="LC8" class="line">&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">"viewport"</span><span class="nv">content</span><span class="o">=</span><span class="s2">"width=device-width, initial-scale=1"</span><span class="o">&gt;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="短域名解析功能" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E7%9F%AD%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%8A%9F%E8%83%BD"></a>短域名解析功能</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ curl productpage:9080</span><span id="LC2" class="line">&lt;<span class="o">!</span>DOCTYPE html&gt;</span><span id="LC3" class="line">&lt;html&gt;</span><span id="LC4" class="line">  &lt;<span class="nb">head</span><span class="o">&gt;</span></span><span id="LC5" class="line">    &lt;title&gt;Simple Bookstore App&lt;/title&gt;</span><span id="LC6" class="line">&lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">"utf-8"</span><span class="o">&gt;</span></span><span id="LC7" class="line">&lt;meta http-equiv<span class="o">=</span><span class="s2">"X-UA-Compatible"</span><span class="nv">content</span><span class="o">=</span><span class="s2">"IE=edge"</span><span class="o">&gt;</span></span><span id="LC8" class="line">...</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="链接到多集群网络" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E9%93%BE%E6%8E%A5%E5%88%B0%E5%A4%9A%E9%9B%86%E7%BE%A4%E7%BD%91%E7%BB%9C"></a>链接到多集群网络</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubevpn status</span><span id="LC2" class="line">ID Mode Cluster               Kubeconfig                 Namespace Status</span><span id="LC3" class="line">0  full ccijorbccotmqodvr189g /Users/naison/.kube/config default   Connected</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubevpn connect <span class="nt">-n</span> default <span class="nt">--kubeconfig</span> ~/.kube/dev_config <span class="nt">--lite</span></span><span id="LC2" class="line">start to connect</span><span id="LC3" class="line">got cidr from cache</span><span id="LC4" class="line">get cidr successfully</span><span id="LC5" class="line">update ref count successfully</span><span id="LC6" class="line">traffic manager already exist, reuse it</span><span id="LC7" class="line">port forward ready</span><span id="LC8" class="line">tunnel connected</span><span id="LC9" class="line">adding route...</span><span id="LC10" class="line">dns service ok</span><span id="LC11" class="line">+---------------------------------------------------------------------------+</span><span id="LC12" class="line">|    Now you can access resources <span class="k">in </span>the kubernetes cluster, enjoy it :<span class="o">)</span>    |</span><span id="LC13" class="line">+---------------------------------------------------------------------------+</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubevpn status</span><span id="LC2" class="line">ID Mode Cluster               Kubeconfig                     Namespace Status</span><span id="LC3" class="line">0  full ccijorbccotmqodvr189g /Users/naison/.kube/config     default   Connected</span><span id="LC4" class="line">1  lite ccidd77aam2dtnc3qnddg /Users/naison/.kube/dev_config default   Connected</span><span id="LC5" class="line">➜  ~</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="反向代理" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86"></a>反向代理</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubevpn proxy deployment/productpage</span><span id="LC2" class="line">already connect to cluster</span><span id="LC3" class="line">start to create remote inbound pod <span class="k">for </span>deployment/productpage</span><span id="LC4" class="line">workload default/deployment/productpage is controlled by a controller</span><span id="LC5" class="line">rollout status <span class="k">for </span>deployment/productpage</span><span id="LC6" class="line">Waiting <span class="k">for </span>deployment <span class="s2">"productpage"</span> rollout to finish: 1 old replicas are pending termination...</span><span id="LC7" class="line">Waiting <span class="k">for </span>deployment <span class="s2">"productpage"</span> rollout to finish: 1 old replicas are pending termination...</span><span id="LC8" class="line">deployment <span class="s2">"productpage"</span> successfully rolled out</span><span id="LC9" class="line">rollout status <span class="k">for </span>deployment/productpage successfully</span><span id="LC10" class="line">create remote inbound pod <span class="k">for </span>deployment/productpage successfully</span><span id="LC11" class="line">+---------------------------------------------------------------------------+</span><span id="LC12" class="line">|    Now you can access resources <span class="k">in </span>the kubernetes cluster, enjoy it :<span class="o">)</span>    |</span><span id="LC13" class="line">+---------------------------------------------------------------------------+</span><span id="LC14" class="line">➜  ~</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">package</span><span class="n">main</span></span><span id="LC2" class="line"></span><span id="LC3" class="line"><span class="k">import</span><span class="p">(</span></span><span id="LC4" class="line"><span class="s">"io"</span></span><span id="LC5" class="line"><span class="s">"net/http"</span></span><span id="LC6" class="line"><span class="p">)</span></span><span id="LC7" class="line"></span><span id="LC8" class="line"><span class="k">func</span><span class="n">main</span><span class="p">()</span><span class="p">{</span></span><span id="LC9" class="line"><span class="n">http</span><span class="o">.</span><span class="n">HandleFunc</span><span class="p">(</span><span class="s">"/"</span><span class="p">,</span><span class="k">func</span><span class="p">(</span><span class="n">writer</span><span class="n">http</span><span class="o">.</span><span class="n">ResponseWriter</span><span class="p">,</span><span class="n">request</span><span class="o">*</span><span class="n">http</span><span class="o">.</span><span class="n">Request</span><span class="p">)</span><span class="p">{</span></span><span id="LC10" class="line"><span class="n">_</span><span class="p">,</span><span class="n">_</span><span class="o">=</span><span class="n">io</span><span class="o">.</span><span class="n">WriteString</span><span class="p">(</span><span class="n">writer</span><span class="p">,</span><span class="s">"Hello world!"</span><span class="p">)</span></span><span id="LC11" class="line"><span class="p">})</span></span><span id="LC12" class="line"><span class="n">_</span><span class="o">=</span><span class="n">http</span><span class="o">.</span><span class="n">ListenAndServe</span><span class="p">(</span><span class="s">":9080"</span><span class="p">,</span><span class="no">nil</span><span class="p">)</span></span><span id="LC13" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ curl productpage:9080</span><span id="LC2" class="line">Hello world!%</span><span id="LC3" class="line">➜  ~ curl productpage.default.svc.cluster.local:9080</span><span id="LC4" class="line">Hello world!%</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="反向代理支持-service-mesh" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E6%94%AF%E6%8C%81-service-mesh"></a>反向代理支持 service mesh</h3><p>支持 HTTP, GRPC 和 WebSocket 等, 携带了指定 header <code>"a: 1"</code> 的流量，将会路由到本地</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubevpn proxy deployment/productpage <span class="nt">--headers</span><span class="nv">a</span><span class="o">=</span>1</span><span id="LC2" class="line">already connect to cluster</span><span id="LC3" class="line">start to create remote inbound pod <span class="k">for </span>deployment/productpage</span><span id="LC4" class="line">patch workload default/deployment/productpage with sidecar</span><span id="LC5" class="line">rollout status <span class="k">for </span>deployment/productpage</span><span id="LC6" class="line">Waiting <span class="k">for </span>deployment <span class="s2">"productpage"</span> rollout to finish: 1 old replicas are pending termination...</span><span id="LC7" class="line">Waiting <span class="k">for </span>deployment <span class="s2">"productpage"</span> rollout to finish: 1 old replicas are pending termination...</span><span id="LC8" class="line">deployment <span class="s2">"productpage"</span> successfully rolled out</span><span id="LC9" class="line">rollout status <span class="k">for </span>deployment/productpage successfully</span><span id="LC10" class="line">create remote inbound pod <span class="k">for </span>deployment/productpage successfully</span><span id="LC11" class="line">+---------------------------------------------------------------------------+</span><span id="LC12" class="line">|    Now you can access resources <span class="k">in </span>the kubernetes cluster, enjoy it :<span class="o">)</span>    |</span><span id="LC13" class="line">+---------------------------------------------------------------------------+</span><span id="LC14" class="line">➜  ~</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ curl productpage:9080</span><span id="LC2" class="line">&lt;<span class="o">!</span>DOCTYPE html&gt;</span><span id="LC3" class="line">&lt;html&gt;</span><span id="LC4" class="line">  &lt;<span class="nb">head</span><span class="o">&gt;</span></span><span id="LC5" class="line">    &lt;title&gt;Simple Bookstore App&lt;/title&gt;</span><span id="LC6" class="line">&lt;meta <span class="nv">charset</span><span class="o">=</span><span class="s2">"utf-8"</span><span class="o">&gt;</span></span><span id="LC7" class="line">&lt;meta http-equiv<span class="o">=</span><span class="s2">"X-UA-Compatible"</span><span class="nv">content</span><span class="o">=</span><span class="s2">"IE=edge"</span><span class="o">&gt;</span></span><span id="LC8" class="line">&lt;meta <span class="nv">name</span><span class="o">=</span><span class="s2">"viewport"</span><span class="nv">content</span><span class="o">=</span><span class="s2">"width=device-width, initial-scale=1"</span><span class="o">&gt;</span></span><span id="LC9" class="line">...</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ curl productpage:9080 <span class="nt">-H</span><span class="s2">"a: 1"</span></span><span id="LC2" class="line">Hello world!%</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>如果你需要取消代理流量，可以执行如下命令：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubevpn leave deployments/productpage</span><span id="LC2" class="line">leave workload deployments/productpage</span><span id="LC3" class="line">workload default/deployments/productpage is controlled by a controller</span><span id="LC4" class="line">leave workload deployments/productpage successfully</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="本地进入开发模式-" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E6%9C%AC%E5%9C%B0%E8%BF%9B%E5%85%A5%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F-"></a>本地进入开发模式 🐳</h3><p>将 Kubernetes pod 运行在本地的 Docker 容器中，同时配合 service mesh, 拦截带有指定 header 的流量到本地，或者所有的流量到本地。这个开发模式依赖于本地 Docker。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubevpn dev deployment/authors <span class="nt">--headers</span><span class="nv">a</span><span class="o">=</span>1 <span class="nt">-it</span><span class="nt">--rm</span><span class="nt">--entrypoint</span> sh</span><span id="LC2" class="line">connectting to cluster</span><span id="LC3" class="line">start to connect</span><span id="LC4" class="line">got cidr from cache</span><span id="LC5" class="line">get cidr successfully</span><span id="LC6" class="line">update ref count successfully</span><span id="LC7" class="line">traffic manager already exist, reuse it</span><span id="LC8" class="line">port forward ready</span><span id="LC9" class="line">tunnel connected</span><span id="LC10" class="line">dns service ok</span><span id="LC11" class="line">start to create remote inbound pod <span class="k">for </span>Deployment.apps/authors</span><span id="LC12" class="line">patch workload default/Deployment.apps/authors with sidecar</span><span id="LC13" class="line">rollout status <span class="k">for </span>Deployment.apps/authors</span><span id="LC14" class="line">Waiting <span class="k">for </span>deployment <span class="s2">"authors"</span> rollout to finish: 1 old replicas are pending termination...</span><span id="LC15" class="line">Waiting <span class="k">for </span>deployment <span class="s2">"authors"</span> rollout to finish: 1 old replicas are pending termination...</span><span id="LC16" class="line">deployment <span class="s2">"authors"</span> successfully rolled out</span><span id="LC17" class="line">rollout status <span class="k">for </span>Deployment.apps/authors successfully</span><span id="LC18" class="line">create remote inbound pod <span class="k">for </span>Deployment.apps/authors successfully</span><span id="LC19" class="line"><span class="nb">tar</span>: removing leading <span class="s1">'/'</span> from member names</span><span id="LC20" class="line">/var/folders/30/cmv9c_5j3mq_kthx63sb1t5c0000gn/T/4563987760170736212:/var/run/secrets/kubernetes.io/serviceaccount</span><span id="LC21" class="line"><span class="nb">tar</span>: Removing leading <span class="sb">`</span>/<span class="s1">' from member names</span></span><span id="LC22" class="line"><span class="s1">tar: Removing leading `/'</span> from hard <span class="nb">link </span>targets</span><span id="LC23" class="line">/var/folders/30/cmv9c_5j3mq_kthx63sb1t5c0000gn/T/4044542168121221027:/var/run/secrets/kubernetes.io/serviceaccount</span><span id="LC24" class="line">create docker network 56c25058d4b7498d02c2c2386ccd1b2b127cb02e8a1918d6d24bffd18570200e</span><span id="LC25" class="line">Created container: nginx_default_kubevpn_a9a22</span><span id="LC26" class="line">Wait container nginx_default_kubevpn_a9a22 to be running...</span><span id="LC27" class="line">Container nginx_default_kubevpn_a9a22 is running on port 80/tcp:80 8888/tcp:8888 9080/tcp:9080 now</span><span id="LC28" class="line">WARNING: The requested image<span class="s1">'s platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested</span></span><span id="LC29" class="line"><span class="s1">Created main container: authors_default_kubevpn_a9a22</span></span><span id="LC30" class="line"><span class="s1">/opt/microservices # ls</span></span><span id="LC31" class="line"><span class="s1">app</span></span><span id="LC32" class="line"><span class="s1">/opt/microservices # ps -ef</span></span><span id="LC33" class="line"><span class="s1">PID   USER     TIME  COMMAND</span></span><span id="LC34" class="line"><span class="s1">    1 root      0:00 nginx: master process nginx -g daemon off;</span></span><span id="LC35" class="line"><span class="s1">   29 101       0:00 nginx: worker process</span></span><span id="LC36" class="line"><span class="s1">   30 101       0:00 nginx: worker process</span></span><span id="LC37" class="line"><span class="s1">   31 101       0:00 nginx: worker process</span></span><span id="LC38" class="line"><span class="s1">   32 101       0:00 nginx: worker process</span></span><span id="LC39" class="line"><span class="s1">   33 101       0:00 nginx: worker process</span></span><span id="LC40" class="line"><span class="s1">   34 root      0:00 {sh} /usr/bin/qemu-x86_64 /bin/sh sh</span></span><span id="LC41" class="line"><span class="s1">   44 root      0:00 ps -ef</span></span><span id="LC42" class="line"><span class="s1">/opt/microservices # apk add curl</span></span><span id="LC43" class="line"><span class="s1">fetch https://dl-cdn.alpinelinux.org/alpine/v3.14/main/x86_64/APKINDEX.tar.gz</span></span><span id="LC44" class="line"><span class="s1">fetch https://dl-cdn.alpinelinux.org/alpine/v3.14/community/x86_64/APKINDEX.tar.gz</span></span><span id="LC45" class="line"><span class="s1">(1/4) Installing brotli-libs (1.0.9-r5)</span></span><span id="LC46" class="line"><span class="s1">(2/4) Installing nghttp2-libs (1.43.0-r0)</span></span><span id="LC47" class="line"><span class="s1">(3/4) Installing libcurl (8.0.1-r0)</span></span><span id="LC48" class="line"><span class="s1">(4/4) Installing curl (8.0.1-r0)</span></span><span id="LC49" class="line"><span class="s1">Executing busybox-1.33.1-r3.trigger</span></span><span id="LC50" class="line"><span class="s1">OK: 8 MiB in 19 packages</span></span><span id="LC51" class="line"><span class="s1">/opt/microservices # ./app &amp;</span></span><span id="LC52" class="line"><span class="s1">/opt/microservices # 2023/09/30 13:41:58 Start listening http port 9080 ...</span></span><span id="LC53" class="line"></span><span id="LC54" class="line"><span class="s1">/opt/microservices # curl localhost:9080/health</span></span><span id="LC55" class="line"><span class="s1">{"status":"Authors is healthy"}/opt/microservices # exit</span></span><span id="LC56" class="line"><span class="s1">prepare to exit, cleaning up</span></span><span id="LC57" class="line"><span class="s1">update ref count successfully</span></span><span id="LC58" class="line"><span class="s1">tun device closed</span></span><span id="LC59" class="line"><span class="s1">leave resource: deployments.apps/authors</span></span><span id="LC60" class="line"><span class="s1">workload default/deployments.apps/authors is controlled by a controller</span></span><span id="LC61" class="line"><span class="s1">leave resource: deployments.apps/authors successfully</span></span><span id="LC62" class="line"><span class="s1">clean up successfully</span></span><span id="LC63" class="line"><span class="s1">prepare to exit, cleaning up</span></span><span id="LC64" class="line"><span class="s1">update ref count successfully</span></span><span id="LC65" class="line"><span class="s1">clean up successfully</span></span><span id="LC66" class="line"><span class="s1">➜  ~</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>此时本地会启动两个 container, 对应 pod 容器中的两个 container, 并且共享端口, 可以直接使用 localhost:port 的形式直接访问另一个 container,
并且, 所有的环境变量、挂载卷、网络条件都和 pod 一样, 真正做到与 kubernetes 运行环境一致。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ docker ps</span><span id="LC2" class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED          STATUS          PORTS                                                                NAMES</span><span id="LC3" class="line">afdecf41c08d   naison/authors:latest           <span class="s2">"sh"</span>                     37 seconds ago   Up 36 seconds                                                                        authors_default_kubevpn_a9a22</span><span id="LC4" class="line">fc04e42799a5   nginx:latest                    <span class="s2">"/docker-entrypoint.…"</span>   37 seconds ago   Up 37 seconds   0.0.0.0:80-&gt;80/tcp, 0.0.0.0:8888-&gt;8888/tcp, 0.0.0.0:9080-&gt;9080/tcp   nginx_default_kubevpn_a9a22</span><span id="LC5" class="line">➜  ~</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>如果你只是想在本地启动镜像，可以用一种简单的方式：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">kubevpn dev deployment/authors <span class="nt">--no-proxy</span><span class="nt">-it</span><span class="nt">--rm</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>例如：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubevpn dev deployment/authors <span class="nt">--no-proxy</span><span class="nt">-it</span><span class="nt">--rm</span></span><span id="LC2" class="line">connectting to cluster</span><span id="LC3" class="line">start to connect</span><span id="LC4" class="line">got cidr from cache</span><span id="LC5" class="line">get cidr successfully</span><span id="LC6" class="line">update ref count successfully</span><span id="LC7" class="line">traffic manager already exist, reuse it</span><span id="LC8" class="line">port forward ready</span><span id="LC9" class="line">tunnel connected</span><span id="LC10" class="line">dns service ok</span><span id="LC11" class="line"><span class="nb">tar</span>: removing leading <span class="s1">'/'</span> from member names</span><span id="LC12" class="line">/var/folders/30/cmv9c_5j3mq_kthx63sb1t5c0000gn/T/5631078868924498209:/var/run/secrets/kubernetes.io/serviceaccount</span><span id="LC13" class="line"><span class="nb">tar</span>: Removing leading <span class="sb">`</span>/<span class="s1">' from member names</span></span><span id="LC14" class="line"><span class="s1">tar: Removing leading `/'</span> from hard <span class="nb">link </span>targets</span><span id="LC15" class="line">/var/folders/30/cmv9c_5j3mq_kthx63sb1t5c0000gn/T/1548572512863475037:/var/run/secrets/kubernetes.io/serviceaccount</span><span id="LC16" class="line">create docker network 56c25058d4b7498d02c2c2386ccd1b2b127cb02e8a1918d6d24bffd18570200e</span><span id="LC17" class="line">Created container: nginx_default_kubevpn_ff34b</span><span id="LC18" class="line">Wait container nginx_default_kubevpn_ff34b to be running...</span><span id="LC19" class="line">Container nginx_default_kubevpn_ff34b is running on port 80/tcp:80 8888/tcp:8888 9080/tcp:9080 now</span><span id="LC20" class="line">WARNING: The requested image<span class="s1">'s platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested</span></span><span id="LC21" class="line"><span class="s1">Created main container: authors_default_kubevpn_ff34b</span></span><span id="LC22" class="line"><span class="s1">2023/09/30 14:02:31 Start listening http port 9080 ...</span></span><span id="LC23" class="line"></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>此时程序会挂起，默认为显示日志</p><p>如果你想指定在本地启动容器的镜像, 可以使用参数 <code>--docker-image</code>, 当本地不存在该镜像时, 会从对应的镜像仓库拉取。如果你想指定启动参数，可以使用 <code>--entrypoint</code>
参数，替换为你想要执行的命令，比如 <code>--entrypoint /bin/bash</code>, 更多使用参数，请参见 <code>kubevpn dev --help</code>.</p><h3><a id="dind--docker-in-docker--在-docker-中使用-kubevpn" class="anchor" href="https://gitee.com/kubevpn/kubevpn#dind--docker-in-docker--%E5%9C%A8-docker-%E4%B8%AD%E4%BD%BF%E7%94%A8-kubevpn"></a>DinD ( Docker in Docker ) 在 Docker 中使用 kubevpn</h3><p>如果你想在本地使用 Docker in Docker (DinD) 的方式启动开发模式, 由于程序会读写 <code>/tmp</code> 目录，您需要手动添加参数 <code>-v /tmp:/tmp</code>, 还有一点需要注意, 如果使用 DinD
模式，为了共享容器网络和 pid, 还需要指定参数 <code>--network</code></p><p>例如:</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">docker run <span class="nt">-it</span><span class="nt">--privileged</span><span class="nt">--sysctl</span> net.ipv6.conf.all.disable_ipv6<span class="o">=</span>0 <span class="nt">-v</span> /var/run/docker.sock:/var/run/docker.sock <span class="nt">-v</span> /tmp:/tmp <span class="nt">-v</span> ~/.kube/config:/root/.kube/config <span class="nt">--platform</span> linux/amd64 naison/kubevpn:v2.0.0</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ docker run <span class="nt">-it</span><span class="nt">--privileged</span><span class="nt">--sysctl</span> net.ipv6.conf.all.disable_ipv6<span class="o">=</span>0 <span class="nt">-v</span> /var/run/docker.sock:/var/run/docker.sock <span class="nt">-v</span> /tmp:/tmp <span class="nt">-v</span> ~/.kube/vke:/root/.kube/config <span class="nt">--platform</span> linux/amd64 naison/kubevpn:v2.0.0</span><span id="LC2" class="line">Unable to find image <span class="s1">'naison/kubevpn:v2.0.0'</span> locally</span><span id="LC3" class="line">v2.0.0: Pulling from naison/kubevpn</span><span id="LC4" class="line">445a6a12be2b: Already exists</span><span id="LC5" class="line">bd6c670dd834: Pull <span class="nb">complete</span></span><span id="LC6" class="line">64a7297475a2: Pull <span class="nb">complete</span></span><span id="LC7" class="line">33fa2e3224db: Pull <span class="nb">complete</span></span><span id="LC8" class="line">e008f553422a: Pull <span class="nb">complete</span></span><span id="LC9" class="line">5132e0110ddc: Pull <span class="nb">complete</span></span><span id="LC10" class="line">5b2243de1f1a: Pull <span class="nb">complete</span></span><span id="LC11" class="line">662a712db21d: Pull <span class="nb">complete</span></span><span id="LC12" class="line">4f4fb700ef54: Pull <span class="nb">complete</span></span><span id="LC13" class="line">33f0298d1d4f: Pull <span class="nb">complete</span></span><span id="LC14" class="line">Digest: sha256:115b975a97edd0b41ce7a0bc1d8428e6b8569c91a72fe31ea0bada63c685742e</span><span id="LC15" class="line">Status: Downloaded newer image <span class="k">for </span>naison/kubevpn:v2.0.0</span><span id="LC16" class="line">root@d0b3dab8912a:/app# kubevpn dev deployment/authors <span class="nt">--headers</span><span class="nv">user</span><span class="o">=</span>naison <span class="nt">-it</span><span class="nt">--entrypoint</span> sh</span><span id="LC17" class="line"></span><span id="LC18" class="line"><span class="nt">----------------------------------------------------------------------------------</span></span><span id="LC19" class="line">    Warn: Use <span class="nb">sudo </span>to execute <span class="nb">command </span>kubevpn can not use user <span class="nb">env </span>KUBECONFIG.</span><span id="LC20" class="line">    Because of <span class="nb">sudo </span>user <span class="nb">env </span>and user <span class="nb">env </span>are different.</span><span id="LC21" class="line">    Current <span class="nb">env </span>KUBECONFIG value:</span><span id="LC22" class="line"><span class="nt">----------------------------------------------------------------------------------</span></span><span id="LC23" class="line"></span><span id="LC24" class="line"><span class="nb">hostname </span>is d0b3dab8912a</span><span id="LC25" class="line">connectting to cluster</span><span id="LC26" class="line">start to connect</span><span id="LC27" class="line">got cidr from cache</span><span id="LC28" class="line">get cidr successfully</span><span id="LC29" class="line">update ref count successfully</span><span id="LC30" class="line">traffic manager already exist, reuse it</span><span id="LC31" class="line">port forward ready</span><span id="LC32" class="line">tunnel connected</span><span id="LC33" class="line">dns service ok</span><span id="LC34" class="line">start to create remote inbound pod <span class="k">for </span>Deployment.apps/authors</span><span id="LC35" class="line">patch workload default/Deployment.apps/authors with sidecar</span><span id="LC36" class="line">rollout status <span class="k">for </span>Deployment.apps/authors</span><span id="LC37" class="line">Waiting <span class="k">for </span>deployment <span class="s2">"authors"</span> rollout to finish: 1 old replicas are pending termination...</span><span id="LC38" class="line">Waiting <span class="k">for </span>deployment <span class="s2">"authors"</span> rollout to finish: 1 old replicas are pending termination...</span><span id="LC39" class="line">deployment <span class="s2">"authors"</span> successfully rolled out</span><span id="LC40" class="line">rollout status <span class="k">for </span>Deployment.apps/authors successfully</span><span id="LC41" class="line">create remote inbound pod <span class="k">for </span>Deployment.apps/authors successfully</span><span id="LC42" class="line"><span class="nb">tar</span>: removing leading <span class="s1">'/'</span> from member names</span><span id="LC43" class="line">/tmp/6460902982794789917:/var/run/secrets/kubernetes.io/serviceaccount</span><span id="LC44" class="line"><span class="nb">tar</span>: Removing leading <span class="sb">`</span>/<span class="s1">' from member names</span></span><span id="LC45" class="line"><span class="s1">tar: Removing leading `/'</span> from hard <span class="nb">link </span>targets</span><span id="LC46" class="line">/tmp/5028895788722532426:/var/run/secrets/kubernetes.io/serviceaccount</span><span id="LC47" class="line">network mode is container:d0b3dab8912a</span><span id="LC48" class="line">Created container: nginx_default_kubevpn_6df63</span><span id="LC49" class="line">Wait container nginx_default_kubevpn_6df63 to be running...</span><span id="LC50" class="line">Container nginx_default_kubevpn_6df63 is running now</span><span id="LC51" class="line">WARNING: The requested image<span class="s1">'s platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested</span></span><span id="LC52" class="line"><span class="s1">Created main container: authors_default_kubevpn_6df5f</span></span><span id="LC53" class="line"><span class="s1">/opt/microservices # ps -ef</span></span><span id="LC54" class="line"><span class="s1">PID   USER     TIME  COMMAND</span></span><span id="LC55" class="line"><span class="s1">    1 root      0:00 {bash} /usr/bin/qemu-x86_64 /bin/bash /bin/bash</span></span><span id="LC56" class="line"><span class="s1">   14 root      0:02 {kubevpn} /usr/bin/qemu-x86_64 /usr/local/bin/kubevpn kubevpn dev deployment/authors --headers</span></span><span id="LC57" class="line"><span class="s1">   25 root      0:01 {kubevpn} /usr/bin/qemu-x86_64 /usr/local/bin/kubevpn /usr/local/bin/kubevpn daemon</span></span><span id="LC58" class="line"><span class="s1">   37 root      0:04 {kubevpn} /usr/bin/qemu-x86_64 /usr/local/bin/kubevpn /usr/local/bin/kubevpn daemon --sudo</span></span><span id="LC59" class="line"><span class="s1">   53 root      0:00 nginx: master process nginx -g daemon off;</span></span><span id="LC60" class="line"><span class="s1">(4/4) Installing curl (8.0.1-r0)</span></span><span id="LC61" class="line"><span class="s1">Executing busybox-1.33.1-r3.trigger</span></span><span id="LC62" class="line"><span class="s1">OK: 8 MiB in 19 packagesnx: worker process</span></span><span id="LC63" class="line"><span class="s1">/opt/microservices #</span></span><span id="LC64" class="line"><span class="s1">/opt/microservices # apk add curl</span></span><span id="LC65" class="line"><span class="s1">OK: 8 MiB in 19 packages</span></span><span id="LC66" class="line"><span class="s1">/opt/microservices # curl localhost:80</span></span><span id="LC67" class="line"><span class="s1">&lt;!DOCTYPE html&gt;</span></span><span id="LC68" class="line"><span class="s1">&lt;html&gt;</span></span><span id="LC69" class="line"><span class="s1">&lt;head&gt;</span></span><span id="LC70" class="line"><span class="s1">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</span></span><span id="LC71" class="line"><span class="s1">&lt;style&gt;</span></span><span id="LC72" class="line"><span class="s1">html { color-scheme: light dark; }</span></span><span id="LC73" class="line"><span class="s1">body { width: 35em; margin: 0 auto;</span></span><span id="LC74" class="line"><span class="s1">font-family: Tahoma, Verdana, Arial, sans-serif; }</span></span><span id="LC75" class="line"><span class="s1">&lt;/style&gt;</span></span><span id="LC76" class="line"><span class="s1">&lt;/head&gt;</span></span><span id="LC77" class="line"><span class="s1">&lt;body&gt;</span></span><span id="LC78" class="line"><span class="s1">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</span></span><span id="LC79" class="line"><span class="s1">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</span></span><span id="LC80" class="line"><span class="s1">working. Further configuration is required.&lt;/p&gt;</span></span><span id="LC81" class="line"></span><span id="LC82" class="line"><span class="s1">&lt;p&gt;For online documentation and support please refer to</span></span><span id="LC83" class="line"><span class="s1">&lt;a href="http://nginx.org/"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</span></span><span id="LC84" class="line"><span class="s1">Commercial support is available at</span></span><span id="LC85" class="line"><span class="s1">&lt;a href="http://nginx.com/"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</span></span><span id="LC86" class="line"></span><span id="LC87" class="line"><span class="s1">&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;</span></span><span id="LC88" class="line"><span class="s1">&lt;/body&gt;</span></span><span id="LC89" class="line"><span class="s1">&lt;/html&gt;</span></span><span id="LC90" class="line"><span class="s1">/opt/microservices # ls</span></span><span id="LC91" class="line"><span class="s1">app</span></span><span id="LC92" class="line"><span class="s1">/opt/microservices # ls -alh</span></span><span id="LC93" class="line"><span class="s1">total 6M</span></span><span id="LC94" class="line"><span class="s1">drwxr-xr-x    2 root     root        4.0K Oct 18  2021 .</span></span><span id="LC95" class="line"><span class="s1">drwxr-xr-x    1 root     root        4.0K Oct 18  2021 ..</span></span><span id="LC96" class="line"><span class="s1">-rwxr-xr-x    1 root     root        6.3M Oct 18  2021 app</span></span><span id="LC97" class="line"><span class="s1">/opt/microservices # ./app &amp;</span></span><span id="LC98" class="line"><span class="s1">/opt/microservices # 2023/09/30 14:27:32 Start listening http port 9080 ...</span></span><span id="LC99" class="line"></span><span id="LC100" class="line"><span class="s1">/opt/microservices # curl authors:9080/health</span></span><span id="LC101" class="line"><span class="s1">/opt/microservices # curl authors:9080/health</span></span><span id="LC102" class="line"><span class="s1">{"status":"Authors is healthy"}/opt/microservices #</span></span><span id="LC103" class="line"><span class="s1">/opt/microservices # curl localhost:9080/health</span></span><span id="LC104" class="line"><span class="s1">{"status":"Authors is healthy"}/opt/microservices # exit</span></span><span id="LC105" class="line"><span class="s1">prepare to exit, cleaning up</span></span><span id="LC106" class="line"><span class="s1">update ref count successfully</span></span><span id="LC107" class="line"><span class="s1">tun device closed</span></span><span id="LC108" class="line"><span class="s1">leave resource: deployments.apps/authors</span></span><span id="LC109" class="line"><span class="s1">workload default/deployments.apps/authors is controlled by a controller</span></span><span id="LC110" class="line"><span class="s1">leave resource: deployments.apps/authors successfully</span></span><span id="LC111" class="line"><span class="s1">clean up successfully</span></span><span id="LC112" class="line"><span class="s1">prepare to exit, cleaning up</span></span><span id="LC113" class="line"><span class="s1">update ref count successfully</span></span><span id="LC114" class="line"><span class="s1">clean up successfully</span></span><span id="LC115" class="line"><span class="s1">root@d0b3dab8912a:/app# exit</span></span><span id="LC116" class="line"><span class="s1">exit</span></span><span id="LC117" class="line"><span class="s1">➜  ~</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ docker ps</span><span id="LC2" class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED         STATUS         PORTS     NAMES</span><span id="LC3" class="line">1cd576b51b66   naison/authors:latest           "sh"                     4 minutes ago   Up 4 minutes             authors_default_kubevpn_6df5f</span><span id="LC4" class="line">56a6793df82d   nginx:latest                    "/docker-entrypoint.…"   4 minutes ago   Up 4 minutes             nginx_default_kubevpn_6df63</span><span id="LC5" class="line">d0b3dab8912a   naison/kubevpn:v2.0.0     "/bin/bash"              5 minutes ago   Up 5 minutes             upbeat_noyce</span><span id="LC6" class="line">➜  ~</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="支持多种协议" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E6%94%AF%E6%8C%81%E5%A4%9A%E7%A7%8D%E5%8D%8F%E8%AE%AE"></a>支持多种协议</h3><ul><li>TCP</li><li>UDP</li><li>ICMP</li><li>GRPC</li><li>WebSocket</li><li>HTTP</li><li>...</li></ul><h3><a id="支持三大平台" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E6%94%AF%E6%8C%81%E4%B8%89%E5%A4%A7%E5%B9%B3%E5%8F%B0"></a>支持三大平台</h3><ul><li>macOS</li><li>Linux</li><li>Windows</li></ul><p>Windows
下需要安装 <a href="https://gitee.com/link?target=https%3A%2F%2Fdocs.microsoft.com%2Fzh-cn%2Fpowershell%2Fscripting%2Finstall%2Finstalling-powershell-on-windows%3Fview%3Dpowershell-7.2">PowerShell</a></p><h2><a id="问答" class="anchor" href="https://gitee.com/kubevpn/kubevpn#%E9%97%AE%E7%AD%94"></a>问答</h2><h3><a id="1 依赖的镜像拉不下来或者内网环境无法访问-dockerio-怎么办" class="anchor" href="https://gitee.com/kubevpn/kubevpn#1%E4%BE%9D%E8%B5%96%E7%9A%84%E9%95%9C%E5%83%8F%E6%8B%89%E4%B8%8D%E4%B8%8B%E6%9D%A5%E6%88%96%E8%80%85%E5%86%85%E7%BD%91%E7%8E%AF%E5%A2%83%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE-dockerio-%E6%80%8E%E4%B9%88%E5%8A%9E"></a>1，依赖的镜像拉不下来，或者内网环境无法访问 docker.io 怎么办？</h3><p>答：有两种方法可以解决</p><ul><li>第一种，在可以访问 docker.io 的网络中，将命令 <code>kubevpn version</code> 中的 image 镜像， 转存到自己的私有镜像仓库，然后启动命令的时候，加上 <code>--image 新镜像</code> 即可。
例如:</li></ul><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubevpn version</span><span id="LC2" class="line">KubeVPN: CLI</span><span id="LC3" class="line">    Version: v2.0.0</span><span id="LC4" class="line">    DaemonVersion: v2.0.0</span><span id="LC5" class="line">    Image: docker.io/naison/kubevpn:v2.0.0</span><span id="LC6" class="line">    Branch: feature/daemon</span><span id="LC7" class="line">    Git commit: 7c3a87e14e05c238d8fb23548f95fa1dd6e96936</span><span id="LC8" class="line">    Built <span class="nb">time</span>: 2023-09-30 22:01:51</span><span id="LC9" class="line">    Built OS/Arch: darwin/arm64</span><span id="LC10" class="line">    Built Go version: go1.20.5</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>镜像是 <code>docker.io/naison/kubevpn:v2.0.0</code>，将此镜像转存到自己的镜像仓库。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">docker pull docker.io/naison/kubevpn:v2.0.0</span><span id="LC2" class="line">docker tag docker.io/naison/kubevpn:v2.0.0 [镜像仓库地址]/[命名空间]/[镜像仓库]:[镜像版本号]</span><span id="LC3" class="line">docker push [镜像仓库地址]/[命名空间]/[镜像仓库]:[镜像版本号]</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>然后就可以使用这个镜像了，如下：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubevpn connect --image [docker registry]/[namespace]/[repo]:[tag]</span><span id="LC2" class="line">got cidr from cache</span><span id="LC3" class="line">traffic manager not exist, try to create it...</span><span id="LC4" class="line">pod [kubevpn-traffic-manager] status is Running</span><span id="LC5" class="line">...</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ul><li>第二种，使用选项 <code>--transfer-image</code>, 这个选项将会自动转存镜像到选项 <code>--image</code> 指定的地址。
例如：</li></ul><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ kubevpn connect <span class="nt">--transfer-image</span><span class="nt">--image</span> nocalhost-team-docker.pkg.coding.net/nocalhost/public/kubevpn:v2.0.0</span><span id="LC2" class="line">v2.0.0: Pulling from naison/kubevpn</span><span id="LC3" class="line">Digest: sha256:450446850891eb71925c54a2fab5edb903d71103b485d6a4a16212d25091b5f4</span><span id="LC4" class="line">Status: Image is up to <span class="nb">date </span><span class="k">for </span>naison/kubevpn:v2.0.0</span><span id="LC5" class="line">The push refers to repository <span class="o">[</span>nocalhost-team-docker.pkg.coding.net/nocalhost/public/kubevpn]</span><span id="LC6" class="line">ecc065754c15: Preparing</span><span id="LC7" class="line">f2b6c07cb397: Pushed</span><span id="LC8" class="line">448eaa16d666: Pushed</span><span id="LC9" class="line">f5507edfc283: Pushed</span><span id="LC10" class="line">3b6ea9aa4889: Pushed</span><span id="LC11" class="line">ecc065754c15: Pushed</span><span id="LC12" class="line">feda785382bb: Pushed</span><span id="LC13" class="line">v2.0.0: digest: sha256:85d29ebb53af7d95b9137f8e743d49cbc16eff1cdb9983128ab6e46e0c25892c size: 2000</span><span id="LC14" class="line">start to connect</span><span id="LC15" class="line">got cidr from cache</span><span id="LC16" class="line">get cidr successfully</span><span id="LC17" class="line">update ref count successfully</span><span id="LC18" class="line">traffic manager already exist, reuse it</span><span id="LC19" class="line">port forward ready</span><span id="LC20" class="line">tunnel connected</span><span id="LC21" class="line">dns service ok</span><span id="LC22" class="line">+---------------------------------------------------------------------------+</span><span id="LC23" class="line">|    Now you can access resources <span class="k">in </span>the kubernetes cluster, enjoy it :<span class="o">)</span>    |</span><span id="LC24" class="line">+---------------------------------------------------------------------------+</span><span id="LC25" class="line">➜  ~</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="2 在使用-kubevpn-dev-进入开发模式的时候有出现报错-137-改怎么解决-" class="anchor" href="https://gitee.com/kubevpn/kubevpn#2%E5%9C%A8%E4%BD%BF%E7%94%A8-kubevpn-dev-%E8%BF%9B%E5%85%A5%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%97%B6%E5%80%99%E6%9C%89%E5%87%BA%E7%8E%B0%E6%8A%A5%E9%94%99-137-%E6%94%B9%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3-"></a>2，在使用 <code>kubevpn dev</code> 进入开发模式的时候,有出现报错 137, 改怎么解决 ?</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">dns service ok</span><span id="LC2" class="line">tar: Removing leading `/' from member names</span><span id="LC3" class="line">tar: Removing leading `/' from hard link targets</span><span id="LC4" class="line">/var/folders/30/cmv9c_5j3mq_kthx63sb1t5c0000gn/T/7375606548554947868:/var/run/secrets/kubernetes.io/serviceaccount</span><span id="LC5" class="line">Created container: server_vke-system_kubevpn_0db84</span><span id="LC6" class="line">Wait container server_vke-system_kubevpn_0db84 to be running...</span><span id="LC7" class="line">Container server_vke-system_kubevpn_0db84 is running on port 8888/tcp: 6789/tcp:6789 now</span><span id="LC8" class="line">$ Status: , Code: 137</span><span id="LC9" class="line">prepare to exit, cleaning up</span><span id="LC10" class="line">port-forward occurs error, err: lost connection to pod, retrying</span><span id="LC11" class="line">update ref count successfully</span><span id="LC12" class="line">ref-count is zero, prepare to clean up resource</span><span id="LC13" class="line">clean up successfully</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>这是因为你的 <code>Docker-desktop</code> 声明的资源, 小于 container 容器启动时所需要的资源, 因此被 OOM 杀掉了, 你可以增加 <code>Docker-desktop</code> 对于 resources
的设置, 目录是：<code>Preferences --&gt; Resources --&gt; Memory</code></p><h3><a id="3 使用-wsl-windows-sub-linux--docker-用命令-kubevpn-dev-进入开发模式的时候-在-terminal-中无法提示链接集群网络-这是为什么-如何解决" class="anchor" href="https://gitee.com/kubevpn/kubevpn#3%E4%BD%BF%E7%94%A8-wsl-windows-sub-linux--docker-%E7%94%A8%E5%91%BD%E4%BB%A4-kubevpn-dev-%E8%BF%9B%E5%85%A5%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%97%B6%E5%80%99-%E5%9C%A8-terminal-%E4%B8%AD%E6%97%A0%E6%B3%95%E6%8F%90%E7%A4%BA%E9%93%BE%E6%8E%A5%E9%9B%86%E7%BE%A4%E7%BD%91%E7%BB%9C-%E8%BF%99%E6%98%AF%E4%B8%BA%E4%BB%80%E4%B9%88-%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3"></a>3，使用 WSL( Windows Sub Linux ) Docker, 用命令 <code>kubevpn dev</code> 进入开发模式的时候, 在 terminal 中无法提示链接集群网络, 这是为什么, 如何解决?</h3><p>答案: 这是因为 WSL 的 Docker 使用的是，主机 Windows 的网络, 所以即便在 WSL 中启动 container, 这个 container 不会使用 WSL 的网络，而是使用 Windows 的网络。
解决方案:</p><ul><li>1): 在 WSL 中安装 Docker, 不要使用 Windows 版本的 Docker-desktop</li><li>2): 在主机 Windows 使用命令 <code>kubevpn connect</code>, 然后在 WSL 中使用 <code>kubevpn dev</code> 进入开发模式</li><li>3): 在主机 Windows 上启动一个 container，在 container 中使用命令 <code>kubevpn connect</code>, 然后在 WSL
中使用 <code>kubevpn dev --network container:$CONTAINER_ID</code></li></ul><h3><a id="4 在使用-kubevpn-dev-进入开发模式后无法访问容器网络出现错误-1721701443-connect-refusued 该如何解决" class="anchor" href="https://gitee.com/kubevpn/kubevpn#4%E5%9C%A8%E4%BD%BF%E7%94%A8-kubevpn-dev-%E8%BF%9B%E5%85%A5%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%90%8E%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E5%AE%B9%E5%99%A8%E7%BD%91%E7%BB%9C%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF-1721701443-connect-refusued%E8%AF%A5%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3"></a>4，在使用 <code>kubevpn dev</code> 进入开发模式后，无法访问容器网络，出现错误 <code>172.17.0.1:443 connect refusued</code>，该如何解决？</h3><p>答案：大概率是因为 k8s 容器网络和 docker 网络网段冲突了。</p><p>解决方案：</p><ul><li>使用参数 <code>--connect-mode container</code> 在容器中链接，也可以解决此问题</li><li>可以修改文件 <code>~/.docker/daemon.json</code> 增加不冲突的网络，例如 <code>"bip": "172.15.0.1/24"</code>.</li></ul><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ <span class="nb">cat</span> ~/.docker/daemon.json</span><span id="LC2" class="line"><span class="o">{</span></span><span id="LC3" class="line"><span class="s2">"builder"</span>: <span class="o">{</span></span><span id="LC4" class="line"><span class="s2">"gc"</span>: <span class="o">{</span></span><span id="LC5" class="line"><span class="s2">"defaultKeepStorage"</span>: <span class="s2">"20GB"</span>,</span><span id="LC6" class="line"><span class="s2">"enabled"</span>: <span class="nb">true</span></span><span id="LC7" class="line"><span class="o">}</span></span><span id="LC8" class="line"><span class="o">}</span>,</span><span id="LC9" class="line"><span class="s2">"experimental"</span>: <span class="nb">false</span>,</span><span id="LC10" class="line"><span class="s2">"features"</span>: <span class="o">{</span></span><span id="LC11" class="line"><span class="s2">"buildkit"</span>: <span class="nb">true</span></span><span id="LC12" class="line"><span class="o">}</span>,</span><span id="LC13" class="line"><span class="s2">"insecure-registries"</span>: <span class="o">[</span></span><span id="LC14" class="line"><span class="o">]</span>,</span><span id="LC15" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>增加不冲突的网段</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">➜  ~ <span class="nb">cat</span> ~/.docker/daemon.json</span><span id="LC2" class="line"><span class="o">{</span></span><span id="LC3" class="line"><span class="s2">"builder"</span>: <span class="o">{</span></span><span id="LC4" class="line"><span class="s2">"gc"</span>: <span class="o">{</span></span><span id="LC5" class="line"><span class="s2">"defaultKeepStorage"</span>: <span class="s2">"20GB"</span>,</span><span id="LC6" class="line"><span class="s2">"enabled"</span>: <span class="nb">true</span></span><span id="LC7" class="line"><span class="o">}</span></span><span id="LC8" class="line"><span class="o">}</span>,</span><span id="LC9" class="line"><span class="s2">"experimental"</span>: <span class="nb">false</span>,</span><span id="LC10" class="line"><span class="s2">"features"</span>: <span class="o">{</span></span><span id="LC11" class="line"><span class="s2">"buildkit"</span>: <span class="nb">true</span></span><span id="LC12" class="line"><span class="o">}</span>,</span><span id="LC13" class="line"><span class="s2">"insecure-registries"</span>: <span class="o">[</span></span><span id="LC14" class="line"><span class="o">]</span>,</span><span id="LC15" class="line"><span class="s2">"bip"</span>: <span class="s2">"172.15.0.1/24"</span></span><span id="LC16" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>重启 docker，重新操作即可</p>]]>
            </description>
            <pubDate>Mon, 05 Feb 2024 01:51:57 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/kubevpn/kubevpn</guid>
            <link>https://gitee.com/kubevpn/kubevpn</link>
        </item>
        <item>
            <title>
                <![CDATA[DBA 要被云淘汰了？新人该咋办？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>DBA（Database Administrator），即数据库管理员，专门负责管理和维护公司的数据库。然而，随着上云的趋势渐盛，许多企业都把数据库迁到了云平台上。云服务提供商通常会提供自动化工具和标准化服务，这让 DBA 的工作得到了解放，也产生了一丝危机——有人质疑：毕竟最重要的硬件管理和架构管理已经没了需求，而日常的监控和优化工作借助工具就能完成，是否也意味着，DBA 这一岗位要被云淘汰了？</p><p>但也有人认为，现在谈 DBA 被云淘汰还为时过早，云服务更多是辅助工具而非生产工具，它并没有完全取代 DBA，只是改变了 DBA 的工作方式和职责，让 DBA 更专注于高级的数据库管理任务，在数据优化、安全管理、成本管理和合规性方面发挥更大的作用。</p><p>那么，实际情况是怎样的呢？企业对 DBA 这一岗位的需求减少了吗？云环境对 DBA 的工作产生了哪些新要求？作为个人的我们，又该补充哪些新知识，才能跟上云时代的发展呢？</p><p>对此，开源中国邀请了磐吉云数 CEO 冯若航、公众号《瑞典马工》主理人马工、云原生数据库 clapdb 创始人李令辉、云和恩墨的数据库技术负责人李真旭、Oracle ACE-Pro 薛晓刚一起来讨论，希望能给各位同行带来启发。</p><p>&nbsp;</p><span id="OSC_h1_1"></span><h1>01 DBA 对于组织的价值是什么？</h1><p><strong>正方：马工 speaking ——</strong></p><p>我没有干过 DBA ，但是跟很多 DBA 打过交道，在我看来，DBA 的工作主要是 3 点：</p><p>第一，安装和部署 database，让它跑起来；</p><p>第二，保证它不要挂掉，即保证它的可靠性；</p><p>第三，保证它的数据不要丢了，防止数据泄漏。</p><p>还有一些小事，比如说不要让开发者搞砸数据库以及性能调优。</p><p>不过，据我所见，每一个 DBA 的招聘启示里都会有「领导交办的其他事项」，就是打杂嘛。如果在座有 DBA 的话，对打杂这个事应该感受很深。</p><p>以上这几点，我看都被 RDS 做完了，如果是做不了的，剩下的工作也不足以支撑一个专职的岗位了。</p><p>&nbsp;</p><p><strong>正方：李令辉 speaking ——</strong></p><p>作为一个 DBA 团队的直属 leader，DBA 在我管理一个中大型公司的 Infra 团队的时候的确是非常重要的，因为专人专事。对于数据库来说，我们最在乎的是它的可靠性，数据不丢、服务不断，从这个角度来说，是需要一个专业团队去维护的。</p><p>但是，如果这些事情，自动化就能做到，会怎么样？</p><p>如今，在云上，这大部分已经成为现实了。<strong>首先，云在 availability 和 durability 上做得比云下系统好得多，</strong>云上基本可以避免 SPOF（single point of failure），但是在云下，这件事情成本非常高。在云上，你可以按需购买，按量付费，<strong>这本身就让小公司拥有了一些</strong><strong>高可用性</strong><strong>。</strong></p><p><strong>其次，云删减了一些原有的 </strong><strong>DBA</strong><strong> 工作。</strong>例如，原来买了一批新的服务器，或者上架了一个新业务的时候，都需要 DBA 把数据迁移过去测一下。但现在在云上，硬件环境有限，这些事情已经不再需要我们作为甲方去处理了。</p><p>还有一件事是业务方面，过去阿里提出过一个词，叫全链路压测，这件事也是数据库团队做得最多的。可是在云上最大的好处是，我很容易就可以用 IAC 的方式把我的服务复制一份。这些事情都可以自动化，都不再特别依赖人去做这件事情，而且 DBA 也不是靠手做这个事情，DBA 也是靠一些工具、脚本或者数据库厂商提供的工具，那么这些工具和硬件、业务之间的适配就需要人去完成。但如果这件事情，已经非常的自动化，那么还需要一个人专职或者一个团队专职去做吗？我表示怀疑。</p><p>&nbsp;</p><p><strong>反方：李真旭 speaking ——</strong></p><p>我觉得第一，大家对 DBA 的工作认知有差异，好像 DBA 只做一些基本的安装部署备份工作，虽然这些工作确实是 RDS 具备的功能，但是<strong>哪怕是 </strong><strong>AWS</strong><strong>，限制也是很多的，有很多功能都满足不了。</strong></p><p>第二，很多人认为的刷个 MySQL、搭个主从复制、布个监控这些，都是比较初级的 DBA 干的，<strong>真正的 DBA 已经不是一个单纯的</strong><strong>数据库管理员</strong><strong>了，</strong>硬件、网络、存储、主机、系统、数据库他都懂一些，你可以把他理解为是一个小企业的 CIO 都可以。他的决策权还是比较大的，至少他对信息点的把控是比较好的，他能够去决策要用什么硬件、用什么数据库、什么型号才能满足业务的要求，而不是单纯的做备份装监控，这个太狭隘了。</p><p>第三，就算 RDS 能够满足用户的绝大部分需求了，大家也会发现一个问题：据统计，<strong>数据库里面，80% 的问题都不是因为你的硬件或者你的网络，而是由于应用本身的代码写得不好导致的，</strong>比如说一下子上来就把 CPU 打满了，这时候你觉得 RDS 还能帮你解决这个问题吗？我认为是解决不了的，顶多就帮你评估一下，告诉你怎么加索引，仅此而已。它还没做到那么智能。</p><p>除了保证数据库的安全高效、稳定运行，DBA 还可以向外输出，让业务更有价值。比如说赋能研发，给他们培训怎么写 sql，让他们开发变得更高效。</p><p>&nbsp;</p><p><strong>反方：薛晓刚 speaking ——</strong></p><p>我认为 DBA 并不仅仅只是懂数据库，还涉及到操作系统中间件，从哪来的到哪去，这些都是要知道的。就像李真旭老师说的，选型还是 DBA 更懂。</p><p>此外，DBA 负责的是设计、测试、部署、交付......全生命周期的数据库管理。我现在所在的企业做数据治理、数据标准化，其中就提到了一个事情：<strong>建模。</strong>业务模型、逻辑模型、物理模型，这些东西都是要参与甚至主导的，而这些，云都不能给你做，更不用说<strong>很多企业都用不了公有云了。</strong></p><p>我在甲方工作了将近 20 年，以我的工作经验来说，很多东西是不能优化的，它在设计的时候就已经出问题了。像数据库对象设计，有的数据类型都选错了，视图函数都建错了，在这种情况下，优化要么是没有力度的，要么是收效甚微的。我接触的传统行业就是这样的，如果开发都不知道数据库有什么特性，不管你在云上云下，他都不会用啊。所以，我们带着开发去做、去用这个数据库，才能真的让开发提升效率。</p><p>&nbsp;</p><span id="OSC_h1_2"></span><h1>02 <strong>DBA</strong><strong> 的可替代性有多强？</strong></h1><p><strong>反方：薛晓刚 speaking ——</strong></p><p>说到 DBA 的可替代性，我觉得在国内是很难被替代的，因为这个职位比较关键。像我在公司属于重点对象，因为我掌握着所有数据库的用户密码。有一次我接触支付行业，人行的老师来检查我们牌照的时候说，有些开发你外包就外包了，甚至网络外包就外包了，但你的数据库不能外包，你必须放在自己手里，这是人行的监管要求。</p><p>&nbsp;</p><p><strong>正方：李令辉 speaking ——</strong></p><p>我和各位背景不一样，我来讲一下从研发的角度看 DBA。</p><p>首先，我们在互联网公司的时候不太可能会让 DBA 去准备业务架构，因为业务是由产品经理根据业务需求定的，别说 DBA 了，研发都没有资格去评价这个业务需求提得合不合理，没有需求是不合理的。DBA 也没这个权限。毕竟，技术是服务于业务的，而不是业务来适配技术。技术如果做不到，最简单的办法就是换一批人，让能做到的人去做。</p><p>其次，薛老师刚才讲的这一点，有点偷换概念，那不叫「DBA 不可替代」，那是您二位不可替代。您二位水平已经不能叫简单的 DBA 了，在这种情况下去佐证 DBA 的不可替代性不合适。就好像说一个司机掌握了我们全公司所有门的钥匙，所以这个司机不可替代。可是，所有的司机都能掌握您的钥匙吗？不能。任何行业都能出状元，但你这个状元的发展，和行业的平均水平并不是直接有关的。您不可替代，不等于 DBA 不可替代。这两件事情，不要混淆。</p><p>第三，您刚才说您有所有的密码，这在我看来恰恰很危险，谁能保证您的人身没有风险？谁能保证您的可用性足够？谁能保证您的记忆力没有问题？如果一个技术团队的领导容忍这样的事情普遍发生，那么是他的不称职。如果密码一定要交给一个人的话，我宁愿交给一个可靠的服务。这个服务出问题的概率，至少比人低多了。</p><p>我们公司以前的运维就是这样，地位确实有，但我们希望他们不要一起吃饭，不要一起出行。虽然我们降低了风险，但是把这件事情强加于纪律去控制人，确实不对。实际上也是，我们怎么知道他们业余生活在不在一起玩，坐不坐一架飞机？根本不知道。所以，既然我们是做技术行业的，我们就应该通过技术来解决这个问题。</p><p>&nbsp;</p><p><strong>正方：马工 speaking ——</strong></p><p>刚才反方说 DBA 的配置很简单，不是什么问题，我不这么认为，我认为目前搭建的数据库都有严重的缺陷。刚刚薛老师说掌握了所有数据库的密码，这恰好说明，你们的访问控制是没有做的。对企业来说，安全等级非常低，完全依靠于内网、依靠网络工程师做的网络隔离。</p><p>如果我用 telephone 在云上做一个数据库，我可以做到任何一个数据库只被它需要访问的那个 application 去访问。举个例子，如果是分区的话，北京的应用只能访问北京数据库的某一行，或某一个 table。这都不需要 DBA 来配置。</p><p>在这个项目里，密码在任何时候都不会以名为形式向任何人公布。比如说我们用 telephone 生成一个密码，然后马上把这个密码直接传到云上的 secret manager，应用需要密码的时候，再用它的 IAM 访问 secret manager 把密码拿过来。全程密码不会在任何一个显示器里面出现，没有人能偷到；它也不落盘，只在内存里使用；最后我会定期去更新。所以在这一点上，我觉得 DBA 做的数据库还没我一个开发用 telephone 做的密码安全。</p><p>另外，有了云数据库后，已经不需要 DBA 来恢复数据库状态了，因为所有的数据库默认开启了异地备份，出问题直接把备份拿过来就行了。在这个意义上，我看到的不仅是初级 DBA 被淘汰，高级 DBA 的市场也越来越小。</p><p>最后是晓刚说的建模和数据质疑，但是抱歉，那不叫 DBA，人家有专门的岗位，叫 data engineer，数据工程师，跟 DBA 完全不一样，发展路径不一样，来源背景也不一样，这是我的观点。</p><p>&nbsp;</p><p><strong>反方：李真旭 speaking ——</strong></p><p>但这个异地备份它不是实时的。万一用户对数据要求很高，怎么办？</p><p>&nbsp;</p><p><strong>正方：马工 speaking ——</strong></p><p>这个场景只有万分之一，万分之一的话不需要一个专门的 DBA，全中国可能只需要你一个人就可以了。这个岗位不足以成为一个专职岗位，不需要每个公司都配备，也不需要年轻人去学习去复制去成为你。</p><p>&nbsp;</p><p><strong>反方：薛晓刚 speaking ——</strong></p><p>但是目前来说，人行监管就是要求数据库要在自己手里。还有很多不能上云的企业，你们也没有考虑到。掌握密码这个事，很多公司都会有一定的机制保障，今天薛晓刚走了，明天会来一个李晓刚。这个岗位不是因我而设的，它就在那，谁来坐都一样。</p><p>李令辉老师说，技术是服务业务的，这我不赞成。技术是要指导业务的。我经历过很多这种事，学员给我的东西，我问起，他就说业务就这么要求的，就像李老师说的「业务就是这样的」，但业务真的是这样吗？开发说，我不知道，反正业务是这么说的。当你把业务拉过来，再一起问一下，业务就说：我没要求，是你理解错了，或者我这个需求也提错了。你们怎么看？这种现象，在我们日常工作中是非常普遍的。</p><p>&nbsp;</p><span id="OSC_h1_3"></span><h1>03 <strong>云数据库</strong><strong>也不是万能的</strong></h1><p><strong>反方：薛晓刚 speaking ——</strong></p><p>我处理过几个朋友的问题，他们是创业公司，用的都是阿里云，跑得比别人快，但是都出现过宕机问题，比方说一周宕机一次，严重影响业务开展。我去看了，基本上都是 SQL 问题，背后是数据库和 SQL 的逻辑问题。阿里云并不能帮他们解决什么，我就告诉他们怎么改，这两家公司按照我的要求改了，业务再也没宕机过。你看，云并不能帮他们弄清楚业务的问题，改逻辑或者改 SQL ，甚至是改设计，这些都是做不了的。当然你可以说这属于高级的 DBA，但是高级的 DBA 也是从初级走过来的。</p><p>&nbsp;</p><p><strong>反方：李真旭 speaking ——</strong></p><p>第一，我认同薛老师的观点，如果没有 DBA 这个岗位的话，可能会导致应用和运维脱节。因为开发人员可能并不能很好地使用数据库，并不是说把数据库换成 RDS 之后，开发就能够把 RDS 用好，这个是不一定的。</p><p>第二是关于数据的隐私问题，特别是去年，很多大厂出了事故，闹得很大，我就不展开了。</p><p>第三，这两年经济下行，我觉得大家可能会更关注成本。比如说，阿里云，我发现它居然也支持 Oracle 在上面跑，RDS for Oracle，假设我要买一个企业级的数据库，比如说 64 核，成本大概是一年 42000 多美金，其实并不便宜。国内的话，一年算下来，大概也要 70 多万，够我买高配的物理机了。</p><p>所以综合下来看的话，RDS 优势也并不大。</p><p>&nbsp;</p><p><strong>正方：马工 speaking ——</strong></p><p>针对薛老师说的「阿里云不帮用户解决性能问题」这一点，我认为可以用机器学习来解决。这里有一个例子，Amazon for RDS，它把常见的一些数据库问题给喂进去，云上也会有 performance insights，大多数的常见问题都不难，你看了就能定位出问题在哪。如果你会用的话，你需要专家的概率其实是非常低的。当然，我不能保证说这两个工具加起来之后，你就不需要薛老师这种专家了，但是需求量不大，可能全中国有三五个薛老师就够了。所以还是那个问题，三五个薛老师不构成 DBA 这个岗位，不构成一个行业。</p><p>&nbsp;</p><p><strong>反方：薛晓刚 speaking ——</strong></p><p>马老师说到的工具我们也有，大部分工具也是自动化的，但是单纯指望工具太理想化了。很多人是「我知道有问题，但我不知道怎么改，你得手把手教我」，我每次告诉他问题在哪给出建议还是不会改，我要写个 demo 给他看，告诉他怎么样改，告诉他你要是实在不会写，我用 java 给你写一段，你照着抄......要这样才行。在我国大部分情况下，你告诉他这个有问题，但不告诉解决方案，他根本不知道怎么改。</p><p>&nbsp;</p><p><strong>正方：李令辉 speaking ——</strong></p><p>咱们从技术角度来看这个问题，你说 RDS 好不好？我觉得 RDS 确实不好。打一个现实中的比喻，就像现在大家都用电车了，RDS 它就强行在自己油车的油箱边上加了个电机，所以 RDS 才会显得这么别扭。</p><p>RDS，它是一个半成品，它是互联网公司用单机时代的软件去解决云时代问题的一个尝试。这个尝试解决了互联网公司当时的问题，你说这些互联网公司自己有没有 DBA？肯定有，我就在这个 DBA 团队。每个互联网公司包括 AWS、Google，他们都有 DBA。所以 DBA 他们是需要的，只不过没有那么多，可能几十人就不错了。</p><p>但是，这是未来吗？我认为不是，纯电车是未来。我小时候去我爸单位，他们有那个手动机床，有些老工人非常的专业，能做出很漂亮的东西，但是现在你看，制造业都已经是数控机床了。只要你把时间给够，该发生的事情一定会发生。</p><p>在我看来，云数据库应该是和现在的 RDS 完全不同的，不应该利用 RDS 以前单机数据库利用网络来做网络备份这种方式来做数据冗余，来做高可用，来做什么 IP 切换这种很 low 的办法。云数据库现在的底座就是整个云，在一个对象存储上面有一些算力，这些算力使用临时存储，这就是为什么在云上自建数据库并不好用的原因，因为 EBS 很贵，单机存储它又不可靠，它天生不是为了 durability 设计的，也不是为了性能和 latency。</p><p>在云时代，一个云数据库，可以在一个共享的对象存储下。这个对象存储和传统的单机存储最大的不同是它可以随意扩展它的存储量。也就是说，你在传统的机器上一个进程高性能地访问这个磁盘，别的进程就没有 IO 能力了。可是在现代的云上面，对象存储不是这样，它是可以动态扩容的。当我有十台虚拟机去访问的时候，各自的带宽是独立的。云可以在很短的时间内把流量扩过去，存储量横向扩展。这就带来了在传统的单机上绝不可能有的一种体验。以前，我们要担心的是螺丝壳里做道场，怎么有效地利用资源，有效地节省 IO，但现在都不存在这些问题。所以我们要做的是什么？我们要在一个新的基础建设上，做一个新的适配的软件，软件永远是在硬件的基础上服务业务。</p><p>&nbsp;</p><span id="OSC_h1_4"></span><h1>04 <strong>普通 </strong><strong>DBA</strong><strong> 该怎样应对 </strong><strong>RDS</strong><strong> 的挑战？</strong></h1><p><strong>反方：李真旭 speaking ——</strong></p><p>短期来看，从国内来讲，机会还是很多的。现在大批的关系数据库厂商，在未来三到五年会迎来一个考察的过程，这个时候我觉得对 DBA 来讲，是个转型升级的好机会。现在很多客户用的数据库，还在做 Oracle 或 MySQL 兼容，如果你对这个比较了解，去做另外一款数据库也是有优势的。</p><p>至于说未来的职业发展，从长远来看，DBA 的需求量是会越来越少的，但是不代表这个行业它会消失。初级的 DBA 可能会被软件自动化取代，我们需要做的是更深入，对数据库至少要比开发人员理解得更深入。</p><p>&nbsp;</p><p><strong>反方：薛晓刚 speaking ——</strong></p><p>那些非核心竞争力的基础运作，由自动化工具代劳之后，我们这些从业者能从战术层面走到战略层面，我去管开发，我去管业务，就是技术指导业务嘛。只要有数据库，都会有 DBA，如果哪天真的出现了，不要数据库了，那我们可能去干些别的。现在没有云的，还是按没有云的做法；如果有云，那就可以借云数据库从幕后走向台前。</p><p>&nbsp;</p><p><strong>正方：马工 speaking ——</strong></p><p>如果你是个从业者，那你要好好考虑，作为一个职业生涯目标，你要想象它的长期可能性。长期来看，客户是不是会归拢到某几个大型的数据库，会不会大量的使用？如果是这个趋势的话，那 DBA 的岗位需求是会越来越少的。我的建议是，不要把自己固定为一个 DBA，你就是个工程师，只不过以前有点偏好于数据库或者数据建模。你只要把自己当成工程师，所有的工具都只是你工程师工具箱里面的一个，你今天选了个 Oracle DB，明天选个 type-script 都是 ok 的。云也只是一个工具，不是你的敌人，可以拿过来用。最后，作为一个工程师，你一定要对团队有价值。</p><hr><p>大家对此怎么看呢？快留言说说你的经验吧~</p><p>直播回放如下，错过的赶紧扫码看看回放↓↓↓</p><p style="text-align:center"><img height="259" src="https://oscimg.oschina.net/oscnet/up-66bae1f03def00f872b52f85338f621bf80.png" width="264" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 05 Feb 2024 01:46:02 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/11029432</guid>
            <link>https://my.oschina.net/u/6852546/blog/11029432</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[联想 2024 年将发布全新 AI OS 操作系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>联想集团宣布将在 2024 年发布全新的 AIOS 操作系统，该集团已经将 AI PC 以及个人 Agent 作为 2024 年业务推进重点。</p><p><img alt="" height="76" src="https://oscimg.oschina.net/oscnet/up-cd7a03471eb847bb2b1d418dd6f44e81d6c.png" width="380" referrerpolicy="no-referrer"></p><p>新的 AIOS 操作系统将内嵌个人 Agent、个人大模型、本地知识库、应用接口，形成下一代 AI OS，个人 Agent 将穿梭于多种 AI 终端，使其融为一体，带来更加智能、更加主动的 AI 服务。</p><p>在此战略下，新的一年，联想将发布全新的 AI OS 操作系统，推出个人 Agent 以及更多集成个人大模型的 AI PC 产品，并持续推动 AI PC 生态建设助推 AI PC 进入新的发展阶段。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 07:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277716</guid>
            <link>https://www.oschina.net/news/277716</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Redox OS 计划移植更多 Linux 软件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">基于 Rust 的 Redox OS 项目发布了一篇最新的工作进展<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.redox-os.org%2Fnews%2Fthis-month-240131%2F" target="_blank">博文</a>，概述了最近取得的一些成就以及对今年计划的展望。</span></p><blockquote><p><span style="color:#000000">Redox 是一个用编程语言 Rust 编写的类似 Unix 的微内核操作系统，它的重点是安全、稳定和性能。Redox 的灵感来自先前的内核和操作系统，如 SeL4、MINIX、Plan 9 和 BSD。它与 GNU 和 BSD 类似，但用一种内存安全的语言编写，是在 MIT 许可下发布的开源软件。</span></p></blockquote><p><span style="color:#000000">项目团队对 logo 进行了改进，计划在未来几周内进行网站更新以使用新 logo。此外，Redox OS 传统上依赖 URI/URL 格式来访问资源，但为了方便将 Linux 软件移植到 Redox 的工作，他们已经将资源路径格式更改为与 Linux 兼容的 /scheme/scheme_name/path/to/resource。新的基于文件的路径格式已开始用于内核和 relibc 实现，并能在不同格式之间进行透明转换。</span></p><p><span style="color:#000000"><img alt="" height="302" src="https://oscimg.oschina.net/oscnet/up-637f014171fa77dbf69a32fe9982c100c43.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">针对 Linux 软件的移植工作也越来越多，目前像 Nano 和 Helix 这样的编辑器已经可以在 Redox OS 上运行。其他一些可在 Redox 上运行的一些程序包括：</span></p><ul><li><span style="color:#000000">极简主义编辑器 kibi。</span></li><li><span style="color:#000000">TUI 幻灯片应用程序 Presenterm。</span></li><li><span style="color:#000000">国际象棋游戏 chess-tui。</span></li><li><span style="color:#000000">十六进制文件查看器 hexyl，等等。</span></li></ul><p><span style="color:#000000">System76 的 COSMIC Desktop 也在向 Redox OS 移植。目前，其 Orbital Windowing System 上已经可以运行 cosmic-edit 和 cosmic-files。</span></p><p><span style="color:#000000"><img alt="" height="302" src="https://oscimg.oschina.net/oscnet/up-49bf18cec71ed5ef9cb09a88117a804c6ae.png" width="500" referrerpolicy="no-referrer"></span></p><p><img alt="" height="302" src="https://oscimg.oschina.net/oscnet/up-5900ff5266775f13644e78edb4ab7995826.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">其他的一些进展还包括：</span></p><ul><li><span style="color:#000000">Redox 现在可在 Raspberry Pi 3 Model B+ 上运行。构建系统也进行了改进，以便可以处理多个 RP 型号，每个型号都有自己的硬件配置。</span></li><li><span style="color:#000000">内核和驱动程序改进：主要包括 PCI 驱动程序的重新设计、内核中的一些修复和清理，以及构建系统的改进。</span></li><li><span style="color:#000000">Relibc：包括将 malloc 代码升级为 dlmalloc-rs 移植版本；之前的 malloc 代码是用 C 编写的，现在已经完全删除。还计划努力实现 libm 和 libcrypt 的 Rust 实现，并实现了几个新的 libc 函数，包括一些宽字符串函数和一些伪终端处理函数。</span></li><li><span style="color:#000000">等等......</span></li></ul><p><span style="color:#000000">展望未来，Redox 将致力于其 Web 服务器用例、支持 USB/HID、性能分析和改进、更多更好的自动测试、更多地移植 Linux 应用程序以及开发 relibc 和内核兼容功能。</span></p><p><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.redox-os.org%2Fnews%2Fthis-month-240131%2F" target="_blank">查看官方博客</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 06:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277701/redox-os-240131</guid>
            <link>https://www.oschina.net/news/277701/redox-os-240131</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[完蛋！我把 AI 喂吐了！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>当我们用 RAG 构建一个知识库问答应用的时候，总是希望知识库里面灌的数据越多，问答的效果越好，事实真是如此吗？这篇文章给大家答案。</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-dfdd57c27b133d44a1db4b25502172f74c3.png" referrerpolicy="no-referrer"></p><p><strong>引言</strong><br> 在人工智能问答系统的发展中，RAG（Retrieval-Augmented Generation）技术以其独特的检索增强生成方式，为减少大模型幻觉开辟了新的天地。然而，在实际落地过程中有一个很大的疑问：RAG 系统，数据越多效果越好吗？本文将深入分析数据量如何影响 RAG 系统的问答效果，并讨论如何优化这一系统以适应不断增长的海量数据。</p><p><strong>什么是 RAG？</strong><br> 大型语言模型（LLMs）已经展现出了强大的能力，但在实际应用中仍面临很多挑战，如模型幻觉、知识更新缓慢以及答案缺乏可信度等。LLM 虽然是在非常庞大的数据集上训练的，但并不是在您的数据上训练的。检索增强生成（RAG）通过将您的数据链接到 LLMs 来解决这个问题。</p><p>RAG 是一种将知识检索与生成模型相结合的技术，可以提高问答系统的准确性和相关性。它通过从外部知识源中动态检索信息，并将检索到的数据作为参考来组织答案，从而能有效缓解 LLM 中存在的幻觉问题。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-21528f3b3673b9c485e34ff04483f4fa81d.png" referrerpolicy="no-referrer"></p><p style="text-align:center">RAG 系统</p><p>RAG 的工作流程主要包含三个模块：</p><ul><li><strong>索引（indexing）</strong>：文本索引的构建包括以下步骤：文档解析、文本分块、Embedding 向量化和创建索引。先将不同格式的原始文件解析转换为纯文本，再把文本切分成较小的文本块。通过 Embedding 为每一个文本块生成一个向量表示，用于计算文本向量和问题向量之间的相似度。创建索引将原始文本块和 Embedding 向量以键值对的形式存储，以便将来进行快速和频繁的搜索。</li><li><strong>检索（Retrieval）</strong>：使用 Embedding 模型将用户输入问题转换为向量，计算问题的 Embedding 向量和语料库中文本块 Embedding 向量之间的相似度，选择相似度最高的前 K 个文档块作为当前问题的增强上下文信息。</li><li><strong>生成（Generation）</strong>：将检索得到的前 K 个文本块和用户问题一起送进大模型，让大模型基于给定的文本块来回答用户的问题。</li></ul><p>有关 RAG 更全面的信息请参阅综述论文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2312.10997.pdf" target="_blank">Retrieval-Augmented Generation for Large Language Models: A Survey</a>，不想阅读原始英文论文？<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fread.youdao.com%2F%23%2Fhome" target="_blank">使用「有道速读」快速了解什么是 RAG？</a></p><p><strong>RAG 系统：数据越多，效果越好吗？</strong><br> 从宏观层面来看，RAG 包含两个核心的要素：数据和系统。RAG 的应用场景非常多，包括文档助手，智能客服机器人，领域/行业知识库问答等。不同的应用场景优化的侧重点可能有所差异。</p><p>对于文档助手这类应用来说，数据是已知的，我就上传几篇文档，就针对这些文档来问问题。我们几乎不用关注数据侧的事情，把精力放在优化系统就可以了。</p><p>而对于领域/行业知识库问答来说，需要从数据侧和系统侧同时优化。因为如果用户问题回答不上来，有可能是没相关数据，也有可能是有数据但 RAG 系统没找到。</p><p>数据侧的优化很「简单」，就是尽可能多的收集领域内相关的数据，通通灌进知识库里面。但是， <strong>请先别着急！</strong>在开始组织人力收集整理数据之前，我们首先得弄清楚一件事情：RAG 系统，数据越多，效果越好吗？</p><p><strong>如果</strong>答案是肯定的，意味着：</p><ol><li><strong>海量数据放心灌，</strong>我可以一批一批地往知识库中加数据，不用担心数据量太大相互干扰导致效果不佳。</li><li><strong>快速迭代快速优化，</strong>对于上线之后的 badcase，业务侧可以直接通过加相应数据来快速迭代优化。</li><li><strong>降低数据成本</strong>，收集和整理的成本，不用费劲心思去做数据去重和脏数据的处理。</li><li><strong>增加系统的稳定性，</strong>如果我加的数据不相关，问答的效果不一定会变好，但是起码能保证以前的效果不会变差。</li></ol><p>反之，那工作量可就大了😭</p><p><strong>实验：数据量对于问答效果的影响</strong><br> 以教育领域的知识库问答为例，我们基于 RAG 做了一个升学百科问答的应用，专门解答用户关于高考升学规划和志愿填报政策相关的问题。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3443e76cdb8062538f4fb914470c9aa7298.png" referrerpolicy="no-referrer"></p><p style="text-align:center">升学百科问答</p><p>升学百科问答不是给定数据，给定问题，然后只需要去优化算法或者系统的 Benchmark 任务。它的问题是开放的，数据也是开放的（你可以收集到尽可能多的相关数据来提升问答的效果）。所以优化的变量就多了一个：系统是一部分，数据也是一部分。问答效果的好坏不光取决于好的 RAG 系统，还取决于你的数据量够不够，覆盖的知识全不全？如何优化 RAG 能让它完全发挥出海量数据的价值是我们研究的重点。</p><p>关于数据量对 RAG 问答质量的影响，我们在升学百科问答项目中做了比较详细的研究。实验设置如下：</p><ul><li><strong>用户问题</strong>：收集了 176 个升学百科相关的问题，包括升学路径、志愿填报、选科等相关政策咨询问题。</li><li><strong>RAG 系统：</strong>一个经典的 RAG 系统，包括文本解析切片，embedding 向量化建库，检索相关片段，语言模型总结问答等模块。</li><li><strong>领域数据：</strong>我们收集了海量升学规划相关的资料来验证数据的问题，包括教育领域的互联网数据，书本资料，FAQ 问答对等。</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-519bd951fc8e8da2b60ca1c99438053376c.png" referrerpolicy="no-referrer"></p><p style="text-align:center">RAG 在升学百科问答中的实践</p><p><strong>结果：检索退化问题</strong><br> 我们分批往 RAG 知识库中灌入数据，每加一批数据都做一次评测，观察随着数据量变大，问答效果的变化情况：</p><ul><li><strong>baseline：</strong>第一批数据加入后问答正确率有 42.6%，此时有一些问题没回答上来是因为确实缺少相关资料。我们继续加数据…</li><li><strong>迎来上涨：</strong>第二批加了更多数据，覆盖知识范围更广。准确率提升到了 60.2%，提升非常明显，看来加数据确实还是挺有用的。</li><li><strong>坏消息：</strong>当加入第三批数据的时候，我们最担心的事情还是发生了。正确率急剧下降，跌了将近 8 个百分点。</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9b4ab65b8b57cc9614dab72bf9b3b044189.png" referrerpolicy="no-referrer"></p><p>到这里，我们的问题有了答案，<strong>不是所的 RAG 系统都能保证：数据越多，效果越好。</strong>海量数据有可能会把 AI 喂吐，随着数据的增多，数据之间可能会有相互干扰，导致检索退化的问题，影响问答的质量。</p><p><strong>具体问题具体分析</strong><br> 先抓一个典型看看，<u>大连医科大学怎么样？</u>这个问题在 v2 版本（加入第三批数据前）是能回答对的，v3 版本（加入第三批数据后）回答错了。看了一下送到 LLM 的文本片段，居然全部都是<u>大连理工大学</u>相关的信息。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ec645d0fe9a4be46b204e35260b319c96bc.png" referrerpolicy="no-referrer"></p><p style="text-align:center">问题分析：大连医科大学的问答结果</p><p>主要原因是第三批加入的某些文档中恰好有<u>大连理工大学 xxx 怎么样</u>？的句子，和 query<u>大连医科大学怎么样？</u>表面上看起来确实非常像，Embedding 给它打了比较高的分。</p><p>而类似大连医科大学师资介绍这样的片段相关性就稍微低了些。而 LLM 输入 token 有限制，前面两个最相关但是实际并不能回答 query 问题的片段就已经占满了 token 的窗口，只能把他俩送进 LLM 里。结果可想而知，啥都不知道。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ba46a78fcfeaa165d79b3d32ebff25651fa.png" referrerpolicy="no-referrer"></p><p style="text-align:center">RAG 中的检索退化问题</p><p><strong>语义检索：相似≠相关</strong><br> 文本片段与 query 的相似性和文本片段是否包含 query 的答案（相关性）是两回事。RAG 中一个非常重要的矛盾点在于检索召回的片段比较多，但是 LLM 输入 token 是有限制，所以必须把能回答 query 问题的片段（和问题最相关）给 LLM。</p><p><strong>Embedding（Bi-Encoder）</strong><br> Embedding 也可以给出一个得分，但是这个得分描述的更多的是相似性。Embedding 本质上是一个双编码器，两个文本在模型内部没有任何信息交互。只在最后计算两个向量的余弦相似度时才进行唯一一次交互。所以 Embedding 检索只能把最相似的文本片段给你，没有能力来判断候选文本和 query 之间的相关性。但是相似又不等于相关。</p><p>如下图所示，从某种程度上，Embedding 其实就是在算两个文本块中相似字符的个数占比，它分不清 query 中的重点是大连医科大学，在它看来每个字符的重要性都是一样的。感兴趣的话可以计算一下下图中红字部分的占比，和最后余弦相似度的得分基本是吻合的。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e8edc0b11333a604827f66087e138276730.png" referrerpolicy="no-referrer"></p><p style="text-align:center">Embedding 原理</p><p><strong>Rerank（Cross-Encoder）</strong><br> Rerank 本质是一个 Cross-Encoder 的模型。Cross-Encoder 能让两个文本片段一开始就在 BERT 模型各层中通过 self-attention 进行交互。它能够用 self-attention 判断出来这个 query 中的重点在于<u>大连医科大学</u>，而不是<u>怎么样？</u>。所以，如下图所示，<u>大连医科大学怎么样？</u>这个 query 和<u>大连医科大学创建于 1947 年…</u>更相关。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8d4d65f826a971d22b34c414fb70162d841.png" referrerpolicy="no-referrer"></p><p style="text-align:center">Rerank 原理</p><p><strong>Cross-Encoder 这么好，为什么不直接用？</strong><br> 因为速度慢。这里说的速度慢不是 cross-encoder 的模型比 bi-encoder 的模型速度慢。关键在于 bi-encoder 可以离线计算海量文本块的向量化表示，把他们暂存在向量数据库中，在问答检索的时候只需要计算一个 query 的向量化表示就可以了。拿着 query 的向量表示去库里找最相似的文本即可。</p><p>但是 cross-encoder 需要实时计算两个文本块的相关度，如果候选文本有几万条，每一条都需要和 query 一起送进 BERT 模型中算一遍，需要实时算几万次。这个成本是非常巨大的。</p><p>所以，我们可以把检索过程分为两个阶段：召回（粗排）和重排。</p><ul><li>第一个阶段的目标是尽可能多的召回相似的文本片段，这个阶段的文本得分排序不是特别靠谱，所以候选的 topK 可以设置大一些，比如 topK=100；</li><li>第二个阶段的目标是对 100 个粗排的候选文本片段进行重新排序，用 cross-encoder 计算 100 个候选文本和 query 的相关度得分；</li></ul><p>两阶段检索结合可以兼顾效果和效率。</p><p><strong>两阶段检索在 RAG 中的实验</strong><br> 我们对上面升学百科中的文本片段用 Rerank 模型再做一次排序，重排序后的结果如下图所示，左右可以对照着看，左边是 Rerank 之前的文本片段，右边是 Rerank 重排之后的文本片段。可以明显看到右边文本片段的得分和排序更加合理，和人的感受基本上是一致的。重排序之后送进 LLM 窗口内的文本和 query 是最相关的，语言模型也能轻松根据相关信息回答出问题，再也不会说不知道了。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4797d54a8067ea396396171be813ce22a06.png" referrerpolicy="no-referrer"></p><p style="text-align:center">两阶段检索在 RAG 中的实验</p><p><strong>QAnything：两阶段检索问答框架</strong><br><strong>QAnything</strong> (<strong>Q</strong>uestion and <strong>A</strong>nswer based on <strong>Anything</strong>) 是致力于支持任意格式文件或数据库的本地知识库问答系统。基于有道自研两阶段检索框架，能够做到数据越多，问答效果越好！</p><p>QAnything 具有以下特点：</p><ul><li><strong>数据安全放心用，</strong>完全离线使用；</li><li><strong>跨语种知识随意问</strong>，中英文问答随意切换，无所谓文件是什么语种；</li><li><strong>海量数据放心灌，</strong>两阶段向量排序，解决了大规模数据检索退化的问题，数据越多，效果越好；</li><li><strong>生产级系统直接装，</strong>可直接部署企业级应用；</li><li><strong>一键安装轻松用</strong>，无需繁琐的配置，一键安装部署，拿来就用；</li><li><strong>多知识库随时切，</strong>支持多个知识库联合问答。</li><li><strong>完全开源，完全免费！</strong></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d7ab5597d8e97eed09547979ca0d93b826b.png" referrerpolicy="no-referrer"></p><p style="text-align:center">QAnything 系统架构</p><p>QAnything 使用的有道自研检索组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FBCEmbedding" target="_blank">BCEmbedding</a>有非常强悍的双语和跨语种能力，能消除语义检索里面的中英语言之间的差异。其中包含的 embedding 和 rerank 模型均达到业界 SOTA，详细评测指标请参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FBCEmbedding%2Fblob%2Fmaster%2FDocs%2FEvaluationSummary%2Fembedding_eval_summary.md" target="_blank">有道 BECEmbedding 模型和 Rerank 模型指标汇总</a>，如果需要单独使用 embedding 和 rerank 组件，点击下面的链接进行下载：</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FBCEmbedding" target="_blank">https://github.com/netease-youdao/BCEmbedding</a></p><p><strong>最终结果</strong><br> 至此，我们可以在以上两阶段检索的 QAnything 系统上重新跑前三批数据的实验了。结果如下：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1bb7b39cb3f131a6c5068dc62e72bdcbda2.png" referrerpolicy="no-referrer"></p><p>在数据不变的情况，两阶段检索问答准确率从 52.8% 提升到 65.9%，这个结果再次证明了一阶段检索中存在数据互相干扰的情况。两阶段检索可以最大化的挖掘出数据的潜力，我们继续加数据，效果能够稳定提升。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d8915eb8807fbceefc14299a7b320e15ae8.png" referrerpolicy="no-referrer"></p><p style="text-align:center">QAnything 实现数据越多效果越好</p><p>QAnything 两阶段检索最大的意义不是在某一个实验上面提升了 10 个点。它最大的意义在于让「数据越多，效果越好」变成了现实。这是在准备开始优化一个 RAG 系统之前要确保的第一件事情。</p><p><strong>QAnything 应用</strong><br> QAnything 和有道领世联合推出<em><strong>「AI 升学规划师」</strong></em>。基于 QAnything 强劲的检索增强生成能力和有道领世多年深耕的海量升学数据资料，可以为每个学生和家长配备一名私人 AI 升学规划师，提供更加全面、专业、及时的升学规划服务。</p><p>基于<strong><em>「QAnything」</em></strong>，有道 AI 升学规划师在升学百科问答中准确率达到 95%，可以解答用户关于高考政策、升学路径、学习生活以及职业规划等各种问题。并且随着不断地数据补充和更新，这个准确率会一直上涨。</p><div class="ckeditor-html5-video" style="text-align:center"><video autoplay="autoplay" controls="controls" poster="https://oscimg.oschina.net/oscnet/up-072ac9e407286e5b380d0c13eaa3c9454aa.png" src="https://www.bilibili.com/video/BV1MH4y1v7MQ/?vd_source=5b7cd5db06252fb1e0b555e9b076ec34">
   &nbsp; 
 </video></div><p style="text-align:center">有道领世 AI 规划师（Powered by QAnything）</p><p style="text-align:center">如果视频无法播放可点击视频原始链接播放：B 站播放链接，可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1MH4y1v7MQ%2F%3Fvd_source%3D5b7cd5db06252fb1e0b555e9b076ec34" target="_blank">点击此处播放</a>。</p><p><strong>展望</strong><br> 两阶段检索是一个大的框架，给 RAG 提供了一个好的基础。未来可以在两阶段的基础上做更多细致的优化。这里有一些想法，贴出来和大家一起探讨：</p><ul><li><strong>切片策略：</strong>切片策略对检索召回的影响非常大，目前主流的切片策略还比较机械，经常造成一些信息的损失，未来可能会出现更加智能的切片方式。</li><li><strong>多路召回：</strong>可以在 embedding 检索的基础上增加 BM25 检索，或者通过 LLM 改写 query 的方式生成多个检索 query 增加召回率。</li><li><strong>意图分类：</strong>不同的问题走不同的知识库，或者用不同的处理逻辑。</li><li><strong>Agent：</strong>基于文档的问答能做的事情非常有限，Agent 和 RAG 结合起来可以做更多事情。</li></ul><p><strong>开源</strong><br> 自从_<strong>「QAnything」</strong>_项目开放源代码以来，受到了开发社区的热烈欢迎和广泛认可。截至 2024 年 2 月 1 日，项目在 GitHub 上已经积累了 3600 多个星标，这反映出了其流行度和用户对其价值的高度评价。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-cf43409261471c344f4df393c2de66133fe.png" referrerpolicy="no-referrer"></p><p>欢迎点击下面的链接下载试用：</p><p>QAnything github: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FQAnything" target="_blank">https://github.com/netease-youdao/QAnything</a></p><p>QAnything gitee: <a href="https://gitee.com/netease-youdao/QAnything">https://gitee.com/netease-youdao/QAnything</a></p><p>欢迎大家在 GitHub 上为<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FQAnything" target="_blank">「QAnything」</a>加星助力，方便收到新版本更新的通知！</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bd913c4ea881c00bf7ac16c9184ac1c5d65.gif" referrerpolicy="no-referrer"></p><p><strong>参考信息</strong><br> QAnything: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FQAnything" target="_blank">https://github.com/netease-youdao/QAnything</a></p><p>BCEmbedding: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fnetease-youdao%2FBCEmbedding" target="_blank">https://github.com/netease-youdao/BCEmbedding</a></p><p>RAG Survery: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2312.10997.pdf" target="_blank">Retrieval-Augmented Generation for Large Language Models: A Survey</a></p><p>LlamaIndex RAG: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.llamaindex.ai%2Fen%2Fstable%2Fgetting_started%2Fconcepts.html%23retrieval-augmented-generation-rag" target="_blank">https://docs.llamaindex.ai/en/stable/getting_started/concepts.html#retrieval-augmented-generation-rag</a></p><p>Cross-encoder: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sbert.net%2Fexamples%2Fapplications%2Fcross-encoder%2FREADME.html" target="_blank">https://www.sbert.net/examples/applications/cross-encoder/README.html</a></p><p>Sentence-BERT: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F1908.10084.pdf" target="_blank">https://arxiv.org/pdf/1908.10084.pdf</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 03:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/youdaotech/blog/11015018</guid>
            <link>https://my.oschina.net/youdaotech/blog/11015018</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Mixtral-8x7B Pytorch 实现]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><span id="OSC_h1_1"></span><h1 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 24px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;visibility: visible;" data-mpa-powered-by="yiban.io">0.前言</h1><section data-tool="mdnice 编辑器" data-website="https://www.mdnice.com" style="margin-bottom: 0px;padding-right: 10px;padding-left: 10px;outline: 0px;letter-spacing: 0px;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 1.6;word-break: break-word;visibility: visible;"><p data-tool="mdnice 编辑器" style="padding-top: 8px;padding-bottom: 8px;outline: 0px;line-height: 26px;visibility: visible;">本文从代码角度来谈下&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Mixtral 8x7B</code>&nbsp;混合专家<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Pytorch</code>的实现</p></section><span id="OSC_h1_2"></span><h1 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 24px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;visibility: visible;">1.论文概述</h1><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="100006729" data-ratio="0.47229551451187335" src="https://oscimg.oschina.net/oscnet/08de9207-ec2d-4fd6-8d38-f450e6e0396e.png" data-type="png" data-w="758" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.979px !important;" referrerpolicy="no-referrer"></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;visibility: visible;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Mixtral-8x7B&nbsp;</code>引爆了<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">MoE</code>的技术方向，更多针对<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">MoE</code>优化的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Trick</code>出现，回归模型本身来解析：</p><ol data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;visibility: visible;"><li style="outline: 0px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);visibility: visible;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Mixtral 8x7B</code>&nbsp;采用了 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">sMoE</code>模型结构，模型的细节如何？路由负载均衡如何计算？代码如何实现？ 
   </section></li><li style="outline: 0px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);visibility: visible;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Mixtral 8x7B</code>&nbsp;的训练流程和推理流程是怎么样的，如何提高训练和推理效率？ 
   </section></li><li style="outline: 0px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);visibility: visible;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Mixtral 8x7B</code>&nbsp;的模型参数是如何计算的？ 
   </section></li><li style="outline: 0px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);visibility: visible;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">Mixtral 8x7B</code>&nbsp;性能硬刚 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">LLaMA2-70B</code>和 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">GPT-3.5</code>， 性能一线水准，在 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">MBPP</code>代码能力超越 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;visibility: visible;">3.5</code></section></li></ol><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="100006735" data-ratio="0.31203703703703706" src="https://oscimg.oschina.net/oscnet/570ae0a1-9cf9-4aec-abc1-eccfee1f7667.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.969px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_3"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2. Mixtral 8x7B 模型架构和计算流程</h2><blockquote data-tool="mdnice 编辑器" style="margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;outline: 0px;border-left-color: rgba(0, 0, 0, 0.4);color: rgb(106, 115, 125);font-size: 0.9em;letter-spacing: normal;text-align: left;text-wrap: wrap;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;border-top: none;border-right: none;border-bottom: none;overflow: auto;background: rgba(0, 0, 0, 0.05);"><p style="padding-top: 8px;padding-bottom: 8px;outline: 0px;font-size: 16px;color: black;line-height: 26px;">Mixtral is based on a&nbsp;<strong style="outline: 0px;">transformer architecture [31]</strong>&nbsp;and uses the same&nbsp;<strong style="outline: 0px;">modifications</strong>&nbsp;<strong style="outline: 0px;">as described in [18]</strong>, with the notable exceptions that Mixtral supports a fully dense context length of 32k tokens, and the&nbsp;<strong style="outline: 0px;">feed forward</strong>&nbsp;<strong style="outline: 0px;">blocks are replaced by Mixture-of-Expert layers</strong>&nbsp;(Section 2.1). The model architecture parameters are summarized in Table 1.</p></blockquote><ul data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">base</code>的模型结构为 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Transformers</code>的改版 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mistral-7B</code></section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MoE</code>&nbsp;作用在 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Feed Forward Blocks</code>上 
   </section></li></ul><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006730" data-ratio="0.46574074074074073" src="https://oscimg.oschina.net/oscnet/a4575f91-4dfa-4468-95a2-254e1ed3eadd.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.99px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_4"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.1 Mixtral 模型架构</h2><blockquote data-tool="mdnice 编辑器" style="margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;outline: 0px;border-left-color: rgba(0, 0, 0, 0.4);color: rgb(106, 115, 125);font-size: 0.9em;letter-spacing: normal;text-align: left;text-wrap: wrap;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;border-top: none;border-right: none;border-bottom: none;overflow: auto;background: rgba(0, 0, 0, 0.05);"><p style="padding-top: 8px;padding-bottom: 8px;outline: 0px;font-size: 16px;color: black;line-height: 26px;">In a Transformer model, the MoE layer is applied independently per token and replaces the feed-forward (FFN) sub-block of the transformer block. For Mixtral we use the same SwiGLU architecture as the expert function Ei(x) and set K = 2. This means each token is routed to two SwiGLU sub-blocks with different sets of weights. Taking this all together, the output y for an input token x is computed as:</p></blockquote><section role="presentation" data-formula="y=\sum^{n-1}_{i=0}\text{Softmax}(\text{Top2}(x \cdot W_g))_i \cdot \text{SwiGLU}_i(x) 
" data-formula-type="block-equation" data-tool="mdnice 编辑器" style="margin-bottom: 0px;outline: 0px;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;text-align: center;overflow: auto;"><embed style="vertical-align: -2.819ex;width: 44.983ex;height: auto;max-width: 300% !important;" src="https://oscimg.oschina.net/oscnet/ce68f4d9-a02c-41e1-a90d-9789dedfa8e7.svg" data-type="svg+xml" data-imgfileid="100006734"></section><ul data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     以 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">LLaMA2</code>或 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mistral-7B</code>来说其 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MLP</code>都是 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">SwiGLU</code>形式 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     在 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mixtral-8x7B</code>中 
    <em style="outline: 0px;color: black;">每层</em>的 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Decoder</code>层的 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MLP</code>都以 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>来替换掉 
   </section></li></ul><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006731" data-ratio="0.5712962962962963" src="https://oscimg.oschina.net/oscnet/81836df0-5cfd-463c-94c9-b71cbdff3faa.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.979px !important;" referrerpolicy="no-referrer"></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">Transformers Mixtral-of-Expert</p><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">代码实现:</p><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">在<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Huggingface</code>的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Transformers</code>框架中,&nbsp;<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mixtral</code>主要有两部分组成</p><ul data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MixtralDecoderLayer</code></section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MixtralSparseMoeBlock</code>：替换掉原有的 MLP 层 
   </section></li></ul><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;">MixtralForCausalLM(<br style="outline: 0px;">  (model): MixtralModel(<br style="outline: 0px;">    (embed_tokens): Embedding(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">32000</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>)<br style="outline: 0px;">    (layers): ModuleList(<br style="outline: 0px;">      (<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>): MixtralDecoderLayer(<br style="outline: 0px;">        (self_attn): MixtralAttention(<br style="outline: 0px;">          (q_proj): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">          (k_proj): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">          (v_proj): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">          (o_proj): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">          (rotary_emb): MixtralRotaryEmbedding()<br style="outline: 0px;">        )<br style="outline: 0px;">        (block_sparse_moe): MixtralSparseMoeBlock(<br style="outline: 0px;">          (gate): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">          (experts): ModuleList(<br style="outline: 0px;">            (<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span><span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-7</span>): <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span> x MixtralBLockSparseTop2MLP(<br style="outline: 0px;">              (w1): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">256</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">              (w2): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">256</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">              (w3): Linear(in_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>, out_features=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">256</span>, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">              (act_fn): SiLU()<br style="outline: 0px;">            )<br style="outline: 0px;">          )<br style="outline: 0px;">        )<br style="outline: 0px;">        (input_layernorm): MixtralRMSNorm()<br style="outline: 0px;">        (post_attention_layernorm): MixtralRMSNorm()<br style="outline: 0px;">      )<br style="outline: 0px;">    )<br style="outline: 0px;">    (norm): MixtralRMSNorm()<br style="outline: 0px;">  )<br style="outline: 0px;"></code></pre><span id="OSC_h2_5"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.2 SMoE 层实现</h2><span id="OSC_h3_6"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 20px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.2.1 单个 Expert 实现</h3><section data-tool="mdnice 编辑器" data-website="https://www.mdnice.com" style="margin-bottom: 0px;padding-right: 10px;padding-left: 10px;outline: 0px;letter-spacing: 0px;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 1.6;word-break: break-word;"><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 637px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">import</span> torch<br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">from</span> torch <span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">import</span> nn<br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">from</span> transformers <span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">import</span> MixtralConfig<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">class</span><span style="outline: 0px;color: rgb(230, 192, 123);line-height: 26px;">MixtralBLockSparseTop2MLP</span><span style="outline: 0px;line-height: 26px;">(nn.Module)</span>:</span><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">def</span><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">__init__</span><span style="outline: 0px;line-height: 26px;">(self, config: MixtralConfig)</span>:</span><br style="outline: 0px;">        super().__init__()<br style="outline: 0px;">        self.ffn_dim = config.intermediate_size<br style="outline: 0px;">        self.hidden_dim = config.hidden_size<br style="outline: 0px;"><br style="outline: 0px;">        self.w1 = nn.Linear(self.hidden_dim, self.ffn_dim, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">        self.w2 = nn.Linear(self.ffn_dim, self.hidden_dim, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;">        self.w3 = nn.Linear(self.hidden_dim, self.ffn_dim, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;"><br style="outline: 0px;">        self.act_fn = nn.SiLU()<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># Forward 是 SwiGLU</span><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">def</span><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">forward</span><span style="outline: 0px;line-height: 26px;">(self, hidden_states)</span>:</span><br style="outline: 0px;">        y = self.act_fn(self.w1(hidden_states)) * self.w3(hidden_states)<br style="outline: 0px;">        y = self.w2(y)<br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">return</span> y<br style="outline: 0px;"><br style="outline: 0px;">x = torch.randn(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">64</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>)<br style="outline: 0px;">expert = MixtralBLockSparseTop2MLP(config)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'单个专家为原 LLaMA 的 MLP 层'</span>)<br style="outline: 0px;">print(expert)<br style="outline: 0px;">g = expert(x)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'单个专家输入:'</span>, x.shape)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'单个专家输出结果：'</span>, g.shape)</code></pre></section><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">结果</p><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;">单个专家为原 LLaMA 的 MLP 层<br style="outline: 0px;">MixtralBLockSparseTop2MLP(<br style="outline: 0px;">  (w1): Linear(in_features=128, out_features=256, bias=False)<br style="outline: 0px;">  (w2): Linear(in_features=256, out_features=128, bias=False)<br style="outline: 0px;">  (w3): Linear(in_features=128, out_features=256, bias=False)<br style="outline: 0px;">  (act_fn): SiLU()<br style="outline: 0px;">)<br style="outline: 0px;">单个专家输入:<br style="outline: 0px;">torch.Size([1, 64, 128])<br style="outline: 0px;">单个专家输出结果：<br style="outline: 0px;">torch.Size([1, 64, 128])<br style="outline: 0px;"></code></pre><span id="OSC_h3_7"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 20px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.2.2&nbsp;混合 Expert 实现</h3><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">class</span><span style="outline: 0px;color: rgb(230, 192, 123);line-height: 26px;">MixtralSparseMoeBlock</span><span style="outline: 0px;line-height: 26px;">(nn.Module)</span>:</span><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">def</span><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">__init__</span><span style="outline: 0px;line-height: 26px;">(self, config)</span>:</span><br style="outline: 0px;">        super().__init__()<br style="outline: 0px;">        self.hidden_dim = config.hidden_size<br style="outline: 0px;">        self.ffn_dim = config.intermediate_size<br style="outline: 0px;">        self.num_experts = config.num_local_experts<br style="outline: 0px;">        self.top_k = config.num_experts_per_tok<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># gating</span><br style="outline: 0px;">        self.gate = nn.Linear(self.hidden_dim, self.num_experts, bias=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">False</span>)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 多个 SwiGLU MLP 层组成混合专家</span><br style="outline: 0px;">        self.experts = nn.ModuleList([MixtralBLockSparseTop2MLP(config) \<br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">for</span> _ <span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">in</span> range(self.num_experts)])<br style="outline: 0px;"><br style="outline: 0px;">x = torch.randn(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">64</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>)<br style="outline: 0px;">experts = MixtralSparseMoeBlock(config)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'多个专家混合专家'</span>)<br style="outline: 0px;">print(experts)<br style="outline: 0px;"></code></pre><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">在以上我们实现了模型的关键结构， 但是这里的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Forward</code>并没有实现</p><span id="OSC_h2_8"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.3 SMoE 计算流程</h2><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006740" data-ratio="0.8083333333333333" src="https://oscimg.oschina.net/oscnet/c0a489e5-d07a-48a6-86d2-943afad9c5df.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.99px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h3_9"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 20px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.3.1 Gating 流程</h3><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">以下表示为多个<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token</code>的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">gating</code>计算流程</p><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 阶段一</span><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 计算稀疏 gating 值</span><br style="outline: 0px;">tokens = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">6</span><br style="outline: 0px;">x = torch.randn(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>, tokens, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span>) <span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 6 个 token</span><br style="outline: 0px;">hidden_states = x<br style="outline: 0px;">batch_size, sequence_length, hidden_dim = hidden_states.shape<br style="outline: 0px;">hidden_states = hidden_states.view(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>, hidden_dim)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 每层都会产生 router_logits, 将用于最后作 load balance loss</span><br style="outline: 0px;">router_logits = experts.gate(hidden_states)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'experts.gate output router logits : \n <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{router_logits}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 计算 TopK 的，专家 logits 和 Top2 专家的位置</span><br style="outline: 0px;">routing_weights = F.softmax(router_logits, dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>, dtype=torch.float)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'softmax weight  : \n <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{routing_weights}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;">routing_weights, selected_experts = torch.topk(routing_weights, \<br style="outline: 0px;">                                               experts.top_k, dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'expert select : \n <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{selected_experts}</span>'</span>)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'topk : \n <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{routing_weights}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;">routing_weights /= routing_weights.sum(dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>, keepdim=<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">True</span>)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'topk 归一化 : \n <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{routing_weights}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;">routing_weights = routing_weights.to(hidden_states.dtype)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;">## One Hot 编码</span><br style="outline: 0px;">expert_mask = torch.nn.functional.one_hot(selected_experts, \<br style="outline: 0px;">                                          num_classes=experts.num_experts).permute(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>)<br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">for</span> i <span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">in</span> range(tokens):<br style="outline: 0px;">    print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'【token_<span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{i}</span>】\n'</span>, expert_mask[:,:,i])<br style="outline: 0px;"></code></pre><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006744" data-ratio="0.8296296296296296" src="https://oscimg.oschina.net/oscnet/1c6f9548-60de-41a6-891f-8cc9b3014138.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.99px !important;" referrerpolicy="no-referrer"></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">追踪<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">x3</code>的结果</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006742" data-ratio="0.2518518518518518" data-type="png" data-w="1080" src="https://oscimg.oschina.net/oscnet/1b246c20-c0e4-464e-a0cb-5b43546dc042.png" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.958px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_10"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.3.2 Expert 流程</h2><section role="presentation" data-formula="y = \sum ^{n-1}_{i=0}\text{Softmax}(\text{Top2}(x\cdot W_g))_i \cdot \text{SwiGLU}_i(x)
" data-formula-type="block-equation" data-tool="mdnice 编辑器" style="margin-bottom: 0px;outline: 0px;letter-spacing: normal;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;text-align: center;overflow: auto;"><embed style="vertical-align: -2.819ex;width: 44.983ex;height: auto;max-width: 300% !important;" src="https://oscimg.oschina.net/oscnet/ce68f4d9-a02c-41e1-a90d-9789dedfa8e7.svg" data-type="svg+xml" data-imgfileid="100006732"></section><ul data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>中是基于专家来选择 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token</code>来计算的 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token</code>先序：左图为 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token3</code>选择 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert 2</code>,&nbsp; 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert 3</code>号来计算 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>结果 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert</code>先序：右图为依次计算 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert2</code>和 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert3</code>才得出 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token3</code>&nbsp;的 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>结果 
   </section></li></ul><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006743" data-ratio="0.6342592592592593" src="https://oscimg.oschina.net/oscnet/fca3697d-85f8-4851-8bde-773a42c43cca.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 657px !important;" referrerpolicy="no-referrer"></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">代码实现结果为：</p><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;">## 最终结果</span><br style="outline: 0px;">final_hidden_states = torch.zeros(<br style="outline: 0px;">    (batch_size * sequence_length, hidden_dim), \<br style="outline: 0px;">        dtype=hidden_states.dtype, device=hidden_states.device<br style="outline: 0px;">)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'final moe result shape for each token: <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{final_hidden_states.shape}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 每个专家收集需要计算 token</span><br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">for</span> expert_idx <span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">in</span> range(experts.num_experts):<br style="outline: 0px;"><br style="outline: 0px;">    print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'--------expert <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{expert_idx}</span> ---------'</span>)<br style="outline: 0px;"><br style="outline: 0px;">    expert_layer = experts.experts[expert_idx]<br style="outline: 0px;">    print(expert_mask[expert_idx])<br style="outline: 0px;">    idx, top_x = torch.where(expert_mask[expert_idx])<br style="outline: 0px;">    print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'专家 <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{expert_idx}</span> 计算的样本编号:'</span>,top_x.tolist()) <span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># select x_idx for expert top1</span><br style="outline: 0px;">    print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'专家 <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{expert_idx}</span> top1:0, top2:1 '</span>,idx.tolist()) <span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 0 is top1 ,1 is top2</span><br style="outline: 0px;">    print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'有 <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{len(top_x)}</span> / <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{x.shape[<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>]}</span> token 选到专家 <span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{expert_idx}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;">    top_x_list = top_x.tolist()<br style="outline: 0px;">    idx_list = idx.tolist()<br style="outline: 0px;"><br style="outline: 0px;">    current_state = hidden_states[<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">None</span>, top_x_list].reshape(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>, hidden_dim)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># expert_0(x) * routing_weights</span><br style="outline: 0px;">    current_hidden_states = expert_layer(current_state)  \<br style="outline: 0px;">                            * routing_weights[top_x_list, idx_list, <span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">None</span>]<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># 将计算的单个专家结果填入到结果表里</span><br style="outline: 0px;">    final_hidden_states.index_add_(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>, top_x, current_hidden_states.to(hidden_states.dtype))<br style="outline: 0px;"><br style="outline: 0px;">    print(current_state.shape) <br style="outline: 0px;">    print(routing_weights[top_x_list, idx_list, <span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">None</span>].shape)<br style="outline: 0px;">    print(current_hidden_states.shape)<br style="outline: 0px;">    print(final_hidden_states.shape)<br style="outline: 0px;"></code></pre><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">输出结果为:</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006745" data-ratio="0.8870370370370371" src="https://oscimg.oschina.net/oscnet/4dbff434-6e52-42ad-9e57-99a809a779e2.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.99px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_11"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.4 Router Load Balence 计算</h2><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">路由负载均衡的实现来自<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Switch Transformers</code></p><blockquote data-tool="mdnice 编辑器" style="margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;outline: 0px;border-left-color: rgba(0, 0, 0, 0.4);color: rgb(106, 115, 125);font-size: 0.9em;letter-spacing: normal;text-align: left;text-wrap: wrap;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;border-top: none;border-right: none;border-bottom: none;overflow: auto;background: rgba(0, 0, 0, 0.05);"><p style="padding-top: 8px;padding-bottom: 8px;outline: 0px;font-size: 16px;color: black;line-height: 26px;">Computes auxiliary load balancing loss as in Switch Transformer - implemented in Pytorch. See Switch Transformer for more details. This function implements the loss function presented in equations (4) - (6) of the paper. It aims at penalizing cases where the routing between experts is too unbalanced.</p></blockquote><span id="OSC_h3_12"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 20px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.4.1 Switch Transformers Load Balance Loss</h3><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">该算法为<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>简化版<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">load balance&nbsp;</code>, 去除了原版&nbsp;balance loss&nbsp;<span style="outline: 0px;">估计</span></p><section data-tool="mdnice 编辑器" data-website="https://www.mdnice.com" style="margin-bottom: 0px;padding-right: 10px;padding-left: 10px;outline: 0px;letter-spacing: 0px;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 1.6;word-break: break-word;"><section role="presentation" data-formula="loss = \alpha\cdot N\cdot \sum ^N_{i=1}f_i\cdot P_i
" data-formula-type="block-equation" data-tool="mdnice 编辑器" style="outline: 0px;text-align: center;overflow: auto;"><svg
                xmlns="http://www.w3.org/2000/svg" role="img" focusable="false" viewBox="0 -1733 10080.5 2978.9" aria-hidden="true" style="-webkit-overflow-scrolling: touch;vertical-align: -2.819ex;width: 22.806ex;height: 6.74ex;max-width: 300% !important;"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="6C" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(298, 0)"><path data-c="6F" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(783, 0)"><path data-c="73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(1252, 0)"><path data-c="73" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mo" transform="translate(1998.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3054.6, 0)"><path data-c="3B1" d="M34 156Q34 270 120 356T309 442Q379 442 421 402T478 304Q484 275 485 237V208Q534 282 560 374Q564 388 566 390T582 393Q603 393 603 385Q603 376 594 346T558 261T497 161L486 147L487 123Q489 67 495 47T514 26Q528 28 540 37T557 60Q559 67 562 68T577 70Q597 70 597 62Q597 56 591 43Q579 19 556 5T512 -10H505Q438 -10 414 62L411 69L400 61Q390 53 370 41T325 18T267 -2T203 -11Q124 -11 79 39T34 156ZM208 26Q257 26 306 47T379 90L403 112Q401 255 396 290Q382 405 304 405Q235 405 183 332Q156 292 139 224T121 120Q121 71 146 49T208 26Z"></path></g><g data-mml-node="mo" transform="translate(3916.8, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(4417, 0)"><path data-c="4E" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(5527.2, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="munderover" transform="translate(6027.4, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(148.2, -1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mi" transform="translate(408, 1150) scale(0.707)"><path data-c="4E" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g></g><g data-mml-node="msub" transform="translate(7638.1, 0)"><g data-mml-node="mi"><path data-c="66" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mi" transform="translate(490, -150) scale(0.707)"><path data-c="69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(8644.3, 0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="msub" transform="translate(9144.5, 0)"><g data-mml-node="mi"><path data-c="50" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(642, -150) scale(0.707)"><path data-c="69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g></g></g></svg></section><section role="presentation" data-formula="f_i = \frac{1}{T}\sum_{x\in\mathcal{B}}\mathbb{1}\{\text{argmax }p(x)=i\}
" data-formula-type="block-equation" data-tool="mdnice 编辑器" style="outline: 0px;text-align: center;overflow: auto;"><embed style="vertical-align: -2.814ex;width: 30.879ex;height: auto;max-width: 300% !important;" src="https://oscimg.oschina.net/oscnet/a44025fc-3ccf-4c1b-9d1d-5b6c059ec916.svg" data-type="svg+xml" data-imgfileid="100006733"></section><p data-tool="mdnice 编辑器" style="padding-top: 8px;padding-bottom: 8px;outline: 0px;line-height: 26px;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">fi</code>:在一个<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">batch</code>中第<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">i</code>专家分配到<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token</code>的数量概率</p><section role="presentation" data-formula="P_i=\frac{1}{T}\sum_{x\in \mathcal{B}}p_i(x)
" data-formula-type="block-equation" data-tool="mdnice 编辑器" style="outline: 0px;text-align: center;overflow: auto;"><svg
                xmlns="http://www.w3.org/2000/svg" role="img" focusable="false" viewBox="0 -1342 7337.8 2585.8" aria-hidden="true" style="-webkit-overflow-scrolling: touch;vertical-align: -2.814ex;width: 16.601ex;height: 5.85ex;max-width: 300% !important;"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="50" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(642, -150) scale(0.707)"><path data-c="69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1213.7, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(2269.5, 0)"><g data-mml-node="mn" transform="translate(322, 676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mi" transform="translate(220, -686)"><path data-c="54" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><rect width="904" height="60" x="120" y="220"></rect></g><g data-mml-node="munder" transform="translate(3580.2, 0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(51.7, -1115.5) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="78" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(572, 0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1239, 0)"><g data-mml-node="mi"><path data-c="42" d="M304 342Q292 342 292 353Q292 372 323 391Q331 396 417 428T533 487Q563 512 563 555V562Q563 575 557 589T530 618T475 636Q429 636 396 613T330 539Q263 446 210 238Q196 183 173 120Q135 31 121 16Q108 1 85 -10T47 -22T32 -10Q32 -5 44 18T77 93T112 206Q135 296 154 395T182 550T191 615Q191 616 190 616Q188 616 179 611T157 601T131 594Q113 594 113 605Q113 623 144 644Q154 650 205 676T267 703Q277 705 279 705Q295 705 295 693Q295 686 288 635T278 575Q278 572 287 582Q336 635 402 669T540 704Q603 704 633 673T664 599Q664 559 638 523T580 462Q553 440 504 413L491 407L504 402Q566 381 596 338T627 244Q627 172 575 110T444 13T284 -22Q208 -22 158 28Q144 42 146 50Q150 67 178 85T230 103Q236 103 246 95T267 75T302 56T357 47Q436 47 486 93Q526 136 526 198V210Q526 228 518 249T491 292T436 330T350 345Q335 345 321 344T304 342Z"></path></g></g></g></g><g data-mml-node="msub" transform="translate(5190.8, 0)"><g data-mml-node="mi"><path data-c="70" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mi" transform="translate(503, -150) scale(0.707)"><path data-c="69" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(5987.8, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(6376.8, 0)"><path data-c="78" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(6948.8, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></section><p data-tool="mdnice 编辑器" style="padding-top: 8px;padding-bottom: 8px;outline: 0px;line-height: 26px;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Pi</code>:在一个<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">batch</code>中<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">T</code>个<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">tokens</code>，各个专家选到<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">tokens</code>的概率和</p></section><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;"><img class="rich_pages wxw-img" data-imgfileid="100006748" data-ratio="0.8111111111111111" src="https://oscimg.oschina.net/oscnet/cb976fdf-8c5e-4d05-bc80-1dbabb5f288c.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 657px !important;" referrerpolicy="no-referrer"><span style="outline: 0px;font-size: 20px;font-weight: bold;">2.4.2&nbsp;手撕 Mixtral Load Balance Loss 计算流程</span></p><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">可以想象下<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">layer norm</code>只是在<strong style="outline: 0px;">当前层</strong>里对所有<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">tokens</code>&nbsp;做，而负载均衡处理范围更广，对<strong style="outline: 0px;">所有层</strong>的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">tokens</code>&nbsp;，在每个<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert</code>的纵向计算出单专家负载值，求和便得到整个网络的负载均衡 loss</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006749" data-ratio="1.038888888888889" src="https://oscimg.oschina.net/oscnet/50a571f0-7da0-4439-8d14-de0abd1849fc.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.99px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h3_13"></span><h3 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 20px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">2.4.3 手撕 Mixtral Load Balance</h3><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">import</span> torch<br style="outline: 0px;"><br style="outline: 0px;">num_experts = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span><br style="outline: 0px;">batch = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">10</span><br style="outline: 0px;">seq_length = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">6</span><br style="outline: 0px;">top_k = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span><br style="outline: 0px;"><br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'sMoE num_experts:<span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{num_experts}</span> top_k:<span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{top_k}</span> batch:<span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{batch}</span> seq_length:<span style="outline: 0px;color: rgb(224, 108, 117);line-height: 26px;">{seq_length}</span>'</span>)<br style="outline: 0px;"><br style="outline: 0px;">router_logits_1 = torch.randn(batch, seq_length, num_experts).view(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>,num_experts) <span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># layer 1</span><br style="outline: 0px;">router_logits_2 = torch.randn(batch, seq_length, num_experts).view(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>,num_experts) <span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># layer 2</span><br style="outline: 0px;">router_logits = [router_logits_1, router_logits_2] <br style="outline: 0px;"><br style="outline: 0px;">concatenated_gate_logits = torch.cat(router_logits, dim = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'单层 gating 的路由 logits:'</span>, router_logits_1.shape) <br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'两层 gating 的路由 logits:'</span>, concatenated_gate_logits.shape)<br style="outline: 0px;"><br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'根据 logits top-k 计算热独编码'</span>)<br style="outline: 0px;">routing_weights = torch.nn.functional.softmax(concatenated_gate_logits, dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>)<br style="outline: 0px;">_, selected_experts = torch.topk(routing_weights, top_k, dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>)<br style="outline: 0px;">expert_mask = torch.nn.functional.one_hot(selected_experts, num_experts)<br style="outline: 0px;">print(expert_mask.shape)<br style="outline: 0px;"><br style="outline: 0px;">tokens_sum_expert = torch.sum(expert_mask.float(), dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>)<br style="outline: 0px;">tokens_per_expert = torch.mean(expert_mask.float(), dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'top1 每个专家平均处理的 token   :'</span>, tokens_sum_expert[<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>])<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'top2 每个专家平均处理的 token fi:'</span>, tokens_per_expert[<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>])<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">f'top1 与 top2 水平合计'</span>, tokens_per_expert.sum(dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1</span>))<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># Compute the average probability of routing to these experts</span><br style="outline: 0px;">router_prob_per_expert = torch.mean(routing_weights, dim=<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>)<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'router_prob_per_expert Pi: '</span> , router_prob_per_expert)<br style="outline: 0px;"><br style="outline: 0px;">print( <span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'每个专家的负载：'</span>,  tokens_per_expert * router_prob_per_expert.unsqueeze(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>))<br style="outline: 0px;">overall_loss = torch.sum(tokens_per_expert * router_prob_per_expert.unsqueeze(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0</span>))<br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'final loss:'</span>, overall_loss)<br style="outline: 0px;"><br style="outline: 0px;"></code></pre><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">计算结果</p><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;">sMoE num_experts:<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span> top_k:<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> batch:<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">10</span> seq_length:<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">6</span><br style="outline: 0px;">单层 gating 的路由 logits:<br style="outline: 0px;">torch.Size([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">60</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span>])<br style="outline: 0px;">两层 gating 的路由 logits:<br style="outline: 0px;">torch.Size([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">120</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span>])<br style="outline: 0px;">根据 logits top-k 计算热独编码<br style="outline: 0px;">torch.Size([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">120</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span>])<br style="outline: 0px;">top1 每个专家平均处理的 token   : tensor([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">10.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">14.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">19.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">17.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">14.</span>,  <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">9.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">17.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">20.</span>])<br style="outline: 0px;">top2 每个专家平均处理的 token fi: tensor([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1667</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1333</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1833</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0833</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1167</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1500</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0667</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1000</span>])<br style="outline: 0px;">top1 与 top2 水平合计 tensor([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1.</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">1.</span>])<br style="outline: 0px;">router_prob_per_expert Pi:  tensor([<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1236</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1184</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1351</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1168</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1311</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1147</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1156</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.1447</span>])<br style="outline: 0px;">每个专家的负载：tensor([[<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0103</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0138</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0214</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0165</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0153</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0086</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0164</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0241</span>],<br style="outline: 0px;">        [<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0206</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0158</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0248</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0097</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0153</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0172</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0077</span>, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.0145</span>]])<br style="outline: 0px;">final loss: tensor(<span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">0.2520</span>)<br style="outline: 0px;"></code></pre><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">这里的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">gating logits</code>&nbsp;是跨<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">batch</code>跨层的，作用在每个<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token</code>上</p><span id="OSC_h1_14"></span><h1 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 24px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">3. Mixtral 8x7B 参数量计算</h1><span id="OSC_h2_15"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">3.1 原论文描述</h2><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">这里的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">13B</code>&nbsp;是指单个<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">&nbsp;token</code>涉及的模型参数量，实际推理时每个<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">token</code>都有不同的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert</code>&nbsp;，那么实际运行还是跑<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">47B&nbsp;</code>参数的, 使用了 sMoE 并不会减少显存占用。</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006750" data-ratio="0.362962962962963" src="https://oscimg.oschina.net/oscnet/9dedd8c0-fbbd-4ab8-ab42-dd864369be7d.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.969px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_16"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">3.2 模型参数量计算</h2><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">忽略<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">GQA</code>计算</p><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;">dim = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">4096</span><br style="outline: 0px;">n_layers = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">32</span><br style="outline: 0px;">head_dim = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">128</span><br style="outline: 0px;">hidden_dim = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">14336</span><br style="outline: 0px;">n_heads = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">32</span><br style="outline: 0px;">n_kv_heads = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># ignore GQA</span><br style="outline: 0px;">vocab_size = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">32000</span><br style="outline: 0px;">num_experts = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span><br style="outline: 0px;">top_k_experts = <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span><br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># attention mlp layernorm</span><br style="outline: 0px;">llama_num = n_layers * (dim * dim * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">4</span> + hidden_dim * dim * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">3</span> + <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> * dim ) \<br style="outline: 0px;">        + <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> * vocab_size * dim <br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'llama:'</span>, llama_num)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># attention 【mlp*8】 layernorm</span><br style="outline: 0px;">moe_num = n_layers * (dim * dim * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">4</span> + hidden_dim * dim * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">3</span> * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">8</span> + <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> * dim ) \<br style="outline: 0px;">        + <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> * vocab_size * dim <br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'moe:'</span>, moe_num)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># attention 【mlp*2】 layernorm</span><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># ToP2-inference</span><br style="outline: 0px;">moe_num = n_layers * (dim * dim * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">4</span> + hidden_dim * dim * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">3</span> * <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> + <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> * dim ) \<br style="outline: 0px;">        + <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">2</span> * vocab_size * dim <br style="outline: 0px;">print(<span style="outline: 0px;color: rgb(152, 195, 121);line-height: 26px;">'moe top-2:'</span>, moe_num)<br style="outline: 0px;"></code></pre><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">结果</p><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;">llama: 8047034368<br style="outline: 0px;">moe: 47507046400<br style="outline: 0px;">moe top-2: 13684178944<br style="outline: 0px;"></code></pre><span id="OSC_h1_17"></span><h1 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 24px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">4. MoE 扩展</h1><span id="OSC_h2_18"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">4.1 MegaBlocks</h2><blockquote data-tool="mdnice 编辑器" style="margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;outline: 0px;border-left-color: rgba(0, 0, 0, 0.4);color: rgb(106, 115, 125);font-size: 0.9em;letter-spacing: normal;text-align: left;text-wrap: wrap;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;border-top: none;border-right: none;border-bottom: none;overflow: auto;background: rgba(0, 0, 0, 0.05);"><p style="padding-top: 8px;padding-bottom: 8px;outline: 0px;font-size: 16px;color: black;line-height: 26px;">MoE layers can be run efficiently on single GPUs with high performance specialized kernels. For example,&nbsp;<strong style="outline: 0px;">Megablocks</strong></p></blockquote><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MegaBlocks</code>实现稀疏的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MoE</code>计算</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006753" data-ratio="0.26481481481481484" src="https://oscimg.oschina.net/oscnet/e1bfdd99-c538-4ff0-abdc-f9abb0d217f0.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.979px !important;" referrerpolicy="no-referrer"></figure><section data-tool="mdnice 编辑器" data-website="https://www.mdnice.com" style="margin-bottom: 0px;padding-right: 10px;padding-left: 10px;outline: 0px;letter-spacing: 0px;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);font-size: 16px;color: black;line-height: 1.6;word-break: break-word;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;"><p data-tool="mdnice 编辑器" style="padding-top: 8px;padding-bottom: 8px;outline: 0px;line-height: 26px;">题外话：<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">XFormers</code>也实现了类似思想的算子，<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">batch</code>里的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">attention</code>通过<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mask</code>实现多序列稀疏计算。</p></section><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006755" data-ratio="0.2351851851851852" data-type="png" data-w="1080" src="https://oscimg.oschina.net/oscnet/78f9ff04-18ec-4713-8eab-f99b63be1268.png" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.969px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_19"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">4.2 GShard</h2><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mixtral</code>论文里在<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">load balance</code>里提了一下<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">GShard</code>, 是首篇将<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MoE</code>引入到<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Transformers</code>的工作</p><blockquote data-tool="mdnice 编辑器" style="margin-top: 20px;margin-bottom: 20px;padding: 10px 10px 10px 20px;outline: 0px;border-left-color: rgba(0, 0, 0, 0.4);color: rgb(106, 115, 125);font-size: 0.9em;letter-spacing: normal;text-align: left;text-wrap: wrap;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;border-top: none;border-right: none;border-bottom: none;overflow: auto;background: rgba(0, 0, 0, 0.05);"><p style="padding-top: 8px;padding-bottom: 8px;outline: 0px;font-size: 16px;color: black;line-height: 26px;">This formulation is similar to the GShard architecture [21], with the exceptions that we replace all FFN sub-blocks by MoE layers while GShard replaces every other block, and that GShard uses a more elaborate gating strategy for the second expert assigned to each token.</p></blockquote><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">GShard</code>在不同<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">GPU</code>上分配不同的专家，其他参数都共享，数据派发到专家，专家结果汇总都由<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">All-to-All</code>算子实现</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006754" data-ratio="0.6712962962962963" src="https://oscimg.oschina.net/oscnet/d8a02488-b56d-432d-859d-96169d2a7fa3.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 657px !important;" referrerpolicy="no-referrer"></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">DeepSpeed-MoE 源码对<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">All-to-All</code>的实现如下</p><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">class</span><span style="outline: 0px;color: rgb(230, 192, 123);line-height: 26px;">_AllToAll</span><span style="outline: 0px;line-height: 26px;">(torch.autograd.Function)</span>:</span><br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">    @staticmethod</span><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">def</span><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">forward</span><span style="outline: 0px;line-height: 26px;">(<br style="outline: 0px;">            ctx: Any,<br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># <span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">TODO:</span> replace with DS process group</span><br style="outline: 0px;">            group: torch.distributed.ProcessGroup,<br style="outline: 0px;">            input: Tensor)</span> -&gt; Tensor:</span><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># type: ignore</span><br style="outline: 0px;">        ctx.group = group<br style="outline: 0px;">        input = input.contiguous()<br style="outline: 0px;">        output = torch.empty_like(input)<br style="outline: 0px;">        dist.all_to_all_single(output, input, group=group)<br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">return</span> output<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">    @staticmethod</span><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">def</span><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">backward</span><span style="outline: 0px;line-height: 26px;">(ctx: Any, *grad_output: Tensor)</span> -&gt; Tuple[<span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">None</span>, Tensor]:</span><br style="outline: 0px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">return</span> (<span style="outline: 0px;color: rgb(86, 182, 194);line-height: 26px;">None</span>, _AllToAll.apply(ctx.group, *grad_output))<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">class</span><span style="outline: 0px;color: rgb(230, 192, 123);line-height: 26px;">MOELayer</span><span style="outline: 0px;line-height: 26px;">(Base)</span>:</span><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># ...</span><br style="outline: 0px;"><span style="outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(198, 120, 221);line-height: 26px;">def</span><span style="outline: 0px;color: rgb(97, 174, 238);line-height: 26px;">forward</span><span style="outline: 0px;line-height: 26px;">(self, *input: Tensor, **kwargs: Any)</span> -&gt; Tensor:</span><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># ...</span><br style="outline: 0px;">        dispatched_input = _AllToAll.apply(self.ep_group, dispatched_input)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;"># Re-shape after all-to-all: ecm -&gt; gecm</span><br style="outline: 0px;">        dispatched_input = dispatched_input.reshape(self.ep_size, self.num_local_experts, <span style="outline: 0px;color: rgb(209, 154, 102);line-height: 26px;">-1</span>, d_model)<br style="outline: 0px;"><br style="outline: 0px;">        expert_output = self.experts(dispatched_input)<br style="outline: 0px;"><br style="outline: 0px;"><br style="outline: 0px;">        expert_output = _AllToAll.apply(self.ep_group, expert_output)<br style="outline: 0px;"><br style="outline: 0px;"><span style="outline: 0px;color: rgb(92, 99, 112);font-style: italic;line-height: 26px;">#...</span><br style="outline: 0px;"></code></pre><span id="OSC_h2_20"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">4.3 DeepSpeed-MoE</h2><ul data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     更加工程化的实现可以看 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">DeepSpeed-MoE</code>的开源方案 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MoE</code>层使用 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Expert-Paralallelism</code>做并行&nbsp; 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">AlltoAll</code>实现如上 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     非 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MoE</code>层使用 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">TP+DP</code></section></li></ul><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006758" data-ratio="0.5425925925925926" src="https://oscimg.oschina.net/oscnet/fbcafecf-4739-44ac-94c8-e4c601d87f5f.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.99px !important;" referrerpolicy="no-referrer"></figure><span id="OSC_h2_21"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">4.4 LLaMA-MoE</h2><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mixtral 8x7B</code>训不动？试试将<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">LLaMA</code>原<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">MLP</code>改造成<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">LLaMA-MoE</code></p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-imgfileid="100006757" data-ratio="0.5592592592592592" src="https://oscimg.oschina.net/oscnet/39e6e216-e428-4182-b4aa-20a0b6bb3650.png" data-type="png" data-w="1080" style="margin-right: auto;margin-left: auto;outline: 0px;display: block;visibility: visible !important;width: 656.979px !important;" referrerpolicy="no-referrer"></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 0px;padding-top: 8px;padding-bottom: 8px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;line-height: 26px;">LLaMA-MoE 上关键代码是用<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">LinearGLUExperts</code>代替原本<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">LLaMA</code>里的<code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">SwiGLU</code>层</p><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;outline: 0px;letter-spacing: normal;text-align: left;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;border-radius: 5px;box-shadow: rgba(0, 0, 0, 0.55) 0px 2px 10px;"><span style="margin-bottom: -7px;outline: 0px;display: block;background: url(&quot;https://oscimg.oschina.net/oscnet/97137f2e-9f16-422b-aac0-3a34b7643e27.svg&quot;) 10px 10px / 40px no-repeat rgb(40, 44, 52);height: 30px;width: 657px;border-radius: 5px;"></span><code style="padding: 15px 16px 16px;outline: 0px;overflow-x: auto;color: rgb(171, 178, 191);display: -webkit-box;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 12px;background: rgb(40, 44, 52);border-radius: 5px;"> class LinearGLUExperts(nn.Module):<br style="outline: 0px;">    # ...<br style="outline: 0px;">    def __init__(...):<br style="outline: 0px;">        # ... <br style="outline: 0px;">        # 每个专家都创建 SwiGLU MLP 层<br style="outline: 0px;">        for i in range(num_experts):<br style="outline: 0px;">            # this matrix will be transposed when performing linear forwarding<br style="outline: 0px;">            this_expert_weight_gate = nn.Parameter(<br style="outline: 0px;">                torch.empty((size_experts[i], in_features), **factory_kwargs)<br style="outline: 0px;">            )<br style="outline: 0px;">            # this matrix will be transposed when performing linear forwarding<br style="outline: 0px;">            this_expert_weight_up = nn.Parameter(<br style="outline: 0px;">                torch.empty((size_experts[i], in_features), **factory_kwargs)<br style="outline: 0px;">            )<br style="outline: 0px;">            # this matrix will be transposed when performing linear forwarding<br style="outline: 0px;">            this_expert_weight_down = nn.Parameter(<br style="outline: 0px;">                torch.empty((out_features, size_experts[i]), **factory_kwargs)<br style="outline: 0px;">            )<br style="outline: 0px;">            self.weight_gate.append(this_expert_weight_gate)<br style="outline: 0px;">            self.weight_up.append(this_expert_weight_up)<br style="outline: 0px;">            self.weight_down.append(this_expert_weight_down)<br style="outline: 0px;">        # ...<br style="outline: 0px;"></code></pre><h1 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 24px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;"></h1><span id="OSC_h1_22"></span><h1 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 24px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">5. Mixtral 8x7B 总结 &amp; 进一步阅读</h1><ul data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);"><li style="outline: 0px;color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);"><code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">Mixtral 8x7B</code>实现并不复杂，其中 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">load-balance loss</code>是 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">expert-wise</code>维度计算的 
   </section></li><li style="outline: 0px;color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     当前发布的模型还是围绕模型结构展开的， 期待 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">mistral.AI</code>上线创新的对齐方案 
   </section></li><li style="outline: 0px;color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     涉及到多机多卡的 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">sMoE</code>分布式训练非常需要工程技巧, 不同的模型架构和集群可以有多种 
    <code style="margin-right: 2px;margin-left: 2px;padding: 2px 4px;outline: 0px;font-size: 14px;border-radius: 4px;color: rgb(30, 107, 184);background-color: rgba(27, 31, 35, 0.05);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;">DP\TP\EP..</code>组合方案， 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;"><span style="outline: 0px;color: rgb(1, 1, 1);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;">在·Mixtral·中对于实验反直觉论点，专家的知识是作用在&nbsp;</span><span style="outline: 0px;color: rgb(30, 107, 184);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;"><span style="outline: 0px;font-size: 14px;background-color: rgba(27, 31, 35, 0.05);">token&nbsp;</span></span><span style="outline: 0px;color: rgb(1, 1, 1);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;"><span style="outline: 0px;font-size: 16px;">级别，而不是<span style="outline: 0px;color: rgb(30, 107, 184);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 14px;background-color: rgba(27, 31, 35, 0.05);">domain</span>级别，对&nbsp;<span style="outline: 0px;color: rgb(30, 107, 184);font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;font-size: 14px;background-color: rgba(27, 31, 35, 0.05);">MoE&nbsp;</span>感兴趣的话可以进一步开盒分析</span></span></section></li></ul><span id="OSC_h2_23"></span><h2 data-tool="mdnice 编辑器" style="margin-top: 30px;margin-bottom: 15px;outline: 0px;font-weight: bold;font-size: 22px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;">Reference</h2><ol data-tool="mdnice 编辑器" class="list-paddingleft-1" style="margin-top: 8px;margin-bottom: 8px;padding-left: 25px;outline: 0px;letter-spacing: normal;text-align: left;text-wrap: wrap;background-color: rgb(255, 255, 255);color: black;font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;font-size: 16px;"><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Mixture of Experts Explained 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     方佳瑞：MoE 训练论文解读之 Megablocks：打破动态路由限制 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     方佳瑞：MoE 训练系统之 JANUS：参数服务器助力 MoE 训练 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     方佳瑞：MoE 训练论文解读之 Tutel: 动态切换并行策略实现动态路由 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     西门宇少：对 MoE 大模型的训练和推理做分布式加速——DeepSpeed-MoE 论文速读 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     吃果冻不吐果冻皮：大模型分布式训练并行技术（八）-MOE 并行 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     孟繁续：Mixtral-8x7B 模型挖坑 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Mixtral-of-experts 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Mistral-7B 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Gshard 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Switch Transformers 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     sMoE 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Transformers-Mixtral-of-Experts 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     DeepSpeed-MoE 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     Megablocks 
   </section></li><li style="outline: 0px;"><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;line-height: 26px;color: rgb(1, 1, 1);">
     LLaMA-MoE 
   </section></li></ol><hr style="border-style: solid;border-width: 1px 0 0;border-color: rgba(0,0,0,0.1);-webkit-transform-origin: 0 0;-webkit-transform: scale(1, 0.5);transform-origin: 0 0;transform: scale(1, 0.5);"><p><span style="outline: 0px;color: rgb(62, 62, 62);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 1px;"><br>本文由 H</span><span style="outline: 0px;color: rgb(62, 62, 62);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 1px;">ugging Face 中文社区内容共建项目提供，稿件由社区成员投稿，经授权发布于 Hugging Face 公众号。文章内容不代表官方立场，文中介绍的产品和服务等均不构成投资建议。了解更多请关注公众号:</span><br></p><section class="mp_profile_iframe_wrp"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-pluginname="mpprofile" data-id="MzkzNzU4MTU5Nw==" data-headimg="http://mmbiz.qpic.cn/sz_mmbiz_png/kF2wpSFV2cicD6iaT6OicQEZPOnbLvlg4888uRNd3XqaPacRjELDf5EonkxM1eLaautlN2jDcUaClUI0siaH2QlaZA/0?wx_fmt=png" data-nickname="手撕 LLM" data-alias="xiaodonggua_AIGC" data-signature="原创课程 【手撕 LLM+RLHF】" data-from="0" data-is_biz_ban="0"></mp-common-profile></section><p style="outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);"><span style="outline: 0px;color: rgb(62, 62, 62);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 1px;">如果你有与开源 AI、</span><span style="outline: 0px;color: rgb(62, 62, 62);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 1px;">Hugging Face 相关的技术和实践分享内容，以及最新的开源 AI 项目发布，希望通过我们分享给更多 AI 从业者和开发者们，请通过下面的链接投稿与我们取得联系:</span></p><section style="margin: 8px;outline: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);letter-spacing: 0.578px;line-height: 1.75em;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, Arial, sans-serif;"><span style="outline: 0px;color: rgb(136, 136, 136);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 14px;letter-spacing: 1px;">https://hf.link/tougao</span></section><p><br></p><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - Hugging Face（gh_504339124f0f）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 03:01:22 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/HuggingFace/blog/11020073</guid>
            <link>https://my.oschina.net/HuggingFace/blog/11020073</link>
            <author>
                <![CDATA[HuggingFace]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[欧盟 AI 法案已获得成员国的一致批准]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>欧盟《人工智能法案 ( AI Act)》是一项基于风险的监管人工智能应用的计划。目前，欧盟成员国已经投票就该法律草案的最终文本达成<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsiliconangle.com%2F2024%2F02%2F02%2Feu-member-states-approve-landmark-ai-regulation%2F" target="_blank">一致</a>，后续将提交欧洲议会表决，这也是新法律正式颁布的最后一个步骤。</p><p><img height="449" src="https://oscimg.oschina.net/oscnet/up-6bf9f5a6ac55a4844b0cf834eef6c8cbfba.png" width="300" referrerpolicy="no-referrer"></p><p>欧盟行政部门欧盟委员会于 2021 年首次提出该立法。2023 年 12 月，立法者就法律应包括的内容达成了临时协议。12 月获得临时批准的版本要求禁止有害的 AI 能用例，例如工作场所和教育机构中的情绪识别。此外，该草案还包含旨在规范高风险神经网络（例如保险和银行部门使用的神经网络）使用的规则。</p><p>12 月版本的立法将对所谓的 high-impact GPAI（或通用人工智能）模型应用第二套规则。这些附加要求指定开发人员必须检查其模型是否存在「系统性风险」并缓解他们发现的任何问题。开发人员还必须执行某些其他任务，例如报告神经网络的能效。</p><p>该法案在 12 月获得临时批准后，启动了长达数周、涉及多个欧盟成员国的谈判进程。据 Politico 报道，德国和法国曾暗示，由于担心该法案对 AI 创新的影响，他们可能会反对该法案。奥地利据说也表达了类似的立场，因为官员们对该法的隐私条款有疑虑。</p><p>为了解决这些问题，欧盟委员会针对 AI 领域推出了"一揽子支持创新措施"。还成立了一个名为"Artificial Intelligence Office "的新监管机构，负责实施《人工智能法案》。</p><p>一个由欧盟成员国官员组成的专家组将就实施过程向欧盟委员会提供建议。专家组的工作重点之一将是确保《人工智能法案》与其他法规之间没有重叠。预计这项工作将特别强调欧盟现有的一些与医疗设备和机械有关的法规。</p><p>该法案将于本月晚些时候在欧洲议会的委员会投票之前进行。如果获得批准，该法案将进入全体会议投票。大多数参与《人工智能法案》制定的欧洲议会官员预计，该法将在不对当前版本做任何修改的情况下通过。</p><p>一旦获得通过，该法案将在欧盟官方公报上发布 20 天后生效。在新规则适用于范围内的应用程序和人工智能模型之前，将有一个分级实施期——在法规中规定的人工智能禁止使用清单开始适用之前有六个月的宽限期（可能在秋季左右）。</p><p>分阶段生效还允许在基础模型（又称通用人工智能）适用规则前留出一年时间--因此要等到 2025 年。其余大部分规则要到法律发布两年后才适用。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 02:55:22 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277667/eu-member-states-approve-ai-act</guid>
            <link>https://www.oschina.net/news/277667/eu-member-states-approve-ai-act</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌已从搜索结果页面删除「缓存链接」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>谷歌确认已从搜索结果页面删除「缓存链接」，并表示将在不久的将来<strong>彻底移除缓存功能</strong>。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-1db958065a51564516fd6ec5c09f9897ce5.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsearchliaison%2Fstatus%2F1753156161509916873" target="_blank">https://twitter.com/searchliaison/status/1753156161509916873</a></u></em></p></blockquote><p>目前谷歌搜索结果页面不会再出现任何缓存链接，不过仍可通过在搜索框中输入搜索运算符<code>cache:</code>来访问谷歌缓存的快照—— 会自动跳转到 "https://webcache.googleusercontent.com/search?q=cache:"，如下：</p><blockquote><p><img height="686" src="https://oscimg.oschina.net/oscnet/up-b852cd9166f6ee8b84f49fc8400ce2c03ea.png" width="1244" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-452fdcf89c884ae3bf8622fa0dc0b9ac519.png" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwebcache.googleusercontent.com%2Fsearch%3Fq%3Dcache%3Aoschina.net" target="_blank">https://webcache.googleusercontent.com/search?q=cache:oschina.net</a></p></blockquote><p>谷歌表示，缓存是为了帮助用户访问页面加载太慢的网页，现在这种情况有了很大改善，因此他们决定退役该功能。</p><p>早在 2022 年，百度搜索就下线了同样的「快照功能」，当时官方的回应是「由于网页技术的发展及代际变迁所致」。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-80d269bfd3fd8c8e81068b9fa3405297dd0.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffinance.sina.com.cn%2Ftech%2Finternet%2F2022-08-01%2Fdoc-imizmscv4375142.shtml" target="_blank">https://finance.sina.com.cn/tech/internet/2022-08-01/doc-imizmscv4375142.shtml</a></u></em></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 02:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277666</guid>
            <link>https://www.oschina.net/news/277666</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[飞致云开源社区月度动态报告（2024 年 1 月）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><span><span>自 2023 年 6 月起，中国领先的开源软件公司 FIT2CLOUD 飞致云以月度为单位发布《飞致云开源社区月度动态报告》，旨在向广大社区用户同步飞致云旗下系列开源软件的发展情况，以及当月主要的产品新版本发布、社区运营成果等相关信息。</span></span></div></div><div><div><strong><span>飞致云开源大屏（2024 年 1 月）</span></strong></div><div><img alt="" height="734" src="https://oscimg.oschina.net/oscnet/up-28bfa544042627ebd282c6fc43e3d636c52.png" width="1324" referrerpolicy="no-referrer"></div><div>
   ▲图 1 飞致云开源大屏（2024.1.31 12:00） 
 </div></div><div><div><span><span>2024 年 1 月飞致云开源软件运营数据概览（统计时间为 2024.1.1～2024.1.31）</span></span></div><div><img alt="" height="602" src="https://oscimg.oschina.net/oscnet/up-d8824acee812525358db28877275c9cf6af.png" width="1400" referrerpolicy="no-referrer"></div></div><div><div><strong><span>2024 年 1 月产品发布事件</span></strong></div></div><div><div><strong><span>■</span></strong><span><span><span>&nbsp;</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkyNTI0OTYwOQ%3D%3D%26mid%3D2247485932%26idx%3D1%26sn%3Da31d07d9ded696e6ffdc86e2bb2a8930%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span>DataEase 开源数据可视化分析工具</span></strong></a></div></div><div><div><span><span>2024 年 1 月 8 日，DataEase 开源数据可视化分析平台正式发布 v2.2.0 版本。</span></span></div></div><div><div><span><span>这一版本的功能升级包括：在「模板管理」页面中，用户可以通过模板管理的批量操作功能，对已有模板进行快速重新分类、删除等维护操作；数据大屏中，支持多个组件构成的分组中某一组件的快速重新定位；仪表板中的查询组件支持了设置查询条件为必填项。此外，DataEase 开源项目组还对其他一些常用的功能进行了功能优化和问题修复。</span></span></div></div><div><div><strong><span>■</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzIxOTU1ODQ4NQ%3D%3D%26mid%3D2247484330%26idx%3D1%26sn%3Dada95d0a0893b6400946c3ad6915df96%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span>1Panel 开源面板</span></strong></a></div></div><div><div><span><span>2024 年 1 月 15 日，现代化、开源的 Linux 服务器运维管理面板 1Panel 正式发布 v1.9.3 版本。</span></span></div></div><div><div><span><span>在这一版本中，1Panel 新增了 PostgreSQL 数据库管理功能，并且支持设置 PHP 运行环境扩展模版。此外，1Panel 开源项目组还进行了 30 多项功能更新和问题修复。1Panel 应用商店新增了 3 款应用，并且更新了 22 款应用。</span></span></div></div><div><div><strong><span>■<span>&nbsp;</span></span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4MzkwMjM5MQ%3D%3D%26mid%3D2247485612%26idx%3D1%26sn%3Dc4f3669a65417a419a80ec9e05656efc%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span>JumpServer 开源堡垒机</span></strong></a></div></div><div><div><span><span>2024 年 1 月 22 日，JumpServer 开源堡垒机正式发布 v3.10.2 LTS 版本。JumpServer 开源项目组将对 v3.10 LTS 版本提供长期的支持和维护，并定期迭代发布小版本。欢迎广大社区用户升级至 v3.10 LTS 版本，以获得更佳的使用体验。</span></span></div></div><div><div><span><span>在 v3.10.2 LTS 版本中，JumpServer 的邮件服务功能新增支持 Exchange 协议。目前 JumpServer 所支持的邮件协议包括 SMTP 协议（即简单邮件传输协议）和 Exchange 协议，为用户提供了更多的选择。同时，LDAP（即轻量目录访问协议）定时同步用户功能支持设置消息收件人，定时同步用户任务完成后，系统会自动发送消息通知给收件人。另外，资产历史账号也支持设置保留数量，以满足用户的更多安全需求</span></span></div></div><div><div><span><span>X-Pack 增强包方面，JumpServer 的 SQL Server 数据库连接支持命令审计，用户通过 Magnus 代理连接 SQL Server 数据库时，进行 CURD 操作会进行命令审计记录。</span></span></div></div><div><div><strong><span>■ MeterSphere 开源持续测试平台</span></strong></div></div><div><div><span><span>2024 年 1 月 25 日，MeterSphere 开源持续测试平台发布 v2.10.11 LTS 版本。</span></span></div></div><div><div><span><span>在这一版本中，性能测试方面，性能测试的高级配置增加选项，报告采样支持显示接口返回数据类型为图片，下载 zip 文件时支持使用流下载；测试跟踪方面，修改场景测试转性能测试时部分 CSV 文件无法解析的问题，采用批量处理的方式自动清理报告数据，增加服务启动项，对删除失败的资源报告进行删除。此外，MeterSphere 项目组还进行了 14 项漏洞修复工作。</span></span></div></div><div><div><strong><span>其他重要事件</span></strong></div></div><div><div><strong><span>■</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4OTA1NzQ1OQ%3D%3D%26mid%3D2649624563%26idx%3D1%26sn%3D1d2576847bce8dccb2a3ffa5123fd231%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span><span>&nbsp;</span>飞致云旗下开源项目 GitHub Star 数量突破 100,000 个！</span></strong></a></div></div><div><div><span><span>2024 年 1 月 19 日，中国领先的开源软件提供商 FIT2CLOUD 飞致云宣布，其旗下开源项目在代码托管平台 GitHub 上所获得的 Star 数量已经超过 100,000 个。与此同时，飞致云旗下开源项目的月度新增软件下载次数也超过 100,000 次。</span></span></div><div><img alt="" height="720" src="https://oscimg.oschina.net/oscnet/up-813fe7e32e429dcf3dd7fbec5c220afa93d.jpg" width="1280" referrerpolicy="no-referrer"></div><div>
   ▲图 2 飞致云旗下开源项目 GitHub Star 数量突破 100,000 个 
 </div></div><div><div><span><span>在创新与并购的双轮驱动下，飞致云以「为数字经济时代创造好软件」为使命的开源生态体系不断发展壮大。目前，飞致云旗下开源项目的贡献者超过 1,700 位，有超过 7,000 位社区用户提交 Issue，Fork 总数量超过 24,000 次，PR（(Pull Request）数量超过 43,000 次。另据不完全统计，飞致云开源社区交流总人数已经超过 30,000 人。</span></span></div></div><div><div><strong><span>■</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg5Mjg3NTQ1Ng%3D%3D%26mid%3D2247485254%26idx%3D1%26sn%3Dfe5bba30cc4d9ca1d7009b51e3da70f3%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span><span>&nbsp;</span>Halo Maintainer 2023 年度榜单发布</span></strong></a></div></div><div><div><span><span>2024 年 1 月 24 日，Halo 开源项目组为了感谢 245 位开发者的慷慨付出，特别发布「Halo Maintainer 2023 年度榜单」，以表彰为 Halo 项目做出突出贡献的开发者们</span></span></div></div><div><div><strong><span>■<span>&nbsp;</span></span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzIxOTU1ODQ4NQ%3D%3D%26mid%3D2247484339%26idx%3D1%26sn%3D92241cdb3029010995e575b4bcb94a98%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span>1Panel 开源面板项目 GitHub Star 数量突破 15,000！</span></strong></a></div></div><div><div><span><span>截至 2024 年 1 月 24 日 14:00，1Panel 开源 Linux 服务器运维管理面板项目 GitHub Star 数超过 15,000 个。</span></span></div></div><div><div><strong><span>■</span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzIxOTU1ODQ4NQ%3D%3D%26mid%3D2247484345%26idx%3D1%26sn%3Dc9cbfd07aaca2d077d184b688d53bbcf%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow"><strong><span><span>&nbsp;</span>1Panel 开源面板项目致敬社区开发者</span></strong></a></div></div><div><div><span><span>2024 年 1 月 26 日，1Panel 开源项目组发布 61 位社区开发者名单，感谢他们在过去的 10 个月为 1Panel 开源项目所做出的杰出贡献。</span></span></div></div><div><div><strong><span>关于飞致云开源大屏</span></strong></div></div><div><div><span><span>飞致云开源大屏（</span></span><em><span>https://bi.fit2cloud.com/link/6CgpMHrT</span></em><span><span>）是 FIT2CLOUD 飞致云为展示其旗下开源软件的社区运营情况制作的数据仪表板。该大屏使用 DataEase 开源数据可视化分析平台制作，实时呈现飞致云开源社区近 30 日内的动态信息。<span>&nbsp;</span></span></span></div></div><div><div><span><span>广大社区用户可以通过该大屏了解飞致云旗下开源项目的 GitHub Star、Fork、Issue、贡献者等指标的数量信息，以及近 30 日内新增的 Star、Fork、下载、Issue、PR 数量等，同时该大屏还展示了飞致云旗下开源项目的 Issue 趋势、Commit 趋势、PR 趋势、Issue 生命周期等。</span></span></div></div><div><div><span><span>除了展示所有项目的汇总信息外，该大屏还支持用户分类别查看 JumpServer、DataEase、MeterSphere、Halo、1Panel、CloudExplorer Lite 六个开源项目的独立运营数据。</span></span></div></div><div>
  &nbsp; 
</div><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 01:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4736111/blog/10997723</guid>
            <link>https://my.oschina.net/u/4736111/blog/10997723</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 推出 Vision Pro 版 ChatGPT]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OpenAI <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FChatGPTapp%2Fstatus%2F1753480988569866332" target="_blank">宣布</a></u>推出可在 Vision Pro 上运行的 ChatGPT，现已在&nbsp;<span>visionOS App Store 上架。</span></p><p><img src="https://oscimg.oschina.net/oscnet/up-8a4aed40a73de4363dfa0fca1453aba4efa.png" referrerpolicy="no-referrer"></p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fventurebeat.com%2Fai%2Fopenai-launches-chatgpt-app-for-apple-vision-pro%2F" target="_blank">据 VentureBeat 报道</a></u>，苹果 Vision Pro 上的 ChatGPT 由 OpenAI 最新的大型语言模型（LLM）GPT 4 Turbo 支持。</p><p>2 月 2 日，苹果 Vision Pro 头显今日正式在美国开售，该产品有 256GB、512GB、1TB 三种存储容量供选择。苹果公司称，Vision Pro 发布时将提供 600 个新应用和游戏，ChatGPT 就是其中之一。这款混合现实头显还支持 iPad 上的 100 多万个应用程序。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1fffde79e15f258deab1180745435097ce9.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d001be7f7613037ebb5b017f03c1317af73.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bf210a7f1224575a21c9188df7ae0b97e72.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 01:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277654/chatgpt-app-for-apple-vision-pro</guid>
            <link>https://www.oschina.net/news/277654/chatgpt-app-for-apple-vision-pro</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun 1.0.26 版本发布：Windows 版即将在 2 月 15 日发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，Bun 的开发者 Jarred Sumner 宣布了 JavaScript 运行时环境 Bun 的最新版本——1.0.26 的发布。Bun 不仅是一个运行时环境，还集成了打包器、转译器和包管理器的功能。在这个新版本中，Bun 带来了一系列的改进和修复，包括解决了 30 个 bug，增加了对 bun:sqlite 中多语句查询的支持，提升了 bun --watch 在长时间运行中的可靠性，以及对 Bun.FileSystemRouter 的路由数量进行了扩展。</p><p>具体到功能改进上，Bun 1.0.26 版本增加了对 bun:sqlite 多语句查询的支持。这意味着开发者可以在单次调用<code>db.run()</code>时执行多个 SQL 语句，提高了开发效率和灵活性。此外，bun --watch 命令在这个版本中得到了改进，增加了防御性的文件描述符关闭机制，以防在监视大量文件时出现资源耗尽等问题。在 Linux 系统中，Bun 使用了<code>close_range(2)</code>系统调用，在重新加载进程之前关闭所有文件描述符，而在 macOS 上，通过使用<code>POSIX_SPAWN_CLOEXEC_DEFAULT</code>标志实现了类似的功能。</p><p>值得一提的是，Bun 的 FileSystemRouter 现在支持超过 64 条路由。之前版本中，使用超过 64 条路由时会引发无法捕获的异常，这一问题已经在 1.0.26 版本中得到了修复。</p><p>此外，关于错误处理方面，Bun 修复了<code>error.stack</code>有时返回      的问题，并且解决了<code>error.stack</code> CallSite lineNumber 有时为负数的问题。此外，Bun 还修复了<code>Error.prepareStackTrace</code>默认未定义的问题，使其行为与 Node.js 保持一致。</p><p>关于测试方面，Bun 解决了<code>expect(a).toStrictEqual(b)</code>在比较带有删除属性的对象时的错误处理问题。之前的版本中，这可能会引发一个带有空 diff 的错误，而现在这一问题已经得到了正确的处理。</p><p>在网络通信方面，Bun 修复了 Bun.serve() 中 WebSocket 的事件循环调度问题，保证在执行事件循环回调后总是清空微任务队列，避免内存过高增长的问题。</p><p>在对 Node.js 兼容性的提升上，Bun 1.0.26 版本对<code>module.path</code>进行了修正，使其行为更加符合 Node.js 的规范。另外，该版本对<code>new Response(Bun.file())</code>偶尔在 stderr 中记录错误的问题也进行了修复。</p><p>值得关注的是，Bun 在 Windows 平台的支持也在稳步推进中。虽然目前 78% 的测试已通过，但开发团队认为这还不足以发布 Windows 版本。大部分在此版本中的更改都与 Windows 相关，但由于尚未正式发布，因此在此次更新日志中并未涉及。</p><p>Bun 的这些更新显示了它作为一个现代 JavaScript 工具的持续成长和完善。对于开发者而言，这意味着更高的效率和更稳定的开发体验。随着 Windows 版本的即将到来，Bun 的受众和应用范围预计将会进一步扩大。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 01:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277652</guid>
            <link>https://www.oschina.net/news/277652</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zig 编程语言 2024 年全新路线图发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在最新的一次专访中，Zig 编程语言的创始人 Andrew Kelley 详细介绍了 Zig 即将发布的版本和未来规划的精彩亮点。这次更新着眼于解决关键的第三方项目问题、修复 bug、提升编译器性能以及实施增量编译的战略。同时，Andrew 还分享了关于为 Zig 软件基金会（ZSF）筹集资金和实现 1.0 版本目标的宝贵信息。</p><p><strong>即将到来的版本：专注于质量而非时间</strong></p><p>Zig 团队采取了一种独特的方法来推进即将发布的版本，即专注于完成具体任务而不是遵循严格的时间表。这一策略允许开发人员专注于交付核心特性，而不是急于发布。通过 Zig 的 GitHub 页面上的「Milestones」标签，社区成员可以跟踪进展，并将他们的项目添加到重要的第三方项目列表中，确保了广泛的兼容性和支持。</p><p><strong>提升性能与用户体验</strong></p><p>随着发布后的焦点转向解决 bug 和提高编译器性能，Zig 面临着解决超过 1,200 个已报告 bug 的挑战。减少编译时间成为提高效率的关键，旨在使开发者能够更快地测试和编辑代码。此外，Andrew 强调了增量编译在 Zig 未来发展中的核心作用，这一特性尽管目前还未实施，但预计将为游戏开发、终端应用、JavaScript 引擎和数据库等资源密集型应用带来显著的生产力提升。</p><p><strong>解决异步编程与工具支持挑战</strong></p><p>在讨论到 Zig 的异步功能和工具支持时，Andrew 坦承虽然异步编程具有巨大吸引力，但将其融入 Zig 需要克服多项技术障碍，如自定义代码生成后端和调试工具的开发。他也提到，尽管 Zig 的部分工具，如语言服务器和文档生成器，已经相当健壮，但仍有其他领域需要进一步发展。团队对持续改进持开放态度，并鼓励社区贡献。</p><p><strong>资助 Zig 软件基金会（ZSF）</strong></p><p>为了加速 Zig 的发展并实现 1.0 版本目标，Andrew 讨论了 ZSF 面临的资金挑战，指出个人捐赠目前仅占总收入的三分之一。增加来自个人和组织的资金支持将极大助力 ZSF 雇佣更多承包商，从而加快开发进程。</p><p><strong>朝向 1.0 版本迈进</strong></p><p>Zig 正致力于几个关键目标以实现 1.0 版本，包括提升编译器性能、调整语言以适应编译器优化，以及增强标准库。Andrew 强调，即使在达到 1.0 版本之前，使用 Zig 也能帮助早期识别和解决问题，他建议在源代码中引入版本声明以支持不同版本的平滑过渡。</p><p>通过这一系列措施和计划，Zig 展现了其对开发者社区的承诺和对编程语言未来的雄心壮志。随着 Zig 不断发展和改进，它有望为编程社区带来更多的创新和便利。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 04 Feb 2024 01:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277651/zig-roadmap-2024</guid>
            <link>https://www.oschina.net/news/277651/zig-roadmap-2024</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[10 年前的今天 —— Vue.js 正式问世]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Vue 官方推特账号的最新动态<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fvuejs%2Fstatus%2F1753678155444101385" target="_blank">写道</a></u>：</p><blockquote><p>10 年前的今天（2014 年 2 月 3 日），Vue 在 Hacker News 上首次对外亮相：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D7169288" target="_blank">news.ycombinator.com/item?id=7169288</a></p><p>10 年后，Vue 已成为使用最广泛的前端项目之一，在世界各地拥有多元化的社区。</p><p><img src="https://oscimg.oschina.net/oscnet/up-75ad5ac6e8149ffa4d18fee49546a79cd6a.png" referrerpolicy="no-referrer"></p></blockquote><p>Vue.js 是由尤雨溪独立开发的开源前端框架，目前由他和其他活跃的核心团队成员维护。</p><p>在谷歌的 Creative Lab 就职期间，尤雨溪接触到 Google 团队开发的 Web 前端框架「Angular」，他对 Angular 可通过数据绑定来处理网页 DOM 的运作方式很感兴趣，并想以此为基础开发出一个功能相似，但更轻量的框架。</p><p>后来，尤雨溪将所开发出的框架命名为「Vue.js」，并在 2014 年 2 月正式对外公布，宣称让「<strong>Java MVVM 变得更简单</strong>」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-581bff0bf554afab956437fa62cb1777d18.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D7169288" target="_blank">https://news.ycombinator.com/item?id=7169288</a></u></em></p><p>在与开发者的互动交流中，尤雨溪认真解答了 Vue.js 和 Angular 在技术架构设计方面的不同之处。为了保证框架尽可能轻量，Vue.js 舍弃了依赖注入、预编译 JSX 等特性。</p><p><img src="https://oscimg.oschina.net/oscnet/up-fafe1a062037bfc8b7e2738cefe3da01c61.png" referrerpolicy="no-referrer"></p><p>根据尤雨溪在 Vue.js 正式对外发布一周后的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.evanyou.me%2F2014%2F02%2F11%2Ffirst-week-of-launching-an-oss-project%2F" target="_blank">覆盘数据</a>，他最开始在 Hacke rNews、EchoJS 和 Reddit 子版块<span>/r/javascript 这三个网站宣布了 Vue.js。</span>一天之内，Vue.js 火速占据它们榜首。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 03 Feb 2024 08:53:49 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277597/vuejs-10yr</guid>
            <link>https://www.oschina.net/news/277597/vuejs-10yr</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源日报：中国首个脑机接口开源软件平台；谨慎升级 VS Code]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。</p><p><strong># 2024.2.2</strong></p><h2><span><span><span style="color:#000000"><span><span><span style="color:#00b050">今日要点</span></span></span></span></span></span></h2><p style="text-align:justify"><strong>OpenSource Daily</strong></p><h3><u><a href="https://www.oschina.net/news/277399" target="_blank">天津大学发布中国首个脑机接口开源软件平台 MetaBCI 研究成果</a></u></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">近日，天津大学神经工程团队在数学与计算生物学领域 SCI 一区 TOP 期刊《Computers in Biology and Medicine》上发表论文，介绍了中国首个脑机接口开源软件平台 MetaBCI 的技术架构与实现方法。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">MetaBCI 由离线分析模块 Brainda、刺激呈现模块 Brainstim 和在线数据流模块 Brainflow 三大部分构成，提供了面向 BCI 软件层面全链条开发的解决方案。</p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li>面向离线分析需求，Brainda 统一了现有公开数据集接口，优化了脑电数据读取、处理流程，复现多种主要 BCI 数据分析及解码算法，以此提高研究者的算法开发效率；</li><li>面向刺激呈现需求，Brainstim 提供了简洁高效的范式设计模块，可快速创建脑机接口范式刺激界面；</li><li>面向在线开发需求，Brainflow 利用双线程、双进程编程方法实现了实时高速的数据读取、数据处理、结果反馈等功能，帮助开发者轻松搭建脑机接口在线实验系统。</li></ul><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://oscimg.oschina.net/oscnet/up-8f4d4e3e7fbcc8a74be3635f43436fba05b.png" referrerpolicy="no-referrer"></p><h3><u><a href="https://www.oschina.net/news/277439/vscode-1-86-drops-ubuntu-18-04" target="_blank">VS Code 1.86 会导致远程开发功能无法使用</a></u></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Visual Studio Code 今日发布的最新版<span>&nbsp;</span><u><a href="https://www.oschina.net/news/277414/vs-code-1-86-released">1.86</a></u><span>&nbsp;引入一项严重的破坏性变化，其</span>远程开发服务器工具链<span>最低环境要求的&nbsp;</span>glibc 版本提升为 2.28。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">由于&nbsp;Ubuntu 18.04 LTS 使用 glibc 2.27，因此有开发者发现自己升级到 VS Code 新版本后，使用 Remote SSH 无法连接到远程机器。</p><blockquote><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-7159057b7f201b731192ad420804af1891b.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fv2ex.com%2Ft%2F1013590" target="_blank">https://v2ex.com/t/1013590</a></em></u></p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">对于该问题，目前的解决方案有两种：</p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><strong>根据对应的发行版，升级至 Ubuntu 20.04 LTS、Debian 10 或 RHEL 8</strong></li><li><strong>降级到 VS Code 1.85</strong></li></ul><h3><u><a href="https://www.oschina.net/news/277402/allenai-olmo-truly-open-llm" target="_blank">AI2 开源新 LLM，重新定义 open AI</a></u></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">艾伦人工智能研究所（Allen Institute for AI，简称 AI2）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.allenai.org%2Fhello-olmo-a-truly-open-llm-43f7e7359222" target="_blank">宣布</a>推出一个名为 OLMo 7B 的新大语言模型，并开源发布了预训练数据和训练代码。OLMo 7B 被描述为 「一个真正开放的、最先进的大型语言模型」。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">AI2 是由已故的微软公司联合创始人保罗 - 艾伦（Paul Allen）于 2014 年在西雅图创办的一家非营利组织。该组织表示，他们开源 OLMo 模型旨在让 AI 研究社区充分了解最先进的大语言模型（LLM），从而推动自然语言处理的发展，并以科学的方式正视现有 LLM 存在的问题。</span></p><p><img src="https://oscimg.oschina.net/oscnet/up-5f4ac19f48b404e2adf9eed484a4a22035d.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">今日推荐</span></span></span></span></span></span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-4caec6d25c5413f5ea4275653e65a5444dd.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">媒体观点</span></span></span></span></span></span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-90cadeca4d271edb7a2ad700c6263fdc51d.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span><span><span style="color:#000000"><span><span><span style="color:#00b050">每日项目榜</span></span></span></span></span></span></strong></h2><p>GitHub 榜单：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b98d9200d2d848543db7dae28c134e95c33.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-5292ae0f6e0cd094f67afe814ba672e45a7.png" referrerpolicy="no-referrer"></p><blockquote><h4><span style="background-color:#e67e22">在线阅读完整日报内容，访问：</span><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC008%E6%9C%9F%EF%BC%9A%E6%8E%A8%E5%8A%A8%E4%B8%AD%E5%9B%BD%E5%BC%80%E6%BA%90%E8%BD%AF%E7%A1%AC%E4%BB%B6%E5%8F%91%E5%B1%95%E7%9A%84%E7%BB%8F%E9%AA%8C%E4%B8%8E%E5%BB%BA%E8%AE%AE.pdf" target="_blank"><span style="background-color:#e67e22">开源日报第 008 期：推动中国开源软硬件发展的经验与建议</span></a></u></h4></blockquote><hr><p><strong>往期回顾</strong></p><ul><li><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC007%E6%9C%9F.pdf">开源日报第 007 期：「Linux 中国」 开源社区宣布停止运营</a></u></li><li><u><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC006%E6%9C%9F%EF%BC%9A%E9%80%89%E6%8B%A9%E6%8A%80%E6%9C%AF%E6%A0%88%E4%B8%80%E5%AE%9A%E8%A6%81%E9%80%89%E6%8B%A9%E5%BC%80%E6%BA%90%E7%9A%84.pdf" target="_blank">开源日报第 006 期：选择技术栈一定要选择开源的</a></u></li><li><a href="http://www.oschina.net/news/277040"><u>开源日报第 005 期：RISC-V 万兆开源交换机发售；npm 存在大量武林外传视频</u></a></li><li><u><a href="https://www.oschina.net/news/276864" target="news">开源日报第 004 期：百度输入法在候选词区域植入广告；大神用 Excel 构建 CPU</a></u></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 03 Feb 2024 06:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277585</guid>
            <link>https://www.oschina.net/news/277585</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FastGateway：一个可以用于代替 Nginx 的网关]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在我本人研究 Yarp 的时候经常用于公司项目的业务网关代理，这时候就个大佬问我是否可以实现动态加载 HTTPS 证书？那时候我说不太可能实现，然而在某一天我看到</p><p>微软使用 Yarp 代替了 Nginx 吞吐量提升了百分之八十！</p><p><img height="2340" src="https://oscimg.oschina.net/oscnet/up-9b031c83a55889ff53d2b4981411def100f.png" width="1080" referrerpolicy="no-referrer"></p><p>这个时候我就萌生了自己使用 yarp 造一个 Gateway 的项目，应为我本身也经常使用 nginx 作为网关，但是 nginx 的使用总得写 conf，然后重启我的 nginx，并且还需要配置证书重启，我就在想是否可以实现界面管理，并且完全动态管理？</p><p>然后我们的 FastGateway 项目就诞生了，下面我们介绍一下我们的 FastGateway 的项目简单案例</p><p>## FastGateway</p><p>我们的 FastGateway 提供了俩个容器，一个是代理服务，一个是前端服务</p><p>一般简单使用就可以直接使用我们的 docker-compose 构建，非常简单</p><p>FastGateway 支持哪些功能？</p><ul><li><span>&nbsp;</span>登录授权&nbsp; 
  <ul><li>通过环境变量简单设置账号密码</li></ul></li><li><span>&nbsp;</span>动态路由管理 
  <ul><li>完全界面操作并且实时更新</li></ul></li><li><span>&nbsp;</span>动态配置证书管理 
  <ul><li>完全界面操作并且实时更新</li></ul></li><li><span>&nbsp;</span>dashboard 监控 
  <ul><li>提供了简单数据监控，后续还会提供更完善的功能</li></ul></li><li><span>&nbsp;</span>静态文件服务代理 
  <ul><li>使用中间件简单实现了静态文件代理（Yarp 默认是不支持静态文件代理）</li></ul></li><li><span>&nbsp;</span>穿透隧道功能 
  <ul><li>只需要提供一个公网的 Gateway 服务端，然后下载我们的 Gateway 的客户端就可以将客户端的局域网的服务映射到外网（只支持 http 协议的服务）</li></ul></li><li><span>&nbsp;</span>出入口流量监控 
  <ul><li>基于 Kestrel 实现出入口流量监控，还提供当前服务器的所有网卡的出入流量实时监控</li></ul></li></ul><h2>技术栈</h2><h3>后端技术栈</h3><ul><li>Asp.Net 8.0 用于提供基础服务</li><li>Yarp 用于提供反向代理服务</li><li>FreeSql 用于提供数据库服务</li><li>JWT 用于提供登录授权服务</li><li>MiniApis 提供 WebApi 服务</li></ul><h3>前端技术栈</h3><ul><li>reset-css 用于重置浏览器默认样式</li><li>axios 用于发送 http 请求</li><li>semi 用于提供基础组件</li><li>react-router-dom 用于路由管理</li></ul><h2>镜像执行指令</h2><div><div><pre><span><span style="color:#0086b3">mkdir </span>data</span><span>docker run <span style="color:#ffcc55">-d</span><span style="color:#ffcc55">--restart</span> always <span style="color:#ffcc55">--name</span> gateway-api <span style="color:#ffcc55">-p</span> 8000:8000 <span style="color:#ffcc55">-p</span> 8200:8080 <span style="color:#ffcc55">-p</span> 8300:8081 <span style="color:#ffcc55">-v</span><span style="color:orange">$(</span><span style="color:#0086b3">pwd</span><span style="color:orange">)</span>/data:/data/ registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-api</span><span>docker run <span style="color:#ffcc55">-d</span><span style="color:#ffcc55">--restart</span> always <span style="color:#ffcc55">--privileged</span><span style="color:#ffcc55">--name</span> gateway-web <span style="color:#ffcc55">-p</span> 10800:80 <span style="color:#ffcc55">-e</span><span style="color:#ffaa44">api_url</span><span>=</span>http://localhost:8000 registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-web</span></pre><div>
   &nbsp;
  </div></div></div><h2>Docker-Compose 文件</h2><div><div><pre><span><span style="color:#008080">services</span><span>:</span></span><span><span style="color:#008080">gateway-api</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-api</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-api</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">USER</span><span>:</span><span style="background-color:transparent; color:#00aadd">root</span></span><span><span style="color:#008080">PASS</span><span>:</span><span style="background-color:transparent; color:#00aadd">Aa010426.</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8000:8000</span><span style="color:#888888"># 提供给 web 端调用的管理接口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8200:8080</span><span style="color:#888888"># Http 代理端口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8300:8081</span><span style="color:#888888"># Https 代理端口</span></span><span><span style="color:#008080">volumes</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./data:/data/</span><span style="color:#888888"># 请注意手动创建 data 目录，负责在 Linux 下可能出现权限问题导致无法写入</span></span><span><span style="color:#008080">gateway-web</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-web</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">build</span><span>:</span></span><span><span style="color:#008080">context</span><span>:</span><span style="background-color:transparent; color:#00aadd">../web</span></span><span><span style="color:#008080">dockerfile</span><span>:</span><span style="background-color:transparent; color:#00aadd">Dockerfile</span></span><span><span style="color:#008080">privileged</span><span>:</span><span style="color:turquoise">true</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">api_url</span><span>:</span><span style="background-color:transparent; color:#00aadd">http://localhost:8000</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">10800:80</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">如果并没有提供账号密码则默认</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">账号：root</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">密码：Aa010426.</p><h2>替换默认的 https 证书</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">由于需要使用 https，为了方便系统默认提供了一个 pfx 证书，如果你需要提供的话可以按照以下操作进行，如果是 Docker 执行的话证书的目录则是<span>&nbsp;</span><code>/app/certificates/gateway.pfx</code></p><div><div><pre><span><span style="color:#008080">services</span><span>:</span></span><span><span style="color:#008080">gateway-api</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-api</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-api</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8000:8000</span><span style="color:#888888"># 提供给 web 端调用的管理接口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8200:8080</span><span style="color:#888888"># Http 代理端口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8300:8081</span><span style="color:#888888"># Https 代理端口</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">USER</span><span>:</span><span style="background-color:transparent; color:#00aadd">root</span></span><span><span style="color:#008080">PASS</span><span>:</span><span style="background-color:transparent; color:#00aadd">Aa010426.</span></span><span><span style="color:#008080">HTTPS_PASSWORD</span><span>:</span><span style="background-color:transparent; color:#00aadd">dd666666</span></span><span><span style="color:#008080">HTTPS_FILE</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway.pfx</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8200:8080</span></span><span><span style="color:#008080">volumes</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./data:/data/</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./app/certificates:/app/certificates</span></span><span><span style="color:#008080">gateway-web</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-web</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-web</span></span><span><span style="color:#008080">privileged</span><span>:</span><span style="color:turquoise">true</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">api_url</span><span>:</span><span style="background-color:transparent; color:#00aadd">http://localhost:8000</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">10800:80</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">参考上面的 docker-compose 文件，我们提供了俩个环境变量<code>HTTPS_PASSWORD</code>，<code>HTTPS_FILE</code>，</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>HTTPS_FILE</code>：</p><ul><li>在系统中已经指定了容器的<code>/app/certificates</code>目录，你只想要挂在目录中的文件名即可</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>HTTPS_PASSWORD</code>：</p><ul><li>Pfx 证书的密码，如果修改了证书请填写证书的密码。</li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><code>/app/certificates</code>：</p><ul><li>这个是系统证书默认存放目录，如果映射了目录则需要提供自己的证书。</li></ul><h2>使用隧道</h2><div><div><pre><span><span style="color:#008080">services</span><span>:</span></span><span><span style="color:#008080">gateway-api</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-api</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-api</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">USER</span><span>:</span><span style="background-color:transparent; color:#00aadd">root</span></span><span><span style="color:#008080">PASS</span><span>:</span><span style="background-color:transparent; color:#00aadd">Aa010426.</span></span><span><span style="color:#008080">HTTPS_PASSWORD</span><span>:</span><span style="background-color:transparent; color:#00aadd">dd666666</span></span><span><span style="color:#008080">TUNNEL_PASSWORD</span><span>:</span><span style="background-color:transparent; color:#00aadd">dd666666</span></span><span><span style="color:#008080">HTTPS_FILE</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway.pfx</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8000:8000</span><span style="color:#888888"># 提供给 web 端调用的管理接口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8200:8080</span><span style="color:#888888"># Http 代理端口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8300:8081</span><span style="color:#888888"># Https 代理端口</span></span><span><span style="color:#008080">volumes</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./data:/data/</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./app/certificates:/app/certificates</span></span><span><span style="color:#008080">gateway-web</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-web</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-web</span></span><span><span style="color:#008080">privileged</span><span>:</span><span style="color:turquoise">true</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">api_url</span><span>:</span><span style="background-color:transparent; color:#00aadd">http://localhost:8000</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">10800:80</span></span></pre><div>
   &nbsp;
  </div></div></div><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">增加<code>TUNNEL_PASSWORD</code>环境变量，默认为空不设置密码</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">下载隧道客户端<span>&nbsp;</span><a href="https://gitee.com/hejiale010426/Gateway/releases">https://gitee.com/hejiale010426/Gateway/releases</a><span>&nbsp;</span>然后解压压缩包，打开 appsettings.json 文件修改 Tunnel 节点的 Url，如果 Gateway 使用了 TUNNEL_PASSWORD，那么你的 URL 应该是<code>https://localhost:8081/api/gateway/connect-h2?host=backend1.app&amp;password=dd666666</code>，<span>&nbsp;</span><code>host</code>是在集群中的集群端点的域名，这个域名就是定义到我们的隧道客户端的<code>host</code>的这个参数，请保证值的唯一性，当绑定集群的路由匹配成功以后则会访问图片定义的端点，如果并没有存在节点那么他会直接代理。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://gitee.com/hejiale010426/FastGateway/raw/master/img/%E9%9B%86%E7%BE%A4-01.png.png" referrerpolicy="no-referrer"></p><h2>出入流量监控</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">使用环境变量控制是否启用流量监控，使用环境变量<code>ENABLE_FLOW_MONITORING</code>设置我们是否启用流量监控，如果为空则默认启动流量监控，然后可以打开我们的控制面板查看流量监控的数据。</p><div><div><pre><span><span style="color:#008080">services</span><span>:</span></span><span><span style="color:#008080">gateway-api</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-api</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-api</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">USER</span><span>:</span><span style="background-color:transparent; color:#00aadd">root</span></span><span><span style="color:#008080">PASS</span><span>:</span><span style="background-color:transparent; color:#00aadd">Aa010426.</span></span><span><span style="color:#008080">HTTPS_PASSWORD</span><span>:</span><span style="background-color:transparent; color:#00aadd">dd666666</span></span><span><span style="color:#008080">HTTPS_FILE</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway.pfx</span></span><span><span style="color:#008080">ENABLE_FLOW_MONITORING</span><span>:</span><span style="color:turquoise">true</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8000:8000</span><span style="color:#888888"># 提供给 web 端调用的管理接口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8200:8080</span><span style="color:#888888"># Http 代理端口</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">8300:8081</span><span style="color:#888888"># Https 代理端口</span></span><span><span style="color:#008080">volumes</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./data:/data/</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">./app/certificates:/app/certificates</span></span><span><span style="color:#008080">gateway-web</span><span>:</span></span><span><span style="color:#008080">image</span><span>:</span><span style="background-color:transparent; color:#00aadd">registry.cn-shenzhen.aliyuncs.com/tokengo/gateway-web</span></span><span><span style="color:#008080">restart</span><span>:</span><span style="background-color:transparent; color:#00aadd">always</span></span><span><span style="color:#008080">container_name</span><span>:</span><span style="background-color:transparent; color:#00aadd">gateway-web</span></span><span><span style="color:#008080">privileged</span><span>:</span><span style="color:turquoise">true</span></span><span><span style="color:#008080">environment</span><span>:</span></span><span><span style="color:#008080">api_url</span><span>:</span><span style="background-color:transparent; color:#00aadd">http://localhost:8000</span></span><span><span style="color:#008080">ports</span><span>:</span></span><span><span>-</span><span style="background-color:transparent; color:#00aadd">10800:80</span></span></pre></div></div><p>&nbsp;</p><p>开源地址：<a href="https://gitee.com/hejiale010426/FastGateway">FastGateway: FastGateway 一个超级简单方便的网关，基于 Kestrel+Yarp 实现的网关。 支持动态配置路由，支持动态配置集群，支持动态配置 HTTPS 证书，无需重启即可使用。 (gitee.com)</a></p><p>&nbsp;</p><p><strong>效果图</strong></p><p><img height="974" src="https://oscimg.oschina.net/oscnet/up-213cad83fbc8f296333c9970b2dee268483.png" width="1480" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p><img height="979" src="https://oscimg.oschina.net/oscnet/up-64949f2af7f4f1cd4a212c94f185ba0df7d.png" width="1485" referrerpolicy="no-referrer"></p><p><img height="986" src="https://oscimg.oschina.net/oscnet/up-57d5ac2dcda53c11dc8019ca721f9835f84.png" width="1489" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 03 Feb 2024 03:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277575</guid>
            <link>https://www.oschina.net/news/277575</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[扎克伯格解释 Meta 为什么要开源其 AI 技术]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在今天的 2023 年第四季度财报电话会议中，马克 - 扎克伯格解释 Meta 为什么要开源其 AI 技术。</p><p>Meta 开源其 AI 技术是出于推动技术创新、提升模型质量、建立行业标准、吸引人才、增加透明度和支持其长期战略的考虑。这不仅有助于 Meta 在竞争激烈的 AI 领域保持领先地位，也有助于推动整个行业的前进。</p><p>1. <strong>促进行业创新</strong>: 通过开源 AI 模型，Meta 可以鼓励全球的开发者、研究人员和公司利用这些技术进行创新。这种共享精神有助于加速 AI 技术的进步，并推动新应用和服务的开发。</p><p>2. <strong>提高模型质量</strong>: 开源允许更广泛的社区参与到模型的测试和改进中来。来自全球的贡献可以帮助发现并修复错误，提出改进意见，从而提高模型的性能和可靠性。</p><p>3. <strong>建立行业标准</strong>: 通过将自己的技术开源，Meta 有机会塑造行业标准和最佳实践。这种影响力可以确保 Meta 在 AI 领域的技术和方法得到广泛接受和使用，从而加强其市场地位。</p><p>4. <strong>吸引和保留人才</strong>: 开源项目通常对研究人员和开发者具有吸引力。通过贡献于开放且受尊重的项目，Meta 可以吸引顶尖人才加入，这对于维持其在 AI 领域的竞争优势至关重要。</p><p>5. <strong>提升安全性和透明度</strong>: 开源 AI 模型可以提高透明度，让外部研究人员和公众能够更好地理解模型的工作原理和潜在影响。这有助于识别和缓解与 AI 应用相关的风险和伦理问题，从而增强公众对 AI 技术的信任。</p><p>6. <strong>支持长期战略</strong>: Meta 开源 AI 技术也是其长期战略的一部分，旨在确保公司在 AI 和机器学习领域的长期领导地位。通过开源，Meta 可以推动整个生态系统的发展，为自己的产品和服务创造更多的创新机会。</p><blockquote><p>本文已获授权。</p><p>完整内容参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fs21.q4cdn.com%2F399680738%2Ffiles%2Fdoc_financials%2F2023%2Fq4%2FMETA-Q4-2023-Earnings-Call-Transcript.pdf" target="_blank">https://s21.q4cdn.com/399680738/files/doc_financials/2023/q4/META-Q4-2023-Earnings-Call-Transcript.pdf</a><br> 译文：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaoyu.io%2Ftranslations%2Fmeta%2Fmark-zuckerberg-explains-why-meta-open-sources-its-ai" target="_blank">https://baoyu.io/translations/meta/mark-zuckerberg-explains-why-meta-open-sources-its-ai</a></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sat, 03 Feb 2024 03:01:36 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277568</guid>
            <link>https://www.oschina.net/news/277568</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌 Bard 支持文本生成图像功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>谷歌对话式 AI 工具&nbsp;<span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">Bard 近日发布了更新，此次更新后将支持文生图和扩展双重检查功能。</span></p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-1a225c71ee0e459f8cfa6a7ac710106c3f6.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbard.google.com%2Fupdates" target="_blank">https://bard.google.com/updates</a></u></em></p></blockquote><p><strong>Bard 此次新增的图像生成功能将在全球受支持的地区免费提供，由谷歌 Imagen 2 模型提供支持，但需要英语指令</strong>。用户现在可以根据向 Bard 提供的描述生成自定义图像。谷歌承诺，Bard 可提供「高质量、逼真的图像输出」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-4b6453ff6415cb9ad30a9eab1cd5a61b3cb.png" referrerpolicy="no-referrer"></p><p>谷歌表示，Imagen 2 不会生成暴力、攻击性或包含色情内容的图片。此外，Imagen 2 还接受了一些「培训」，可以帮助它避免创建特定人群的图像。为将 Bard 生成的 AI 图片与人类作品区分开来，谷歌将嵌入「像素级别」的数字可识别水印。</p><p>Bard 在此次更新之后，谷歌 Gemini Pro 模型新增了 40 多种语言、230 多个国家和地区的支持。</p><p>谷歌表示，Gemini Pro 增强了 Bard 的理解、总结、推理、创意、协作和规划方面的能力。谷歌还将 Bard 的「双重检查」功能扩展到 40 多种语言，用户可以通过检查整个互联网的内容来验证 AI 所作回答的准确性。在此之前，「双重检查」功能仅限于英语。</p><p>详情查看&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Ftechnology%2Fai%2Fgoogle-imagen-2%2F" target="_blank">https://blog.google/technology/ai/google-imagen-2/</a></u></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 03 Feb 2024 02:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/277567/bard-ai-image-generation</guid>
            <link>https://www.oschina.net/news/277567/bard-ai-image-generation</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 初探分布式链路追踪]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;visibility: visible;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img __bg_gif" data-backh="96" data-backw="578" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="96" data-imgfileid="503043772" data-ratio="0.16666666666666666" data-type="gif" data-w="636" src="https://oscimg.oschina.net/oscnet/71323de7-edc6-4b55-b3be-08214ac4934e.gif" style="outline: 0px;letter-spacing: 0.544px;font-size: var(--articleFontsize);border-radius: 8px;text-align: justify;width: 100%;visibility: visible !important;background-size: 16px !important;height: auto;" referrerpolicy="no-referrer"><br style="outline: 0px;visibility: visible;"></section><section data-mpa-template="t" data-mpa-template-id="502" data-mpa-category="模板" style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;"><section data-mpa-category="模板" data-mid="" style="padding-right: 1px;padding-left: 1px;outline: 0px;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;"><section data-mid="" style="outline: 0px;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;"><section data-mid="" style="outline: 0px;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section><section data-mid="" style="padding-left: 7px;outline: 0px;display: flex;justify-content: flex-start;align-items: center;visibility: visible;"><section data-mid="" style="margin-right: 7px;outline: 0px;text-align: left;visibility: visible;"><p data-mid="" style="outline: 0px;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &quot;PingFang SC&quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;"><br style="outline: 0px;visibility: visible;"></p></section><section data-mid="" style="margin-bottom: 4px;outline: 0px;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section></section></section><section data-mid="" style="padding: 7px 14px 9px 19px;outline: 0px;width: 675px;text-align: left;border-bottom: 1px solid rgb(58, 92, 244);visibility: visible;"><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.578px;text-align: justify;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;color: rgb(0, 0, 0);text-align: left;text-indent: 2em;font-size: 15px;letter-spacing: 1px;visibility: visible;">本篇文章，主要介绍应用如何正确使用日志系统，帮助用户从依赖、输出、清理、问题排查、报警等各方面全面掌握。</span></p></section></section></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.75em;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503043770" data-ratio="0.3161764705882353" data-s="300,640" data-type="png" data-w="408" src="https://oscimg.oschina.net/oscnet/83abeb6c-dd57-43c7-ab42-53b4b2eb5c03.png" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;">可观测性</span></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">可观察性不单是一套理论框架，而且并不强制具体的技术规格。其核心在于鼓励团队内化可观察性的理念，并确保由研发人员构建的应用程序具备可观察性。在学术领域中，尽管「可观测性」这一术语是近年来从控制理论中引进的新词，但实际上，它在计算机科学领域已有深厚的实践基础。学者们通常会把可观测性细化为三个更具体的研究方向：事件日志、链路追踪和聚合度量。这三个领域虽然各有侧重点，但并非完全孤立，它们之间存在着天然的交集与互补性。</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;line-height: 1.75em;text-align: center;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503043773" data-ratio="0.5888888888888889" src="https://oscimg.oschina.net/oscnet/69822782-4580-4b1d-b1c2-5ee89714d645.png" data-type="png" data-w="1080" referrerpolicy="no-referrer"></span></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">日志 (Logging），展现的是应用运行而产生的事件或者程序在执行的过程中间产生的一些日志，可以详细解释系统的运行状态，但是存储和查询需要消耗大量的资源。所以往往使用过滤器减少数据量。</span></p></li><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">度量 (Metrics)，是一种聚合数值，存储空间很小，可以观察系统的状态和趋势，但对于问题定位缺乏细节展示。这个时候使用等高线指标等多维数据结构来增强对于细节的表现力。例如统计一个服务的 TBS 的正确率、成功率、流量等，这是常见的针对单个指标或者某一个数据库的。</span></p></li><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">追踪 (Tracing)，面向的是请求，可以轻松分析出请求中异常点，但与日志有相同的问题就是资源消耗较大。通常也需要通过采样的方式减少数据量。比如一次请求的范围，也就是从浏览器或者手机端发起的任何一次调用，一个流程化的东西，需要轨迹去追踪。</span></p></li></ol><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">在工业界，历经长期的竞争，日志和度量领域的主导技术已逐渐明朗。日志收集与分析方面，Elastic Stack（亦称为 ELK Stack）已成为广泛采纳的技术选择。然而，追踪技术的发展路径与日志和度量领域显然不同。追踪技术高度依赖于特定的网络协议和编程语言。服务间是通过 HTTP 还是 gRPC 通信，会直接决定追踪实施的具体方法。同样，服务是否采用 Java、Golang、还是 Node.js 编写，也会影响到如何追踪进程内调用堆栈。这种依赖性使得追踪工具通常需要以插件或探针的形式进行深度集成，因而具有一定的侵入性。此外，由于追踪技术需要适应不同的语言和网络环境，追踪领域很难形成单一的主导者。相反，市场上存在多样化的产品，旨在满足各种不同技术栈的追踪需求。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">本文主要探讨其中的追踪下日志内容。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="503043771" data-ratio="0.3056872037914692" data-s="300,640" data-type="png" data-w="422" src="https://oscimg.oschina.net/oscnet/a8e72552-35db-4b13-b67f-29ad569034ae.png" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;color: rgb(0, 17, 255);">链路追踪</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">分布式链路追踪公认的起源是 Google 在 2010 年发表的论文《Dapper : a Large-Scale Distributed Systems Tracing Infrastructure》，这篇论文介绍了 Google 从 2004 年开始使用的分布式追踪系统 Dapper 的实现原理。</span></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: left;"><span style="white-space: break-spaces;color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);">论文</span>《</span><span style="color: rgb(0, 0, 0);">Dapper : a Large-Scale Distributed Systems Tracing Infrastructure</span><span style="white-space: break-spaces;color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">》地址：https://static.googleusercontent.com/media/research.google.com/zh-CN//archive/papers/dapper-2010-1.pdf</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: left;"><span style="white-space: break-spaces;color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></section><span id="OSC_h4_1"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">基本原理</span></strong></span></h4><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: left;"><br></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">分布式链路追踪的基本原理就是在分布式应用的接口方法上设置一些观察点，然后在入口节点给每个请求分配一个全局唯一的标识 TraceId。当请求流经这些观察点时就会记录一行对应的链路日志（包含链路唯一标识，接口名称，时间戳，主机信息等）。最后通过 TraceId 将一次请求的所有链路日志进行组装，就可以还原出该次请求的链路轨迹。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">分布式链路追踪实现请求回溯的关键点有两个：一是低成本、高质量的观察点设置，也就是链路插桩，确保追踪的信息足够丰富，能够快速定位异常根因；二是保证链路上下文在不同环境下都能够完整透传，避免出现上下文丢失导致的断链现象。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><span id="OSC_h4_2"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">基础术语</span></strong></span></h4><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">虽然分布式链路追踪的实现方式多种多样，但是仍然有一些基础术语在业界具备广泛的共识。</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_3"></span><h4 data-cangjie-key="57" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">Trace</span></h4></li></ul><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">一条 Trace 代表一次入口请求在 IT 系统内的完整调用轨迹及其关联数据集合。其中，全局唯一的链路标识 TraceId，是最具代表的一个属性。通过 TraceId 才能将同一个请求分散在不同节点的链路数据准确的关联起来，实现请求粒度的「确定性关联」价值。</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;line-height: 1.75em;text-align: center;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-backh="176" data-backw="578" data-imgfileid="503043775" data-ratio="0.30462962962962964" src="https://oscimg.oschina.net/oscnet/5f12720d-9501-485d-8784-95fb2eb5de4d.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">以集团的 Eagleeye 设计的 traceId 设计为例，根据这个 id，可以知道这个请求在 2022-10-18 10:10:40 发出，被 11.15.148.83 机器上进程号为 14031 的 Nginx（对应标识位 e）接收到。其中的四位原子递增数从 0-9999，目的是为了防止单机并发造成 traceId 碰撞。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_4"></span><h4 data-cangjie-key="70" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">Span</span></h4></li></ul><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">Span 是一个操作，它代表系统中一个逻辑运行单元。Span 之间通过嵌套或者顺序排列建立因果关系。Span 包含以下对象</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">Operation Name：描述了当前接口的行为语义，比如 /api/createOrder 代表执行了一次创建订单的动作。</span></p></li><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">SpanId/ParentSpanId：接口调用的层级标识，用于还原 Trace 内部的层次调用关系。</span></p></li><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">Start/FinishTime：接口调用的开始和结束时间，二者相减就是该次调用的耗时。</span></p></li><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">StatusCode：响应状态，标识当次调用是成功或失败。</span></p></li><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">Tags &amp; Events：调用附加信息，详见下面的描述。</span></p></li></ol><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: center;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-backh="453" data-backw="578" data-imgfileid="503043778" data-ratio="0.7842592592592592" src="https://oscimg.oschina.net/oscnet/cc981138-638b-46de-9e82-6d487c0af89a.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">其中最重要的是 SpanId 的设计。同样以阿里的 Eagleeye 的 spanId（rpcId）设计为例，Eagleeye 设计了 RpcId 来区别同一个调用链下多个网络调用的顺序和嵌套层次，用 0.X1.X2.X3.....Xi 来表示，根节点的 RpcId 固定从 0 开始，id 的位数（"."的数量）表示了 Span 在这棵树中的层级，Id 最后一位表示了 Span 在这一层级中的顺序。那么给定同一个 Trace 中的所有 RpcId，便可以很容易还原出一个完成的调用链：</span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="css"><code><span class="code-snippet_outer">- 0</span></code><code><span class="code-snippet_outer">  - 0.1</span></code><code><span class="code-snippet_outer">    - 0.1.1</span></code><code><span class="code-snippet_outer">    - 0.1.2</span></code><code><span class="code-snippet_outer">      - 0.1.2.1</span></code><code><span class="code-snippet_outer">  - 0.2</span></code><code><span class="code-snippet_outer">    - 0.2.1</span></code><code><span class="code-snippet_outer">  - 0.3</span></code><code><span class="code-snippet_outer">    - 0.3.1</span></code><code><span class="code-snippet_outer">      - 0.3.1.1</span></code><code><span class="code-snippet_outer">    - 0.3.2</span></code></pre></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_5"></span><h4 data-cangjie-key="104" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">Tags</span></h4></li></ul><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">如果需要进一步记录请求的行为特征，可以使用 Tags 来扩展语义。Tags 是一组由 {Key:Value} 组成的键值对集合，描述这一次接口调用的具体属性。比如 Eagleeye 里就有「Tags」的实现（UserData），阿里的全链路压测标识就是通过 UserData 里传递实现的。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">在分布式追踪的上下文中，一个 Trace 可被视为一个有向无环图，其中每个 Span 代表图中的一个节点，而节点之间的连接则表示为链接。观察这样的图表，我们可以看到一个单独的 Span 节点可能拥有多条链接，这表明它具有多个子 Span。这种结构揭示了各个操作间的父子或者因果关系，从而使得追踪整个请求的流程成为可能。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">Trace 定义了 Span 间两种基本关系：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">ChildOf：表示父 Span 在一定程度上依赖子 Span。</span></p></li><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">FollowsFrom：表示父 Span 完全不依赖其子 Span 的结果。</span></p></li></ol><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><span id="OSC_h4_6"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">链路追踪的挑战</span></strong></span></h4><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_7"></span><h4 data-cangjie-key="125" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">日志存储</span></h4></li></ul><section style="margin-bottom: 8px;"><br></section><section style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">本地存储埋点数据涉及磁盘操作，而磁盘 I/O 速度通常较慢。在高并发的环境中，如果采用同步刷新磁盘的方式，可能会对原有业务的性能造成显著影响。因此，在链路追踪系统中进行数据埋点时，应当尽量减少对系统的性能损耗，确保对原业务的逻辑和性能具有无侵入性。这意味着追踪系统的设计需要尽量轻量化，并采取策略如异步处理、缓存等方法来降低对业务性能的影响。</span></section><p style="margin-bottom: 8px;"><br></p><span id="OSC_h5_8"></span><h5 data-cangjie-key="131" data-cangjie-leaf-block="true" data-type="heading-5" style="margin-bottom: 8px;"><span style="font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">并发环形队列</span></h5><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">集团的 Eagleeye 采用并发环形队列存储 Trace 数据，如下图所示：</span></p><p style="margin-bottom: 8px;text-align: center;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-backh="413" data-backw="578" data-imgfileid="503043774" data-ratio="0.7138888888888889" src="https://oscimg.oschina.net/oscnet/f3ce3db2-6786-4434-9a5c-ee90beacf3a2.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></p><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">环形队列确实是日志框架中实现异步日志写入的一种常用技术。在这种队列中，存在两个关键的指针，即读指针（take）和写指针（put）。</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">读指针（take）: 它指向队列中的最旧数据，即下一条待消费的数据。</span></p></li><li><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">写指针（put）: 它指向队列中下一个将要存放新数据的位置。</span></p></li></ol><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">这个队列被设计为支持原子性的读写操作，以保证在多线程环境中数据的一致性。这意味着，当一个线程在执行读或写操作时，其他线程不能同时修改被操作的数据项。</span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">读指针和写指针按同一方向（如时钟方向）移动，随着数据的不断生产和消费，这两个指针在队列中循环前进。然而，如果生产数据的速度持续超过消费速度，写指针最终会「追上」读指针，这种情况被称为「套圈」。</span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">当出现套圈现象时，队列将根据预设的策略来处理新产生的数据。常见的处理策略包括：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">丢弃即将写入的新数据，以保护队列中已存在的数据不被覆盖。</span></p></li><li><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">覆盖队列中最旧的数据，这意味着最先入队的数据将被新数据取代，这种策略适用于对最新数据保持最高优先级的场景。</span></p></li></ol><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">选择哪种策略取决于具体应用场景的需求和对数据丢失的容忍度。环形队列的这种设计使得它在处理高并发日志数据时非常高效，能够在保证性能的同时减少资源占用。</span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">Skywalking 在实现上有所区别，采用分区的 QueueBuffer 存储 Trace 数据，多个消费线程通过 Driver 平均分配到各个 QueueBuffer 上进行数据消费：</span></p><p style="margin-bottom: 8px;text-align: center;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-backh="385" data-backw="578" data-imgfileid="503043777" data-ratio="0.6657407407407407" src="https://oscimg.oschina.net/oscnet/7b68e2bc-5c2f-4ebb-972d-f9143207d775.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></p><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">在高性能的应用场景中，队列的实现方式对于整体性能有显著的影响。QueueBuffer 通常有两种不同的实现方式：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">基于 JDK 的阻塞队列：这种实现方式利用了 Java 标准库中的 java.util.concurrent 包下的阻塞队列，例如 ArrayBlockingQueue 或 LinkedBlockingQueue。这些队列内部处理了线程同步的逻辑，使得在多线程环境下生产者和消费者可以安全地进行并发操作。基于 JDK 的阻塞队列通常用于服务端，因为服务端可以承受相对较重的负载，并且更注重于稳定性和线程安全。</span></p></li><li><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">普通数组 + 原子下标：这种实现方式使用了一个普通的数组，并结合了原子操作的下标（如 AtomicInteger）用于记录读写的位置。这种队列不是阻塞的，因此，当队列满时，它需要显式地处理生产者的等待逻辑，当队列空时，需要处理消费者的等待逻辑。SkyWalking 的 Agent 端采用这种方式，因为它相对更轻量级，且在高吞吐量场景下提供了更高的性能。Agent 端的性能尤其重要，因为它直接运行在应用程序内部，性能的任何抖动都可能影响到应用程序本身的性能。</span></p></li></ol><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">在普通数组 + 原子下标的实现中，有一些值得关注的点：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">原子性操作：通过使用原子类（如 AtomicInteger），可以确保在并发场景下修改下标时的线程安全性，避免了锁的开销。</span></p></li><li><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">非阻塞算法：由于不使用阻塞队列，这种实现可以采用非阻塞算法来优化性能，尤其是在高并发的生产者-消费者模型中。</span></p></li><li><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">回绕逻辑：当数组达到其末端时，读写下标需要回绕到数组的开始，形成一个环状结构，这就是所谓的环形缓冲区。</span></p></li><li><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">饱和策略：需要定义当队列满时的行为，是等待、丢弃数据还是覆盖旧数据。</span></p></li><li><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">总的来说，不同的 QueueBuffer 实现方式适用于不同的使用场景</span></p></li></ol><p style="margin-bottom: 8px;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_9"></span><h4 data-cangjie-key="208" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-bottom: 8px;"><span style="font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">日志传输</span></h4></li></ul><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><img class="rich_pages wxw-img" data-backh="210" data-backw="578" data-imgfileid="503043776" data-ratio="0.362962962962963" src="https://oscimg.oschina.net/oscnet/f5fd8941-d2db-4445-8e7d-ff95fae1ddf5.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></p><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">鹰眼（EagleEye）和 SkyWalking 采用了不同的数据采集及传输策略，每种方法都有其适用场景和相应的权衡。</span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">鹰眼系统首先将数据存储到本地日志文件中，然后利用一个代理（agent）来收集这些日志并将其传输到服务端。这种基于日志加边车代理的方法使得数据采集可以在不直接干扰主应用逻辑的情况下进行，但这也意味着需要处理日志文件的管理和代理的维护。</span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">相比之下，SkyWalking 提供了 gRPC 和 Kafka 两种基于服务的数据传输方式，这使得数据可以更实时地传输到处理后端。gRPC 是一种高性能的远程过程调用（RPC）框架，Kafka 是一个分布式流处理平台，两者都能有效地处理大量的数据流。</span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">从架构上看，SkyWalking 采取了分离应用层埋点和中间件代码的策略，这在某种程度上实现了应用级别的透明性。用户不需要在应用代码中直接管理追踪逻辑，而是依赖中间件层的插件来自动完成数据的采集。然而，这种方式意味着当中间件需要升级时，相关的插件也可能需要更新，这可能在维护方面引入一些挑战。</span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">鹰眼的埋点方法由专门的中间件团队来维护，对于上层应用来说同样是透明的，这意味着应用开发者不需要关心数据采集的具体实现细节。这种方法非常适合阿里巴巴集团内部的环境，因为它能够提供统一的标准和容易控制的集成点。</span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">总的来说，这两种系统提供了不同的解决方案，各自的优点和挑战都值得在选择和实施追踪系统时予以考虑。</span></p><p style="margin-bottom: 8px;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_10"></span><h4 data-cangjie-key="233" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-bottom: 8px;"><span style="font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">数据埋点</span></h4></li></ul><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">在分布式链路追踪系统中，方法增强（通常称为「埋点」）指的是在代码中插入额外的逻辑来捕获和记录执行信息，这是实现追踪的核心技术。Dapper，谷歌的分布式追踪系统，提出的设计原则要求方法增强必须同时满足应用级透明性和低开销这两个关键条件：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">应用级透明：开发者不需要修改业务代码或仅需要极少的修改即可实现埋点，这意味着追踪逻辑对应用层是不可见或几乎不可见的。</span></p></li><li><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">低开销：埋点操作对系统的性能影响应当尽可能小，以避免追踪逻辑本身成为系统性能的瓶颈。</span></p></li></ol><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">现在，我们来比较阿里巴巴的 EagleEye 与开源项目 SkyWalking 在埋点技术上的不同做法：</span></p><p style="margin-bottom: 8px;"><br></p><span id="OSC_h5_11"></span><h5 data-cangjie-key="248" data-cangjie-leaf-block="true" data-type="heading-5" style="margin-bottom: 8px;"><span style="font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">硬编码</span></h5><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;"><br></span></p><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">EagleEye：阿里巴巴的 EagleEye 通过中间件层进行数据采集和追踪，通常这由集团的中间件团队负责维护。这种中间件集成方式允许上层应用无需知晓具体的追踪逻辑，因此在应用级别上保持了较高的透明度。然而，这种方法可能会在中间件升级时需要同步更新埋点逻辑，增加了维护的复杂度。</span></p><h5 data-cangjie-key="254" data-cangjie-leaf-block="true" data-type="heading-5" style="margin-bottom: 8px;"><br></h5><span id="OSC_h5_12"></span><h5 data-cangjie-key="254" data-cangjie-leaf-block="true" data-type="heading-5" style="margin-bottom: 8px;"><span style="font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">字节码增强</span></h5><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">SkyWalking：SkyWalking 提供了自动插桩的能力，通常通过 Java Agent 技术在运行时不侵入地修改字节码，插入追踪代码。这种方式对业务代码完全透明，开发者无需修改任何业务逻辑即可实现埋点。同时，SkyWalking 旨在保持低开销，以减少对应用性能的影响。由于它是一个开源项目，SkyWalking 更容易适应多样化的技术栈和快速发展的生态。</span></p><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;"><br></span></p><p style="margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space: break-spaces;background-color: rgb(255, 255, 255);font-size: 15px;letter-spacing: 1px;">两种方法各有优势和劣势，EagleEye 的中间件集成方式适合阿里巴巴这样拥有统一技术栈和强大内部支持的大型企业环境。而 SkyWalking 的自动插桩技术则提供了灵活性和广泛的社区支持，更适合多变的技术环境和需要快速适应新技术的公司。选择哪种埋点方式取决于企业的具体需求、技术栈的复杂性以及维护能力。</span></p><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><img class="rich_pages wxw-img" data-backh="416" data-backw="578" data-imgfileid="503043781" data-ratio="0.7203703703703703" src="https://oscimg.oschina.net/oscnet/02b0c104-99c2-46b2-af93-d3cc3574ec19.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></p><p style="margin-bottom: 8px;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_13"></span><h4 data-cangjie-key="270" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;color: rgb(0, 17, 255);">跨线程传递</span></h4></li></ul><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">在多线程并发调用环境下的数据链路埋点也是一个值得关注问题，当一个服务考虑性能问题可能会起多个线程同时调用其他不同的模块。链路系统如何保证这些调用还是符合 openTrace 规范，保证 traceId 和 spanId 有序。</span></p><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;"><br></span></p><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">目前 Java 生态下，普遍的思路是用父线程的 ThreadLocal 中拿到保存的 trace 信息，然后作为参数传递给子线程，子线程在初始化的时候设置 trace 信息来避免丢失。</span></p><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;"><br></span></p><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">值得关注的是，集团提供了 InheritableThreadLocals 的子类 TransmittableThreadLocal，解决了 InheritableThreadLocal 只能再 new Thread 的时候传递本地变量，无法应用到线程池的问题。可以应用来作链路追踪，传递变量等用途。美团也实现了类似的子类 TransmissibleThreadLocal。</span></p><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;"><br></span></p><p style="margin-bottom: 8px;text-align: center;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;"><img class="rich_pages wxw-img" data-backh="139" data-backw="578" data-imgfileid="503043783" data-ratio="0.23981481481481481" src="https://oscimg.oschina.net/oscnet/2250df53-b8a1-467b-87b6-5df0f2ef006b.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></p><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;text-align: center;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503043779" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/511961a3-41a2-4016-a594-ca4ac7e67ed0.png" data-type="png" data-w="422" style="outline: 0px;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></p><p style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;text-align: center;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;color: rgb(0, 17, 255);letter-spacing: 1px;">日志收集和分析</span></p><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">日志用来记录系统运行期间发生过的离散事件，在目前复杂的分布式系统中，很难只依靠 tail、grep、awk 来从单台机器的日志中挖掘信息了，往往还要有专门的全局查询和可视化功能。此时，从打印日志到分析查询之间，还隔着收集、缓冲、聚合、加工、索引、存储等若干个步骤，如下图所示：</span></p><p style="margin-bottom: 8px;text-align: center;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;"><img class="rich_pages wxw-img" data-backh="109" data-backw="578" data-imgfileid="503043780" data-ratio="0.18915801614763553" src="https://oscimg.oschina.net/oscnet/6b1e302e-c499-4621-8887-2ad847d858dd.png" data-type="png" data-w="867" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></p><p style="margin-bottom: 8px;"><br></p><p style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">提到日志实时分析，大部分人第一想到是社区很火 ELK Stack。ELK 方案上手难度小、开源材料众多、在社区中有大量的使用案例。于此同时，阿里巴巴集团也推出了对日志场景的解决方案产品日志服务 (SLS/Log) 。下面将先后介绍这两种框架并分析优劣。</span></p><p style="margin-bottom: 8px;"><br></p><span id="OSC_h4_14"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">开源的 ELK 方案</span></strong></span></h4><section style="margin-bottom: 8px;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;"><br></span></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">ELK Stack 是一个缩略词，用来描述由三个常见项目组成的堆栈：Elasticsearch、Logstash 和 Kibana。ELK Stack 通常被称为 Elasticsearch，作用是聚合来自所有系统和应用程序的日志，分析这些日志，并创建可视化来进行应</span><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space-collapse: break-spaces;font-size: 15px;letter-spacing: 1px;">用程序和基础设施监控、更快的故障排除、安全分析等。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space-collapse: break-spaces;font-size: 15px;letter-spacing: 1px;"><br></span></p><span id="OSC_h5_15"></span><h5 data-cangjie-key="311" data-cangjie-leaf-block="true" data-type="heading-5" style="box-sizing: inherit;font-weight: 700;color: rgb(34, 35, 40);font-size: 11pt;font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;letter-spacing: normal;white-space: pre-wrap;background-color: rgb(255, 255, 255);text-align: left;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">E = Elasticsearch&nbsp;</span></h5><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">Elasticsearch 是在 Apache Lucene 上构建的分布式搜索和分析引擎。对各种语言、高性能和无架构 JSON 文档的支持使 Elasticsearch 成为各种日志分析和搜索使用案例的理想选择。&nbsp;</span></p><h5 data-cangjie-key="317" data-cangjie-leaf-block="true" data-type="heading-5" style="box-sizing: inherit;font-weight: 700;color: rgb(34, 35, 40);font-size: 11pt;font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;letter-spacing: normal;white-space: pre-wrap;background-color: rgb(255, 255, 255);text-align: left;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></h5><span id="OSC_h5_16"></span><h5 data-cangjie-key="317" data-cangjie-leaf-block="true" data-type="heading-5" style="box-sizing: inherit;font-weight: 700;color: rgb(34, 35, 40);font-size: 11pt;font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;letter-spacing: normal;white-space: pre-wrap;background-color: rgb(255, 255, 255);text-align: left;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">L = Logstash</span></h5><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">Logstash 是一个开源数据摄取工具，允许从各种来源收集数据，转换数据，并将数据发送到希望的目标。</span></p><h5 data-cangjie-key="323" data-cangjie-leaf-block="true" data-type="heading-5" style="box-sizing: inherit;font-weight: 700;color: rgb(34, 35, 40);font-size: 11pt;font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;letter-spacing: normal;white-space: pre-wrap;background-color: rgb(255, 255, 255);text-align: left;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></h5><span id="OSC_h5_17"></span><h5 data-cangjie-key="323" data-cangjie-leaf-block="true" data-type="heading-5" style="box-sizing: inherit;font-weight: 700;color: rgb(34, 35, 40);font-size: 11pt;font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;letter-spacing: normal;white-space: pre-wrap;background-color: rgb(255, 255, 255);text-align: left;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">K = Kibana</span></h5><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">Kibana 是一种数据可视化和挖掘工具，可以用于日志和时间序列分析、应用程序监控和运营智能使用案例。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_18"></span><h4 data-cangjie-key="329" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;color: rgb(0, 17, 255);">收集与缓冲</span></h4></li></ul><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">写日志是在服务节点中进行的，但我们不可能在每个节点都单独建设日志查询功能。这不是资源或工作量的问题，而是分布式系统处理一个请求要跨越多个服务节点，为了能看到跨节点的全部日志，就要有能覆盖整个链路的全局日志系统。这个需求决定了每个节点输出日志到文件后，必须将日志文件统一收集起来集中存储、索引，由此便催生了专门的日志收集器。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">最初，ELK 中日志收集与下一节要讲的加工聚合的职责都是由 Logstash 来承担的，Logstash 除了部署在各个节点中作为收集的客户端（Shipper）以外，它还同时设有独立部署的节点，扮演归集转换日志的服务端（Master）角色。Logstash 有良好的插件化设计，收集、转换、输出都支持插件化定制，应对多重角色本身并没有什么困难。但是 Logstash 与它的插件是基于 JRuby 编写的，要跑在单独的 Java 虚拟机进程上，而且 Logstash 的默认的堆大小就到了 1GB。对于归集部分（Master）这种消耗并不是什么问题，但作为每个节点都要部署的日志收集器就显得太过负重了。后来，Elastic.co 公司将所有需要在服务节点中处理的工作整理成以 Libbeat 为核心的 Beats 框架，并使用 Golang 重写了一个功能较少，却更轻量高效的日志收集器 Filebeat。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">日志不追求绝对的完整精确，只追求在代价可承受的范围内保证尽可能地保证较高的数据质量。一种最常用的缓解压力的做法是将日志接收者从 Logstash 和 Elasticsearch 转移至抗压能力更强的队列缓存，譬如在 Logstash 之前架设一个 Kafka 或者 Redis 作为缓冲层，面对突发流量，Logstash 或 Elasticsearch 处理能力出现瓶颈时自动削峰填谷，甚至当它们短时间停顿，也不会丢失日志数据。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_19"></span><h4 data-cangjie-key="341" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;color: rgb(0, 17, 255);">加工与聚合</span></h4></li></ul><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">将日志集中收集之后，存入 Elasticsearch 之前，一般还要对它们进行加工转换和聚合处理。这是因为日志是非结构化数据，一行日志中通常会包含多项信息，如果不做处理，那在 Elasticsearch 就只能以全文检索的原始方式去使用日志，既不利于统计对比，也不利于条件过滤。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">Logstash 的基本职能是把日志行中的非结构化数据，通过 Grok 表达式语法转换为上面表格那样的结构化数据，进行结构化的同时，还可能会根据需要，调用其他插件来完成时间处理（统一时间格式）、类型转换（如字符串、数值的转换）、查询归类（譬如将 IP 地址根据地理信息库按省市归类）等额外处理工作，然后以 JSON 格式输出到 Elasticsearch 中（这是最普遍的输出形式，Logstash 输出也有很多插件可以具体定制不同的格式）。有了这些经过 Logstash 转换，已经结构化的日志，Elasticsearch 便可针对不同的数据项来建立索引，进行条件查询、统计、聚合等操作的了。</span></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_20"></span><h4 data-cangjie-key="350" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;color: rgb(0, 17, 255);">存储与查询</span></h4></li></ul><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 15px;letter-spacing: 1px;text-align: left;white-space-collapse: break-spaces;">Elasticsearch 是整个 Elastic Stack 技术栈的核心，其他步骤的工具，如 Filebeat、Logstash、Kibana 都有替代品，有自由选择的余地，唯独 Elasticsearch 在日志分析这方面完全没有什么值得一提的竞争者，几乎就是解决此问题的唯一答案。核心原因是 Elasticsearch 的优势正好与日志分析的需求完美契合：</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">数据特征的角度看，日志是典型的基于时间的数据流。日志虽然增长速度很快，但已写入的数据几乎没有再发生变动的可能。以按日索引为例，由于你能准确地预知明天、后天的日期，因此全部索引都可以预先创建，这免去了动态创建的寻找节点、创建分片、在集群中广播变动信息等开销</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">从数据价值的角度看，日志基本上只会以最近的数据为检索目标，随着时间推移，早期的数据将逐渐失去价值。这点决定了可以很容易区分出冷数据和热数据，进而对不同数据采用不一样的硬件策略。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">从数据使用的角度看，分析日志很依赖全文检索和即席查询，对实时性的要求是处于实时与离线两者之间的「近实时」，即不强求日志产生后立刻能查到，但也不能接受日志产生之后按小时甚至按天的频率来更新，这些检索能力和近实时性，也正好都是 Elasticsearch 的强项。</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">Elasticsearch 只提供了 API 层面的查询能力，它通常搭配同样出自 Elastic.co 公司的 Kibana 一起使用，可以将 Kibana 视为 Elastic Stack 的 GUI 部分。Kibana 尽管只负责图形界面和展示，但它提供的能力远不止让你能在界面上执行 Elasticsearch 的查询那么简单。Kibana 宣传的核心能力是「探索数据并可视化」，即把存储在 Elasticsearch 中的数据被检索、聚合、统计后，定制形成各种图形、表格、指标、统计，以此观察系统的运行状态，找出日志事件中潜藏的规律和隐患。</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><span id="OSC_h4_21"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">阿里的 SLS 方案</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">阿里云日志服务 SLS 基于阿里云自研灵活索引的一站式云原生可观测数据分析平台。为 Log/Metric/Trace 等数据提供大规模、低成本、实时平台化服务。一站式提供数据采集、加工、分析、告警可视化与投递功能。</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_22"></span><h4 data-cangjie-key="374" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">收集与缓存</span></h4></li></ul><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">Logtail 是集团云提供的日志服务（SLS）的一个组件，它作为日志采集客户端，提供了一种高效且易于配置的方式来接入日志数据。由于 Logtail 是用 C++语言编写的，它具有较高的性能和较低的资源消耗，适合在各种环境下运行，包括资源受限的环境。</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">Logtail 的主要功能包括：</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">无侵入式采集：Logtail 能够监视指定的日志文件，实时采集更新的日志数据，而无需修改现有的应用程序代码。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">多种日志格式支持：除了采集标准的文本日志文件，Logtail 还能够采集其他类型的日志，如 MySQL 的二进制日志（binlog）、HTTP 数据、以及容器日志等。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">容器化环境支持：Logtail 提供对容器友好的支持，无论是标准容器还是处于 Kubernetes 集群中的容器，Logtail 都能够灵活地采集日志数据。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">异常处理：Logtail 有一套完备的机制来处理在日志采集过程中可能出现的异常，如当遇到网络故障或服务端异常时，它可以通过主动重试或将数据缓存到本地等方式来确保数据的安全和完整性。</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">由于 Logtail 的这些特性，它成为了一个非常强大且可靠的日志采集工具，特别是在需要确保日志数据不丢失的情况下。它的无侵入性质意味着开发者或运维人员可以在不影响现有应用程序的情况下部署日志采集，而其对容器和微服务架构的友好支持则使其非常适合现代云原生应用。</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">Logtail 作为日志采集客户端，其文件采集流程设计得非常全面，涵盖了从日志生成到传输的多个关键环节。以下是 Logtail 文件采集流程的六个主要步骤：</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="403:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="403:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">文件监听</span><span data-cangjie-key="403:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="403:4" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">：Logtail 监控配置中指定的日志文件或目录，以便于检测文件的创建、更新或者删除事件。这通常通过文件系统的通知机制来实现，如 Linux 上的 inotify。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="406:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="406:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">文件读取</span><span data-cangjie-key="406:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="406:4" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">：一旦文件发生变化，Logtail 会读取文件内容。对于更新的文件，Logtail 保持追踪当前的读取进度，确保从上次停止的地方继续读取，避免重复或遗漏。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="409:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="409:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">日志处理</span><span data-cangjie-key="409:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="409:4" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">：读取到的原始日志数据会经过初步处理，比如分割日志行、解析字段等，将原始文本转换为结构化的日志记录。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="412:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="412:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">日志过滤</span><span data-cangjie-key="412:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="412:4" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">：用户可以定义过滤规则，根据日志内容或属性决定哪些日志记录应该被采集，哪些应该被忽略。这一步可以减少无用数据的传输和存储，优化成本和性能。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="415:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="415:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">日志聚合</span><span data-cangjie-key="415:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="415:4" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">：在发送之前，Logtail 可以对日志进行批处理，合并多个日志记录为一个数据包，减少网络请求的次数，提高数据传输效率。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="418:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="418:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">数据发送</span><span data-cangjie-key="418:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="418:4" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">：聚合后的日志数据会被发送到配置的目标，例如阿里云日志服务 SLS 的服务器。数据发送过程中，Logtail 会处理网络异常等问题，确保数据的可靠传输。</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">以上六个环节构成了 Logtail 文件采集的完整流程，每个步骤都是为了确保日志数据的准确、高效、可靠采集。在高可用性和高性能的要求下，Logtail 的设计使得日志数据能够从源头到目的地的迁移过程中保持完整性和一致性。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></p><section style="margin-top: 8px;line-height: 1.75em;text-align: center;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-backh="321" data-backw="578" data-imgfileid="503043782" data-ratio="0.5546296296296296" src="https://oscimg.oschina.net/oscnet/181e7309-36bb-4657-bc7b-c7b349b6353e.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">对比开源的 logstash，和 logtail 的对比如下：</span></p><table width="714"><colgroup style="box-sizing: inherit;"><col width="187" style="box-sizing: inherit;"><col width="264" style="box-sizing: inherit;"><col width="263" style="box-sizing: inherit;"></colgroup><tbody style="box-sizing: inherit;"><tr data-cangjie-key="431" data-sticky="false" style="box-sizing: inherit;height: 37px;"><td data-cangjie-key="433" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);background-color: rgb(116, 182, 2);"><p><span style="box-sizing: inherit;color: rgb(250, 250, 250);font-size: 15px;">功能项</span></p></td><td data-cangjie-key="438" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);background-color: rgb(116, 182, 2);"><p><span style="box-sizing: inherit;color: rgb(250, 250, 250);font-size: 15px;">logstash</span></p></td><td data-cangjie-key="443" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);background-color: rgb(116, 182, 2);"><p><span style="box-sizing: inherit;color: rgb(250, 250, 250);font-size: 15px;">logtail</span></p></td></tr><tr data-cangjie-key="448" data-sticky="false" style="box-sizing: inherit;height: 33px;"><td data-cangjie-key="450" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">日志读取</span></p></td><td data-cangjie-key="455" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">轮询</span></p></td><td data-cangjie-key="460" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">事件触发</span></p></td></tr><tr data-cangjie-key="465" data-sticky="false" style="box-sizing: inherit;height: 33px;"><td data-cangjie-key="467" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">文件轮转</span></p></td><td data-cangjie-key="472" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持</span></p></td><td data-cangjie-key="477" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持</span></p></td></tr><tr data-cangjie-key="482" data-sticky="false" style="box-sizing: inherit;height: 43px;"><td data-cangjie-key="484" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">Failover 处理 (本地 checkpoint)</span></p></td><td data-cangjie-key="489" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持</span></p></td><td data-cangjie-key="494" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持</span></p></td></tr><tr data-cangjie-key="499" data-sticky="false" style="box-sizing: inherit;height: 33px;"><td data-cangjie-key="501" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">通用日志解析</span></p></td><td data-cangjie-key="506" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持 grok（基于正则表达式）解析</span></p></td><td data-cangjie-key="511" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持正则表达式解析</span></p></td></tr><tr data-cangjie-key="516" data-sticky="false" style="box-sizing: inherit;height: 47px;"><td data-cangjie-key="518" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">特定日志类型</span></p></td><td data-cangjie-key="523" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持 delimiter、key-value、json 等主流格式</span></p></td><td data-cangjie-key="528" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持 key-value 格式</span></p></td></tr><tr data-cangjie-key="533" data-sticky="false" style="box-sizing: inherit;height: 33px;"><td data-cangjie-key="535" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">数据发送压缩</span></p></td><td data-cangjie-key="540" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">插件支持</span></p></td><td data-cangjie-key="545" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">LZ4</span></p></td></tr><tr data-cangjie-key="550" data-sticky="false" style="box-sizing: inherit;height: 33px;"><td data-cangjie-key="552" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">数据过滤</span></p></td><td data-cangjie-key="557" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持</span></p></td><td data-cangjie-key="562" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持</span></p></td></tr><tr data-cangjie-key="567" data-sticky="false" style="box-sizing: inherit;height: 33px;"><td data-cangjie-key="569" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">数据 buffer 发送</span></p></td><td data-cangjie-key="574" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">插件支持</span></p></td><td data-cangjie-key="579" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持</span></p></td></tr><tr data-cangjie-key="584" data-sticky="false" style="box-sizing: inherit;height: 33px;"><td data-cangjie-key="586" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">发送异常处理</span></p></td><td data-cangjie-key="591" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">插件支持</span></p></td><td data-cangjie-key="596" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持</span></p></td></tr><tr data-cangjie-key="601" data-sticky="false" style="box-sizing: inherit;height: 33px;"><td data-cangjie-key="603" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">运行环境</span></p></td><td data-cangjie-key="608" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">JRuby 实现，依赖 JVM 环境</span></p></td><td data-cangjie-key="613" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">C++实现，无特殊要求</span></p></td></tr><tr data-cangjie-key="618" data-sticky="false" style="box-sizing: inherit;height: 33px;"><td data-cangjie-key="620" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">线程支持</span></p></td><td data-cangjie-key="625" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持多线程</span></p></td><td data-cangjie-key="630" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持多线程</span></p></td></tr><tr data-cangjie-key="635" data-sticky="false" style="box-sizing: inherit;height: 33px;"><td data-cangjie-key="637" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">热升级</span></p></td><td data-cangjie-key="642" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">不支持</span></p></td><td data-cangjie-key="647" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持</span></p></td></tr><tr data-cangjie-key="652" data-sticky="false" style="box-sizing: inherit;height: 33px;"><td data-cangjie-key="654" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">中心化配置管理</span></p></td><td data-cangjie-key="659" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">不支持</span></p></td><td data-cangjie-key="664" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持</span></p></td></tr><tr data-cangjie-key="669" data-sticky="false" style="box-sizing: inherit;height: 33px;"><td data-cangjie-key="671" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">运行状态自检</span></p></td><td data-cangjie-key="676" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">不支持</span></p></td><td data-cangjie-key="681" data-type="table-cell" rowspan="1" colspan="1" data-container-block="true" style="box-sizing: inherit;padding: 8px 7px;border-color: rgb(217, 217, 217);"><p><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;">支持 cpu/内存阈值保</span></p></td></tr></tbody></table><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">总体来说，logstash 支持所有主流日志类型，插件支持最丰富，可以灵活 DIY，但性能较差，JVM 容易导致内存使用量高。logtail 占用机器 cpu、内存资源最少，结合阿里云日志服务的 E2E 体验良好，但目前对特定日志类型解析的支持较弱。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"><br></span></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_23"></span><h4 data-cangjie-key="689" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">加工与聚合</span></h4></li></ul><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">阿里云日志服务（SLS）提供的数据加工功能是一项强大的特性，使得用户能够在日志数据进入存储和分析阶段之前对其进行预处理。这些功能对于数据的清洗、转换、安全保护和增强都非常关键，尤其是在构建复杂的数据处理流水线时。以下是数据加工功能的几个关键点和它们的应用场景。</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="697:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="697:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">数据规整</span><span data-cangjie-key="697:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="697:4" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">：这个功能允许用户对无结构或半结构化的日志进行字段提取和格式转换，从而得到结构化数据。这对于后续的实时处理、分析和数据仓库计算来说是非常重要的，因为结构化数据更容易进行查询和分析。</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="700:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="700:0" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">数据富化</span><span data-cangjie-key="700:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="700:4" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;color: rgb(0, 0, 0);">：数据富化功能可以通过字段连接（JOIN）操作，将日志数据（如订单日志）和其他维度数据（如用户信息表）相结合。这样可以为原始日志添加更丰富的上下文信息，提高数据分析的深度和准确性。</span><br></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="703:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="703:0" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">数据流转</span><span data-cangjie-key="703:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="703:4" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;color: rgb(0, 0, 0);">：流转功能支持跨地域的数据传输，允许用户将数据从一个地域转移到另一个地域。例如，可以将海外地域的日志数据传输到中心地域，实现日志的集中化管理和分析。</span><br></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="706:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="706:0" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">数据脱敏</span><span data-cangjie-key="706:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="706:4" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;color: rgb(0, 0, 0);">：数据脱敏对于符合隐私法规和公司政策是必不可少的。SLS 可以在日志数据中识别并隐藏或替换敏感信息，比如密码、手机号或地址等，来保护用户隐私。</span><br></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="709:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="709:0" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">数据过滤</span><span data-cangjie-key="709:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="709:4" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;color: rgb(0, 0, 0);">：数据过滤允许用户基于特定条件选择性地提取日志条目。这可以用来隔离关键服务的日志，以便进行重点监控和分析。</span><br></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">应用场景：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="715:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="715:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">数据规整（一对一）</span><span data-cangjie-key="715:9" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="715:9" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">：从单个源 Logstore 读取数据，经过加工处理后，输出到单个目标 Logstore，适用于简单的加工任务。</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="718:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="718:0" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">数据分派（一对多）</span><span data-cangjie-key="718:9" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="718:9" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;color: rgb(0, 0, 0);">：从单个源 Logstore 读取数据，根据不同的规则或条件将数据加工后分发到多个目标 Logstore 中，适用于需要将日志按类型或用途分开处理的场景。</span><br></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="721:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="721:0" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);">数据融合（多对一）</span><span data-cangjie-key="721:9" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="721:9" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;color: rgb(0, 0, 0);">：从多个源 Logstore 读取数据，将它们合并或加工后输出到一个目标 Logstore 中，适用于需要综合多个数据源进行统一分析的场景。</span><br></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">通过这些数据加工功能，SLS 能够提供灵活、强大的数据处理能力，帮助用户更好地管理和分析日志数据，同时保护敏感信息。这对于需要实时数据洞察和快速响应的企业来说是非常有价值的。</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_24"></span><h4 data-cangjie-key="725" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">存储和查询</span></h4></li></ul><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">阿里云日志服务（SLS）的存储引擎专门为处理可观测数据而设计，包括日志、指标和追踪数据。它旨在提供一个统一和高效的解决方案，用以满足大规模数据存储和快速查询的需求。下面是对这个存储引擎的两个关键特性的进一步解读：</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">统一性（Unified）</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">多类型数据支持：统一的存储引擎意味着它能够存储和处理多种类型的可观测数据，无论是结构化的日志数据、时间序列的指标数据还是分布式追踪的信息。这样的设计减少了需要使用和管理多个存储系统的复杂性。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">统一查询接口：有了统一的存储引擎，用户可以通过一个共同的查询接口访问不同类型的数据，这提高了使用效率，并允许跨数据类型的分析和关联。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">统一的管理和运维：统一存储引擎也简化了数据的管理和运维任务，因为它减少了需要学习和监控的工具和接口的数量。</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">性能（Fast）</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">高速写入：SLS 的存储引擎针对高速数据写入进行了优化，以支持大数据量的实时采集。这对于高流量网站、大型分布式应用和 IoT 设备等场合至关重要。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">高效查询：SLS 存储引擎还针对快速查询进行了优化，确保即使在涉及大规模数据集时，也能够快速返回结果。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">适应大规模场景：阿里云天然服务于各种规模的企业，包括那些拥有超大规模数据场景的企业。SLS 的存储引擎设计考虑了这些场景的需求，保证了扩展性和稳定性。</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">总体来说，SLS 的存储引擎通过统一和快速的写入与查询功能，为处理大规模的可观测数据提供了一个强大、高效且易于管理的解决方案。整体架构如下：</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: center;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space-collapse: break-spaces;font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-backh="156" data-backw="578" data-imgfileid="503043785" data-ratio="0.26944444444444443" src="https://oscimg.oschina.net/oscnet/ec04f6ad-55ed-4b32-af54-fec3c93bd4b7.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space-collapse: break-spaces;font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">接入层协议支持：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">接入层的设计非常灵活，支持多种数据写入协议，这意味着无论数据来源是什么（如应用程序、服务器、网络设备等），都能够顺利与 SLS 集成。</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">写入的数据首先被放入一个先进先出（FIFO）的管道中，这个管道模型类似于 Apache Kafka 的消息队列（MQ）模型，提供了高吞吐量和可靠性。</span><br></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">管道和数据消费：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">管道不仅存储数据，还支持数据消费，允许各类下游系统（如实时分析、告警、可视化工具等）接入并处理数据。</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">这种设计实现了数据的异步处理，增强了系统的整体扩展性和弹性。</span></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">索引结构和存储优化：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">在管道之上，存储引擎为不同类型的数据（Traces/Logs 和 Metrics）构建了两套索引结构。</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">利用倒排索引（Inverted Index）、列式存储（Columnar Storage）以及压缩（Compaction）等技术，SLS 能够提供快速的查询性能，同时优化存储空间的使用效率。</span></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">统一的进程架构：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">上述所有功能都在一个统一的进程内实现，这意味着可以在单一的系统中处理日志、指标和追踪数据，大大简化了运维和部署的复杂性和成本。</span></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">纯分布式框架：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">SLS 的存储引擎基于纯分布式架构构建，支持水平扩展，可以随着数据量的增长而增加更多的存储节点。</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">单个存储节点（Store）能够处理极高的数据量，最多支持每天处理 PB 级别的数据写入，适合大规模的数据中心和云环境。</span></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">在查询方面，SLS 的查询和分析引擎整合了多种查询语法和分析能力，提供了一个强大的查询环境：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">关键词查询：</span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">支持对存储在 SLS 中的日志数据进行全文搜索，类似于其他日志管理系统中的关键词查询功能。这主要用于快速查找特定日志条目或筛选日志信息。</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">PromQL 的语法兼容：</span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">PromQL 是 Prometheus 查询语言，专门用于时间序列数据的查询。SLS 兼容 PromQL 语法，使得用户能够利用 PromQL 进行指标数据的查询和分析。</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">SQL 作为顶层分析语言：1、</span><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">为了实现对可观测数据的深入分析，SLS 扩展了 SQL 语言的能力，使其能够支持连接关键词查询、PromQL 等语法；2、通过 SQL，用户可以执行更复杂的数据操作，如聚合、排序、联接和子查询等，这为数据分析提供了极大的灵活性。</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">外部数据源和机器学习模型的集成：</span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">SLS 的 SQL 扩展还允许用户连接外部数据库和机器学习模型。这意味着用户可以将 SLS 中的数据与其他数据源相结合，或使用机器学习算法进行高级分析。</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">可观测数据的融合分析：</span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">SLS 使得日志、指标和追踪数据能够在一个统一的分析环境中进行关联和分析。这种融合分析能力使用户能够以多维度来理解和分析系统的行为和性能。</span></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">通过这样的设计，SLS 提供了一个功能全面的查询和分析环境，可以满足从简单的文本搜索到复杂的数据挖掘和分析的各种需求。对于开发人员、运维人员和数据分析师来说，SLS 的查询功能极大地提高了他们处理和分析可观测数据的效率和准确性。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-backh="263" data-backw="578" data-imgfileid="503043786" data-ratio="0.4546296296296296" src="https://oscimg.oschina.net/oscnet/c1a24cd6-e411-47e7-887e-45e5d4a107c2.png" data-type="png" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="background-color: rgb(255, 255, 255);color: rgb(0, 0, 0);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;text-align: left;white-space-collapse: break-spaces;font-size: 15px;letter-spacing: 1px;"><br></span></p><span id="OSC_h4_25"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">ELK 对比 SLS</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">ELK 的核心 ElasticSearch 基于 Lucene 全文索引实现，面向 Document 类型，构建一套完整的可观测分析平台需要组合多款服务，这其中包括 logstash、Kibana、Kafka、Flink、TSDB、Prometheus 等服务，对于规模、查询能力等方面存在一定限制，整体成本较高。</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">日志服务 SLS 基于阿里云自研灵活索引，支持一站式云原生可观测性，多规格多场景支持。</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">详细对比下两者在以下方面的差异：</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">性能：在同样成本的介质上部署，SLS 能够提供更低的延时、以及更稳定的查询性能。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">成本：这里的成本不光是部署成本，还需要包括使用成本。要维护良好状态的 ELK 集群，需要从容量规划、稳定性保障、性能调优、数据高可用，数据如何在不同系统间关联等多个方面下功夫。SLS 全托管免运维无需花费额外人力投入。百 TB 规模下，SLS 综合成本是 ELK 的 44%。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">易用性：SLS 对开源协议及组件相比 ELK 有更好的兼容性。利用 ELK 构建完整可观测分析平台需组合多款服务，这其中包括 Logstash、Kibana、Kafka、Flink、TSDB、Prometheus 等。SLS 在这个场景上无需多个组件搭配，支持一站式数据监控分析平台能力。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">互联互通与二次开发：在可观测场景中，我们需要跨多个数据源进行关联分析 SLS 可观测数据统一存储支持 log metric trace 数据存储，打通数据孤岛，并且提供开源友好的 API 接口进行使用。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">附加能力（新算子、告警等）：开源 ELK 仅支持指标分析聚合、分桶聚合、管道分析、矩阵分析有限的聚合算法。SLS 针对数据分析场景支持 30+ 聚合计算函数，丰富的机器学习函数以及多渠道数据源，是 ELK 提供操作符的 5 倍，充分发掘数据分析能力。除此之外，SLS 内置告警功能可以快速开箱即用，无需搭建系统。</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);font-size: 15px;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503043784" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/2a6f9cf1-ff88-4688-b821-2e2b03f1b26d.png" data-type="png" data-w="256" style="outline: 0px;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;font-size: 15px;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);text-align: center;line-height: normal;"><span style="outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;">参考文章</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">﻿</span><span style="box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">https://icyfenix.cn/distribution/observability/tracing.html</span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">﻿</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">﻿</span><span style="box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">https://tech.meituan.com/2023/04/20/traceid-google-dapper-mtrace.html</span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">﻿</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">﻿</span><span style="box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">https://tech.meituan.com/2022/07/21/visualized-log-tracing.html</span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">﻿</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">﻿</span><span style="box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">https://developer.aliyun.com/article/1065820#slide-4</span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">﻿</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">﻿</span><span style="box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">https://aws.amazon.com/cn/what-is/elk-stack/</span></section></li></ol><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><p style="margin-bottom: 0px;outline: 0px;text-wrap: wrap;background-color: rgb(255, 255, 255);font-size: 11pt;font-family: DengXian;color: rgb(0, 0, 0);letter-spacing: normal;text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503043787" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e092c0b6-22ea-4620-ad6b-e813098be2a2.png" data-type="png" data-w="256" style="outline: 0px;font-size: 14.6667px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 133px !important;" referrerpolicy="no-referrer"></p><p style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.75em;text-align: center;"><span style="outline: 0px;box-sizing: inherit;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;">团队介绍</span></p><section style="margin-bottom: 0px;margin-top: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">我们来自淘天集团的营销与平台策略技术。我们支撑大促 （双 11、618 等）和日销业务；同时我们也直面竞对，深入参与淘宝好价、百亿补贴、聚划算等日销业务的价格心智打造。秉承「简单、开放、自驱」的技术文化，在使命与责任中互相成就，共同成长，践行让业务先赢，技术氛国浓郁。</span><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"></span></section><p><br></p><section data-role="outer" label="Powered by 135editor.com" style="margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;visibility: visible;"><section style="margin-top: 5px;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span><span style="outline: 0px;"><strong style="outline: 0px;">&nbsp;拓展阅读&nbsp;</strong></span><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span></section><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;min-height: 24px;clear: both;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect" textvalue="3DXR 技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">3DXR 技术</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect" textvalue="终端技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">终端技术</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect" textvalue="音视频技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">音视频技术</a></section><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect" textvalue="服务端技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">服务端技术</a><span style="outline: 0px;letter-spacing: 0.544px;">&nbsp;|&nbsp;</span><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect" textvalue="技术质量" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">技术质量</a>&nbsp;|&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect" textvalue="数据算法" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);cursor: pointer;">数据算法</a></p><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><br></p><section class="mp_profile_iframe_wrp" style="margin-bottom: 24px;outline: 0px;"><mp-common-profile class="custom_select_card mp_profile_iframe js_wx_tap_highlight" data-pluginname="mpprofile" data-id="MzAxNDEwNjk5OQ==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;wxfrom=19" data-nickname="大淘宝技术" data-alias="AlibabaMTT" data-signature="大淘宝技术官方账号" data-from="2" data-index="0" data-origin_num="695" data-isban="0" data-biz_account_status="0" data-weui-theme="light" data-is_biz_ban="0"></mp-common-profile></section></section><section style="line-height: 1.75em;"><section style="display: none;line-height: 1.75em;"><br></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - 大淘宝技术（AlibabaMTT）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/10984756</guid>
            <link>https://my.oschina.net/u/4662964/blog/10984756</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
    </channel>
</rss>
