<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 19 Mar 2024 10:29:14 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[数字新纪元：2023 年元宇宙白皮书全景解读]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div style="text-align:start"><div><div><div><p style="margin-left:0; margin-right:0">中国信息通信研究院和虚拟现实与元宇宙产业联盟（XRMA）于 2023 年 11 月，发布了《元宇宙白皮书（2023 年）》。以下是该白皮书的核心内容概要：</p><ol><li><p style="margin-left:0; margin-right:0"><strong>发展背景与概念内涵</strong>：</p><ul><li>元宇宙概念的流行反映了信息技术发展的趋势，是数字经济与实体经济融合的高级形态。</li><li>元宇宙的核心功能是数字网络空间与物理世界的开放互联与深度融合。</li><li>元宇宙的发展路径分为虚拟型和增强型两大类，涉及技术、体验、经济与社会多维视图。</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>体系架构与发展趋势</strong>：</p><ul><li>元宇宙技术产业体系包括基础设施层、平台赋能层、前端体验层和创新应用层。</li><li>元宇宙将形成新信息形态、新数字器官、新经济模式、新社会景观等发展趋势。</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>元宇宙技术产业要素</strong>：</p><ul><li>元宇宙产业体系的核心是前端体验层和平台赋能层。</li><li>智能终端、3D 沉浸影音、沉浸式计算云服务平台和 Web3 数据资产与交易服务平台是关键技术要素。</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>发展阶段与存在问题</strong>：</p><ul><li>元宇宙发展分为三时期五阶段，包括要素准备时期、生态塑型时期和生态成熟时期。</li><li>面临的问题包括技术生态不成熟、战略资源投入缩减、潜在风险等。</li></ul></li><li><p style="margin-left:0; margin-right:0"><strong>发展建议</strong>：</p><ul><li>技术创新：加大沉浸式技术和分布式信任技术的研发投入。</li><li>产业推进：激活元宇宙生态系统，加快关键领域的落地推广。</li><li>应用示范：探索多元应用场景，提高概念落地的认知程度。</li><li>标准体系：推进元宇宙相关标准的研究与制定。</li><li>监管治理：适时开展元宇宙监管治理研究，引导形成价值共识。</li><li>国际合作：加大国际合作，提升国际影响力。</li></ul></li></ol><p style="margin-left:0; margin-right:0">白皮书还提供了详细的图表和案例分析，以及对未来元宇宙发展的展望和建议。</p></div></div></div></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">报告详情可至<strong><span style="color:#333333"><span style="background-color:#f39c12">「开源中国 APP - 报告模块」</span></span></strong><span style="color:#333333">下载</span>查看。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">APP 下载地址：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="300" src="https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png" width="300" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>（<em>目前仅提供 Android 版本）</em></strong></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 09:59:12 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283794</guid>
            <link>https://www.oschina.net/news/283794</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[日本政府将开始探讨 AI 法律监管]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">日本共同社<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fenglish.kyodonews.net%2Fnews%2F2024%2F03%2F105fd4dbbefc-japan-considering-legally-binding-regulations-for-ai-developers.html%23google_vignette" target="_blank">消息</a>称，日本政府正在考虑对大型 AI 系统开发商制定具有法律约束力的法规，以确保他们采取措施应对虚假信息和其他风险。</span></p><p><span style="color:#000000">尽管该政府此前倾向于自愿采取此类措施，但出于对 AI 潜在滥用的担忧，日本政府已经认识到有必要制定类似于欧盟和其他国家所采取的惩罚性法规。他们计划召集 AI 专家委员会讨论该问题，并考虑将新规定纳入将于六月左右编制的经济和财政管理政策指南中。</span></p><p><span style="color:#000000">日本计划不久将发布指导方针，列出包括「以人为本」和安全使用 AI 在内的 10 项原则。根据其执政党自民党一个项目小组上个月发布的草案，开发先进技术（例如生成型 AI 聊天机器人 ChatGPT）的企业将被指定为「AI 基础模型开发商」。</span></p><p><img height="337" src="https://oscimg.oschina.net/oscnet/up-e19e4d21a997f0242f02a316fae82bdf18e.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">在高风险领域使用 AI 的企业将被要求进行内部或外部安全验证，并与政府共享风险评估。政府指定的开发商还将被要求向政府或第三方机构报告其合规状况。如果不遵守规定，政府可以要求报告或进行现场检查，并对违规行为处以罚款和其他处罚。</span></p><p><span style="color:#000000">此前，欧洲议会本月早些时候通过了世界上第一个全面的 AI 法案，预计将于 2026 年生效，并对违规行为处以巨额罚款。拜登 - 哈里斯政府也宣布批准了一份安全软件开发认证表，任何提供政府将使用的软件的公司都需要填写该表格。</span></p><p><strong><span style="color:#000000">相关阅读：</span></strong></p><ul><li style="text-align:start"><a href="https://www.oschina.net/news/282896/secure-software-development-attestation-form" target="_blank">美国政府软件要求提供安全软件开发认证表</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 08:03:12 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283771</guid>
            <link>https://www.oschina.net/news/283771</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[聊聊 Android、iOS 开发者在 Unity 桥接开发过程中有哪些必备技能]]>
            </title>
            <description>
                <![CDATA[<h1 class="header article-title"><a href="https://www.oschina.net/question/4700705_2331821">高手问答第 314 期 —— 聊聊 Android、iOS 开发者在 Unity 桥接开发过程中有哪些必备技能</a><div class="ui red label horizontal" data-tooltip="置顶">顶</div></h1><div class="extra ui horizontal list meta-wrap"><div class="item"><a href="https://my.oschina.net/u/4700705" class="__user"><span>小白兔爱吃大灰狼</span></a> 发布于 29 分钟前
                    </div><div class="item">阅读 31</div><div class="item collect-btn " data-id="2331821" data-user-id="4700705" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i> 收藏 <span data-collect-count="" data-id="2331821" data-obj-type="2">0</span></div><div class="item comment-count"><a href="https://www.oschina.net/question/4700705_2331821#comments" class="normal"><i class="comment outline icon"></i> 答案 <span data-article-reply-count="">0</span></a></div></div><div class="tags"><a class="ui horizontal label" href="https://www.oschina.net/question/topic/masteronline" target="_blank"><img src="https://static.oschina.net/uploads/logo/masteronline_9WTeU.png" referrerpolicy="no-referrer">高手问答</a></div><div class="content" id="articleContent"><p><span><span><span><span><span><span>Unity</span></span></span><span><span><span>技术作为一项跨平台开发引擎，在游戏领域表现出色的同时，也在横跨混合现实、虚拟社交等多个领域大放异彩。其技术地位不断凸显，成为开发者追逐的热门技能之一。</span></span></span></span></span></span></p><p><span><span><span><span><span><span>对于初次进行 Unity 桥接的 Android 和 iOS 开发者来说，他们可能会面临原生层面的诸多挑战。如何保证通信接口的一致性、处理应用内多个 Unity 视图的渲染、以及建立高效的调试流程等问题，成为他们面对和解决的关键挑战。掌握这些关键技能和知识将为他们顺利进行 Unity 桥接开发提供重要支持。</span></span></span></span></span></span></p><p><strong><span><span><span><span><span><span>OSCHINA </span></span></span><span><span><span>本期高手问答 (3 月 20 日 - 3 月 26 日) 我们请来了<a href="https://my.oschina.net/u/7101898" rel="nofollow"><span style="color:#3370ff"><span><span>单好强老师</span></span></span></a>和大家一起聊聊 Android、iOS 开发者在 Unity 桥接开发过程中有哪些关键技能。</span></span></span></span></span></span></strong></p><p><span><span><span><span><span><span>可讨论的问题包括但不限于：</span></span></span></span></span></span></p><ul><li><span><span><span><span><span><span>Unity</span></span></span><span><span><span>在混合项目中的接入编译面临哪些挑战？</span></span></span></span></span></span></li></ul><ul><li><span><span><span><span><span><span>Unity</span></span></span><span><span><span>与 Android、iOS 桥接的通信中遇到的挑战有哪些？</span></span></span></span></span></span></li></ul><ul><li><span><span><span><span><span><span>Unity</span></span></span><span><span><span>在原生实现多个视图实例中遇到的挑战有哪些？</span></span></span></span></span></span></li></ul><ul><li><span><span><span><span><span><span>Unity</span></span></span><span><span><span>与原生调试时，在提高调试效率上面临的挑战有哪些？</span></span></span></span></span></span></li></ul><p><span><span><span><span><span><span>其他关于 Unity 与原生桥接的更多内容，也欢迎积极提问。</span></span></span></span></span></span></p><h3><span><span><span><strong><span><span><span>嘉宾介绍</span></span></span></strong></span></span></span></h3><p><span><span><span><span><span><span>单好强，荔枝集团业务架构客户端负责人，在跨平台技术领域拥有丰富的研究和实践经验。他负责搭建跨端技术的基础设施和业务支持系统，致力于推动跨平台技术的应用和发展。</span></span></span></span></span></span></p><p><img alt="" height="360" src="https://oscimg.oschina.net/oscnet/up-8694fff46b7abd907ee7822403a76a438e5.png" width="360" referrerpolicy="no-referrer"></p><p><span><span><span><span><span><span>为了鼓励踊跃提问，荔枝集团会在问答结束后从提问者中抽取 5 名幸运会员赠予赛嘉电动牙刷（型号：SG-659）。</span></span></span></span></span></span></p><p><span><span><span><span><span><span><img alt="" height="444" src="https://oscimg.oschina.net/oscnet/up-600f292e3fbc2c32a136845d9e80bd3d8e0.jpg" width="250" referrerpolicy="no-referrer"></span></span></span></span></span></span></p><p>&nbsp;</p><div><p><span style="background-color:#ffffff; color:#27ae60">OSChina 高手问答一贯的风格，不欢迎任何与主题无关的讨论和喷子。</span></p><p>下面欢迎大家就 「<span><span><span><span><span><span>Unity 与原生桥接</span></span></span></span></span></span>」<span><span>&nbsp;</span>相关</span>问题向<strong><span><span><span><span><span><span><a href="https://my.oschina.net/ethanshan" rel="nofollow"><span style="color:#3370ff"><span><span>单好强老师</span></span></span></a></span></span></span></span></span></span></strong>老师提问，直接回帖提问既可。</p></div><div><div>
   &nbsp; 
 </div></div></div><div class="poll-wrap"></div><div class="additional-remarks"></div><div class="ui basic center aligned segment action"><div class="ui big buttons"><a class="ui basic button collect-btn hover" data-id="2331821" data-user-id="4700705" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i>收藏 (<span data-collect-count="" data-id="2331821" data-obj-type="2">0</span>)</a><div class="ui basic dropdown share button osc-share dropdown-share" data-tag="share-question"><i class="share icon"></i><span>分享</span><div class="menu"><a class="item" data-platform="weibo" data-value="weibo"><i class="weibo icon"></i>微博</a><a class="item" data-platform="qq" data-value="qq"><i class="qq icon"></i>QQ</a><a class="item" data-platform="wechat" data-value="wechat"><i class="weixin icon"></i>微信</a></div></div></div><div class="ui basic segment"><a class="ban" ban-report="" data-id="2331821" data-obj-type="2" data-url="https://www.oschina.net/question/4700705_2331821"><i class="flag red icon"></i>举报</a></div></div>
            ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 08:00:12 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/question/4700705_2331821</guid>
            <link>https://www.oschina.net/question/4700705_2331821</link>
        </item>
        <item>
            <title>
                <![CDATA[微信 Linux 原生版正式支持龙架构]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>龙芯中科<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F2gzVb4cvnVSOP_qgi3A0Bg" target="_blank">宣布</a>，在腾讯微信团队、龙芯中科与国产操作系统厂商的共同努力下，微信 Linux 原生版在龙架构平台终端已于近日成功启动运行，并在操作系统厂商应用商店上架分发，为用户带来全新的龙架构平台使用体验。</p><p>本次微信（Universal）是基于原生跨平台方案进行的一次大型版本重构与更新，旨在逐步实现微信 Windows/Mac/Linux 版本在功能与更新节奏上保持一致，大幅提高软件功能的开发与迭代速度。同时，新版本功能也更加丰富，支持大文件收发、群管理、双人视频通话、一键开启视频号、小程序、搜一搜等实用功能。</p><p><strong>大文件收发</strong></p><p>可以接收和发送 1GB 以内的文件</p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-8af6d64640c735fa2e0b0e82057264aa298.jpg" width="500" referrerpolicy="no-referrer"></p><p><strong>公众号信息</strong></p><p>公众号内容呈现模式更新</p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-9c4bd9b933873e3eac17789c1223c175965.jpg" width="500" referrerpolicy="no-referrer"></p><p><strong>群设置</strong></p><p>可设置群名字、群备注名以及自己的群暱称</p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-21b9f177f0f9539f328a2f48c3712a9e9e4.jpg" width="500" referrerpolicy="no-referrer"></p><p><strong>视频通话</strong></p><p>可在双人视频通话过程中，随时开启或关闭摄像头</p><p>&nbsp;</p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-0ef052859bb0791ea7446f691db53da920c.gif" width="500" referrerpolicy="no-referrer"></p><p><strong>视频号、小程序、搜一搜、看一看</strong></p><p>可接收视频号内容消息，一键打开更多内容，包括视频号、小程序、搜一搜、看一看</p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-60d475e9d00fa006d055bfc0b1a5180b7b8.gif" width="500" referrerpolicy="no-referrer"></p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-de33d19ceab0a3c1f91af5a27cbb089a87c.gif" width="500" referrerpolicy="no-referrer"></p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-bac4fe49595963fdf08469d0e15bed035fb.gif" width="500" referrerpolicy="no-referrer"></p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-562fad3596a80c37b9e737e0b5a3ceedda8.gif" width="500" referrerpolicy="no-referrer"></p><h4><strong>微信（Universal）在龙架构终端成功运行</strong></h4><p><img alt="" height="299" src="https://oscimg.oschina.net/oscnet/up-c305f4611ee5d8358b8ec6ba8749c411c89.png" width="500" referrerpolicy="no-referrer"></p><p><em>统信桌面操作系统</em></p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-7b4dae3d2a0eaf766a3100dab14f8bac06d.png" width="500" referrerpolicy="no-referrer"></p><p><em>银河麒麟桌面操作系统</em></p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-fe91a454d643b6b54d6d06855f1cf738006.png" width="500" referrerpolicy="no-referrer"></p><p><em>Loongnix 操作系统</em></p><p>目前，微信客户端基本功能已在龙架构平台全部迁移成功，为龙芯平台用户即时通讯、高效办公等提供保障，极大地提升了用户体验。作为国家信息产业核心底座，龙芯中科未来将持续与微信客户端开展适配优化工作，加快功能迭代优化，实现效率升级。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 07:01:42 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283757</guid>
            <link>https://www.oschina.net/news/283757</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[曝苹果与谷歌洽谈，为 iPhone 引入 Gemini]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">彭博社<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2024-03-18%2Fapple-in-talks-to-license-google-gemini-for-iphone-ios-18-generative-ai-tools" target="_blank">报道</a>称，苹果公司正在与谷歌进行谈判，以授权该公司的 Gemini AI 引擎在 iPhone 上使用，以便为今年晚些时候推出的 iPhone 提供新功能。与此同时，苹果公司还与 OpenAI 进行了讨论，并公开考虑使用其模型。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><img height="264" src="https://oscimg.oschina.net/oscnet/up-1635f9c4ec311ce9913b2e2a340abcb46f0.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">自去年初以来，苹果一直致力于开发和测试自己的生成式人工智能系统（&nbsp;内部称为 Ajax），员工也一直在测试名为 Apple GPT 的聊天机器人。然而，彭博社报指出，苹果的生成式 AI 工具的发展仍然远远落后于竞争对手，因此与外部合作貌似是一个更划算的交易。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">彭博社称，苹果打算在即将推出的 iOS 18 iPhone 操作系统中使用自己的内部 AI 模型来实现 onboard AI&nbsp;功能，但他们正在寻求与一家基于云的生成 AI&nbsp;供应商合作，以完成其他功能的"重任"。例如，Google Gemini 将帮助增强手机根据用户提示生成图像和撰写文章的功能。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">因此，预计有关这些更新的详细信息要等到 6 月份的公司全球开发者大会期间才会公布，届时苹果可能会谈论 iOS 18 及其即将推出的功能。苹果首席执行官蒂姆·库克上个月曾<a href="https://www.oschina.net/news/280792">表示&nbsp;</a>，该公司打算「大力」投资生成式 AI，并打算在今年晚些时候透露更多有关苹果计划的信息。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">一旦与苹果达成在 iPhone 上部署 Gemini 模型的合作，这将是 Gemini 迄今为止最大的合作项目。它可以将 Google 的 AI 模型带入全球超过 20 亿台活跃使用的设备。今年 1 月，谷歌与三星电子公司合作，在其旗舰产品 Galaxy S24 上搭载 Gemini，成为全球首批集成 AI 模型的设备之一。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">谷歌的 Pixel 8 是该公司目前最高端的手机，目前运行在 Gemini Nano 上，这是能够在手机上运行的最小的 Gemini 型号。Gemini Nano 允许 Pixel 8 理解语音录制的对话，对其进行总结并在聊天消息中建议语音回复。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 06:35:42 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283755</guid>
            <link>https://www.oschina.net/news/283755</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[英伟达新款芯片 Blackwell 问世，AI 性能最高跃升 30 倍]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>英伟达（NVIDIA）推出全新芯片 Blackwell，助力 AI 革命向前迈进一大步。据悉，这款新型芯片的性能相较于前代产品 H100 有着惊人的提升，最高可达 30 倍。</p><p><img alt="" height="276" src="https://oscimg.oschina.net/oscnet/up-6843c847409cf8cadb23ba1812c4d37b3f6.png" width="500" referrerpolicy="no-referrer"></p><p>在过去的时间里，英伟达的 H100 芯片已经赢得了全球众多 AI 公司的青睐，为训练大型语言模型提供了强大支持，推动诸如 ChatGPT 等智能服务的蓬勃发展。而此次新推出的 Blackwell 芯片，则进一步提升了 AI 计算能力，为全球 AI 产业的飞速发展注入了新的活力。</p><p>据英伟达 CEO 黄仁勋介绍，Blackwell GPU 将成为新一轮工业革命的核心驱动力。他表示：「生成式 AI 是我们这个时代的标志性技术，我们将与全球最具创新力的公司紧密合作，共同实现 AI 在各个行业的广泛应用。」</p><p>值得一提的是，Blackwell 芯片不仅在性能上实现了大幅提升，还在功耗方面取得了显著优化，比前代产品降低了 25%。这一创新成果得益于英伟达在芯片设计和技术研发方面的持续投入和突破。</p><p>随着 Blackwell 芯片的推出，全球 AI 产业将迎来更加广阔的发展空间。各大科技公司纷纷表示对这一创新成果的期待和关注，希望能与英伟达携手推动 AI 技术的不断进步。</p><p>与此同时，英伟达的 H100 芯片依然保持着强劲的市场需求。尽管价格高昂，但交货等待时间长达数月之久，足见其受欢迎程度。而 Blackwell 芯片的问世，无疑将进一步加剧市场竞争，推动 AI 芯片产业的创新发展。英伟达新款芯片 Blackwell 的推出，将为 AI 革命再提速提供强大动力。</p><p>来源：环球网</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 03:30:54 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283733</guid>
            <link>https://www.oschina.net/news/283733</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源日报 | 微软 AI 程序员登场，马斯克开源 Grok]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。</p><h3 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#e67e22"><strong># 2024.3.18</strong></span></h3><h2 style="margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#16a085">今日要点</span></strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>OpenSource Daily</strong></p><h3 style="margin-left:0; margin-right:0; text-align:left"><strong><a href="https://www.oschina.net/news/283513/grok-open-source" target="_blank">马斯克开源 Grok</a></strong></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">马斯克旗下的 xAI 正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fx.ai%2Fblog%2Fgrok-os" target="_blank">宣布</a>在 Apache 2.0 协议下开源了大模型 Grok-1 的基本模型权重和网络架构。其参数量达到 3140 亿，远超 Meta 的 Llama 2 的 700 亿、Mistral 8x7B 的 120 亿以及 OpenAI GPT-3.5 的 1750 亿；这也是迄今参数量最大的开源大语言模型。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">根据介绍，Grok 基础模型基于大量文本数据进行训练，未针对任何特定任务进行微调。其架构于 2023 年 10 月使用 JAX 和 Rust 之上的自定义训练堆栈开发，融合了神经网络设计的创新方法。该模型将 25% 的权重用于给定 token，旨在提高效率和有效性。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="214" src="https://oscimg.oschina.net/oscnet/up-c641876e1db3fba6af1c641b80aaa3dc947.png" width="500" referrerpolicy="no-referrer"></p><h3 style="margin-left:0; margin-right:0; text-align:start"><strong><a href="https://www.oschina.net/news/283605/gnucobol-ready-for-industry" target="_blank">历时 20 年，GnuCOBOL 已达到工业成熟度</a></strong></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">OCamlPro 创始人兼 GnuCOBOL 贡献者 Fabrice Le Fessant<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fftp.heanet.ie%2Fmirrors%2Ffosdem-video%2F2024%2Fh2215%2Ffosdem-2024-3249-gnucobol-the-free-industrial-ready-alternative-for-cobol-.av1.webm" target="_blank">表示</a>，经过 20 年的发展，开源 GnuCOBOL「已经达到了工业成熟度，可以在所有环境中与专有产品竞争。」</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="282" src="https://oscimg.oschina.net/oscnet/up-f841c8a4f74c37bf76aa87226db78e14e1b.png" width="500" referrerpolicy="no-referrer"></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#16a085">今日观察</span></strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="114" src="https://oscimg.oschina.net/oscnet/up-8f4a39afed6fe8549ae8f35b371b19f8043.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">- <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcaifuhao.eastmoney.com%2Fnews%2F20240314183626385310570" target="_blank"><em>机器之心</em></a></u></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="99" src="https://oscimg.oschina.net/oscnet/up-68b76211a3e157cfd24e7b4057e0d282833.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">- 微信&nbsp;</span><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzA4ODYwMjI3NA%3D%3D%26mid%3D2649800891%26idx%3D3%26sn%3D6ceb281b8c5789776ae5ada3ef0af7e0%26scene%3D0" target="_blank">USEduCenter</a></u></em></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="127" src="https://oscimg.oschina.net/oscnet/up-9b20d16417668d09f2dc547834d30215364.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">-&nbsp;微博 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1642634100%2FO5xiKkHT1%3Frefer_flag%3D1001030103_" target="_blank"><em>新浪科技</em></a></u></span></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#16a085"><strong>今日推荐</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="408" src="https://oscimg.oschina.net/oscnet/up-c07ebca584db6be9b310d8a6c497b68a818.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJanDeDobbeleer%2Foh-my-posh" target="_blank">https://github.com/JanDeDobbeleer/oh-my-posh</a></u></em></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#16a085"><strong>事件点评</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="469" src="https://oscimg.oschina.net/oscnet/up-e5f377e528491e07cb28266007929cbfe20.png" width="500" referrerpolicy="no-referrer"></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#16a085"><strong>每日项目榜</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="background-color:#e67e22">每日 GitHub 精选</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="641" src="https://oscimg.oschina.net/oscnet/up-64f49944c26ef2b6b08f3c1ebcbb1245bc4.png" width="500" referrerpolicy="no-referrer"></p><blockquote><h4 style="margin-left:0; margin-right:0"><strong><span style="background-color:#e67e22">在线阅读完整日报内容，访问：</span></strong><br><em><u><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/maajc6fkxn2b8la/031_microsoft_autodev_grok_os_vvdrJAOBEq.pdf" target="_blank">开源日报第 031 期：微软 AI 程序员登场，马斯克开源 Grok</a></u></em></h4></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>往期回顾</strong></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/bkpgqfjrsg02gbc/30_i9_14900_ks_hip_rt_PUJjodKP2j.pdf" target="_blank">开源日报第 030 期：RISC-V 正在发生质变？离职后可以删除自己所写的软件吗</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/71npja41p7l4ojy/29_risc_v_ai_smart_B3RnKR88Kl.pdf" target="_blank">开源日报第 029 期：英特尔获准继续向华为出售芯片；明年 AI 将比任何人都聪明</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/q35lx4s6qq9ls4r/28_cognition_labs_devin_Epbxne3xzN.pdf" target="_blank">开源日报第 028 期：全球首位 AI 软件工程师 Devin；谷歌承认 「窃取」 OpenAI 模型关键信息</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/hh291xp9mxksc9i/27_ai_google_50_gpt_4_KfagjDXXfZ.pdf" target="_blank">开源日报第 027 期：AI 接连翻车的 Google 要变天了；互联网大厂 50 款大模型及应用，能否全面超越 GPT-4？</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/uwsizmmsnhq8zdk/26_git_hub_22_web_os_22_vue_rolldown_FpVykoR7rJ.pdf" target="_blank">开源日报第 026 期：大模型替代程序员根本就是一个伪命题；GitHub 顶流 "Web OS"</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6ho57sxydzsh9jh/25_ai_5_ax1LWz5GP5.pdf" target="_blank">开源日报第 025 期：买手机送大模型；「钓鱼式维权」 须遏制；「AI 原生」 骗局江湖</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/7xd6teyhekcvamw/24_risc_v_x86_arm_5LsjoStPUn.pdf" target="_blank">开源日报第 024 期：RISC-V 能否和 x86、Arm 一起成为三大主流架构；给阎王开发地府管理系统</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/svxac61bjmbmmw5/23_google_microsoft_cM5zZacKru.pdf" target="_blank">开源日报第 023 期：Google = 开源，好评；Microsoft = 闭源收入还低，差评</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/3vmzfjvp7mpvv26/22_sora_cuda_Syy7OJyUvc.pdf" target="_blank">开源日报第 022 期：轻松复现 Sora 模型；事关 CUDA 兼容，英伟达禁止了；百度还差一个 「遥遥领先」</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/z3rhs3qkyeqwoax/21_open_ai_JROaEZat3b.pdf" target="_blank">开源日报第 021 期：闭源模型就是比开源安全；起诉 OpenAI 不能更赞同</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/lv84pwvd03it00i/20_open_ai_pingora_yaml_mE5RuB20Vl.pdf" target="_blank">开源日报第 020 期：为什么王炸都来自 OpenAI；Pingora 最好不要用 YAML 当配置文件</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/mx86z1dhywrw71p/19_ai_c_llm_IgpNOVZtCz.pdf" target="_blank">开源日报第 019 期：我让 AI 用 C 语言写一个算法；微软三进制 LLM</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/qdljicvqiqsshd6/187ZiLwG48lc_CngfQJ1Qxs.pdf" target="_blank">开源日报第 018 期：苹果十年造车梦碎；这个开源项目有点...「大胆」</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/7r8dkz3232v4e7a/17_maria_db_v_linux_GoyNoM85IZ.pdf">开源日报第 017 期：MariaDB 消亡史；写代码我有三不沾；V 神建议马斯克用 Linux</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6typ9w3u98f5mxn/16_1_8_2efTeNfFjN.pdf">开源日报第 016 期：鸿蒙程序员平均月薪超 1 万 8；中美 AI 差距有多大？</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/92n4c9ryegpcq1z/015_sora_KcAkRNX93Y.pdf">开源日报第 015 期：为什么挡不住英伟达；Sora 不靠蛮力</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/s7n800w84o6guyv/014_kyezhNxOGD.pdf">开源日报第 014 期：目前的人工智能技术连猫的智能水平都没达到</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC013%E6%9C%9F%EF%BC%9A%E7%AD%89%E5%88%B0%20Sora%20%E5%BC%80%E6%BA%90%E4%BA%86%E7%AB%8B%E5%88%BB%E6%8E%A8%E5%87%BA%E5%B1%9E%E4%BA%8E%E6%88%91%E4%BB%AC%E8%87%AA%E5%B7%B1%E7%9A%84%E5%A4%A7%E6%A8%A1%E5%9E%8B.pdf">开源日报第 013 期：等到 Sora 开源了立刻推出属于我们自己的大模型</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC012%E6%9C%9F%EF%BC%9ASora%20%E7%BB%99%E4%B8%AD%E5%9B%BD%20AI%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9C%9F%E5%AE%9E%E5%8F%98%E5%8C%96%EF%BC%9BDart%203.3%20%E5%8F%91%E5%B8%83.pdf">开源日报第 012 期：Sora 给中国 AI 带来的真实变化；Dart 3.3 发布</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC11%E6%9C%9F%EF%BC%9A%E7%9B%AE%E5%89%8D%E8%BF%98%E6%B2%A1%E6%9C%89%E2%80%9C%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%89%88Linux%E2%80%9D.pdf">开源日报第 011 期：目前还没有 「大模型版 Linux」</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC010%E6%9C%9F%EF%BC%9ATauri%20v2%20%E6%94%AF%E6%8C%81%20Android%20%E5%92%8C%20iOS%EF%BC%8C%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%96%B0%E9%80%89%E6%8B%A9.pdf">开源日报第 010 期：Tauri v2 支持 Android 和 iOS，跨平台开发新选择</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5009%E6%9C%9F%EF%BC%9AVue.js%E8%AF%9E%E7%94%9F10%E5%91%A8%E5%B9%B4%EF%BC%9B%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC%E8%A7%A3%E9%87%8AMeta%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E6%BA%90%E5%85%B6AI%E6%8A%80%E6%9C%AF.pdf">开源日报第 009 期：Vue.js 诞生 10 周年；扎克伯格解释 Meta 为什么要开源其 AI 技术</a></li><li><a href="https://www.oschina.net/news/277585">开源日报第 008 期：推动中国开源软硬件发展的经验与建议</a></li><li><a href="https://www.oschina.net/news/277415">开源日报第 007 期：「Linux 中国」 开源社区宣布停止运营</a></li><li><a href="https://www.oschina.net/news/277214">开源日报第 006 期：选择技术栈一定要选择开源的</a></li><li><a href="http://www.oschina.net/news/277040">开源日报第 005 期：RISC-V 万兆开源交换机发售；npm 存在大量武林外传视频</a></li><li><a href="https://www.oschina.net/news/276864">开源日报第 004 期：百度输入法在候选词区域植入广告；大神用 Excel 构建 CPU</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 03:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283727</guid>
            <link>https://www.oschina.net/news/283727</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[C++ 之父反驳白宫观点]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">白宫国家网络主任办公室 (ONCD) 此前曾发布了一份报告，<a href="https://www.oschina.net/news/280505/white-house-memory-safe-programming-languages">呼吁</a>科技界主动减少网络空间的攻击面；通过改用 Rust 等内存安全编程语言、避免使用 C++ 和 C 语言等易受攻击的语言，以减少内存安全漏洞的数量来提高软件安全性。</span></p><p><span style="color:#000000">C++ 之父 Bjarne Stroustrup 在日前与 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.infoworld.com%2Farticle%2F3714401%2Fc-plus-plus-creator-rebuts-white-house-warning.html" target="_blank">InfoWorld </a>的采访中针对白宫的这些言论进行了反驳。「我感到惊讶的是，这些政府文件的作者似乎对当代 C++ 的优势和提供强大安全保证的努力视而不见。另一方面，他们似乎已经意识到，编程语言只是工具链的一部分，因此改进工具和开发流程至关重要。」</span></p><p><span style="color:#000000">Stroustrup 指出，安全性改进始终是 C++ 开发工作的目标。从 C++ 诞生的第一天起，提高安全性就一直是 C++ 的目标。只要将 K&amp;R C 语言与最早的 C++、早期的 C++ 以及当代的 C++ 进行就能看出差别。许多高质量的 C++ 都是使用基于 RAII (Resource Acquisition Is Initialization)、容器和资源管理指针的技术编写的，而不是传统的 C-style pointer messes。</span></p><p><span style="color:#000000">Stroustrup 还列举了为改善 C++ 安全所做的一系列努力。</span></p><blockquote><p><span style="color:#000000">与安全有关的问题有两个。在数十亿行的 C++ 中，很少有完全遵循现代准则的，而且人们对安全的哪些方面是重要的概念也不尽相同。我和 C++ 标准委员会正在努力解决这个问题。</span></p><p><span style="color:#000000">Profiles 是一个框架，用于指定一段代码需要什么保证，并启用实现来验证它们。委员会网站上有描述这一点的文件（可查看 </span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.open-std.org%2Fjtc1%2Fsc22%2Fwg21%2F" target="_blank">WG21</a><span style="color:#000000">），并且还会有更多文件。然而，我们中的一些人没有心情等待委员会必然缓慢的进展。</span></p><p><span style="color:#000000">Profiles 是一个框架，允许我们逐步改进 guarantees —— 例如，相对较快地消除大多数&nbsp;range errors，并通过本地静态分析和最少的运行时检查逐步将 guarantees 引入大型代码库。我对 C++ 的长期目标一直是在需要的时候提供类型和资源安全。也许当前对内存安全的推动 —— 我想要的 guarantees 的一个子集 —— 将有助于我的努力，C++ 标准委员会中的许多人也认同这一点。</span></p></blockquote><p><strong><span style="color:#000000">相关阅读：</span></strong></p><ul><li><a href="https://www.oschina.net/news/280505/white-house-memory-safe-programming-languages" target="news">白宫敦促开发者改用内存安全的编程语言</a></li><li><a href="https://www.oschina.net/news/269933/cisa-the-case-for-memory-safe-roadmaps" target="news">美国 CISA 建议放弃 C/C++，消除内存安全漏洞</a></li><li><a href="https://www.oschina.net/news/226780/c-plus-plus-bjarne-stroustrup-safety" target="news">C++ 之父：Rust 等内存安全语言的安全性并不优于 C++</a></li><li><a href="https://www.oschina.net/news/217425/nsa-memory-safe-programming-language" target="news">美国国家安全局建议从 C/C++ 切换到内存安全语言</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 03:01:06 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283723/c-plus-plus-creator-rebuts-white-house-warning</guid>
            <link>https://www.oschina.net/news/283723/c-plus-plus-creator-rebuts-white-house-warning</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[推进「全球开源软件产品库」骨干库建设，「2024 中国数据库产品调研」正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>在 3 月 16 日的中国开源数据库技术交流活动上，中国开源软件推进联盟常务副秘书长、北京开源创新委员会常务副主任宋可为，中国开源软件推进联盟数据库分会秘书长白国华，代表中国开源软件推进联盟正式发布了 2024 中国数据库产品调研。此次调研项目，是建设「全球开源软件产品库」骨干库的重要一步，标志着「全球开源软件产品库」建设工作进一步迈向成熟化和常态化运行。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>「全球开源软件产品库」作为中国开源软件推进联盟重点工作，根据规划将涵盖操作系统、数据库、AI 大模型、主流编程语言、区块链等领域。为更好的实施「产品库」建设工作，COPU 根据「产品库」的类别构成，将组建各领域的子项工作组，其中，数据库作为核心基础软件和 IT 产业基础设施的关键组成，在产业链中处于关键生态位，直接影响数字基础设施发展的水平。此次在「产品库」的编制中，将其作为骨干库建设，以骨干库标准将全球主流的开源产品和商业闭源产品共同纳入库中，进一步强化产品库的全面性、客观性、可分析与可参考性。同时，「产品库」将首次引入工业界评价机制，力求为工业界的数据库选型带来实质性帮助。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>以「深入对工业界的数据库选型带来实质性帮助、推动自主开源根社区版本发展」为产品库建设目标。全面建成「构成全球数据库产品相关基础资料」的高质量信息库、知识库。「产品库」将全球数据库产品全面纳入，适时引入趋势度指标和生态性指标，深入吸纳工业界意见与反馈，构建工业届评价机制。引导开源数据库的社区生态建设。改善过去单向的开发思路，让用户成为开源产品发展的真正推动者和决定者。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>为做好数据库产品库，工作组将设立专家顾问委员会，接受各领域专家的指导，广泛吸纳专家意见，做好顶层设计与规划。根据计划，2024 中国数据库产品调研活动将于 3 月 16 日发布，至 4 月 20 日正式结束。调研期后，产品库工作将进入汇总整理、资料审核和专家评审阶段，6 月份将会发布正式版的内部讨论稿，之后进入产业界讨论阶段。正式发布版将于 8 月份的「第 19 届开源中国开源世界高峰论坛」上正式与大家见面。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>一个好的软件品类的产品库，一定是「大而全」、「全而精」的。全球数据库产品库，横向上以多个维度，全面录入了全球数据库产品的特征、特性、基本架构、核心参数、安全性指标、生态指标和重要生态性内容。构建出数据库产品的软件知识库、安全知识库和生态知识库。高达 30 项的特征性和分析性录入指标项，在现有的数据库产品库、排行榜的录入项目数量中具有优势。更多的录入指标项，对于从业者全面从容的了解、对比、分析数据库产品，指导数据库技术选型具有重要价值。在纵向上，产品库目标将收录到超过 600 款数据库产品，力争建成一个全面涵盖各类型开闭源数据库的综合产品库。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>全球数据库产品库</span></span><span><span>在检索和收录基础信息的同时，也强化了对信息和信源的筛查、清洗及审核，采取多种程序保证了信息的准确性、中立性。根据最新的全球数据库产业发展趋势，进行了多模型属种分类。支持了包括关系型、键值、列簇、图、空间、向量、时序、搜索、文档等模态数据库的单独分类、单独对比分析。在安全与合规治理方面，产品库详细调查了主流产品的开源许可协议、产品所有权属，开源供应链渠道等核心知识产权信息，相关知识库可以对软件 CI/CD 中的供应链安全、合规管理起到预警与提示作用。在流行度趋势指标和生态性指标上，全面引入了谷歌指数、Bing 指数、百度指数、微信指数、360 趋势、wiki 知识数据、全网招聘岗位数量、书籍生态等数据，以及包含 GitHub、Gitcode、Gitlink、Gitee 等主流托管平台开源核心指标、社区平台、高校合作、培训认证、开放文档等维度的生态性指标数据，以体现数据库产品生态建设现状。厂商对数据库产品的可持续发展战略，开放开源、人才培养和共建行业的理念。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>过去三十年,开源软件以开放、共享、协同的新型生产方式，成为全球信息技术发展的强大推动力。2020 年中国开源的发展速度已成为全球最快，中国开源已经接近或部分达到世界先进水平。当前，中国开源发展的挑战不容忽视，中国应从加强重点开源人才培养、推动开源开发者及社区建设、大力扶持优秀开源项目、加强行业标准与规范四方面入手，推动中国开源事业良好发展。此次蓝皮书及全球开源软件产品库的发布，将会进一步提高中国开源软件的应用发展水平，助力中国开源产业的健康发展。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>附：</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><img alt="" height="347" src="https://oscimg.oschina.net/oscnet/up-ee83a99a50a13b43ee7f191e812c6763d2f.png" width="300" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>2024 中国数据库产品调研共享文档二维码</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>《2023 中国开源发展蓝皮书》开源项目地址：</span></span></span></span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgitcode.net%2FCOPU%2F2023" target="_blank">https://gitcode.net/COPU/2023</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 02:14:15 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283716</guid>
            <link>https://www.oschina.net/news/283716</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[云原生周刊：Istio 加入 Phippy 家族]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>开源项目推荐</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fko-build%2Fko" target="_blank">ko</a></h3><p>"ko" 是一个用于构建和部署 Go 应用程序的简单、快速的容器镜像构建工具。它适用于那些镜像中只包含单个 Go 应用程序且没有或很少依赖于操作系统基础镜像的情况（例如没有 cgo，没有操作系统软件包依赖）。"ko" 在本地机器上通过执行 "go build" 的方式构建镜像，因此不需要安装 Docker。这使得它非常适合轻量级的 CI/CD 场景。"ko" 支持简单的 YAML 模板化，并且支持跨平台构建，还默认生成软件供应链安全和可追溯性信息（SBOMs）。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flonghorn%2Flonghorn" target="_blank">Longhorn</a></h3><p>Longhorn 是 Kubernetes 的分布式块存储系统。Longhorn 是使用 Kubernetes 和容器原语构建的云原生存储。</p><p>Longhorn 重量轻、可靠且功能强大。你可以使用一个命令 <code>kubectl apply</code> 或使用 Helm 图表在现有 Kubernetes 集群上安装 Longhorn 。一旦安装了 Longhorn，它就会向 Kubernetes 集群添加持久卷支持。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fwerf%2Fwerf" target="_blank">werf</a></h3><p>werf 是 CNCF Sandbox CLI 工具，可轻松实现 Kubernetes 的全周期 CI/CD。werf 集成到您的 CI 系统中，并利用熟悉且可靠的技术，例如 Git、Dockerfile、Helm 和 Buildah。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FWowu%2Fdocker-rollout" target="_blank">docker rollout</a></h3><p>Docker CLI 插件可在不停机的情况下更新 Docker Compose 服务。</p><p>只需在部署脚本中替换 <code>docker compose up -d &lt;service&gt;</code> 为即可。<code>docker rollout &lt;service&gt;</code> 此命令会将服务扩展到当前实例数量的两倍，等待新容器准备就绪，然后删除旧容器。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fhelm%2Fchart-testing" target="_blank">Chart Testing</a></h3><p>Chart Testing 是测试 Helm 图表的工具。它旨在用于检查和测试拉取请求。它会自动检测针对目标分支更改的图表。</p><h2>文章推荐</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2F%40idan441%2Fcase-study-when-containers-health-check-mechanism-crashes-when-application-is-overloaded-bdbd5c81b473" target="_blank">案例研究：当应用程序请求过载时，容器健康检查机制崩溃</a></h3><p>这篇文章是一个案例研究，描述了一个团队遇到的生产事故。文章详细阐述了由于大量的 HTTP 请求超载了微服务，健康检查机制崩溃的原因。作者通过调查和分析，总结了与扩展和健康检查机制相关的有趣结论。文章指出，过载的请求导致服务无法处理更多的请求，健康检查失败，导致容器被不断重启。在负载结束后，健康检查通过，容器恢复正常。文章还提出了处理应用程序压力过大的解决方案，包括增加系统的饱和度上限和改变客户端请求处理方式。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.stackademic.com%2Fhow-to-debug-your-java-application-in-kubernetes-d196844bbb53" target="_blank">如何在 Kubernetes 中调试 Java 应用程序</a></h3><p>这篇文章介绍了在 Kubernetes 中调试 Java 应用程序的方法。作者解释了什么是 Kubernetes pod 以及如何与其中的 Java 应用程序进行连接和调试。文章提供了设置远程调试环境的步骤，并分享了一些在 Kubernetes 中进行 Java 调试的最佳实践。通过正确的方法和工具，读者可以有效地调试运行在 Kubernetes pod 中的 Java 应用程序，从而使调试过程更加顺利和高效。</p><h2>云原生动态</h2><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cncf.io%2Fblog%2F2024%2F03%2F11%2Fistio-joins-phippy-and-friends-welcome-izzy%2F" target="_blank">Istio 加入 Phippy 家族</a></h3><p>在 2023 年正式加入云原生计算基金会（CNCF）并以傲人的成绩毕业后，现在是时候让 Istio 加入 CNCF Phippy 家族的使命，解密和简化云原生计算了。</p><p>Istio Steering Committee（Istio 指导委员会）很高兴地向大家介绍 Izzy Dolphin，即 Istio 印度-太平洋短吻海豚，他今天加入了「Phippy 和朋友」大家庭。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8" target="_blank">Podman 桌面版 1.8 发布</a></h3><p>Podman 桌面版 1.8 发布，新版本主要变化如下：</p><ul><li>Podman 4.9.3：Podman 4.9.3 现已包含在 Windows 和 Mac 的安装程序中。</li><li>Kubernetes Explorer：提供高级用户界面和新的工具，用于处理 Kubernetes 集群。</li><li>全球入职：通过一系列引导工作流程，轻松配置和设置您的环境。</li><li>学习中心：探索开发人员的新用例和功能。</li><li>扩展 API 改进：扩展 API 的又一个重大更新，为 Podman Desktop 的扩展提供更多优化。</li><li>增强的构建、Pods 列表和故障排除页面：为不同平台构建、升级的 Pods 视图等。</li></ul><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftraining.linuxfoundation.cn%2Fcertificates%2F35" target="_blank">Cilium 专业认证 CCA 上线</a></h3><p>CCA 是一种入门级认证，专为对网络、安全性和可观察性感兴趣的平台或云工程师设计。</p><p>获得认证的 CCA 工程师具备使用 Cilium 连接、保护和观察 Kubernetes 集群的基础知识。CCA 考试的目的是为正在考虑在其环境中部署 Cilium 的考生做准备。CCA 可证明考生对 Cilium 提供的主要特性、优点和用例的理解。</p><p>考生需于购买考试后的一个月内注册考试券，注册成功后获得的考试资格在 12 个月内有效。通过认证考试的考生将获得 PDF 结业证书。</p><h3><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevclass.com%2F2024%2F03%2F13%2Fsecret-leakage-in-public-github-repositories-increasing-claims-new-report%2F" target="_blank">新报告称公共 GitHub 存储库中的秘密泄露事件正在增加</a></h3><p>根据 GitGuardian 的报告，2023 年 GitHub 公开存储库中新泄漏的秘密信息达到了 1280 万个，比去年增长了 28%。报告基于对公开的 GitHub 存储库（包括源代码、问题、Gist 和评论）的扫描结果。尽管 GitGuardian 在发现暴露的秘密信息时发送电子邮件警报，但报告指出，90% 的秘密信息「至少会保持活跃五天」。</p><blockquote><p>本文由博客一文多发平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 发布！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 02:01:15 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/11047922</guid>
            <link>https://my.oschina.net/u/4197945/blog/11047922</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zadig 版本管理与自动化发布最佳实践解析]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><span><span><img alt="" src="https://oscimg.oschina.net/oscnet/up-856e45f5f62675c001950ec3f6b68277f1e.png" referrerpolicy="no-referrer"></span></span></div><div>
   &nbsp; 
 </div><div><span><span>在产品交付过程中，版本管理和版本发布是至关重要的环节，直接影响着产品质量和用户体验。有效的版本管理有助于团队组织和跟踪代码变更，确保每个版本都可靠且功能完善。而版本发布需要精心策划和执行，以确保新功能顺利上线，并最大程度地减少可能的故障和不稳定性。在此过程中，利用适当的工具和流程至关重要，它们为团队提供支持和保障，加速交付周期，降低发布风险。</span></span></div></div><div><div><span><span>本文将探讨如何通过 Zadig 平台实现高效的版本管理和版本发布，为团队提供稳定、高效的交付流程。</span></span></div></div><span id="OSC_h1_1"></span><h1>&nbsp;</h1><span id="OSC_h1_2"></span><h1><strong><span>核心交付流程概述</span></strong></h1><div><div><span><span>1. 工程师完成代码编写后，将代码部署到开发环境，进行自测和联调。</span></span></div></div><div><div><span><span>2. 在测试环境对已提交的功能进行集成测试和系统测试，以验证版本的质量和有效性。</span></span></div></div><div><div><span><span>3. 完成所有验证后，进行生产环境版本发布。</span></span></div></div><div><div><span><span>在这一过程中，通常由测试工程师确认版本的有效性和质量。因此，可以由测试工程师直接完成版本打包，然后将其交给发布工程师或研发负责人进行生产环境发布。</span></span></div></div><div><div><span><span>接下来，我们将分别介绍在 Zadig 的 K8s YAML 项目和 Helm Chart 项目中，如何创建完整的版本，并进行生产环境发布的具体操作步骤。</span></span></div><div>
   &nbsp; 
 </div></div><span id="OSC_h1_3"></span><h1><strong><span>K8s YAML 项目发布场景</span></strong></h1><span id="OSC_h3_4"></span><h3><strong><span>第一步：创建版本</span></strong></h3><div><div><strong><span>· </span></strong><span><span>进入 K8s YAML 项目 -&gt; </span></span><strong><span>版本管理</span></strong><span><span>，点击</span></span><strong><span>创建版本</span></strong><span><span>，进入创建版本流程。</span></span></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://pic1.zhimg.com/80/v2-1add73bdc66ddd0fcefec637d104801d_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>版本列表</p><div><div><strong><span>· </span></strong><span><span>第一步：填写版本基本信息，包括版本名称、版本标签、版本描述。</span></span></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://picx.zhimg.com/80/v2-51cb7bac255d288bf55d35f2d0f35797_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>填写基本信息</p><div><div><strong><span>· </span></strong><span><span>第二步：选择环境和服务，对服务配置进行预览确认。</span></span></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://pica.zhimg.com/80/v2-8afaed5d59135fd2ad10e5dbb72d506d_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>选择环境和服务</p><div><div><strong><span>· </span></strong><span><span>第三步：选择镜像仓库，并按需填写配置镜像版本。</span></span></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://pic1.zhimg.com/80/v2-c8f5f943ebe49ef27a0082bc4d24a2ef_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>配置镜像版本</p><div><div><strong><span>· </span></strong><span><span>点击完成后，所选的服务镜像将被推送到对应仓库。</span></span></div></div><div><div><strong><span>· </span></strong><span><span>在版本管理列表中点击版本可以查看具体交付信息，包括创建该版本的工作流任务、交付的镜像信息、包信息、服务配置及启动顺序等等。</span></span></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://pica.zhimg.com/80/v2-bad857aaf80ef778e601cf5b3aa64b75_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>版本详情</p><span id="OSC_h3_5"></span><h3><strong><span>第二步：发布版本</span></strong></h3><div><div><strong><span>· </span></strong><span><span>执行生产发布工作流，在「部署」任务中选择版本，将版本内包含的所有服务镜像更新到指定环境。</span></span></div></div><div><div><em><span>生产发布工作流由管理员事先配置，包含「部署」、「测试」、「人工审批」等步骤。</span></em></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://pic1.zhimg.com/80/v2-0f88dc519136a95c1e7d0ee72d5b1687_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>选择版本</p><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://pic1.zhimg.com/80/v2-8acc618cd947334bec90eee01035ea92_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>选择发布版本</p><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://pic1.zhimg.com/80/v2-d5711ad0309751a7a1493f1846ef9899_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>工作流执行变量</p><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://pica.zhimg.com/80/v2-990d61efced2eb2c1fb8041b572d5144_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>工作流部署详情</p><span id="OSC_h1_6"></span><h1>&nbsp;</h1><span id="OSC_h1_7"></span><h1><strong><span>K8s Helm Chart 项目发布场景</span></strong></h1><span id="OSC_h3_8"></span><h3><strong><span>第一步：创建版本</span></strong></h3><div><div><strong><span>· </span></strong><span><span>进入 Helm Chart 项目 -&gt; </span></span><strong><span>版本管理</span></strong><span><span>，点击</span></span><strong><span>创建版本</span></strong><span><span>，进入创建版本流程。</span></span></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://picx.zhimg.com/80/v2-88f19bfbb5c82a5616474d0cf1fc015a_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>版本列表</p><div><div><strong><span>· </span></strong><span><span>第一步：填写版本基本信息，包括版本名称、版本标签、版本描述。</span></span></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://picx.zhimg.com/80/v2-51cb7bac255d288bf55d35f2d0f35797_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>填写基本信息</p><div><div><strong><span>· </span></strong><span><span>第二步：选择环境和服务，并且对所选服务配置做少量修改，以满足线上生产环境服务配置需求。</span></span></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://picx.zhimg.com/80/v2-bf0771ec8f0106bb15c00de2c2e0f3de_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>选择环境和服务</p><div><div><span><span>如果需要统一修改所有服务 values 文件中的变量值可以使用</span></span><strong><span>全局变量</span></strong><span><span>。如下图所示，填写全局变量，点击应用，所有服务 values 文件中的对应变量值统一被修改成</span></span><strong><span>全局变量</span></strong><span><span>中设置的变量值。</span></span></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://picx.zhimg.com/80/v2-3777905934ddcf6badaa0250668d4dd3_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>全局变量替换</p><div><div><strong><span>· </span></strong><span><span>第三步：选择交付物推送的仓库，并按需填写 Chart 版本号，配置镜像版本。</span></span></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://picx.zhimg.com/80/v2-96a87d06e402aa50aa6f6210fad6ec19_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>配置 Chart 和镜像版本</p><div><div><strong><span>· </span></strong><span><span>点击完成后，所选的服务配置（Chart）和镜像将被推送到对应仓库。</span></span></div></div><div><div><strong><span>· </span></strong><span><span>点击版本可查看版本详情，包括可下载的完整 Chart 信息、镜像信息等等，如下图所示。</span></span></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://picx.zhimg.com/80/v2-b4700c9bdf962b8dd2247d5ff77ba04c_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>版本详情</p><span id="OSC_h3_9"></span><h3><strong><span>第二步：发布版本</span></strong></h3><div><div><strong><span>· </span></strong><span><span>执行生产发布工作流，在「Helm Chart 部署」任务中选择版本，将版本内包含的所有 Chart 更新到指定环境。</span></span></div></div><div><div><em><span>生产发布工作流由管理员事先配置，包含「Helm Chart 部署」、「测试」、「人工审批」等步骤。</span></em></div></div><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://pica.zhimg.com/80/v2-b3aee134ce4115f906281630d7adac99_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>选择版本</p><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://pica.zhimg.com/80/v2-a500aeb7d77a090d5730bb5ec7a74551_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>选择发布版本</p><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://picx.zhimg.com/80/v2-42425603daac0d2b5953e4ca6a510ac7_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>工作流执行变量</p><div><div><div><div><div><div><div><p style="text-align:left"><img src="https://picx.zhimg.com/80/v2-e795bc67206eef4590651f821ef512b5_720w.jpg?source=d16d100b" width="654" referrerpolicy="no-referrer"></p></div></div></div></div></div></div></div><p>Helm Chart 部署详情</p><div><div><span><span>总的来说，Zadig 为版本管理和发布过程提供了高效的解决方案。通过版本创建和工作流版本发布功能，提升了发布过程的透明度和可控性。工程师可以在 Zadig 平台上轻松创建版本，并通过平台快速查看版本详情和执行发布任务，有效地管理产品的版本发布。这种集成式的版本管理和发布流程不仅提高了团队的工作效率，还有助于降低发布过程中的风险，确保产品交付的稳定性和质量。</span></span></div></div><div><div><span><span>Zadig 的版本管理适用于简单的发布场景。对于较为复杂的情况，可以使用发布计划来进行编排和团队协同。我们将在后续文章中介绍发布计划相关内容，敬请期待……</span></span></div></div><div>
  &nbsp; 
</div><div><div><div><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968">Zadig，让工程师更加专注创造</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-16e6b25cd9b3c92bc711c17b21e99e9b040.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491793%26idx%3D1%26sn%3Dcc7ca3be9a722dfb85f5416b1d03b7bf%26chksm%3Dcfb7ac71f8c02567f76235ab2176f03733c106c8c2ec34b2e05d85d0195e912678827edf9feb%26token%3D1750704535%26lang%3Dzh_CN%23rd" target="_blank">阅读原文</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank">Zadig 在 Github</a>&nbsp;/&nbsp;<a href="https://gitee.com/koderover/zadig">Zadig 在 Gitee</a></p></div></div><div><div><strong><span>推荐阅读：</span></strong></div><div>
    &nbsp; 
  </div><div><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491542%26idx%3D1%26sn%3D007a0329060f75cd6daa225fb4c3ed0e%26chksm%3Dcfb45376f8c3da6052fc628ed3083e2c27aa6f64b0b4efb8ee6473e663d62b91de05d7d067c4%26scene%3D21%23wechat_redirect" target="_blank">200 小时深度体验分析，DevOps 选型重磅发布</a><span style="color:#002a64">&nbsp;/&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491208%26idx%3D1%26sn%3D6d1a8fc08eae6c00c180939da8e213eb%26chksm%3Dcfb45228f8c3db3efac6c9116f0a26cacdb6e8c6dcf71e8756608d3ae908d13a1c6676f80dbf%26scene%3D21%23wechat_redirect" target="_blank">Jenkins 迁移 Zadig，新项目实施上线效率提升 6 倍</a>&nbsp;/&nbsp; 
   <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490637%26idx%3D1%26sn%3D6e0498b37fb15f8b8903c4997e5611d8%26chksm%3Dcfb450edf8c3d9fb758d691081f09fd85d91dbb17534ba9c18c2300725462d3806581efbd237%26scene%3D21%23wechat_redirect" target="_blank">Zadig vs. Jenkins 详细比对：时代的选择与开发者之选</a>&nbsp;/&nbsp; 
   <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491760%26idx%3D1%26sn%3D64665fb71c0c80b7f25b765854637a34%26chksm%3Dcfb7ac10f8c02506fcddf0ea25b090f1e44c6868887648cf927712c5cda84e9727cfb8df9648%26scene%3D21%23wechat_redirect" target="_blank">基于 Zadig + Ingress 实现单应用灰度发布最佳实践</a>&nbsp;/&nbsp; 
   <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491336%26idx%3D1%26sn%3D805f7d2c44c96cab529ffef120d84ca0%26chksm%3Dcfb453a8f8c3dabe83163a873135f2a72cdddcb9faeecefe5e40f20a358681304484c56cce51%26scene%3D21%23wechat_redirect" target="_blank">ZADIG 专家版倾情上线：一键高效发布，119 元/人月起，社区老友享年终福利！</a></div></div><div>
   &nbsp; 
 </div></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 01:57:15 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/11045940</guid>
            <link>https://my.oschina.net/koderover/blog/11045940</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Open 一 Sora1.0 全公开]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>所有训练细节/模型权重全公开，成本仅 1 万美元</p><p>OpenAI Sora 还没用上，Colossal-AI 团队正式宣布全面开源全球首个类 Sora 架构视频生成模型「Open-Sora 1.0」——涵盖了整个训练流程，包括数据处理、所有训练细节和模型权重，1 万美元 64 块 GPU 复现，训练成本直降 46%，携手全球 AI 热爱者共同推进视频创作的新纪元。（新智元）</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Mar 2024 00:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283699</guid>
            <link>https://www.oschina.net/news/283699</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[历时 20 年，GnuCOBOL 已达到工业成熟度]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">OCamlPro 创始人兼 GnuCOBOL 贡献者 Fabrice Le Fessant <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fftp.heanet.ie%2Fmirrors%2Ffosdem-video%2F2024%2Fh2215%2Ffosdem-2024-3249-gnucobol-the-free-industrial-ready-alternative-for-cobol-.av1.webm" target="_blank">表示</a>，经过 20 年的发展，开源 GnuCOBOL「已经达到了工业成熟度，可以在所有环境中与专有产品竞争。」</span></p><p><img height="282" src="https://oscimg.oschina.net/oscnet/up-f841c8a4f74c37bf76aa87226db78e14e1b.png" width="500" referrerpolicy="no-referrer"></p><blockquote><p><span style="color:#000000">GnuCOBOL 是一款免费的现代 COBOL 编译器，曾用名 OpenCOBOL，于 2013 年更名为 GnuCOBOL。实现了 COBOL 85、X/Open COBOL 和较新的 ISO COBOL 标准（2002、2014、2023）的大部分内容，以及其他 COBOL 编译器（IBM COBOL、MicroFocus COBOL、ACUCOBOL-GT 等）中的许多扩展。</span></p><p><span style="color:#000000">GnuCOBOL 将 COBOL 翻译成 C，并在内部使用 native C 编译器编译翻译后的代码。在各种平台上构建 COBOL 程序，包括 GNU/Linux、Unix、Mac OS X 和 Microsoft Windows。GnuCOBOL 还可在 HP/UX、z/OS、SPARC、RS6000、AS/400 以及其他机器和操作系统组合上构建。</span></p><p><span style="color:#000000">COBOL 是最古老的编程语言之一，历史可以追溯到 1959 年左右；但当下仍被大型组织广泛用于处理来自重要中央系统的数据，例如账单、帐户、工资单和客户交易等。2022 年的一项调查指出，92% 的受访者认为 COBOL 具有战略意义，日常使用的 COBOL 代码量显着增加至 775-8500 亿行；大约是先前估计的三倍。</span></p></blockquote><p><span style="color:#000000">GnuCOBOL 项目负责人 Simon Sobisch 指出，GnuCOBOL 正在进行大量的商业部署，如银行后端应用程序，其中许多是从 Micro Focus 迁移过来的，且用户报告称性能因此得到了提高。GnuCOBOL 代码的实现可以运行数千个处理器，这使项目开发人员有机会在大型用例中调整性能和内存使用情况。</span></p><p><span style="color:#000000">Sobisch 称，GnuCOBOL 在合规性方面通过了 97% 的 COBOL 85 一致性测试，超越了现有的专有产品。不过 GnuCOBOL 暂时还不支持 objects 或 messages。对此 Sobisch 解释道：「objects 是 COBOL 22 中的一个很好的功能，但使用得并不多。」</span></p><p><strong><span style="color:#000000">相关阅读：</span></strong></p><ul><li><p style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/news/148786/cobol-old-programming-languages" target="_blank">调查：COBOL 程序员后继无人，一些关键岗位或面临空缺</a></p></li><li><p style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/news/181943/microfocus-cobol-market-research-2022" target="_blank">COBOL 代码行数超 8000 亿，应用现代化是首选发展道路</a></p></li><li><p style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/news/255047/ibm-ai-translate-cobol-code-to-java" target="_blank">IBM 利用 AI 将 COBOL 代码转换为 Java</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 08:12:11 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283605/gnucobol-ready-for-industry</guid>
            <link>https://www.oschina.net/news/283605/gnucobol-ready-for-industry</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中国信通院发布《绿色算力技术创新研究报告（2024 年）》]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">《绿色算力技术创新研究报告（2024 年）》由中国信息通信研究院云计算与大数据研究所编制，旨在梳理绿色算力技术的创新发展趋势，推动中国算力产业的绿色高质量发展。</p><p style="color:#060607; margin-left:0; margin-right:0; text-align:start"><img alt="" height="509" src="https://static.oschina.net/uploads/space/2024/0318/150145_iTRv_4700705.png" width="360" referrerpolicy="no-referrer"></p><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">报告的核心内容包括：</p><ol><li><p style="margin-left:0; margin-right:0"><strong>绿色算力发展态势</strong>：介绍了算力作为数字经济时代的关键生产力，以及绿色低碳、节能环保成为产业发展的底层逻辑。报告强调了技术创新在绿色算力发展中的根本作用，并概述了算力产业的政策背景、市场规模增长、产业生态丰富性以及绿色发展的必然要求。</p></li><li><p style="margin-left:0; margin-right:0"><strong>绿色算力概念内涵</strong>：绿色算力是算力基础设施实现绿色、低碳、可持续发展的一种形式，涉及自然资源、环境资源的考量，以及经济效益与环境保护、社会责任的融合。</p></li><li><p style="margin-left:0; margin-right:0"><strong>绿色算力发展演进</strong>：报告将绿色算力的发展分为四个阶段：初级阶段（1996-2006 年）、起步阶段（2007-2020 年）、发展阶段（2021-2030 年）和成熟阶段（2030 年及未来），每个阶段的特征和发展重点有所不同。</p></li><li><p style="margin-left:0; margin-right:0"><strong>绿色算力属性特征</strong>：绿色算力具有全局性、先导性、长期性等特点，对数字经济发展和高增长企业的孵化具有重要作用。</p></li><li><p style="margin-left:0; margin-right:0"><strong>绿色算力设施层技术创新</strong>：探讨了建设绿色能源替代、创新储能部署方式、应用自然冷却技术和液冷技术等，以降低供电传输损耗和数据中心制冷用电需求。</p></li><li><p style="margin-left:0; margin-right:0"><strong>绿色算力设备层技术创新</strong>：包括优化服务器硬件节能、开发存储材料及工艺、应用无损网络介质等，以提高数据技术效率和网络传输效率。</p></li><li><p style="margin-left:0; margin-right:0"><strong>绿色算力平台层技术创新</strong>：涉及迭代资源管理技术、简化产品开发模式、完善环境监测体系等，以实现算力资源的高效调度和利用。</p></li><li><p style="margin-left:0; margin-right:0"><strong>绿色算力技术赋能经济社会发展</strong>：绿色算力技术在加速科研技术革命、赋能产业节能低碳、助力社会治理格局构建等方面的应用和价值。</p></li><li><p style="margin-left:0; margin-right:0"><strong>绿色算力发展的展望与建议</strong>：提出了加强绿色算力政策保障、夯实绿色能源底座支撑、巩固绿色设备技术创新、聚焦绿色平台能力建设和深入挖掘应用场景价值等建议。</p></li></ol><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">报告强调了绿色算力技术创新的重要性，并提出了相应的发展建议，以期实现数字经济的高质量发展和绿色转型。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">报告详情可至<strong><span style="color:#333333"><span style="background-color:#f39c12">「开源中国 APP - 报告模块」</span></span></strong>查看。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">APP 下载地址：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="300" src="https://oscimg.oschina.net/oscnet/up-8ab7bb9f45ecaae87f7a862ea446ae1dacf.png" width="300" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>（<em>目前仅提供 Android 版本）</em></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 07:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283584</guid>
            <link>https://www.oschina.net/news/283584</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[博通 CEO 承认 VMware 社区存在「一些不安」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">博通 (Broadcom) 首席执行官 Hock Tan 将其收购 VMware 后的第一个百天评价为「一个良好的开端」。但他也承认，这家虚拟化巨头的快速变化让一些人难以消化。</span></p><p><span style="color:#000000">Tan 在博通公司的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.broadcom.com%2Fblog%2Fvmware-by-broadcom-the-first-100-days" target="_blank">博客</a>上写道：</span></p><blockquote><p><span style="color:#000000">虽然还有很多工作要做，但我们在打造全球领先的基础设施技术公司方面已经取得了实质性进展。在评估和收购 VMware 的 18 个月过程中，我们审视了一切，以确定为客户创造更多价值所需的条件。自 11 月底完成收购以来，我们采取了果断行动来提高客户价值。</span></p><p><span style="color:#000000">我们彻底改革了我们的软件产品组合、进入市场的方法和整体组织结构。我们改变了销售软件的方式和对象。我们已经完成了从 2019 年开始加速的软件业务模式转型，从销售永久软件到仅订阅许可（行业标准）。</span></p><p><span style="color:#000000">当然，我们认识到这种程度的变化给我们的客户和合作伙伴带来了一些不安，这是可以理解的。但所有这些举措都是为了更快地创新、更有效地满足客户的需求以及让与我们开展业务变得更容易。我们还期望这些变化能够为我们的合作伙伴提供更大的盈利能力和更好的市场机会。</span></p></blockquote><p><img height="255" src="https://oscimg.oschina.net/oscnet/up-9d53649997180c88243beb10341cdfcd9b3.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">他接着还提到了 VMware 的 Cloud Foundation 产品，承诺将投入 10 亿美元的研发资金来改进该产品，并指出博通已将订阅标价减半。</span></p><p><span style="color:#000000">但 The Register 指出，Tan 忽略了一点，即 VMware 现在只销售捆绑产品，这意味着 Cloud Foundation 现在是一些客户重新授权其现有 VMware 财产的唯一途径。Cloud Foundation 涵盖了软件定义的计算、网络、存储和管理工具--并非所有 VMware 客户都使用或需要这样的组合。</span></p><p><span style="color:#000000">因此，被迫购买 Cloud Foundation 意味着有些人被迫支付比他们想要的更多的软件费用--这种情况导致一些客户的账单大幅增加。The Register 虚拟化部门获悉，许可证成本上涨了 500% 或 600%；在某些情况下，在裸机上运行工作负载比使用服务器虚拟化更便宜。</span></p><p><span style="color:#000000">博通公司认为，如果这些客户实施所有 Cloud Foundation，他们将获得更好的收益；因为与不断增加的公共云成本相比，它将「为普通企业客户带来更低的拥有成本」。</span></p><p><span style="color:#000000">Tan 认为，博通迄今所采取的行动解决了 "我们的客户直接向我表达的作为其最关键优先事项的业务成果"。据 The Register 了解，VMware by Broadcom 将在 5 月份左右发布 Cloud Foundation 和其他核心 VMware 产品的增强功能。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 06:56:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283580/vmware-by-broadcom-the-first-100-days</guid>
            <link>https://www.oschina.net/news/283580/vmware-by-broadcom-the-first-100-days</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[北京将发布第一代通用开放人形机器人本体]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">北京青年报消息称，最近，北京人形机器人创新中心传来好消息，近期将发布第一代通用开放人形机器人本体。</span></p><p><span style="color:#000000">北京人形机器人创新中心相关负责人介绍，该中心主要面向人形机器人核心器件、通用本体、通用大模型、运动控制系统、工具链和开源社区等人形机器人行业短板和痛点开展技术攻关，将为整个行业打造出共性技术平台、公共服务平台以及规范人形机器人相关标准等，总体来说，中心将围绕人形机器人产业通用部分发力，服务整个行业发展。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:54:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283529</guid>
            <link>https://www.oschina.net/news/283529</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Podman Desktop 1.8 发布，带来自己的 K8s GUI]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Podman Desktop 1.8 已经发布，此版本带来：</p><ul><li><strong>Podman 4.9.3</strong>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman%2Freleases%2Ftag%2Fv4.9.3" target="_blank">Podman 4.9.3</a>现在包含在 Windows 和 Mac 安装程序中。</li><li><strong>Kubernetes Explorer</strong>：用于使用 Kubernetes 集群的高级 UI 和新工具。</li><li><strong>Global Onboarding</strong>：通过一组指导工作流程，轻松配置和设置您的环境。</li><li><strong>学习中心</strong>：为开发人员发现新的用例和功能。</li><li><strong>扩展 API 改进</strong>：扩展 API 的另一项重大更新，为 🦭 Podman Desktop 的扩展带来更多好处。</li><li><strong>增强的构建、Pod 列表和故障排除页面</strong>：针对不同平台进行构建、升级的 Pod 视图等。</li></ul><p><img height="944" src="https://static.oschina.net/uploads/space/2024/0318/103731_jmJO_3820517.png" width="1704" referrerpolicy="no-referrer"></p><h3>Podman&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23podman-493" target="_blank">4.9.3</a></h3><p style="margin-left:0px; margin-right:0px; text-align:start">🦭 Podman 4.9.3 包括针对我们用户报告的稳定性和可靠性问题的关键修复 - 特别是如果您使用 Apple 芯片架构。如果您一直在苦苦挣扎，我们强烈建议您更新！</p><h3>Kubernetes<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23kubernetes-explorer" target="_blank">资源管理器</a></h3><p style="margin-left:0px; margin-right:0px; text-align:start">在过去的版本中作为实验性功能逐步引入，我们已准备好扩展我们的功能以帮助开发人员从容器过渡到 Kubernetes。在此版本中，我们引入了一组新功能，使开发人员能够使用更多 Kubernetes 资源，从而对应用程序提供更精细和交互式的控制。</p><p style="margin-left:0px; margin-right:0px; text-align:start">现在，🦭 Podman Desktop 中提供了一个新的 Kubernetes Explorer，除了对 Pod 的现有支持之外，它还能够使用部署、服务、入口和路由。对于每个资源，Podman Desktop 提供有关集群上资源状态的实时信息。在此概述页面的右上角，您还可以单击应用 YAML 在集群上创建或更新资源（类似于「kubectl apply -f」），并查看当前连接状态。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="844" src="https://static.oschina.net/uploads/space/2024/0318/104554_X2mJ_3820517.png" width="1296" referrerpolicy="no-referrer"></p><p>就像本地容器或映像一样，您可以单击「摘要」、「检查」和 Kube (YAML) 页面上的更多详细信息。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="862" src="https://static.oschina.net/uploads/space/2024/0318/104606_xUKa_3820517.png" width="1306" referrerpolicy="no-referrer"></p><p>看到问题了吗？您可以直接从 Kube 选项卡编辑和应用更改。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><img height="860" src="https://static.oschina.net/uploads/space/2024/0318/104617_Knka_3820517.png" width="1302" referrerpolicy="no-referrer"></p><p>🦭 Podman Desktop 继续弥合差距和差异，使使用容器的开发人员能够通过高效的工作流程从本地工作站瞄准 Kubernetes。这是除了一些已经可用的强大功能之外的所有功能：</p><ul><li>Podman 的原生 Kubernetes 支持</li><li>Podify - 将容器转换为 Pod</li><li>使用 Minikube 和 Kind 扩展设置本地 Kubernetes 环境</li><li>部署到 Kubernetes 并将本地映像从 Podman 推送到 Kubernetes 环境</li><li>管理 Kubernetes 上下文</li><li>连接到远程 Kubernetes 集群</li></ul><h3>扩展 API<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23extension-api-improvements" target="_blank">改进</a></h3><p style="margin-left:0px; margin-right:0px; text-align:start">我们继续花费大量时间添加新的扩展 API，为即将推出的扩展提供更多功能，甚至更好地集成到 🦭 Podman Desktop：</p><ul><li>拆分 getMatchingPodmanEngine&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6160" target="_blank">#6160</a></li><li>创建容器时添加 HealthCheck 参数<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5981" target="_blank">#5981</a></li><li>将 listPods 暴露给扩展<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5864" target="_blank">#5864</a></li><li>createPod 的标签<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5862" target="_blank">#5862</a></li><li>允许在 Pod 中创建容器<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5848" target="_blank">#5848</a></li><li>OpenPod 应重定向到 pod 的视图<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5846" target="_blank">#5846</a></li><li>增强 createContainer API 缺少参数的情况<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6011" target="_blank">#6011</a></li><li>允许扩展使用 openDialog/saveDialog&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6009" target="_blank">#6009</a></li><li>允许在贡献的操作中自定义图标<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5995" target="_blank">#5995</a></li><li>添加缺失的类型<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6213" target="_blank">#6213</a></li><li>允许从扩展导航到特定的 Web 视图<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5899" target="_blank">#5899</a></li><li>将 stopPod 和 removePod 暴露给扩展<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5898" target="_blank">#5898</a></li><li>使用新的 API 打开/保存对话框<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6051" target="_blank">#6051</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6050" target="_blank">#6050</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6049" target="_blank">#6049</a></li><li>扩展 Podman Desktop API 构建映像参数<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5882" target="_blank">#5882</a></li><li>允许扩展至统计容器<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fissues%2F6211" target="_blank">#6211</a></li></ul><hr><h2>其他值得注意的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23other-notable-enhancements" target="_blank">增强功能</a></h2><p style="margin-left:0px; margin-right:0px; text-align:start">我们在此版本中添加了 40 多项功能，以下是其他一些亮点：</p><ul><li>改进 Podman Desktop 更新警报<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6068" target="_blank">#6068</a></li><li>在故障排除中添加收集和下载日志按钮<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5119" target="_blank">#5119</a></li><li>为 Linux 启用 podman 机器<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5902" target="_blank">#5902</a></li><li>多次删除动画<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5717" target="_blank">#5717</a></li><li>图像删除动画<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5709" target="_blank">#5709</a></li><li>卷删除动画<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5707" target="_blank">#5707</a></li><li>打开 OpenShift 路线<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5560" target="_blank">#5560</a></li><li>添加打开创建的 Pod 详细信息<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F4499" target="_blank">#4499</a></li><li>部署到 kubernetes 集群时使用 https&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5824" target="_blank">#5824</a></li><li>仪表板页面上的入门轮播<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5142" target="_blank">#5142</a></li><li>删除对象时添加确认对话框<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5445" target="_blank">#5445</a></li></ul><p style="margin-left:0px; margin-right:0px; text-align:start">我们在实施 light 模式方面也取得了一些重大进展：</p><ul><li>使用主题颜色反转内容<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6029" target="_blank">#6029</a></li><li>使用辅助导航的主题颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6028" target="_blank">#6028</a></li><li>为全球导航应用主题颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6027" target="_blank">#6027</a></li><li>为标题栏应用主题颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6025" target="_blank">#6025</a></li><li>一致的关闭按钮<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6060" target="_blank">#6060</a></li><li>在快速选择中使用组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6057" target="_blank">#6057</a></li><li>为 webview 提供 css 颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5963" target="_blank">#5963</a></li><li>将颜色发布到应用程序的样式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5962" target="_blank">#5962</a></li><li>允许扩展提供带有一组颜色的主题<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5961" target="_blank">#5961</a></li><li>商店颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5960" target="_blank">#5960</a></li><li>包括颜色注册表<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5958" target="_blank">#5958</a></li><li>添加实用方法来获取主题的值<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5947" target="_blank">#5947</a></li><li>当操作系统更改颜色时发送事件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5946" target="_blank">#5946</a></li><li>清理深色：前缀颜色<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5944" target="_blank">#5944</a></li><li>将调色板提取到自己的文件中<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5931" target="_blank">#5931</a></li><li>输入组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5904" target="_blank">#5904</a></li><li>输入错误，在运行图像中使用输入组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5988" target="_blank">#5988</a></li><li>构建图像时使用输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5986" target="_blank">#5986</a></li><li>使用代理设置输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5943" target="_blank">#5943</a></li><li>使用注册表输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5939" target="_blank">#5939</a></li><li>从容器创建 pod 时使用输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5935" target="_blank">#5935</a></li><li>在扩展页面中使用输入组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5934" target="_blank">#5934</a></li><li>在创建卷中使用输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5933" target="_blank">#5933</a></li><li>重命名图像时使用输入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5964" target="_blank">#5964</a></li><li>在部署到 kube 时使用复选框组件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6030" target="_blank">#6030</a></li></ul><hr><h2>值得注意的错误<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23notable-bug-fixes" target="_blank">修复</a></h2><p style="margin-left:0px; margin-right:0px; text-align:start">我们在此版本中修复了许多错误，包括以下内容：</p><ul><li>将容器复制到 pod 时安装的复制卷<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5640" target="_blank">#5640</a></li><li>更改卷和容器列表中「创建」按钮的顺序<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6092" target="_blank">#6092</a></li><li>上下文值更新时刷新入门项目 (#4597)&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6173" target="_blank">#6173</a></li><li>更好地登录 informer 连接错误<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6158" target="_blank">#6158</a></li><li>网站：替换损坏的链接<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6111" target="_blank">#6111</a></li><li>中心空屏幕<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6077" target="_blank">#6077</a></li><li>不要求确认打开本地文件夹/文件<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5743" target="_blank">#5743</a></li><li>强制面包屑垂直对齐<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5741" target="_blank">#5741</a></li><li>身份验证页面中的长用户名<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5737" target="_blank">#5737</a></li><li>用于更新任务名称的消息属性<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5731" target="_blank">#5731</a></li><li>导航项 UI 修复<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5886" target="_blank">#5886</a></li><li>显示回注册表的图标<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5843" target="_blank">#5843</a></li><li>检查路由 tls 以使用 http 或 https&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5825" target="_blank">#5825</a></li><li>白色工具提示<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5887" target="_blank">#5887</a></li><li>限制注册表用户名列宽度<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5718" target="_blank">#5718</a></li><li>删除 Linux 上的 docker 兼容性警告和按钮<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5903" target="_blank">#5903</a></li><li>容器的图像使用情况<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5663" target="_blank">#5663</a></li><li>删除当前上下文时应更改/更新<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5819" target="_blank">#5819</a></li><li>不要折叠侧边栏上的类别<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5727" target="_blank">#5727</a></li><li>使 localhost 成为 env.openExternal 调用的有效域<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5716" target="_blank">#5716</a></li></ul><hr><h2><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fblog%2Fpodman-desktop-release-1.8%23documentation" target="_blank">文档</a></h2><p style="margin-left:0px; margin-right:0px; text-align:start">随着新版本的 🦭 Podman Desktop 的发布，文档也进行了以下改进：</p><ul><li>containerEngine api 的容器和图像相关方法<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5891" target="_blank">#5891</a></li><li>删除了使用 openshift local 安装 podman&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F6070" target="_blank">#6070</a></li><li>文档图像检查器提供程序 API&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5813" target="_blank">#5813</a></li><li>添加 withProgress api 文档<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5736" target="_blank">#5736</a></li><li>添加了故障排除页面的链接<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5734" target="_blank">#5734</a></li><li>macOS M1/M2/M3 上的安装故障排除<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5708" target="_blank">#5708</a></li><li>卷删除<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5707" target="_blank">#5707</a></li><li>添加了<em>从另一个 WSL 实例访问 Podman</em>（配置、验证）<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5706" target="_blank">#5706</a></li><li>使用 typedoc 生成 api 文档<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fcontainers%2Fpodman-desktop%2Fpull%2F5705" target="_blank">#5705</a></li></ul><p>下载：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpodman-desktop.io%2Fdownloads" target="_blank">https://podman-desktop.io/downloads</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:44:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283526/podman-desktop-1-8-released</guid>
            <link>https://www.oschina.net/news/283526/podman-desktop-1-8-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[苹果公布多模态大模型 MM1 ：具备 300 亿参数、MoE 架构]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Arxiv 页面显示，苹果正式公布了自研多模态大模型 MM1，该模型提供 30 亿、70 亿、300 亿三种参数规模，拥有图像识别和自然语言推理能力。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1830efcd0b15aa4c9ab91a1930b93946ba5.png" referrerpolicy="no-referrer"></p><blockquote><p>论文地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2403.09611.pdf" target="_blank">https://arxiv.org/pdf/2403.09611.pdf</a></u></em></p></blockquote><p>论文显示，MM1 多模态大模型由密集模型和混合专家（MoE）变体组成，不仅在预训练指标中实现 SOTA，在一系列已有多模态基准上监督微调后也能保持有竞争力的性能。</p><p>MM1 在上下文预测、多图像和思维链推理等方面具有不错的表现。同样，MM1 在指令调优后展现出了强大的少样本学习能力。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a87f60da1b565af1fcea6676398fae62c86.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1d2969535bc23054d47b0f450a2247bb2f7.png" referrerpolicy="no-referrer"></p><p>根据介绍，苹果研究团队相关论文主要是利用 MM1 模型做实验，通过控制各种变量，找出影响模型效果的关键因素。研究表明，图像分辨率和图像标记数量对模型性能影响较大，视觉语言连接器对模型的影响较小，不同类型的预训练数据对模型的性能有不同的影响。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:40:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283523</guid>
            <link>https://www.oschina.net/news/283523</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源日报 | RISC-V 正在发生质变？离职后可以删除自己所写的软件吗]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。</p><h3 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#e67e22"><strong># 2024.3.15</strong></span></h3><h2 style="margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#16a085">今日要点</span></strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>OpenSource Daily</strong></p><h3 style="margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/news/283159" target="_blank">Intel 6.2GHz 限量旗舰 i9-14900KS 正式发布</a></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">Intel 正式发布了酷睿 14 代家族的顶级限量版本，酷睿 i9-14900KS，国行定价 6299 元。它在历史上第一次将 PC 处理器的加速频率做到了惊人的 6.2GHz，比上代限量版 i9-13900KS 又高出 200MHz。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">i9-14900KS 可以看作是 i9-14900K 的特挑加速版，同样都是 8P+16E 24 核心 32 线程、32MB 二级缓存、36MB 三级缓存、UHD 770 核芯显卡，内存支持 DDR4-3200、DDR5-5600，最大容量 192GB，扩展支持 16 条 PCIe 5.0、4 条 PCIe 4.0，兼容 Z690、Z790 主板。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="272" src="https://oscimg.oschina.net/oscnet/up-3349dddd8640fa732924019627a31b6f3c8.png" width="500" referrerpolicy="no-referrer"></p><h3 style="margin-left:0; margin-right:0; text-align:start"><a href="https://my.oschina.net/u/6148470/blog/11047444" target="_blank">80 岁图灵奖得主再度出山，打造基于数据库的云原生操作系统 DBOS</a></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">本来以为教授该颐养天年了，没想到以 80 岁高龄，再度出山。这次老爷子还跨界了，把手伸到了操作系统领域，要把操作系统建在数据库上。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">DBOS 故名思义，基于 DB 的 OS，就是把数据库作为操作系统的底层，这样操作系统就获得了数据库的特性。除了给操作系统原生的数据库能力之外，DBOS 的另一个目标是做一个云原生的操作系统。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="file" height="262" src="https://oscimg.oschina.net/oscnet/up-b5045fa7057d6a40319508573b8925b9496.png" width="500" referrerpolicy="no-referrer"></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><strong><span style="color:#16a085">今日观察</span></strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="126" src="https://oscimg.oschina.net/oscnet/up-841f2615590fad9f13ca88fbf3003203b34.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">- 微博&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F2418179934%2FO4Z6h2oIv%3Frefer_flag%3D1001030103_" target="_blank"><em><u>飞扬南石</u></em></a></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="100" src="https://oscimg.oschina.net/oscnet/up-cf0d92c02a43754ff97ebac7098f11b5400.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">-&nbsp;微博 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fweibo.com%2F1464484735%2FO54Z4Apf8%3Frefer_flag%3D1001030103_" target="_blank"><em><u>黄建同学</u></em></a></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="109" src="https://oscimg.oschina.net/oscnet/up-b82f753a7b421550bb8b164d63de7077ae0.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">- <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcaifuhao.eastmoney.com%2Fnews%2F20240314183626385310570" target="_blank"><em><u>南方+客户端</u></em></a></span></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#16a085"><strong>今日推荐</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="405" src="https://oscimg.oschina.net/oscnet/up-581275f1990d052c974fbf41769a5d9f841.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkamiyaa%2Fjoshuto" target="_blank">https://github.com/kamiyaa/joshuto</a></u></em></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#16a085"><strong>事件点评</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="467" src="https://oscimg.oschina.net/oscnet/up-0861950873ced1989848f40399ee3e6e763.png" width="500" referrerpolicy="no-referrer"></p><hr><h2 style="margin-left:0; margin-right:0; text-align:left"><span style="color:#16a085"><strong>每日项目榜</strong></span></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong><span style="background-color:#e67e22">每日 GitHub 精选</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="665" src="https://oscimg.oschina.net/oscnet/up-f7661ba51e0a0b624d2ce624a4c56894528.png" width="500" referrerpolicy="no-referrer"></p><blockquote><h4 style="margin-left:0; margin-right:0"><strong><span style="background-color:#e67e22">在线阅读完整日报内容，访问：</span></strong><br><em><u><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/bkpgqfjrsg02gbc/30_i9_14900_ks_hip_rt_PUJjodKP2j.pdf" target="_blank">开源日报第 030 期：RISC-V 正在发生质变？离职后可以删除自己所写的软件吗</a></u></em></h4></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>往期回顾</strong></p><ul style="list-style-type:disc; margin-left:0; margin-right:0"><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/71npja41p7l4ojy/29_risc_v_ai_smart_B3RnKR88Kl.pdf" target="_blank">开源日报第 029 期：英特尔获准继续向华为出售芯片；明年 AI 将比任何人都聪明</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/q35lx4s6qq9ls4r/28_cognition_labs_devin_Epbxne3xzN.pdf" target="_blank">开源日报第 028 期：全球首位 AI 软件工程师 Devin；谷歌承认 「窃取」 OpenAI 模型关键信息</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/hh291xp9mxksc9i/27_ai_google_50_gpt_4_KfagjDXXfZ.pdf" target="_blank">开源日报第 027 期：AI 接连翻车的 Google 要变天了；互联网大厂 50 款大模型及应用，能否全面超越 GPT-4？</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/uwsizmmsnhq8zdk/26_git_hub_22_web_os_22_vue_rolldown_FpVykoR7rJ.pdf" target="_blank">开源日报第 026 期：大模型替代程序员根本就是一个伪命题；GitHub 顶流 "Web OS"</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6ho57sxydzsh9jh/25_ai_5_ax1LWz5GP5.pdf" target="_blank">开源日报第 025 期：买手机送大模型；「钓鱼式维权」 须遏制；「AI 原生」 骗局江湖</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/7xd6teyhekcvamw/24_risc_v_x86_arm_5LsjoStPUn.pdf" target="_blank">开源日报第 024 期：RISC-V 能否和 x86、Arm 一起成为三大主流架构；给阎王开发地府管理系统</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/svxac61bjmbmmw5/23_google_microsoft_cM5zZacKru.pdf" target="_blank">开源日报第 023 期：Google = 开源，好评；Microsoft = 闭源收入还低，差评</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/3vmzfjvp7mpvv26/22_sora_cuda_Syy7OJyUvc.pdf" target="_blank">开源日报第 022 期：轻松复现 Sora 模型；事关 CUDA 兼容，英伟达禁止了；百度还差一个 「遥遥领先」</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/z3rhs3qkyeqwoax/21_open_ai_JROaEZat3b.pdf" target="_blank">开源日报第 021 期：闭源模型就是比开源安全；起诉 OpenAI 不能更赞同</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/lv84pwvd03it00i/20_open_ai_pingora_yaml_mE5RuB20Vl.pdf" target="_blank">开源日报第 020 期：为什么王炸都来自 OpenAI；Pingora 最好不要用 YAML 当配置文件</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/mx86z1dhywrw71p/19_ai_c_llm_IgpNOVZtCz.pdf" target="_blank">开源日报第 019 期：我让 AI 用 C 语言写一个算法；微软三进制 LLM</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/qdljicvqiqsshd6/187ZiLwG48lc_CngfQJ1Qxs.pdf" target="_blank">开源日报第 018 期：苹果十年造车梦碎；这个开源项目有点...「大胆」</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/7r8dkz3232v4e7a/17_maria_db_v_linux_GoyNoM85IZ.pdf">开源日报第 017 期：MariaDB 消亡史；写代码我有三不沾；V 神建议马斯克用 Linux</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6typ9w3u98f5mxn/16_1_8_2efTeNfFjN.pdf">开源日报第 016 期：鸿蒙程序员平均月薪超 1 万 8；中美 AI 差距有多大？</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/92n4c9ryegpcq1z/015_sora_KcAkRNX93Y.pdf">开源日报第 015 期：为什么挡不住英伟达；Sora 不靠蛮力</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/s7n800w84o6guyv/014_kyezhNxOGD.pdf">开源日报第 014 期：目前的人工智能技术连猫的智能水平都没达到</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC013%E6%9C%9F%EF%BC%9A%E7%AD%89%E5%88%B0%20Sora%20%E5%BC%80%E6%BA%90%E4%BA%86%E7%AB%8B%E5%88%BB%E6%8E%A8%E5%87%BA%E5%B1%9E%E4%BA%8E%E6%88%91%E4%BB%AC%E8%87%AA%E5%B7%B1%E7%9A%84%E5%A4%A7%E6%A8%A1%E5%9E%8B.pdf">开源日报第 013 期：等到 Sora 开源了立刻推出属于我们自己的大模型</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC012%E6%9C%9F%EF%BC%9ASora%20%E7%BB%99%E4%B8%AD%E5%9B%BD%20AI%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9C%9F%E5%AE%9E%E5%8F%98%E5%8C%96%EF%BC%9BDart%203.3%20%E5%8F%91%E5%B8%83.pdf">开源日报第 012 期：Sora 给中国 AI 带来的真实变化；Dart 3.3 发布</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC11%E6%9C%9F%EF%BC%9A%E7%9B%AE%E5%89%8D%E8%BF%98%E6%B2%A1%E6%9C%89%E2%80%9C%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%89%88Linux%E2%80%9D.pdf">开源日报第 011 期：目前还没有 「大模型版 Linux」</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC010%E6%9C%9F%EF%BC%9ATauri%20v2%20%E6%94%AF%E6%8C%81%20Android%20%E5%92%8C%20iOS%EF%BC%8C%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%96%B0%E9%80%89%E6%8B%A9.pdf">开源日报第 010 期：Tauri v2 支持 Android 和 iOS，跨平台开发新选择</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5009%E6%9C%9F%EF%BC%9AVue.js%E8%AF%9E%E7%94%9F10%E5%91%A8%E5%B9%B4%EF%BC%9B%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC%E8%A7%A3%E9%87%8AMeta%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E6%BA%90%E5%85%B6AI%E6%8A%80%E6%9C%AF.pdf">开源日报第 009 期：Vue.js 诞生 10 周年；扎克伯格解释 Meta 为什么要开源其 AI 技术</a></li><li><a href="https://www.oschina.net/news/277585">开源日报第 008 期：推动中国开源软硬件发展的经验与建议</a></li><li><a href="https://www.oschina.net/news/277415">开源日报第 007 期：「Linux 中国」 开源社区宣布停止运营</a></li><li><a href="https://www.oschina.net/news/277214">开源日报第 006 期：选择技术栈一定要选择开源的</a></li><li><a href="http://www.oschina.net/news/277040">开源日报第 005 期：RISC-V 万兆开源交换机发售；npm 存在大量武林外传视频</a></li><li><a href="https://www.oschina.net/news/276864">开源日报第 004 期：百度输入法在候选词区域植入广告；大神用 Excel 构建 CPU</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:34:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/283521</guid>
            <link>https://www.oschina.net/news/283521</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[四年增长 100 倍的 Figma，数据库团队是怎么活下来的]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>原文<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.figma.com%2Fblog%2Fhow-figmas-databases-team-lived-to-tell-the-scale%2F" target="_blank">链接</a></p><blockquote><p>Figma 是近几年全球增速最快的 SaaS 服务之一。作为新一代的在线协同设计软件，Adobe 曾一度计划以 200 亿美金收购 Figma，最后因为反垄断的顾虑而终止。本文介绍了 Figma 数据库团队过去 9 个月如何赶在数据库无法支撑业务前，完成了技改。</p></blockquote><p>这是一场持续 9 个月的历程，我们对 Figma 的 Postgres 进行了水平分片，来实现（几乎）无限的可扩展性。</p><hr><p>自 2020 年以来，Figma 的数据库增长了近 100 倍。这是一个甜蜜的烦恼，因为这意味着我们的业务在扩张，但也带来了一些棘手的技术挑战。在过去的四年里，我们付出了巨大努力保持领先地位，并避免潜在的成长烦恼。2020 年时，我们运行着一个单体 Postgres 数据库，托管在 AWS 最大的物理实例上；到 2022 年底，我们已经建立起具有缓存、只读副本和十几个垂直分区数据库的分布式架构。我们将相关表组（如「Figma 文件」或「组织」）拆分到它们自己的垂直分区，这使得我们能够获得渐进式扩展收益，并保持足够空间提前应对增长。 尽管我们在渐进式扩展方面取得了进展，但我们始终知道垂直分区只能让我们走到这一步。我们最初的扩展工作集中在减少 Postgres CPU 利用率上。随着我们的集群规模越来越大且更加异构化，我们开始监控一系列瓶颈。我们使用历史数据和负载测试相结合来量化数据库从 CPU 和 IO 到表大小和写入行数的扩展限制。识别这些限制对于预测每个分片还能撑多久至关重要。然后，我们可以在问题发育成主要可靠性风险之前优先处理扩展问题。</p><p>数据显示，我们的一些表格包含数 TB 级，数十亿行数据，已经变得太大以至于无法放入单个数据库中。在这种规模下，我们开始看到 Postgres vaccume 操作期间出现可靠性问题，这些操作是，保持 Postgres 不会用尽事务 ID (Transaction Wraparound) 并崩溃的关键后台操作。我们最高写入量的表格增长太快了，以至于很快就会超过 AWS RDS 支持的每秒最大 IO 操作次数（IOPS）。由于垂直分片不能解决问题，因为分片的最小单位只能一个单独的表。为了防止我们的数据库倒塌，我们需要更大的杠杆。</p><h2>整装待发</h2><p>我们列出了一些目标和必备条件，以解决短期挑战，并为顺利长期增长做好准备。我们的目标是：</p><ul><li><strong>尽可能不影响开发人员</strong>：我们希望能处理大部分应用程序已有的复杂关系数据模型。应用程序开发人员可以专注于在 Figma 中构建令人兴奋的新功能，而不是重构我们代码库中的大部分内容。</li><li><strong>应用无感扩展</strong>：在未来的扩展中，我们不希望在应用程序层面进行额外的更改。这意味着，在做任何初始工作使表兼容之后，未来的规模扩大对我们的产品团队应该是透明的。</li><li><strong>避免昂贵的回填 (Backfill)</strong>：我们避免了涉及在 Figma 的大表或每个表进行回填的解决方案。考虑到我们表格的大小和 Postgres 吞吐量限制，这些回填将需要数月时间。</li><li><strong>递进式扩展</strong>：我们确定了可以逐步扩展的方法，以逐步降低生产变更的主要风险。这减少了重大故障的风险，并使数据库团队能够在迁移过程中保持 Figma 的可靠性。</li><li><strong>避免单向迁移 (one-way migraiton)</strong>：即使在完成物理分片操作后，我们仍保持了回滚的能力。这降低了在发生未知情况时没有回头路。</li><li><strong>保持数据一致性</strong>：我们希望避免像双写这样复杂的解决方案，这些解决方案很难在不停机或牺牲一致性的情况下实施。我们还希望找到一个可以让我们进行水平扩展且几乎零停机时间的解决方案。</li><li><strong>发挥我们的优势</strong>：由于我们是在有严格的死限压力下开展工作，尽可能地，我们倾向于先能逐步解决我们增长最快的那些表。我们希望利用已经具备的专业知识和技术。</li></ul><h2>方案调研</h2><p>有许多流行的开源和托管解决方案可用于水平分片数据库，这些解决方案与 Postgres 或 MySQL 兼容。在我们的评估过程中，我们探索了 CockroachDB、TiDB、Spanner 和 Vitess。然而，切换到任何这些替代数据库都需要进行复杂的数据迁移，以确保两个不同数据库存储之间的一致性和可靠性。此外，在过去几年里，我们已经积累了大量关于如何在内部可靠地运行 RDS Postgres 的专业知识。如果要迁移到这些新数据库，我们将不得不从头开始重建领域专业知识。考虑到我们非常激进的增长速度，剩余时间只有几个月。相比可能更容易但存在更高不确定性的选项，我们更倾向于选择已知的低风险解决方案，可控性更高，</p><p>NoSQL 数据库是另一种常见的默认可扩展解决方案。然而，我们建立在当前 Postgres 架构之上的关系数据模型非常复杂，并且 NoSQL API 并不提供这种多样性。我们希望让工程师专注于发布出色功能和构建新产品，而不是几乎重写整个后端应用程序；NoSQL 并非一个可行的解决方案。</p><p>一番权衡后，我们开始探索在现有的垂直分区 RDS Postgres 基础架构之上构建一个水平分片解决方案。对于我们的小团队来说，在内部重新实现一个通用的水平分片关系数据库是没有意义的；这样做会使我们与大型开源社区或专门的数据库供应商构建的工具竞争。然而，由于我们将水平分片定制为 Figma 的特定架构，因此可以提供更小的功能集合。例如，我们选择不支持原子跨 Shard 事务，因为我们可以通过解决跨 Shard 事务失败来绕过它们。我们采取了一种最大程度减少应用层所需更改的 colocation 策略。这使得我们能够支持与大多数产品逻辑兼容的 Postgres 子集。同时，我们还能够轻松地在带有 Sharded 和未经 Sharded 处理过的 postgres 之间保持向后兼容性。如果遇到未知问题，那么很容易回滚到未经 Sharded 处理过的 Postgres 上去。</p><h2>水平分片 (Sharding) 之路</h2><p>即使有了这些精简的要求，我们知道水平分片将是迄今为止我们最大、最复杂的数据库项目。幸运的是，过去几年里我们采取的增量扩展方法为我们做了准备。在 2022 年底，我们着手解锁几乎无限的数据库可伸缩性，而水平分片——即将单个表或一组表拆分并将数据跨多个物理数据库实例进行划分——就成了关键。一旦一个表在应用层被水平切割，它可以支持任意数量的物理层碎片。通过简单地运行物理碎片拆分，我们总是可以进一步扩展规模。这些操作在后台透明地进行，并且只需很少停机时间，并不需要应用级别变更。这种能力将使我们能够摆脱所剩无几的数据库扩展瓶颈，消除 Figma 的最后一个主要扩展挑战之一。如果垂直分片让我们加速到高速公路速度，那么水平分片则可以关掉限速，并让我们飞起来。</p><p><img src="https://oscimg.oschina.net/oscnet/up-018dff0571bdcd622c2ac921aa9bc3ef1e7.png" alt="file" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-445203bb931fda94adbae73ba55a68c1b85.png" alt="file" referrerpolicy="no-referrer"></p><p>水平分片比我们之前的扩展工作复杂得多。当一个表被分割到多个物理数据库中时，我们失去了在 ACID SQL 数据库中视为理所当然的许多可靠性和一致性属性。例如：</p><ul><li>某些 SQL 查询变得低效或无法支持。</li><li>必须更新应用程序代码，以提供足够的信息，尽可能高效地将查询路由到正确的分片。</li><li>必须协调所有分片之间的 Schema 变更，以确保数据库保持同步。</li><li>Postgres 不再能强制执行外键和全局唯一索引。事务现在跨多个分片，这意味着 Postgres 不能再用于强制保持事务性。现在可能会出现对某些数据库的写入成功而其他失败的情况。必须注意确保产品逻辑能应对 「部分提交失败」（脑补一下将团队在两个组织间移动，结果发现他们一半数据丢失了！）。</li></ul><p>我们知道实现完全的水平分片将是一个持续多年的努力。在交付增量价值的同时，我们需要尽可能降低项目风险。我们的第一个目标是尽快对生产中一个相对简单但访问量非常高的表进行分片。这将证明水平分片的可行性，同时延长我们最繁忙数据库上能继续服务的时间。然后，在逐步对更复杂组合的表进行分片时，我们可以继续构建额外功能。即使是最简单可能的功能集仍然是一项重大工作。从头到尾，我们团队花了大约九个月来对第一张表进行分片。</p><h2>我们独特的方法</h2><p>我们的水平分片工作也是基于前人的经验，但有一些不同寻常的设计选择。以下是一些要点：</p><ul><li><strong>Colos</strong>：我们将相关的表组队放在一起，称为 colos，这些表共享相同的分片键和物理分片布局。这为开发人员提供了一个友好的抽象，以与水平分片表进行交互。</li><li><strong>逻辑分片</strong>：我们在应用层将「逻辑分片」的概念与 Postgres 层的「物理分片」区分开来。我们利用视图执行更安全、成本更低的逻辑分片部署，然后再执行风险较高的分布式物理 failover。</li><li><strong>DBProxy 查询引擎</strong>：我们构建了一个 DBProxy 服务，拦截应用程序层生成的 SQL 查询，并动态路由查询到各个 Postgres 数据库。DBProxy 包含一个能够解析和执行复杂水平分片查询的查询引擎。DBProxy 还允许我们实现诸如动态负载调节等功能。</li><li><strong>影子应用准备就绪</strong>：我们添加了一个「影子应用准备就绪」框架，能够预测活跃生产流量在不同分片切割下会如何工作。这使产品团队清楚地知道需要重构或删除哪些应用逻辑以准备应用进行水平切割。</li><li><strong>完整逻辑复制</strong>：我们避免实施「过滤式的逻辑复制」（仅将数据子集复制到每个分片）。相反，我们复制整个数据集，然后只允许读/写操作针对给定分片所属数据子集进行操作。</li></ul><h2>我们的分片实现</h2><p>在水平分片中，最重要的决定之一是选择使用哪个分片键。水平分片增加了许多围绕着分片键的数据模型约束。例如，大多数查询需要包含分片键，以便将请求路由到正确的分片上。某些数据库约束（如外键）只有在外键是分区键时才有效。为了避免引起可靠性问题或影响可伸缩性的热点，分片键还需要将数据均匀地分布在所有分片上。</p><blockquote><p>Figma 跑在网页端，许多用户可以同时在同一个 Figma 文件上进行协作。这意味着我们的产品由一个相当复杂的关系数据模型驱动，保存文件元数据、组织元数据、评论、文件版本等等。</p></blockquote><p>我们考虑使用相同的分片键来处理每个表，但在我们现有的数据模型中没有一个单一的好候选项。要添加统一的分片键，我们必须创建一个复合键，在每个表的架构中添加该列，运行昂贵的回填以填充它，然后大幅重构我们产品逻辑。相反，我们根据 Figma 独特的数据模型量身定制了我们的方法，并选择了像 UserID、FileID 或 OrgID 这样少数几个分片键。Figma 几乎每张表都可以使用这些关键字进行分片。</p><p>我们引入了 colo 的概念，为产品开发人员提供友好的抽象：在 colo 内部的表支持跨表连接和完整事务，当限制为单个分片键时。大多数应用程序代码已经以这种方式与数据库交互，这最大程度地减少了应用程序开发人员需要做的工作，使表适合水平切分。下图展示了使用 UserID 和 FileID 的分区各自组合在了一起。</p><p><img src="https://oscimg.oschina.net/oscnet/up-966b0a5d09812082120a56af79b3253e3a4.png" alt="file" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-e34ea3d1c88fc447f849ddc4e6664f3a7f7.png" alt="file" referrerpolicy="no-referrer"></p><p>一旦我们选择了分片键，就需要确保数据在所有后端数据库中均匀分布。不幸的是，我们选择的许多分片键使用了自增或雪花时间戳前缀 ID。这将导致存在显著热点，其中一个单个分片包含大部分数据。我们探索过迁移到更随机化的 ID，但这需要进行昂贵且耗时的数据迁移。相反，我们决定使用分片键的哈希值进行路由。只要选择足够随机的哈希函数，就能确保数据均匀分布。其中一个缺点是，在范围扫描 shard keys 时效率较低，因为连续键会被散列到不同的数据库 shards 上。然而，在我们代码库中这种查询模式并不常见，所以这是一个可以接受的权衡方案。</p><h2>「符合逻辑」的方案</h2><p>为了降低水平分片的风险，我们希望将在应用程序层准备表格的过程与运行分片拆分的物理过程隔离开来。为此，我们将「逻辑分片」与「物理分片」进行了区分。然后，我们可以解耦迁移的两个部分以独立实施和降低风险。逻辑上的切割使我们对技术栈有信心，并采用低风险、基于百分比的发布方式。当发现错误时回滚逻辑分片只需简单更改配置。回滚物理碎片操作是可能的，但需要更复杂的协调以确保数据一致性。</p><p>一旦一个表被逻辑分片后，所有读写操作都会像该表已经被水平分片那样执行。从可靠性、延迟和一致性角度看，尽管数据仍然位於单个数据库主机上，但我们似乎已经完成了水平分片工作。当我们确信逻辑分片按预期工作时，则执行物理分片操作。这是从单个数据库复制数据、到把分片散步到不同数据库上，然后通过新数据库重新路由读写流量的过程。</p><p><img src="https://oscimg.oschina.net/oscnet/up-e147aac41a53ba90fc10f1320ea08b2cae8.png" alt="file" referrerpolicy="no-referrer"></p><p>两个物理分片，每个物理分片又包含两个逻辑分片。</p><h2>刚好的查询引擎</h2><p>为了支持水平分片，我们不得不对后端技术栈进行重大改造。最初，我们的应用服务直接与连接池层 PGBouncer 通信。然而，水平分片需要更复杂的查询解析、规划和执行。为了支持这一点，我们构建了一个新的 golang 服务 DBProxy。DBProxy 位于应用程序层和 PGBouncer 之间。它包括负载均衡逻辑、改进的可观测性、事务支持、数据库拓扑管理以及轻量级查询引擎。</p><p><img src="https://oscimg.oschina.net/oscnet/up-e995976e0fa500b3ae04f731d0ae36ddb9c.png" alt="file" referrerpolicy="no-referrer"></p><p>查询引擎是 DBProxy 的核心。其主要组件包括：</p><ul><li>查询解析器读取应用程序发送的 SQL，并将其转换为抽象语法树（AST）。</li><li>逻辑规划器解析 AST 并从查询计划中提取查询类型（插入、更新等）和逻辑分片 ID。 物理规划器将查询从逻辑分片 ID 映射到物理数据库。它重写查询以在相应的物理分片上执行。</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-525c42dc013fcdf4045da938e886110034b.png" alt="file" referrerpolicy="no-referrer"></p><p>在水平分片的世界中，一些查询相对容易实现。例如，单片段查询被过滤到一个单个分片键。我们的查询引擎只需要提取分片键并将查询路由到适当的物理数据库。我们可以将查询执行的复杂性「下推」到 Postgres 中。然而，如果查询缺少分片键，则我们的查询引擎必须执行更复杂的「发散-归并」。在这种情况下，我们需要将查询发到所有分片（发散阶段），然后汇总结果（归并阶段）。在某些情况下，如复杂聚合、连接和嵌套 SQL 等情况下，这种发散-归并可能非常复杂。此外，有太多发散-归并会影响水平划分可伸缩性。因为这些查询必须触及每个单独的数据库，在未经划分时每次发散-归并都会产生同样数量的负载。</p><p><img src="https://oscimg.oschina.net/oscnet/up-12f0cb4f8b9073a7977c0529fe4ea833558.png" alt="file" referrerpolicy="no-referrer"></p><p>如果我们支持完整的 SQL 兼容性，我们的 DBProxy 服务将开始看起来很像 Postgres 数据库查询引擎。我们希望简化 API 以减少 DBProxy 的复杂性，同时也减少应用程序开发人员需要重新编写任何不受支持查询的工作量。为了确定正确的子集，我们构建了一个「影子规划」框架，允许用户为他们的表定义潜在分片方案，然后在实时生产流量之上运行逻辑规划阶段。我们将查询和相关查询计划记录到 Snowflake 数据库中，在那里可以进行离线分析。根据这些数据，我们选择了一种支持最常见 90% 查询的查询语言，但避免了在查询引擎中出现最坏情况下的复杂性。例如，所有范围扫描和点查都是被允许的，但只有当连接两个位于相同 colo 中且连接在分片键上时才允许 join 操作。</p><h2>面向未来的 View（视图）</h2><p>然后我们需要想办法封装我们的逻辑分片。我们探索了使用单独的 Postgres 数据库或 Postgres schemas 对数据进行分区。不幸的是，当我们在应用程序中逻辑地分片时，这将需要物理数据更改，这与执行物理分片拆分一样复杂。相反，我们选择用 Postgres 视图来表示我们的分片。我们可以为每个表创建多个视图，每个视图对应给定分片中数据子集。看起来像：</p><pre><code>CREATE VIEW table_shard1 AS SELECT * FROM table WHERE hash(shard_key) &gt;= min_shard_range AND hash(shard_key) &lt; max_shard_range`）
</code></pre><p>所有对表格的读取和写入都通过这些视图发送。通过在现有未经过划分的物理数据库之上创建划分视图，在执行任何风险较高的物理重新划分操作之前，我们可以在逻辑上进行划分。每个视图通过自己独立的连接池服务，连接到它们所属于的分片实例上。连接池仍然指向未经过分片处理的物理实例，从而呈现出被进行了分片处理后效果。通过查询引擎中特性开关（feature flag）渐进地发布，以减少风险。并且回滚到主表，只需几秒钟即可，将流量重定向回去。当我们第一次执行重新分片操作时, 我们已经对于分片拓扑的安全性胸有成足。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a03c16e3b18647a48c73bf1ee3a67419599.png" alt="file" referrerpolicy="no-referrer"></p><p>通过在非分片数据库中创建多个视图，我们可以像数据已经被物理分片一样查询这些视图。</p><p>当然，依赖视图也引入了额外的风险。视图会增加性能开销，并且在某些情况下可能从根本上改变 Postgres 查询规划器优化查询的方式。为了验证这种方法，我们收集了一组经过脱敏的生产查询语句，并进行了带有和不带有视图的负载测试。我们确认，在大多数情况下，视图只会增加最小的性能开销，在最糟糕的情况下不到 10%。我们还构建了一个影子读取框架，可以通过视图发送所有实时读取流量，比较使用视图与不使用视图查询之间的性能和正确性。然后我们确认，视图是一种可行的解决方案，并且对性能几乎没有影响。</p><h2>应对我们的拓扑</h2><p>为了执行查询路由，DBProxy 必须理解我们表和物理数据库的拓扑结构。因为我们已经将逻辑分片与物理分片的概念分开，所以我们需要一种方式在拓扑结构中表示这些抽象概念。例如，我们需要能够将一个表（用户）映射到其分片键（user_id）。同样地，我们需要能够将逻辑分片 ID（123）映射到相应的逻辑和物理数据库。在垂直划分方面，我们依赖于一个简单、硬编码的配置文件来将表映射到它们的分区。然而，在向水平切割转变时，我们需要更复杂的东西。当进行切片拆分时，我们的拓扑结构会动态改变，并且 DBProxy 需要迅速更新其状态以避免请求被路由至错误的数据库。由于每次对拓扑结构进行更改都是向后兼容的，在网站关键路径上从未出现过这些更改。我们建立了一个包含复杂水平切割元数据并可以在不到一秒内提供实时更新信息的数据库拓扑结构。</p><p><img src="https://oscimg.oschina.net/oscnet/up-8348edc5651a6c3baa8af52279365b5ecd6.png" alt="file" referrerpolicy="no-referrer"></p><p>拥有独立的逻辑和物理拓扑结构也使我们能够简化一些数据库管理工作。例如，在非生产环境中，我们可以保持与生产相同的逻辑拓扑结构，但从更少的物理数据库中提供数据。这样既节约成本又降低复杂性，而不会在各个环境之间进行过多变更。拓扑库还使我们能够强制保证跨整个拓扑结构（例如，每个分片 ID 应映射到一个物理数据库）的约束，这对于维护系统正确性至关重要，特别是在我们建立水平分片的整个过程中。</p><h2>物理分片操作</h2><p>一旦表准备好进行分片，最后一步是从未分片到已分片数据库的物理 failover 转移。我们能够重复使用许多相同的逻辑来进行水平切分，但也有一些显著的不同之处：我们不再将数据从一个数据库移动到另一个数据库，而是从一个数据库移动到 N 个数据库。我们需要使 failover 过程能应对新的失败模式，在这些模式下，分片操作可能仅在我们的部分数据库上成功。尽管如此，在做垂直分片的时候，许多风险最高的组件已经被解决了。我们能够比以往更快地朝着第一次物理分片操作迈进，这本来是不可能实现的。</p><h2>筚路蓝缕</h2><p>当我们开始这段旅程时，我们知道水平分片将是对 Figma 未来可扩展性的多年投资。我们在 2023 年 9 月交付了第一个水平分片表。我们成功进行了故障切换，数据库主节点仅出现了十秒的部分可用性问题，副本没有受到影响。在分片后，我们没有看到延迟或可用性方面的退化。从那时起，我们一直在处理写入速率最高的，并且相对简单的数据库分片。今年，我们将对越来越复杂的数据库进行分片处理，这些数据库有数十个表和成千上万个代码调用点。</p><p>为了拔掉最后阻碍我们无限扩展的钉子，我们需要在 Figma 上水平分片每个表。一个完全水平分片的世界将带来许多其他好处：提高可靠性、节约成本和开发速度。在这过程中，我们需要解决所有这些问题：</p><ul><li>支持水平分片模式更新</li><li>全局唯一 ID 用于生成水平分片主键</li><li>用于核心业务的跨 shard 的原子事务</li><li>分布式全局唯一索引（目前仅支持包含 sharding key 的索引上的唯一索引）</li><li>一个可以增加研发效能，但不会受到水平分片影响的 ORM</li><li>完全自动化的重分片操作，一健运行。</li></ul><p>一旦我们有足够的时间余地，我们还将重新评估内部 RDS 水平分片的整套方案。18 个月前，我们开始了这段旅程，并面临极其紧迫的时间压力。NewSQL 持续精进，而我们也终于将有时间来重新评估沿着当前路径继续下去还是转向开源或者托管方案。我们在水平分片旅程中取得了许多令人振奋的进展，但挑战才刚刚开始。</p><hr><p>点评：Figma 在时间压力下，采用了更稳妥成熟的水平分片方案。类似方案之前已经在国内外互联网公司里广泛应用。国外的 Instgram (Postgres)，GitHub (MySQL) 也都做过详细的分析。而最后 Figma 列出的剩余问题，也正是 NewSQL 路线的强项。比如国内的 TiDB, OceanBase 都能比较好的解决。所以就像 Figma 所说的，等他们缓过来后，也要重新评估一下。</p><p>另外一方面，Figma 也提到了水平分片后对于研发带来的挑战。本来只要变更一个数据库，现在可能就要变更 100 个数据库。如何保证这些变更的一致性？Bytebase 里正好提供了批量变更模式，可以把水平分片的数据库放在一组，一起进行变更。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a342cf0724f826fe5a98e8d9ba2b1697b3b.png" alt="file" referrerpolicy="no-referrer"></p><hr><p>💡 更多资讯，请关注 Bytebase 公号：Bytebase</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 18 Mar 2024 02:28:03 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/11047837</guid>
            <link>https://my.oschina.net/u/6148470/blog/11047837</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
    </channel>
</rss>
