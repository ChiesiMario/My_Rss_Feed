<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 12 Oct 2023 16:53:21 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[中兴通讯「星云研发大模型」：AI 编程助手、1000 亿 token]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2023 年 10 月 11 日-13 日，在中国移动全球合作伙伴大会举办期间，中兴通讯「星云研发大模型」亮相，<strong>旨在辅助开发人员进行需求分析、产品设计、编程、测试、版本部署等</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0ea8f6611738c94f383a5186925f9339ae3.png" referrerpolicy="no-referrer"></p><p>据介绍，<strong>「星云研发大模型」支持白名单机制有效控制使用范围</strong>，以及代码特征值识别有效识别敏感代码片段、敏感词识别机制可实时监测并拦截敏感内容，还有后台审计机制可完整回溯安全事件等。</p><p>中兴通讯表示，2023 年 4 月，「星云研发大模型」使用启动，截至目前，<strong>日活人数达 1.2 万人，&nbsp;代码采纳率达 40%~45%，编码提效 30%，整体研发提效 10%</strong>。</p><p>中兴通讯将领域数据、Know-How 知识积累、数十万篇通信领域技术文档和<strong>1000 亿 token</strong>的无线 / 核心网 / 云代码语料等注入大模型，进行增量预训练，使用并行训练框架。</p><p>中兴通讯称：「自研部署方案使用动态 batch 策略、PagedAttention 技术，结合无损模型量化，吞吐量大幅提升，<strong>单 GPU（A800）达到 1500tokens / s，仅使用 4 张 GPU 卡（A800）可满足超千人使用需求</strong>。对比业界常规的部署方案，单 GPU 吞吐量分别提升 10 + 倍和 20 + 倍；结合 int4 量化技术，在模型精度不下降情况下，模型大小和显存使用量均下降一半。」</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 09:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261477</guid>
            <link>https://www.oschina.net/news/261477</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源中国发布大模型技术图谱（LLM Tech Map）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>LLM 技术图谱 (LLM Tech Map) 是将 LLM 相关技术进行系统化和图形化的呈现，此图谱主要特点是「<strong>专注于技术人视角</strong>」，不求从 LLM 产业角度汇聚信息，而是希望让从事相关工作或是想了解 LLM 的技术人有一个快速感知。</p><p><span style="color:#e67e22"><strong>核心价值：帮助技术人快速了解 LLM 的核心技术和关键方向。</strong></span></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-89419d5edbf373da239902e38c150921bc4.png" referrerpolicy="no-referrer"></p><p>LLM 技术图谱（LLM Tech Map）从<strong>基础设施</strong>、<strong>大模型</strong>、<strong>Agent</strong>、<strong>AI 编程</strong>、<strong>工具和平台</strong>，以及<strong>算力</strong>几个方面，为开发者整理了当前 LLM 中最为热门和硬核的技术领域以及相关的软件产品和开源项目。</p><hr><h3>基础设施</h3><p>LLM 技术图谱（LLM Tech Map）的基础设施部分主要包括以下几个方面：</p><ul><li>向量数据库：向量数据库是专门用于存储和检索向量数据的数据库，它可以为 LLM 提供高效的存储和检索能力。</li><li>数据库向量支持：传统数据库通常不支持向量数据的存储和检索，数据库向量支持可以为传统数据库添加向量数据的存储和检索能力。</li><li>大模型框架、微调 (Fine Tuning)：针对大模型的开发。</li><li>大模型训练平台与工具</li></ul><h3>大模型</h3><p>LLM 技术图谱（LLM Tech Map）的大模型部分主要包括以下几个方面：</p><ul><li>备案上线的中国大模型：有牌照提供服务的大模型，需要注意的是大模型和相应的产品多半名称不同。</li><li>知名大模型：在全球范围内，已经发布了多款知名大模型，这些大模型在各个领域都取得了突破性的进展。</li><li>知名大模型应用：LLM 已经在多种应用场景中得到了应用，包括文本生成、机器翻译、问答、自然语言推理等。</li></ul><h3>AI Agent（LLM Agent）</h3><p>LLM Agent 是指基于 LLM 技术构建的智能代理，它可以用于各种任务，比如让机器与 ChatGPT 交互，一层一层挖掘信息，自动化完成任务；比如由机器人构成的虚拟小镇。</p><h3>AI 编程</h3><p>让 LLM 帮你编写代码。</p><h3>工具和平台</h3><p>LLM 技术图谱（LLM Tech Map）的工具和平台部分主要包括以下几个方面：</p><ul><li>LLMOps：简单点说（大家当前在说的），就是「快速从大模型到应用」。</li><li>大模型聚合平台：汇聚大模型能力，提供服务。</li><li>开发工具：其它开发相关的 LLM 工具。</li></ul><h3>算力</h3><p>LLM 模型的训练和部署需要大量的算力，算力是 LLM 技术发展的关键因素。</p><hr><p><strong>LLM Tech Map 已托管到 Gitee：<a href="https://gitee.com/oschina/llm-map" target="_blank">https://gitee.com/oschina/llm-map</a></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 09:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261467/oschina-llm-map</guid>
            <link>https://www.oschina.net/news/261467/oschina-llm-map</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SiFive 推出两款新型高性能 RISC-V 处理器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">RISC-V 芯片厂商 SiFive <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sifive.com%2Fpress%2Fsifive-announces-differentiated-solutions-for-generative" target="_blank">宣布</a>推出两款新产品 SiFive Performance P870 CPU 和 SiFive Intelligence X390，主要面向高性能计算和 AI/ML 应用。</span></p><p style="text-align:start"><span style="color:#000000">SiFive Performance P870 和 SiFive Intelligence X390 提供低功耗、计算密度和矢量计算能力，旨在为消费电子、汽车技术和基础设施领域的数据密集型计算应用程序提供显着的性能提升。</span></p><p style="text-align:start"><span style="color:#000000">SiFive 高管强调了该公司致力于推动高性能 RISC-V 创新并缩小与其他指令集架构的差距。并表示，消费电子和基础设施等领域对半导体的需求不断增长，推动了 RISC-V 生态系统的快速扩张。</span></p><p style="text-align:start"><img height="265" src="https://oscimg.oschina.net/oscnet/up-f6db62d251fa51cb784cdb2fef741ac53e2.png" width="500" referrerpolicy="no-referrer"></p><p style="text-align:start"><img height="254" src="https://oscimg.oschina.net/oscnet/up-44006158dd13e95de661c64ecf3bb99eddc.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff"><strong>SiFive </strong></span><strong>Performance</strong><span style="background-color:#ffffff"><strong> P870</strong></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">P870 </span>专为高性能消费类应用而设计，也可与数据中心的矢量处理器一起使用。<span style="background-color:#ffffff">在指令集架构可用性、吞吐量、并行性和内存带宽方面</span>为 RISC-V 性能树立了新标准。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">P870 具有一个&nbsp;</span></span><span style="background-color:#ffffff; color:#000000">6 发射乱序执行核心</span><span style="color:#000000"><span style="background-color:#ffffff">和一个共享集群高速缓存。与上一代 SiFive 性能处理器相比，P870 峰值单线程性能提升了 50% (specINT2k6)，最多可支持 32 </span>核集群<span style="background-color:#ffffff">。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">此外，P870 完全兼容 Google 对 RISC-V 上 Android 的平台要求，还提供其他经过验证的 SiFive 功能：</span>128b VLEN 长度的 RISC-V 矢量 (RVV)、矢量加密和 Hypervisor 扩展、IOMMU 和先进中断架构 (AIA)、非包含性 (non-inclusive) 三级缓存、经过验证的 RISC-V WorldGuard 安全设计。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff"><strong>SiFive </strong></span><strong>Intelligence&nbsp;</strong><span style="background-color:#ffffff"><strong>X390</strong></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">SiFive Intelligence X390 以其前身 SiFive Intelligence X280 为基础，<span style="background-color:#ffffff">凭借单核配置、双倍矢量长度和双矢量 ALU，将矢量计算性能提高了 4 倍，并将持续数据带宽量增加了 4 倍。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">借助 SiFive 矢量协处理器接口扩展 (VCIX)，公司可以轻松添加自己的矢量指令和/或加速硬件，并允许用户通过自定义指令大幅提高性能。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">功能包括：1024 位 VLEN、512 位 DLEN、单/双矢量 ALU、VCIX（2048 位输出，1024 位输入）。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">「<span style="background-color:#ffffff">将 P870 高性能通用计算 SoC 与由 X390 和客户 AI 硬件引擎组成的高性能 NPU 集群结合在一起，为产品设计人员提供高度灵活、低功耗和可编程的解决方案，并为复杂工作负载提供卓越的计算密度。</span>」</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">SiFive 强调了客户对这些组合解决方案的浓厚兴趣，并表示其中一些客户使用高性能 SiFive 产品在芯片开发和商业化方面取得了成功。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 09:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261465/sifive-two-new-high-performance-risc-v-processors</guid>
            <link>https://www.oschina.net/news/261465/sifive-two-new-high-performance-risc-v-processors</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微软称黑客组织正在利用 Atlassian 新的 0day 漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2023%2F10%2F11%2Fchinese-state-hackers-atlassian-zero-day%2F" target="_blank">根据科技媒体 Techcrunch 报道</a>，微软的威胁情报团队在 X（前身为 Twitter）上发布的帖子<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FMsftSecIntel%2Fstatus%2F1711871732644970856" target="_blank">表示</a>，它观察到一个名为 Storm-0062 的黑客组织正在利用 Atlassian Confluence 数据中心和服务器中最近披露的一个关键缺陷。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/162312_aNLm_2720166.png" referrerpolicy="no-referrer"></p><p>Atlassian 在 10 月 4 日披露了其 Confluence 数据中心和服务器中的一个漏洞：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fconfluence.atlassian.com%2Fsecurity%2Fcve-2023-22515-privilege-escalation-vulnerability-in-confluence-data-center-and-server-1295682276.html" target="_blank">CVE-2023-22515</a>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/162610_P2fX_2720166.png" referrerpolicy="no-referrer"></p><p>微软安全团队表示，它从 9 月 14 日起就观察到了漏洞利用。Atlassian 本周更新了安全通知，称该漏洞正被活跃利用，并表示此漏洞可能允许远程攻击者<strong>创建未经授权的管理员帐户来访问 Confluence 服务器</strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 08:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261452/atlassian-zero-day</guid>
            <link>https://www.oschina.net/news/261452/atlassian-zero-day</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 高性能轻量级代理库 ProxyDispatch]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-proxydispatch" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#proxydispatch"></a>ProxyDispatch</h1><p><a href="https://gitee.com/dotnetchina/ProxyDispatch/blob/master/LICENSE"><img src="https://img.shields.io/badge/license-MIT-orange?cacheSeconds=10800" alt="license" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.nuget.org%2Fpackages%2FProxyDispatch"><img src="https://img.shields.io/nuget/v/ProxyDispatch.svg?cacheSeconds=10800" alt="nuget" referrerpolicy="no-referrer"></a><a href="https://gitee.com/dotnetchina"><img src="https://img.shields.io/badge/organization-dotNET%20China-yellow?cacheSeconds=10800" alt="dotNET China" referrerpolicy="no-referrer"></a></p><p>基于 DispatchProxy 和 Roslyn 实现的高性能轻量级代理库，支持类、接口、同步方法、异步方法拦截。</p><h2><a id="user-content-安装" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E5%AE%89%E8%A3%85"></a>安装</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">dotnet</span><span class="w"></span><span class="nx">add</span><span class="w"></span><span class="nx">package</span><span class="w"></span><span class="nx">ProxyDispatch</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-快速入门" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8"></a>快速入门</h2><p>我们在<a href="https://gitee.com/link?target=https%3A%2F%2Ffurion.baiqian.ltd%2Fdocs%2Fjob%2F">主页</a>上有不少例子，这是让您入门的第一个：</p><ol><li>定义代理拦截器，并实现 <code>AspectDispatchProxy</code> 抽象方法：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">public</span><span class="k">class</span><span class="nc">YourClassProxy</span><span class="p">:</span><span class="n">AspectDispatchProxy</span></span><span id="LC2" class="line"><span class="p">{</span></span><span id="LC3" class="line"><span class="c1">// 拦截同步</span></span><span id="LC4" class="line"><span class="k">public</span><span class="k">override</span><span class="kt">object</span><span class="nf">Invoke</span><span class="p">(</span><span class="n">Invocation</span><span class="n">invocation</span><span class="p">)</span></span><span id="LC5" class="line"><span class="p">{</span></span><span id="LC6" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~调用同步方法：</span><span class="p">{</span><span class="n">invocation</span><span class="p">.</span><span class="n">Method</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC7" class="line"><span class="kt">var</span><span class="n">result</span><span class="p">=</span><span class="n">invocation</span><span class="p">.</span><span class="nf">Proceed</span><span class="p">();</span></span><span id="LC8" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~调用同步方法结束，返回值：</span><span class="p">{</span><span class="n">result</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC9" class="line"><span class="k">return</span><span class="n">result</span><span class="p">;</span></span><span id="LC10" class="line"><span class="p">}</span></span><span id="LC11" class="line"></span><span id="LC12" class="line"><span class="c1">// 拦截异步</span></span><span id="LC13" class="line"><span class="k">public</span><span class="k">override</span><span class="k">async</span><span class="n">Task</span><span class="nf">InvokeAsync</span><span class="p">(</span><span class="n">Invocation</span><span class="n">invocation</span><span class="p">)</span></span><span id="LC14" class="line"><span class="p">{</span></span><span id="LC15" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~调用异步 Task 方法：</span><span class="p">{</span><span class="n">invocation</span><span class="p">.</span><span class="n">Method</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC16" class="line"><span class="k">await</span><span class="n">invocation</span><span class="p">.</span><span class="nf">ProceedAsync</span><span class="p">();</span></span><span id="LC17" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"~~~调用异步 Task 方法结束"</span><span class="p">);</span></span><span id="LC18" class="line"><span class="p">}</span></span><span id="LC19" class="line"></span><span id="LC20" class="line"><span class="c1">// 拦截异步带返回值</span></span><span id="LC21" class="line"><span class="k">public</span><span class="k">override</span><span class="k">async</span><span class="n">Task</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;</span><span class="n">InvokeAsync</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">Invocation</span><span class="n">invocation</span><span class="p">)</span></span><span id="LC22" class="line"><span class="p">{</span></span><span id="LC23" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~调用异步 Task&lt;T&gt; 方法：</span><span class="p">{</span><span class="n">invocation</span><span class="p">.</span><span class="n">Method</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC24" class="line"><span class="kt">var</span><span class="n">result</span><span class="p">=</span><span class="k">await</span><span class="n">invocation</span><span class="p">.</span><span class="n">ProceedAsync</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;();</span></span><span id="LC25" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">$"~~~调用异步 Task&lt;T&gt; 方法结束，返回值：</span><span class="p">{</span><span class="n">result</span><span class="p">}</span><span class="s">"</span><span class="p">);</span></span><span id="LC26" class="line"><span class="k">return</span><span class="n">result</span><span class="p">;</span></span><span id="LC27" class="line"><span class="p">}</span></span><span id="LC28" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="2"><li>定义需要拦截的类和接口：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">public</span><span class="k">class</span><span class="nc">YourClass</span><span class="p">:</span><span class="n">IYourClass</span></span><span id="LC2" class="line"><span class="p">{</span></span><span id="LC3" class="line"><span class="c1">// 同步方法</span></span><span id="LC4" class="line"><span class="k">public</span><span class="kt">string</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="kt">string</span><span class="n">str</span><span class="p">)</span></span><span id="LC5" class="line"><span class="p">{</span></span><span id="LC6" class="line"><span class="k">return</span><span class="n">str</span><span class="p">;</span></span><span id="LC7" class="line"><span class="p">}</span></span><span id="LC8" class="line"></span><span id="LC9" class="line"><span class="c1">// 异步方法</span></span><span id="LC10" class="line"><span class="k">public</span><span class="k">async</span><span class="n">Task</span><span class="nf">AsyncMethod</span><span class="p">()</span></span><span id="LC11" class="line"><span class="p">{</span></span><span id="LC12" class="line"><span class="k">await</span><span class="n">Task</span><span class="p">.</span><span class="n">CompletedTask</span><span class="p">;</span></span><span id="LC13" class="line"><span class="p">}</span></span><span id="LC14" class="line"></span><span id="LC15" class="line"><span class="c1">// 异步方法带返回值</span></span><span id="LC16" class="line"><span class="k">public</span><span class="k">async</span><span class="n">Task</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="kt">int</span><span class="n">num</span><span class="p">)</span></span><span id="LC17" class="line"><span class="p">{</span></span><span id="LC18" class="line"><span class="k">await</span><span class="n">Task</span><span class="p">.</span><span class="nf">Delay</span><span class="p">(</span><span class="m">10</span><span class="p">);</span></span><span id="LC19" class="line"><span class="k">return</span><span class="n">num</span><span class="p">+</span><span class="m">100</span><span class="p">;</span></span><span id="LC20" class="line"><span class="p">}</span></span><span id="LC21" class="line"></span><span id="LC22" class="line"><span class="c1">// 泛型方法</span></span><span id="LC23" class="line"><span class="k">public</span><span class="n">T</span><span class="n">GenericMethod</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">T</span><span class="n">x</span><span class="p">)</span></span><span id="LC24" class="line"><span class="p">{</span></span><span id="LC25" class="line"><span class="k">return</span><span class="n">x</span><span class="p">;</span></span><span id="LC26" class="line"><span class="p">}</span></span><span id="LC27" class="line"><span class="p">}</span></span><span id="LC28" class="line"></span><span id="LC29" class="line"><span class="k">public</span><span class="k">interface</span><span class="nc">IYourClass</span></span><span id="LC30" class="line"><span class="p">{</span></span><span id="LC31" class="line"><span class="c1">// 同步方法</span></span><span id="LC32" class="line"><span class="kt">string</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="kt">string</span><span class="n">str</span><span class="p">);</span></span><span id="LC33" class="line"></span><span id="LC34" class="line"><span class="c1">// 异步方法</span></span><span id="LC35" class="line"><span class="n">Task</span><span class="nf">AsyncMethod</span><span class="p">();</span></span><span id="LC36" class="line"></span><span id="LC37" class="line"><span class="c1">// 异步方法带返回值</span></span><span id="LC38" class="line"><span class="n">Task</span><span class="p">&lt;</span><span class="kt">int</span><span class="p">&gt;</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="kt">int</span><span class="n">num</span><span class="p">);</span></span><span id="LC39" class="line"></span><span id="LC40" class="line"><span class="c1">// 泛型方法</span></span><span id="LC41" class="line"><span class="n">T</span><span class="n">GenericMethod</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="n">T</span><span class="n">x</span><span class="p">);</span></span><span id="LC42" class="line"><span class="p">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="3"><li>创建拦截代理对象：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 创建拦截对象</span></span><span id="LC2" class="line"><span class="kt">var</span><span class="n">yourClass</span><span class="p">=</span><span class="n">AspectDispatchProxy</span><span class="p">.</span><span class="n">Decorate</span><span class="p">&lt;</span><span class="n">IYourClass</span><span class="p">,</span><span class="n">YourClassProxy</span><span class="p">&gt;(</span><span class="k">new</span><span class="nf">YourClass</span><span class="p">());</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="n">yourClass</span><span class="p">.</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="s">"百小僧"</span><span class="p">);</span></span><span id="LC5" class="line"><span class="k">await</span><span class="n">yourClass</span><span class="p">.</span><span class="nf">AsyncMethod</span><span class="p">();</span></span><span id="LC6" class="line"><span class="k">await</span><span class="n">yourClass</span><span class="p">.</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="m">100</span><span class="p">);</span></span><span id="LC7" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"泛型方法 GenericMethod 调用，返回值："</span><span class="p">+</span><span class="n">yourClass</span><span class="p">.</span><span class="nf">GenericMethod</span><span class="p">(</span><span class="s">"Furion"</span><span class="p">));</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>输出如下：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">~~~调用同步方法：System.String SyncMethod<span class="o">(</span>System.String<span class="o">)</span></span><span id="LC2" class="line">~~~调用同步方法结束，返回值：百小僧</span><span id="LC3" class="line">~~~调用异步 Task 方法：System.Threading.Tasks.Task AsyncMethod<span class="o">()</span></span><span id="LC4" class="line">~~~调用异步 Task 方法结束</span><span id="LC5" class="line">~~~调用异步 Task&lt;T&gt; 方法：System.Threading.Tasks.Task<span class="sb">`</span>1[System.Int32] AsyncMethodWithResult<span class="o">(</span>Int32<span class="o">)</span></span><span id="LC6" class="line">~~~调用异步 Task&lt;T&gt; 方法结束，返回值：200</span><span id="LC7" class="line">泛型方法 GenericMethod 调用，返回值：Furion</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="4"><li>还可以直接代理类，无需接口：</li></ol><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 创建拦截对象（无依赖接口）</span></span><span id="LC2" class="line"><span class="kt">var</span><span class="n">yourClassNoInterface</span><span class="p">=</span><span class="n">AspectDispatchProxy</span><span class="p">.</span><span class="n">DecorateClass</span><span class="p">&lt;</span><span class="n">YourClass</span><span class="p">,</span><span class="n">YourClassProxy</span><span class="p">&gt;(</span><span class="k">new</span><span class="nf">YourClass</span><span class="p">());</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">SyncMethod</span><span class="p">(</span><span class="s">"百小僧"</span><span class="p">);</span></span><span id="LC5" class="line"><span class="k">await</span><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">AsyncMethod</span><span class="p">();</span></span><span id="LC6" class="line"><span class="k">await</span><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">AsyncMethodWithResult</span><span class="p">(</span><span class="m">100</span><span class="p">);</span></span><span id="LC7" class="line"><span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"泛型方法 GenericMethod 调用，返回值："</span><span class="p">+</span><span class="n">yourClassNoInterface</span><span class="p">.</span><span class="nf">GenericMethod</span><span class="p">(</span><span class="s">"Furion"</span><span class="p">));</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><a href="https://gitee.com/dotnetchina/ProxyDispatch">更多文档</a></p><h2><a id="user-content-文档" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E6%96%87%E6%A1%A3"></a>文档</h2><p>您可以在<a href="https://gitee.com/dotnetchina/ProxyDispatch">主页</a>找到 ProxyDispatch 文档。</p><h2><a id="user-content-贡献" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E8%B4%A1%E7%8C%AE"></a>贡献</h2><p>该存储库的主要目的是继续发展 ProxyDispatch 核心，使其更快、更易于使用。ProxyDispatch 的开发在 <a href="https://gitee.com/dotnetchina/ProxyDispatch">Gitee</a> 上公开进行，我们感谢社区贡献错误修复和改进。</p><h2><a id="user-content-许可证" class="anchor" href="https://gitee.com/dotnetchina/ProxyDispatch#%E8%AE%B8%E5%8F%AF%E8%AF%81"></a>许可证</h2><p>ProxyDispatch 采用 <a href="https://gitee.com/dotnetchina/ProxyDispatch/blob/master/LICENSE">MIT</a> 开源许可证。</p>]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 08:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/dotnetchina/ProxyDispatch</guid>
            <link>https://gitee.com/dotnetchina/ProxyDispatch</link>
        </item>
        <item>
            <title>
                <![CDATA[23 岁博士生修复 Firefox 中的 22 年「幽灵老 Bug」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2002 年 6 月 2 日，<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D148624" target="_blank">Firefox 用户报告了一个 bug</a></strong>：当鼠标悬浮在工具栏图标上时会展示相关提示（该项特性名为 '<strong>Tooltips</strong>'）。如果此时将浏览器从前台切换到后台，该提示会仍然留在前台——就像幽灵一样。而摆脱这一恼人提示的唯一方法是再次将浏览器从后台切换到前台，然后将鼠标从工具栏上移开。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/144535_rfv0_2720166.png" referrerpolicy="no-referrer"></p><p>该 bug 的具体复现如下图所示：</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1072dc8473f17b2efeb96b6ea9187bc9c42.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e043a3cb01187401398a4118bd1e5ef854b.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-20a34ca97d7a8aa279fbc5404fabcda5e9c.png" referrerpolicy="no-referrer"></p></blockquote><p>22 年后 Mozilla 终于为 Firefox 修复了该 bug，对应的 Bugzilla 报告也终于关闭了。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D148624" target="_blank"><img src="https://static.oschina.net/uploads/space/2023/1012/143953_bmr4_2720166.png" referrerpolicy="no-referrer"></a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farstechnica.com%2Fgadgets%2F2023%2F10%2F22-year-old-firefox-tooltip-bug-fixed-in-a-few-lines-offering-hope-to-us-all%2F" target="_blank">根据科技媒体 arstechnica 的报道</a>，帮助修复该 bug 的是斯坦福大学的一年级电机工程博士生 Yifan Zhu，这也是他第一次向开源项目贡献补丁。</p><p><img src="https://static.oschina.net/uploads/space/2023/1012/145359_cKbi_2720166.png" referrerpolicy="no-referrer"></p><p><em>▲&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffanzhuyifan.github.io%2F" target="_blank">https://fanzhuyifan.github.io/</a></em></p><p>Zhu 出生于 1999 年，也就是该 bug 首次报告三年之前。他是在 Linux 上使用邮件客户端 Thunderbird 时首次遭遇该 bug，认为这个 bug 太恼人了。他试着报告该 bug，结果发现它已经存在了 22 年之久，至今还没有修复，可能是因为它是一个小问题也不会导致崩溃处理的优先度不高。</p><p>毕竟这个 bug 仅仅影响到非常小区域的 UI，用户顺手就能临时处理，而且有很多其他比它更严重的 bug 在排队等待解决，所以这个 bug 就这样变为了「陈年老 Bug」。</p><p>于是他决定自己来修复。他知道如何编程，也正好处于博士生开始前的暑假，<strong>但此前从未向开源项目贡献代码，也从未在 Firefox 之类的复杂项目上工作过</strong>。</p><p>虽然冲劲十足，但 Zhu 刚开始的修 bug 之路算不上顺利。他先是在整个代码库里搜索 '<strong>tooltip</strong>'，然后检查可能存在错误的候选内容，并插入调试打印语句跟踪执行。这样的工作非常耗费时间。</p><p>不过正是通过这样的「笨方法」，Zhu 最后定位到了问题所在。当鼠标悬浮在某个元素上时，一个计时器会启动去显示 tooltip，在鼠标移出事件后计时器将会取消。但使用快捷键切换窗口或虚拟桌面时，Firefox 没有取消计时器。Zhu 递交了补丁，<strong>让 tooltip 的显示基于 Firefox 失去焦点而不是鼠标离开应用</strong>。</p><p>几个小时后，Zhu 收到 Mozilla 资深软件工程师 Emilio Cobos Álvarez 的回复，他帮助完善了 Zhu 的补丁并提交到代码库中，并表示 Zhu 的第一个 Firefox 补丁令人印象深刻。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 07:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261435/22-year-old-firefox-tooltip-bug-fixed</guid>
            <link>https://www.oschina.net/news/261435/22-year-old-firefox-tooltip-bug-fixed</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微软推出 Windows Terminal Canary 版本]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">微软<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcommandline%2Fintroducing-windows-terminal-canary%2F" target="_blank">宣布</a>把 Windows Terminal Canary 添加到 Windows Terminal 系列中。</span></p><p><span style="color:#000000">Windows Terminal Canary 是 Windows Terminal 的全新 Canary 频道，每天都会进行更新，且包含"hot off the presses"功能；旨在让用户有机会在新功能进入 Windows Terminal Preview 之前试用这些实验性功能。</span></p><p><img alt="" height="202" src="https://oscimg.oschina.net/oscnet/up-d998b10577973fbed232334af00fbad489c.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">Windows Terminal Canary 可以与 Windows Terminal stable 和 Windows Terminal Preview 并行安装。但 </span><span style="background-color:#ffffff">Canary 版</span><span style="background-color:#ffffff">也是最不稳定的版本，所以有存在很多 bug 的可能性。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff"><img alt="" height="418" src="https://oscimg.oschina.net/oscnet/up-818f3b65f2a7d533a9278b659e14d51f3a7.png" width="700" referrerpolicy="no-referrer"></span></span></p><p style="text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">Windows Terminal Canary 提供 App Installer&nbsp;发行版和便携式 ZIP 发行版，均可从 </span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fterminal%23installing-windows-terminal-canary" target="_blank">Windows Terminal repository</a>&nbsp;<span style="color:#000000">进行<span style="background-color:#ffffff">下载。</span></span></p><p style="text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">App Installer 发行版支持自动更新。但由于平台限制，其仅适用于 Windows 11，但后续会向 Windows 10 用户开放。</span></span><span style="background-color:#ffffff"><span style="color:#000000">Portable ZIP 发行版是一个便携式应用程序，它不会自动更新，也不会自动检查更新；适用于 Windows 10 (19041+) 和 Windows 11</span>。</span></p><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fcommandline%2Fintroducing-windows-terminal-canary%2F" target="_blank">查看官方博客</a>。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fterminal%23installing-windows-terminal-canary" target="_blank"><strong>下载</strong></a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 06:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261430/windows-terminal-canary</guid>
            <link>https://www.oschina.net/news/261430/windows-terminal-canary</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源隐私计算平台 PrimiHub 1.6.11 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" height="343" src="https://oscimg.oschina.net/oscnet/up-6e98dde3777405ffe098aff18b3414cbd53.png" width="950" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#1f2328">PrimiHub 是一款由密码学专家团队打造的开源隐私计算平台，支持安全多方计算、联邦学习、隐私求交、隐私查询等。具有如下特性：</span></p><ul><li><strong>开源</strong>：完全开源、免费</li><li><strong>安装简单</strong>：支持 Docker 一键部署</li><li><strong>开箱即用</strong>：拥有<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fprimihub%2Fprimihub-platform" target="_blank">Web 界面</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.primihub.com%2Fdocs%2Fcategory%2F%25E5%2588%259B%25E5%25BB%25BA%25E4%25BB%25BB%25E5%258A%25A1" target="_blank">命令行</a><span>&nbsp;</span>和<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.primihub.com%2Fdocs%2Fcategory%2Fpython-sdk-client" target="_blank">Python SDK</a><span>&nbsp;</span>多种使用方式</li><li><strong>功能丰富</strong>：支持隐匿查询、隐私求交、联合统计、数据资源管理等功能</li><li><strong>灵活配置</strong>：支持自定义扩展语法、语义、安全协议等</li><li><strong>自主研发</strong>：基于安全多方计算、联邦学习、同态加密、可信计算等隐私计算技术</li></ul><h4>1.6.11 更新了什么？</h4><h3>新增特性</h3><ol><li>隐私求交增加 TEE 支持</li><li>缺失值填充功能可根据字段类型自动匹配适用的填充方法，支持 4 种缺失值处理方法</li><li>模型评估增加多种评估指标（分类、回归），支持 ROC 图展示 
  <ul><li>分类：Acc、Precision、Recall、F1、AUC、KS、ROC</li><li>回归：EV、MaxE、MAE、MSE、RMSE、MedAE、R2</li></ul></li><li>联邦数据预处理支持 TargetEncoder 特征编码</li><li>支持 Python 代码调用 MPC 联合统计功能，可在联邦学习中使用</li></ol><h3>优化</h3><ol><li>提升交互一致性：隐私求交、隐匿查询的交互统一</li><li>隐私求交、隐匿查询结果支持在线预览</li></ol><h4>项目地址</h4><ul><li><p style="margin-left:0; margin-right:0">GitHub：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fprimihub%2Fprimihub" target="_blank">https://github.com/primihub/primihub</a></p></li><li><p style="margin-left:0; margin-right:0">Gitee：<a href="https://gitee.com/primihub/primihub">https://gitee.com/primihub/primihub</a></p></li><li><p style="margin-left:0; margin-right:0">官网：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fprimihub.com" target="_blank">https://primihub.com</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 05:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261425/primihub-1-6-11</guid>
            <link>https://www.oschina.net/news/261425/primihub-1-6-11</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AMD 宣布收购开源公司 Nod.ai]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">AMD 正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.amd.com%2Fen%2Fnewsroom%2Fpress-releases%2F2023-10-10-amd-to-acquire-open-source-ai-software-expert-nod-.html" target="_blank">宣布</a>签署收购&nbsp;Nod.ai&nbsp;的最终协议，以扩展 AMD 公司的开放式人工智能软件能力。Nod.ai&nbsp;成立于 2013 年，是一家专门针对高性能硬件优化人工智能软件的初创公司，其整个团队都将会在收购后加入 AMD。此次收购的具体财务条款并未披露。</span></p><p><span style="color:#000000">「Nod.ai 的加入将为 AMD 带来一支经验丰富的团队，该团队已开发出业界领先的软件技术，可加速部署针对 AMD Instinct 数据中心加速器、Ryzen AI 处理器、EPYC 处理器、Versal SoC 和 Radeon&nbsp; GPU 进行优化的人工智能解决方案。该协议与以开放软件生态系统为核心的 AMD AI 发展战略高度一致，通过开发者工具、库和模型降低了客户的准入门槛。」</span></p><p><img height="292" src="https://oscimg.oschina.net/oscnet/up-319fab720109f98ce2dfe943a39a4ab0a70.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">外媒指出，对 Nod.ai 的收购表明，AMD 想在快速增长的人工智能芯片市场中占据一席之地。据行业分析师称，到 2032 年，该市场规模将达到 3837 亿美元。</span></p><p style="text-align:start"><span><span><span><span><span><span style="color:#1a202c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>AMD 人工智能事业部高级副总裁 Vamsi Boppana 表示，此次收购预计将显着增强 AMD 为 AI 客户提供开放软件的能力，使他们能够轻松部署针对 AMD 硬件调整的高性能 AI 模型。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span><span><span><span><span><span style="color:#1a202c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>「收购 Nod.ai 预计将显着增强我们为人工智能客户提供开放软件的能力，使他们能够轻松部署针对 AMD 硬件调整的高性能人工智能模型。」</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span><span><span style="color:#1a202c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>除了技术之外，AMD 还表示希望利用 Nod.ai 的工程人才来提高其在开源社区和开源开发者群体内的信誉。Nod.ai 是许多研究人员使用的 SHARK 和 Torch-MLIR 等人工智能软件库的主要贡献方。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span><span><span style="color:#1a202c"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>近年来，AMD 一直在大力投资人工智能技术，如 CDNA、XDNA、RDNA 和 Zen 架构，以便在快速增长的人工智能市场上与 Nvidia 和英特尔等竞争对手展开竞争。相关行业报告指出，到 2032 年，全球人工智能市场规模预计将达到约 5940 亿美元。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 03:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261416/amd-to-acquire-open-source-nod-ai</guid>
            <link>https://www.oschina.net/news/261416/amd-to-acquire-open-source-nod-ai</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Wordpress.com 已支持 ActivityPub 协议]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>WordPress.com <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwordpress.com%2Fblog%2F2023%2F10%2F11%2Factivitypub%2F" target="_blank">发布公告称</a>已支持 ActivityPub 协议——正式连接「联邦宇宙」 (fediverse)。</p><blockquote><p>联邦宇宙由像 Mastodon 这样的联合平台组成，这些平台是由独立网站或服务器组成的网络，这些网站或服务器可以相互通信，同时仍然单独运行。</p><p>这很像电子邮件，用户可以向拥有不同服务（例如 Gmail、Yahoo 等）帐户的用户发送电子邮件，但所有这些都可以无缝交互。同样，联合平台使用户能够在统一网络中跨不同服务关注、共享内容并与之交互。</p></blockquote><p>ActivityPub 是开源、去中心化的社交网络协议，目前被 Mastodon、Pixelfed 和串流服务 PeerTube 等应用使用。它提供了一个客户端到服务器的 API 用于<strong>创建、更新和删除内容</strong>，以及一个<strong>联邦制的服务器到服务器 API</strong>用于<strong>传递通知和订阅内容</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1545cdc089c2b02c28421e95ec08dc9554e.png" referrerpolicy="no-referrer"></p><p>▲ ActivityPub 运行原理</p><p>半年前，WordPress 母公司已经收购了 WordPress 插件&nbsp;<a href="https://www.oschina.net/news/232623/automattic-acquires-activitypub" target="_blank">ActivityPub </a>，它用于博客与许多联合平台（包括 Mastodon、Pleroma、Friendica 等）之间的无缝集成。该插件使博客读者能够在这些平台上关注博主文章。</p><p><img src="https://oscimg.oschina.net/oscnet/up-043b7e29824014e389a49fff34ba108e388.png" referrerpolicy="no-referrer"></p><p><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwordpress.com%2Fblog%2F2023%2F10%2F11%2Factivitypub%2F" target="_blank">点此查看在 Wordpress.com 使用 ActivityPub 的具体教程</a></strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 03:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261413/wordpress-activitypub</guid>
            <link>https://www.oschina.net/news/261413/wordpress-activitypub</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Raspberry Pi OS 发布更新：放弃 X.org，采用 Wayland]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Raspberry Pi OS（前身为 Raspbian）是基于 Debian GNU/Linux 的自由操作系统，针对 Raspberry Pi 硬件进行了优化。</p><p>该项目的最新版本 Raspberry Pi OS 2023-10-10 基于 Debian 12 "Bookworm" 构建，<strong>将图形接口从 X11/X.Org 会话迁移到 Wayland</strong>。Raspberry Pi OS 现在<strong>使用 Wayfire 作为轻量级 Raspberry Pi OS 桌面的 Wayland 合成器</strong>。</p><p>树莓派官方称基于 Wayland 的新桌面环境可以为 Raspberry Pi 4 和 5 的设备提供更好的性能、更好的系统安全性以及良好的体验。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8faa68f5d51d90bf899bf805823647a188e.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c093a2d80e641bb6ec015ea0bd695afde59.png" referrerpolicy="no-referrer"></p><p>新版本的另一个重大变化是默认<strong>使用 PipeWire 进行音频处理</strong>。其他变化包括 Mozilla Firefox 浏览器的 Raspberry Pi 优化版本、网络增强功能以​​及各种其他更改。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.raspberrypi.com%2Fnews%2Fbookworm-the-new-version-of-raspberry-pi-os%2F" target="_blank">详情查看发布公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 12 Oct 2023 02:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261409/raspberry-pi-os-2023-10-10</guid>
            <link>https://www.oschina.net/news/261409/raspberry-pi-os-2023-10-10</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微软将在 Windows 中弃用 VBScript]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">微软<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fwindows%2Fwhats-new%2Fdeprecated-features" target="_blank">宣布</a>弃用 VBScript，并计划在<span style="background-color:#ffffff">未来的 Windows 版本中逐步淘汰</span><span style="background-color:#ffffff">该脚本语言</span><span style="background-color:#ffffff">。「VBScript 在从操作系统中移除之前，将作为按需功能提供。」</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">按需功能是 Windows 操作系统中的可选功能，如 .NET Framework（.NetFx3）、Hyper-V 和 Windows Subsystem for Linux，这些功能默认情况下不会安装，但可以在必要时随时添加。</span></span></p><p><img height="371" src="https://oscimg.oschina.net/oscnet/up-c228c1d4dce95ce5941b7b368396073c90c.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000"><span style="background-color:#ffffff">VBScript（也称为 Visual Basic Sc​​ript 或 Microsoft Visual Basic Sc​​ripting Edition）</span><span style="background-color:#ffffff">是一种</span><span style="background-color:#ffffff">类似于 Visual Basic 或 Visual Basic for Applications (VBA) </span><span style="background-color:#ffffff">的脚本语言</span><span style="background-color:#ffffff">，</span><span style="background-color:#ffffff">可追溯到 1996 年。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">VBScript 基于 pre.NetNet Basic，可以看作是&nbsp;VB&nbsp;语言的简化版，它具有原语言容易学习的特性。这种语言广泛应用于网页和 ASP 程序制作，同时还可以直接作为一个可执行程序，用于调试简单的 VB 语句非常方便。VBScript 与 Internet Explorer 捆绑，将活动脚本集成到 Windows 环境中，并通过 Windows 脚本与主机应用程序通信。</span></span></p><p><span style="color:#000000">尽管微软官方并未对此做出解释，但其弃用 VBScript 的</span><span style="background-color:#ffffff; color:#000000">的部分原因可能是出于安全考虑</span><span style="color:#000000">。科技媒体 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bleepingcomputer.com%2Fnews%2Fsecurity%2Fmicrosoft-to-kill-off-vbscript-in-windows-to-block-malware-delivery%2F" target="_blank">Bleeping Computer</a> 认为，此举旨在减少日益猖獗的利用各种 Windows 和 Office 功能进行感染的恶意软件活动。恶意行为者曾使用 VBScript <span style="background-color:#ffffff">将恶意软件分发到受害者的计算机上</span>，包括 Lokibot、Emotet、Qbot 等臭名昭著的恶意软件，以及最近的 DarkGate 恶意软件等。</span></p><p><span style="color:#000000">在 2018 年，微软将对 AMSI 的支持扩展到了 Office 365 应用程序，遏制了利用 VBA 宏的攻击。随后，微软禁用了 Excel 4.0 (XLM) 宏，引入了 XLM 宏保护，强制默认阻止 VBA Office 宏，并开始在全球 Microsoft 365 租户中默认阻止不受信任的 XLL 加载项。</span></p><p><strong><span style="color:#000000">相关阅读：</span></strong></p><ul><li style="text-align:start"><a href="https://www.oschina.net/news/108796/update-disabling-vbscript-internet-explorer-11" target="_blank">微软将于本月开始在旧版 Windows 的 IE 11 中禁用 VBScript</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 08:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261322/microsoft-deprecated-vbscript-in-window</guid>
            <link>https://www.oschina.net/news/261322/microsoft-deprecated-vbscript-in-window</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[HTTP/2 'Rapid Reset' 漏洞，引发每秒可达数亿次的 DDoS 攻击]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Cloudflare 谷歌等企业发现 HTTP/2 的一个 0day 漏洞可以放大 DDoS 攻击，每秒可达数亿次。</p><p>互联网巨头表示，新发现的 HTTP/2 漏洞已被用来发起 DDoS 攻击，其规模远远超出了之前记录的任何一次。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4f87908c80d9741d9fd3379eb23b69b5d57.png" referrerpolicy="no-referrer"></p><p>Cloudflare、谷歌、微软和亚马逊均表示，他们成功缓解了其中两家公司在 8 月和 9 月记录的最大 DDoS 第 7 层攻击，但没有透露这些攻击是针对谁的。这些公司表示，这些攻击之所以可能发生，是因为 HTTP/2 协议中存在一个 0day 漏洞，他们将其命名为<strong>「HTTP/2 快速重置」 (HTTP/2 'Rapid Reset')</strong>。</p><p>HTTP/2 允许通过单个连接同时向网站发出多个请求，从而加快页面加载速度。Cloudflare 写道，这些攻击显然涉及到一个自动循环，即向使用 HTTP/2 的网站发送并立即取消「数十万个」请求，导致服务器不堪重负并使其脱机。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-81269d06319748aede89595b229a10e3edb.png" referrerpolicy="no-referrer"></p><p>谷歌记录的最严重的攻击每秒超过 3.98 亿次请求，据称这是其之前记录的任何此类攻击的七倍多。Cloudflare 在峰值时每秒处理了 2.01 亿个请求，它也称其为破纪录，而亚马逊记录的请求最少，达到了极限。每秒 1.55 亿次。微软没有透露自己的数据。</p><p>参考链接</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2F2023%2F10%2F10%2F23911186%2Fddos-http2-vulnerability-blocked-amazon-aws-cloudflare-google-cloud" target="_blank">https://www.theverge.com/2023/10/10/23911186/ddos-http2-vulnerability-blocked-amazon-aws-cloudflare-google-cloud</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.google.com%2Fblog%2Fproducts%2Fidentity-security%2Fhow-it-works-the-novel-http2-rapid-reset-ddos-attack" target="_blank">https://cloud.google.com/blog/products/identity-security/how-it-works-the-novel-http2-rapid-reset-ddos-attack</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 08:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261320/http2-rapid-reset-ddos-attack</guid>
            <link>https://www.oschina.net/news/261320/http2-rapid-reset-ddos-attack</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[curl 8.4.0 正式发布，修复 SOCKS5 堆溢出漏洞，建议升级]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>curl 8.4.0 已正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaniel.haxx.se%2Fblog%2F2023%2F10%2F11%2Fcurl-8-4-0%2F" target="_blank">发布</a>，创始人 Daniel Stenberg（社区称号 bagder）已提前一周<a href="https://www.oschina.net/news/261110/curl-8-4-coming" target="_blank">预告了该版本</a>——修复高危安全漏洞，并称该漏洞可能是很长一段时间以来 curl 遇到的最严重漏洞，同时影响到 libcurl 库和 curl 工具。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-da9d3bd742c2f09df6c0ac4ca3a88bcb721.png" referrerpolicy="no-referrer"></p><p>根据介绍，这个高危漏洞是<strong>&nbsp;SOCKS5 堆溢出漏洞 (heap buffer overflow)</strong>，该漏洞 (CVE-2023-38545) <strong>导致 curl 在 SOCKS5 代理握手过程中溢出基于堆的缓冲区</strong>。</p><p>有开发者<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fgreysign1%2Fstatus%2F1712008018500653189" target="_blank">解释称</a>，该漏洞出现的场景是<strong>输入的域名太长，从而导致内存溢出</strong>。当然前提条件是使用了 SOCKS5 代理。 两种典型的攻击场景如下：</p><ol><li>某些程序里内置 libcurl，而允许外部用户指定 socket5 代理以及输入超长的域名，则可以发起攻击</li><li>用户在使用 curl 或者 libcurl 时，使用了 socket5 代理，并且 http 请求到恶意服务器，并且恶意服务器返回了 http 30x 跳转，把用户访问目标指向一个超长域名从而导致溢出</li></ol><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1011/161847_Bo2t_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>另一个被评级为 "LOW" 的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcurl.se%2Fdocs%2FCVE-2023-38546.html" target="_blank">CVE-2023-38546</a>&nbsp;漏洞是<strong>通过 none 文件进行 cookie 注入</strong>。</p><p>此漏洞允许攻击者在满足一系列特定条件并将 cookie 放入应用程序当前目录中名为 "none" 的文件的情况下，使用 libcurl 在运行的程序中任意插入 cookie。</p><p>详情查看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdaniel.haxx.se%2Fblog%2F2023%2F10%2F11%2Fcurl-8-4-0%2F" target="_blank">https://daniel.haxx.se/blog/2023/10/11/curl-8-4-0/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 08:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261319/curl-8-4-0</guid>
            <link>https://www.oschina.net/news/261319/curl-8-4-0</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Open 3D Engine (O3DE) 23.10 发布，跨平台 3D 开发引擎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Open 3D Engine (O3DE) 是由亚马逊的 Lumberyard 衍生出来的开源、模块化、跨平台的 3D 引擎。它已经得到了来自 Epic Games、微软和其他许多知名公司的支持。该项目由开放 3D 基金会 (Open 3D Foundation) 托管。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-5576f8021c474fcbcd5936a6f0b34e270d5.png" referrerpolicy="no-referrer"></p><p>O3DE 23.10 主要变化：</p><ul><li><strong>改进游戏创作体验</strong>：为&nbsp;Script Canvas 添加紧凑节点，这些节点操作起来比较简单，并且使用更少的视觉空间</li><li><strong>引入新的文档属性编辑器</strong>：实验性阶段，默认禁用</li><li>改进了使用 O3DE for Windows / Linux / Linux Server / iOS 创建的项目的导出，以更方便地私下和公开分发应用程序</li><li>针对 Atom（O3DE 图形和渲染系统）的许多视觉和性能改进，包括开始对 iOS/Android 的移动支持</li><li>添加 Prefab Overrides 功能</li><li>以及其他致力于更好的内存支持、mesh 实例、多 GPU 基础设施、光线追踪方面的改进</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.docs.o3de.org%2Fdocs%2Frelease-notes%2F2310-0-release-notes%2F" target="_blank">Release Notes</a>&nbsp;| <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fo3de.org%2Fdownload%2F" target="_blank">Download</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 11 Oct 2023 03:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261273/o3de-23-10-released</guid>
            <link>https://www.oschina.net/news/261273/o3de-23-10-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PgHero —— PostgreSQL 性能仪表板]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:start">pghero&nbsp;是一个&nbsp;<span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Postgres 的性能仪表板。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><a href="https://pghero.dokkuapp.com/">查看实际效果</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" height="294" src="https://static.oschina.net/uploads/space/2023/0912/163042_vtOX_4252687.png" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>PgHero 可作为 Docker </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#1f2328">image</span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>、Linux 软件包和 Rails 引擎使用。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>选择你喜欢的安装方法即可开始。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><a href="https://github.com/ankane/pghero/blob/master/guides/Docker.md">Docker</a></li><li><a href="https://github.com/ankane/pghero/blob/master/guides/Linux.md">Linux</a></li><li><a href="https://github.com/ankane/pghero/blob/master/guides/Rails.md">Rails</a></li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 08:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/pghero</guid>
            <link>https://www.oschina.net/p/pghero</link>
        </item>
        <item>
            <title>
                <![CDATA[亿图软件加入 openKylin，助推社区办公生态繁荣]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">近日，深圳市亿图软件有限公司（以下简称「亿图软件」）签署 openKylin 社区 CLA（Contributor License Agreement 贡献者许可协议），正式加入 openKylin 开源社区。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-716e50f9d07314848b1a3d9d05b3994296a.png" referrerpolicy="no-referrer"></p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">深圳市亿图软件有限公司成立于 2014 年，自成立以来一直致力于绘图创意软件的研究和开发，凭借多年在图形可视化领域积累的经验，亿图已经成为国内外专业的绘图创意类软件提供商。其主要产品包括亿图图示 EdrawMax、亿图脑图 MindMaster、项目管理软件 EdrawProj、平面设计软件菲果、组织架构图软件 OrgCharting。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">亿图软件依托万兴科技集团成熟的产品研发体系，有效保障产品质量，打造出性能可靠、安全稳定的产品和服务方案。亿图图示、亿图脑图已获得国家版权局颁发的软件著作证书和第三方机构出具的质量测试报告，产品完成度和稳定性均得到良好验证。</span></span></p><div><p style="text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-a599eea407fc47edf19092c1bf68e52ff54.png" width="940" referrerpolicy="no-referrer"></p></div><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">在加入 openKylin 社区后，亿图软件与 openKylin 完成了亿图图示和亿图脑图两款软件的适配，并已上架至 openKylin 软件商店，同时，亿图项目管理软件也在适配中。后续，亿图软件也将持续与 openKylin 社区在生态适配、社区活动、技术交流等方面开展合作，共同推动社区生态繁荣。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 09 Oct 2023 06:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261428</guid>
            <link>https://www.oschina.net/news/261428</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GreptimeDB v0.4 重大更新 — 新版引擎 Mito2 专为时序数据而生]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>引言</h2><p>从去年 11 月 GreptimeDB 首次上线开源以来，Greptime 团队经过一轮又一轮的持续迭代，从 v0.1 的初步架构完成，到 v0.2 兼容了 PromQL 的单机版本，再到 v0.3 增加了分布式的能力。</p><p>v0.3 功能层面已经相对稳定，包括了单机版，分布式，PromQL 兼容性以及对不同接入协议的支持，很多用户开始尝试，我们也收到了大量的反馈和建议，同时，我们也在 GreptimeCloud 项目里面吃自己狗粮，底层完全依托于 v0.3，不断地把需求回吐给 DB 团队。</p><p>其中呼声最大的便是查询性能问题，坦率的讲，v0.3 版本虽然功能稳定，写入性能也满足需求，但在查询性能上依然有很大的提升空间，还不足以应对大规模的数据查询分析。v0.4 为了解决这个问题，对存储查询引擎 Mito 做了一次重大升级，几乎是重写了一遍，而围绕引擎相关的组件也随之重构，最后通过 TSBS 测试套件实测提升了平均有 6 倍，具体可以参考文末的测试报告（PS: 可能熟悉车的朋友会觉得 Mito 比较眼熟，没错，是来自于 Alfa Romeo MiTo，谁让公司有三位 Alfa Romeo 车主呢）。</p><p>在充分测试的保障下，今天，我们终于可以激动地宣布：<strong>GreptimeDB v0.4 正式发布，和以往版本不同，v0.4 版本的发布标志着 GreptimeDB 已基本做好踏入生产环境的准备，更意味着一段新的探索与挑战即将启程！</strong></p><p>总结来说，此次新版本更新主要在以下几个方面：</p><ul><li><strong>性能优化</strong>：重新设计的新版引擎 Mito2；</li><li><strong>稳定性优化</strong>：CREATE, DROP, ALTER 等 DDL 统一单机和分布式实现并引入 Procedure 框架保证最终一致性；</li><li><strong>体验优化</strong>：支持 Vector/OpenTelemetry 等。</li></ul><p>从 v0.3 到 v0.4，Greptime 团队主要项目中，共有来自 <strong>6 个国家和地区的 42 位贡献者，累计合并了 726 个 PRs，涉及到 7659 个文件修改，包含了 271 个功能优化，163 个修复，107 个重构以及大量测试</strong>。同时，伴随着版本的更新，使用文档和技术文档也已更新至最新。另外，我们还发布了 C++, Erlang 和 JS SDK， 官方目前已经支持了 Golang/Java/Rust/C++/Erlang/JS 6 种语言。社区方面，我们也迎来了一位新的 Committer: @ <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FNiwakaDev" target="_blank">Niwaka</a>。</p><h2>GreptimeDB v0.4 重点内容</h2><ul><li><p><strong>查询存储性能</strong></p><ul><li>完全重新设计了新版引擎 Mito2，专门针对时间序列数据进行了优化，实测性能比 v0.3 提升 5-20 多倍不等；</li><li>受 Cassandra 启发，支持了 TWCS（Time Window Compaction Strategy）压缩策略；</li><li>支持了新的对象存储 Google Cloud Storage。</li></ul></li><li><p><strong>稳定性和可靠性</strong></p><ul><li>丰富 sqlness 测试场景；</li><li>依托于混沌测试 Case 的不断完善，v0.4 版本将具备更可靠的分布式健壮性；</li><li>基于 Procedure 框架实现 Create/Alter/Drop Table 等 DDL 操作并统一单机和分布式实现；</li><li>重构了整个分布式架构，优化心跳协议，使得分布式版本运行更加稳定。</li></ul></li><li><p><strong>体验优化</strong></p><ul><li>新增支持 range select，支持与普通函数嵌套使用；</li><li>全新的 Dashboard；</li><li>优化 DESC TABLE 体验；</li><li>支持 Apache ORC 格式的外部表；</li><li>支持用户友好的 gRPC 行格式写入协议。</li></ul></li><li><p><strong>集成与其他</strong></p><ul><li>Vector 增加 GreptimeDB metrics 的输出支持；</li><li>支持使用 KubeBlocks 启动 GreptimeDB 集群；</li><li>集成 EMQX；</li><li>支持 CentOS；</li><li>发布 JS/Erlang/C++ 官方客户端。</li></ul></li></ul><h2>GreptimeDB v0.4 性能测试</h2><p>GreptimeDB 是基于 TSBS 进行了性能测试。TSBS（Time Series Benchmark Suite）是以 Go 为主语言的一套程序，用于生成时序数据集并对读写性能进行基准测试。最初由老牌时序数据库厂商 InfluxDB 工程师发布，并不断由 TimescaleDB 团队进行改进。该套件是可扩展的，可以包含不同类型的数据和查询类型，并在系统之间进行比较。GreptimeDB 在套件基础上做了对应的扩展，具体项目地址: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FGreptimeTeam%2Ftsbs%2F" target="_blank">https://github.com/GreptimeTeam/tsbs/</a></p><h3>测试硬件和数据准备</h3><h4>硬件环境</h4><p><img src="https://oscimg.oschina.net/oscnet/up-26f7b9c09596e41415f23cbe9fe38b50321.png" alt="" referrerpolicy="no-referrer"></p><h4>测试数据 (基于 TSBS)</h4><p><img src="https://oscimg.oschina.net/oscnet/up-212b9c4d620e0f2782ccfaa50765b6aaacb.png" alt="" referrerpolicy="no-referrer"></p><p>启动配置（默认配置，仅修改数据目录）</p><pre><code class="language-protobuf">[storage]
data_home = "/var/greptimedb/"
</code></pre><p>测试结果 (与 v0.3.2 对比，数值越小越好) <img src="https://oscimg.oschina.net/oscnet/up-f7143a1d8eec97992dcef82c3b6bb1417b3.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-6b3abf6a8b5a386341fd842ece66818dc6d.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-da52a25b5c06783401388180af4c3926e6c.png" alt="" referrerpolicy="no-referrer"></p><h2>升级提示</h2><p>为了进行彻底地优化，不受历史包袱干扰 0.3 -&gt; 0.4 有一些 breaking change，需要停机升级。为此我们提供了升级工具，稍晚会在官方文档中加入升级手册，大致步骤如下：</p><ol><li>创建一个新的 0.4 集群；</li><li>关闭旧集群流量入口（停写）；</li><li>通过 CLI 升级工具导出数据；</li><li>导入数据到新集群；</li><li>入口流量切换到 0.4 新集群。</li></ol><h2>GreptimeDB 未来展望</h2><p>GreptimeDB 不断追求的核心目标仍然是建立一个具备弹性的 ServerlessDB 架构。同时我们意识到未来的趋势在于数据库的自治化，我们会逐步在数据库自治方面投入更多，结合智能化的调度技术，逐步实现时序数据库的安全自动驾驶。</p><h2>致谢社区</h2><p>感谢每一位关注 GreptimeDB、给 GreptimeDB 提建议甚至提交代码的朋友，是你们的支持让我们前进得更坚定。GreptimeDB 是一个基于 Rust 的数据库项目，无论你是在学习 Rust 语言想要寻找项目上手的同学，还是已经有一定经验的技术大牛，甚至是希望对开源社区有所贡献的非技术同学，你一定能在 GreptimeDB 找到适合你的贡献方式，成为我们的贡献者，和来自全世界各地的其他社区贡献者一起交流最新技术。悄悄说一句，成为贡献者能收到 Greptime 限量精美周边礼品哦~</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 10:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6839317/blog/10116982</guid>
            <link>https://my.oschina.net/u/6839317/blog/10116982</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 我在前端写 Java Spring Boot 项目]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h1_1"></span><h1><span><span><span>前言</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>玩归玩，闹归闹，别拿 </span></span></span><span><span><code><span>C 端</span></code></span></span><span><span><span> 开玩笑！ 这里不推荐大家把 Node 服务作为 C 端服务，毕竟它是</span></span></span><span><span><code><span>单线程多任务</span></code></span></span><span><span><span> 机制。 这一特性是 </span></span></span><span><span><code><span>Javascript</span></code></span></span><span><span><span> 语言设计之初，就决定了它的使命 - Java &gt;&gt;&gt;【Script】，这里就不多解释了，大家去看看 JavaScript 的历史就知道啦～这也就决定了，它不能像后端语言那样 </span></span></span><span><span><code><span>多线程多任务</span></code></span></span><span><span><span>，用户访问量小还能承受，一旦承受访问量大高并发，就得凉凉～</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>那为什么我们还要去写 Node 服务？ 主要是方便快捷，对于小项目可以迅速完成建设，开发成本小。 其次，主要通过写 </span></span></span><span><span><code><span>Nest</span></code></span></span><span><span><span> 完成下面收获：</span></span></span></p><ul><li><span><span><span><span>学习装饰器语法，感受其简洁优美；</span></span></span></span></li><li><span><span><span><span>自己学习一门新的开发框架，感受不同框架的优缺点，为以后开发选型打基础；</span></span></span></span></li><li><span><span><span><span>感受服务端排查问题的复杂性，找找前端设计的灵感。</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>本篇文章主要是使用 NestJs + Sequelize + MySQL 完成基础运行， 带大家了解 Node 服务端的基础搭建，也可以顺便看看 Java SpringBoot 项目的基础结构，它俩真的非常相似，不信你去问服务端开发同学。 </span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>养成好习惯，看文章先一键三连～【点赞，关注，转发】，评论可以看完再吐槽～继续完善填坑～</span></span></span></p><span id="OSC_h1_2"></span><h1><span><span><span>第一步、项目跑起来</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在选择服务端的时候，我之前使用过 Egg.js ，所以这次就不选它了。其次，Egg 也是继承了 Koa 的开发基础，加上 Express 也是基于 Koa 上创新的，两者应该差不多，就不选择 Koa 和 Express 。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>所以，我想尝试下 Nest.js 看语法跟 Java 是一样的，加上之前也自己开发过 Java + SpringBoot 的项目，当然更古老的 SSH 2.0 也从无到有搭建过，即：Spring2.0 + Struts2+ Hibernate3.2，想想应该会很容易上手，顺便怀旧下写写。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>参考文档：</span></span></span></p><ul><li><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.geeksforgeeks.org%2Fbest-nodejs-frameworks-for-app-development%2F" target="_blank" rel="nofollow"><span><span><span>https://www.geeksforgeeks.org/best-nodejs-frameworks-for-app-development/</span></span></span></a><span><span><span>﻿</span></span></span></span></li><li><span><span><span><span>﻿</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fanywhere.epam.com%2Fbusiness%2Fbest-node-js-frameworks" target="_blank" rel="nofollow"><span><span><span>https://anywhere.epam.com/business/best-node-js-frameworks</span></span></span></a><span><span><span>﻿</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>说下我的想法，首先我们刚入门，估计会有一堆不清楚的坑，我们先简单点，后续我们再继续加深。既然要搞服务端，要搞就多搞点，我们都去尝鲜玩玩。我们打算使用 </span></span></span><span><span><code><span>Nest</span></code></span></span><span><span><span> 作为前端框架，</span></span></span><span><span><code><span>Graphql</span></code></span></span><span><span><span> 作为中间处理层。底层数据库我们用传统的 </span></span></span><span><span><code><span>MySQL</span></code></span></span><span><span><span>，比较稳定可靠，而且相对比较熟悉，这个就不玩新的了，毕竟数据库是一切的基石 。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>说下我们具体实现步骤：</span></span></span></p><div><span>1.</span><span><span><span><strong><span>【必须】</span></strong></span></span><span><span><span>没有任何数据库，完成接口请求运行，能够跑起来；</span></span></span></span></div><div><span>2.</span><span><span><span><strong><span>【必须】</span></strong></span></span><span><span><span>创建基础数据库 </span></span></span><span><span><code><span>MySQL</span></code></span></span><span><span><span> ，接入 </span></span></span><span><span><code><span>@nestjs/sequelize</span></code></span></span><span><span><span> 库，完成 </span></span></span><span><span><code><span>增删改查</span></code></span></span><span><span><span> 功能即：</span></span></span><span><span><code><span>CRUD</span></code></span></span></span></div><div><span>3.</span><span><span><span><span>【</span></span></span><span><span><strong><span>可选</span></strong></span></span><span><span><span>】打算采取 </span></span></span><span><span><code><span>Graphql</span></code></span></span><span><span><span> 处理 API 查询，做到精确数据查询，这个已经火了很多了，但是真正使用的很少，我们打算先感受下，后续可以直接用到业务。</span></span></span></span></div><div><span>4.</span><span><span><span><span>【</span></span></span><span><span><strong><span>可选</span></strong></span></span><span><span><span>】接入 </span></span></span><span><span><code><span>Swagger</span></code></span></span><span><span><span> 自动生成 API 文档，快捷进行前端与后端服务联调测试。</span></span></span></span></div><div><span>◦</span><span><span><span><span>Swagger 是一个开源工具，用于设计、构建、记录和使用 RESTful web 服务。</span></span></span></span></div><div><span>5.</span><span><span><span><strong><span>【可选】</span></strong></span></span><span><span><span>接口请求，数据库优化处理</span></span></span></span></div><div><span>◦</span><span><span><span><span>请求分流，数据库写入加锁，处理并发流程</span></span></span></span></div><div><span>◦</span><span><span><span><span>增加 </span></span></span><span><span><code><span>middleware</span></code></span></span><span><span><span> 中间件统一处理请求及响应，进行鉴权处理，请求拦截等操作</span></span></span></span></div><div><span>◦</span><span><span><span><span>数据库分割备份，数据库融灾处理，分为：主、备、灾</span></span></span></span></div><div><span>◦</span><span><span><span><span>数据库读写分离，数据双写，建立数据库缓存机制，使用 </span></span></span><span><span><code><span>redis</span></code></span></span><span><span><span> 处理</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><em><strong><span>也欢迎大家补充更多的优化点，我们一起探讨～有兴趣可以帮忙补充代码哈～</span></strong></em></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>确定了大概方向，我们就开始整。先不追求一步到位，否则越多越乱，锦上添花的东西，我们可以后续增加，基础功能我们要优先保障完成。Nest.js 官网：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.nestjs.com%2F" target="_blank" rel="nofollow"><span><span><span>https://docs.nestjs.com/ </span></span></span></a><span><span><span>，话不多说，我们直接开整。</span></span></span></p><pre><code><span><span><span style="color:#708090"># 进入文件夹目录</span></span><span><span></span></span><span><span style="color:#669900">cd</span></span><span><span> full-stack-demo/packages
</span></span><span><span style="color:#708090"># 安装脚手架</span></span><span><span></span></span><span><span style="color:#dd4a68">npm</span></span><span><span> i -g @nestjs/cli
</span></span><span><span style="color:#708090"># 创建基础项目</span></span><span><span>
nest new node-server-demo 
</span></span><span><span style="color:#708090"># 进入项目 </span></span><span><span></span></span><span><span style="color:#669900">cd</span></span><span><span> new node-server-demo 
</span></span><span><span style="color:#708090"># 运行项目测试</span></span><span><span></span></span><span><span style="color:#dd4a68">npm</span></span><span><span> run start:dev

</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>我们移除一些不需要的东西，先简单再复杂，别把自己搞晕了。接下来写一个简单示例感受下这个框架，之后完整的代码，我会公布在后面。废话不多说，开整！调整后目录结构：</span></span></span></p><div><span>•</span><span><span><span><code><span>common</span></code></span></span><span><span><span> - 公用方法类</span></span></span></span></div><div><span>•</span><span><span><span><code><span>config</span></code></span></span><span><span><span> - 配置类文件</span></span></span></span></div><div><span>•</span><span><span><span><code><span>controller</span></code></span></span><span><span><span> - 控制器，用于处理前端发起的各类请求</span></span></span></span></div><div><span>•</span><span><span><span><code><span>service</span></code></span></span><span><span><span> - 服务类，用于处理与数据库交互逻辑</span></span></span></span></div><div><span>•</span><span><span><span><code><span>dto</span></code></span></span><span><span><span> - DTO（Data Transfer Object）可以用于验证输入数据、限制传输的字段或格式。</span></span></span></span></div><div><span>•</span><span><span><span><code><span>entities</span></code></span></span><span><span><span> - 实体类，用于描述对象相关的属性信息</span></span></span></span></div><div><span>•</span><span><span><span><code><span>module</span></code></span></span><span><span><span> - 模块，用于注册所有的服务类、控制器类，类似 Spring 里面的 bean</span></span></span></span></div><div><span>◦</span><span><span><span><span>这里不能完全等同哈，两个实现机制上就不同，只是帮助大家理解。</span></span></span></span></div><div><span>•</span><span><span><span><code><span>main.ts</span></code></span></span><span><span><span> - nest 启动入口</span></span></span></span></div><div><span>•</span><span><span><span><code><span>types</span></code></span></span><span><span><span> - typescript 相关声明类型</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>﻿</span></span></span></p><div><img alt="" height="652" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-07-19-27D10wKQg77UKtvJTL.jpg" width="192" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>只是写 demo, 搞快点就没有怎么写注释了，我感觉是一看就懂了，跟 Java SpringBoot 的写法非常一致，部分代码展示：</span></span></span></p><ul><li><span><span><span><span>控制器 controller </span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/controller/user/index.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Controller</span></span><span><span style="color:#999999">,</span></span><span><span> Get</span></span><span><span style="color:#999999">,</span></span><span><span> Query </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span> UserServices </span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/service/user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> GetUserDto</span></span><span><span style="color:#999999">,</span></span><span><span> GetUserInfoDto </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/dto/user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Controller</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'user'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">UserController</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">private</span></span><span><span></span></span><span><span style="color:#0077aa">readonly</span></span><span><span> userService</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> UserServices</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// Get 请求 user/name?name=bricechou</span></span><span><span></span></span><span><span>@Get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'name'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findByName</span></span><span><span style="color:#999999">(</span></span><span><span>@Query</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span> getUserDto</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> GetUserDto</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userService</span></span><span><span style="color:#999999">.</span></span><span><span>read</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findByName</span></span><span><span style="color:#999999">(</span></span><span><span>getUserDto</span></span><span><span style="color:#999999">.</span></span><span><span>name</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// Get 请求 user/info?id=123</span></span><span><span></span></span><span><span>@Get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'info'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findById</span></span><span><span style="color:#999999">(</span></span><span><span>@Query</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span> getUserInfoDto</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> GetUserInfoDto</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> user </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userService</span></span><span><span style="color:#999999">.</span></span><span><span>read</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findById</span></span><span><span style="color:#999999">(</span></span><span><span>getUserInfoDto</span></span><span><span style="color:#999999">.</span></span><span><span>id</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> gender</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> user</span></span><span><span style="color:#999999">.</span></span><span><span>gender</span></span><span><span style="color:#999999">,</span></span><span><span> job</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> user</span></span><span><span style="color:#999999">.</span></span><span><span>job </span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/controller/log/add.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Controller</span></span><span><span style="color:#999999">,</span></span><span><span> Post</span></span><span><span style="color:#999999">,</span></span><span><span> Body </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> AddLogDto </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/dto/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span> LogServices </span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/service/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Controller</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'log'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">CreateLogController</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">private</span></span><span><span></span></span><span><span style="color:#0077aa">readonly</span></span><span><span> logServices</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> LogServices</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// post('/log/add')</span></span><span><span></span></span><span><span>@Post</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'add'</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>@Body</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span> createLogDto</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> AddLogDto</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>logServices</span></span><span><span style="color:#999999">.</span></span><span><span>create</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>createLogDto</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>数据转换 Data Transfer Object </span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/dto/user.ts</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">CreateUserDto</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  name</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span>
  age</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span>
  gender</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span>
  job</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 可以分开写，也可以合并</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">GetUserDto</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">?</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span>
  name</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 可以分开写，也可以合并</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">GetUserInfoDto</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>service 数据库交互处理类</span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/service/user/read.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Injectable </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> User </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/entities/User'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Injectable</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">ReadUserService</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findByName</span></span><span><span style="color:#999999">(</span></span><span><span>name</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">)</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span>User</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#708090">// 可以处理判空，从数据库读取/写入数据，可能会被多个 controller 进行调用</span></span><span><span></span></span><span><span style="color:#669900">console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">info</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'ReadUserService findByName &gt; '</span></span><span><span style="color:#999999">,</span></span><span><span> name</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">resolve</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span> name</span></span><span><span style="color:#999999">,</span></span><span><span> job</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'程序员'</span></span><span><span style="color:#999999">,</span></span><span><span> gender</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span> age</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">18</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findById</span></span><span><span style="color:#999999">(</span></span><span><span>id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">)</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span>User</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#669900">console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">info</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'ReadUserService findById &gt; '</span></span><span><span style="color:#999999">,</span></span><span><span> id</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">resolve</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
      id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span>
      name</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'BriceChou'</span></span><span><span style="color:#999999">,</span></span><span><span>
      job</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'程序员'</span></span><span><span style="color:#999999">,</span></span><span><span>
      gender</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span>
      age</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">18</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>module 模块注册，服务类/控制类</span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/module/user.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Module </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span> UserService</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> ReadUserService </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/service/user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> UserController </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/controller/user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Module</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
  providers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>UserService</span></span><span><span style="color:#999999">,</span></span><span><span> ReadUserService</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span>
  controllers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>UserController</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">UserModule</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/module/index.ts 根模块注入</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Module </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> UserModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> LogModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Module</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
  imports</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>
    UserModule</span></span><span><span style="color:#999999">,</span></span><span><span>
    LogModule</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">AppModule</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>main.js 启动注册的所有类</span></span></span></span></li></ul><pre><code><span><span><span>// packages/node-server-demo/src/main.ts
import { AppModule } from '@/module';
import { NestFactory } from '@nestjs/core';
import { NestExpressApplication } from '@nestjs/platform-express';

async function bootstrap() {
  const app = await NestFactory.create&lt;NestExpressApplication&gt;(AppModule);
  // 监听端口 3000 
  await app.listen(3000);
}

bootstrap();

</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>这样一个单机的服务器就启动起来了，我们可以使用 </span></span></span><span><span><code><span>Postwoman</span></code></span></span><span><span><span> [</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhoppscotch.io%2F" target="_blank" rel="nofollow"><span><span><span>https://hoppscotch.io/</span></span></span></a><span><span><span>] 进行请求，瞅瞅看返回效果。</span></span></span></p><div><img alt="" height="411" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32nFgn22QoRKqZ9oMW.jpg" width="463" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><div><img alt="" height="297" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-320kQIUM44BtGOUf6I.jpg" width="623" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>控制枱也收到日志了，后面可以把这些日志请求保留成 </span></span></span><span><span><code><span>.log</span></code></span></span><span><span><span> 文件，这样请求日志也有了，完美！下一步，我们开始连接数据库，这样就不用单机玩泥巴了～</span></span></span></p><span id="OSC_h1_3"></span><h1><span><span><span>第二步、配置 MySQL</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>MySQL 安装其实很简单，我电脑是 Mac 的，所以下面的截图都是以 mac 为例，先下载对应的数据库。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>下载地址：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdev.mysql.com%2Fdownloads%2Fmysql%2F" target="_blank" rel="nofollow"><span><span><span>https://dev.mysql.com/downloads/mysql/ </span></span></span></a><span><span><span>至于其他系统的，可以网上找教程，这个应该烂大街了，我就不重复搬运教程了。</span></span></span></p><ul><li><span><span><span><strong><span>注意：</span></strong></span></span><span><span><span>安装的数据库，一定要设置密码，连接数据库必须要有密码，否则会导致连接数据库失败。</span></span></span></span></li><li><span><span><span><span>MySQL 我们只安装数据库就行，熟悉指令的童鞋，就直接命令行操作就行。</span></span></span></span></li><li><span><span><span><span>不熟悉的话，那就下载图形化管理工具。</span></span></span></span></li></ul><div><span>◦</span><span><span><span><span>Mysql 官方控制枱 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdev.mysql.com%2Fdownloads%2Fworkbench%2F" target="_blank" rel="nofollow"><span><span><span>https://dev.mysql.com/downloads/workbench/</span></span></span></a><span><span><span>﻿</span></span></span></span></div><div><span>◦</span><span><span><span><span>Windows 也可以使用 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.heidisql.com%2Fdownload.php%3Fdownload%3Dinstaller" target="_blank" rel="nofollow"><span><span><span>https://www.heidisql.com/download.php?download=installer</span></span></span></a><span><span><span>﻿</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>PS：安装 workbench 时发现要求 </span></span></span><span><span><code><span>MacOS 13</span></code></span></span><span><span><span>以上，我的电脑是 </span></span></span><span><span><code><span>MacOS 12</span></code></span></span><span><span><span>。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>白白下载，所以只能 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownloads.mysql.com%2Farchives%2Fworkbench%2F" target="_blank" rel="nofollow"><span><span><span>https://downloads.mysql.com/archives/workbench/ </span></span></span></a><span><span><span>从归档里面找低版本 </span></span></span><span><span><code><span>8.0.31</span></code></span></span><span><span><span>。对于数据库服务也有版本要求，大家按照自己电脑版本，选择支持的版本即可。 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdownloads.mysql.com%2Farchives%2Fcommunity%2F" target="_blank" rel="nofollow"><span><span><code><span>https://downloads.mysql.com/archives/community/</span></code></span></span></a><span><span><span>。我这边选择的是默认最新版本：</span></span></span><span><span><code><span>8.0.34</span></code></span></span><span><span><span>，下载好直接安装，一路 </span></span></span><span><span><code><span>Next</span></code></span></span><span><span><span> 到底，记住自己输入的 Root 密码！！！</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>确认好当前数据库是否已经运行起来了，启动 Workbench 查看状态。</span></span></span></p><div><img alt="" height="284" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-3232hBsN9S6ryKq22Kq.jpg" width="641" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span>1.<span><span><span>创建数据库</span></span></span></span></p><div><img alt="" height="287" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32Y6bY8NOU328GGDBA.jpg" width="643" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>数据库存在字符集选择，不同的字符集和校验规则，会对存储数据产生影响，所以大家可以自行查询，按照自己存储数据原则选择，我这里默认选最广泛的。确认好，就选择右下角的应用按钮。</span></span></span></p><div><span>2.</span><span><span><span><span>创建表和属性</span></span></span></span></div><div><img alt="" height="373" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32oDMpwdctNZsX7Yr.jpg" width="770" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><span>选项解答：</span></span></span></p><div><span>•</span><span><span><span><code><span>PRIMARY KEY</span></code></span></span><span><span><span> 是表中的一个或多个列的组合，它用于唯一标识表中的每一行。</span></span></span></span></div><div><span>•</span><span><span><span><code><span>Not NULL</span></code></span></span><span><span><span> 和 </span></span></span><span><span><code><span>Unique</span></code></span></span><span><span><span> 就不解释，就是直译的那个意思。</span></span></span></span></div><div><span>•</span><span><span><span><code><span>GENERATED</span></code></span></span><span><span><span> 生成列是表中的一种特殊类型的列，它的值不是从插入语句中获取的，而是根据其他列的值通过一个表达式或函数生成的。</span></span></span></span></div><pre><code><span><span><span style="color:#0077aa">CREATE</span></span><span><span></span></span><span><span style="color:#0077aa">TABLE</span></span><span><span> people </span></span><span><span style="color:#999999">(</span></span><span><span>
    first_name </span></span><span><span style="color:#0077aa">VARCHAR</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">100</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span>
    last_name </span></span><span><span style="color:#0077aa">VARCHAR</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">100</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span>
    full_name </span></span><span><span style="color:#0077aa">VARCHAR</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">200</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">AS</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>CONCAT</span></span><span><span style="color:#999999">(</span></span><span><span>first_name</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#669900">' '</span></span><span><span style="color:#999999">,</span></span><span><span> last_name</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><code><span>UNSIGNED</span></code></span></span><span><span><span> 这个数值类型就只能存储正数（包括零），不会存储负数。</span></span></span></span></li><li><span><span><span><code><span>ZEROFILL</span></code></span></span><span><span><span> 将数值类型的字段的前面填充零，他会自动使字段变为 </span></span></span><span><span><code><span>UNSIGNED</span></code></span></span><span><span><span>，直到该字段达到声明的长度，如：00007</span></span></span></span></li><li><span><span><span><code><span>BINARY</span></code></span></span><span><span><span> 用于存储二进制字符串，如声明一个字段为 BINARY(5)，那么存储在这个字段中的字符串都将被处理为长度为 5 的二进制字符串。</span></span></span></span></li></ul><div><span>◦</span><span><span><span><span>如尝试存储一个长度为 3 的字符串，那么它将在右侧用两个空字节填充。</span></span></span></span></div><div><span>◦</span><span><span><span><span>如果你尝试存储一个长度为 6 的字符串，那么它将被截断为长度为 5</span></span></span></span></div><div><span>◦</span><span><span><span><span>主要用途是存储那些需要按字节进行比较的数据，例如加密哈希值</span></span></span></span></div><ul><li><span><span><span><span>此外也可顺手传创建一个索引，方便快速查找。</span></span></span></span></li></ul><pre><code><span><span><span style="color:#0077aa">CREATE</span></span><span><span></span></span><span><span style="color:#0077aa">TABLE</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>rrweb</span></span><span><span style="color:#999999">`</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#999999">`</span></span><span><span>test_sys_req_log</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>id</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">INT</span></span><span><span></span></span><span><span style="color:#0077aa">UNSIGNED</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span></span></span><span><span style="color:#0077aa">AUTO_INCREMENT</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>content</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">TEXT</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_level</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">INT</span></span><span><span></span></span><span><span style="color:#0077aa">UNSIGNED</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_category</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">VARCHAR</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">255</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_created_at</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">TIMESTAMP</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span></span></span><span><span style="color:#0077aa">DEFAULT</span></span><span><span></span></span><span><span style="color:#0077aa">CURRENT_TIMESTAMP</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_updated_at</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">TIMESTAMP</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">NOT</span></span><span><span></span></span><span><span style="color:#990055">NULL</span></span><span><span></span></span><span><span style="color:#0077aa">DEFAULT</span></span><span><span></span></span><span><span style="color:#0077aa">CURRENT_TIMESTAMP</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">PRIMARY</span></span><span><span></span></span><span><span style="color:#0077aa">KEY</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">`</span></span><span><span>id</span></span><span><span style="color:#999999">`</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">UNIQUE</span></span><span><span></span></span><span><span style="color:#0077aa">INDEX</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>id_UNIQUE</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">`</span></span><span><span>id</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">ASC</span></span><span><span style="color:#999999">)</span></span><span><span> VISIBLE</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#0077aa">INDEX</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>table_index</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">`</span></span><span><span>l_level</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">ASC</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_category</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">ASC</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">`</span></span><span><span>l_time</span></span><span><span style="color:#999999">`</span></span><span><span></span></span><span><span style="color:#0077aa">ASC</span></span><span><span style="color:#999999">)</span></span><span><span> VISIBLE</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span></span></code></pre><div><span>3.</span><span><span><span><span>连接数据库</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>由于目前 </span></span></span><span><span><code><span>node-oracledb</span></code></span></span><span><span><span> 官方尚未提供针对 Apple Silicon 架构的预编译二进制文件。导致我们无法在 </span></span></span><span><span><strong><span>Mac M1 芯片</span></strong></span></span><span><span><span>上使用 </span></span></span><span><span><code><span>TypeORM</span></code></span></span><span><span><span> 链接数据库操作，它目前只支持 </span></span></span><span><span><strong><span>Mac x86 芯片</span></strong></span></span><span><span><span>。哎～折腾老半天，查阅各种文档，居然有这个坑，没关系我们换个方式打开。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>我们不得不放弃，从而选用 </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.nestjs.com%2Ftechniques%2Fdatabase%23sequelize-integration" target="_blank" rel="nofollow"><span><span><span>https://docs.nestjs.com/techniques/database#sequelize-integration </span></span></span></a><span><span><span>哐哐哐～一顿操作猛如虎，盘它！</span></span></span></p><ul><li><span><span><span><span>安装 </span></span></span><span><span><code><span>Sequelize</span></code></span></span></span></li></ul><pre><code><span><span><span># 安装连接库
npm install </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">--</span></span><span><span>save </span></span><span><span>@nestjs</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">/</span></span><span><span>sequelize sequelize sequelize</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">-</span></span><span><span>typescript mysql2
# 安装 </span></span><span><span style="color:#0077aa">type</span></span><span><span></span></span><span><span style="color:#dd4a68">npm</span></span><span><span> install </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">--</span></span><span><span>save</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">-</span></span><span><span>dev </span></span><span><span>@types</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">/</span></span><span><span>sequelize

</span></span></span></code></pre><ul><li><span><span><span><span>配置数据库基础信息</span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/module/index.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Module </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> UserModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./user'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> LogModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Log </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/entities/Log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> SequelizeModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/sequelize'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Module</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
  imports</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>
    SequelizeModule</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">forRoot</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
      dialect</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'mysql'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按数据库实际配置</span></span><span><span>
      host</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'127.0.0.1'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按数据库实际配置</span></span><span><span>
      port</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">3306</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按数据库实际配置</span></span><span><span>
      username</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'root'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按数据库实际配置</span></span><span><span>
      password</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'hello'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// 按数据库实际配置</span></span><span><span>
      database</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'world'</span></span><span><span style="color:#999999">,</span></span><span><span>
      synchronize</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">,</span></span><span><span>
      models</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>Log</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span>
      autoLoadModels</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span>
    LogModule</span></span><span><span style="color:#999999">,</span></span><span><span>
    UserModule</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">AppModule</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>实体与数据库一一映射处理</span></span></span></span></li></ul><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> getNow </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/common/date'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  Model</span></span><span><span style="color:#999999">,</span></span><span><span>
  Table</span></span><span><span style="color:#999999">,</span></span><span><span>
  Column</span></span><span><span style="color:#999999">,</span></span><span><span>
  PrimaryKey</span></span><span><span style="color:#999999">,</span></span><span><span>
  DataType</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'sequelize-typescript'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Table</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> tableName</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'test_sys_req_log'</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">Log</span></span><span><span></span></span><span><span style="color:#0077aa">extends</span></span><span><span></span></span><span><span style="color:#dd4a68">Model&lt;Log&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span>@PrimaryKey</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
    type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">INTEGER</span></span><span><span style="color:#999999">,</span></span><span><span>
    autoIncrement</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#990055">true</span></span><span><span style="color:#999999">,</span></span><span><span>
    field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'id'</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'content'</span></span><span><span style="color:#999999">,</span></span><span><span> type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">TEXT</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  content</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'l_level'</span></span><span><span style="color:#999999">,</span></span><span><span> type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">INTEGER</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  level</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 3 严重，2 危险，1 轻微</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'l_category'</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  category</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">// 模块分类/来源分类</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
    field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'l_created_at'</span></span><span><span style="color:#999999">,</span></span><span><span>
    type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">NOW</span></span><span><span style="color:#999999">,</span></span><span><span>
    defaultValue</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#dd4a68">getNow</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  createdAt</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Column</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
    field</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">'l_updated_at'</span></span><span><span style="color:#999999">,</span></span><span><span>
    type</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> DataType</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#990055">NOW</span></span><span><span style="color:#999999">,</span></span><span><span>
    defaultValue</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#dd4a68">getNow</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span>
  updatedAt</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">number</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>module 注册实体</span></span></span></span></li></ul><pre><code><span><span><span style="color:#708090">// packages/node-server-demo/src/module/log.ts</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Module </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> SequelizeModule </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/sequelize'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Log </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/entities/Log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span> LogServices</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  CreateLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
  UpdateLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
  DeleteLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
  ReadLogService</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/service/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
  CreateLogController</span></span><span><span style="color:#999999">,</span></span><span><span>
  RemoveLogController</span></span><span><span style="color:#999999">,</span></span><span><span>
  UpdateLogController</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/controller/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Module</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span>
  imports</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>SequelizeModule</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">forFeature</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">[</span></span><span><span>Log</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span>
  providers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>
    LogServices</span></span><span><span style="color:#999999">,</span></span><span><span>
    CreateLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
    UpdateLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
    DeleteLogService</span></span><span><span style="color:#999999">,</span></span><span><span>
    ReadLogService</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span>
  controllers</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">[</span></span><span><span>CreateLogController</span></span><span><span style="color:#999999">,</span></span><span><span> RemoveLogController</span></span><span><span style="color:#999999">,</span></span><span><span> UpdateLogController</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">LogModule</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><ul><li><span><span><span><span>service 操作数据库处理数据</span></span></span></span></li></ul><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Log </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/entities/Log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Injectable </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> AddLogDto </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/dto/log'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> InjectModel </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/sequelize'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> ResponseStatus </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/types/BaseResponse'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> getErrRes</span></span><span><span style="color:#999999">,</span></span><span><span> getSucVoidRes </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@/common/response'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Injectable</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">CreateLogService</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span>@InjectModel</span></span><span><span style="color:#999999">(</span></span><span><span>Log</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">private</span></span><span><span> logModel</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#0077aa">typeof</span></span><span><span> Log</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>createLogDto</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> AddLogDto</span></span><span><span style="color:#999999">)</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">Promise</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span>ResponseStatus</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span style="color:#0077aa">null</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&gt;&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#669900">console</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">info</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">'CreateLogService create &gt; '</span></span><span><span style="color:#999999">,</span></span><span><span> createLogDto</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> level </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span> content </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">''</span></span><span><span style="color:#999999">,</span></span><span><span> category </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">'INFO'</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> createLogDto </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">||</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> str </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> content</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">trim</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">!</span></span><span><span>str</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">getErrRes</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">500</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#669900">'日志内容为空'</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> item </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
      level</span></span><span><span style="color:#999999">,</span></span><span><span>
      category</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#708090">// Tips: 为防止外部数据进行数据注入，我们可以对内容进行 encode 处理。</span></span><span><span></span></span><span><span style="color:#708090">// content: encodeURIComponent(str),</span></span><span><span>
      content</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> str</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>logModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>item</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">getSucVoidRes</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>一路操作猛如虎，回头一看嘿嘿嘿～终于，我们收到了来自外界的第一条数据！</span></span></span><span><span><code><span> hello world！</span></code></span></span></p><div><img alt="" height="455" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32UjXKHV8myXikTQj.jpg" width="530" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>﻿</span></span></span></p><div><img alt="" height="406" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-09-22-11-32Yip7Bh7Tjx23VV9.jpg" width="530" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>连接及创建数据成功！此时已经完成基础功能啦～</span></strong></span></span></p><span id="OSC_h1_4"></span><h1><span><span><span>第三步、实现 </span></span></span><span><span><code><span>CRUD</span></code></span></span><span><span><span> 基础功能</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>剩下的内容，其实大家可以自行脑补了，就是调用数据库的操作逻辑。先说说什么是 </span></span></span><span><span><code><span>CRUD</span></code></span></span></p><ul><li><span><span><span><code><span>C</span></code></span></span><span><span><span> create 创建</span></span></span></span></li><li><span><span><span><code><span>R</span></code></span></span><span><span><span> read 读取</span></span></span></span></li><li><span><span><span><code><span>U</span></code></span></span><span><span><span> update 更新</span></span></span></span></li><li><span><span><span><code><span>D</span></code></span></span><span><span><span> delete 删除</span></span></span></span></li></ul><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>下面给个简单示例，大家看看，剩下就去找文档，实现业务逻辑即可：</span></span></span></p><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> Injectable </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/common'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> InjectModel </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'@nestjs/sequelize'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> User </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">from</span></span><span><span></span></span><span><span style="color:#669900">'./user.model'</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span>@Injectable</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">export</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">UserService</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">constructor</span></span><span><span style="color:#999999">(</span></span><span><span></span></span><span><span>@InjectModel</span></span><span><span style="color:#999999">(</span></span><span><span>User</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">private</span></span><span><span> userModel</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#0077aa">typeof</span></span><span><span> User</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 创建新数据</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>user</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> User</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> newUser </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">create</span></span><span><span style="color:#999999">(</span></span><span><span>user</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> newUser</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 查找所有数据</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findAll</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findAll</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 按要求查找单个</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">findOne</span></span><span><span style="color:#999999">(</span></span><span><span>id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findOne</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> where</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> id </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 按要求更新</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#dd4a68">update</span></span><span><span style="color:#999999">(</span></span><span><span>id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">,</span></span><span><span> user</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span> User</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">update</span></span><span><span style="color:#999999">(</span></span><span><span>user</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> where</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> id </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findOne</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> where</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> id </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 按要求删除</span></span><span><span></span></span><span><span style="color:#0077aa">async</span></span><span><span></span></span><span><span style="color:#0077aa">delete</span></span><span><span style="color:#999999">(</span></span><span><span>id</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#669900">string</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">const</span></span><span><span> user </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span></span></span><span><span style="color:#0077aa">this</span></span><span><span style="color:#999999">.</span></span><span><span>userModel</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">findOne</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">{</span></span><span><span> where</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span> id </span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">await</span></span><span><span> user</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">destroy</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><code><span>Tips:</span></code></span></span><span><span><span> 进行删除的时候，我们可以进行假删除，两个数据库，一个是备份数据库，一个是主数据库。主数据库可以直接删除或者增加标识表示删除。备份数据库，可以不用删除只写入和更新操作，这样可以进行数据还原操作。 </span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>此外，为了防止 SQL 数据库注入，大家需要对数据来源进行统一校验处理或者直接进行 encode 处理，对于重要数据可以直接进行 MD5 加密处理，防止数据库被直接下载泄露。关于 SQL 数据库的安全处理，网上教程有很多，大家找一找就可以啦～</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>部署就比较简单了，我们就不需要一一赘述了，数据库可以用集团提供的云数据库，而 Nest 就是普通的 node 部署。</span></span></span></p><blockquote><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>作者：京东零售，周明亮</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>来源：京东云开发者社区，转载请注明来源</span></span></span></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 08:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10116557</guid>
            <link>https://my.oschina.net/u/4090830/blog/10116557</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ChromeOS 是使用 Google 桌面环境的 Linux 发行版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Kevin C. Tofel 是一名专注报道 Chromebook 内容的科技作者。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.aboutchromebooks.com%2Fnews%2Fnow-more-than-ever-chromeos-is-linux-with-googles-desktop-environment%2F" target="_blank">最近他在文章提到</a>，<strong>ChromeOS 现在更像是带有 Google 桌面环境的 Linux 发行版</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-45d0fda10e68e749e56a35a059e2e1980cf.png" referrerpolicy="no-referrer"></p><p>他说道，尽管并非所有人都知道，但 ChromeOS 实际上是一个 Linux 发行版。这个事实被有效地隐藏了。他对此的理解是：<strong>对于主流消费者来说，Linux 可能是一个令人恐惧的词汇</strong>。但无法否认，ChromeOS 就是 Linux —— 它使用了 Linux 内核，<strong>但被图形用户界面（也就是桌面环境）隐藏了起来</strong>。</p><p>他解释说，当你安装 Linux 时，你会选择一个发行版。它可能是 Arch、Fedora、Debian、Ubuntu。他自己用的是 Pop OS! —— 包含一个 Linux 内核以及该特定发行版的软件和修改。你可以把内核看作是最底层的软件。它帮助其他软件与硬件进行交互，以形成一个连贯的系统。这就是你可以通过应用程序或终端浏览文件的原因。</p><p>然而，这只是系统的一部分。另一部分是你如何与它进行交互。有些人更喜欢使用终端和命令行来完成所有事情，这种方法涉及到相对陡峭的学习曲线。所以有图形化的桌面环境来帮助解决这个问题。这些环境会以可视化的方式显示可点击的文件夹，或者有一个应用程序启动器菜单等等。</p><p>尽管大多数 Linux 发行版都带有默认的桌面环境，用户可以从许多其他环境中进行安装和选择。但在 ChromeOS 上你不能这样做，这就是为什么他说&nbsp;<strong>ChromeOS 使用了 Google 的桌面环境</strong>。</p><p>因此回到 ChromeOS 和底层系统软件上来说，它就是 Linux。<strong>Google 使用了你从未见过的定制版本的 Linux</strong>。</p><p>Kevin C. Tofel 进一步解释说，当你在 ChromeOS 上打开 Linux，你会看到一个终端和运行在虚拟机中的 Debian Linux 容器。这就是为什么你可以在 ChromeOS 上运行 Linux 应用程序的原因。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 08 Oct 2023 06:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/261297/chromeos-is-linux-with-googles-desktop-environment</guid>
            <link>https://www.oschina.net/news/261297/chromeos-is-linux-with-googles-desktop-environment</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
