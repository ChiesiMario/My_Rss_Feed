<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 28 Feb 2024 02:42:41 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[MFiX —— 开源多相流 CFD 软件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>MFiX 是美国能源部开发的一款用于模拟颗粒流体多相流的开源软件，CFD 部分使用 SIMPLE 算法，而颗粒部分包含了 TFM、MPPIC 以及 DEM 等模型，且可以模拟连续相和离散相之间的传质传热。</p><p>MFiX 基于 fortran 语言开发，核心特性包括：并行、开源、跨平台、一键安装、用户图形界面、支持 TFM/DEM/PIC 多种模型。</p><ul><li>跨平台：该软件支持 Windows\Linux\macOS，使得用户既能在 windows 下学习、测试算例，也可以直接在超算平台上进行计算</li><li>一键安装：该开源软件可以通过 anaconda 方便的一键安装，解决了大规模开源软件难以编译安装的痛点</li><li>用户图形界面：该软件支持用户图形界面，可以方便的设置计算参数、监控计算结果。</li><li>Cutcell 网格：该软件采用 cutcell 网格处理复杂结构，可以通过 stl 文件或软件内置的几何结构生成器构建模拟计算区域。</li><li>物性数据库：软件自带物性数据库，方便传热、化学反应的计算</li><li>Stiff Chem Solver: 燃烧等化学反应的特征时间远远小于流动的特征时间，通过 stiff 化学求解器分步求解化学反应和流体流动，该软件可以方便的模拟多相反应流动</li><li>该软件自带多个演示算例，学习曲线平滑</li><li>模型丰富：采用 SIMPLE 算法的流体求解器、双流体 TFM 求解器、离散单元法 DEM 颗粒模拟、CFD-DEM 模拟、MP-PIC 模拟</li><li>MPI 多机并行，方便在超算平台上大规模计算</li></ul><p><strong>运行截图</strong></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-be3c669b3b0de4ac6c4bd620524919062f8.png" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 28 Feb 2024 02:22:36 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/mfix</guid>
            <link>https://www.oschina.net/p/mfix</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 小红书自主研发的跨平台播放器 REDPlayer]]>
            </title>
            <description>
                <![CDATA[<h1><a id="redplayer" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#redplayer"></a>REDPlayer</h1><p><img src="https://gitee.com/rte-dev/RedPlayer/raw/main/redplayer.jpg" alt="示例图片" referrerpolicy="no-referrer"></p><p><img src="https://img.shields.io/badge/release-v1.0.0-blue" alt="GitHub release (latest by date including pre-releases)" referrerpolicy="no-referrer"><img src="https://img.shields.io/badge/license-LGPL2.1-blue" alt="GitHub license" referrerpolicy="no-referrer"></p><h2><a id="about-redplayer" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#about-redplayer"></a>About REDPlayer</h2><p>REDPlayer 是一款由小红书自主研发的跨平台 (支持 Android、iOS、HarmonyOS 等平台) 播放器。不同于行业其他播放器，REDPlayer 具有结构简单、耦合度低、功能边界清晰等特点，提供了多种接入方式，技术人员可根据需要灵活选择，既可快速集成 SDK 使用，也可基于源码进行定制开发。</p><p>REDPlayer 的宗旨是让开发者可以快速明确地了解播放器的基本构造，并可根据个人需求进行简单扩展，满足不同用户的多样需求，可作为学生学习的基础工具，也可作为企业的商用平台。</p><p>REDPlayer 支持点播、直播场景下的多种协议和格式 (如 HLS、MP4、FLV 等)，并可二次扩展更多协议 (如：RTC 等)。每个模块均是解耦的，开发者可以根据需要挂载自定义模块，如自研解码器、渲染器等。</p><table><thead><tr><th>Platform</th><th>Build Status</th></tr></thead><tbody><tr><td>Android</td><td>Done</td></tr><tr><td>iOS</td><td>Done</td></tr><tr><td>others</td><td>In Coming</td></tr></tbody></table><h3><a id="quickstartdemo" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#quickstartdemo"></a>Quickstart/Demo</h3><ul><li><p>Android <a href="https://gitee.com/rte-dev/RedPlayer/blob/main/source/android/README.md">Quickstart</a>/ <a href="https://gitee.com/rte-dev/RedPlayer/blob/main/source/android/app/README.md">Demo</a></p></li><li><p>IOS <a href="https://gitee.com/rte-dev/RedPlayer/blob/main/source/ios/README.md">Quickstart</a>/ <a href="https://gitee.com/rte-dev/RedPlayer/blob/main/source/ios/RedPlayerDemo">Demo</a></p></li><li><p>In coming...</p></li></ul><h3><a id="features" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#features"></a>Features</h3><table><thead><tr><th>Function</th><th>Function Description</th><th>Current Support Situation</th><th>Other Notes</th></tr></thead><tbody><tr><td>Rich Format</td><td>Supports rich audio and video formats such as FLV, HLS, MP4, MP3, and Vorbis</td><td>✅</td><td></td></tr><tr><td>DASH Protocol</td><td>Supports standard protocol DASH</td><td>✅</td><td>Optimized version of DASH for on-demand support in the later stage</td></tr><tr><td>HDR</td><td>Supports multiple HDR formats such as HDR10/HLG. Distribution and playback support are provided according to the model</td><td>✅</td><td></td></tr><tr><td>URL Playback</td><td>Supports playback of local and network videos via URL</td><td>✅</td><td></td></tr><tr><td>Log Reporting</td><td>Supports reporting player logs and statistics related to playback point information</td><td>✅</td><td></td></tr><tr><td>Abnormal Analysis</td><td>Supports obtaining corresponding abnormal information through log analysis</td><td>✅</td><td></td></tr><tr><td>H.264 Playback &amp; Hardware Decoding</td><td>Supports H.264 video sources and hardware decoding</td><td>✅</td><td></td></tr><tr><td>H.265 Playback &amp; Hardware Decoding</td><td>Supports H.265 video sources and hardware decoding</td><td>✅</td><td>Software decoding capabilities will be supported in the later stage</td></tr><tr><td>Automatic switching between software and hardware decoding</td><td>Automatically switches to software decoding when the terminal does not support hardware decoding</td><td>✅</td><td></td></tr><tr><td>Playback Control</td><td>Supports playback control functions such as start, end, pause, and resume</td><td>✅</td><td></td></tr><tr><td>Accurate Seeking</td><td>Supports accurate seeking to a specified position, which can be accurate to the frame level</td><td>✅</td><td></td></tr><tr><td>Dynamic Dropping</td><td>Start dynamic dropping when the frame rate exceeds 60 fps</td><td>✅</td><td></td></tr><tr><td>Replay</td><td>Supports manually triggered replay after the video ends</td><td>✅</td><td></td></tr><tr><td>Continue playing</td><td>Supports setting the continuous playing time point</td><td>✅</td><td></td></tr><tr><td>Loop Playback</td><td>Supports automatic replay after video playback ends</td><td>✅</td><td>Parameter configuration is required</td></tr><tr><td>Variable Speed Playback</td><td>Supports variable speed playback of 0.5-2 times, and the audio 实现 variable speed without changing the pitch</td><td>✅</td><td></td></tr><tr><td>Definition Adjustment</td><td>Supports switching between multiple definitions for on-demand and transcoding</td><td>✅</td><td></td></tr><tr><td>Seeking within the Cache</td><td>Supports seeking without clearing the buffer for cached video content</td><td>✅</td><td></td></tr><tr><td>Packing Mode</td><td>Supports picture cropping and filling</td><td>✅</td><td></td></tr><tr><td>Private DRM</td><td>Supports private DRM encryption schemes</td><td>✅</td><td></td></tr><tr><td>Adaptive Bitrate</td><td>When playing HLS/DASH, it supports automatically selecting the definition for playback through bandwidth prediction</td><td>✅</td><td>Currently only supports selection before playback, and does not support abr during playback</td></tr><tr><td>Volume Settings</td><td>Supports real-time adjustment of system volume and mute operation</td><td>✅</td><td></td></tr><tr><td>Pure Audio Playback</td><td>Supports playing audio only</td><td>✅</td><td></td></tr><tr><td>Preload</td><td>Supports setting the preload size to reduce the time spent on the first screen</td><td>✅</td><td></td></tr><tr><td>Play While Downloading</td><td>Supports playing while caching and downloading subsequent content, and you can set network policies</td><td>✅</td><td></td></tr><tr><td>Playback Callback</td><td>Supports playback status callback, first frame callback, playback completion or failure callback</td><td>✅</td><td></td></tr><tr><td>Retry on Playback Failure</td><td>Automatically retries on playback failure</td><td>✅</td><td>Only supports retries for non-4XX and 5XX classes</td></tr><tr><td>Real-time Download Speed</td><td>Supports getting real-time download speed</td><td>❌</td><td>Will be supported in later versions</td></tr><tr><td>Encrypted Streaming PlayBack</td><td>Support for on-demand transcoding of encrypted streams</td><td>❌</td><td>Need for custom development</td></tr><tr><td>Screenshot Function</td><td>Support for capturing any frame of the playback picture</td><td>❌</td><td>Will be supported in later versions</td></tr><tr><td>Thumbnail Preview</td><td>Support for previewing progress bar thumbnails (sprite map)</td><td>❌</td><td>Related to business, not currently supported</td></tr><tr><td>Set player size</td><td>Support for customizing the width and height of the player</td><td>❌</td><td>Will be supported in later versions</td></tr><tr><td>External subtitles</td><td>Support for two docking modes of external subtitles: full-link solution and pure client solution</td><td>❌</td><td>Will be supported in later versions</td></tr><tr><td>Client super-resolution</td><td>The client performs super-resolution enhancement on low-quality videos</td><td>❌</td><td>Will be supported in later versions</td></tr><tr><td>H.266 playback</td><td>Support for video playback in H.266 encoding format</td><td>❌</td><td>Will be supported in later versions</td></tr><tr><td>AV1 playback</td><td>Support for video playback in AV1 encoding format</td><td>❌</td><td>Will be supported in later versions</td></tr></tbody></table><h3><a id="open-content" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#open-content"></a>Open Content</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">```bash</span><span id="LC2" class="line"># Describe the main contents of current open source and the estimated time and contents of the next open source</span><span id="LC3" class="line">```</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ul><li><a href="https://gitee.com/rte-dev/RedPlayer/blob/main/CONTENTS.md">CONTENTS.md</a></li></ul><h3><a id="usage" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#usage"></a>Usage</h3><ul><li>You can directly integrate your project by calling the interface or compile independently.</li><li><a href="https://gitee.com/rte-dev/RedPlayer/blob/main/INTERFACES.md">INTERFACES.md</a></li></ul><h3><a id="build-environment" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#build-environment"></a>Build Environment</h3><ul><li><p><strong>Install Homebrew &amp; Git</strong></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"> /bin/bash <span class="nt">-c</span><span class="s2">"</span><span class="si">$(</span>curl <span class="nt">-fsSL</span> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh<span class="si">)</span><span class="s2">"</span></span><span id="LC2" class="line"> brew <span class="nb">install </span>git</span></pre><div class="markdown-code-block-copy-btn"></div></div></div></li><li><p><strong>Build Android</strong></p><p><strong>Using Android SDK</strong></p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fdeveloper.android.com%2Fstudio%3Fhl%3Den">Andrioid SDK</a> is android project base dependency. You should download and then config with the following command:</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c"># add this line to your ~/.bash_profile or ~/.profile, the android sdk will work</span></span><span id="LC2" class="line"><span class="nb">export </span><span class="nv">ANDROID_SDK</span><span class="o">=</span>&lt;your sdk path&gt;</span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="c"># My build environment:</span></span><span id="LC5" class="line"><span class="c"># macOS 14.0</span></span><span id="LC6" class="line"><span class="c"># Android Studio Flamingo | 2022.2.1 Patch 2</span></span><span id="LC7" class="line"><span class="c"># gradle version: 7.5.0</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div></li><li><p><strong>Build iOS</strong></p><p><strong>Using CocoaPods</strong></p><p><a href="https://gitee.com/link?target=http%3A%2F%2Fcocoapods.org">CocoaPods</a> is a dependency manager for Cocoa projects. You can install it with the following command:</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nv">$ </span>gem <span class="nb">install </span>cocoapods</span><span id="LC2" class="line"></span><span id="LC3" class="line"><span class="c"># My build environment:</span></span><span id="LC4" class="line"><span class="c"># macOS 14.0</span></span><span id="LC5" class="line"><span class="c"># Xcode 15.2 (15C500b)</span></span><span id="LC6" class="line"><span class="c"># Cocoapods version: 1.10.2</span></span><span id="LC7" class="line"><span class="c"># Ruby 3.0.6p216</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div></li></ul><h3><a id="latest-changes" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#latest-changes"></a>Latest Changes</h3><ul><li><a href="https://gitee.com/rte-dev/RedPlayer/blob/main/NEWS.md">NEWS.md</a></li></ul><h3><a id="support" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#support"></a>Support</h3><ul><li>Please try to discuss technical issues (<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2FRTE-Dev%2FRedPlayer%2Fissues">https://github.com/RTE-Dev/RedPlayer/issues</a>) publicly on github, and do not inquire privately by email. We will not reply one by one.</li></ul><h3><a id="licence" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#licence"></a>Licence</h3><h4><a id="self-licence" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#self-licence"></a>Self Licence</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">Copyright (c) 2024 xiaohongshu</span><span id="LC2" class="line">Licensed under LGPLv2.1 or later</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="dependence-licence" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#dependence-licence"></a>Dependence Licence</h4><ul><li>ffmpeg: LGPL v2.1+</li><li>soundtouch: LGPL v2.1</li><li>libcurl: MIT License</li><li>c-ares: MIT License</li><li>glide: MIT License</li><li>Masonry: MIT License</li><li>openssl: Apache License 2.0</li><li>PictureSelector: Apache License 2.0</li></ul><h3><a id="law-and-rule" class="anchor" href="https://gitee.com/rte-dev/RedPlayer#law-and-rule"></a>Law And Rule</h3><p>All rights and explanations belong to Xiaohongshu，you should always ask your lawyer for these stuffs before use it in your product.</p>]]>
            </description>
            <pubDate>Wed, 28 Feb 2024 02:14:36 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/rte-dev/RedPlayer</guid>
            <link>https://gitee.com/rte-dev/RedPlayer</link>
        </item>
        <item>
            <title>
                <![CDATA[RXThinkCMF 敏捷开发框架 Laravel10.x+Layui 版本 v2.0.0 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#40485b">v2.0.0 更新如下:</span><br><span style="background-color:#ffffff; color:#40485b">1、新增 Docker 容器化解决方案；</span><br><span style="background-color:#ffffff; color:#40485b">2、优化系统功能模块和文件结构；</span><br><span style="background-color:#ffffff; color:#40485b">3、优化编码规范，统一命名和描述；</span><br><span style="background-color:#ffffff; color:#40485b">4、优化数据库表结构和编码；</span><br><span style="background-color:#ffffff; color:#40485b">5、优化模块页面，提升使用体验度；</span><br><span style="background-color:#ffffff; color:#40485b">6、修复近期用户反馈的问题；</span></p><div><div><div><h2>项目介绍</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">一款 PHP 语言基于 Laravel10.x、Layui、MySQL 等框架精心打造的一款模块化、插件化、高性能的前后端分离架构敏捷开发框架，可用于快速搭建前后端分离后台管理系统，本着简化开发、提升开发效率的初衷，框架自研了一套个性化的组件，实现了可插拔的组件式开发方式：单图上传、多图上传、下拉选择、开关按钮、单选按钮、多选按钮、图片裁剪等等一系列个性化、轻量级的组件，是一款真正意义上实现组件化开发的敏捷开发框架，框架已集成了完整的 RBAC 权限架构和常规基础模块，为了敏捷快速开发，提升研发效率，框架内置了一键 CRUD 代码生成器，自定义了模块生成模板，可以根据已建好的表结构 (字段注释需规范) 快速的一键生成整个模块的所有代码和增删改查等等功能业务，真正实现了低代码开发，极大的节省了人力成本的同时提高了开发效率，缩短了研发周期，是一款真正意义上实现组件化、低代码敏捷开发框架。</p><h2>内置模块</h2><ul><li>用户管理：用于维护管理系统的用户，常规信息的维护与账号设置。</li><li>角色管理：角色菜单管理与权限分配、设置角色所拥有的菜单权限。</li><li>菜单管理：配置系统菜单，操作权限，按钮权限标识等。</li><li>职级管理：主要管理用户担任的职级。</li><li>岗位管理：主要管理用户担任的岗位。</li><li>部门管理：主要管理系统组织架构，对组织架构进行统一管理维护。</li><li>操作日志：系统正常操作日志记录和查询；系统异常信息日志记录和查询。</li><li>登录日志：系统登录日志记录查询包含登录异常。</li><li>字典管理：对系统中常用的较为固定的数据进行统一维护。</li><li>配置管理：对系统的常规配置信息进行维护，网站配置管理功能进行统一维护。</li><li>城市管理：统一对全国行政区划进行维护，对其他模块提供行政区划数据支撑。</li><li>友链管理：对系统友情链接、合作伙伴等相关外链进行集成维护管理的模块。</li><li>个人中心：主要是对当前登录用户的个人信息进行便捷修改的功能。</li><li>广告管理：主要对各终端的广告数据进行管理维护。</li><li>站点栏目：主要对大型系统网站等栏目进行划分和维护的模块。</li><li>会员管理：对各终端注册的会员进行统一的查询与管理的模块。</li><li>网站配置：对配置管理模块的数据源动态解析与统一维护管理的模块。</li><li>通知公告：系统通知公告信息发布维护。</li><li>代码生成：一键生成模块 CRUD 的功能，包括后端和前端等相关代码。</li><li>案例演示：常规代码生成器一键生成后的演示案例。</li></ul><h2>软件信息</h2><ul><li>软件名称：RXThinkCMF 敏捷开发框架 Laravel10.x+Layui 版本</li><li>官网网址：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rxthink.cn" target="_blank">https://www.rxthink.cn</a></li><li>文档网址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdocs.laravel10.layui.rxthink.cn" target="_blank">http://docs.laravel10.layui.rxthink.cn</a></li><li>演示地址：<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmanage.laravel10.layui.rxthink.cn" target="_blank">http://manage.laravel10.layui.rxthink.cn</a></li></ul><h2>核心组件</h2><ul><li>单图上传组件</li></ul><div><div><pre><span>@render(<span style="color:#032f62">'UploadImageComponent'</span>, [<span style="color:#032f62">'name'</span>=&gt;<span style="color:#032f62">'avatar|头像|90x90|建议上传尺寸 450x450|450x450'</span>,<span style="color:#032f62">'value'</span>=&gt;<span style="color:#d73a49">isset</span>($info[<span style="color:#032f62">'avatar_url'</span>]) ? $info[<span style="color:#032f62">'avatar_url'</span>] : <span style="color:#032f62">''</span>])</span></pre></div></div><ul><li>多图上传组件</li></ul><div><div><pre><span> @render(<span style="color:#032f62">'UploadAlbumComponent'</span>, [<span style="color:#032f62">'name'</span>=&gt;<span style="color:#032f62">'imgs|图集|90x90|20|建议上传尺寸 450x450|450x450'</span>,<span style="color:#032f62">'value'</span>=&gt;<span style="color:#d73a49">isset</span>($info[<span style="color:#032f62">'imgsList'</span>]) ? $info[<span style="color:#032f62">'imgsList'</span>] : []])</span></pre></div></div><ul><li>下拉选择组件</li></ul><div><div><pre><span>@render(<span style="color:#032f62">'SelectComponent'</span>, [<span style="color:#032f62">'name'</span>=&gt;<span style="color:#032f62">'gender|1|性别|name|id'</span>,<span style="color:#032f62">'data'</span>=&gt;config(<span style="color:#032f62">"admin.gender_list"</span>),<span style="color:#032f62">'value'</span>=&gt;<span style="color:#d73a49">isset</span>($info[<span style="color:#032f62">'gender'</span>]) ? $info[<span style="color:#032f62">'gender'</span>] : <span>1</span>])</span></pre></div></div><ul><li>单选按钮组件</li></ul><div><div><pre><span>@render(<span style="color:#032f62">'RadioComponent'</span>, [<span style="color:#032f62">'name'</span>=&gt;<span style="color:#032f62">'gender|name|id'</span>,<span style="color:#032f62">'data'</span>=&gt;config(<span style="color:#032f62">"admin.gender_list"</span>),<span style="color:#032f62">'value'</span>=&gt;<span style="color:#d73a49">isset</span>($vo[<span style="color:#032f62">'gender'</span>]) ? $vo[<span style="color:#032f62">'gender'</span>] : <span>0</span>])</span></pre></div></div><ul><li>复选框组件</li></ul><div><div><pre><span>@render(<span style="color:#032f62">'CheckboxComponent'</span>, [<span style="color:#032f62">'name'</span>=&gt;<span style="color:#032f62">'type|name|id'</span>,<span style="color:#032f62">'data'</span>=&gt;<span style="color:#032f62">"1=云计算,2=数据库,3=大数据"</span>,<span style="color:#032f62">'value'</span>=&gt;<span style="color:#d73a49">isset</span>($vo[<span style="color:#032f62">'type'</span>]) ? $vo[<span style="color:#032f62">'type'</span>] : []])</span></pre></div></div><ul><li>城市选择组件</li></ul><div><div><pre><span>@render(<span style="color:#032f62">'CityComponent'</span>, [<span style="color:#032f62">'cityId'</span>=&gt;<span style="color:#d73a49">isset</span>($info[<span style="color:#032f62">'district_id'</span>]) ? $info[<span style="color:#032f62">'district_id'</span>] : <span>0</span>,<span style="color:#032f62">'limit'</span>=&gt;<span>3</span>])</span></pre></div></div><ul><li>开关组件</li></ul><div><div><pre><span>@render(<span style="color:#032f62">'SwitchComponent'</span>, [<span style="color:#032f62">'name'</span>=&gt;<span style="color:#032f62">'status'</span>,<span style="color:#032f62">'title'</span>=&gt;<span style="color:#032f62">'在用|禁用'</span>,<span style="color:#032f62">'value'</span>=&gt;<span style="color:#d73a49">isset</span>($info[<span style="color:#032f62">'status'</span>]) ? $info[<span style="color:#032f62">'status'</span>] : <span>1</span>])</span></pre></div></div><ul><li>日期组件</li></ul><div><div><pre><span>@render(<span style="color:#032f62">'DateComponent'</span>, [<span style="color:#032f62">'name'</span>=&gt;<span style="color:#032f62">'entry_date|入职时间|date'</span>,<span style="color:#032f62">'value'</span>=&gt;<span style="color:#d73a49">isset</span>($info[<span style="color:#032f62">'format_entry_date'</span>]) ? $info[<span style="color:#032f62">'format_entry_date'</span>] : <span style="color:#032f62">''</span>])</span></pre></div></div><ul><li>图标组件</li></ul><div><div><pre><span>@render(<span style="color:#032f62">'IconComponent'</span>, [<span style="color:#032f62">'name'</span>=&gt;<span style="color:#032f62">'icon'</span>,<span style="color:#032f62">'value'</span>=&gt;<span style="color:#d73a49">isset</span>($info[<span style="color:#032f62">'icon'</span>]) ? $info[<span style="color:#032f62">'icon'</span>] : <span style="color:#032f62">'layui-icon-component'</span>])</span></pre></div></div><ul><li>穿梭组件</li></ul><div><div><pre><span>@render(<span style="color:#032f62">'TransferComponent'</span>, [<span style="color:#032f62">'param'</span>=&gt;<span style="color:#032f62">'func|0|全部节点,已赋予节点|name|id|220x350'</span>,<span style="color:#032f62">'data'</span>=&gt;config(<span style="color:#032f62">'admin.menu_func'</span>),<span style="color:#032f62">'value'</span>=&gt;<span style="color:#d73a49">isset</span>($info[<span style="color:#032f62">'funcList'</span>]) ? $info[<span style="color:#032f62">'funcList'</span>] : <span style="color:#032f62">""</span>])</span></pre></div></div><h2>模块展示</h2><p style="margin-left:0; margin-right:0"><img alt="" height="1080" src="https://oscimg.oschina.net/oscnet/up-78efa203fa062e8476dd5b727f6eb121d55.png" width="1920" referrerpolicy="no-referrer"></p></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 22:59:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280552</guid>
            <link>https://www.oschina.net/news/280552</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[墨干理工套件 V1.2.5 LTS 发布了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(255, 255, 245, 0.86); margin-left:0; margin-right:0; text-align:start">墨干理工套件 V1.2.5LTS<span>本次更新主要是修复既有错误、改进用户体验。</span></p><blockquote><p style="color:var(--vp-c-text-2); margin-left:0; margin-right:0">注意：一个重大的变更是默认开启了实验选项<code>DO NOT use UTF-8 for CJK in TM format</code>，保持和 GNU TeXmacs 2.1.2 的兼容性。之前在墨干 V1.1.x 使用了 TM 格式中显示中文特性的用户，可以关闭这个选项以正确加载墨干 V1.1.x 生成的可以在纯文本编辑器中正常显示中文的文档。v1.1.x 的在 tm 文档中显示中文的特性可能会带来一些严重的兼容性问题，故而不建议用户使用可以在纯文本编辑器中正常显示中文的 TM 文档。从墨干 V1.2.6 开始，我们会实验性地支持 TMU 格式以 UTF-8 编码显示中文。TMU 格式经过多个版本迭代，最终才会对所有用户开放。</p></blockquote><p>墨干理工套件 V1.2.5 LTS 包含以下组件：</p><ul><li>墨干 V1.2.5LTS (Mogan Research v1.2.5 LTS)</li></ul><p>墨干 V1.2.5 LTS 这个版本标志着墨干作为 GNU TeXmacs 的一个发行版，基本完成了从 Qt 4 到 Qt 6 的升级，从 GNU Guile 1.8 到 S7 Scheme 的执行引擎切换，从 Autotools 到 xmake 的构建工具切换等重要的基础设施的建设。在这个坚实的基础上，从 V1.2.0 开始，我们以一月一版本的愉快的高强度研发迭代下，大大改善了墨干的可用性和易用性。</p><p>墨干 V1.2.5 LTS 是为期至少一年的长期支持版，其目的是服务教育工作者。一年的长期支持，是为了覆盖 2024 年的春季学期和秋季学期。欢迎教育工作者们使用墨干制作试卷、幻灯片、讲义以及撰写书籍。在未来的一个月内，我们会发布 V1.2.5.1，以修复 V1.2.5 中仍旧存在的错误。后续的补丁版本会按需发布，欢迎教育工作者们使用墨干并反馈错误。</p><p>墨干 V1.2.5 LTS 保留了对 Qt 5 的支持，这是为了以一种比较低的维护成本为老旧系统提供构建墨干的可行性：比如 Windows 7，macOS 10.x，龙芯生态的旧世界。</p><p>从墨干 V1.2.6 开始，我们移除了对 Qt 5 的支持，轻装上阵；另外，我们也会放慢研发迭代的节奏，每两个月发布一个版本，作为 TeXmacs 发行版中的先行者，稳步迭代进化。</p><h2>影响用户体验的详细更新<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmogan.app%2Fzh%2Fguide%2FChangeLog_v1.2.5.html%23%25E5%25BD%25B1%25E5%2593%258D%25E7%2594%25A8%25E6%2588%25B7%25E4%25BD%2593%25E9%25AA%258C%25E7%259A%2584%25E8%25AF%25A6%25E7%25BB%2586%25E6%259B%25B4%25E6%2596%25B0" target="_blank">​</a></h2><ul><li>安装包 
  <ul><li>提供 Ubuntu 20.04 的 deb 安装包</li><li>提供 Debian 12 (bookworm) 的 deb 安装包</li><li>提供 Windows 平台的便携版安装包</li></ul></li><li>幻灯片模式 
  <ul><li>修复在 macOS 平台切换幻灯片主题无法切换幻灯片背景图的问题</li></ul></li><li>快捷键 
  <ul><li>macOS：Command 和+/-的组合无论是否按下 Shift 都可以放大或者缩小</li><li>修复未知快捷键被作为文本插入到文档中的问题</li></ul></li><li>用户界面 
  <ul><li>修复在 macOS 平台双击打开含有中文字符的文件失败的问题</li></ul></li><li>排版引擎 
  <ul><li>修复在文档中删除内容出现残影的问题</li><li>修复在幻灯片设置部分内容为双栏时出错的问题</li><li>number 原语支持汉字的数字：一、二、三等</li></ul></li><li>性能优化 
  <ul><li>改进解析 TeXmacs 文档的性能</li><li>改进渲染 Pine 幻灯片主题的性能</li></ul></li><li>PDF 导入 
  <ul><li>新增<code>文件-&gt;导入-&gt;可编辑 PDF</code>用于导入可编辑 PDF，而不是直接使用<code>文件-&gt;打开</code>来打开可编辑 PDF</li></ul></li><li>版本控制 
  <ul><li>修复在 Windows 平台进入<code>版本-&gt;历史</code>之后，无法查看文档历史版本的问题</li></ul></li><li>图像插件 
  <ul><li>改进对 Postscript 图像格式的支持（需要用户手动安装 Ghostscript）</li><li>改进对 SVG 图像格式的支持（需要用户手动安装 Inkscape）</li></ul></li><li>会话插件 
  <ul><li>改进 Scheme 会话中中文变量名、中文字符串的支持</li></ul></li><li>代码插件 
  <ul><li>重新添加了 Python 的代码高亮</li></ul></li></ul><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 12:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280535/mogan-1-2-5-released</guid>
            <link>https://www.oschina.net/news/280535/mogan-1-2-5-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[aiohttp < 3.9.2 路径遍历漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h2>漏洞描述</h2><p>aiohttp 是一个开源的用于 asyncio 和 Python 的异步 HTTP 客户端/服务器框架。</p><p>当使用 aiohttp 作为 Web 服务器并设置静态路由时，若 follow_symlinks 选项设为 True，则不会验证指定文件路径是否位于根目录内。攻击者可以通过构造恶意的请求，访问服务器任意文件。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fray-project%2Fray%EF%BC%88ray" target="_blank">https://github.com/ray-project/ray（ray</a> dashboard）等多个项目中并未正确配置该参数，也会受到漏洞影响。</p><table><tbody><tr><th>漏洞名称</th><th>aiohttp &lt; 3.9.2 路径遍历漏洞</th></tr></tbody><tbody><tr><td>漏洞类型</td><td>路径遍历</td></tr><tr><td>发现时间</td><td>2024-01-30</td></tr><tr><td>漏洞影响广度</td><td>广</td></tr><tr><td>MPS 编号</td><td>MPS-rxvm-9042</td></tr><tr><td>CVE 编号</td><td>CVE-2024-23334</td></tr><tr><td>CNVD 编号</td><td>-</td></tr></tbody></table><h2>影响范围</h2><p>aiohttp@[1.0.5, 3.9.2)</p><p>python-aiohttp@影响所有版本</p><p>aiohttp@[1.0.5, 3.9.2)</p><h2>修复方案</h2><p>将 aiohttp 升级至 3.9.2 及以上版本</p><p>如果应用程序的静态资源服务不需要符号链接功能，将 follow_symlinks 设置为 False</p><h2>参考链接</h2><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oscs1024.com%2Fhd%2FMPS-rxvm-9042" target="_blank">https://www.oscs1024.com/hd/MPS-rxvm-9042</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln%2Fdetail%2FCVE-2024-23334" target="_blank">https://nvd.nist.gov/vuln/detail/CVE-2024-23334</a></p><h2>免费情报订阅&amp;代码安全检测</h2><p>OSCS 是国内首个开源软件供应链安全社区，社区联合开发者帮助全球顶级开源项目解决安全问题，并提供实时的安全漏洞情报，同时提供专业的代码安全检测工具为开发者免费使用。社区开发者可以通过配置飞书、钉钉、企业微信机器人获取一手的情报。</p><p>免费代码安全检测工具： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.murphysec.com%2F%3Fsrc%3Dosc" target="_blank">https://www.murphysec.com/?src=osc</a></p><p>免费情报订阅： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oscs1024.com%2Fcm%2F%3Fsrc%3Dosc" target="_blank">https://www.oscs1024.com/cm/?src=osc</a></p><p>具体订阅方式详见： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oscs1024.com%2Fdocs%2Fvuln-warning%2Fintro%2F%3Fsrc%3Dosc" target="_blank">https://www.oscs1024.com/docs/vuln-warning/intro/?src=osc</a></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4aeef4048430ca1baea7afb51fe0f5dc3dd.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 11:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280528</guid>
            <link>https://www.oschina.net/news/280528</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[马斯克抱怨微软 Windows 难用，V 神：加入 Linux！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>特斯拉 CEO 埃隆・马斯克在社交平台说道，上周末他购买了一台新款的 Windows 11 笔记本电脑，却发现必须创建微软账户 (MSA) 才能使用系统，这让他感到非常愤怒，认为这变相地让微软的人工智能 (AI) 访问了他的数据。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-e5e820c2d6e02c58e0b272f4e8447623295.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FVitalikButerin%2Fstatus%2F1762363524918227423" target="_blank">https://twitter.com/VitalikButerin/status/1762363524918227423</a></u></em></p></blockquote><p>对此，<span style="background-color:#ffffff; color:#333333">以太坊联合创始人 Vitalik Buterin</span>&nbsp;建议马斯克改用 Linux 桌面发行版。</p><p>X 上的一些用户称赞 V 神推广了开源软件。但也有人指出，Linux 可能不是马斯克的最佳选择，因为他使用 PC 的主要目的是玩游戏。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 09:59:34 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280524</guid>
            <link>https://www.oschina.net/news/280524</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GPL 抗辩成功——织梦 CMS「系列」版权纠纷迎来重大转折]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><blockquote><p style="text-align:justify"><span style="color:#27ae60"><strong>摘要</strong></span></p><p style="text-align:justify"><span style="color:#4e5f70">原告：上海卓卓网络科技有限公司（以下简称：卓卓公司）</span></p><p style="text-align:justify"><span style="color:#4e5f70">被告：****医院</span></p><p style="text-align:justify"><span style="color:#4e5f70">事件：****医院使用 DedeCMSV5.7-sp1 软件开发网站，卓卓公司以拥有 DedeCMS Biz V1.0 以及后续多个版本的著作权为由，认为医院侵犯了自己的著作权，要求***医院赔偿 5800 元的授权许可费和 8700 元的诉讼费用。</span></p><p style="text-align:justify"><span style="color:#4e5f70">判决：一审法院认为 DedeCMSV5.7-sp1 中包含 GPL 协议下开源的代码，整体应遵守 GPL 协议，****医院使用软件不用支付授权费用，但仍需遵守署名权的要求。</span></p></blockquote><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span>持续近 3 年、涉及 300 万用户的织梦 CMS 「系列」版权纠纷案在</span></span></span><span><span><span>近</span></span></span><span><span><span>日迎来第一份抗辩成功判决。上海卓卓网络科技有限公司自 2021 年起，以「织梦商业网站内容管理系统【简称：DedeCMS Biz】V1.0」著作权方的身份，在全国各地起诉多个网站中含有 DedeCMS 相关代码的公司，要求赔偿。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span>2023 年 9 月 11 日，卓卓公司诉****医院侵害计算机软件著作权纠纷案件立案。2024 年 2 月 19 日，江苏省无锡市中级人民法院</span></span></span><span><span><span>作出</span></span></span><span><span><span>一审判决书，认可了 GPL 的</span></span></span><span><span><span>「</span></span></span><span><span><span>传染性</span></span></span><span><span><span>」</span></span></span><span><span><span>，涉案软件（具体版本为 DedeCMSV5.7-sp1）整体按 GPL 对外许可，但要求使用者（被告）在网页底部添加原告网址链接，不得侵犯原告的署名权。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span>一审判决书在判决书送达之日起十五日，当事人没有提起上诉的，就会生效。据案件知情人士分析，卓卓公司肯定会上诉。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span>开源中国</span></span></span><span><span><span>从知情人处</span></span></span><span><span><span>获取并查阅判决书。据判决书显示，卓卓公司提出，卓卓通过受让取得了 DedeCMS Biz V1.0 的软件著作权，又在 DedeCMS Biz V1.0 版本的基础上迭代出 DedeCMSV5.5、DedeCMSV5.6、DedeCMSV5.7 等版本。****医院名下网站相关网页相关源代码与卓卓公司享有著作权的涉案软件代码相同，证据包括授权协议中的卓卓公司名称、Powered By DedeCMS、织梦内容管理系统 DEDECMS 的 logo/mark 等等。但****医院并未向卓卓公司购买正版涉案软件，也从未获得过卓卓公司商业使用授权许可。因此卓卓要求****医院支付涉案软件 DedeCMS 软件的授权许可费 5800 元，以及卓卓公司为诉讼所指出的 8700 元费用，共计 14500 元。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span>而****医院辩称：卓卓虽然通过受取得 DedeCMS Biz V1.0 的软件著作权，但没有证据能够证明卓卓公司是织梦内容管理系统 DedeCMS 软件的著作权人。此外，DedeCMS 是一款以 GPL 协议对外许可发布的开源软件，DedeCMS 后续版本包括涉案权利软件都是在 DedeCMSV3 版本基础上迭代升级的，因此受 GPL 约束。根据 GPL 协议禁止添加商业使用的限制条款，也不允许著作权人就软件本身收取授权许可费。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span>此外，围绕案件，卓卓公司和****医院还列举了多项诉求与证据，详情可查看一审判决书（尚未生效）。</span></span></span></span></span></span></p><div><blockquote><div><span style="color:#4e5f70">此份判决书由知情人提供并脱密：https://report.oschina.net/api/files/jhim80u9qm1ofsw/79ci47r1rrt9yqm/2023_02_482_cEvUNytTpS.pdf</span></div></blockquote></div><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span>法院总结此案件争议焦点有两个：</span></span></span></span></span></span></p><div><blockquote><div><span style="color:#4e5f70">综合双方的诉辩主张，并经双方确认，本院对本案的争议焦点归纳为：</span></div><div><span style="color:#4e5f70">一、涉案权利软件的著作权人是否是卓卓公司；</span></div><div><span style="color:#4e5f70">二、****医院是否有权依据 GPL 协议免费使用涉案权利软件</span></div></blockquote></div><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span>针对第一点，法院认为：</span></span></span></span></span></span></p><blockquote><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span style="color:#4e5f70">涉案权利软件的著作权人是卓卓公司。</span></p></blockquote><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span>针对第二点，法院认为：</span></span></span></span></span></span></p><blockquote><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span>&nbsp;</span><span><span><span><span style="color:#646a73">涉案软件 DedeCMSV5.7-sp1&nbsp;是包含采用 GPLV2.0 及以后版本做为协议的 sphinxclient 的派生作品。……由此本案中卓卓公司将涉案软件进行发布代表卓卓公司已经接受 GPL 协议。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#646a73">……</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span style="color:#646a73">涉案软件应当遵守 GPL 协议，卓卓公司在涉案软件的许可协议中的「商业用途需获得授权」的条款与 GPL 协议</span></span></span><span><span><span style="color:#646a73">相</span></span></span><span><span><span style="color:#646a73">抵触，卓卓公司有义务按照 GPL 协议将涉案软件整体授权给获得许可的人，****医院因 GPL 协议获得了对涉案软件使用的授权，并未侵犯卓卓公司的复制权，卓卓公司无权对此行为请求支付授权费用。</span></span></span></span></span><span>&nbsp;</span></p></blockquote><p><span>不过，法院认为****医院需在网站注明来源是卓卓公司。</span></p><blockquote><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span>&nbsp;</span><span><span><span><span style="color:#646a73">卓卓公司在许可协议中载明用户应在使用涉案软件建成网站的主页标注网站链接 www.dedecms.com，该条款并不构成对下游接收者对软件复制、分发、修改权利的限制，应当有效。</span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span><span style="color:#646a73">……</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span style="color:#646a73">GPL 协议作为许可协议有双务性，被许可人在行使复制、发布修改开源软件的权利时，也需要按照协议要求承担相应义务，****医院使用涉案软件 DedeCMS 建成了网站，但未在主页标注卓卓公司创作印记或官网链接，违反了该附加条款，侵害了卓卓公司的署名权，损害了卓卓公司的身份权益。故卓卓公司请求****医院赔偿损失并赔礼道歉，具有事实和法律依据，本院予以支持。</span></span></span></span></span><span>&nbsp;</span></p></blockquote><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span>最终，法院判定由****医院赔偿卓卓公司经济损失及合理维权开支共 800 元，并在判决生效之日起十日内在其公司网站主页发布为期三十日的赔礼道歉声明。在关于赔偿金额的表述中，法院的考量因素中还提到两点值得关注：</span></span></span></span></span></span></p><blockquote><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span style="color:#4e5f70">第三，卓卓公司主张****医院在内的用户需遵守涉案软件的许可协议，但卓卓公司在使用他人代码时却未遵守他人软件的 GPL 许可协议，其行为本身有违诚信原则，具有不正当性。卓卓公司自身对涉案软件的著作权也存在管理不周的情况，软件源代码中记录的版权信息、署名都未直接指向卓卓公司，源代码中不同位置的许可协议条款存在不一致的情形。</span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span style="color:#4e5f70">第四，卓卓公司以涉案软件为权利基础，在全国法院提起大量侵害计算机软件著作权纠纷案件，并因此获得较大收益，该种维权模式既不利于有效打击侵权源头，又大量占用解决纠纷的公共资源，不宜提倡和鼓励。</span></p></blockquote><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span>此外，据企查查信息显示，上海卓卓发起了多起侵害计算机软件著作权纠纷诉讼，自 2 月 28 日-3 月 30 日将陆续有案件开庭。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><img height="522" src="https://static.oschina.net/uploads/space/2024/0227/170855_5DFc_4489239.png" width="600" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:left"><span><span><span><span><span><span>开源中国将持续关注 DedeCMS 系列版权纠纷案件进展，本周内也将梳理此系列纠纷的时间线，欢迎知情者私信爆料。</span></span></span></span></span></span></p></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 09:10:34 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280518/gpl-dedecms</guid>
            <link>https://www.oschina.net/news/280518/gpl-dedecms</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[白宫敦促开发者改用内存安全的编程语言]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">白宫国家网络主任办公室 (ONCD) <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.whitehouse.gov%2Foncd%2Fbriefing-room%2F2024%2F02%2F26%2Fpress-release-technical-report%2F" target="_blank">发布</a>了一份报告，呼吁科技界主动减少网络空间的攻击面；通过改用 Rust 等内存安全编程语言，减少内存安全漏洞的数量来提高软件安全性。同时鼓励研究界解决软件可测量性问题，以便开发出更好的测量网络安全质量的诊断方法。</span></p><p><img height="390" src="https://oscimg.oschina.net/oscnet/up-7cb1183993aa2d8ce4f54a8bb5787fa09a7.png" width="300" referrerpolicy="no-referrer"></p><p><span style="color:#000000">ONCD 例举了历史上一些著名的网络攻击事件，包括：1988 年的 Morris 蠕虫病毒、2003 年的 Slammer 蠕虫病毒、2014 年的 Heartbleed 漏洞、2016 年的 Trident 漏洞、2023 年的 Blastpass 漏洞。并指出，所有这些问题的背后都有一个共同的根本原因，即内存安全漏洞。</span></p><p><span style="color:#000000">报告称：「35 年来，三十五年来，内存安全漏洞一直困扰着数字生态系统，但情况本不必如此。消除整类软件漏洞的挑战是一个紧迫而复杂的问题。展望未来，必须采取新方法来减轻这种风险。」</span></p><p><span style="color:#000000">「减少内存安全漏洞的最高杠杆方法是保护网络空间的构建模块之一：编程语言。使用内存安全编程语言可以消除大多数内存安全错误。」</span></p><p><span style="color:#000000">在此之前，</span><span style="background-color:#ffffff"><span style="color:#000000">美国国家安全局 (NSA) 曾于 2022 年 11 月发布了关于软件开发人员如何防止软件内存安全问题的</span><a href="https://www.oschina.net/news/217425/nsa-memory-safe-programming-language" target="_blank">指南。</a></span><span style="background-color:#ffffff; color:#000000">美国网络安全与基础设施安全局 (CISA)<span>&nbsp;</span></span><span style="color:#070707"><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>也在 2023 年 12 月发布了类似<a href="https://www.oschina.net/news/269933/cisa-the-case-for-memory-safe-roadmaps">报告</a></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="color:#000000"><span style="background-color:#ffffff">，</span>要求过渡到内存安全编程语言，通过消除与内存相关的漏洞来减少软件产品的攻击面。</span></p><p><span style="color:#000000">ONCD 报告以美国总统拜登于 2023 年 3 月签署的</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bleepingcomputer.com%2Fnews%2Fsecurity%2Fwhite-house-releases-new-us-national-cybersecurity-strategy%2F" target="_blank">国家网络安全战略</a><span style="color:#000000">为基础，将网络安全的责任从个人和小型企业转移到技术公司和联邦政府等更有能力管理不断变化的威胁的大型组织身上。并在与整个联邦政府的安全设计计划和研发工作保持一致的同时更进一步，涵盖了由 CISA、NSA、FBI 和 NIST 领导的计划和研发工作。</span></p><p><span style="color:#000000">报告中有关内存安全的工作还补充了美国国会对此主题的兴趣。此外，美国参议院国土安全和政府事务委员会主席 Gary Peters (D-MI) 和美国参议员 Ron Wyden (D-OR) 也向 ONCD 强调了他们在内存安全方面的立法努力。</span></p><p><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.whitehouse.gov%2Fwp-content%2Fuploads%2F2024%2F02%2FFinal-ONCD-Technical-Report.pdf" target="_blank">查看完整报告</a>。</span></p><p><strong><span style="color:#000000">相关阅读：</span></strong></p><ul><li><a href="https://www.oschina.net/news/217425/nsa-memory-safe-programming-language" target="_blank">美国国家安全局建议从 C/C++ 切换到内存安全语言</a></li><li><a href="https://www.oschina.net/news/269933/cisa-the-case-for-memory-safe-roadmaps" target="_blank">美国 CISA 建议放弃 C/C++，消除内存安全漏洞</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 08:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280505/white-house-memory-safe-programming-languages</guid>
            <link>https://www.oschina.net/news/280505/white-house-memory-safe-programming-languages</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[南京大学将开通全国高校首家 AI 课程]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">南京大学正式发布全国高校首家面向 3700 余名新生开设的「1+X+Y」三层次的人工智能通识核心课总体方案。</span></p><p><span style="color:#000000">该方案包含 1 门必修的人工智能通识核心课，X 门人工智能素养课，Y 门各学科与人工智能深度融合的前沿拓展课。其中，1 门人工智能通识核心课面向对象为 2024 年起面向全体本科新生。</span></p><p><span style="color:#000000"><img height="256" src="https://oscimg.oschina.net/oscnet/up-c46928165fcc29d00ea987b62dd6db02a66.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">南京大学党委书记、中国科学院院士谭铁牛指出，当今世界，由人工智能引领的新一轮科技革命和产业变革方兴未艾。在移动互联网、大数据、超级计算、传感网、脑科学等新理论新技术驱动下，人工智能已经对经济发展、社会进步、全球治理等各方面产生重大而深远的影响。只有紧跟时代步伐，把握时代脉搏，才能顺势而上，应势而为，把创新主动权、发展主动权牢牢掌握在自己手中。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 08:03:42 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280497</guid>
            <link>https://www.oschina.net/news/280497</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[0201-0225 开放签团队工作日记]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0.0001pt; margin-right:0px"><span><span><span><span><span><span><span>2022 年底</span></span></span><span><span><span>团队决定</span></span></span><span><span><span>以全新的产品运营和设计思路重回电子签章行业，重新做</span></span></span><span><span><span>电子签章</span></span></span><span><span><span>产品。至于当时如何离开电子签章，又是如何回来的，具体原因等后面再敍。在这么多年的创业的过程中，我们团队经历了从迷茫无助到方向坚定（我们认为的），从一点点构建基础技术架构到基本成熟，有太多的不容易，每一个不容易都可以是个故事，具体的也在将来一一再敍，这次单说最近的一些工作感受和工作概况。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>经过努力</span></span></span><span><span><span>，23 年底（12 月 15 日）</span></span></span><span><span><span>产品</span></span></span><span><span><span>上线</span></span></span><span><span><span>后</span></span></span><span><span><span>，我们深知自己在</span></span></span><span><span><span>市场竞争中与头部企业仍存在功能层面的差距</span></span></span><span><span><span>，不敢妄想有什么好的反馈和成果。但是首</span></span></span><span><span><span>月</span></span></span><span><span><span>便</span></span></span><span><span><span>迎来了</span></span></span><span><span><span>付费用户</span></span></span><span><span><span>（企业版）和近</span></span></span><span><span><span>百</span></span></span><span><span><span>个开源用户</span></span></span><span><span><span>，</span></span></span><span><span><span>这完全出乎我和同事的意料</span></span></span><span><span><span>。刚开始我们以为这些用户至少要在 3-5 个月内才能积累到。事实证明我们错了，我们保守了，但是方向貌似对了（还需要更多的付出和积累）。在与客户沟通过程中，很快就收集到</span></span></span><span><span><span>首批客户集中提出</span></span></span><span><span><span>的众多需求，主要体现在</span></span></span><span><span><span>移动端签署、API 集成、</span></span></span><span><span><span>国产化</span></span></span><span><span><span>及优化交互体验</span></span></span><span><span><span>四大方面。也有很多我们在设计过程中没有考虑到的，没有考虑到的方面对我们来说尤其珍贵，价值巨大。</span></span></span><span><span><span>所以</span></span></span><span><span><span>我们在年前</span></span></span><span><span><span>加快工作节奏，</span></span></span><span><span><span>年后规划新年一季度目标。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>首要任务是</span></span></span><span><span><span>移动端开发，并承诺于春节后第一周交付新功能。</span></span></span><span><span><span>这段时间的工作节奏是这样的：</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>1、</span></span></span><span><span><span>临近春节</span></span></span><span><span><span>（</span></span></span><span><span><span>农历 28 日</span></span></span><span><span><span>）</span></span></span><span><span><span>我们完成了功能开</span></span></span><span><span><span>发，勉强通过冒烟测试</span></span></span><span><span><span>。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>2、</span></span></span><span><span><span>年后进行系统和功能测试时，</span></span></span><span><span><span>出乎意料的事情接踵而至</span></span></span><span><span><span>，</span></span></span><span><span><span>出现了</span></span></span><span><span><span>移动端链接逻辑</span></span></span><span><span><span>跳转混乱</span></span></span><span><span><span>、文件签署内存异常、</span></span></span><span><span><span>签署</span></span></span><span><span><span>图片丢失、签署控件重复等</span></span></span><span><span><span>问题</span></span></span><span><span><span>。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>3、</span></span></span><span><span><span>测试同学「大壮」在群里</span></span></span><span><span><span>发飙了，</span></span></span><span><span><span>讲述上线风险和延期上线的请求</span></span></span><span><span><span>。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>4、不动声色的产品负责人老胡看到</span></span></span><span><span><span>请求</span></span></span><span><span><span>后</span></span></span><span><span><span>一直未回复（他的性格很刚强，表面不说，内心很要强）</span></span></span><span><span><span>。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>5、老胡</span></span></span><span><span><span>开始</span></span></span><span><span><span>着手</span></span></span><span><span><span>理清工作任务，</span></span></span><span><span><span>逐条分析 BUG，确定优先级。</span></span></span><span><span><span>···········（结果：原定计划</span></span></span><span><span><span>（2 月 25 日）</span></span></span><span><span><span>未完成上线）只好协调大家</span></span></span><span><span><span>周六日</span></span></span><span><span><span>继续</span></span></span><span><span><span>通宵奋战</span></span></span><span><span><span>。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>6、</span></span></span><span><span><span>直至</span></span></span><span><span><span>2 月 26 日</span></span></span><span><span><span>凌晨五点成功修复所有问题并上线新版本</span></span></span><span><span><span>。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>这个过程真是酸爽，自从决定做开放签以来，首先内心是非常欣慰的，工作状态也超好，整个团队也是热情澎湃的，甚至自然而然的解决了一些团队管理问题。</span></span></span><span><span><span>同样的产品不同的公司，都是为了服务客户</span></span></span><span><span><span>和理想在</span></span></span><span><span><span>奋斗</span></span></span><span><span><span>、在</span></span></span><span><span><span>熬夜，感谢</span></span></span><span><span><span>团</span></span></span><span><span><span>队成员的努力付出</span></span></span><span><span><span>！加油！（会想尽一切办法和努力给大家加鸡腿，让我们</span></span></span><span><span><span>的</span></span></span><span><span><span>产品更好</span></span></span><span><span><span>，</span></span></span><span><span><span>团队更顽强</span></span></span><span><span><span>，客户更放心</span></span></span><span><span><span>........）</span></span></span><span><span><span>。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>值得欣喜的是，按照约定我们成功完成版本更新</span></span></span><span><span><span>，</span></span></span><span><span><span>并与两家新客户签约。接下来，我们将采取敏捷迭代策略，小步快跑地满足需求</span></span></span><span><span><span>。</span></span></span><span><span><span>同时大胆创新签约场景模式，使更多企业在真实场景下实现高效合规</span></span></span><span><span><span>签署，让电子签更简单不是说说而已</span></span></span><span><span><span>。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:right"><span><span><span><span><span><span><span>2024 年 02 月 27 日</span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 07:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280492</guid>
            <link>https://www.oschina.net/news/280492</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Spring Boot 拒绝用 AI 为仓库自动生成注释]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">一名开发者近日在 Spring Boot 提交了一项 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-boot%2Fpull%2F39754%2F" target="_blank">PR</a>，旨在使用 AI 模型为整个 Spring Boot 代码库添加注释：</span></p><blockquote><p><span style="color:#000000">此代码变更为整个 Spring Boot 代码库添加了注释。本 PR 的内容完全由自定义微调 AI 模型创建。</span></p><p><span style="color:#000000">我们正在对我们的工具进行大规模实验，在数百万行代码上运行该工具，以识别任何 bug 或错误。在此代码库中运行时，该工具的编译成功率高达 99.9%。</span></p><p><span style="color:#000000">我们可以选择放弃这些代码，或者将其发布并作为一项贡献。我们选择了后者，并决定打开此 Pull Request。</span></p></blockquote><p><img height="280" src="https://oscimg.oschina.net/oscnet/up-c694ca89e5d80a24accaf670c4f099452bc.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">但 Spring Boot 项目负责人 Phil Webb 对此进行了婉拒。并表示，相较自动生成，团队成员更喜欢人工手动的方式；且自动生成这种无差别的方式，很可能给整个仓库增添许多不必要的麻烦。</span></p><p><span style="color:#000000">「我认为您的工具对于正在学习代码库或需要某些部分的额外帮助的人来说可能非常有用。」</span></p><p>Reddit 上的一些讨论也表达了对这一提议的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reddit.com%2Fr%2Fprogramming%2Fcomments%2F1b0n9kx%2Fai_added_comments_for_the_entire_code_base_of%2F" target="_blank">不看好</a>：</p><blockquote><p>「哇，这太可怕了。我真希望这只是个玩笑，提出要求的人只是在嘲笑这个想法。」</p><p>「如果这不是纯粹为了吸引眼球，那么我想公关背后的开发人员可以说是真的缺乏开发技能。」</p></blockquote><p>目前，相关 PR 已被关闭。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 06:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280473/ai-comments-spring-boot</guid>
            <link>https://www.oschina.net/news/280473/ai-comments-spring-boot</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源日报 | 鸿蒙程序员平均月薪超 1 万 8；中美 AI 差距有多大？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>欢迎阅读 OSCHINA 编辑部出品的开源日报，每天更新一期。</p><h3><span style="color:#e67e22"><strong># 2024.2.26</strong></span></h3><h2><strong><span style="color:#16a085">今日要点</span></strong></h2><p><strong>OpenSource Daily</strong></p><h3><a href="https://www.oschina.net/news/280197/warp-for-linux" target="_blank">基于 Rust 开发的终端应用 Warp 发布 Linux 版本</a></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Warp 是一个基于 Rust 开发的现代化终端应用，内置 AI 功能，支持 CPU 加速。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">此前 Warp 仅面向 Mac 平台提供，近日其开发团队终于<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.warp.dev%2Fblog%2Fwarp-for-linux" target="_blank">发布</a></u>了 Linux 版本，用户可在大多数主流 Linux 发行版上安装 Warp，包括 Ubuntu、Fedora、Arch Linux 或 Red Hat。</p><h3><a href="https://www.oschina.net/news/280083/wubuntu-windows-ubuntu" target="_blank">Wubuntu：披着 Windows 11 外衣的 Ubuntu</a></h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><strong>Wubuntu，又称 "Windows Ubuntu"</strong>，是基于 Ubuntu 开发的操作系统，其最具特色之处在于<strong>完全复刻了 Windows 的所有外观和功能</strong>，而且运行时不需要具备 TPM、安全启动或任何其他硬件要求。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span>此外，Wubuntu</span>&nbsp;通过集成 Wine 提供了与 Windows 应用的兼容性，开发者称 Wubuntu 支持运行 Windows 的 .exe 和 .msi&nbsp;程序，以及支持 Android 应用。</p><p><img src="https://oscimg.oschina.net/oscnet/up-b78011bce450db4cf20d1bb7cc559cd4cb6.png" referrerpolicy="no-referrer"></p><hr><h2><strong><span style="color:#16a085">今日观察</span></strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-a5cb30243de8b0b91be1d481043c473ad9e.png" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#333333">- </span><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tmtpost.com%2F6949344.html" target="_blank">钛媒体</a></em></u></p><hr><h2><span style="color:#16a085"><strong>今日推荐</strong></span></h2><p><img src="https://oscimg.oschina.net/oscnet/up-dd0b05ccdc75b8e461bccd191d8b02a887a.png" referrerpolicy="no-referrer"></p><hr><h2><span style="color:#16a085"><strong>开源之声</strong></span></h2><p><img height="376" src="https://oscimg.oschina.net/oscnet/up-61ab492b02eb694af46583aa700ca993ddd.png" width="1104" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-393f28205ac4c95982b1545e5541957f5f9.png" referrerpolicy="no-referrer"></p><hr><h2><span style="color:#16a085"><strong>每日项目榜</strong></span></h2><p><strong><span style="background-color:#e67e22">每日 Gitee 精选</span></strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-f0e8ff0ed6f05f1864bb5c951acca5d3893.png" referrerpolicy="no-referrer"></p><blockquote><h4><strong><span style="background-color:#e67e22">在线阅读完整日报内容，访问：</span></strong><br><u><em><strong><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/6typ9w3u98f5mxn/16_1_8_2efTeNfFjN.pdf">开源日报第 016 期：鸿蒙程序员平均月薪超 1 万 8；中美 AI 差距有多大？</a></strong></em></u></h4></blockquote><hr><p><strong>往期回顾</strong></p><ul><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/92n4c9ryegpcq1z/015_sora_KcAkRNX93Y.pdf">开源日报第 015 期：为什么挡不住英伟达；Sora 不靠蛮力</a></li><li><a href="https://report.oschina.net/api/files/jhim80u9qm1ofsw/s7n800w84o6guyv/014_kyezhNxOGD.pdf">开源日报第 014 期：目前的人工智能技术连猫的智能水平都没达到</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC013%E6%9C%9F%EF%BC%9A%E7%AD%89%E5%88%B0%20Sora%20%E5%BC%80%E6%BA%90%E4%BA%86%E7%AB%8B%E5%88%BB%E6%8E%A8%E5%87%BA%E5%B1%9E%E4%BA%8E%E6%88%91%E4%BB%AC%E8%87%AA%E5%B7%B1%E7%9A%84%E5%A4%A7%E6%A8%A1%E5%9E%8B.pdf">开源日报第 013 期：等到 Sora 开源了立刻推出属于我们自己的大模型</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC012%E6%9C%9F%EF%BC%9ASora%20%E7%BB%99%E4%B8%AD%E5%9B%BD%20AI%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E7%9C%9F%E5%AE%9E%E5%8F%98%E5%8C%96%EF%BC%9BDart%203.3%20%E5%8F%91%E5%B8%83.pdf">开源日报第 012 期：Sora 给中国 AI 带来的真实变化；Dart 3.3 发布</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC11%E6%9C%9F%EF%BC%9A%E7%9B%AE%E5%89%8D%E8%BF%98%E6%B2%A1%E6%9C%89%E2%80%9C%E5%A4%A7%E6%A8%A1%E5%9E%8B%E7%89%88Linux%E2%80%9D.pdf">开源日报第 011 期：目前还没有「大模型版 Linux」</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5%E7%AC%AC010%E6%9C%9F%EF%BC%9ATauri%20v2%20%E6%94%AF%E6%8C%81%20Android%20%E5%92%8C%20iOS%EF%BC%8C%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%BC%80%E5%8F%91%E6%96%B0%E9%80%89%E6%8B%A9.pdf">开源日报第 010 期：Tauri v2 支持 Android 和 iOS，跨平台开发新选择</a></li><li><a href="https://oscimg.oschina.net/public_shard/%E5%BC%80%E6%BA%90%E6%97%A5%E6%8A%A5009%E6%9C%9F%EF%BC%9AVue.js%E8%AF%9E%E7%94%9F10%E5%91%A8%E5%B9%B4%EF%BC%9B%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC%E8%A7%A3%E9%87%8AMeta%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%80%E6%BA%90%E5%85%B6AI%E6%8A%80%E6%9C%AF.pdf">开源日报第 009 期：Vue.js 诞生 10 周年；扎克伯格解释 Meta 为什么要开源其 AI 技术</a></li><li><a href="https://www.oschina.net/news/277585">开源日报第 008 期：推动中国开源软硬件发展的经验与建议</a></li><li><a href="https://www.oschina.net/news/277415">开源日报第 007 期：「Linux 中国」 开源社区宣布停止运营</a></li><li><a href="https://www.oschina.net/news/277214">开源日报第 006 期：选择技术栈一定要选择开源的</a></li><li><a href="http://www.oschina.net/news/277040">开源日报第 005 期：RISC-V 万兆开源交换机发售；npm 存在大量武林外传视频</a></li><li><a href="https://www.oschina.net/news/276864">开源日报第 004 期：百度输入法在候选词区域植入广告；大神用 Excel 构建 CPU</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 04:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280457</guid>
            <link>https://www.oschina.net/news/280457</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OSI 发布报告，研究 BSL 这样的「延迟开源发布」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff">Open Source Initiative（OSI）近期发布了一个报告《Delayed Open Source Publication:&nbsp;</span>A Survey of Historical and Current Practices<span style="background-color:#ffffff; color:#060607">》（</span>延迟开源发布：历史与当前实践调研<span style="background-color:#ffffff; color:#060607">），作者是 Seth Schoen、James Vasile 和 Karl Fogel。</span></p><p>&nbsp;</p><p style="color:#060607; margin-left:0; margin-right:0; text-align:start">Delayed Open Source Publication，简称 DOSP，延迟开源发布的意思，这份报告研究了它的历史和现状。报告核心要点：</p><p style="margin-left:0; margin-right:0"><strong>延迟开源发布（DOSP）定义</strong>：DOSP 是指软件最初在专有许可下发布，然后计划性地在某个时间点将源代码以开源许可的形式公开。</p><p style="margin-left:0; margin-right:0"><strong>历史背景</strong>：DOSP 的做法可以追溯到 GNU 项目，并且一直延续至今。公司尝试各种商业模式，以在有限时间内保持独家权利，然后过渡到 OSI（开放源代码倡议）批准的许可。</p><p style="margin-left:0; margin-right:0"><strong>策略类型</strong>：DOSP 分为三种类型：无条件计划性重新许可、事件驱动的重新许可和有条件的重新许可。</p><p style="margin-left:0; margin-right:0"><strong>商业源许可（BUSL）</strong>：BUSL 是一种新兴的 DOSP 许可方式，它要求在特定的「变更日期」后，软件的许可将变为开源许可。这种做法在数据库系统中尤为常见。（以往也叫 BSL）</p><p style="margin-left:0; margin-right:0">以下是当前知名的 16 个使用 BUSL 的项目，都是延迟几年后转型成开源协议：</p><p style="margin-left:0; margin-right:0"><img height="1588" src="https://static.oschina.net/uploads/space/2024/0227/115012_ybIG_3820517.png" width="1434" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><strong>反竞争条款</strong>：一些 DOSP 许可中包含反竞争条款，旨在防止许可证持有者使用软件提供与许可方直接竞争的服务。</p><p style="margin-left:0; margin-right:0"><strong>后果和影响</strong>：从开源许可转变为 DOSP 许可的项目可能会受到批评，有时会导致用户转向其他项目或维护竞争性的分支。</p><p style="margin-left:0; margin-right:0"><strong>未来研究问题</strong>：报告提出了一些未来研究的问题，包括 AGPL 与 DOSP 许可的比较、DOSP 对外部贡献的影响、BUSL 额外使用授权的分类、以及在初始开源发布后重新许可的策略。</p><p style="margin-left:0; margin-right:0"><strong>结论</strong>：DOSP 自开源运动早期以来一直在使用，公司通常利用它来保持商业优势，同时尽可能保留开源的优势。报告强调，DOSP 的实验性和多样性比预期的要多，且这种趋势可能会继续。</p><p>详情可以查看<a href="https://apiv1.oschina.net/api/files/jhim80u9qm1ofsw/27nfbrttho0ynu9/delayed_open_source_publication_2FzjpHTElG.pdf?token=">报告原文</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 03:57:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280456/osi-delayed-open-source-publication-report</guid>
            <link>https://www.oschina.net/news/280456/osi-delayed-open-source-publication-report</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[终于，我们拿下了硅谷的那个 Linear]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img src="https://oscimg.oschina.net/oscnet/up-0963fd788787982101b5435a54ca146c2ab.png" alt="file" referrerpolicy="no-referrer"></p><p>就像设计领域的 Figma，文档领域的 Notion，Linear 同样在软件开发管理领域推出了革命性的工具。而且以其名字 Linear Style 命名的设计风格，也成为了一股软件设计潮流。</p><p><img src="https://oscimg.oschina.net/oscnet/up-19feb8c039e4eb58e00760e5e8abaeba7f9.png" alt="file" referrerpolicy="no-referrer"></p><p>Linear 于 2019 年在美国 🇺🇸 旧金山创立。目前服务的对象涵盖了从新兴初创到知名上市公司的广泛范围，其中包括 Vercel、Arc、Runway，Supercell 和 OpenSea 等知名企业。其产品因能显著提升团队生产力和协作效率而成为近几年硅谷新兴公司的首选。</p><p><img src="https://oscimg.oschina.net/oscnet/up-29fa5d140ca7408dad14b59ffc2cef3023a.png" alt="file" referrerpolicy="no-referrer"></p><p><strong>Linear 使用 Bytebase 管理其数据库的全开发生命周期。收口员工查询数据库操作，通过 Bytebase API 将数据库变更集成进现有 CI/CD 工作流。</strong></p><p>Linear 的员工统一在 SQL 编辑器查询数据，通过权限管控、数据脱敏及行为审计，限制查询范围、监控行为并满足合规需求。</p><p>通过 Bytebase API 将数据库变更的审核部署集成进现有的代码提交部署工作流中，触发在 Bytebase 中建立工单，自动进行 SQL 预审核以减少人力降低错误可能性；根据变更的风险等级，通过自定义审批流确保相应的审批管理；并且，通过变更记录的查询功能，便于锁定特定的变更，以利于后续的审计。此外，单点登录 (SSO)，双因子身份验证 (2FA) 等功能进一步为账户管理带来了便利性和安全性保障。</p><p>未来 Linear 还将利用 Bytebase 的批量变更能力管理部署在不同地域的同构数据库。</p><p><img src="https://oscimg.oschina.net/oscnet/up-07cce1911ea9af359d0b945ffb3b6a4eca4.png" alt="file" referrerpolicy="no-referrer"></p><p>对开发者工具极其挑剔的 Linear 最终选择了 Bytebase。正如我们在 <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkzMjI2MDY5OQ%3D%3D%26mid%3D2247483664%26idx%3D1%26sn%3Dbd6be60909c156c2d54687ad90ba4825%26chksm%3Dc25f3f24f528b63261d5d86fb9ddcad8f36826bdaa16fdb43da555d5457313c5036aa1665b78%26scene%3D21%23wechat_redirect" target="_blank">2021 年发布 Bytebase</a> 时设想的那样，<strong>Bytebase 会站上世界最高的舞台，成为现代软件研发工具链上的核心一环</strong>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-551f266a1ef72674d8516e4795c1c18b9b4.png" alt="file" referrerpolicy="no-referrer"></p><hr><p>💡 更多资讯，请关注 Bytebase 公号：Bytebase</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 03:52:03 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/11044874</guid>
            <link>https://my.oschina.net/u/6148470/blog/11044874</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ubuntu 工程师使用 Rust 为 Linux 开发内核调度程序]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Ubuntu 内核团队工程师 Andrea Righi 使用&nbsp;Rust 编写了一个 Linux 内核调度程序，并利用 eBPF 在运行时动态加载。Ubuntu 还没有承诺将其作为发行版的一部分，Righi 也在博客表示这是一个实验性内核项目，用于探索 Rust 在 Ubuntu 的应用，并谈到了未来<strong>利用 Rust 和 eBPF 进行「微内核设计」</strong>的可能性。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c0d741c436f514bc20978b2df98eb1e23a1.png" referrerpolicy="no-referrer"></p><p>Righi 在博客介绍称，用 Rust 开发的内核调度程序 sched-ext 不仅为开发者提供了便利，还能让用户也受益，比如可以根据用户的工作负载和其他特殊情况加载优化的调度程序。</p><p>博客文章最后写道：</p><blockquote><p>「我们正朝着一种微内核设计迈进，它有可能为 Linux 认证铺平道路：在上述情况下，如果用户空间调度程序崩溃，任务将无缝过渡到默认的内核调度程序，确保系统的持续可用性，而不会出现任何停机时间。</p><p>这表明，类似的方法也可用于其他子系统，从而使 Linux 内核能够提供完全冗余和崩溃安全的系统。」</p></blockquote><p>相关链接</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsched-ext%2Fscx%2Fpull%2F161" target="_blank">https://github.com/sched-ext/scx/pull/161</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fubuntu.com%2F%2Fblog%2Fcrafting-new-linux-schedulers-with-sched-ext-rust-and-ubuntu" target="_blank">https://ubuntu.com//blog/crafting-new-linux-schedulers-with-sched-ext-rust-and-ubuntu</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 03:25:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280450/ubuntu-rust-scheduler-micro</guid>
            <link>https://www.oschina.net/news/280450/ubuntu-rust-scheduler-micro</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linkerd 2.15 推出，调整了发布方式]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Linkerd 2.15 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flinkerd.io%2F2024%2F02%2F21%2Fannouncing-linkerd-2.15%2F" target="_blank">发布</a>，该版本增加了对 Kubernetes 以外工作负载的支持。新的「网格扩展（mesh expansion）」功能首次允许 Linkerd 用户将运行在虚拟机、物理机和其他非 Kubernetes 位置上的应用程序引入到网格中，为 Kubernetes 和非 Kubernetes 工作负载提供统一的安全、可靠和可观测的连接。</p><p>2.15 版本还引入了对 SPIFFE 的支持，SPIFFE 是一种工作负载身份标准，它使 Linkerd 能够为集群外的工作负载提供加密身份验证。此外，还新增了原生的 Sidecar 容器支持，这是 Kubernetes 的一个新特性，它简化了 Sidecar 模型在 Kubernetes 中的使用，特别是对于作业工作负载而言。</p><p>以及对 Linkerd 的发布方式进行了一些重要调整。公告指出，「尽管 Linkerd 将始终是开源的，但从 2.15 版开始，我们将不再发布开源的稳定版本工件」。如果你目前正在生产环境中使用 Linkerd，可查看"<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flinkerd.io%2F2024%2F02%2F21%2Fannouncing-linkerd-2.15%2F%23a-new-model-for-stable-releases" target="_blank">A new model for stable releases</a>"部分进行了解。</p><p>与往常一样，2.15 版本还包含了大量的错误修复和改进。</p><h4><strong>网格扩展</strong></h4><p>Linkerd 2.15 引入了网格扩展功能：可以在 Kubernetes 之外的任何地方部署 Linkerd 的超轻量级 Rust 微代理，并将它们连接到运行在 Kubernetes 集群上的 Linkerd 控制平面。这使得 Linkerd 能够处理非 Kubernetes 工作负载，将所有 TCP 通信与这些工作负载之间的通信升级为安全、可靠和可观测的连接。非 Kubernetes 应用程序可以获得 Linkerd 的全部功能，包括互相 TLS、重试、超时、断路器、基于延迟的负载均衡、动态的每个请求路由、零信任授权策略等等。</p><p>网格扩展是实现 Linkerd 成为云原生组织的通用网络层目标的重要组成部分。官方认为，这一举措在很大程度上得益于 Linkerd 的核心设计，即用 Rust 编写的超轻量级微代理。Rust 语言具备"防止内存相关错误、管理并发、生成小型、高效的二进制文件"的能力，使得 Linkerd 不仅避免了 C 和 C++等语言普遍存在的内存漏洞，而且提供了最小的资源占用和最重要的是对用户的最小操作负担。</p><p>「Linkerd 的 Rust 微代理是其以简单为先的方法的关键所在，我们能够提供小型、静态的二进制文件，可以编译为各种架构和平台，这是解锁 Linkerd 新的网格扩展功能的关键所在。」</p><h4><strong>SPIFFE 支持</strong></h4><p>网格扩展的一个主要挑战是如何为非 Kubernetes 工作负载生成工作负载标识。为了解决这个问题，项目团队引入了对 SPIFFE 的支持。通过 Linkerd 2.15，用户现在可以默认加密所有与虚拟机工作负载的通信，并在特定客户端的每个 HTTP 路由和 gRPC 方法级别上添加零信任控制。</p><h4><strong>原生 sidecar 支持</strong></h4><p>Linkerd 2.15 添加了对原生 sidecar 容器的支持，这是 Kubernetes 1.28 引入的一个新的 Kubernetes 特性，并在 Kubernetes 1.29 中默认启用。使用原生 sidecar 容器部署 Linkerd 解决了在 Kubernetes 中使用 sidecar 容器时长期存在的一些烦恼，特别是在支持 Job 和容器启动过程中的 race conditions 问题。</p><p><strong>稳定版本的新模式</strong></p><p>从 Linkerd 2.15 开始对交付方式进行了一些重大更改。虽然 Linkerd 始终是开源的，但从 Linkerd 2.15 开始，稳定的 Linkerd 发布将由供应商社区负责。</p><p>这不仅包括 Linkerd 2.15.0，还包括即将推出的 Linkerd 2.15.1 这样的 point releases、即将推出的 2.16.0 这样的重大版本，以及即将推出的 Linkerd 2.14.11 这样的 backports 版本，所有这些都将由供应商社区处理。</p><blockquote><p>「我们将一如既往地在 GitHub 代码库中发布 edge releases，其中包含最新的 Linkerd 代码，包括错误修复、新功能等。这些版本一直是社区进行早期测试和审查的重要机制，我们希望在新框架下能看到更多这样的版本。当然，Linkerd 的开发工作仍将照常进行，包括功能开发、我们的安全漏洞响应政策，以及其他所有让 Linkerd 变得更出色的活动。</p><p>需要明确的是：Linkerd 始终是开源的。这一改变只涉及 release artifacts，而不是关于代码、管理、社区或其他任何方面。早在创建 Linkerd 之前，我们就已经是开源用户、贡献者和倡导者，我们对健康、包容、协作和不断发展的开源 Linkerd 的承诺一如既往。」</p></blockquote><h4><strong>下一步</strong></h4><p>项目团队计划在接下来的版本中：扩展对网格扩展的支持，以包括私有网络；使 Gateway API 和非 Gateway API 接口达到一致；支持 IPv6；致力于处理入口流量和增加对出口流量的控制；探索以其他方式提供 Linkerd，包括「ambient」和其他方法等等。</p><p>更多详情可查看官方<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flinkerd.io%2F2024%2F02%2F21%2Fannouncing-linkerd-2.15%2F" target="_blank">公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 03:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280444/linkerd-2-15-released</guid>
            <link>https://www.oschina.net/news/280444/linkerd-2-15-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GIMP 2.99.18 发布 —— 3.0 之前的最后一个开发者预览版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>开源图像编辑器 GIMP 发布了 3.0 之前的最后一个开发者预览版本<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gimp.org%2Fnews%2F2024%2F02%2F21%2Fgimp-2-99-18-released%2F" target="_blank"> GIMP 2.99.18</a></u>。该版本旨在预览开发进展，让社区能更早发现问题和报告问题。它是一个不稳定版本，不适合用于生产环境。</p><p>GIMP 3.0 使用 GTK3 进行重构，并且支持 Wayland，同时还有许多其他的改进和功能增强。对于这个版本，广大用户已经期待了十年。GIMP 团队计划在 2024 年 5 月<a href="https://www.oschina.net/news/268067/gimp-3-0-may-2024-schedule">发布</a>备受瞩目的 GIMP 3.0。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d08a7bf4228037e192418e690efa9306020.png" referrerpolicy="no-referrer"></p><p>GIMP 2.99.18 包含了大量更新，其中包括</p><ul><li>正确校正颜色的 Space Invasion 项目</li><li>改进色彩算法</li><li>非破坏性编辑的基本实现</li><li>改进字体处理</li><li>自动扩展层</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.gimp.org%2Fnews%2F2024%2F02%2F21%2Fgimp-2-99-18-released%2F" target="_blank">详情查看发布公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 02:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280439/gimp-2-99-18-released</guid>
            <link>https://www.oschina.net/news/280439/gimp-2-99-18-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Rebebuca —— 桌面端 ffmpeg 管理器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><ul style="list-style-type:square; margin-left:0; margin-right:0"><li><p>Rebebuca（发音：瑞贝不卡） 是一个使用 Rust 开发的桌面端 ffmpeg 管理器，在不卡系列中处于推流端的生态位（Monibuca 为服务端，Jessibuca 为播放端）。</p></li><li><p>Rebebuca 在不久的将来会支持管理 Monibuca&nbsp;进程。</p></li><li><p><strong style="color:black"><span style="color:#010101">Rebebuca&nbsp;</span>可以在 30 秒内完成创建、运行、管理你的 ffmpeg 命令</strong></p><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div class="ckeditor-html5-video" style="text-align:center"><video controls="controls" src="https://rebebuca.com/quick.mp4">&nbsp;</video></div></div><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0">&nbsp;</div><div style="margin-left:0; margin-right:0">&nbsp;</div></div></div></div></div></div></div></div></div></div></li><li><p>帮助我们更好的管理繁多复杂的 ffmpeg 参数和 ffmpeg 命令运行状态</p></li></ul><h2 style="margin-left:30px; margin-right:30px; text-align:center"><span>功能特性</span></h2><ul style="list-style-type:square; margin-left:0; margin-right:0"><li><p>ffmpeg 命令全周期管理</p><ul style="list-style-type:circle; margin-left:0; margin-right:0"><li style="list-style-type:circle"><p>支持 ffmpeg 命令运行、停止、重启等操作</p></li><li style="list-style-type:circle"><p>支持 ffmpeg 命令参数可视化配置、导入终端命令</p></li><li style="list-style-type:circle"><p>支持，按项目维度管理各种 ffmpeg 命令</p></li><li style="list-style-type:circle"><p>支持，数据导出</p></li></ul></li><li><p>列表+详情交互模式</p></li><li><p>支持 ffmpeg 源切换、中英语言、深色浅色主题切换、窗口关闭方式选择</p><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0">&nbsp;</div><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0"><div style="margin-left:0; margin-right:0; text-align:center"><div class="ckeditor-html5-video" style="text-align:center"><video controls="controls" src="https://rebebuca.com/quick.mp4">&nbsp;</video></div></div><div style="margin-left:0; margin-right:0">&nbsp;</div></div></div></div></div></div></div></div></div></div></li><li><p>支持软件自动更新</p></li><li><p>支持 mac 和 window 平台</p></li><li><p>简单好用、能力丰富、长期维护</p></li></ul><h2 style="margin-left:30px; margin-right:30px; text-align:center"><span>下载安装</span></h2><ul style="list-style-type:square; margin-left:0; margin-right:0"><li><p>Windows：https://download.m7s.live/rb/Rebebuca_0.1.0_x64_en-US.msi</p></li><li><p>Mac：https://download.m7s.live/rb/Rebebuca_0.1.0_x64.dmg</p></li><li><p>Mac(arm64) ：https://download.m7s.live/rb/Rebebuca_0.1.0_aarch64.dmg</p></li></ul><h2 style="margin-left:30px; margin-right:30px; text-align:center"><span>官方地址</span></h2><ul style="list-style-type:square; margin-left:0; margin-right:0"><li><p>官方网站：https://rebebuca.com</p></li><li><p>github：https://github.com/rebebuca/rebebuca</p></li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 02:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/rebebuca</guid>
            <link>https://www.oschina.net/p/rebebuca</link>
        </item>
        <item>
            <title>
                <![CDATA[华为发布首个 5.5G 智能核心网：计划 2024 年商用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在 MWC24 巴塞罗那期间，华为云核心网产品线总裁高治国发布 5.5G 智能核心网解决方案。</p><p>据悉，2023 年新通话已在中国 31 省部署，可支撑 5000 万用户，同时在欧洲、拉美、中东、亚太等多个区域得到了广泛验证，计划 2024 年商用。高治国表示：「华为发布的业界首个新通话-A 通过智能能力和 DC（Data Channel）交互能力升级，正式迈入多模态通信时代。」</p><p><img height="333" src="https://oscimg.oschina.net/oscnet/up-b019072789c268abb1883dc58f6487ea5eb.png" width="500" referrerpolicy="no-referrer"></p><p>5.5G 也就是 5G-A，全称为 5G-Advanced，是 5G 的技术演进，具备更大带宽、更广连接、确定性时延等能力。作为 5G-A 的重要技术之一，三载波聚合（3CC）是 5G-A 的基础体验网，5G-A 三载波聚合可以通过三载波组网方案，结合确定性体验保障等技术，进一步提升网络质量与体验。</p><p>华为倡导的 5.5G 时代，是包含 5.5G、F5.5G、Net5.5G 等全面演进升级的端到端解决方案，会带来 10 倍的网络性能提升，可实现下行万兆、上行千兆的峰值能力。同时在时延、定位、可靠性方面也有了 10 倍的提升，还能实现毫秒级时延和低成本千亿物联。</p><p>在 2023 MWC 上海展会上， 华为董事、ICT 产品与解决方案总裁杨超斌曾宣布，华为 2024 年将会推出面向商用的 5.5G 全套网络设备。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 27 Feb 2024 02:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/280433</guid>
            <link>https://www.oschina.net/news/280433</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[糟糕，被 SimpleDateFormat 坑到啦！| 京东云技术团队]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h3_1"></span><h3><span><span><span>1. 问题背景</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>问题的背景是这样的，在最近需求开发中遇到需要将给定</span></span></span><span><span><strong><span>目标数据</span></strong></span></span><span><span><span>通过某一固定的</span></span></span><span><span><strong><span>计量规则</span></strong></span></span><span><span><span>进行过滤并打标生成</span></span></span><span><span><strong><span>明细数据</span></strong></span></span><span><span><span>，其中发现存在一笔</span></span></span><span><span><strong><span>目标数据</span></strong></span></span><span><span><span>的时间在</span></span></span><span><span><strong><span>不符合</span></strong></span></span><span><span><span>现有</span></span></span><span><span><strong><span>日期规则</span></strong></span></span><span><span><span>的条件下，还是通过了规则引擎的匹配打标操作。故而需要对该</span></span></span><span><span><strong><span>错误匹配场景</span></strong></span></span><span><span><span>进行排查，</span></span></span><span><span><strong><span>定位</span></strong></span></span><span><span><span>其</span></span></span><span><span><strong><span>根本原因</span></strong></span></span><span><span><span>所在。</span></span></span></p><span id="OSC_h3_2"></span><h3><span><span><span>2. 排查思路</span></span></span></h3><span id="OSC_h4_3"></span><h4><span><span><span>2.1 数据定位</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>在开始排查问题之初，先假定现有的</span></span></span><span><span><strong><span>Aviator 规则引擎</span></strong></span></span><span><span><span>能够对现有的数据进行正常的匹配打标，查询在存在问题数据（图中红框所示）同一时刻进行规则匹配时的数据都有哪些。发现存在五笔数据在同一时刻进行规则匹配落库。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-02-01-17-01Xmnw6twL44j44ufD6.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p>&nbsp;</p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>继续查询具体的</span></span></span><span><span><strong><span>匹配规则表达式</span></strong></span></span><span><span><span>，发现针对</span></span></span><span><span><strong><span>loanPayTime</span></strong></span></span><span><span><span>时间区间在</span></span></span><span><span><strong><span>[2022-07-16 00:00:00, 2023-05-11 23:59:59]</span></strong></span></span><span><span><span>的范围内进行匹配，</span></span></span><span><span><strong><span>目标数据</span></strong></span></span><span><span><span>的时间为</span></span></span><span><span><strong><span>2023-09-19 11:27:29</span></strong></span></span><span><span><span>，理论上应该不会被匹配到。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-01-23-20-34VqCxKbos8IpYoic.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>但是观测匹配打标的明细数据发现确实打标</span></span></span><span><span><strong><span>成功</span></strong></span></span><span><span><span>了（如红框所示）。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-02-01-17-02wRWsgztvSkjaVTx.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>所以</span></span></span><span><span><strong><span>重新</span></strong></span></span><span><span><span>回到最初的和目标数据同时落库的</span></span></span><span><span><strong><span>五笔数据</span></strong></span></span><span><span><span>发现，这五笔数据的</span></span></span><span><span><strong><span>loanPayTime</span></strong></span></span><span><span><span>时间确实在规则</span></span></span><span><span><strong><span>[2022-07-16 00:00:00, 2023-05-11 23:59:59]</span></strong></span></span><span><span><span>之内，所以在想</span></span></span><span><span><strong><span>有没有可能</span></strong></span></span><span><span><span>是在目标数据匹配规则引擎</span></span></span><span><span><strong><span>前</span></strong></span></span><span><span><span>，其它的五笔数据中的其中一笔对该数据进行了</span></span></span><span><span><strong><span>修改</span></strong></span></span><span><span><span>导致</span></span></span><span><span><strong><span>误匹配</span></strong></span></span><span><span><span>到了这个规则。顺着这个思路，首先需要确认下 Aviator 规则引擎</span></span></span><span><span><strong><span>在并发场景下是否线程安全</span></strong></span></span><span><span><span>的。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-02-01-17-04oLk40Ts40iXT140sSf.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_4"></span><h4><span><span><span>2.2 规则引擎</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>由于在需求中使用到用于给数据匹配打标的是</span></span></span><span><span><strong><span>Aviator 规则引擎</span></strong></span></span><span><span><span>，所以第一直觉是怀疑 Aviator 规则引擎在并发的场景中可能会存在</span></span></span><span><span><strong><span>线程不安全</span></strong></span></span><span><span><span>的情况。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-01-23-20-36NNJAleyXLMv67L7.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>首先简单介绍下 Aviator 规则引擎是什么，Aviator 是一个</span></span></span><span><span><strong><span>高性能</span></strong></span></span><span><span><span>的、</span></span></span><span><span><strong><span>轻量级</span></strong></span></span><span><span><span>的 java 语言实现的表达式求值引擎，主要用于各种表达式的动态求值，相较于其它的开源可用的规则引擎而言，Aviator 的设计目标是</span></span></span><span><span><code><span>轻量级</span></code></span></span><span><span><span>和</span></span></span><span><span><code><span>高性能</span></code></span></span><span><span><span> ，相比于 Groovy、JRuby 的笨重，Aviator 非常小，加上依赖包也才</span></span></span><span><span><strong><span>450</span></strong></span></span><span><span><span>K,不算依赖包的话只有</span></span></span><span><span><strong><span>70</span></strong></span></span><span><span><span>K；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>当然，Aviator 的语法是受限的，它不是一门完整的语言，而只是语言的一小部分集合。其次，Aviator 的实现思路与其他轻量级的求值器很不相同，其他求值器一般都是通过解释的方式运行，而 Aviator 则是直接将表达式</span></span></span><span><span><code><span>编译成 Java 字节码</span></code></span></span><span><span><span>，交给 JVM 去执行。简单来说，Aviator 的定位是介于 Groovy 这样的重量级脚本语言和 IKExpression 这样的轻量级表达式引擎之间。（具体 Aviator 的相关介绍不是本文的重点，具体可</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.aliyun.com%2Farticle%2F608829" target="_blank" rel="nofollow"><span><span><span>参见</span></span></span></a><span><span><span>）</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>通过查阅相关资料发现，Aviator 中的 AviatorEvaluator.execute() 方法本身是线程安全的，也就是说只要表达式执行逻辑和传入的 env 是线程安全的，理论上是不会出现并发场景下线程不安全问题的。（</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkillme2008%2Faviatorscript%2Fissues%2F91" target="_blank" rel="nofollow"><span><span><span>详见</span></span></span></a><span><span><span>）</span></span></span></p><span id="OSC_h4_5"></span><h4><span><span><span>2.3 匹配规则引擎的 env</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-01-23-20-38QGCcHoTw0KIgKpf.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>通过前面 Aviator 的相关资料发现</span></span></span><span><span><strong><span>传入的 env</span></strong></span></span><span><span><span>如果在多线程场景下不安全也会导致最终的结果是错误的，故而定位使用的 env 发现使用的是</span></span></span><span><span><strong><span>HashMap</span></strong></span></span><span><span><span>，该集合类确实是线程不安全的（具体可</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.51cto.com%2Fknifeedge%2F5011416" target="_blank" rel="nofollow"><span><span><span>详见</span></span></span></a><span><span><span>），但是线程不安全的前提是多个线程同时对其进行修改，定位代码发现在每次调用方式时都会</span></span></span><span><span><strong><span>重新生成</span></strong></span></span><span><span><span>一个 HashMap，故而应该</span></span></span><span><span><strong><span>不会</span></strong></span></span><span><span><span>是由于这个线程不安全类导致的。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-01-23-20-40XifGzYMnY6zLzQq.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>继续定位发现，</span></span></span><span><span><strong><span>loanPayTime</span></strong></span></span><span><span><span>这个字段在进行 Aviator 规则引擎匹配前使用</span></span></span><span><span><strong><span>SimpleDateFormat</span></strong></span></span><span><span><span>进行了格式化，所以</span></span></span><span><span><strong><span>有可能</span></strong></span></span><span><span><span>是由于该类的</span></span></span><span><span><strong><span>线程不安全</span></strong></span></span><span><span><span>导致的</span></span></span><span><span><strong><span>数据错乱</span></strong></span></span><span><span><span>问题，但是这个类应该只是对日期进行格式化处理，难不成还能影响最终的数据。带着这个疑问查询资料发现，emm 确实是线程不安全的。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-01-23-20-40XFWp8NlBcdsIElo.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>好家伙，</span></span></span><span><span><strong><span>嫌疑对象</span></strong></span></span><span><span><span>目前已经有了，现在就是寻找相关证据来</span></span></span><span><span><strong><span>佐证</span></strong></span></span><span><span><span>了。</span></span></span></p><span id="OSC_h3_6"></span><h3><span><span><span>3. SimpleDateFormat 还能线程不安全？</span></span></span></h3><span id="OSC_h4_7"></span><h4><span><span><span>3.1 先写个 demo 试试</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>话不多说，直接去测试一下在</span></span></span><span><span><strong><span>并发场景</span></strong></span></span><span><span><span>下，SimpleDateFormat 类会不会对需要格式化的日期进行</span></span></span><span><span><strong><span>错乱</span></strong></span></span><span><span><span>格式化。先模拟一个场景，对多线程并发场景下格式化日期，即在</span></span></span><span><span><strong><span>[0,9]</span></strong></span></span><span><span><span>的数据范围内，在</span></span></span><span><span><strong><span>偶数</span></strong></span></span><span><span><span>情况下对 2024 年 1 月 23 日进行格式化，在</span></span></span><span><span><strong><span>奇数</span></strong></span></span><span><span><span>情况下对 2024 年 1 月 22 日进行格式化，然后观测日志打印效果。</span></span></span></p><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.text.</span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.time.</span></span><span><span style="color:#dd4a68">Duration</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.time.</span></span><span><span style="color:#dd4a68">LocalDateTime</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.util.</span></span><span><span style="color:#dd4a68">Date</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.util.concurrent.</span></span><span><span style="color:#dd4a68">ExecutorService</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.util.concurrent.</span></span><span><span style="color:#dd4a68">Executors</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.util.concurrent.</span></span><span><span style="color:#dd4a68">TimeUnit</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">ThreadSafeDateFormatDemo</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span> dateFormat </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">"yyyy-MM-dd HH:mm:ss"</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#0077aa">void</span></span><span><span></span></span><span><span style="color:#dd4a68">main</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">String</span></span><span><span style="color:#999999">[</span></span><span><span style="color:#999999">]</span></span><span><span> args</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">ExecutorService</span></span><span><span> executor </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">Executors</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">newFixedThreadPool</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">10</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#dd4a68">LocalDateTime</span></span><span><span> startDateTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">LocalDateTime</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">now</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#dd4a68">Date</span></span><span><span> date </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">Date</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">for</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">int</span></span><span><span> i </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#990055">0</span></span><span><span style="color:#999999">;</span></span><span><span> i </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span></span></span><span><span style="color:#990055">1000</span></span><span><span style="color:#999999">;</span></span><span><span> i</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">++</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">int</span></span><span><span> finalI </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> i</span></span><span><span style="color:#999999">;</span></span><span><span>
            executor</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">submit</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">-&gt;</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">try</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>finalI </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">%</span></span><span><span></span></span><span><span style="color:#990055">2</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">==</span></span><span><span></span></span><span><span style="color:#990055">0</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">String</span></span><span><span> formattedDate </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> dateFormat</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">format</span></span><span><span style="color:#999999">(</span></span><span><span>date</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">//第一种</span></span><span><span></span></span><span><span style="color:#708090">//                        String formattedDate = DateUtil.formatDate(date);</span></span><span><span></span></span><span><span style="color:#708090">//第二种</span></span><span><span></span></span><span><span style="color:#708090">//                        String formattedDate = DateSyncUtil.formatDate(date);</span></span><span><span></span></span><span><span style="color:#708090">//第三种</span></span><span><span></span></span><span><span style="color:#708090">//                        String formattedDate = ThreadLocalDateUtil.formatDate(date);</span></span><span><span></span></span><span><span style="color:#dd4a68">System</span></span><span><span style="color:#999999">.</span></span><span><span>out</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">println</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">"线程 "</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span></span></span><span><span style="color:#dd4a68">Thread</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">currentThread</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">getName</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span></span></span><span><span style="color:#669900">" 时间为: "</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> formattedDate </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span></span></span><span><span style="color:#669900">" 偶数 i:"</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> finalI</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">else</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">Date</span></span><span><span> now </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">Date</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span>
                        now</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">setTime</span></span><span><span style="color:#999999">(</span></span><span><span>now</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">getTime</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">-</span></span><span><span></span></span><span><span style="color:#dd4a68">TimeUnit</span></span><span><span style="color:#999999">.</span></span><span><span>MILLISECONDS</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">convert</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">1</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#dd4a68">TimeUnit</span></span><span><span style="color:#999999">.</span></span><span><span>DAYS</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#dd4a68">String</span></span><span><span> formattedDate </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> dateFormat</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">format</span></span><span><span style="color:#999999">(</span></span><span><span>now</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">//第一种</span></span><span><span></span></span><span><span style="color:#708090">//                        String formattedDate = DateUtil.formatDate(now);</span></span><span><span></span></span><span><span style="color:#708090">//第二种</span></span><span><span></span></span><span><span style="color:#708090">//                        String formattedDate = DateSyncUtil.formatDate(now);</span></span><span><span></span></span><span><span style="color:#708090">//第三种</span></span><span><span></span></span><span><span style="color:#708090">//                        String formattedDate = ThreadLocalDateUtil.formatDate(now);</span></span><span><span></span></span><span><span style="color:#dd4a68">System</span></span><span><span style="color:#999999">.</span></span><span><span>out</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">println</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">"线程 "</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span></span></span><span><span style="color:#dd4a68">Thread</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">currentThread</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">getName</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span></span></span><span><span style="color:#669900">" 时间为: "</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> formattedDate </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span></span></span><span><span style="color:#669900">" 奇数 i:"</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> finalI</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">catch</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">Exception</span></span><span><span> e</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">System</span></span><span><span style="color:#999999">.</span></span><span><span>err</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">println</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">"线程 "</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span></span></span><span><span style="color:#dd4a68">Thread</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">currentThread</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">getName</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span></span></span><span><span style="color:#669900">" 出现了异常: "</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> e</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">getMessage</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span>

        executor</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">shutdown</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">try</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
            executor</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">awaitTermination</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#990055">30</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#dd4a68">TimeUnit</span></span><span><span style="color:#999999">.</span></span><span><span>SECONDS</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">catch</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">InterruptedException</span></span><span><span> e</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
            e</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">printStackTrace</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// 计算总耗时</span></span><span><span></span></span><span><span style="color:#dd4a68">LocalDateTime</span></span><span><span> endDateTime </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">LocalDateTime</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">now</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#dd4a68">Duration</span></span><span><span> duration </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">Duration</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">between</span></span><span><span style="color:#999999">(</span></span><span><span>startDateTime</span></span><span><span style="color:#999999">,</span></span><span><span> endDateTime</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#dd4a68">System</span></span><span><span style="color:#999999">.</span></span><span><span>out</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">println</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">"所有任务执行完毕，总耗时: "</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span> duration</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">toMillis</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+</span></span><span><span></span></span><span><span style="color:#669900">" 毫秒"</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>具体 demo 代码如上所示，执行结果如下，</span></span></span><span><span><strong><span>理论上来说</span></strong></span></span><span><span><span>应该是</span></span></span><span><span><strong><span>2024 年 1 月 23 日</span></strong></span></span><span><span><span>和</span></span></span><span><span><strong><span>2024 年 1 月 22 日</span></strong></span></span><span><span><span>打印日志的次数各</span></span></span><span><span><strong><span>5</span></strong></span></span><span><span><span>次。实际结果发现在</span></span></span><span><span><strong><span>偶数的场景下</span></strong></span></span><span><span><span>仍然会出现打印格式化</span></span></span><span><span><strong><span>2024 年 1 月 22 日</span></strong></span></span><span><span><span>的场景。</span></span></span><span><span><strong><span>明显</span></strong></span></span><span><span><span>出现了数据错乱赋值的问题，所以到这里大概可以</span></span></span><span><span><strong><span>基本确定</span></strong></span></span><span><span><span>就是 SimpleDateFormat 类</span></span></span><span><span><strong><span>在并发场景下线程不安全导致的</span></strong></span></span><span><span><span>。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-01-23-20-45kR19RdH8Q7I17dZ1.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_8"></span><h4><span><span><span>3.2 SimpleDateFormat 为什么线程不安全？</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>查询相关资料发现，从 SimpleDateFormat 类提供的接口来看，实在让人看不出它与线程安全有什么关系，进入 SimpleDateFormat 源码发现类上面确实存在注释提醒：意思就是， SimpleDateFormat 中的日期格式不是同步的。推荐（建议）为每个线程创建独立的格式实例。如果多个线程同时访问一个格式，则它必须保持外部同步。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-01-23-20-458aUeKXZwkvHOeut.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>继续分析源码发现，SimpleDateFormat 线程不安全的真正原因是继承了</span></span></span><span><span><strong><span>DateFormat,</span></strong></span></span><span><span><span>在</span></span></span><span><span><strong><span>DateFormat</span></strong></span></span><span><span><span>中定义了一个</span></span></span><span><span><strong><span>protected</span></strong></span></span><span><span><span>属性的 </span></span></span><span><span><strong><span>Calendar</span></strong></span></span><span><span><span>类的对象：calendar。由于 Calendar 类的概念复杂，牵扯到</span></span></span><span><span><strong><span>时区与本地化</span></strong></span></span><span><span><span>等等，jdk 的实现中使用了成员变量来传递参数，这就造成在多线程的时候会出现错误。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-01-23-20-467HfyoDMo1leYIUL.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>注意到在 format 方法中有一段如下代码：</span></span></span></p><pre><code><span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#dd4a68">StringBuffer</span></span><span><span></span></span><span><span style="color:#dd4a68">format</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">Date</span></span><span><span> date</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#dd4a68">StringBuffer</span></span><span><span> toAppendTo</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#dd4a68">FieldPosition</span></span><span><span> pos</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
        pos</span></span><span><span style="color:#999999">.</span></span><span><span>beginIndex </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> pos</span></span><span><span style="color:#999999">.</span></span><span><span>endIndex </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#990055">0</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">format</span></span><span><span style="color:#999999">(</span></span><span><span>date</span></span><span><span style="color:#999999">,</span></span><span><span> toAppendTo</span></span><span><span style="color:#999999">,</span></span><span><span> pos</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">getFieldDelegate</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">// Called from Format after creating a FieldDelegate</span></span><span><span></span></span><span><span style="color:#0077aa">private</span></span><span><span></span></span><span><span style="color:#dd4a68">StringBuffer</span></span><span><span></span></span><span><span style="color:#dd4a68">format</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">Date</span></span><span><span> date</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#dd4a68">StringBuffer</span></span><span><span> toAppendTo</span></span><span><span style="color:#999999">,</span></span><span><span></span></span><span><span style="color:#dd4a68">FieldDelegate</span></span><span><span> delegate</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#708090">// Convert input date to time field list</span></span><span><span>
        calendar</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">setTime</span></span><span><span style="color:#999999">(</span></span><span><span>date</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">boolean</span></span><span><span> useDateFormatSymbols </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#dd4a68">useDateFormatSymbols</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">for</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">int</span></span><span><span> i </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#990055">0</span></span><span><span style="color:#999999">;</span></span><span><span> i </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;</span></span><span><span> compiledPattern</span></span><span><span style="color:#999999">.</span></span><span><span>length</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">int</span></span><span><span> tag </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> compiledPattern</span></span><span><span style="color:#999999">[</span></span><span><span>i</span></span><span><span style="color:#999999">]</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&gt;&gt;&gt;</span></span><span><span></span></span><span><span style="color:#990055">8</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">int</span></span><span><span> count </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> compiledPattern</span></span><span><span style="color:#999999">[</span></span><span><span>i</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">++</span></span><span><span style="color:#999999">]</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&amp;</span></span><span><span></span></span><span><span style="color:#990055">0xff</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>count </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">==</span></span><span><span></span></span><span><span style="color:#990055">255</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
                count </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> compiledPattern</span></span><span><span style="color:#999999">[</span></span><span><span>i</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">++</span></span><span><span style="color:#999999">]</span></span><span><span></span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">&lt;&lt;</span></span><span><span></span></span><span><span style="color:#990055">16</span></span><span><span style="color:#999999">;</span></span><span><span>
                count </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">|=</span></span><span><span> compiledPattern</span></span><span><span style="color:#999999">[</span></span><span><span>i</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">++</span></span><span><span style="color:#999999">]</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">switch</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>tag</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">case</span></span><span><span> TAG_QUOTE_ASCII_CHAR</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span>
                toAppendTo</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">append</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#0077aa">char</span></span><span><span style="color:#999999">)</span></span><span><span>count</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">break</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">case</span></span><span><span> TAG_QUOTE_CHARS</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span>
                toAppendTo</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">append</span></span><span><span style="color:#999999">(</span></span><span><span>compiledPattern</span></span><span><span style="color:#999999">,</span></span><span><span> i</span></span><span><span style="color:#999999">,</span></span><span><span> count</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span>
                i </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">+=</span></span><span><span> count</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">break</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">default</span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">:</span></span><span><span></span></span><span><span style="color:#dd4a68">subFormat</span></span><span><span style="color:#999999">(</span></span><span><span>tag</span></span><span><span style="color:#999999">,</span></span><span><span> count</span></span><span><span style="color:#999999">,</span></span><span><span> delegate</span></span><span><span style="color:#999999">,</span></span><span><span> toAppendTo</span></span><span><span style="color:#999999">,</span></span><span><span> useDateFormatSymbols</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">break</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> toAppendTo</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><strong><span>calendar.setTime(date)</span></strong></span></span><span><span><span>这条语句改变了 calendar，稍后，calendar 还会用到（在 subFormat 方法里），而这就是引发问题的根源。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>想象一下，在一个多线程环境下，有两个线程持有了同一个 SimpleDateFormat 的实例，分别调用 format 方法： 线程 1 调用 format 方法，改变了 calendar 这个字段。 中断来了。 线程 2 开始执行，它也改变了 calendar。 又中断了。 线程 1 回来了，此时，calendar 已然不是它所设的值，而是走上了线程 2 设计的道路。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>如果多个线程同时争抢 calendar 对象，则会出现各种问题，</span></span></span><span><span><strong><span>时间不对</span></strong></span></span><span><span><span>，</span></span></span><span><span><strong><span>线程挂死</span></strong></span></span><span><span><span>等等。 分析一下 format 的实现，我们不难发现，用到成员变量 calendar，唯一的好处，就是在调用 subFormat 时，少了一个参数，却带来了这许多的问题。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>其实，只要在这里用一个局部变量，一路传递下去，所有问题都将迎刃而解。 这个问题背后隐藏着一个更为重要的问题–</span></span></span><span><span><strong><span>无状态</span></strong></span></span><span><span><span>：无状态方法的好处之一，就是它在各种环境下，都可以安全的调用。衡量一个方法是否是有状态的，就看它是否改动了其它的东西，比如全局变量，比如实例的字段。format 方法在运行过程中改动了 SimpleDateFormat 的 calendar 字段，所以，它是有状态的。</span></span></span></p><span id="OSC_h3_9"></span><h3><span><span><span>4. 如何解决？</span></span></span></h3><span id="OSC_h4_10"></span><h4><span><span><span>4.1 每次在需要时新创建实例</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>在需要进行格式化日期的地方新建一个实例，不管什么时候，将有线程安全问题的对象由共享变为局部私有都能避免多线程问题，不过也加重了创建对象的负担。在一般情况下，这样其实对性能影响比不是很明显的。代码示例如下。</span></span></span></p><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.text.</span></span><span><span style="color:#dd4a68">ParseException</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.text.</span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.util.</span></span><span><span style="color:#dd4a68">Date</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">/**
 * @author 
 * @date 2024/1/23 20:04
 */</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">DateUtil</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">String</span></span><span><span></span></span><span><span style="color:#dd4a68">formatDate</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">Date</span></span><span><span> date</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">throws</span></span><span><span></span></span><span><span style="color:#dd4a68">ParseException</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span> sdf </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">"yyyy-MM-dd HH:mm:ss"</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> sdf</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">format</span></span><span><span style="color:#999999">(</span></span><span><span>date</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">Date</span></span><span><span></span></span><span><span style="color:#dd4a68">parse</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">String</span></span><span><span> strDate</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">throws</span></span><span><span></span></span><span><span style="color:#dd4a68">ParseException</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span> sdf </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">"yyyy-MM-dd HH:mm:ss"</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> sdf</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">parse</span></span><span><span style="color:#999999">(</span></span><span><span>strDate</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span>​</span></span></span></code></pre><span id="OSC_h4_11"></span><h4><span><span><span>4.2 同步 SimpleDateFormat 对象</span></span></span></h4><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.text.</span></span><span><span style="color:#dd4a68">ParseException</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.text.</span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.util.</span></span><span><span style="color:#dd4a68">Date</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">/**
 * @author 
 * @date 2024/1/23 20:04
 */</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">DateSyncUtil</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">private</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span> sdf </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">"yyyy-MM-dd HH:mm:ss"</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">String</span></span><span><span></span></span><span><span style="color:#dd4a68">formatDate</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">Date</span></span><span><span> date</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">throws</span></span><span><span></span></span><span><span style="color:#dd4a68">ParseException</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">synchronized</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>sdf</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> sdf</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">format</span></span><span><span style="color:#999999">(</span></span><span><span>date</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">Date</span></span><span><span></span></span><span><span style="color:#dd4a68">parse</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">String</span></span><span><span> strDate</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">throws</span></span><span><span></span></span><span><span style="color:#dd4a68">ParseException</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">synchronized</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>sdf</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> sdf</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">parse</span></span><span><span style="color:#999999">(</span></span><span><span>strDate</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span></span></code></pre><span id="OSC_h4_12"></span><h4><span><span><strong><span>说明：</span></strong></span></span><span><span><span>当线程较多时，当一个线程调用该方法时，其他想要调用此方法的线程就要 block，多线程并发量大的时候会对性能有一定的影响。</span></span></span></h4><span id="OSC_h4_13"></span><h4><span><span><span>4.3 ThreadLocal</span></span></span></h4><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.text.</span></span><span><span style="color:#dd4a68">DateFormat</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.text.</span></span><span><span style="color:#dd4a68">ParseException</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.text.</span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.util.</span></span><span><span style="color:#dd4a68">Date</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">ConcurrentDateUtil</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">private</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">ThreadLocal</span></span><span><span>&lt;DateFormat&gt;</span></span><span><span> threadLocal </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">ThreadLocal</span></span><span><span>&lt;DateFormat&gt;</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span>@Override</span></span><span><span></span></span><span><span style="color:#0077aa">protected</span></span><span><span></span></span><span><span style="color:#dd4a68">DateFormat</span></span><span><span></span></span><span><span style="color:#dd4a68">initialValue</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#669900">"yyyy-MM-dd HH:mm:ss"</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">Date</span></span><span><span></span></span><span><span style="color:#dd4a68">parse</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">String</span></span><span><span> dateStr</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">throws</span></span><span><span></span></span><span><span style="color:#dd4a68">ParseException</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> threadLocal</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">parse</span></span><span><span style="color:#999999">(</span></span><span><span>dateStr</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">String</span></span><span><span></span></span><span><span style="color:#dd4a68">format</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">Date</span></span><span><span> date</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> threadLocal</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">format</span></span><span><span style="color:#999999">(</span></span><span><span>date</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:left"><span><span><span>另一种写法</span></span></span></p><pre><code><span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.text.</span></span><span><span style="color:#dd4a68">DateFormat</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.text.</span></span><span><span style="color:#dd4a68">ParseException</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.text.</span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">import</span></span><span><span></span></span><span><span>java.util.</span></span><span><span style="color:#dd4a68">Date</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">/**
 * @author 
 * @date 2024/1/23 15:44
 * @description 线程安全的日期处理类
 */</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">class</span></span><span><span></span></span><span><span style="color:#dd4a68">ThreadLocalDateUtil</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#708090">/**
     * 日期格式
     */</span></span><span><span></span></span><span><span style="color:#0077aa">private</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#0077aa">final</span></span><span><span></span></span><span><span style="color:#dd4a68">String</span></span><span><span> date_format </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#669900">"yyyy-MM-dd HH:mm:ss"</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">/**
     * 线程安全处理
     */</span></span><span><span></span></span><span><span style="color:#0077aa">private</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">ThreadLocal</span></span><span><span>&lt;DateFormat&gt;</span></span><span><span> threadLocal </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">ThreadLocal</span></span><span><span>&lt;&gt;</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#708090">/**
     * 线程安全处理
     */</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">DateFormat</span></span><span><span></span></span><span><span style="color:#dd4a68">getDateFormat</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#dd4a68">DateFormat</span></span><span><span> df </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span> threadLocal</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">get</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#0077aa">if</span></span><span><span></span></span><span><span style="color:#999999">(</span></span><span><span>df </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">==</span></span><span><span></span></span><span><span style="color:#0077aa">null</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span>
            df </span></span><span><span style="background-color:rgba(255, 255, 255, 0.5)">=</span></span><span><span></span></span><span><span style="color:#0077aa">new</span></span><span><span></span></span><span><span style="color:#dd4a68">SimpleDateFormat</span></span><span><span style="color:#999999">(</span></span><span><span>date_format</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span>
            threadLocal</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">set</span></span><span><span style="color:#999999">(</span></span><span><span>df</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span> df</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">/**
     * 线程安全处理日期格式化
     */</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">String</span></span><span><span></span></span><span><span style="color:#dd4a68">formatDate</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">Date</span></span><span><span> date</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">getDateFormat</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">format</span></span><span><span style="color:#999999">(</span></span><span><span>date</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#708090">/**
     * 线程安全处理日期解析
     */</span></span><span><span></span></span><span><span style="color:#0077aa">public</span></span><span><span></span></span><span><span style="color:#0077aa">static</span></span><span><span></span></span><span><span style="color:#dd4a68">Date</span></span><span><span></span></span><span><span style="color:#dd4a68">parse</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#dd4a68">String</span></span><span><span> strDate</span></span><span><span style="color:#999999">)</span></span><span><span></span></span><span><span style="color:#0077aa">throws</span></span><span><span></span></span><span><span style="color:#dd4a68">ParseException</span></span><span><span></span></span><span><span style="color:#999999">{</span></span><span><span></span></span><span><span style="color:#0077aa">return</span></span><span><span></span></span><span><span style="color:#dd4a68">getDateFormat</span></span><span><span style="color:#999999">(</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">.</span></span><span><span style="color:#dd4a68">parse</span></span><span><span style="color:#999999">(</span></span><span><span>strDate</span></span><span><span style="color:#999999">)</span></span><span><span style="color:#999999">;</span></span><span><span></span></span><span><span style="color:#999999">}</span></span><span><span></span></span><span><span style="color:#999999">}</span></span></span></code></pre><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:left"><span><span><strong><span>说明：</span></strong></span></span><span><span><span>使用 ThreadLocal, 也是将共享变量变为独享，线程独享肯定能比方法独享在并发环境中能减少不少创建对象的开销。如果对性能要求比较高的情况下，一般推荐使用这种方法</span></span></span></p><span id="OSC_h4_14"></span><h4><span><span><span>4.4 抛弃 JDK，使用其他类库中的时间格式化类</span></span></span></h4><div><span>•</span><span><span><span><span>使用</span></span></span><span><span><strong><span>Apache commons</span></strong></span></span><span><span><span> 里的</span></span></span><span><span><strong><span>FastDateFormat</span></strong></span></span><span><span><span>，宣称是既快又线程安全的 SimpleDateFormat, 可惜它</span></span></span><span><span><strong><span>只能</span></strong></span></span><span><span><span>对日期进行 format, </span></span></span><span><span><strong><span>不能</span></strong></span></span><span><span><span>对日期串进行解析。</span></span></span></span></div><div><span>•</span><span><span><span><span>使用</span></span></span><span><span><strong><span>Joda-Time</span></strong></span></span><span><span><span>类库来处理时间相关问题。</span></span></span></span></div><span id="OSC_h3_15"></span><h3><span><span><span>5. 性能比较</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>通过追加时间监控，将原有数据范围扩充到</span></span></span><span><span><strong><span>[0,999]</span></strong></span></span><span><span><span>，线程池保留</span></span></span><span><span><strong><span>10</span></strong></span></span><span><span><span>个线程不变，观察三种情况下性能情况。</span></span></span></p><div><span>•</span><span><span><span><span>第一种：耗时 40ms</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-01-23-20-50ClKey6zU1zuFpod.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><div><span>•</span><span><span><span><span>第二种：耗时 33ms</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-01-23-20-50smFz50TPZ7DlxqV42.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><div><span>•</span><span><span><span><span>第三种：耗时 30ms</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2024-01-23-20-50fvjvOXvwRBDEKsW.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>通过性能压测发现</span></span></span><span><span><strong><span>4.3</span></strong></span></span><span><span><span>中的 ThreadLocal 性能最优，耗时 30ms，</span></span></span><span><span><strong><span>4.1</span></strong></span></span><span><span><span>每次新创建实例性能最差，需要耗时 40ms，当然了在极致的高并发场景下提升效果应该会更加明显。性能问题不是本文探讨的重点，在此不多做赘述。</span></span></span></p><span id="OSC_h3_16"></span><h3><span><span><span>6. 总结</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify"><span><span><span>以上就是针对本次问题排查的</span></span></span><span><span><strong><span>主要思路及流程</span></strong></span></span><span><span><span>，刚开始的排查思路也一直</span></span></span><span><span><strong><span>局限于</span></strong></span></span><span><span><span>规则引擎的线程不安全或者是传入的 env（由于使用的是 HashMap）线程不安全，还是受到</span></span></span><span><span><strong><span>组内大佬</span></strong></span></span><span><span><span>的启发和帮助才进一步去分析</span></span></span><span><span><strong><span>SimpleDateFormat</span></strong></span></span><span><span><span>类可能会存在线程不安全。本次问题排查确实提供一个</span></span></span><span><span><strong><span>经验</span></strong></span></span><span><span><span>，</span></span></span><span><span><strong><span>打破常规思路</span></strong></span></span><span><span><span>，比如</span></span></span><span><span><strong><span>SimpleDateFormat</span></strong></span></span><span><span><span>类看起来</span></span></span><span><span><strong><span>只是</span></strong></span></span><span><span><span>对日期进行格式化，</span></span></span><span><span><strong><span>很难</span></strong></span></span><span><span><span>和在并发场景下线程不安全会导致数据错乱</span></span></span><span><span><strong><span>关联起来</span></strong></span></span><span><span><span>。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">作者：京东科技，宋慧超</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">来源：京东云开发者社区，转载请注明来源</p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 18 Feb 2024 02:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/11043880</guid>
            <link>https://my.oschina.net/u/4090830/blog/11043880</link>
            <author>
                <![CDATA[京东云开发者]]>
            </author>
        </item>
    </channel>
</rss>
