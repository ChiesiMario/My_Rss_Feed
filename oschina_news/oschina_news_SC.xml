<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 05 Jan 2024 11:01:17 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[总结：停止自嗨、走进用户，努力提供有价值的服务]]>
            </title>
            <description>
                <![CDATA[<div class="content"><ol><li><span><span><span><span><strong><span><span><span><strong>运营总结：</strong></span></span></span></strong></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>1、每天在开源市场有 30 个左右的 start，github/gitee:start 总计 270，较上周增长 140，感谢研发同仁对开放签的认可；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>2、每天陆陆续续咨询的用户有 5 个左右，感觉客户越来越多了，还没有成交的客户，这得好好分析自己的不足；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>3、当有客户咨询我们时，我们首先秉持「能使用开源版就用开源版，实在有企业版本需求再使用企业版。」的原则引导客户，实际上开放签开源工具版实际用户已经突破</span></span><span><span>1</span></span><span><span>00；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>4、在产品能力、品牌等方面与市场上的老牌服务商（法大大、e 签宝、上上签、契约锁等等前辈们）还有很大差距，比如安装体验不好、功能不全、服务不完善等，我们要多向他们学习。 &nbsp;&nbsp;&nbsp;</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify">&nbsp;</p><ol><li><span><span><span><span><strong><span><span><span><strong>新年工作的第一周，就用自我吐槽的方式激励开放签变得更好吧。</strong></span></span></span></strong></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>槽点 1：用户体验做的确实不好，要自责、要学习、要进步、要接受批评；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>槽点 2：运营还很菜，叫好不叫座，要深度刨析问题出在哪里？不能只关注自己而脱离用户；要大胆的否定自己，还要及时的建立信心；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>槽点 3：内部管理有问题，1、工作目标不清晰，更新内容不能及时的内外同步；2、不能脱离用户，产品更新迭代要考虑、贴近用户。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span>&nbsp;</span></span></span></span></p><ol><li><span><span><span><span><strong><span><span><span><strong>开放签本周更新内容：</strong></span></span></span></strong></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>1、优化了开源市场的产品介绍，便于大家更加系统的了解开放签；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>2、企业版增加站内消息服务；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>3、优化了数字证书服务，支持 CA 事件证书；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>4、完成 ofd 文件数字签名的技术验证；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>5、优化了开放签开源工具版、企业版的若干个用户体验问题；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>6、修改了开放签开源工具版、企业版的若干个系统 bug。</span></span></span></span></span></span></p><ol><li><span><span><span><span><strong><span><span><span><strong>开放签下周工作内容：</strong></span></span></span></strong></span></span></span></span></li></ol><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>1、提供数字证书签发、数字签名的接口和 SDK 服务，解决电子签跨语言、跨平台的问题，让更多研发用户可以低门槛使用电子签章能力；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>2、集成 CA 长效证书，支持平台设置证书签发规则；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>3、优化企业印章样式：调整印章的样式及字体，圆章样式增加信息编码，支持椭圆章的生成；</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span>4、修改 PDF 编辑、签署工具，替换 itext-Pdf 工具版本。</span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><strong>写在最后：做工作的过程中要时刻铭记开放签「开源开放」的价值观。除了自己监督自己外，还要敢于接受更多的监督。不能脱离用户自嗨。要大胆的否定自己，还能及时的建立信心，相信自己可以做的更好。</strong></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><strong>2024，加油</strong></span></span></strong><strong><span><span><strong>！</strong></span></span></strong></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 10:25:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274371</guid>
            <link>https://www.oschina.net/news/274371</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[用 Spring Boot 3.2 虚拟线程搭建静态文件服务器有多快？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Spring Boot 3.2 于 2023 年 11 月大张旗鼓地发布，标志着 Java 开发领域的一个关键时刻。这一突破性的版本引入了一系列革命性的功能，包括：</p><ul><li>虚拟线程：利用 Project Loom 的虚拟线程释放可扩展性，从而减少资源消耗并增强并发性。</li><li>Native Image 支持：通过 Native Image 编译制作速度极快的应用程序，减少启动时间并优化资源利用率。</li><li>JVM 检查点：利用 CRaC 项目的 JVM 检查点机制实现应用程序的快速重启，无需冗长的重新初始化。</li><li>RestClient：采用新的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.didispace.com%2Farticle%2Foblog%2Fspring-6-1-restclient.html" target="_blank">RestClient</a> 接口的功能方法，简化 HTTP 交互并简化代码。</li><li>Spring for Apache Pulsar：利用 Apache Pulsar 的强大功能实现强大的消息传递功能，无缝集成到您的 Spring Boot 应用程序中。</li></ul><p>其中，虚拟线程是最近 Java 版本中引入的最具变革性的特性之一。正如官方文件所述：虚拟线程是轻量级线程，可减少编写、维护和调试高吞吐量并发应用程序的工作量。线程是可以调度的最小处理单元。它与其他此类单位同时运行，并且在很大程度上独立于其他此类单元运行。它是 java.lang.Thread 的一个实例。有两种线程：平台线程和虚拟线程。平台线程是作为操作系统 （OS） 线程的瘦包装器实现的。平台线程在其底层操作系统线程上运行 Java 代码，平台线程在平台线程的整个生命周期内捕获其操作系统线程。因此，可用平台线程数限制为操作系统线程数。与平台线程一样，虚拟线程也是 java.lang.Thread 的实例。但是，虚拟线程不绑定到特定的操作系统线程。虚拟线程仍在操作系统线程上运行代码。但是，当在虚拟线程中运行的代码调用阻塞 I/O 操作时，Java 运行时会挂起虚拟线程，直到它可以恢复为止。与挂起的虚拟线程关联的操作系统线程现在可以自由地对其他虚拟线程执行操作。虚拟线程适用于运行大部分时间被阻塞的任务，通常等待 I/O 操作完成。但是，它们不适用于长时间运行的 CPU 密集型操作。</p><p>虽然人们普遍认为虚拟线程在 I/O 密集型方案中表现出色，但它们在 CPU 密集型任务中的性能仍然是一个问号。本系列文章深入探讨了虚拟线程在各种用例中的潜在优势，从基本的「hello world」到静态文件服务（I/O 密集型）、QR 码生成（CPU 密集型）和多部分/表单数据处理（混合工作负载）等实际应用。</p><p>在本系列的开头文章中，我们已经了解了虚拟线程与物理线程相比在最简单（且不切实际）的 hello world 情况下的性能。物理线程和虚拟线程之间几乎没有任何性能或资源使用差异。在本文中，我们将更加「实用」，并针对静态文件服务器情况进行比较。这绝对是一个常见且「真实世界」的案例。让我们看看这次我们发现了什么。</p><p>如果大家正在做 Spring Boot 2.3 升级 Spring 3.2，这里顺手给大家推荐<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.didispace.com%2Fspring-boot-2%2F10-5.html" target="_blank">Spring Boot 2.x 到 3.2 的升级指南</a>。</p><h2>测试环境</h2><p>所有测试均在配备 16G RAM、8 个物理内核和 4 个效率内核的 MacBook Pro M2 上执行。测试工具是 Bombardier，它是更快的 HTTP 负载测试器之一（用 Go 编写）。</p><p>软件版本为：</p><ul><li>Java v21.0.1</li><li>Spring Boot 3.2.1</li></ul><h3>程序配置</h3><p>除了主 Java 类之外，不需要编写任何 Java 文件，静态文件服务器只能通过配置就能发挥作用。</p><p><code>application.properties</code>文件如下：</p><pre><code class="language-properties">server.port=3000
spring.mvc.static-path-pattern=/static/**
spring.web.resources.static-locations=file:/Users/mayankc/Work/source/perfComparisons/static/
</code></pre><p>使用虚拟线程时，我们将通过添加以下行来启用它们：</p><pre><code class="language-properties">spring.threads.virtual.enabled=true
</code></pre><p><code>pom.xml</code>内容：</p><pre><code class="language-xml">&lt;parent&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;
    &lt;version&gt;3.2.1&lt;/version&gt;
    &lt;relativePath/&gt;
 &lt;/parent&gt;
 &lt;groupId&gt;com.example&lt;/groupId&gt;
 &lt;artifactId&gt;demo&lt;/artifactId&gt;
 &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
 &lt;name&gt;demo&lt;/name&gt;
 &lt;description&gt;Demo project for Spring Boot&lt;/description&gt;
 &lt;properties&gt;
   &lt;java.version&gt;21&lt;/java.version&gt;
 &lt;/properties&gt;
 &lt;dependencies&gt;
   &lt;dependency&gt;
     &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
     &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;
   &lt;/dependency&gt;

  &lt;dependency&gt;
    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;
    &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;
    &lt;scope&gt;test&lt;/scope&gt;
  &lt;/dependency&gt;
 &lt;/dependencies&gt;
</code></pre><h3>测试数据</h3><p>大小完全相同但数据不同的 100K 文件被放置在静态资源目录中。每个文件大小正好是 102400 字节。</p><p>文件的命名范围为 1 到 100000。</p><p>使用 Bombardier 的修改版本，为每次运行生成随机请求 URL: <code>http://localhost:3000/static/&lt;file-name&gt;</code></p><h3>应用场景</h3><p>为了确保结果一致，每个测试在开始数据收集之前都会经历 5K 请求预热阶段。</p><p>然后，在不同范围的并发连接级别（50、100 和 300）中仔细记录测量结果，每个级别都承受 500 万个请求工作负载。</p><h3>结果评估</h3><p>除了简单地跟踪原始速度之外，我们还将采用详细的指标框架来捕获延迟分布（最小值、百分位数、最大值）和吞吐量（每秒请求数）。</p><p>CPU 和内存的资源使用情况监控将补充此分析，从而提供不同工作负载下系统性能的全面了解。</p><h2>测试结果</h2><p>结果以图表形式呈现如下：</p><p><img src="https://oscimg.oschina.net/oscnet/up-12882e69bbdea0bdc8e3f7b32c12c7b3dfd.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-db3292be4993ddb87e34c31e9a2694f1ef0.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-48311e2d40dbf3b3d9533225521068697ed.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-cdf07a45c601fdb5c24d3223f241fb17b25.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-72e62b62529f675eef0a6aea08cd9456979.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-bf8dc5db4d40991f2326eb0829c92aaeee1.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-d1c9bf51d014855a7e736f4d418fb45b325.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-4d001a71187efe35a945327bf7b8605d966.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-dc9cfb5e2916e4ff7437b96652009359662.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-606f2aaee8e192c177b604f6ea1b84cb330.png" alt="" referrerpolicy="no-referrer"></p><h2>总结</h2><p>对静态文件服务的分析表明，物理线程在性能和资源效率方面略胜一筹（与我们的预期相反）。</p><p>不过，这种受 I/O 限制的场景可能并不是充分发挥虚拟线程潜力的理想场所。涉及数据库交互的任务可能会显示出更多令人信服的优势。也许负载不足以让虚拟线程发挥出最大的作用。为了找出答案，我们将在接下来的文章中介绍 URL 短链（数据库驱动）、二维码生成（CPU 受限）和混合工作负载场景（如表单数据处理），旨在揭示虚拟线程真正出类拔萃的案例。</p><blockquote><p>欢迎关注我的公众号：程序猿 DD。第一时间了解前沿行业消息、分享深度技术干货、获取优质学习资源</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 08:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/didispace/blog/10584578</guid>
            <link>https://my.oschina.net/didispace/blog/10584578</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 8、Mojo🔥、Bun 1.0……最硬核极客的年度发版汇总]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>回顾一下 2023 年最重磅、最极客、最硬核的（开源）项目更新资讯，保证全网最全——如有遗漏，欢迎补充。</p><h4><strong><a href="https://www.oschina.net/news/225892/wine-ce-0-released">Wine-CE 首个正式版发布，可跨指令架构运行程序的 Wine</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/223655/lineageos-20">LineageOS 20 正式发布，开源 Android 系统分支</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/226000/flutter-3-7-0-released">Flutter 3.7 稳定版发布，开源跨平台应用开发工具包</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/227732/meilisearch-v1-enterprise-ready-stable">Meilisearch 1.0 稳定版发布，Rust 高性能开源搜索引擎</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/230284/pigsty-v2-released">Pigsty v2 正式发布：更好的 RDS PG 开源替代</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/228112/manticore-search-6-0-0-released">Manticore Search 6 正式发布，C++ 高性能搜索引擎</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/227257/nutui-4-0-released">京东轻量级移动端组件库 NutUI 4.0 正式发布！</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/226769/go-1-20-released">Go 1.20 正式发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/226770/elementary-os-7-released">历经风波，elementary OS 7 正式发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/228679/homebrew-4-0-0-released">Homebrew 4.0.0 发布，MacOS 上的包管理器</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/230414/ffmpeg-6-0-released">FFmpeg 6.0 发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/230089/conan-2-0-released">Conan 2.0 发布，开源 C/C++ 包管理器</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/232912/typescript-5-0-released">TypeScript 5.0 发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/233693/gnome-44-released">GNOME 44 正式发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/236827/rt-thread-5-0-0-released">RT-Thread 5.0.0 发布，嵌入式实时多线程操作系统</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/230671/godot-4-0-released">开源 3D 游戏引擎 Godot 正式发布 4.0</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/230702/ceresdb-1-0-ga">CeresDB 1.0 正式发布，Rust 高性能云原生时序数据库</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/232768/pytorch-2.0-released">PyTorch 2.0 正式发布，深度学习框架</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/234494/dragonflydb-1-0">开源内存数据库 DragonflyDB 1.0 正式 GA，可替代 Redis</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/235410/slint-1-0-released">Slint 1.0 正式发布，Rust 编写的原生 GUI 工具包</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/236712/ferretdb-1-0-released">FerretDB 1.0 正式 GA，MongoDB 开源替代品</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/238201/layui-2-8-0-released">Layui 2.8.0 正式发布，朴实归来</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/239367/foobar2000-2-0-0-released">foobar2000 正式发布 2.0</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/241121/delphi-11-n-cbuilder-11-ce-released">Delphi 11 和 C++Builder 11 社区版发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/239478/qwik-1-0-released">Qwik 1.0 发布，全栈式 Web 框架</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/240608/dart-3-released">Dart 3 正式发布，100% 健全的空安全</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/243957/blink-1-0-released">Blink 1.0 正式发布， 最小 x86 Linux 模拟器</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/246407/svelte-4-released">前端 UI 框架 Svelte 4 发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/247324/ecmascript-2023">ECMAScript 2023 正式发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/248275/openkylin-1-0-released">openKylin 1.0 重磅发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/251034/arc-browser-1-0-mac-released">Arc 浏览器正式发布 1.0，声称是 Chrome 的替代品</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/250365/cython-3-0-released">Cython 3.0 正式发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/226341/autohotkey-v2">AutoHotkey v2 正式发布，Windows 自动化工具</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/251878/capnproto-1-0-released">比 Protocol Buffers 快无限倍，开源十年后 Cap'n Proto 1.0 终发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/252028/nim-v2-0-released">Nim v2.0 正式发布，命令式编程语言</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/252385/harmonyos-4">华为正式发布 HarmonyOS 4</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/253633/apache-doris-2-0-0-released">Apache Doris 2.0.0 版本正式发布：盲测性能 10 倍提升，更统一多样的极速分析体验</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/256102/sudo-rs-0-2-0-first-stable">sudo-rs 发布首个稳定版 0.2.0：内存安全、用 Rust 重写的 sudo</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/257450/bun-v1-0">Bun 发布 1.0 正式版本，Zig 编写的 JavaScript 运行时</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/258730/jdk-21-lts-ga">Java 21 / JDK 21 (LTS) GA</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/257362/mojo-finally-here">Mojo🔥编程语言开放下载，声称比 Python 快 68000 倍</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/255156">Unity 引擎中国版「团结引擎」正式发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/261319/curl-8-4-0">curl 8.4.0 正式发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/263539/yarnpkg-4-0">Yarn 4.0 正式发布，现代化的软件包管理器</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/264749/vscode-floating-editor-windows">等了 7 年，vscode 史上呼声最高的「浮动窗口」 特性，终于实现了</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/266507/dotnet-8-ga">.NET 8 正式 GA</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/267734/php-8-3-ga">PHP 8.3 GA</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/267934/spring-boot-3-2-0-released">Spring Boot 3.2.0 正式发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/267801/fortran-2023">Fortran 2023 发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/267838/rocketrs-0-5-released">Rust Web 框架 Rocket 发布 v0.5</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/267021/vite5-released">Vite 5 正式发布，基于原生 ESM 的 Web 开发构建工具</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/264989/openharmony-4-0-released">OpenHarmony 4.0 正式发布</a></strong></h4><h4><strong><a href="https://www.oschina.net/news/258221/postgresql-16-released">PostgreSQL 16 发布</a></strong></h4><h4><strong><a href="https://my.oschina.net/u/5674736/blog/10320255">TiDB 7.5 LTS 发版，提升规模化场景下关键应用的稳定性和成本的灵活性</a></strong></h4><hr><p>其他年度盘点：</p><ul><li><strong><u><a href="https://www.oschina.net/news/273501">B 站崩了两次、腾讯「3.29」一级事故……盘点 2023 十大宕机事故「冥场面」</a></u></strong></li><li><strong><u><a href="https://www.oschina.net/news/273843">MySQL 5.7、魔趣、李跳跳……盘点 2023 「停更」的项目和网站</a></u></strong></li></ul><p><span style="background-color:#ffffff; color:#333333">更多年度重磅事件回顾，</span><strong><span style="background-color:#e67e22">查看</span><em><u><a href="https://talk.gitee.com/report/china-open-source-2023-annual-report.pdf?fr=version_news0105"><span style="background-color:#e67e22">《2023 中国开源开发者报告》</span></a></u></em></strong><span style="background-color:#ffffff; color:#333333">。</span></p><p><img height="4950" src="https://oscimg.oschina.net/oscnet/up-59f0466f1d7224fd87f2ba7b06e61d7646e.png" width="3497" referrerpolicy="no-referrer"></p><p><img height="4950" src="https://oscimg.oschina.net/oscnet/up-7fb2d8fe048cf5dd0947b22aec9a0463b92.png" width="3497" referrerpolicy="no-referrer"></p><p><img height="4950" src="https://oscimg.oschina.net/oscnet/up-c3141e286ce5764be869856becde308b405.png" width="3497" referrerpolicy="no-referrer"></p><p><img height="4950" src="https://oscimg.oschina.net/oscnet/up-90a8b7883ea0d0ca9682896df5ff890289a.png" width="3497" referrerpolicy="no-referrer"></p><p><img height="4950" src="https://oscimg.oschina.net/oscnet/up-dce6bebf85fd45c23a47cee46689e2de776.png" width="3497" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 07:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274330</guid>
            <link>https://www.oschina.net/news/274330</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 拟每年投入 100-500 万美元，以获取新闻使用许可]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>最近与 OpenAI 进行谈判的两名媒体公司高管表示，OpenAI 愿意每年投入 100 万至 500 万美元的费用，以与新闻出版公司达成协议，获得将新闻文章用于训练大语言模型的权利。</p><p>该公司目前正在与大约十几家媒体公司进行谈判。但 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theinformation.com%2Farticles%2Fopenai-offers-publishers-as-little-as-1-million-a-year" target="_blank">The Information</a> 认为，即使对于小型出版商来说，这一金额也有点不够看，可能会让 OpenAI 很难达成协议。</p><p>12 月，OpenAI 表示已与出版巨头 Axel Springer 建立合作关系，这是该公司首次与此类出版商建立合作关系。Axel Springer 是一家德国跨国大众媒体公司，旗下拥有 Business Insider 和 Politico 等品牌。交易的财务条款并未公开，但据这两位高管称，交易金额在数千万美元左右。</p><p><img height="213" src="https://oscimg.oschina.net/oscnet/up-16aa915803cda2a49d68dfc4645ca8d0487.png" width="700" referrerpolicy="no-referrer"></p><p>与此同时，一位高管透露，试图在生成式 AI 领域赶上 OpenAI 和谷歌的苹果公司，也在试图与出版商达成内容使用协议。苹果提供了更多的资金，但也希望获得比 OpenAI 更广泛地使用内容的权利；他们希望能够以公司认为必要的任何方式将内容用于未来的 AI 产品。</p><p>目前，苹果公司已经与 Condé Nast（旗下拥有《Vogue》和《纽约客》）以及 NBC News 和 IAC（旗下拥有《The Daily Beast》和《Better Homes and Gardens》）等出版商签订了价值约 5000 万美元的协议。</p><p>《纽约时报》、CNN、路透社和 The Verge 的母公司 Vox Media 最近都禁止 OpenAI 的 GPT 爬虫访问数据。《纽约时报》在 12 月还起诉了 OpenAI 和微软公司，称这两家公司非法使用其受版权保护的材料来训练 AI 模型。此外，还有一些知名作者也对这些公司发起了诉讼。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 06:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274326/openai-offers-publishers-little-1m</guid>
            <link>https://www.oschina.net/news/274326/openai-offers-publishers-little-1m</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[生成式 AI 搜索引擎 Perplexity 融资 7360 万美元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">生成式 AI 搜索引擎初创公司 Perplexity AI</span>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.perplexity.ai%2Fblog%2Fperplexity-raises-series-b-funding-round" target="_blank">表示</a><span style="color:#000000">，已成功筹集了 7360 万美元的 B 轮资金，估值达到 5.2 亿美元。迄今为止，该公司共筹集了 1 亿美元的资金。</span></p><p><span style="color:#000000">B 轮融资由 Institutional Venture Partners LLC 领投，此前 A 轮和种子轮的现有投资者也参与其中：包括 NEA、Twitter 前副总裁 Elad Gil 和 Databricks Ventures。其他参投的还有 AI 芯片制造商巨头 Nvidia Corp.、Bessemer Venture Partners、Facility Funds、Kindred Ventures、Shopify 首席执行官 Tobi Lutke 以及 Amazon.com Inc. 创始人 Jeff Bezos（通过 Bezos Expeditions Fund）等新投资者。</span></p><p><img height="281" src="https://oscimg.oschina.net/oscnet/up-cabc1d22fd6561f7feb4dfb9e357cfbde17.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Perplexity 搜索工具的操作方式与传统搜索引擎不同。它不需要人们输入提供结果列表的关键字，而是允许用户提出问题，搜索引擎以对话方式做出响应。通过这种方式，它可以提供类似于 Google Bard 和 Bing Chat 等 AI 聊天机器人的搜索体验。</span></p><p><span style="color:#000000">「借助 Perplexity 的搜索工具，用户可以立即获得任何问题的可靠答案，幷包含完整的来源和引文。」</span></p><p><span style="color:#000000">Perplexity 由多个 AI 大语言模型提供支持，包括公司内部开发的模型和第三方模型，如谷歌的 Gemini、Mistra 7BI、Anthropic 的 Claude 2.1 和 OpenAI 的 GPT-4。订购该公司每月 20 美元的专业计划的用户可以选择使用的模型，该计划提供 Perplexity Copilot 功能，可以解锁个人偏好、文件上传和图像生成等许多功能。</span></p><p><span style="color:#000000">公告称，自一年前公开推出 Perplexity 以来，这款对话式 AI 搜索引擎应用程序的月活跃用户数已增至 1000 万，到 2023 年已服务了超过 5 亿次查询；移动应用程序已在 iOS 和 Android 上安装超过一百万次。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 06:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274324/perplexity-ai-raises-74m</guid>
            <link>https://www.oschina.net/news/274324/perplexity-ai-raises-74m</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[金山 WPS 崩了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>据网友反馈，金山 WPS 突发服务崩溃问题，包含在线文档、稻壳儿等服务均不可用，「WPS 崩了」登上热搜。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1bd8d1f8c75f6330fa6c1b26e81004b21fa.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d38156eb59a29dcbd4e08926695edc076d5.png" referrerpolicy="no-referrer"></p><p>部分用户反映称「自己的文档都没保存服务器就崩了」，另有网友就此事咨询客服，客服回应称「目前正在逐步恢复相关服务，很抱歉给大家工作日带来不便」。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 06:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274322</guid>
            <link>https://www.oschina.net/news/274322</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[mybatis-mp - 亮点五：mapWithKey（把查询转成一个 map）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>有很多开发者不想使用 join 连表，通过 for 循环去加载数据；于是 mybatis-mp 作者给大家开发一个 mapWithKey 方法；mapWithKey</p><p>方法的作用是，开发自己指定一个 key，然后通过此方法，可以把查询转成一个 map；这样 for 循环时，可以很容易就把数据装载到 list 里 item 对象里</p><p>例如：</p><blockquote><p>1：List&lt;SysUser&gt; voList=sysUserMapper.list(where-&gt;where.like(SysUser::getName,'xx'););</p></blockquote><blockquote><p>2:&nbsp; &nbsp;List&lt;Integer&gt; roleIds=voList.map(sysUser-&gt;sysUser::getRoleId).toList();</p></blockquote><blockquote><p>3:&nbsp; &nbsp;Map&lt;Integer, SysRole&gt; rolesMap= sysRoleMapper.mapWithKey(SysRole::getId, roleIds);</p></blockquote><blockquote><p>4:&nbsp; &nbsp;voList.foreach(item-&gt;item.setSysRole(rolesMap.get(item.getRoleId()));</p></blockquote><p>这样就可以在用户信息里 ，装载角色的信息；是不是很方便 ？！</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 05:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274317</guid>
            <link>https://www.oschina.net/news/274317</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国产自主操作系统 RT-Thread 内核宣布支持 weston]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><p><span style="font-size: 18px;"><strong><span style="letter-spacing: 1px;">weston</span></strong></span><span style="font-size: 15px;letter-spacing: 1px;">是一套 Wayland 窗口显示协议的实现。而目前主流的 Linux 发行版桌面系统都在使用 Wayland 的方式做多窗口的显示合成，例如 Ubuntu，Federa 等。</span></p><p><strong><span style="font-size: 15px;letter-spacing: 1px;">Wayland</span></strong><span style="font-size: 15px;letter-spacing: 1px;">以高性能和直接渲染为核心特点，为图形处理提供了更为高效的方式。Wayland 的工作原理有些类似于：Wayland 中会分成客户端和服务端（服务端也叫 Compositor，合成器）。相较于老的 X11，客户端负责完成所有的渲染任务。接到输入信号后，客户端会自行计算需渲染的区域，并在内存中分配空间。绘制好的图像会被存入缓冲区，随后通知 Wayland 的合成器。合成器负责接收所有客户端的请求，对图像缓冲区进行高效合成，然后将结果发送给渲染器进行渲染。这种新方式相较于传统的 X11 方式，大幅降低了客户端与服务器之间的交互和数据传输，从而提升了渲染效率。</span></p><p><span><img class="rich_pages wxw-img" data-backh="379" data-backw="578" data-imgfileid="507713194" data-ratio="0.6565656565656566" data-type="png" data-w="990" height="397.047" width="604.733" style="height: auto !important;" src="https://oscimg.oschina.net/oscnet/de7711c2-e44c-411f-93bc-c9b4ba0ad1c1.png" referrerpolicy="no-referrer"></span></p><p><span style="font-size: 15px;letter-spacing: 1px;"><span style="font-weight: bold;">Weston</span>是 Wayland 的一个参考实现，可以看成它是一个简单的图形多窗口的桌面系统。但 Weston 本身的实现也并不简单，有基于 socket 方式通信的多客户端管理（通过 epoll 来监听），基本都是以 fd 方式进行管理，进行操作（衍生出来的包括 eventfd, timerfd，signalfd 等各种 fd 方式），也有底层的 DRM (Direct Rendering Manager) 对接。所以从系统的对接上，如果是一个非 Linux 系统还得大费一番周折。</span></p><p><span style="font-size: 15px;letter-spacing: 1px;">RT-Thread</span><span style="font-size: 15px;letter-spacing: 1px;">做为一个国内自主的实时操作系统，一直以自己规划方式向前发展，对设备端嵌入式设备的理解，对硬件芯片未来发展的判断，从 2020 年发布了 RT-Thread Smart 混合微内核操作系统，而在 2022 年的 RT-Thread v5.0 版本中也把 smart 分支完整合并到 RT-Thread 的开源主干，真正实现了一套内核代码在多端运行的方式（从小型的 MCU 微处理器，到面向 IoT 场景的智能硬件，以及高计算复杂领域的 MPU 微控制器领域）。</span><o:p></o:p></p><p><span style="font-size: 15px;letter-spacing: 1px;">现在基于 RT-Thread Smart 系统，也提供每天凌晨自动构建更新的 prebuilt 版本（可以在 QEMU 的 arm/aarch64，riscv64 仿真平台下直接运行），也加入了对 weston 多窗口桌面的支持：</span><o:p></o:p></p><p><img class="rich_pages wxw-img" data-backh="389" data-backw="578" data-imgfileid="507713195" data-ratio="0.6722222222222223" data-type="jpeg" data-w="1080" height="406.703" style="width: 100%;height: auto !important;" width="604.733" src="https://oscimg.oschina.net/oscnet/2d31008a-ddcf-4397-a30d-5186cb78b93c.jpg" referrerpolicy="no-referrer"></p><p style="margin: 3pt 0pt;font-family: 等线;font-size: 12pt;line-height: 16px;"><o:p></o:p></p><span id="OSC_h3_1"></span><h3 style="line-height: 1.989px;margin: 0pt;"><span data-font-family="default" style="font-size: 14pt;font-weight: bold;color: rgb(26, 26, 26);letter-spacing: 0pt;vertical-align: baseline;">如何获得并尝试 smart&nbsp;prebuilt 版本</span><o:p></o:p></h3><p><br></p><p><span style="font-size: 15px;letter-spacing: 1px;">鉴于 RT-Thread Smart 目前更新比较频繁，我们每日定时生成相应的 prebuilt 集合包（预构建集合包），整合相关功能，打造一份可在 QEMU 模拟环境下运行的集合包。以保证大家可以用到最新的 smart 内核。prebuilt 可以在这里下载：</span><o:p></o:p></p><p><span style="font-size: 15px;letter-spacing: 1px;">●&nbsp;</span><span style="font-size: 15px;letter-spacing: 1px;color: rgb(0, 128, 255);text-decoration: none;">aarch64 版本</span></p><p><span style="letter-spacing: 1px;color: rgb(0, 128, 255);text-decoration: none;font-size: 14px;">（相关链接：</span><span style="color: rgb(0, 128, 255);font-size: 14px;letter-spacing: 1px;">https://download-redirect.rt-thread.org/download/rt-smart/prebuilt/qemu-virt64-aarch64_latest.tar.gz）</span><span style="font-size: var(--articleFontsize);letter-spacing: 0.034em;"></span></p><p><span style="font-size: 15px;letter-spacing: 1px;">请注意，此处下载的 prebuilt 仅包含 Smart 内核与文件镜像，QEMU 模拟器本身需另行下载。RT-Thread 对 QEMU 的移植已涵盖 virtio 半虚拟化驱动，但需较高版本 QEMU，推荐 QEMU 7.1.0。针对 Windows/Linux 用户，我们已经准备好了下载链接：</span><o:p></o:p></p><p><span style="font-size: 15px;letter-spacing: 1px;">● Windows：</span><span style="font-size: 15px;letter-spacing: 1px;text-decoration: underline;color: rgb(0, 128, 255);">https://qemu.eu/w64/2023/</span><o:p></o:p></p><p><span style="font-size: 15px;letter-spacing: 1px;">●&nbsp;Linux:&nbsp;请使用源代码编译</span><o:p></o:p></p><p><span style="font-size: 15px;letter-spacing: 1px;">除&nbsp;Weston&nbsp;外，prebuilt 还支持更多用户态应用程序，如</span><o:p></o:p></p><p><span style="font-size: 15px;letter-spacing: 1px;">● BusyBox， Linux 工具的瑞士军刀（默认系统启动后进入 busybox 的 ash 命令行）；</span><o:p></o:p></p><p><span style="font-size: 15px;letter-spacing: 1px;">● MicroPython，一套轻量级 Python 实现；</span><o:p></o:p></p><p><span style="font-size: 15px;letter-spacing: 1px;">● Lua ，一种小巧的脚本语言；</span><o:p></o:p></p><p><span style="font-size: 15px;letter-spacing: 1px;">● OpenCV，一个开源的计算机视觉和机器学习库。</span><o:p></o:p></p><p><span style="font-size: 15px;letter-spacing: 1px;">更多特性等待您的探索。</span><o:p></o:p></p><p><span style="font-size: 15px;letter-spacing: 1px;">为进一步优化用户体验，我们将不断丰富预构建合集的功能。在此，我们诚挚地邀请各位开发者参与，共同推动 RT-Thread 操作系统的发展。让我们携手共创美好未来！</span></p><p style="margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);line-height: 1.5em;text-align: center;"><span style="outline: 0px;font-size: 14px;"><strong style="outline: 0px;font-size: 20px;letter-spacing: 0.544px;"><strong style="outline: 0px;color: rgb(34, 34, 34);font-size: 16px;letter-spacing: 0.544px;word-spacing: 6px;caret-color: rgba(0, 0, 0, 0);">———————End——————<strong style="outline: 0px;letter-spacing: 0.544px;"><strong style="outline: 0px;letter-spacing: 0.544px;"><strong style="outline: 0px;letter-spacing: 0.544px;">—</strong></strong></strong></strong></strong></span></p><p style="outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-wrap: wrap;background-color: rgb(255, 255, 255);letter-spacing: 0.578px;text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-backh="177" data-backw="542" data-imgfileid="507713197" data-ratio="0.327319587628866" data-s="300,640" data-type="jpeg" data-w="776" style="outline: 0px;width: 100%;visibility: visible !important;height: auto !important;" src="https://oscimg.oschina.net/oscnet/3bd9b16a-0de5-4b98-bcc5-d198a1e02cf2.jpg" referrerpolicy="no-referrer"></p><p style="outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;text-wrap: wrap;background-color: rgb(255, 255, 255);letter-spacing: 0.578px;text-align: center;"><img class="rich_pages __bg_gif wxw-img" data-backh="398" data-backw="542" data-imgfileid="507713198" data-ratio="0.7341772151898734" data-type="gif" data-w="790" style="outline: 0px;color: rgb(62, 62, 62);font-family: -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;letter-spacing: 0.621714px;width: 100%;visibility: visible !important;height: auto !important;" src="https://oscimg.oschina.net/oscnet/bc213a42-8fe7-4b88-98c4-a7998152814a.gif" referrerpolicy="no-referrer"></p><p style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);"><span style="outline: 0px;font-size: 14px;letter-spacing: 0.034em;">👇&nbsp;</span><span style="outline: 0px;letter-spacing: 0.034em;font-size: 16px;"><strong style="outline: 0px;">点击阅读原文进入官网</strong></span></p><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - RTThread 物联网操作系统（RTThread）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 03:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4428324/blog/10583894</guid>
            <link>https://my.oschina.net/u/4428324/blog/10583894</link>
            <author>
                <![CDATA[RT-Thread]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 计划下周上线 GPTs 应用商店 (GPT Store)]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>据报道，一份提供给开发者的备忘录显示，OpenAI 计划在下周上线<strong> GPTs 应用商店 (GPT Store)</strong>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4b7094fe08c9410794d6f86c213bec85a36.png" referrerpolicy="no-referrer"></p><p><span style="background-color:rgba(255, 255, 255, 0.65); color:#151631">OpenAI 表示，开发 GPT 的开发者必须查看该公司更新的使用政策和 GPT 品牌指南，以确保他们的 GPT 应用符合合规性要求，这样才可以在&nbsp;</span>GPT Store 显示<span style="background-color:rgba(255, 255, 255, 0.65); color:#151631">。他们还必须验证自己的用户配置文件，并确保他们的 GPT 被发布为"Public"，然后</span>就可以与所有人分享自己创建的聊天机器人。</p><p><img src="https://oscimg.oschina.net/oscnet/up-34e15bed988023f5dfa409a14730690fee4.png" referrerpolicy="no-referrer"></p><p>这些定制的聊天机器人可以使用 GPT Builder 来构建，该工具不需要用户编写代码，用户可以简单地编写一系列自然语言指令来指定自定义 GPT 应执行哪些任务以及如何执行。</p><p>据了解，GPT 商店将提供一个搜索栏，方便用户查找相关聊天机器人；排行榜将突出显示流行的 GPT，OpenAI 计划重点关注用户创建的被认为特别有用的 GPT。</p><hr><p>延伸阅读</p><ul><li><a href="https://www.oschina.net/news/265331/openai-custom-versions-chatgpt">OpenAI 推出用户自定义版 ChatGPT</a></li><li><a href="https://www.oschina.net/news/265330">OpenAI 开发者大会：GPT-4 Turbo、GPTs 商店、128k 上下文窗口、大降价</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 03:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274288/openai-launch-gpt-store-soon</guid>
            <link>https://www.oschina.net/news/274288/openai-launch-gpt-store-soon</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[改变 PC 键盘，微软为 Windows 11 引入 Copilot 键]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>微软发文<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.windows.com%2Fwindowsexperience%2F2024%2F01%2F04%2Fintroducing-a-new-copilot-key-to-kick-off-the-year-of-ai-powered-windows-pcs%2F" target="_blank">宣布</a>将为&nbsp;<span style="background-color:#ffffff; color:#222222">Windows 11</span>&nbsp;<span style="background-color:#ffffff; color:#000000">PC&nbsp;</span><span style="background-color:#ffffff; color:#222222">引入 Copilot 键。</span></p><p><span style="background-color:#ffffff; color:#222222">「</span><span><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>在新的一年里，我们将迎来向更加个性化和智能的计算未来的重大转变，其中 </span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#000000">AI<span>&nbsp;</span></span><span><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>将从系统、芯片到硬件无缝地融入到 Windows 中。这不仅会简化人们的计算体验，还会增强它，使 2024 年成为&nbsp;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#000000">AI<span>&nbsp;</span></span><span><span><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>PC 年。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="background-color:#ffffff; color:#222222">」</span></p><p><img height="236" src="https://oscimg.oschina.net/oscnet/up-5c8a9b4d409579dd4d1ee5eb53bcd0de0e3.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#222222">该公司表示，Copilot 键的推出 "标志着 Windows PC 键盘近三十年来的首次重大变革......我们将此视为 Windows 发展历程中的又一个变革性时刻，Copilot 将成为 PC 上人工智能世界的入口。"</span></p><p><span style="background-color:#ffffff; color:#222222">Copilot 键和 Windows 键一样，将会成为 PC 键盘的一个核心部分；可通过其调用 Windows 中的 Copilot 体验，使 Copilot 能够无缝地参与到用户的日常工作之中。</span></p><p>预计从二月底开始，微软的生态系统合作伙伴就会在 Windows 11 PC 上添加新的 Copilot 键，包括即将推出的 Surface 设备。此外，博文还对未来调整 Windows 以优化 AI 体验的努力进行了调侃称："这将需要一个模糊本地和云处理之间界限的操作系统。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 02:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274282/windows-11-new-copilot-key</guid>
            <link>https://www.oschina.net/news/274282/windows-11-new-copilot-key</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ubuntu 考虑停止为源代码打包 ISO 镜像]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Ubuntu 的安装介质 (ISO) 生成器最近不再提供源代码 ISO 的组装。这些 ISO 包含了 Ubuntu Linux 的所有源代码打包，其初衷是帮助用户遵守 GPL 许可证并确保代码易于访问。但此举在现实中的作用有限，现在 Ubuntu 开发者正在考虑停止为源代码打包 ISO 镜像。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-be91bf2ea640ba4af70541f8f17477bb73a.png" referrerpolicy="no-referrer"></p><p>源代码 ISO 在理论上可以帮助确保所使用的 GPL 许可代码确实可用，但在实践中并没有被广泛使用...... 想一下你上次下载六张 DVD 的 Ubuntu 源码包是什么时候？</p><p>Ubuntu/Debian 的单个源码包仍然以非 ISO 的形式提供，供需要不同资产的用户单独使用。Ubuntu 源代码 ISO 并不与其他 Ubuntu ISO 二进制版本打包成镜像，因此可用性较低。</p><p>还有人提出，各种 Ubuntu 桌面环境/混合版本也没有发布它们对应的源代码 ISO。此外，这还只代表源代码发布时的状态，如果想要获得当前所有的 Ubuntu 源代码包和安全更新等，还需要从镜像中手动获取源代码包。</p><p>目前 Ubuntu 开发者邮件列表出现了关于<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.ubuntu.com%2Farchives%2Fubuntu-release%2F2024-January%2F005863.html" target="_blank"><strong>彻底停止提供 Ubuntu 源代码 ISO 的讨论</strong></a></u>。这并不是说要关闭源代码的访问，Ubuntu 源代码仍将可用，而是考虑是否值得为组装源代码 ISO 而付出代价和持续的维护负担。</p><p><img src="https://oscimg.oschina.net/oscnet/up-15aa851f60b626c019469fa05dea8e7cd6f.png" referrerpolicy="no-referrer"></p><p>还有人提出，无论如何，Snap 软件包目前也不属于 Ubuntu 源代码 ISO 构建的一部分，因此这些源代码 ISO 从头到尾都是不完整的，而且多年来一直如此。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 02:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274281/ubuntu-discontinue-source-iso</guid>
            <link>https://www.oschina.net/news/274281/ubuntu-discontinue-source-iso</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[重新定义流计算：第三代流处理系统 RisingWave 的 2024 年展望]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0">流处理技术在过去的 20 年里经历了从学术概念到商业应用的演变。流处理系统从无到有，我们见证了从第一代数据流管理系统如 IBM System S、Oracle CQL、Esper 等，到第二代基于 MapReduce 思想发展出的分布式流计算平台，如 Apache Spark Streaming、Apache Flink 等，再到如今的第三代云原生流处理系统，如 RisingWave。这一发展标志着流处理技术的普及和简化，已成为众多行业中不可或缺的关键技术。</p><p style="margin-left:0; margin-right:0; text-align:center"><img height="672" src="https://oscimg.oschina.net/oscnet/up-627ecc0cb6868bf4f0742b2952b2d2eeb50.png" width="1770" referrerpolicy="no-referrer"></p><p style="text-align:center">图片来源：Fragkoulis, Marios, et al. "A survey on the evolution of stream processing systems." The VLDB Journal (2023): 1-35.</p><p style="margin-left:0; margin-right:0">RisingWave 诞生于 2021 年初。经过三年的打磨，已然成长为第三代流处理系统中最具代表性的产品。自 2022 年 4 月开源以来，在全球范围内更是增长迅速，互联网、金融、能源、航空航天、供应链、智能汽车等多个领域的生产环境中都得到了落地应用。到今天，RisingWave 的全球日活集群已达上百个。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="708" src="https://oscimg.oschina.net/oscnet/up-88c6e8f42fd82f2441bd9ad61ae9e37bb4a.png" width="1231" referrerpolicy="no-referrer"></p><p style="text-align:center">RisingWave 集群全球部署情况（2023 年 12 月数据）</p><p style="margin-left:0; margin-right:0">2024 年对于 RisingWave 来说，是走向成熟阶段的重要转折之年。我们将全力加速推动产品普及化，为全球用户提供更易用、更高效的流处理服务。在本文中，我们将对 RisingWave 的 2024 年做出展望。</p><span id="OSC_h2_1"></span><h2><span><span style="color:#9fcdd0">1</span></span><span style="color:#2584b5">强化易用性与性价比两大特性</span></h2><p style="margin-left:0; margin-right:0">RisingWave 诞生之初，便将"使流计算平民化"作为长期发展目标， 致力于强化流处理系统的<span style="color:#001521"><strong>易用性</strong></span>与<span style="color:#001521"><strong>高性价比</strong></span>，不断降低流计算学习、使用与维护的门槛。</p><p style="margin-left:0; margin-right:0">在易用性方面，RisingWave 实现了与 PostgreSQL 的协议兼容性，能与 PostgreSQL 生态圈的系统进行有效交互。用户能够使用遵循 PostgreSQL 语法规范的 SQL 语句来构建物化视图，进而直接执行流计算操作。此外，RisingWave 支持用户创建层级物化视图，并能确保计算一致性与实时性，显著简化了相对于传统流计算基于"流计算引擎 + 消息队列 + 数据库"组合架构的复杂性，从而在系统开发与维护方面实现成本的大幅降低。</p><p style="margin-left:0px; margin-right:0px; text-align:center"><img height="2759" src="https://oscimg.oschina.net/oscnet/up-ec79f3619c986fb80d7a377f7b0ca5444f6.png" width="3661" referrerpolicy="no-referrer"></p><p style="text-align:center">使用 RisingWave 大幅简化流处理应用开发架构复杂度</p><p style="margin-left:0; margin-right:0">在性价比方面，RisingWave 持续优化存算分离架构，以稳定且高效地支持大规模状态计算。RisingWave 将远端对象存储作为计算状态的持久化介质，依靠此架构实现了秒级系统故障恢复及弹性扩缩容能力。此外，RisingWave 通过实施分层存储以及智能缓存机制来尽可能避免出现访问远端对象存储的情况，从而缓解远端对象存储访问可能带来的延迟升高问题。</p><span id="OSC_h2_2"></span><h2><span><span style="color:#9fcdd0">2</span></span><span style="color:#2584b5">自动弹性扩缩容与极致性能</span></h2><p style="margin-left:0; margin-right:0">RisingWave 采用存算分离架构，实现了无限水平扩展，同时保障了系统的高可用性和弹性扩缩容能力。在 2024 年，我们将加大力度对 RisingWave 的架构和用户体验进行全面升级。</p><p style="margin-left:0; margin-right:0">当前，虽然 RisingWave 支持秒级弹性扩缩容，但这一过程仍需用户基于线上负载进行手动调整，这在一定程度上限制了其便利性。为此，RisingWave 计划在近期版本中推出<span style="color:#001521"><strong>自动扩缩容功能</strong></span>，自主根据集群变化动态调整流计算分布，充分适应集群规模。</p><p style="margin-left:0; margin-right:0">此外，RisingWave 将进一步对其分层存储进行优化。由于远端对象存储性能问题，可能会导致 RisingWave 在缓存未命中的情况下出现性能抖动。RisingWave 将进一步优化缓存策略，降低性能抖动出现概率。对于如多流 join 等大计算状态查询，RisingWave 也会进一步对优化器与执行器进行升级，以巩固其在性能方面相较于同类产品的领先地位。</p><span id="OSC_h2_3"></span><h2><span><span style="color:#9fcdd0">3</span></span><span style="color:#2584b5">全面拥抱数据湖</span></h2><p style="margin-left:0; margin-right:0">RisingWave 已实现了对多种数据湖格式的读写支持。值得一提的是，RisingWave 与 Apache Iceberg 等社区一同参与贡献了 Apache Iceberg Rust &nbsp;项目，不仅为 Rust 项目提供了 Iceberg 接口，而且实现了对 Iceberg 格式写入性能的三倍提升。</p><p style="margin-left:0; margin-right:0">在 2024 年，RisingWave 计划与各大数据湖社区紧密合作，进一步加强与各大数据湖的集成。这将显著提升 RisingWave 对数据湖的直接读写能力，使用户能通过 RisingWave 进行实时数据湖写入，并直接在数据湖上构建物化视图，根据数据湖变更直接为用户呈现实时计算结果。这也意味着用户可以直接通过 RisingWave<span>&nbsp;</span><span style="color:#001521"><strong>对实时流数据与历史批数据进行统一分析</strong></span>。</p><p style="margin-left:0; margin-right:0">同时，RisingWave 将联合主流数据湖以及实时分析系统厂商一起构建<span style="color:#001521"><strong>流</strong><strong>式湖仓</strong></span>，为用户带来更低成本、更加实时的数据管理体验。</p><span id="OSC_h2_4"></span><h2><span><span style="color:#9fcdd0">4</span></span><span style="color:#2584b5">显著提升在线数据服务体验</span></h2><p style="margin-left:0; margin-right:0">RisingWave 定位为流数据库，而非流计算引擎。这意味着用户会经常将 RisingWave 使用于在线数据服务中，为传统操作型数据库（如 MySQL、PostgreSQL、MongoDB 等）提供功能增强。典型场景比如：使用 RisingWave 直接消费操作型数据库 CDC，构建实时物化视图，为用户应用直接提供在线数据查询服务。</p><p style="margin-left:0; margin-right:0">在 2024 年，RisingWave 将投入更多资源来<span style="color:#001521"><strong>提升在线数据</strong><strong>服务应用的体验</strong></span>。从数据导入方面，将为更多应用开发直连数据导入能力，使用户更加轻松的将数据实时传输至 RisingWave；在数据存储方面，RisingWave 计划引入新型表结构，对数据进行高效压缩以节省存储成本，同时允许外部引擎直接访问 RisingWave 数据；在数据服务方面，RisingWave 将添加轻量级全文检索等功能，进一步优化高并发查询响应能力，使用户更加稳定高效地构建在线数据应用。</p><span id="OSC_h2_5"></span><h2><span><span style="color:#9fcdd0">5</span></span><span style="color:#2584b5">归于开源，回馈社区</span></h2><p style="margin-left:0; margin-right:0">RisingWave 流数据库能够在流处理领域占有一席之地，离不开近 150 位开源贡献者及近 3000 名社区成员的支持与贡献。RisingWave 始终倾听社区声音，积极响应用户反馈，虚心采纳用户意见。在未来的一年里，RisingWave 将举办多场线上、线下社区活动，以进一步推广流计算系统应用。</p><p style="margin-left:0; margin-right:0">为了更好地服务中文用户，我们<span style="color:#001521"><strong>将在 2024 年初上线全新中文文档</strong></span>，让更多中文用户了解与使用 RisingWave，并推动中文社区蓬勃发展。</p><p style="margin-left:0; margin-right:0">RisingWave 期望与社区成员一道，共同打造下一代流处理系统，推动流计算技术的繁荣和普及。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><hr><p style="margin-left:0; margin-right:0"><span><span style="color:#001521"><strong><span style="color:#001521">RisingWave</span></strong></span><span style="color:#001521"><span><span>是一款基于 Apache 2.0 协议开源的分布式流数据库，致力于降低流计算使用门槛。RisingWave 采用存算分离架构，实现了高效的复杂查询、瞬时动态扩缩容以及快速故障恢复，帮助用户轻松快速搭建稳定高效的流计算系统。使用 RisingWave 处理流数据的方式类似使用 PostgreSQL，通过创建实时物化视图，让用户能够轻松编写流计算逻辑，并通过访问物化视图来进行即时、一致的查询流计算结果。</span><span>了解更多：</span></span></span></span></p><p><span style="color:#001521"><strong><span style="color:#001521">💻&nbsp;</span></strong><strong><span style="color:#001521">官网:</span></strong><strong><span style="color:#001521">&nbsp;</span></strong><span style="color:#001521">risingwave.com</span></span></p><p><span style="color:#001521"><span style="color:#001521"><strong><span style="color:#001521">✨</span></strong><strong><span style="color:#001521">GitHub</span></strong><strong><span style="color:#001521">:&nbsp;</span></strong><span style="background-color:#ffffff; color:#001521">risingwave.com/github</span></span></span></p><p><span style="color:#001521"><strong><span style="color:#001521">📖 教程:</span></strong><span style="color:#001521"><strong><span style="color:#001521">&nbsp;</span></strong><span style="color:#001521">risingwavetutorial.com</span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 01:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6500281/blog/10581232</guid>
            <link>https://my.oschina.net/u/6500281/blog/10581232</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2024 第一弹，JAVA 原生 AI 算法引擎 EasyAI 加入 Dromara 开源社区]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><strong>如今 AI 项目无论在工业领域还是生活领域都开始逐渐深入，chatGPT，文心一言等大模型更是如火如荼，让我们看到了 AI 的强大。不知道多少小伙伴想快速涉猎到 AI 领域呢？因为各种原因 JAVA 在 AI 领域一直是传统弱项，但是 JAVA 程序员却占据了国内程序员就业的半壁江山，所以这次我带来的 java 原生开源 AI 算法引擎-easyAI（不依赖任何第三方库，开箱即用的引擎），介绍给大家。</strong></p></blockquote><hr><h1>EasyAI - JAVA 原生 AI 算法引擎</h1><h2>作者介绍</h2><ul><li>dromara 开源组织成员，dromara/easyAI 作者。</li><li>2 年 JAVA 开发工程师，2 年游戏开发工程师，5 年图像/自然语言算法研究员与工程师。从业 IT 九年，做算法工作时产出视觉与语言算法发明专利共三件（独立发明），项目若干。工作经历以图像算法为主，语言为辅。做游戏工作时休闲小游戏产出不计其数，做 JAVA 工作时以中间件研发工作为主。</li></ul><h2>背景与简介</h2><p><strong>广大公司，尤其是中小公司是不是遇到过以下痛点？</strong></p><blockquote><p>1.公司后端突然需要一个 AI 模块来辅助某业务场景，但是因为传统业务关系公司后端大部分都是 java 程序员。 去招个资深的算法工程师吧，先不说招聘的时间成本，就因为这么一个需求就去找一个价格这么昂贵的人员也太不经济，最后只能无奈外包。</p><p>2.突然有了某个 AI 模块需求，用了很长的时间成本从网上买了一套做好的 AI 模块，结果人家是 py 或者 cpp。动不动还要装 cuda 环境（但凡装过 cuda 环境的都知道多少坑），有时候要考虑环境，有时候还要内嵌，要考虑 py/cpp 与 java 互相调用，还有因此而来的效率与安全问题等等。我更希望是完美兼容我的系统，我不想去繁琐的调整运行环境，考虑各种兼容性，我想要直接引入包到我的 maven 里就能开箱即用。</p><p>3.我去！chatGPT 好牛逼，人用的真爽，可是它不能给我的系统服务。它是大模型很好，但是我的系统不需要大模型！我需要的是一个我可以自定义，去针对我们业务环境的小模型来嵌入我们的系统，为系统服务！大模型是给人用的，但是不能内嵌我们的系统给我们的系统服务。</p></blockquote><ul><li>如果你有以上痛点，easyAI 就帮到你了！easyAI 是一个纯 java 原生算法引擎。其底层从矩阵运算，微分求导。中层到机器学习，强化学习等各种算法，然后最上层实现了图像视觉，自然语言全部包含在 easyAi 引擎内。</li><li>这种从最底层的基础运算到上层 AI 算法上下游的全囊括，使得 java 项目只要引入 easyAi 的 maven 包，就可以做到无缝调用，且可以不依赖任何第三库，让 java 程序员舒服的一批！</li><li>然而这还没完，easyAi 是引擎，是为 java 开发人员服务的，所以我要封装的更彻底！因此我又封装了完整的依赖于 easyAi 引擎的 AI 业务应用，共大家无脑调用！大家可以直接使用，或者修改后再融入到到自己的业务中。</li><li>到了此时 easyAI 才可以既满足了，了解算法知识，可以利用 easyAI 内置中底层算法工具深入开发的算法工作人员。也满足了只想利用现成应用业务代码，去满足自己系统内嵌，服务与自己系统 AI 的普通 java 业务开发人员的需求。</li><li>然后再强调一点，easyAI 并不是对主流算法 JAVA 的无差别重新实现，而是根据应用场景对主流算法进行了优化与魔改，让用户即便使用一台普通的电脑，就可开箱直接跑起来。并且保证普通服务器或个人电脑 CPU 下依然达到可用性能的流畅运行。 所以我的「easy」并不是只是指的简单，而是对算法进行了廉价，低成本方向的优化。如果我没有办法对某种算法做到廉价优化的算法实现，我也不会放入 easyAI 里面。</li><li>easyAI 的核心理念，为 java 开发者服务是一方面，另一方面是专注于针对性业务，高性能，低成本优化方向的中小模型的算法引擎</li></ul><h3>综上，我们总结出以下的背景</h3><ul><li><p>广泛性：easyAI 可以为占据国内半数程序员以上的 JAVA 业务程序员开发 AI 业务，提供底层算法引擎动力。</p></li><li><p>深入性：easyAI 无任何依赖，从底层基础算法工具到上层算法模型全囊括，可以支持专业性的深度开发，也可提供简单直接的业务层嵌入 AI，而且这一点在持续扩张中。</p></li><li><p>廉价性，主要关注针对性可嵌入业务系统中小模型，低训练样本需求，低算力需求，这两个方向去优化算法模型是 easyAI 的方向。</p></li><li><p>兼容性，因为是原生 JAVA 研发，无任何第三库依赖，所以对 JAVA 项目，引入包后就开箱即用，无任何环境异常会导致的问题。</p></li></ul><h2>EasyAI 应用举例</h2><ul><li><p>easyAI 下载链接:<a href="https://gitee.com/dromara/easyAi">https://gitee.com/dromara/easyAi</a></p></li><li><p>easyAI 主要 API 详情文档：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwlhlwl.com%2Fgw%2FeasyAi.html" target="_blank">https://wlhlwl.com/gw/easyAi.html</a></p></li><li><p>easyAI 详细视频教程：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2Fav89134035" target="_blank">https://www.bilibili.com/video/av89134035</a></p></li><li><p>easyAI 是算法引擎，我们要直观感受它的强大，要从依赖它构建的应用化项目 DEMO 来看，这次我们拿出其中之一的应用案例--强大的自主智能客服工具，支持自动与用户对话，并捕捉用户对话中的需求后自动生成订单！可自主解答用户问题或进行诱导消费！基于 easyAi 算法引擎构建智脑——myJecs</p></li></ul><h2>myJecs 分类配置及标注后台</h2><ul><li>登录页面 <img alt="登录页面" src="https://admin.wlhlwl.com/share/peng/picture/index.png" referrerpolicy="no-referrer"></li><li>配置业务分类及分类订单必要关键信息 <img alt="配置订单分类与关键词" src="https://admin.wlhlwl.com/share/peng/picture/admin.png" referrerpolicy="no-referrer"></li><li>对分类业务填写训练样本并标注关键信息 <img alt="标注界面" src="https://admin.wlhlwl.com/share/peng/picture/worker.png" referrerpolicy="no-referrer"></li><li>聊天咨询标注直接输入表位置 <img alt="标注界面" src="https://admin.wlhlwl.com/share/peng/picture/b2.png" referrerpolicy="no-referrer"></li></ul><h2>myJecs 智能客服基本流程演示</h2><ul><li>用户第一次进行输入表达自己的想法 <img alt="用户输入 1" src="https://admin.wlhlwl.com/share/peng/picture/a1.png" referrerpolicy="no-referrer"></li><li>myJecs 发现用户的描述缺少订单必要信息，则进行反问。用户接收到 myJecs 的反问，进一步补充的自己的想法 <img alt="用户输入 2" src="https://admin.wlhlwl.com/share/peng/picture/a2.png" referrerpolicy="no-referrer"></li><li>用户第二次输入信息依然不满足后台 14 分类法律咨询的订单关键信息要求，继续补充信息，最终完成订单信息补充生成订单。 <img alt="用户输入 3" src="https://admin.wlhlwl.com/share/peng/picture/a3.png" referrerpolicy="no-referrer"></li><li>用户输入想要咨询的问题，myJecs 对用户咨询的问题进行自主解答 <img alt="用户输入 4" src="https://admin.wlhlwl.com/share/peng/picture/b1.png" referrerpolicy="no-referrer"></li></ul><h4>以上是 myJecs 自定义业务接口的简单案例演示，具体安装部署及细节详情请到其主页下载: <a href="https://gitee.com/ldp_dpsmax/my-jecs">https://gitee.com/ldp_dpsmax/my-jecs</a></h4><h2>架构设计</h2><p><strong>常用底层算法模块</strong></p><ul><li><p>基础矩阵及线代计算模块：</p><p>1.内置矩阵类，矩阵计算类，可以完成常用矩阵四则运算，奇偶性，多元线性回归，逻辑斯蒂回归，欧式距离，余弦相似性，im2col，逆 im2col，求代数余子式，求逆，求伴随矩阵，内积等，微分等一系列 api。</p><p>2.RGB 三通道矩阵，可进行图像转化，剪切，分块，生成图像矩阵等操作方便后续计算。</p></li><li><p>机器学习-聚类：</p><p>k 聚类，混合高斯聚类，密度聚类，学习向量量化聚类等</p></li><li><p>机器学习-分类及拟合： 多层前馈神经网络，多层循环神经网络，残差网络，多层残差循环神经网络，卷积神经网络，决策树，随机森林，k 最近邻等</p></li><li><p>启发式算法： 粒子群，蚁群，模拟退火</p></li><li><p>强化学习，动态规划，蒙特卡洛分析，马尔可夫，时序差分</p></li></ul><p><strong>常用上层算法模块</strong></p><ul><li><p>视觉图像： 图像识别，图片摘要，目标检测</p></li><li><p>自然语言： 语义理解，拆词分词，推理敏感及关键词，语句补全，语言交流</p></li><li><p>游戏机器人： 自主策略，自主行动</p></li></ul><h2>使用</h2><p>1.将项目下载后打包进本地 maven 库</p><p>2.将 easyAi pom 文件引入地址引入项目</p><h2>关注项目</h2><p>对项目有什么想法或者建议，可以加我 qq 交流群 (222475213) 或 vx:thenk008，或者创建<a href="https://gitee.com/dromara/easyAi/issues">issues</a>，一起完善项目。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 01:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274271</guid>
            <link>https://www.oschina.net/news/274271</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【SIG 月报】12 月 openKylin 社区 SIG 组最新进展分享]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">为推动社区繁荣发展，打造开源操作系统创新生态，openKylin 社区围绕创新硬件、人机交互、智能支撑、终端安全、互联协同、云端融合等多个技术领域，以技术小组的形式开展深入研究和技术创新。接下来，让我们一起盘点 12 月份 openKylin 社区 SIG 组的最新进展：</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">12 月社区新增 SIG</span></span></strong></span></p><p style="margin-left:0px; margin-right:0px; text-align:justify">12 月社区新增 2 个 SIG 组，目前已累计成立 95 个 SIG 组，新增 SIG 组信息如下：</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong><span style="color:#1c9cee"><span style="background-color:#f5faff">CloudNative SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000"><span style="background-color:#f5faff">CloudNative SIG 组致力于将云原生技术开放和适配到 openKylin 系统上，方便社区用户快速上手云原生技术栈。</span></span></span></p><ul><li><span><span style="color:#000000">SIG 主页：</span></span></li><li><span><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/CloudNative</span></span></li></ul><p style="color:#222222; margin-left:0px; margin-right:0px">&nbsp;</p><p style="color:#222222; margin-left:0px; margin-right:0px"><span><strong><span style="color:#1c9cee"><span style="background-color:#f5faff">ServerAdaption SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000"><span style="background-color:#f5faff">ServerAdaption SIG 由飞腾信息技术有限公司发起成立，旨在为服务器平台上的 openKylin 内核和软件适配提供支持，包括服务器整机、服务器操作系统内核及应用层方面的适配。</span></span></span></p><ul><li><span><span style="color:#000000">SIG 主页：</span></span></li><li><span><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/ServerAdapiton</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">12 月社区 SIG 活跃度汇总</span></span></strong></span></p><p style="margin-left:0px; margin-right:0px; text-align:justify">12 月社区新增有效 PR 数 788 个、仓库 Fork 数新增 472 个，SIG 组公开例会召开 16 次。截至目前，社区累计有效 PR 数 13539 个、仓库 Fork 数 5186 个、SIG 组公开例会召开 136 次，其中：</p><ul><li><span><span style="color:#000000">12 月社区 SIG 组 PR 贡献 top15 如下：</span></span></li></ul><div><p style="text-align:center"><img height="910" src="https://oscimg.oschina.net/oscnet/up-de10417b9fdab49d8545e45b17c79f23ba6.png" width="1250" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">12 月社区 SIG 组活跃地图分布情况（颜色越深代表越活跃，参考维度：PR、issue、SIG 会议）如下：</span></span></p><div><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><div><p style="text-align:center"><img alt="" height="2204" src="https://oscimg.oschina.net/oscnet/up-12a1dd28d38c3f852d1aa582038451ef684.png" width="1340" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">12 月社区技术进展与成果</span></span></strong></span></p><h4>一、UKUI SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">UKUI(Ultimate Kylin User Interface) SIG 小组致力于桌面环境相关软件包的规划、维护和升级工作，满足各种设备和用户需求的桌面环境程序，主要包含程序启动器（开始菜单）、用户配置、文件管理、登录锁屏、桌面、网络工具、快捷配置等，为用户提供基本的图形化操作平台。桌面核心组件开发工具以 Qt、C++为主，宗旨是始终如一地提升系统的操作体验，提供集稳定性、美观性、流畅性和便捷性为一体的桌面环境。12 月进展如下：</span></span></p><ul><li><span><span style="color:#000000">【蓝牙】新增离座锁屏功能；</span></span></li><li><span><span style="color:#000000">【应用数据管理】支持.desktop 文件「keywords」字段解析，应用可以自定义关键字后通过搜索关键字查询到对应应用；</span></span></li><li><span><span style="color:#000000">【主题框架】增加便签应用三联按钮主题配置功能；</span></span></li><li><span><span style="color:#000000">【电源管理】优化应用冻结模式的描述；</span></span></li><li><span><span style="color:#000000">【开始菜单】最近文件增加文件日期显示功能；</span></span></li><li><span><span style="color:#000000">【会话管理】适配应用管理服务和 UKUI-Lite 模式；</span></span></li><li><span><span style="color:#000000">【应用数据管理服务】更新开明包路径、适配新国标字体；</span></span></li><li><span><span style="color:#000000">【应用管理服务】新增注册 dbus 服务失败后退出主程序功能，新增将不带窗口的进程移入服务组功能；</span></span></li><li><span><span style="color:#000000">【侧边栏】新增「ESC」按键隐藏侧边栏功能；</span></span></li><li><span><span style="color:#000000">修复侧边栏、会话管理、文件管理器、多任务视图等 20+问题。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎各位感兴趣的社区开发者加入我们，一起打造 openKylin 桌面系统稳定易用的桌面环境！</span></span></p><h4>二、RISC-V SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">本 SIG 组主要负责 RISC-V 架构开源软件包的维护，发布 openKylin 的 RISC-V 版本，进行软件包构建、系统构建等工作。12 月 RISC-V SIG 组进展如下：</span></span></p><ul><li><span><span style="color:#000000">构建发布 vf2、算能、荔枝派的 openkylin-2.0-alpha 版本镜像；</span></span></li><li><span><span style="color:#000000">完成算能系统 docker 安装运行与测试，构建 openKylin 本地 docker 镜像，并在 docker hub 建立 openKylin 官方账号，向 docker hub 中的 DOI: riscv64 官方提交远程镜像贡献并撰写说明；</span></span></li><li><span><span style="color:#000000">初步规划 openKylin RISC-V 软件生态列表 ，适配并测试 Firefox、libreoffice、golang,perl、nodejs、php 包 (算能平台),并解决相关安装和运行过程中的依赖问题；</span></span></li><li><span><span style="color:#000000">推进 RISC-V 镜像平台自动制作；</span></span></li><li><span><span style="color:#000000">在 RISC-V 独立源补充完善所需的软件包；</span></span></li><li><span><span style="color:#000000">RISC-V 平台尝试编译 TensorFlow 及其他 AI 相关软件包；</span></span></li><li><span><span style="color:#000000">RISC-V 统一镜像烧录工具：目前进度 70%。烧录镜像部分功能增加线程避免烧录镜像时软件界面卡住，并在开始烧录前增加弹窗提示。构建镜像部分实现了 vf2 的构建空镜像、镜像分区、设置 uboot、chroot 安装内核、修改配置文件功能，各功能单独自测正常；</span></span></li><li><span><span style="color:#000000">RVTrans+Wine 环境初步调试完成，适配并测试微信、Sublime Text、Minipad2、SuperTuxKart。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 RISC-V 开发平台技术方向感兴趣的爱好者加入到 RISC-V SIG！</span></span></p><h4>三、Release SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Release SIG 主要负责协调各个 SIG 组，把控版本开发进度和风险，制定版本发布计划，完成版本发布工作等。Release SIG 12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">完成 openKylin 2.0 Alpha 版本构建、验收及发布；</span></span></li><li><span><span style="color:#000000">完成 11 月份 openKylin 1.0.1 版本修复内容推送并公告；</span></span></li><li><span><span style="color:#000000">推动各 SIG 组按计划修复 yangtze 及 nile 分支的 issue；</span></span></li><li><span><span style="color:#000000">完成 1.0.1-1208、1.0.1-1222 两个周版本构建并提测；</span></span></li><li><span><span style="color:#000000">推动完成 4 个高危安全漏洞修复并公告。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区版本集成、版本管理、版本发行等工作感兴趣的爱好者加入到 Release SIG！</span></span></p><h4>四、Packaging SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Packaging SIG 负责维护 openKylin 社区的软件包打包规范，维护公共软件包，以及协调和决策社区版本发布过程中的包依赖问题。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">补充构建 nile 系列显示、开明包格式等组件相关依赖包 11 个；</span></span></li><li><span><span style="color:#000000">搜狗输入法更新版本推送 pty 源；</span></span></li><li><span><span style="color:#000000">openKylin 2.0 Alpha 版本 x86、arm 架构镜像相关依赖包编译问题处理，包括 liblc3 的编译错误、测试组件中的 python 变量类型错误等问题；</span></span></li><li><span><span style="color:#000000">处理 rv64g 架构 5 个软件包编译失败问题。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区软件自主选型、编译打包工作感兴趣的社区爱好者加入我们！</span></span></p><h4>五、QA SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">QA SIG 组致力于提升 openKylin 社区版本质量，包括社区版本测试、质量保障等。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">完成 2.0-alpha 版本测试，共计 4 个版本迭代，包括 9 个需求测试，提交 issue 165 个；</span></span></li><li><span><span style="color:#000000">完成 1.0.1 版本修复 issue 验证，验证 issue79 个；</span></span></li><li><span><span style="color:#000000">完成 1.0.1 版本漏洞修复验证。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区版本测试、质量管理感兴趣的社区爱好者加入我们！</span></span></p><h4>六、SecurityGovernance SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin SecurityGovernance SIG 通过接收和响应 openKylin 社区的产品安全问题报告、提供社区安全指导，开展安全治理等活动提升社区产品的安全性。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">新增 12 个安全漏洞 POC 用例；</span></span></li><li><span><span style="color:#000000">完成外部提交的 1 个疑似漏洞 bug 的分析、确认工作；</span></span></li><li><span><span style="color:#000000">发布 CVE issue 21 个；</span></span></li><li><span><span style="color:#000000">安全编码仓库新增 21 条通用编码规范；</span></span></li><li><span><span style="color:#000000">openKylin 开源软件网络安全攻防大赛技术支持，提供现场裁判技术支持，共计接受到安全漏洞 33 个（4 个重复，29 个有效安全漏洞）；</span></span></li><li><span><span style="color:#000000">Genmai 项目：完成开源版本、TS 版本的需求分析，完成对应架构图的设计和调整。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 版本安全全漏洞挖掘/验证、安全漏洞修复等安全方面工作感兴趣的社区爱好者加入我们！</span></span></p><h4>七、OpenSDK SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">OpenSDK SIG 组负责开发者套件（base、system、applications）规划、开发、维护等工作，致力于解决应用在多操作系统中的兼容性问题。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">完善 OpenSDK2.3 版本的开发文档；</span></span></li><li><span><span style="color:#000000">补充动态库 symbols 文件，并修改了一些已知内存泄漏的问题；</span></span></li><li><span><span style="color:#000000">应用支撑控件适配了启典主题；</span></span></li><li><span><span style="color:#000000">conf2 配置模块新增统一视图查看工具，支持配置详细信息查询。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对开发者套件感兴趣的社区爱好者们加入 OpenSDK SIG 组！</span></span></p><h4>八、CompatWinApp SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">CompatWinApp SIG 组致力于将大量的 Windows 系统应用程序引入到 openKylin 系统。SIG 组将通过研究应用兼容技术和指令翻译技术，研制完善的 Windows 应用兼容方案，让更多的 Windows 应用能兼容运行于 openKylin 系统，不断繁荣 openKylin 软件生态。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">wine 助手新增 1200 余款软件下载和安装。</span></span></li><li><span><span style="color:#000000">在社区发布 wine 助手 20231222 版本，主要更新如下：</span></span></li><li><span><span style="color:#000000">1）wine 助手新增安装组件时，弹出 license 页功能</span></span></li><li><span><span style="color:#000000">2）修复一些稳定性问题。</span></span></li><li><span><span style="color:#000000">3）断网时弹出提示框，提醒用户。</span></span></li><li><span><span style="color:#000000">4）增加恢复出厂设置功能，去除容器目录和已安装程序。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对应用兼容技术和指令翻译技术感兴趣的爱好者加入到 CompatWinApp SIG！</span></span></p><h4>九、InputMethod SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">本 SIG 组致力于组建输入法开源社区，推进开源输入法框架及开源输入法在社区维护。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">完成对 windows 输入法框架的调研和讨论；</span></span></li><li><span><span style="color:#000000">完成虚拟键盘 3.0、输入法框架 5.1.5 发版；</span></span></li><li><span><span style="color:#000000">完成 OK 拼音输入法 1.0.0.0 版本发布；</span></span></li><li><span><span style="color:#000000">虚拟键盘退出按钮、模式转换按钮新增 ToolTips；</span></span></li><li><span><span style="color:#000000">虚拟键盘和悬浮按钮新增窗口标识；</span></span></li><li><span><span style="color:#000000">修复 6 个 OK 拼音输入法相关问题。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区 fcitx 输入法框架、桌面虚拟键盘开发工作感兴趣的社区爱好者加入我们！</span></span></p><h4>十、KernelBuilder SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">KernelBuilder SIG 组负责 openKylin 内核预览版本的自动化构建，构建工具（kernel-builder）的规划、开发、维护等工作。同时积极维护了 openkylin-rootfs 和 openkylin-wsl 仓库，为 openKylin 提供了可用的根文件系统、wsl 开发环境；为 openKylin 在 docker 容器化创造了条件。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">完成 mmdebstrap 正式更新，升级为最新版本。引入 multistrap、mmdebstrap 用以制作 rootfs，rootfs 后续可为 wsl 和 docker 镜像服务；</span></span></li><li><span><span style="color:#000000">新增了对 ZSTD 压缩算法的解压重制打包步骤（由于部分发行版暂未支持 ZSTD 算法，故将 ZSTD 转化为 LZMA 压缩算法）；</span></span></li><li><span><span style="color:#000000">向 proot-distro 项目上游，即用于在 Termux 中管理 Linux 发行版安装的实用程序，提交关于 openKylin 的代码，将 openKylin 发行版引入 Termux，同时该项目也能为我们提供 rootfs；</span></span></li><li><span><span style="color:#000000">openkylin-wsl、openkylin-docker 版本更新；</span></span></li><li><span><span style="color:#000000">已在 yangtze、nile 版本引入 distcc 实现分布式编译。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区内核构建及应用、docker 容器化、根文件系统、wsl 开发环境感兴趣的社区爱好者加入我们！</span></span></p><h4>十一、Kernel SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Kernel SIG 组致力于新硬件适配、新功能、新特性开发。不断提升内核健壮性、稳定性，能更好的为 openKylin 系统和应用程序提供底层技术支持。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">合并 Intel 固件补丁 166 个，更新 intel 的图形，无线，蓝牙，音频等固件；</span></span></li><li><span><span style="color:#000000">合并 Intel Raptor Lake 平台支持补丁 142 个，支持最新 Intel 硬件平台。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对内核感兴趣的社区小伙伴加入 openKylin 社区 kernel SIG 组！</span></span></p><h4>十二、Virtualization SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Virtualization SIG 组致力于构建 openKylin 社区系统虚拟化技术，打造面向端、边、云的全场景虚拟化解决方案。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">libvirt:修复了 CVE-2023-3750 漏洞。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对虚拟化组件或软件包技术感兴趣的社区小伙伴加入 openKylin 社区 Virtualization SIG 组！</span></span></p><h4>十三、SystemManager SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">SystemManagerSIG 小组致力于组建系统管家开源社区，负责开发和维护系统管家及附属工具，为 openKylin 生态和实用性添砖加瓦。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">驱动管理新增支持热插拔识别和处理；</span></span></li><li><span><span style="color:#000000">解决换机助手不能成功拉起 kare 应用兼容环境的问题。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎欢迎社区对系统管家开发感兴趣的朋友加入！</span></span></p><h4>十四、UpdateManage SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">本 SIG 小组致力于组建系统升级开源社区，负责开发和维护 openKylin 系统升级机制。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">跨版本升级工具：解决 plymouth 冲突的问题</span></span></li><li><span><span style="color:#000000">跨版本升级工具：增加依赖自包含机制</span></span></li><li><span><span style="color:#000000">跨版本升级工具：解决三方应用识别耗时长的问题</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎社区对系统更新升级感兴趣的开发者或爱好者加入我们！</span></span></p><h4>十五、LXQt SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">LXQt(LXQt Desktop Environment) SIG 小组致力于 LXQt 桌面环境相关软件包的规划、维护和升级工作，及时响应用户反馈，解决相关问题。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">完成 lxqt-build-tools 等基础组件的更新。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎社区所有对桌面环境移植感兴趣的爱好者加入我们！</span></span></p><h4>十六、FAQ SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">FAQ SIG 小组致力于收集各渠道社区开发者、爱好者等用户反馈的问题，并建立相关标准化流程推动问题解答或解决同时，在这一过程中不断为 openKylin 社区积累 FAQ 知识库。12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">和文档组召开例会讨论新文档架构；</span></span></li><li><span><span style="color:#000000">收集反馈 10+ 2.0 版本高频问题；</span></span></li><li><span><span style="color:#000000">和社区平台讨论了论坛功能需求；</span></span></li><li><span><span style="color:#000000">制定 FAQ 论坛负责人规范。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎社区热心、善于解答问题的小伙伴加入 FAQ SIG 组！</span></span></p><h4>十七、MakerFrame SIG</h4><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">MakerFrame SIG 组负责为开放麒麟开发简单高效的游戏框架引擎，致力于让专业人士和非专业人士都来开发跨平台的应用和游戏，丰富开放麒麟游戏生态，12 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">增加插件自动/非自动加载机制，增加 game.plugin('作者', '插件名') 来更安全的使用插件；</span></span></li><li><span><span style="color:#000000">增加地图遮罩层，可以绘制任何颜色格子，为战旗引擎打基础；</span></span></li><li><span><span style="color:#000000">增强 game.gf 功能，增加 game.cd 变量（跨存档通用变量，会保存），并添加到了视图编程命令中；</span></span></li><li><span><span style="color:#000000">增加特殊图块的值设置（1 为障碍），为战旗引擎打基础；</span></span></li><li><span><span style="color:#000000">增加游戏退出脚本函数；</span></span></li><li><span><span style="color:#000000">增加键盘和摇杆多方向移动；</span></span></li><li><span><span style="color:#000000">角色编辑器增加是否显示名字；</span></span></li><li><span><span style="color:#000000">增加载入地图前后自定义运行脚本；</span></span></li><li><span><span style="color:#000000">增加使用统计功能；</span></span></li><li><span><span style="color:#000000">优化地图编辑器、地图组件、引擎目录结构等 5+模块功能；</span></span></li><li><span><span style="color:#000000">修复选择技能/道具框、自动攻击、插件下载等 10+问题。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎社区对游戏框架或游戏应用感兴趣的开发者加入 MarkerFrame SIG 组！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">关于 openKylin 社区 SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span>openKylin（开放麒麟）社区是一个自由开放的社区，社区中所有的 SIG 小组都是开放的，任何人和组织都可以参与。你可以选择加入已有 SIG，也可以选择创建新的 SIG。截至目前，openKylin 社区已有<strong>95</strong>个 SIG 在运行，包括 Architecture、Infrastructure、Release、Kernel、Security、Compatibility 等。</span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span>如果您对此感兴趣，想要加入 openKylin（开放麒麟）社区，参与 SIG 贡献，可点击 「阅读原文」 了解更多详细内容。</span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">关于 openKylin 社区</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span>openKylin（开放麒麟）社区旨在以「共创」为核心，在开源、自愿、平等、协作的基础上，通过开源、开放的方式与企业构建合作伙伴生态体系，共同打造桌面操作系统顶级社区，推动 Linux 开源技术及其软硬件生态繁荣发展。</span></p><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">社区理事成员单位包括麒麟软件、普华基础软件、中科方德、麒麟信安、凝思软件、一铭软件、中兴新支点、元心科技、中国电科 32 所、技德系统、北京麟卓、先进操作系统创新中心、飞腾、兆芯、龙芯中科、景美、京东科技、玄铁、申泰信息、海光等 21 家产业同仁和行业机构。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 05 Jan 2024 01:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274268</guid>
            <link>https://www.oschina.net/news/274268</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 年终盘点：Apache SeaTunnel 社区年度成就与展望]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>随着 2023 年即将画上圆满的句号，是时候回顾过去一年 Apache SeaTunnel 社区的辉煌成就和宝贵经验。在这充满挑战和机遇的一年里，我们的社区不断壮大，技术不断进步，成就斐然。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a768675185e02758ed425fe32b7b76a519f.jpg" alt="file" referrerpolicy="no-referrer"></p><h3>展望 2024 年</h3><p>展望来年，Apache SeaTunnel 社区将继续致力于打造更加高效稳定的数据集成平台，并着重在 DDL 自动变更、自动建表、可视化配置、整库同步等功能进行开发和改进。我们期待着与更多的开发者和合作伙伴一起，共同推动社区的发展。</p><h3>结语</h3><p>感谢每一位社区成员在过去一年的辛勤付出和卓越贡献，是你们让 Apache SeaTunnel 社区成为一个不断进步、充满活力的大家庭。让我们携手共进，迎接 2024 年的新挑战和机遇！</p><blockquote><p>本文由 <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.whaleops.com" target="_blank">白鲸开源科技</a> 提供发布支持！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Thu, 04 Jan 2024 10:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/SeaTunnel/blog/10580240</guid>
            <link>https://my.oschina.net/SeaTunnel/blog/10580240</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[美国 13 岁少年通关原版俄罗斯方块：历史首人，此前仅 AI 可完成]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>俄罗斯方块这款经典游戏想必大家都玩过，但能将其通关的人此前从未出现。近日，这一空白终于被打破。</p><p>美国一名 13 岁少年近日玩 1988 年任天堂版《俄罗斯方块》，连连通关，最后把游戏逼到画面定格、再无方块掉落，相当于游戏端「缴械投降」。他或为实现这一目标的第一人。先前，只有人工智能取得这一战果。</p><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fedition.cnn.com%2F2024%2F01%2F03%2Ftech%2Foklahoma-teenager-defeats-tetris%2Findex.html" target="_blank">据英国《每日邮报》1 月 2 日报道</a></u>，家住俄克拉何马州的威利斯·吉布森去年 12 月在线直播玩《俄罗斯方块》。直播画面显示，他只用几分钟便打到「普通人天花板」的第 30 关，获得 999999 分。接着，方块掉落速度越来越快，但吉布森凭借惊人的反应能力，最终用大约 38 分钟玩到第 157 关，令游戏画面定格，代表游戏端「彻底没辙了」。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-5d5869c302551f2c4071873ebbce3d76467.png" referrerpolicy="no-referrer"></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJ9oVQ43j22g" target="_blank">https://www.youtube.com/watch?v=J9oVQ43j22g</a></u></em></p><p>此时，吉布森一脸不可置信地说：「天啊！我要晕倒了！我感觉不到手在哪里。」</p><p>吉布森 11 岁开始玩《俄罗斯方块》，每天要玩 3 到 5 个小时。他成为专业玩家，多次在比赛中获奖。本次大获全胜之前，他数次向彻底击败游戏端发起冲击，总是功亏一篑。他坦言，最大困难是 30 分钟后自己会变得紧张。</p><hr><p>俄罗斯方块（英语：Tetris、俄语：Тетрис）是前苏联科学家阿列克谢·帕基特诺夫利用空闲时间所编写，在 1984 年 6 月 6 日发表的游戏程序。它在 1980 年末期至 1990 年代初期风靡全世界，是落下型益智游戏的始祖。由于它由俄罗斯人发明，故得此名。</p><p>「tetris」一词由希腊语数字「四」的前缀「tetra-」（因所有落下方块皆由四块组成）和作者最喜欢的运动网球（「tennis」）结合而成。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3060ed96d43d63f97fef66d2c71e542e6e4.png" referrerpolicy="no-referrer"></p><p>由于《俄罗斯方块》具有数学性、动态性与知名度，也经常被用来作为游戏程序设计的练习题材。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 04 Jan 2024 08:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274186/oklahoma-teenager-defeats-tetris</guid>
            <link>https://www.oschina.net/news/274186/oklahoma-teenager-defeats-tetris</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源英雄联盟 (LOL) 怼人工具 —— 快人一步]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>LOL_Family_Protector 是英雄联盟 (LOL) 怼人工具，支持自定义骂人短语、内置骂人库，可通过快捷键随机发送。软件无界面，只有托盘处有图标显示。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9188277c58eb622164547384a2b48f52671.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bf6bc8f22dd0e46ef28df573bcecf806492.png" referrerpolicy="no-referrer"></p><h2>软件功能</h2><ul><li>自定义保护短语</li><li>F2 使用 Data.txt 库随机保护，F3 使用 Custom.txt 库按照顺序保护，F5 设置互动对象，F12 重置软件</li><li>仅仅适用于英雄联盟游戏，在其他软件界面不能使用，避免冲突</li><li>配置默认保护库，已经测试可以正常发送出去（部分被屏蔽的词语会显示不文明发言，部分内容发送后无任何效果，如果你要增加新的保护短语，可以自己先测试一下）</li></ul><h2>软件使用</h2><ol><li>直接在 Github 完整下载本库</li><li>英雄，联盟亲人保护器.exe（如果自己安装了 AutoHotkey V2 的程序可以直接运行，英雄联盟亲人保护器.ahk 脚本，效果一样）</li><li>运行游戏（对战/结算/选人界面使用）</li><li>使用对应快捷键功能</li></ol><h2>文件说明</h2><ul><li>Data.txt（随机保护库）用于 F2 按键随机发送</li><li>Custom.txt（顺序保护库）用于 F3 按键按顺序发送</li><li>Default.txt （默认保护库）Data.txt/Custom.txt 改坏了就复制 Default.txt 一份并修改为名称为对应名称</li><li>英雄联盟亲人保护器.ahk（主脚本）如果懂 AutoHotKey 可以自行修改脚本</li><li>英雄联盟亲人保护器.exe（主程序）</li><li>英雄联盟亲人保护器.ico（图标文件）</li><li>Changes.log （程序变更日志）每次的变更都会尽量写在日志中</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Thu, 04 Jan 2024 07:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/lol_family_protector</guid>
            <link>https://www.oschina.net/p/lol_family_protector</link>
        </item>
        <item>
            <title>
                <![CDATA[「小米澎湃 OS 架构」获得 2023 年小米百万美金技术大奖]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>小米创办人、董事长兼 CEO 雷军今日发布消息，2024 年开年第一件大事，为小米工程师们颁发百万美金年度技术大奖。这是小米内部规格最高的奖项，奖励在重大技术创新项目中做出关键突破的 10 人以内团队。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e803bf6d7e9bdd4355025cd58d382e74e50.png" referrerpolicy="no-referrer"></p><p>雷军表示，今年百万美金技术大奖共有 55 个项目进入集团复评，涵盖小米各个业务领域，从软件开发到硬件制造，产品设计到工艺优化，每一个项目都凝聚了工程师们对于先进科技的持续追求。</p><p>雷军宣布，「小米澎湃 OS 架构」和「一体化大压铸技术」两支团队拿到今年的百万美金大奖，他们为小米实现「人车家全生态」闭环做出重要贡献。</p><blockquote><p>作为新战略布局的核心驱动，小米澎湃 OS 则标志着中国企业在操作系统领域的一大突破，彻底重写底层架构，实现了底层重构、跨端智联、主动智能、全域安全、坚持开放生态五大设计目标，为未来百亿设备、百亿连接做好了万物互联的公有底座。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-14e945adfe61214caec9a0df9cb47702de8.png" referrerpolicy="no-referrer"></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Thu, 04 Jan 2024 07:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274174</guid>
            <link>https://www.oschina.net/news/274174</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[2023 全球程序员薪酬报告：北京以 9 万美元上榜]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#000000">Levels.fyi&nbsp;网站<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.levels.fyi%2F2023%2F" target="_blank">发布</a>了一份 2023 年度程序员收入报告，基于收集的超过 200,000 份薪资申请。报告中的薪酬数据反映的是在过去一年中收集的年度薪酬总额</span><strong style="color:#000000">中位数</strong><span style="background-color:#ffffff; color:#000000">，包括工资、股票和奖金。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">该网站表示，虽然相关数据是针对软件工程师的，但薪酬最高的公司和地点通常也适用于各种技术角色。且薪酬和水平取决于各种因素，包括面试表现、过去的经验、竞争性报价等。并声明称，这些薪酬数字主要是针对那些薪酬最高的科技公司和地点，可能无法反映市场上其他公司的薪酬。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">报告显示，<span style="background-color:#ffffff; color:#333333">在初级工程师分类中，量化交易公司&nbsp;Jane Street&nbsp;以 32.5 万美元的中位数薪资占据榜首，遥遥领先。其次是前不久被 Adobe 收购失败的 Figma，薪资为 24.05 万美元。Apache Spark 背后的商业化公司&nbsp;Databricks 持续在榜，且相较 2022 年上升了一位，以 23.05 万美元的薪资水平，排在第 5 位&nbsp;。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="255" src="https://oscimg.oschina.net/oscnet/up-283c832a065c25362171a6bec0845d06c09.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">中级工程师职位方面，依旧是由 Databricks&nbsp;领衔，中位数薪资&nbsp;38 万美元；相较 2022 年的 44.3 万美元略有下降。</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.87)">世界上最活跃的自营交易公司之一&nbsp;</span><span style="background-color:#ffffff; color:#333333">IMC 和游戏平台 Roblox 以&nbsp;35 万美元并列第 2，企业管理软件开发商&nbsp;</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.87)">Rippling 以及金融服务公司&nbsp;Plaid<span>&nbsp;</span></span><span style="background-color:#ffffff; color:#333333">则以&nbsp;35 万美元并列第 3 梯队。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">此外，高级工程师<span style="background-color:#ffffff; color:#333333">中薪资水平最高的也是&nbsp;Databricks，约 58.4 万美元。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="250" src="https://oscimg.oschina.net/oscnet/up-3252b2ae68be35538a3bfe9cc2c049e4d2b.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">在&nbsp;Staff Engineer 榜单中，OpenAI 以&nbsp;92.5 万美元的中位数薪资水平高居榜首。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="249" src="https://oscimg.oschina.net/oscnet/up-00368e7a50fd85c97ad3dc3b031759b550e.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">首席工程师（Principal Engineer）的中位数薪资在&nbsp;Facebook&nbsp;最高可达 102 万美元。其次为&nbsp;Stripe，有 94.07 万美元；社交媒体公司&nbsp;</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.87)">Pinterest</span><span style="background-color:#ffffff; color:#333333"> 排名第三，为 87 万美元。后续分别为 Uber (83 万美元)、苹果 (82.5 万美元)、通用汽车旗下自动驾驶子公司 Cruise&nbsp;(81.96 万美元) 以及 Airbnb (81 万美元)。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">首席工程师一般拥有 15 年以上的工作经验，通常一个公司中只有不到 3% 的员工处于这个级别，较小的公司甚至可能没有任何个人能达到这个水平。其影响力横跨整个公司，有时也横跨行业。预期完全自主运作。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="252" src="https://oscimg.oschina.net/oscnet/up-87445a536a200f32554a530a4c2f4287da4.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">从地域分布上来看，美国程序员收入最高的前三个地区依旧分别为旧金山（24.9 万美元）、西雅图（22.5 万美元）和纽约（18.5 万美元）。</span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">热门国际城市中，程序员收入最高的地区是以色列首都特拉维夫（约 13.8 万美元）。中国北京、台湾省新竹市和香港，分别以 9 万美元、6.9 万美元、6.3 万美元的薪资水平排名第 6、9、10 位。</span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="375" src="https://oscimg.oschina.net/oscnet/up-bd36f43270082eb3945728a69cb88f74bfb.png" width="300" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff; color:#333333">更多详情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.levels.fyi%2F2023" target="_blank">查看完整报告</a><span style="background-color:#ffffff; color:#333333">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 04 Jan 2024 07:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274172/2023-pay-report</guid>
            <link>https://www.oschina.net/news/274172/2023-pay-report</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[「后开源」时代已来：许可证失效、无法为普罗大众服务]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>开源运动发起人之一 Bruce Perens 最近接受《The Register》<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theregister.com%2F2023%2F12%2F27%2Fbruce_perens_post_open%2F" target="_blank">采访</a></u>，他提出了「<strong>后开源运动 (Post-Open Source movement)」</strong>概念，并表示已为此做好了准备。</p><p>Bruce Perens 解释道：「自由软件发展至今已有 50 年历史，首次宣布「开源」一词是在 30 年前。现在是时候认真审视我们一直在做的事情，看是否可以做得更好。与此同时，我们需要保护开源，因为开源将继续存在，并提供相同的规则和范式，而在开源之后出现的东西应该叫别的名字，并且永远不要试图冒充开源——我称之为<strong>后开源 (Post-Open)</strong>。」</p><blockquote><p>Bruce Perens 是 「OSD（Open Source Definition）撰写者」、「OSI （Open Source Initiative ）联合创始人」、「前 Debian 计划领导者」。<strong>via&nbsp;<em><u><a href="https://my.oschina.net/u/5324949/blog/5513567">Bruce Perens 二三事：真正的强者，剽悍的人生</a></u></em></strong></p></blockquote><p>Bruce Perens 谈到了开源社区当下亟需解决的问题，比如开源许可证目前事实上已失效 (not work)，因为企业发现了许可证的漏洞——他指出三分之一的付费 Linux 系统在销售时都规避了 GPL，导致 GPL 不再按照最初设计的意图那样运作。</p><p><img src="https://oscimg.oschina.net/oscnet/up-83a1d209495454fa6b3af4ecdcfdfa4dc9b.png" referrerpolicy="no-referrer"></p><p>他用红帽的 RHEL 举例，红帽在去年 6 月宣布<u><a href="https://www.oschina.net/news/246331/red-hat-centos-stream-sources">停止按照 GPL 要求公开 RHEL 源代码</a></u>。在 IBM 的控制下，RHEL 已成为专有产品，并停止分发免费的 Red Hat 分支 CentOS。此外，IBM 还禁止红帽客户共享红帽安全补丁的源代码。它也不允许员工按照 GPL 的要求向上游开源项目提供补丁。</p><p>对此 Bruce Perens 说道："所以我觉得，<strong>IBM 已经从开源开发者社区得到了它想要的一切，而我们却看到了他们竖的中指</strong>。"</p><p>除了许可证，Bruce Perens 认为压垮开源骆驼的另一根稻草是「<strong>开源完全无法为普罗大众服务</strong>」。</p><p>在大多数情况下，普通用户是通过私有软件公司的系统如苹果 iOS 或 Google Android 使用开源软件，两者均基于开源基础设施构建，但应用程序大多是私有的。普罗大众不了解开源，也不知道开源运动所倡导的软件自由有益于他们，然而今天的开源软件却被用于监视甚至压迫用户。</p><hr><p><strong>延伸阅读</strong></p><ul><li><a href="https://www.oschina.net/news/246788/open-source-licenses-ai" target="news">开源许可证亟需更新——摆脱 1980 年代束缚、应对人工智能</a></li><li><a href="https://www.oschina.net/news/236685/fsf-is-dying-drewdevault" target="news">自由软件基金会正在消亡</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 04 Jan 2024 06:52:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/274168/bruce-perens-post-open-source</guid>
            <link>https://www.oschina.net/news/274168/bruce-perens-post-open-source</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
