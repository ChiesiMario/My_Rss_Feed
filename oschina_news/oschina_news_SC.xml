<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 15 Feb 2024 05:03:34 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Mozilla 裁员 60 人，提升 Firefox Mobile 优先级]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start">在任命 Laura Chambers 担任临时 CEO 不到一周后，Mozilla 宣布裁员约 60 人并缩减多项产品的投资。</p><p style="color:#000000; text-align:start">Mozilla 将缩减 VPN、Relay 和 Online Footprint Scrubber 等的投资，关闭 2018 年推出的 3D 虚拟世界 Hubs，缩减对 Mastodon 实例 mozilla.social 的投资。和今天的很多科技公司类似，Mozilla 将专注于将可信赖的 AI 引入到 Firefox。</p><p style="color:#000000; text-align:start">Mozilla 在一份声明中写道：「我们正在缩减对某些产品的投资，以便将重点放在我们认为最有可能取得成功的领域。我们打算将资源重新优先用于 Firefox Mobile 等产品，因为这些产品有很大的发展机会，并能为业界建立更好的模式。」</p><p style="color:#000000; text-align:start">相关链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2024%2F02%2F13%2Fmozilla-downsizes-as-it-refocuses-on-firefox-and-ai-read-the-memo%2F" target="_blank">https://techcrunch.com/2024/02/13/mozilla-downsizes-as-it-refocuses-on-firefox-and-ai-read-the-memo</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 15 Feb 2024 02:24:18 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278738/firefox-maker-mozilla-cutting-60</guid>
            <link>https://www.oschina.net/news/278738/firefox-maker-mozilla-cutting-60</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凹语言发布 v0.9.1，支持 P5 儿童编程]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><hr><p style="margin-left:0; margin-right:0">凹语言设计的目标之一是简单易用。但是对于新接触编程的儿童教学来说依然有一定的门槛。为此开发组尝试将面向创意编程的<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fprocessing.org%2F" target="_blank">Processing</a><span>&nbsp;</span>理念引入凹语言，通过<span>&nbsp;</span><code>js/p5</code><span>&nbsp;</span>包可以轻松实现一些简单的互动创意设计。</p><p style="margin-left:0; margin-right:0">下面是来自杭州一小学三年级小学生的第一个凹语言程序：</p><p style="margin-left:0; margin-right:0"><img alt="" src="https://wa-lang.org/st0037-01.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">通过 VS Code 将以上的程序输入电脑，编译并执行的效果如下：</p><p style="margin-left:0; margin-right:0"><img alt="" src="https://wa-lang.org/st0037-02.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">程序本身也非常简单：首先通过<span>&nbsp;</span><code>import</code><span>&nbsp;</span>引入 P5 包；然后在<span>&nbsp;</span><code>init</code><span>&nbsp;</span>初始化一个长宽都是 400 的画布并设置一个灰色背景色；<code>Draw</code><span>&nbsp;</span>函数负责每一帧的绘制，根据鼠标是否按下绘制不同大小的圆形。</p><p style="margin-left:0; margin-right:0">下面是杭州一小学二年级的小学生通过一个绘制线段的程序互动的效果：</p><p style="margin-left:0; margin-right:0"><img alt="" src="https://wa-lang.org/st0037-03.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">目前<span>&nbsp;</span><code>js/p5</code><span>&nbsp;</span>包的功能还有限，我们会在小朋友学习的过程中逐步完善。希望未来每个中国的小学生都能通过我国的编程语言入门并进行日常开发。</p></div></div><div><div>
  &nbsp;
 </div></div></div>
                                    ]]>
            </description>
            <pubDate>Wed, 14 Feb 2024 09:21:14 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278688/walang-0-9-1-released</guid>
            <link>https://www.oschina.net/news/278688/walang-0-9-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 9 首个预览版发布 —— 打造面向云原生 & AI 的开发平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>微软 .NET 团队今天重磅推出 .NET 9 首个预览版，并强调称该版本重点关注<strong>针对云原生和人工智能领域的应用程序开发</strong>。当然也会在<strong>性能、生产力和安全性</strong>方面投入大量资源。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fa16ed25472b80c577b0fd4589fe48a2320.png" referrerpolicy="no-referrer"></p><p>微软称他们希望<strong>将 .NET 9 打造成云原生开发平台和工具</strong>。在过去的几年里，.NET 一直在构建强大的云原生基础设施，例如运行时性能和应用程序监控。</p><p>新版本继续往该方向前进，并将重点转向<strong>为流行的生产基础设施和服务提供便捷的使用方式</strong>，例如在 Kubernetes 中运行 .NET，以及使用托管的数据库和缓存服务（如 Redis）。微软将在 .NET 技术栈的多个层面提供这些改进。所有这些功能都会与 .NET Aspire 结合，从而降低构建云应用程序的成本和复杂性，缩短从开发到上线至生产环境的时间。</p><p>在 .NET 8 中，微软针对修剪和 AOT 优化了 Web API 应用程序（使用<code>webapiaot</code>模板）。在 .NET 9 中，他们正在积极对其他应用程序类型执行相同的操作，并改进所有 ASP.NET Core 应用程序的 DATAS GC。</p><p>除了云原生，.NET 9 的另一个重点是让 .NET 开发者更轻松地将人工智能集成到他们现有的和新的应用程序中。因此开发者可在 .NET 9 便捷地访问用于使用 OpenAI 和 OSS 模型的优秀库和文档。微软会继续在 Semantic Kernel、OpenAI 和 Azure SDK 上开展合作，以确保 .NET 开发者在构建 AI 应用程序时获得优秀的开发体验。</p><p>详情查看：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fdiscussions%2F9167" target="_blank">https://github.com/dotnet/core/discussions/9167</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fdotnet%2Four-vision-for-dotnet-9%2F" target="_blank">https://devblogs.microsoft.com/dotnet/our-vision-for-dotnet-9/</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 14 Feb 2024 07:04:41 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278672/dotnet-9-preview1</guid>
            <link>https://www.oschina.net/news/278672/dotnet-9-preview1</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FreeBSD 计划停止支持 32 位架构]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>FreeBSD 宣布了停止支持 32 位架构的未来计划：</p><ul><li><strong>FreeBSD 15.0 将不包含 armv6、i386 和 powerpc 架构</strong></li><li><strong>FreeBSD 16.0 将不包含 armv7 架构</strong></li><li><strong>v16 分支至少会一直支持在 64 位内核执行 32 位二进制文件</strong></li></ul><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-b964dcee9fc7b5c4fb099529ab79248effc.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.freebsd.org%2Farchives%2Ffreebsd-announce%2F2024-February%2F000117.html" target="_blank">https://lists.freebsd.org/archives/freebsd-announce/2024-February/000117.html</a></u></em></p></blockquote><p>FreeBSD 开发者&nbsp;<span>John Baldwin 称</span>此举是为了整合资源，他认为 32 位硬件平台正处于「市场衰退期」，而且积极支持 32 位硬件平台的开发人员也越来越少。只有在有需求并承诺增加开发者资源的情况下，FreeBSD 才会考虑延长对 32 位架构的支持。</p><p>除了逐渐停止支持现有的 32 位架构，FreeBSD 不会引入新的 32 位架构如 32 位 RISC-V。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 14 Feb 2024 05:49:06 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278661</guid>
            <link>https://www.oschina.net/news/278661</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 创始研究员 Andrej Karpathy 离职]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OpenAI 创始团队成员之一 Andrej Karpathy 宣布已从 OpenAI 离职。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2c452527d22668eb17cf65b15fdc8cf9247.png" referrerpolicy="no-referrer"></p><p>Andrej Karpathy 在社交平台写道：</p><blockquote><p>大家好，确实，我在昨天离开了 OpenAI。首先要说明的是，这并不是因为任何特别的事件、问题或是争议所导致的（不过，那些阴谋论真的挺有趣的，继续来吧:）。实际上，过去大约一年在 OpenAI 的经历非常美好——团队非常出色，同事们都非常友好，而且我们的发展蓝图充满了激动人心的前景，我相信我们都有很多值得期待的事情。我目前打算专注于我的个人项目，看看未来会有什么样的发展。那些一直关注我的朋友，可能对我接下来可能会做什么有一定的预期;) 敬请期待吧!</p><p><img src="https://oscimg.oschina.net/oscnet/up-45bb33268b7e3fcf856d0246233225ec689.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fkarpathy%2Fstatus%2F1757600075281547344" target="_blank">https://twitter.com/karpathy/status/1757600075281547344</a></u></em></p></blockquote><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theinformation.com%2Farticles%2Fopenai-researcher-andrej-karpathy-departs" target="_blank">据 Information 独家报道称</a>，Karpathy 正开发一个全新的「AI 助手」，而且与 OpenAI 的研究主管 Bob McGrew 保持着密切合作。</p><p>Karpathy 曾在特斯拉担任 AI 高级总监、自动驾驶负责人，并于 2022 年 7 月宣布离职。在特斯拉任职期间，Karpathy 主要负责 Autopilot 半自动驾驶软件的研发工作。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 14 Feb 2024 05:10:52 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278657</guid>
            <link>https://www.oschina.net/news/278657</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Strimzi 加入 CNCF 孵化器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>CNCF 技术监督委员会（TOC）投票接受 Strimzi 作为 CNCF 孵化项目。</p><p>Strimzi 专注于在 Kubernetes 上部署和运行 Apache Kafka 集群。Apache Kafka 是构建基于事件的微服务架构和实时数据流水线的领先平台，它在设计上具有水平可扩展性和容错性。在 Kubernetes 上运行 Apache Kafka 可能会很复杂，但是 Strimzi 通过使用操作器（operator）模式来减少复杂性。这包括初始安装以及升级和安全性的日常操作。</p><p>Strimzi 由 Red Hat 于 2017 年开发，并于 2019 年 8 月进入 CNCF 沙箱。该项目现在拥有来自 180 多个组织的 1600 多名贡献者，并有 15 个公开<strong>采用者</strong>在生产环境中使用 Strimzi，其中包括 Axual、Atruvia、Decathlon、LittleHorse 和 SBB 等。</p><p>「Strimzi 在使 Kafka 在 Kubernetes 上安装和管理方面做得非常出色。该项目已经发展到获得了众多生产用户的信任的程度。围绕它的社区不断壮大，并建立了处理这一增长的流程。我很高兴看到 Strimzi 进入孵化级别。」 - Matt Farina，Strimzi TOC 赞助人</p><p>「我感到非常谦卑，也为我们所创造的东西为如此多的人服务而感到自豪，我认为 Strimzi 有着光明的未来。数据流架构和 Apache Kafka 的采用率仍在以非常显著的速度增长。我们能够降低这些技术的运营成本和负担，越多的人和组织将能够从中受益。实现这一愿景还有很多工作要做，但是通过 Strimzi 成为 CNCF 孵化器的一部分，我对我们能够扩大用户群体、贡献者群体以及维护者群体的前景非常乐观。」 - Tom Bentley，Strimzi 项目创始人和维护者</p><p>「在 Kubernetes 上运行 Apache Kafka 集群并不容易，但是自成立以来，Strimzi 一直在这个领域扮演着改变者的角色。通过利用基于操作器的方法来处理日常操作负担的机会，再加上使用自定义资源利用 Kubernetes 的声明性特性，这一方法得到了广泛的认可。与用户一起，Strimzi 多年来不断发展，增加了新功能、改进和错误修复，使其稳定并适用于生产环境。社区始终是一个成功的开源项目的核心，而 Strimzi 有一个非常积极参与的社区。我非常自豪 Strimzi 被接受为 CNCF 孵化项目，因为这将使更多的人能够信任它，并看到它在在云原生环境中开发生产级数据和事件流架构方面所带来的机会。」 - Paolo Patierno，Strimzi 项目创始人和维护者。</p><p><strong>主要组件：</strong></p><p>Strimzi 提供了三种不同的操作器：</p><ul><li><p>集群操作器负责通过启动具有所需配置的代理器来部署 Apache Kafka 集群。它还负责在需要时逐个滚动代理器来处理任何 Apache Kafka 版本升级。它还支持其他操作数，如 Kafka Connect、Mirror Maker 2 等。</p></li><li><p>主题操作器负责处理主题，允许用户使用 KafkaTopic 自定义资源创建、更新和删除主题。</p></li><li><p>用户操作器负责处理集群用户和相关 ACL（在主题上定义权限）的操作，使用 KafkaUser 自定义资源进行操作。</p></li><li><p>其他附加组件提供了在 Kafka 中支持 OAuth 2.0 协议的功能，与 Kafka 集群进行基于 HTTP 的交互的端点，并通过 ConfigMap 或环境变量进行配置。</p></li></ul><p><strong>Strimzi 的重要里程碑：</strong></p><ul><li><p>4,200+ GitHub 星星</p></li><li><p>5,300+ 拉取请求</p></li><li><p>2,300+ 问题</p></li><li><p>230+ 贡献者</p></li><li><p>131 个发布版本</p></li><li><p>15 个公开生产用户</p></li><li><p>2800+位于#strimzi CNCF Slack 频道的用户</p></li></ul><p>由于使 Apache Kafka 在 Kubernetes 上以「云原生」方式运行的能力，Strimzi 与其他 CNCF 项目集成，包括 Prometheus、OpenTelemetry、KeyCloak、OPA、Helm 等。</p><p>Strimzi 不断增加新功能和功能，包括：</p><ul><li><p>完全支持基于 KRaft 的 Apache Kafka 集群，并删除了对 ZooKeeper 的依赖，还允许用户轻松从 ZooKeeper 迁移到 KRaft 模式。</p></li><li><p>更好地支持 Kafka 代理器的自动扩展。</p></li><li><p>更好地与诸如 cert-manager 之类的 TLS 证书管理工具集成。</p></li><li><p>在多个 Kubernetes 集群上运行延展的 Kafka 集群。</p></li><li><p>发布 Strimzi 1.0 版本。</p></li></ul><p>Strimzi 社区还宣布了<strong>StrimziCon</strong>，这是一个为开发人员、DevOps 工程师和解决方案架构师举办的活动，旨在了解 Strimzi 和事件流。虚拟会议将于 5 月 22 日举行，<strong>论文征集</strong>截止日期为 3 月 10 日。</p><p>作为 CNCF 托管的项目，Strimzi 是一个与其技术利益一致的中立基金会的一部分，同时也是更大的 Linux 基金会的一部分，后者提供治理、市场支持和社区外展工作。有关每个级别的成熟度要求的更多信息，可访问<strong>CNCF 毕业标准</strong>页面。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 14 Feb 2024 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278648</guid>
            <link>https://www.oschina.net/news/278648</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微软电脑管家慎用：被指会拖慢 PC 电脑速度]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>国内各类电脑管家、安全衞士见多了，连微软也开发了类似的软件——微软电脑管家。</p><p>从功能上来讲，这款软件也可以实现诸如一键为系统加速、清理缓存及磁盘空间、拦截弹窗广告、病毒查杀等功能。</p><p><img height="202" src="https://oscimg.oschina.net/oscnet/up-f5f170b353c163cbc8f58503698f7eb2a04.png" width="500" referrerpolicy="no-referrer"></p><p>不过就有外媒 Neowin 报导，指出微软电脑管家的深度清理功能，会导致电脑速度变慢，该功能会寻找用户电脑内不再需要的文件和缓存并删掉，从而释放出空间，以达致加快电脑运行速度的目的。</p><p><strong>然而结果却适得其反，深度清理这个功能会清除电脑 Prefetch 文件夹内所有文件，而电脑则需要利用这个文件夹，保存有关用户运行的应用程序信息，以便下次启动时能更快速。</strong></p><p>删除后自然就无法进行快速启动了，也就是说，存储空间和快速启动，这俩只能二选一了。</p><p>建议用户在使用类似软件时，如无特殊需要，Prefetch 文件夹尽量避免清理，以保证电脑的正常运行。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 13 Feb 2024 12:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278611</guid>
            <link>https://www.oschina.net/news/278611</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zadig vs. Jenkins 详细比对：时代的选择与开发者之选]]>
            </title>
            <description>
                <![CDATA[作为 Zadig 的创造者，我认为有必要与大家分享一份详细的比较文章。我的职业生涯伴随着工具、技术和基础设施的不断迭代，从十几年前的 TeamCity、Hudson，到 Jenkins、Travis、CircleCI 和 ...]]>
            </description>
            <pubDate>Tue, 13 Feb 2024 12:25:00 GMT</pubDate>
            <guid isPermaLink="false">Zadig vs. Jenkins 详细比对：时代的选择与开发者之选</guid>
            <link></link>
        </item>
        <item>
            <title>
                <![CDATA[Mitchell Baker 辞去 Mozilla 公司 CEO 职务]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>备受争议的 Mozilla 联合创始人 Mitchell Baker 宣布辞去 CEO 一职。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-24ada4c3707caefa6869cb60d019439e5e6.png" referrerpolicy="no-referrer"></p><p>她将继续留在 Mozilla 担任执行主席专注于战略层面：</p><ul><li>通过在社区中发表演讲和直接参与，更加一致地在公众中代表 Mozilla – 重点关注政策、开源和社区。</li><li>将 Mozilla 视为一个统一的实体——比各个部分的总和还要大，将继续加强和完善所有实体的合作方式，以更大的紧迫性和速度推进我们的政策和社区目标。</li></ul><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-fff4e4ddc2fa484029434ab29518c8734e0.png" referrerpolicy="no-referrer"></p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.mozilla.org%2Fen%2Fmozilla%2Fa-new-chapter-for-mozilla-laura-chambers-expanded-role%2F" target="_blank">https://blog.mozilla.org/en/mozilla/a-new-chapter-for-mozilla-laura-chambers-expanded-role/</a></em></p></blockquote><p>Mozilla 董事会成员、曾在 Airbnb、PayPal 和 eBay 工作过的 Laura Chambers 担任临时 CEO，负责公司运营直到找到新 CEO 为止。Baker 表示辞职是她做出的决定，以回应对互联网当前状况和公众信任的紧迫感。</p><p>Mitchell Baker 称 Laura 的重点将放在 Mozilla 公司上，主要为两个关键目标负责：</p><ol><li>未来愿景和战略：完善公司愿景并调整其背后的公司和产品战略。这将植根于 Mozilla 的使命和独特优势，并由他们对技术未来和我们在其中的作用的观点所塑造。</li><li>出色的执行力：加倍努力开发核心产品（例如 Firefox），并构建创新渠道，将引人注目的新产品推向市场。</li></ol></div>
                                    ]]>
            </description>
            <pubDate>Tue, 13 Feb 2024 03:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278569</guid>
            <link>https://www.oschina.net/news/278569</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[保护我方水晶，2024 数据库安全工具盘点]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在数据价值堪比石油的数字时代，对每个组织而言，保护这一核心资产显得尤为重要。无论是来自外部的黑客攻击和恶意软件，还是源于内部的人为失误和内鬼行为，威胁无处不在。本文将介绍几款先进的数据库安全工具，从不同维度确保数据安全。</p><ul><li>网络安全：<strong>Tailscale</strong></li><li>数据库密钥管理：<strong>Infisical</strong></li><li>按需数据库访问：<strong>Indent</strong></li><li>全方位人到数据库操作管理：<strong>Bytebase</strong></li></ul><h2>Tailscale</h2><p>Tailscale 是一种 VPN 服务，它让您能够不论身在何处，都能安全便捷地连接到自己的设备和应用。这项服务利用了开源的 WireGuard® 协议来建立加密的直连，确保只有你的私有网络内的设备才能互相通信。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c248ef0ce5c9806c26445fe197bcbb48f42.png" alt="file" referrerpolicy="no-referrer"></p><p>对于数据库应用，Tailscale 使你可以从世界任意地点安全地连接到数据库，而无需将数据库对公网开放或额外配置 SSH 隧道。</p><p><img src="https://oscimg.oschina.net/oscnet/up-6e737f7e9c19c7c8b1ee19f5dd8e0a07b38.png" alt="file" referrerpolicy="no-referrer"></p><p>Tailscale 的免费版本支持最多 3 名用户和 100 台设备，适合个人使用或小企业。如果你需要更高级的功能，如访问控制和审计日志，付费方案的价格从每月每用户 6 美元起。</p><p><img src="https://oscimg.oschina.net/oscnet/up-9f5a9eb7501069457905f4d17c6096b3850.png" alt="file" referrerpolicy="no-referrer"></p><h2>Infisical</h2><p>Infisical 是一款开源的密钥管理平台，具备端到端加密功能，专为存储、管理和在各种应用及其基础架构之间同步如 API 密钥、数据库登录信息及环境变量等敏感信息而设计。它可作为 HashiCorp Vault 和 AWS Secrets Manager 的替代方案。</p><p><img src="https://oscimg.oschina.net/oscnet/up-efccb11a9c8887cfd0dfeb73e71b21e5f8a.png" alt="file" referrerpolicy="no-referrer"></p><p>你既可以选择在自己的服务器上部署 Infisical，也可以使用其提供的云服务。</p><p>通过 Infisical，你的数据库登录信息能够被安全地保存在一个加密的存储空间里，仅在应用程序需要时才被调用，从而避免将这些信息直接嵌入到应用程序的代码或配置文件中。你可以通过 CLI、SDK、Docker、Kubernetes 或者 REST API 等多种方式来访问这些信息。</p><p><img src="https://oscimg.oschina.net/oscnet/up-ae449b1ce237cf8c2d755dc35228f6342d4.png" alt="file" referrerpolicy="no-referrer"></p><p>Infisical 的免费版本提供给最多 5 名开发人员和 3 个环境使用，满足业余爱好者的需求。如果你需要更高级的功能，如访问控制和审计日志，付费方案从每月每位开发人员 6 美元起。</p><p><img src="https://oscimg.oschina.net/oscnet/up-2d1ea3cf8e1045666d9c02621a2e5e25f92.png" alt="file" referrerpolicy="no-referrer"></p><h2>Indent</h2><p>Indent 使团队成员能够在数秒之内实现对云应用和基础架构的按需访问。这项服务被形象地比喻为一个「请求访问」按钮。</p><p><img src="https://oscimg.oschina.net/oscnet/up-2d6b0094eabe262bea970f66a21c9f05ee6.png" alt="file" referrerpolicy="no-referrer"></p><p>在数据库访问管理方面，Indent 允许你为处理客户数据的系统设置时间限制的访问权限，并能够精确控制访问的范围。它支持三种集成方式：</p><ol><li>零信任网络 (ZTN) - 如 Tailscale</li><li>身份组 - 如 Okta</li><li>自定义集成</li></ol><p><img src="https://oscimg.oschina.net/oscnet/up-f35fbc40ac93cd84dcff83e9819ad4ff48a.png" alt="file" referrerpolicy="no-referrer"></p><p>Indent 为小型团队提供了一个默认具备安全保障的免费试用版本。对于那些需要更多高级功能的用户，付费方案的起价是每个用户每月 8 美元。</p><p><img src="https://oscimg.oschina.net/oscnet/up-e271910a957ca962a453ac6f3e2e4cceb69.png" alt="file" referrerpolicy="no-referrer"></p><h2>Bytebase</h2><p>Bytebase 是一款开源的数据库 DevOps 工具，被誉为数据库管理领域的 GitLab/GitHub，它支持应用程序开发生命周期中的数据库管理。这款工具为数据库管理员（DBA）、开发人员和平台工程师提供了一个集中的网络协作平台，将 DBeaver、Liquibase、Flyway 等多种数据库工具整合在一起，方便使用。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f1b18c17c00f2a03eb67abfede9552ce6a1.png" alt="file" referrerpolicy="no-referrer"></p><p>Bytebase 旨在涵盖人与数据库在各个环节的交互，无论是变更管理、数据查询、访问控制等。凭借自动 SQL 审核、数据库持续集成/持续部署（CI/CD）、数据访问管理、数据脱敏等功能，Bytebase 确保所有数据库操作都能按照标准流程执行，并且完全可审计。</p><p><img src="https://oscimg.oschina.net/oscnet/up-fc2a3785dd735d27901d22db677437a46c0.png" alt="file" referrerpolicy="no-referrer"></p><p>在社区版计划下，你可以免费使用，支持最多 10 名用户和 5 个数据库实例。对于规模较大的中型至大型组织，企业版提供了包括数据访问管理、审计日志在内的更多高级功能。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c6439bbd59d93b65bba3da3210e50912b81.png" alt="file" referrerpolicy="no-referrer"></p><h2>Of Course</h2><p>上述介绍的每一款工具都有其特色和强项。通过了解你的特定需求，可以挑选最适合自己场景的工具。</p><hr><p>💡 更多资讯，请关注 Bytebase 公号：Bytebase</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 12 Feb 2024 15:50:04 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/11033157</guid>
            <link>https://my.oschina.net/u/6148470/blog/11033157</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中国科学院自动化研究所研发 Q 系列人形机器人系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>中国科学院自动化研究所人形机器人攻关团队研制的<strong>谱系化人形机器人 Q 系列</strong>于日前亮相。</p><p>人形机器人攻关团队在中国科学院院士、多模态人工智能系统全国重点实验室主任乔红带领下，面向国家航天、制造产业等重大需求，基于「环境吸引域」高精度作业和类脑智能机器人理论等原始创新积累，<strong>自主突破了高爆发一体化关节、AI 赋能设计、机器人大模型、类人柔顺控制等核心技术，研制了人形机器人设计组装「大工厂」，可以快速设计构建人形机器人硬件和软件系统，形成了从学术理论、关键技术到系列人形机器人研制创新链</strong>，目前已设计出多台 Q 系列人形机器人样机，初步实现了面向不同场景的技术验证。</p><p><strong>➤面向自适应室外复杂地形、抗未知干扰的需求</strong>，「大工厂」通过 AI 赋能设计构建了可实现机器人全身姿态准确跟踪与平衡控制的仿生高动态机器人 Q1，可实现室内外各种复杂地形的自适应与稳定运动的多地形适应机器人 Q2，以及可实现批量化机器人鲁棒控制与不同环境适应能力的高爆发运动机器人 Q3，并通过「大工厂」的系列化、模块化软件训练系统，为面向农田作业、野外巡逻等室外场景应用需求赋能人形机器人感认知-决策-控制智能；</p><p><strong>➤面向进一步探索人类运动特性、精准操作机理的科学研究需求</strong>，基于人类肌肉骨骼系统的肌肉非线性特性、肌肉分布特征、运动皮层-小脑-脊髓环路控制等机理，构建了可实现高柔顺、高精度运动的类人形机器人 Q4，为进一步构建机理上模拟人、性能上赶超人的新一代人形机器人奠定基础；</p><p><strong>➤面向人形机器人在室内场景完成多类任务的智能化需求</strong>，「大工厂」在机器人系统中融入自动化所自研的紫东太初多模态大模型，构建了对物理环境下机器人任务的快速、准确逻辑推理和执行的高并发推理人形机器人 Q5，可为智慧工厂作业、家庭生活服务提供重要支撑。</p><p>人形机器人「大工厂」可以充分融合智能、机构、部件、控制和决策等单元技术，快速生成各类人形机器人系统，为形成人形机器人技术标准和产业化，并在人类难以到达的环境中进行人形机器人自生产、自构建、自进化打下基础。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-962b946894124d8a3cc02a2abe7dc23e811.png" referrerpolicy="no-referrer"></p><p><em>多机器人协作</em></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d3ba6121308939361cd68c15575630993ff.png" referrerpolicy="no-referrer"></p><p><em>人机协作</em></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1173f08f5757657dfc11625f85b8741529c.png" referrerpolicy="no-referrer"></p><p><em>机器人装配</em></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-1f71506ce9569870168614179a4758675cf.png" referrerpolicy="no-referrer"></p><p><em>机器人射箭</em></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9fd9db2f5b2741665261dbd1d82a3b93b73.png" referrerpolicy="no-referrer"></p><p><em>机器人充电</em></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 12 Feb 2024 06:16:53 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278515</guid>
            <link>https://www.oschina.net/news/278515</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[EVA-CLIP-18B：性能最强的开源 CLIP 视觉大模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong><span>近日，智源视觉团队成功训练并发布世界最大最强的 CLIP 模型 EVA-CLIP-18B，拥有 180 亿参数。EVA-CLIP-18B 大幅突破了图像、视频和 3D 上的零样本识别能力</span></strong><span>，在 27 个图像分类基准测试上取得了 80.7% 的零样本准确率，这一成绩显著优于其前代模型 EVA-CLIP-5B 和 Google, Apple 等公司取得 SOTA 的其他开源 CLIP 模型。</span></p><p><span>EVA-CLIP-18B 的成功训练进一步验证了 EVA 系列 weak-to-strong 规模扩增策略的潜力和有效性。团队将公开 EVA-CLIP 18B 模型的权重和训练代码，为未来的计算机视觉和视觉-语言多模态研究提供强大的视觉基础模型。</span></p><h3><span><strong><span style="color:#0052ff">技术亮点</span></strong></span></h3><h4><span style="color:#0052ff"><strong><span style="color:#0052ff">Weak-to-strong 策略：以小教大，以弱引强</span></strong></span></h4><div><div><p><span>EVA-CLIP-18B 沿用了 EVA 系列 weak-to-strong 的视觉模型 scale up 策略，实现了视觉模型规模的渐进式扩增。该策略遵循「<strong>以小教大，以弱引强</strong>」的规模扩增思想。</span></p><p><span>具体而言，团队首先使用一个较小的 EVA-CLIP-5B 模型作为教师，以掩码图像建模为训练目标，蒸馏出一个较大的 EVA-18B 纯视觉模型。随后，EVA-18B 作为 EVA-CLIP-18B 视觉-语言对比训练中视觉编码器的初始化，帮助 EVA-CLIP 模型进一步 scale up。</span></p><p><span>研究结果表明，使用较弱的 EVA-CLIP 模型引导更大的 EVA 模型完成视觉训练，再使用得到的 EVA 模型作为更大 EVA-CLIP 训练的初始化，这种渐进式地用弱模型引导大模型的 scale up 方式，<strong>可以有效解决大型视觉模型训练中的不稳定问题，并加速模型训练收敛。</strong></span></p><p><img height="216" src="https://oscimg.oschina.net/oscnet/up-2a0718f4131f0c98941eddf277470f57c44.png" width="500" referrerpolicy="no-referrer"></p><h4><strong><span style="color:#0052ff">Scaling Behaviour</span></strong></h4><p><span>除了最大规模的 EVA- CLIP-18B 模型，团队还训练了中等规模的 EVA-CLIP-8B 模型，并在实验中设置不同规模的模型使用近乎相同规模的训练数据，考察 EVA weak-to-strong vision scaling 在扩大模型规模方面的有效性。</span></p><p><span>实验结果表明，在保持数据量几乎不变的条件下，按照 EVA weak-to-strong 方法仅对模型规模进行扩增，模型性能实现了持续、稳定地提升，验证了 EVA weak-to-strong 方法在扩大视觉模型规模方面的有效性。同时，<strong>模型性能并未呈现饱和趋势</strong>，体现了 EVA weak-to-strong 方法的潜力。</span></p><p><img alt="" height="469" src="https://oscimg.oschina.net/oscnet/up-7e4bbe03c868bc9dc72fb6e1439b8b08e8a.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#888888">EVA-CLIP 系列模型随着模型规模扩大性能变化曲线，和现存最大（InternVL-C）和最强（DFN5B）的 CLIP 模型对比</span></p><h4><strong><span style="color:#0052ff">更高的训练效率</span></strong></h4><p><span>受益于 weak-to-strong 算法在 scale up 模型方面的高效性，相比于其他 CLIP 模型，EVA-CLIP-18B 具有更高的训练效率，在 360 块 40G A100 上 600 小时完成训练。</span></p><p><span>值得注意的是，EVA-CLIP-18B 在仅仅使用 6B 训练样本的情况下，就取得了最先进的性能，而其他先进的 CLIP 模型通常需要在 10B+ 的样本上进行训练。</span></p><h4><strong><span style="color:#0052ff">有限数据规模下的无限潜力</span></strong></h4><p><span>数据集方面，EVA-CLIP-18B 模型的训练仅使用了可公开获取的 LAION-2B，COYO-700M 和少量的 LAION-COCO（仅 20M）数据集，相比于前代模型并没有对数据规模进行扩大。</span></p><p><span>值得注意的是，此前最强的 CLIP 模型——Apple 公司的 DFN-5B 是在公司私有数据集上训练的，比我们使用的公开数据集规模更大、质量更好。这进一步证明了 EVA weak-to-strong vision scaling 方法的优越性，以及 EVA-CLIP 模型在有限数据规模下的出色泛化能力。</span></p><p><span>在模型训练的最后阶段，团队引入少量视频数据（23M），显著增强了模型零样本视频分类的性能。未来通过扩大数据集规模可以进一步提升模型性能，推动 EVA-CLIP-18B 模型的性能边界。</span></p><h4><strong><span><span style="color:#0052ff">全方位最强性能的 CLIP 模型</span></span></strong></h4><p><span>相比于世界其他先进 CLIP 模型，EVA-CLIP-18B 取得了全方位的最强性能。我们的评估基准涵盖了图像分类、视频分类、图文检索领域的 33 个常用评估数据集。EVA-CLIP-18B 在 27 个图像分类的基准测试上取得了 80.7% 的零样本分类准确率，相比于此前最强的 CLIP 模型（Apple 公司 DFN-5B）取得了 1.5% 的领先。</span></p><p><img height="177" src="https://oscimg.oschina.net/oscnet/up-b6a0157fcce3637965ddcc3a5ddc712474e.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#888888">EVA-CLIP 零样本图片分类性能</span></p><p><span>在视频分类任务上，EVA-CLIP-18B 在 UCF-101、K-400/600/700 四个常用视频理解基准上进行测试。相比于最先进的 CLIP 模型，上海人工智能实验室的同期工作 InternVL，取得了平均 1.8% 的分类准确率提升。</span></p><p><img height="323" src="https://oscimg.oschina.net/oscnet/up-277e73aeebadcafbea7eac4dd4c3f939b1a.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#888888">EVA-CLIP 零样本视频分类性能</span></p><p><span>在另一项常用于 CLIP 模型评估的图文检索任务上，EVA-CLIP-18B 同样取得了世界领先的最强性能。</span></p><p><img height="183" src="https://oscimg.oschina.net/oscnet/up-d18714f14fe80b1389a0a158a0735f69469.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#888888">EVA</span><span style="color:#888888">-CLIP 零样本图文检索性能</span></p><p><span>在 3D 表示学习领域，使用和 Uni3D 一样的训练设置，我们使用更大的 EVA-CLIP 模型作为教师。实验结果表明，CLIP 教师模型的 scale up 能够对 3D 表示学习有恒定的提升作用，稳定增强模型 3D 零样本分类的性能。</span></p><p><img height="205" src="https://oscimg.oschina.net/oscnet/up-7c46b9bf029b10537b0f8b46d7b60eb76d7.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#888888">EVA-CLIP 模型增强零样本 3D 分类的性能</span></p></div></div></div>
                                    ]]>
            </description>
            <pubDate>Sun, 11 Feb 2024 11:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278472</guid>
            <link>https://www.oschina.net/news/278472</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[只有大厂才可以有 DevOps 平台吗？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-0a60a9c8b389d350d03e221249526fcd9f7.png" referrerpolicy="no-referrer"></p><p>无论公司规模大小，都由一个个业务单元组成，每个业务单元通常包含约 15 名成员左右。面对项目规模达 30-50 个微服务不等的挑战，开发者在处理工具和流程时面临巨大的困扰。工程师不仅需要专注于代码编写，还需要处理大量繁琐的集成测试、配置数据变更、发布验证等事务，平均一个工程师可能涉及到 5-10 个不同的工具和平台。相较于过去的开发模式，运维人员也需要应对更复杂的环境治理、业务和配置变更、数据变更等全场景的工程复杂性，任何一个环节出现问题都可能引发事故并损害业务。</p><p><img alt="" src="https://pic1.zhimg.com/80/v2-15d455fe7abc7d05aae1f09679a23e04_1440w.webp" referrerpolicy="no-referrer"></p><p><img alt="" src="https://pic4.zhimg.com/80/v2-29ba157e1c5010ec34af181b4945db43_1440w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h2_1"></span><h2>&nbsp;</h2><span id="OSC_h2_2"></span><h2><strong>01-团队应对之道</strong></h2><p>为了解决这一挑战，大型企业通常会专门招聘 DevOps 工程师，投入高达 500-2000 万元的费用用于建设内部平台，服务于业务开发工程师。然而，对于规模较小的企业研发团队来说，由于生存和业务发展为主，很难投入如此庞大的成本。目前，这些团队只能勉力组建工具链，这个过程中产生了大量的切换负担，并伴随着工程师协同过程中的浪费和损耗。</p><p><img alt="" src="https://pic3.zhimg.com/80/v2-0a4ba0afe0d7851c31f35a17b6fbcd16_1440w.webp" referrerpolicy="no-referrer"></p><p><img alt="" src="https://pic4.zhimg.com/80/v2-cb923b604f4ae5bedc45e62c52b58807_1440w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h2_3"></span><h2>&nbsp;</h2><span id="OSC_h2_4"></span><h2><strong>02-Zadig 如何帮助到你</strong></h2><p>Zadig 并非专为大企业设计，主要面向复杂的现代化应用交付的复杂度治理，为广义的企业开发者提供简单易用的协同平台。<strong>无需从零开始，站在 Zadig 之上</strong>，即可轻松构建高效的工程能力。经过大量工程师调研，我们识别出最具性价比的 Zadig X 增强包功能，并将其集成成全新的「专家版」正式发布！</p><p><img alt="" src="https://pic2.zhimg.com/80/v2-27dbeba82f6cf65a4c57f0a7da19b2e1_1440w.webp" referrerpolicy="no-referrer"></p><p><img alt="" src="https://pic1.zhimg.com/80/v2-e6206de06aea2f63691ceddea46e3268_1440w.webp" referrerpolicy="no-referrer"></p><p><img alt="" src="https://pic2.zhimg.com/80/v2-f0325fa7e9314bec060e1eb3b345100d_1440w.webp" referrerpolicy="no-referrer"></p><p>专家版特别适用于迫切需要升级研发工具链、提升 DevOps 能力以迎接业务快速变化挑战的团队。通过「专家版」，团队将享受到一站式、一键式极致开发者体验，全流程工程能力将使从需求到高效发布的过程更加顺畅。这个版本的推出不仅适用于规模约 30 人左右的研发组织或团队，同样也欢迎大公司内的各个业务单元参与体验。是时候让您的团队迎接全新研发体验了！</p><p><img alt="" src="https://pic2.zhimg.com/80/v2-8e8166a0f46cfaf4c445a72daf73da45_1440w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h2_5"></span><h2><strong>03-他们都用上了 Zadig</strong></h2><p><img alt="" src="https://pic4.zhimg.com/80/v2-c1136c3cd4e42254da043e6dbe14435f_1440w.webp" referrerpolicy="no-referrer"></p><p><img alt="" src="https://pic1.zhimg.com/80/v2-2a482b79663cee463aabf37a489b23fc_1440w.webp" referrerpolicy="no-referrer"></p><p><img alt="" src="https://pic4.zhimg.com/80/v2-cbb59027d178653b4a856e58640fd347_1440w.webp" referrerpolicy="no-referrer"></p><p><img alt="" src="https://pic1.zhimg.com/80/v2-1803d9531f94583c37b7ab548b7864d0_1440w.webp" referrerpolicy="no-referrer"></p><p><img alt="" src="https://pic1.zhimg.com/80/v2-82b01de42c99d08a42813897b1f1311c_1440w.webp" referrerpolicy="no-referrer"></p><p><img alt="" src="https://pic2.zhimg.com/80/v2-e43d318d5b12c57482dceb0575815159_1440w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h2_6"></span><h2><strong>04-如何升级专家版？</strong></h2><ol><li>如果您是社区开源用户目前正式使用 Zadig V1.x.0 版本，官方将免费帮助你升级到更强的 V2.0 架构版本，只需输入专家版授权激活，系统将自动平滑升级切换至专业级功能。</li><li>对于尚未安装 Zadig 的用户，购买后您将获官方运维工具，专家辅助完成安装升级，即可获得 Zadig 专家版的卓越功能。</li><li>如果您要试用专家版，官方提供了 30 天的免费试用授权，同时支持随时一键切回基础版，继续免费使用 Zadig；</li></ol><span id="OSC_h2_7"></span><h2>&nbsp;</h2><span id="OSC_h2_8"></span><h2><strong>05-如何购买 Zadig 专家版？</strong></h2><ol><li>专家版支持按月、按实际使用的工程师人数灵活支付，确保您的团队能够精确控制开支；</li><li>若购买后使用不如预期，请告诉我们您的建议，我们将提供全额退款服务。用出价值才是我们最大的追求！</li></ol><span id="OSC_h2_9"></span><h2>&nbsp;</h2><span id="OSC_h2_10"></span><h2><strong>06-免费培训机会</strong></h2><p>担心搭建过程复杂？针对首次购买专家版一年以上的团队，我们提供了价值 6000 元的原厂公益培训，每个团队都享有 1 个免费名额，可参加由 Zadig 团队骨干工程师和产品技术专家亲自授课的一整天线下教学培训。培训内容全面涵盖云原生 DevOps、Zadig 系统管理员培训以及项目搭建等关键主题。这是您顺利启动 Zadig 专家版的绝佳机会，无需担心搭建复杂性，我们将帮助您快速上手。</p><p><img alt="" src="https://pic3.zhimg.com/80/v2-7ede7368de5caa7adaceac29ec821e56_1440w.webp" referrerpolicy="no-referrer"></p><p>Zadig 自开源到现在，在国内广泛采用，企业安装总量近 3 万，每日高频使用人数接近 15 万，全球累计部署应用数量更是高达 50 万。Zadig 正在逐渐成为各行各业领先企业数字化软件研发的新标配，助力包括字节、腾讯、阿里、华为、联通、极氪、壳牌、小鹏、理想等 3000 多家企业迅速实现产研数字化进化。</p><p><img alt="" src="https://pic2.zhimg.com/80/v2-f1079616bfc8bc5e9ed8abccbd9d7cfd_1440w.webp" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">立即体验 Zadig V2.0 新架构，开启高效交付之旅！🚀&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968">Zadig 开放，链接，专业</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-16e6b25cd9b3c92bc711c17b21e99e9b040.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491441%26idx%3D1%26sn%3D3eb5d7125489434ff567d60ae48ef5e5%26chksm%3Dcfb453d1f8c3dac7a9ba2de20d6d8d37f94ea5a0812030843cde5d9512bd93deb208073ff1bf%26token%3D2032062673%26lang%3Dzh_CN%23rd" target="_blank">阅读原文</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank">Zadig 在 Github</a>&nbsp;/&nbsp;<a href="https://gitee.com/koderover/zadig">Zadig 在 Gitee</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>推荐阅读 :&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491363%26idx%3D1%26sn%3Dd6ccb8938f4702f560f28d5b79324cf3%26chksm%3Dcfb45383f8c3da9540c0c3eb1080f729fa2545db2063159b5fb05ddeb818f082e21adb2f9189%26scene%3D21%23wechat_redirect" target="_blank">Zadig 支持 Android、iOS App 自动化发布了</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491329%26idx%3D1%26sn%3D1a729186b2b5ca733c578ee8b288e823%26chksm%3Dcfb453a1f8c3dab74fb1118ac1c95aa898437a8f786385b21e0b0799d6da4eda9101acb626c0%26scene%3D21%23wechat_redirect" target="_blank">Zadig 深度集成 Apollo 实现跨环境配置的一致性传递</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491437%26idx%3D1%26sn%3D4bfa94daef9e61087984cb2ab9e9a6d9%26chksm%3Dcfb453cdf8c3dadbaabff32876f84646767db645228c14c84279b706139db4de6081ed4376e6%26scene%3D21%23wechat_redirect" target="_blank">基于 Istio + Zadig，零负担实现云原生全链路灰度发布</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490637%26idx%3D1%26sn%3D6e0498b37fb15f8b8903c4997e5611d8%26chksm%3Dcfb450edf8c3d9fb758d691081f09fd85d91dbb17534ba9c18c2300725462d3806581efbd237%26scene%3D21%23wechat_redirect" target="_blank">Zadig vs. Jenkins 详细比对：时代的选择与开发者之选</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491336%26idx%3D1%26sn%3D805f7d2c44c96cab529ffef120d84ca0%26chksm%3Dcfb453a8f8c3dabe83163a873135f2a72cdddcb9faeecefe5e40f20a358681304484c56cce51%26scene%3D21%23wechat_redirect" target="_blank">ZADIG 专家版倾情上线：一键高效发布，119 元/人月起，社区老友享年终福利！</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 11 Feb 2024 11:30:18 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/10560378</guid>
            <link>https://my.oschina.net/koderover/blog/10560378</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Java 工具集 Hutool-5.8.26 发布，祝大家龙行龘龘]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://static.oschina.net/uploads/img/201803/21114512_tLDC.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhutool.cn%2F" target="_blank">https://hutool.cn/</a></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="background-color:#f6f6f6">Hutool</span><span style="background-color:#ffffff; color:#40485b"><span></span>是一个功能丰富且易用的</span><strong><span></span>Java 工具库</strong><span style="background-color:#ffffff; color:#40485b">，通过诸多实用工具类的使用，旨在帮助开发者快速、便捷地完成各类开发任务。 这些封装的工具涵盖了字符串、数字、集合、编码、日期、文件、IO、加密、数据库 JDBC、JSON、HTTP 客户端等一系列操作， 可以满足各种不同的开发需求。</span></p><hr><p>首先恭喜我们 Hutool 的核心维护者阿超登上 Gitee 封面了，希望大家留言多支持哦~~</p><p>传送门：<a href="https://gitee.com/gitee-stars/33">https://gitee.com/gitee-stars/33</a></p><p><a href="https://gitee.com/gitee-stars/33"><img alt="people" src="https://foruda.gitee.com/images/1706088551426356220/84ca3f89_1850385.jpeg" referrerpolicy="no-referrer"></a></p><p>其次值此新年之际，我代表 Hutool 全体维护者，祝大家 😍龙行龘龘😍前程朤朤😍生活䲜䲜😍事业燚燚。</p><p>今天大年初一，我们发布了 5.8.26 和 6.0.0-M11，新年一如既往提交代码，修复 bug，服务用户~~ 此次更新依旧是常规 bug 修复哦，主要更新如下：</p><h2>5.8.26(2024-02-10)</h2><h4>新特性</h4><ul><li>【db 】 RedisDS 增加 user 支持（issue#I8XEQ4@Gitee）</li><li>【core 】 MapUtil 增加 partition 方法（pr#1170@Gitee）</li><li>【core 】 增加 Version 类（issue#I8Z3VE@Gitee）</li></ul><h4>Bug 修复</h4><ul><li>【crypto】 修复 BouncyCastleProvider 导致 graalvm 应用报错 UnsupportedFeatureError（pr#3464@Github）</li><li>【http 】 修复 UserAgentUtil 对 QQ 浏览器识别问题（issue#I8X5XQ@Gitee）</li><li>【core 】 修复 BeanToMapCopier 获取类型数组越界问题（issue#3468@Github）</li><li>【extra 】 修复 SshjSftpSession 关闭导致的问题（issue#3472@Github）</li><li>【http 】 修复 HtmlUtil.removeHtmlAttr 处理空格问题（issue#I8YV0K@Gitee）</li><li>【core 】 修复 CollUtil.containsAll 在 coll2 长度大于 coll1 时逻辑歧义问题（issue#I8Z2Q4@Gitee）</li><li>【poi 】 修复当 sheetName 不存在时，ExcelUtil.getReader 方法不会释放文件问题（issue#I8ZIQC@Gitee）</li><li>【crypto】 通过添加系统属性 hutool.crypto.decodeHex 强制关闭 hex 识别以解决 hex 和 Base64 歧义问题（issue#I90M9D@Gitee）</li><li>【core 】 修复 VersionComparator 违反传递问题（issue#I8Z3VE@Gitee）</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 10 Feb 2024 13:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278427/hutool-5-8-26-released</guid>
            <link>https://www.oschina.net/news/278427/hutool-5-8-26-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DevOps 选型指南：Zadig / 云效 / Coding/Jenkins/GitLab/Argo/Tekton]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#191b1f; margin-left:0px; margin-right:0px; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b31aff555046a4c349e6e088370a204b798.png" referrerpolicy="no-referrer"></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">打造一个功能全面、稳定且用户体验友好的 DevOps 平台对于推动持续集成、持续交付、团队协作和效率提升至关重要。企业在选择 DevOps 平台时，有的倾向于采用平台类产品，如 Zadig、云效、Coding 等；而另一些企业则基于企业文化和项目需求，在已有的 CI/CD 工具（如 Jenkins、GitLab、Argo、Tekton）基础上自建 DevOps 平台，以实现对企业内部 DevOps 方案的定制。无论是选择平台类产品还是自建平台，都需要在搭建之前进行充分的规划和评估，以确保满足企业的需求并提升 DevOps 实践的效率。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">本文将详细分析各个 DevOps 平台和工具的设计理念、特点、局限性等，并从多个维度（团队规模和业务复杂度、多云策略和厂商关联、使用场景和业务需求等）出发，结合企业实际的业务需求给出建议，为企业 DevOps 选型指明方向。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h2_1"></span><h2><strong>DevOps 平台类产品</strong></h2><span id="OSC_h3_2"></span><h3><em><strong>Zadig</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Zadig 是由 KodeRover 公司基于 Kubernetes 研发的自助式云原生 DevOps 平台，服务端源码 100% 开放。Zadig 提供灵活可扩展的工作流支持、多种发布策略编排以及一键安全审核等特性。该平台还支持定制的企业级 XOps 敏捷效能看板，深度集成多种企业级平台，并通过项目模板化批量快速接入，实现数千个服务的一键纳管治理。其主要目标是帮助企业实现产研的数字化转型，使工程师成为创新引擎，并为数字经济的无限价值链接提供支持<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.koderover.com" target="_blank">[1]</a>。</p><span id="OSC_h4_3"></span><h4><strong>01-Zadig 具有以下几个核心特性：</strong></h4><ul><li>灵活易用的高并发工作流</li><li>面向开发者的云原生环境</li><li>高效协同的测试管理</li><li>强大免运维的模板库</li><li>安全可靠的发布管理</li><li>稳定高效的客户交付</li><li>客观精确的效能度量</li><li>云原生 IDE 插件</li></ul><span id="OSC_h4_4"></span><h4><strong>02-Zadig 的核心优势：</strong></h4><ul><li>设计理念：产品级交付，包含代码、配置、数据全要素的交付</li><li>底座真云原生架构：Zadig 基于 k8s 底座，支持较高规模的构建部署并发、多个微服务同时交付场景</li><li>用户接入难度低：Zadig 支持导入和托管现有服务，并对现有流程几乎无侵入极简、开放，易于企业内落地，不需要改变用户行为</li><li>产品可用性较强：3 年开源、大量一线真实场景高频使用打磨，积众家之所长，积累 15 万企业开发者，全球累计部署 50 万应用，2000 家企业高频使用，稳定可靠保证，内置众多最佳实践工作模式</li><li>产品开放性较强：天生支持企业私有化部署，支持全球多地部署、分布式交付分发，针对具有全球化战略的企业更为友好</li></ul><span id="OSC_h4_5"></span><h4><strong>03-Zadig 的局限性：</strong></h4><ul><li>设计理念和其他 DevOps 平台存在不同，初次接触的用户需要一定时间学习和掌握</li><li>系统依赖 K8s，对于对于未采用 K8s、完全处于传统主机环境的企业项目而言并不适用</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_6"></span><h3><em><strong>云效</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">云效是阿里云提供的一站式 DevOps 平台，提供涵盖软件研发全生命周期的研发工具链和研发管理服务，并支持公共云、专有云多种部署形态。通过云原生新技术和研发新模式，助力创新创业和数字化转型企业快速实现研发敏捷和组织敏捷，打造「双敏」组织，实现多倍效能提升<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F153739.html" target="_blank">[2]</a>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">云效具有项目协作、代码管理、流水线、制品仓库、测试管理、应用交付平台、效能洞察等核心能力。</p><span id="OSC_h4_7"></span><h4><strong>01-云效主要特点：</strong></h4><ul><li>开箱即用</li><li>企业级安全保障</li><li>实践经验模板化沉淀</li><li>无缝对接阿里云产品</li></ul><span id="OSC_h4_8"></span><h4><strong>02-云效的局限性：</strong></h4><ul><li>系统比较厚重，迁移成本比较高</li><li>耦合度较高，跟阿里云产品深度绑定，对于多云架构的支持不够友好</li><li>对于非阿里云工具链的扩展较困难</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">云效与其他平台在设计理念上存在显著差异，云效专注於单应用的交付，将环境管理能力主要集中在应用维度。云效流水线以代码库为主要视角，随着业务增长，流水线数量迅速增加，配置管理难度加大，所以云效更适用于初期快速启动 DevOps 的场景。云效天然亲和阿里云资源和产品，对于多云需求或全球交付需求的企业而言，接入云效可能面临一定的适应难度。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_9"></span><h3><em><strong>Coding</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Coding DevOps 是面向软件研发团队的一站式研发协作管理平台，提供从需求到设计、开发、构建、测试、发布到部署的全流程协同及研发工具支撑<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcoding.net%2Fhelp%2Fdocs%2Fstart%2Fnew.html" target="_blank">[3]</a>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Coding 具有团队管理、项目协同、代码仓库、代码扫描、持续集成、持续部署、应用管理等核心能力</p><span id="OSC_h4_10"></span><h4><strong>01-Coding 主要特点：</strong></h4><ul><li>一站式协作平台及研发工具链</li><li>支持双态研发体系建设（瀑布模型、敏捷模型）</li><li>项目度量数据可视化</li><li>无缝集成第三方平台</li></ul><span id="OSC_h4_11"></span><h4><strong>02-Coding 的局限性：</strong></h4><ul><li>以代码库为核心的工作流，管理成本较高</li><li>现有工程体系迁移有一定的成本</li><li>耦合度较高，跟腾讯云产品深度绑定，对于多云架构的支持不够友好</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">和其他平台的定位上存在不同，Coding 是流程协同平台，一站式为开发者提供完整的 DevOps 工具链。由于其天然亲和腾讯云资源和产品，对于存在多云架构以及现有业务由其他云平台支撑的场景不够友好。在接入 Coding 过程中，需要做服务的初始化，有一定迁移成本。此外，Coding 构建和部署为两个单独的模块，对于习惯在一条工作流走完所有流程（构建、部署、测试、配置变更、数据变更等）的用户，可能需要重新适应或者调整使用方式。</p><span id="OSC_h2_12"></span><h2>&nbsp;</h2><span id="OSC_h2_13"></span><h2><strong>DevOps 工具类产品</strong></h2><span id="OSC_h3_14"></span><h3><em><strong>Jenkins</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Jenkins 是一款开源、可扩展的自动化构建和交付工具。其设计初衷是为了满足不同团队和项目的需求，提供高度可扩展和灵活的平台。通过插件和扩展，Jenkins 赋予开发团队持续集成和交付的能力，帮助实现软件开发的自动化、协作和快速交付<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jenkins.io%2Fdoc" target="_blank">[4]</a>。</p><span id="OSC_h4_15"></span><h4><strong>01-Jenkins 的主要特点：</strong></h4><ul><li>扩展性非常强，有大量的插件支持</li><li>分布式构建</li><li>流水线项目 pipeline as code 支持在代码仓库中管理</li></ul><span id="OSC_h4_16"></span><h4><strong>02-Jenkins 的局限性：</strong></h4><ul><li>系统本身安装过程不复杂，但对于插件管理非常繁琐</li><li>项目实施难度大，所有任务都需要写脚本，维护成本高</li><li>Jenkinsfile 分散到不同的工程中，对于后期维护成本比较高</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">对用户而言，Jenkins 需依赖众多插件和大量脚本来解决业务交付过程中的构建、部署、测试和自动化流程串接的难题。对于云原生的场景而言需要通过脚本的方式来操作集群，对脚本维护和管理要求比较高。此外 Jenkins 通过插件来管理工作流的权限，权限管理负担较重。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Zadig 和 Jenkins 的比对请参阅 「<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490637%26idx%3D1%26sn%3D6e0498b37fb15f8b8903c4997e5611d8%26chksm%3Dcfb450edf8c3d9fb758d691081f09fd85d91dbb17534ba9c18c2300725462d3806581efbd237%26scene%3D21%23wechat_redirect" target="_blank"><span style="color:#5f9cef">Zadig vs. Jenkins 详细比对：时代的选择与开发者之选</span></a>」一文。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_17"></span><h3><em><strong>GitLab CI/CD</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">GitLab 是一个基于 Git 的版本控制和协作平台。它提供了一套强大的工具，支持团队协作、代码托管、持续集成、持续交付等软件开发过程中的多个方面<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.gitlab.com%2Fee" target="_blank">[5]</a>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">GitLab 具有代码仓库管理、CI/CD 流水线、效能管理、敏捷项目管理、集成其他工具等核心能力。</p><span id="OSC_h4_18"></span><h4><strong>01-GitLab 的主要特点：</strong></h4><ul><li>一站式管理 DevOps 工具</li><li>自动化工作流程加速软件交付</li><li>与云厂商解耦</li></ul><span id="OSC_h4_19"></span><h4><strong>02-GitLab 的局限性：</strong></h4><ul><li>As code 工作流配置不直观，学习和维护成本较高</li><li>缺少基本环境管理能力，需另外搭建其他平台观测服务的情况</li><li>多角色协同过程中，权限管理比较难，需要给运维测试代码仓库权限才能做 CI/CD，风险较大</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">GitLab CI/CD 设计理念是以代码仓库为核心，对于小型项目、单仓库顺序交付的场景较为友好，而对于更为复杂的项目和团队多角色协作，使用方面和管理上存在一定局限性。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_20"></span><h3><em><strong>Argo</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Argo 是一个基于 Kubernetes CRD 实现的一个开源工具，基于 Kubernetes 的调度能力实现了工作流的控制和任务的运行。同时提供了一个 UI 方便用户查看任务的详情<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fargoproj.github.io" target="_blank">[6]</a>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Argo 有三个核心产品 Workflows 、CD、Rollouts，为持续集成、持续交付、持续部署提供底层能力。</p><ul><li>Workflows：云原生工作流引擎，支持编排构建、测试、部署等场景，支持声明式地管理复杂任务的执行流程</li><li>CD：基于 GitOps 的理念实现自动化部署、回滚和版本管理</li><li>Rollouts：用于实现 Kubernetes 上的蓝绿发布、金丝雀发布、渐进式发布等发布策略，确保生产发布的稳定性</li></ul><span id="OSC_h4_21"></span><h4><strong>01-Argo 的局限性：</strong></h4><ul><li>声明式的配置，维护和管理成本较高</li><li>本身提供的 Web UI 无法企业级安全性和合规性要求</li><li>适用 K8s 场景，对于传统主机场景并不适用</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">尽管 Argo 在云原生工作流引擎方面表现卓越，但对于完整的 DevOps 解决方案仍有欠缺，缺乏一系列企业管理功能，如环境管理、测试管理和权限控制，因此企业可能需要二次开发以建设相应的管理能力，以满足多角色协作的需求。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_22"></span><h3><em><strong>Tekton</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Tekton 是一个谷歌开源的基于 Kubernetes 的云原生 CI/CD 框架，通过定义 CRD 的方式，让用户可以灵活的自定义流水线以满足自身 CI/CD 需求<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftekton.dev%2Fdocs" target="_blank">[7]</a>。</p><span id="OSC_h4_23"></span><h4><strong>01-Tekton 的主要特点：</strong></h4><ul><li>高度抽象底层，方便企业定制工作流程</li><li>与云原生环境无缝对接</li><li>跨云厂商、技术栈和部署环境，帮助实现标准化的 CI/CD</li></ul><span id="OSC_h4_24"></span><h4><strong>02-Tekton 的局限性：</strong></h4><ul><li style="color: rgb(25, 27, 31); margin-left: 0px; margin-right: 0px; text-align: start;">适用 K8s 场景，对于传统主机场景并不适用</li><li style="color: rgb(25, 27, 31); margin-left: 0px; margin-right: 0px; text-align: start;">自定义资源，有一定的学习成本</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Tekton 注重底层灵活性，尽管灵活性强，但也显著增加了使用的难度。因此，要在 Tekton 上实现完整的 CI/CD 过程，就必须进行二次开发，门槛高，需要消耗一定建设成本。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h2_25"></span><h2><strong>各平台和工具之间的比较</strong></h2><div><img src="https://pic1.zhimg.com/80/v2-5bae69be9f8a1aa5fe51311b1f0fd99c_1440w.webp" referrerpolicy="no-referrer"></div><span id="OSC_h2_26"></span><h2>&nbsp;</h2><span id="OSC_h2_27"></span><h2><strong>DevOps 体系选型建议</strong></h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">企业在选择 DevOps 平台时，可以从多个角度进行考量，具体选择取决于企业的需求、文化和项目特点。以下是一些建议：</p><span id="OSC_h4_28"></span><h4><strong>01-团队规模和业务复杂度：</strong></h4><ul><li><strong>小型团队：</strong>适用于业务相对简单，研发为主的团队，可考虑选择 GitLab 方案，以代码管理作为入口，开启 GitLab CI/CD 功能，适用于强调全方位版本控制的企业。</li><li><strong>中型企业：</strong>对于复杂业务、多角色协作的情况，可选择一站式平台，如云效、Coding、Zadig，提供开箱即用的协作工具链。</li><li><strong>大型团队：</strong><span>&nbsp;</span>针对复杂场景、历史负担重的团队，建议选择功能全面、灵活可扩展的平台，如 Zadig，适用于复杂的异构环境交付流程和大规模的微服务架构。</li></ul><span id="OSC_h4_29"></span><h4><strong>02-多云架构及全球化战略需求：</strong></h4><ul><li><strong>多云架构需求：</strong>若企业有多云和全球化战略，首选 Zadig。它天然支持企业私有化部署，厂商中立，友好支持多云架构，并满足国际化政策需求（i18n、出海合规等）。</li><li><strong>特定云服务需求：</strong><span>&nbsp;</span>对于已深度关联某一云厂商的企业，可考虑选择该厂商提供的平台，如云效（阿里云关联）或 Coding（腾讯云关联）。</li></ul><span id="OSC_h4_30"></span><h4><strong>03-使用场景和业务需求：</strong></h4><ul><li><strong>全生命周期管理需求：</strong>若企业需全面管理全流程，可选择 Coding、云效提供的一站式协作平台。Zadig 平台侧重于研发和发布侧的一站式协同，需结合第三方实现业务到研发的衔接。</li><li><strong>云原生和微服务需求：</strong><span>&nbsp;</span>针对云原生和微服务架构，Zadig 提供灵活可扩展的工作流支持，适合大规模的构建、部署并发和产品级交付。</li><li><strong>传统单体业务：</strong>对于传统的单体业务，Jenkins 是一个灵活且支持强大插件的选择，满足基本的构建部署需求。</li><li><strong>K8s 生态需求：</strong>Argo 是专注于 Kubernetes GitOps 持续交付工具，适用于新兴企业没有历史负担的情况。</li></ul><span id="OSC_h4_31"></span><h4><strong>04-DevOps 平台建设成本考量：</strong></h4><ul><li><strong>围绕 CI/CD 工具自建平台成本估算：</strong>围绕 Jenkins、Tekton、Argo 工具搭建 DevOps 流程串接管理平台，需要组建跨职能、有丰富 DevOps 经验的团队，人力成本预估至少 300 万元/每年。</li><li><strong>直接购买商业 DevOps 平台成本估算：</strong>直接使用云厂商公有云或采用 Zadig 私有化 DevOps 平台。成本根据团队规模不同在 5 万元-20 万元/每年，可与供应商商谈获取更有竞争力的报价。</li><li><strong>开源商业产品与自研结合成本估算：</strong>针对 200 人以上团队，推荐选择 Zadig 作为自研平台的底层「平台工程」框架，结合自身业务进行定制开发。总体成本预估在 50 万元/每年左右，相较于从零开始搭建团队，采用 Zadig 可在成本上更具优势，同时满足企业特定需求。</li></ul><span id="OSC_h4_32"></span><h4><strong>05-数据的安全与合规考量：</strong></h4><ul><li><strong>下公有云、上行业云：</strong>随着技术发展和政企数字化的深入，数据已成为组织中最核心的资产。数据的安全与合规已经成为国内越来越多组织的核心关注点。在这个背景下，将核心的生产过程及数据从公有云转移到行业私有云，已成为刻不容缓的时代需求。Zadig 作为提供标准私有模式的 DevOps 平台可以直接对接自建云、私有云，通过云原生技术架构迭代业务的同时又能满足数据本地化安全管理的诉求。</li></ul><span id="OSC_h4_33"></span><h4><strong>06-原厂实施考虑因素：</strong></h4><ul><li><strong>专业支持和最佳实践需求：</strong>如果企业注重由产品开发者提供的专业支持和最佳实践，以降低试错成本和减少建设周期，可优先考虑 Zadig 作为原厂实施的选择。云效和 Coding 生态伙伴实施，提供的技术支持和最佳实践可能受制于生态伙伴的服务范围和能力。</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">后续将推出云效、Coding 等平台与 Zadig 之间详细对比文章，提供更全面的选型分析。敬请期待！</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h2_34"></span><h2>参考链接：</h2><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[1] Zadig 官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.koderover.com" target="_blank"><span style="color:#5f9cef">https://docs.koderover.com</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[2] 云效官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F153739.html" target="_blank"><span style="color:#5f9cef">https://help.aliyun.com/document_detail/153739.html</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[3] Coding 官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcoding.net%2Fhelp%2Fdocs%2Fstart%2Fnew.html" target="_blank"><span style="color:#5f9cef">https://coding.net/help/docs/start/new.html</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[4] Jenkins 官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jenkins.io%2Fdoc" target="_blank"><span style="color:#5f9cef">https://www.jenkins.io/doc</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[5] GitLab 官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.gitlab.com%2Fee" target="_blank"><span style="color:#5f9cef">https://docs.gitlab.com/ee</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[6] Argo 官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fargoproj.github.io" target="_blank"><span style="color:#5f9cef">https://argoproj.github.io</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[7] Tekton 官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftekton.dev%2Fdocs" target="_blank"><span style="color:#5f9cef">https://tekton.dev/docs</span></a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">立即体验 Zadig V2.0 新架构，开启高效交付之旅！🚀&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968">Zadig，让工程师更加专注创造</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-16e6b25cd9b3c92bc711c17b21e99e9b040.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491542%26idx%3D1%26sn%3D007a0329060f75cd6daa225fb4c3ed0e%26chksm%3Dcfb45376f8c3da6052fc628ed3083e2c27aa6f64b0b4efb8ee6473e663d62b91de05d7d067c4%26token%3D2032062673%26lang%3Dzh_CN%23rd" target="_blank">阅读原文</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank">Zadig 在 Github</a>&nbsp;/&nbsp;<a href="https://gitee.com/koderover/zadig">Zadig 在 Gitee</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>推荐阅读 :&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491527%26idx%3D1%26sn%3D6024fc78adfb92892c170ecc41704e3a%26chksm%3Dcfb45367f8c3da71eff88b1220aef48e5de6ff54788bff81012906443f135e77a99df07f265a%26scene%3D21%23wechat_redirect" target="_blank">Zadig v2.1.0 版本发布：工作流与环境全面协同升级！</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490637%26idx%3D1%26sn%3D6e0498b37fb15f8b8903c4997e5611d8%26chksm%3Dcfb450edf8c3d9fb758d691081f09fd85d91dbb17534ba9c18c2300725462d3806581efbd237%26scene%3D21%23wechat_redirect" target="_blank">Zadig vs. Jenkins 详细比对：时代的选择与开发者之选</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491499%26idx%3D1%26sn%3D0bf38f5bde35f9f0aec0cedca79d74b4%26chksm%3Dcfb4530bf8c3da1d9e9aad6af00d150be6ffd231a3e7801512cb8b749746e3c8ceca2feafadd%26scene%3D21%23wechat_redirect" target="_blank">探索 Zadig 自测模式，一套环境多人协同，释开发者创造力！</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491474%26idx%3D1%26sn%3D5f7c40d430e16fcbfa69104c4a46a797%26chksm%3Dcfb45332f8c3da247c792998c84b0885a3b40a534cfd2011e0e7ea30a51cadeeabb37fdba14d%26scene%3D21%23wechat_redirect" target="_blank">阿里云 MSE + Zadig，面向开发者的全链路灰度发布解决方案</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491336%26idx%3D1%26sn%3D805f7d2c44c96cab529ffef120d84ca0%26chksm%3Dcfb453a8f8c3dabe83163a873135f2a72cdddcb9faeecefe5e40f20a358681304484c56cce51%26scene%3D21%23wechat_redirect" target="_blank">ZADIG 专家版倾情上线：一键高效发布，119 元/人月起，社区老友享年终福利！</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 10 Feb 2024 02:53:48 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/10926966</guid>
            <link>https://my.oschina.net/koderover/blog/10926966</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CubeFS 2023 年度总结]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>CubeFS 在过去的一年中推出了许多新特性，特别是在可靠性和稳定性方面进行了大量修复和优化。与此同时，过去的一年也被称为大模型元年，CubeFS 为大模型推出了高性能客户端缓存，以支撑 AI 训练及混合云场景。值此新春佳节来临之际，我们对过去一年进行总结盘点，并展望未来一年的规划目标。</p><h4><strong>PART.1 产品迭代</strong></h4><p>在过去的一年中，CubeFS 社区共发布了三个版本，每个版本都有很多令人期待的变化。其中，3.2.1 版本和 3.3.0 版本的优化较大，修复了许多稳定性问题，并引入了一些重要的新特性，如原子性、配额、对象存储增强和纠删码架构简化。3.3.1 版本也推出了许多优化和实用的特性，比如回收站、服务端审计和垃圾清理工具。此外，这个版本还通过了 CNCF 的安全审计，在系统安全方面取得了重要进展。让我们来总结一下这些相关特性：</p><p><strong>系统特性</strong></p><ul><li>posix 接口原子性：统一解决分布式场景下数据、元数据多步多节点操作一致性问题，减少文件操作异常，提高可用性、可靠性。</li><li>回收站：解决经常出现的用户大规模误删除问题。</li><li>目录联合配额：解决如存储混用卷的目录统计进而解决容量限制、计费。</li><li>客户端缓存加速：AI 端侧公有云场景使用。</li><li>审计：客户端和服务端审计功能，追踪文件操作。</li><li>系统冻结（禁用卷）：秒级响应业务，解决用户误操作、恶意操作。</li></ul><p><strong>纠删码子系统</strong></p><ul><li>AzureLRC：支持 AzureLRC，AzureLRC+1 支持多机房坏 g+1 块盘的特性。</li><li>Proxy 缓存：Proxy 缓存卷和磁盘信息（去除 memcache），Proxy 卷分配优化。</li><li>Scheduler 支持 Kafka 消费组，支持可配置地并发批量删除 Blob。</li><li>Blobnode Qos 磁盘限速优化，支持单盘读写线程限制。</li><li>优化数据巡检流程，支持动态调整速率、动态开关控制。</li><li>审计日志 Filter：审计日志新增功能更强的 Filter 过滤器。</li></ul><p><strong>对象子系统</strong></p><ul><li>兼容性增强：修复 S3 接口历史兼容性问题，提高 objnode 稳定性。</li><li>CORS 功能：支持浏览器跨域功能。</li><li>权限管控：Bucket Policy、Bucket/Object ACL 权限管控特性。</li><li>WORM 特性：对象删除保护功能。</li><li>重构签名算法：兼容 S3 V2 / V4 签名算法。</li></ul><h4><strong>PART.2 社区发展</strong></h4><p>去年一年在主干的 commit 超过 1200+，同比增长 200%；issue 数量达到 400 左右，同比增长 100%；社区用户增长 50%，推出社区技术类文章 40 篇，组织月度例会 6 次，star 达到 4.2 K。</p><p>同时加强生态合作，与 fluid、osc 开源社区、soda 基金会等进行了不同形式的合作探索，同时这几年也在加强同社区的主力 committer 合作，京东、OPPO、BIGO、贝壳等都为社区提供了非常重要的特性和修复。</p><h4><strong>PART.3 用户情况</strong></h4><p><img height="323" src="https://oscimg.oschina.net/oscnet/up-a60636c276971bb15e7fdb26152dbdb1e58.png" width="500" referrerpolicy="no-referrer"></p><h4><strong>PART.4 生态建设</strong></h4><p><strong>Helm 编排部署</strong></p><p>CubeFS 支持在 AWS 的 EKS、Azure 的 AKS、GCP 的 GKE 以及阿里云的 ACK 上使用 Helm 的方式编排部署，包括以下组件：</p><ul><li>Master</li><li>MetaNode</li><li>DataNode</li><li>ObjectNode</li><li>csi</li></ul><p><strong>Operator 部署</strong></p><p>为了更好地管理 CubeFS，提高效率、降低错误率，实现更高层次的自动化和自动化故障恢复，提供 CubeFS 的 Operator，主要功能包括：</p><ul><li>集群的初始化部署</li><li>集群配置变更</li><li>集群版本升级</li><li>集群扩容</li></ul><p>同时，Operator 也支持 AWS 的 EKS、Azure 的 AKS、GCP 的 GKE 以及阿里云的 ACK。</p><h4><strong>PART.5 官网优化</strong></h4><p><img height="237" src="https://oscimg.oschina.net/oscnet/up-574f8552334000df5223abb070db8d5c5eb.png" width="500" referrerpolicy="no-referrer"></p><h4><strong>PART.6 后续规划</strong></h4><p><strong>架构重构</strong></p><ul><li>存储引擎重构，提供 append only 文件系统，数据读写具有更低延时、更高吞吐。</li><li>混合云：混合云项目支持统一命名空间，提供混合使用多存储系统的能力，提供外部 S3、HDFS 能力。支持生命周期驱动数据在不同介质、存储类型、云上云下之间流动，降本增效。一期即将发版 。</li></ul><p><strong>稳定性、可靠性提升</strong></p><ul><li>磁盘 CRC 增强，提高主从同步、随机写等 CRC 校验能力。</li><li>磁盘自动化迁移，减少迁移过程元数据信息的原子性问题，提高运营自动化水平。</li><li>系统模块运营监控、告警加强，增强可观测性。</li><li>数据节点增加 learner 能力，支持同城多活部署。</li></ul><p><strong>性能提升</strong></p><ul><li>全链路加速，更好支撑数据库存算分离、AI 训练加速等场景。 
  <ul><li>客户端：提供内核客户端，并支持 GDS (GPU Direct Storage）、RDMA 技术，降低 IO 时延及 CPU 开销。</li><li>服务端：基于 RDMA 重建通信机制，从而整体上降低读写服务的延迟，提高吞吐能力。</li><li>分布式缓存：进一步优化分布式多级缓存架构，支持跨机房、跨云的读写加速能力，支撑 AI 训练加速需求。</li></ul></li><li>优化现有系统基于 TCP 链路的读写能力。</li><li>优化客户端本地缓存 (一级缓存) 性能。</li></ul><p><strong>特性</strong></p><ul><li>基于 RocksDB 实现元数据存储，元数据全量缓存优化为按需缓存，降低内存开销。</li><li>纠删码子系统移除 Kafka 组件依赖，提供 SDK 供直接客户端直接接入，缩短数据传输路径。</li><li>提供事件通知特性、S3api QoS、objnode 审计日志功能、跨区域复制、QPS 及带宽计量计费能力。</li></ul><h4><strong>CubeFS 简介</strong></h4><p>CubeFS 于 2019 年开源并在 SIGMOD 发表工业界论文，目前是云原生计算基金会 (CNCF) 托管的孵化阶段开源项目。作为新一代云原生分布式存储平台，兼容 S3、POSIX、HDFS 等协议，支持多副本和纠删码引擎，提供多租户，多 AZ 部署、跨区域复制等特性；适用于大数据、AI、容器平台、数据库及中间件存算分离，数据共享、数据保护等广泛场景。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 10 Feb 2024 02:52:48 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278400</guid>
            <link>https://www.oschina.net/news/278400</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌 Bard 更名为 Gemini，推出免费独立 APP]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>谷歌官方<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Fproducts%2Fgemini%2Fbard-gemini-advanced-app%2F" target="_blank">宣布</a></u>，现已将旗下聊天机器人 Bard 更名为 Gemini，同时宣布多项内容升级：</p><ul><li>谷歌测试版的聊天机器人 Bard（已接入 Gemini Pro 模型）改名 Gemini；</li><li><strong>推出 Gemini 的 Android 版 App，并将 Gemini 的能力加入 iOS 的 Google App 中，免费向公众开放；</strong></li><li>在 Android 上，用户可以选择使用 Gemini 可以替代原来的 Google Assistant，成为手机的默认语言助手；</li><li>在谷歌官方会员计划 Google One 中加入 Gemini Advanced 服务，多付 10 美元即可访问最强大的 Gemini Ultra 模型；</li><li>大模型能力很快将接入 Google Workspace（包括 Gmail、Docs、Meet 等应用）和 Google Cloud 中。</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9a9c5f32a582614bb76f9a6d4b09a89a6e8.png" referrerpolicy="no-referrer"></p><p>去年年底发布 Gemini 时，谷歌就表示其中最强大的 Ultra 模型将通过 Bard Advanced 提供，但尚无收费计划。</p><p>2 月，通过更名的 Gemini Advanced，Ultra 大模型正式对公众开放，不过，收费方案也随之而来。想要接入谷歌的 Ultra 模型，用户需要订阅 19.99 美元每月的 Google One 的 AI Premium 服务，比 ChatGPT 的 Plus 版本的订阅费用，小低 0.01 美元。</p><p>相比 OpenAI 的免费版 GPT-3.5 和付费版 GPT-4（或 ChatGPT Plus），Gemini 的付费版叫 Gemini Advanced，用户可以访问 Pro 1.0 和 Ultra 1.0——其中 Ultra 1.0 是类似 GPT-4 的大模型的首个版本，而 Pro 1.0 是类似 GPT-3.5 的规模较小的模型的首个版本。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 10 Feb 2024 01:53:50 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278397/bard-gemini-advanced-app</guid>
            <link>https://www.oschina.net/news/278397/bard-gemini-advanced-app</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Vite 5.1 正式发布，前端构建工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Vite 团队官宣 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvitejs.dev%2Fblog%2Fannouncing-vite5-1.html" target="_blank">Vite 5.1 正式上线</a></u>。</p><blockquote><p>Vite（法语意为 "快速的"，发音<code>/vit/</code>，发音同 "veet"）是一种新型前端构建工具，能够显著提升前端开发体验。它主要由两部分组成：</p><ul><li><p>一个开发服务器，它基于原生 ES 模块提供了丰富的内建功能，如速度快到惊人的模块热更新（HMR）。</p></li><li><p>一套构建指令，它使用 Rollup 打包你的代码，并且它是预配置的，可输出用于生产环境的高度优化过的静态资源。</p></li></ul><p>Vite 提供了强大的扩展性，可通过其插件 API 和 JavaScript API 进行扩展，并提供完整的类型支持。</p></blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0c8e9effc6b4c85e6cf294cefbe938b125b.png" referrerpolicy="no-referrer"></p><h2>Vite 运行时 API</h2><p>Vite 5.1 新增了对全新 Vite Runtime API 的实验性支持。它允许首先使用 Vite 插件处理任何代码，然后再运行。这与<code>server.ssrLoadModule</code>截然不同，因为运行时实现与服务器解耦了。这使得库和框架作者可以在服务器和运行时之间实现自己的通信层。全新的 Vite Runtime API 旨在稳定后，取代 Vite 现在的 SSR primitives（服务端渲染原语）。</p><p>全新的 Vite Runtime API 带来了一大波龙年福利：</p><ul><li><p>SSR 期间支持 HMR（热模块替换）</p></li><li><p>它与服务器解耦，因此没有限制可以使用单个服务器的客户端数量，每个客户端都有自己的模块缓存，我们甚至可以按照个人喜好与其通信，包括但不限于使用消息信道/<code>fetch</code>调用/直接的函数调用/websocket。</p></li><li><p>它不依赖任何<code>node/bun/deno</code>的内置 API，因此可以在任何环境中运行。</p></li><li><p>它可以轻而易举地与具有自己的运行代码机制的工具集成，举个栗子，我们可以提供一个运行程序，使用<code>eval</code>取代<code>new AsyncFunction</code>。</p></li></ul><p>初始想法由 P.P. 提出，并由 AntFu 作为<code>vite-node</code>包实现，驱动了 Nuxt 3 Dev SSR，后来也作为 Vitest 的基建。所以<code>vite-node</code>的整体思想已经经过「路遥知码力」的长期考验。此乃 V.S. 对 API 的全新迭代，它已经在 Vitest 中重现了<code>vite-node</code>，并在将其集成到 Vite 核心库时痛改前非，使 Vite Runtime API 更灵活给力。此 PR（拉取请求）已经沉淀了整整一年。</p><hr><h2>功能</h2><h3>改进了<code>.css?url</code>的支持</h3><p>将 CSS 文件作为 URL 导入现在可以码到成功。此乃 Remix 向 Vite 迁移的最后一个阻碍。</p><h3><code>build.assetsInlineLimit</code>现在支持回调</h3><p>用户现在可以提供一个返回布尔值的回调函数，选用或弃用特定资源的内联。如果返回了<code>    </code>，那就应用默认逻辑。</p><h3>改进了循环导入的 HMR</h3><p>在 Vite 5.0 中，循环导入中接受的模块总是会触发整页重载，即使它们可以在客户端被妥善处理。现在此问题已经放飞自我，允许在无需重载整页时应用 HMR，但如果在 HMR 期间发生任何错误，页面则会重载。</p><h3>支持<code>ssr.external: true</code>外部化所有 SSR 包</h3><p>从历史上看，除了链接包之外，Vite 会外部化所有软件包。这个全新的<code>ssr.external: true</code>选项可用于强制外部化所有包，包括链接包。在我们想模拟所有外部包的常见情况的 monorepos（多库开发）测试中，这十分方便，或者当使用<code>ssrLoadModule</code>加载任意文件，且我们希望始终使用外部包时，因为我们不关心 HMR。</p><h2>在预览服务器中暴露<code>close</code>方法</h2><p>预览服务器现在暴露了一个<code>close</code>方法，该方法会妥善拆除服务器，包括所有开启的 socket（套接字）连接。</p><h2>性能优化</h2><p>Vite 每次发布都变得越来越快，且 Vite 5.1 充满了性能优化。我们使用<code>vite-dev-server-perf</code>测量了 Vite 4.0 以来所有次版本的 10K 模块（<code>25</code>层深度树）加载时间。这是一个衡量 Vite 无打包方案效果的优秀基准测试。每个模块都是一个携带计数器的迷你 TS 文件，并导入到模块树中的其他文件，因此这主要测量对单独模块执行请求的时间开销。在 Vite 4.0 中，在轻薄游戏本上加载 10K 模块耗时<code>8</code>秒。我们在聚焦性能的 Vite 4.3 更胜一筹，我们能在<code>6.35</code>秒内加载它们。在 Vite 5.1 中，我们又双叒叕实现了性能飞跃。Vite 现在可以在<code>5.35</code>秒内服务 10K 模块。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0bc178ed499ba21da14002f187b7f1e95f4.png" referrerpolicy="no-referrer"></p><p>该基准测试的结果在 Headless Puppeteer 上运行，这是版本跑分的优秀方案。但它们并不代表用户的经历时长。当在 Chrome 的隐身窗口中运行相同数量的 10K 模块时，如下所示：</p><table><tbody><tr><th>10K 模块</th><th>Vite 5.0</th><th>Vite 5.1</th></tr></tbody><tbody><tr><td>加载时间</td><td>2892ms</td><td>2765ms</td></tr><tr><td>加载时间（缓存）</td><td>2778ms</td><td>2477ms</td></tr><tr><td>完全重载</td><td>2003ms</td><td>1878ms</td></tr><tr><td>完全重载（缓存）</td><td>1682ms</td><td>1604ms</td></tr></tbody></table><h3>在线程中运行 CSS 预处理器</h3><p>Vite 现在可选择支持在线程中运行 CSS 预处理器。我们可以使用<code>css.preprocessorMaxWorkers: true</code>启用它。对于 Vuetify 2 项目，启用此功能后，开发启动时间狂跌 40%。</p><h3>改进服务器冷启动的新选项</h3><p>我们可以设置<code>optimizeDeps.holdUntilCrawlEnd: false</code>切换到新型依赖优化策略，这可能有助于大型项目。我们正在考虑将来默认切换到此策略。</p><h3>缓存检查更快解析</h3><p><code>fs.cachedChecks</code>优化现在默认启用。在 Windows 中，<code>tryFsResolve</code>的速度爆涨约<code>14</code>倍，并且在三角基准测试中解析 id 的速度全面爆涨约<code>5</code>倍。</p><h3>内部性能优化</h3><p>开发服务器的性能斩获了若干增量提升。一个新型中间件可以在 304 时短路。我们避免了热路径的<code>parseRequest</code>。Rollup 现已被正确懒加载。</p><hr><h2>废弃功能</h2><p>我们会继续尽量减少 Vite 的 API 接口，使 Vite 能够长期维护。</p><h3>已弃用<code>import.meta.glob</code>的<code>as</code>选项</h3><p>标准已移至<code>import Attributes</code>（导入属性），但我们目前不打算使用新选项取代<code>as</code>。相反，我们建议用户切换到<code>query</code>。</p><h3>移除的实验性构建时预打包</h3><p>构建时预打包是 Vite 3 增加的一项实验性功能，现已被移除。随着 Rollup 4 将其解析器切换到原生，且 Rolldown 正在研发中，此功能的性能和开发与构建不一致的情况都不再有效。我们希望继续改良开发/构建的一致性，并得出结论，使用 Rolldown 进行「开发时预打包」和「生产构建」是更优选择。Rolldown 还可能在构建时实现缓存，这比依赖预打包更高效。</p><p>来源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FbEQbMjK22y3UlbM-zqoERw" target="_blank">https://mp.weixin.qq.com/s/bEQbMjK22y3UlbM-zqoERw</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 10 Feb 2024 01:25:58 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278395/vite-5-1-released</guid>
            <link>https://www.oschina.net/news/278395/vite-5-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[使用 ZadigX 实现全链路灰度解决方案]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img src="https://oscimg.oschina.net/oscnet/up-3a34cb1ae9b32fb51761890def785f3a121.png" referrerpolicy="no-referrer"></p><span id="OSC_h3_1"></span><h3><strong>01、微服务架构下的灰度发布挑战</strong></h3><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>在传统的单体应用架构中，灰度发布相对简单。只需要在服务的流量入口处进行分流，通过使用 K8s Service 或各种类型的网关即可实现。然而，微服务架构引入了新的复杂性，服务之间的依赖关系错综复杂。有时候，某个功能的发布可能依赖于多个服务，要求灰度流量在整个调用链中准确路由到灰度版本的服务。传统的单个服务流量入口设置分流的做法无法满足这一需求。为了解决微服务架构下的灰度发布问题，全链路灰度发布引入了泳道（Lane）的概念。泳道将灰度视角从单个服务扩展到整个请求的调用链上，确保流量能够精确地在一组指定规则的服务之间流动，就像在预先设置好的泳道中一样。全链路灰度发布方案专为微服务架构设计，旨在应对微服务架构下的灰度发布挑战。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><span id="OSC_h3_2"></span><h3><strong>02、全链路灰度发布的实现思路</strong></h3><p style="margin-left:0; margin-right:0">全链路灰度发布的核心在于流量泳道概念的实现，而泳道正如上文所说，是对满足指定规则的流量定下一个活动范围，它有以下两种实现思路：</p><p style="margin-left:0; margin-right:0"><strong>第一种思路：完整环境隔离</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>泳道实现的主要难点在于，流量在服务间调用的过程中如何路由到正确的服务版本，但有一个简单的实现思路可以规避这个问题：复制一个包含所有微服务的完整环境，将需要灰度的服务替换为灰度版本。然后只需要在两个环境的流量入口处通过网关对流量进行规则分流，由于两套环境间存在网络隔离，灰度环境天然成为了一个灰度流量泳道。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img src="https://oscimg.oschina.net/oscnet/up-204e156ee97cd1d0ad44e8ad0cbf4ced6d4.png" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img src="https://oscimg.oschina.net/oscnet/up-bbaf0e033c5c755a8d2110a6a202b101231.png" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">然而，对于服务数量较多的微服务项目来说，这种方法会浪费资源，因为在灰度环境中创建非灰度服务会消耗额外的资源。如果要同时灰度多个版本，就需要创建多套完整环境，进一步增加了资源的浪费。</span></p><p style="margin-left:0; margin-right:0"><strong>第二种思路：服务流量路由</strong></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-76ccbbf064bc77d73466fdee6bc12a2c47f.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-c6e1dcfb241191799f75e4a81001c3b412e.png" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>若能赋予每个服务路由流量的能力，泳道的设置就可以共用正常服务从而充分利用资源，多版本的全链路灰度发布也可以同时在同一个环境中进行。具体而言，需要两个能力：全链路流量路由和全链路数据透传。</span></p><p style="margin-left:0px; margin-right:0px"><strong>全链路流量路由</strong></p><p style="margin-left:0; margin-right:0"><span>流量路由指的是服务本身发送流量时，可以根据指定规则将其路由到正确的目的地，例如带有灰度标的流量应该优先发往灰度版本的服务，全链路流量路由则要求每个服务都具备这种能力。</span></p><p style="margin-left:0; margin-right:0"><span>全链路流量路由目前有两种主流实现：</span></p><ol><li><p style="margin-left:0; margin-right:0"><span>基于 Istio：采用 Istio 这个开源 Service Mesh 组件，通过在每个服务的容器中部署 Envoy 透明代理，拦截服务之间的网络通信并按指定规则转发，从而实现了全链路流量路由，无需对现有代码进行修改。</span></p></li><li><p style="margin-left:0; margin-right:0"><span>基于服务发现组件：通过支持为服务设置元数据的服务注册中心，如 Nacos，可以标记服务实例的特征，例如灰度版本。每个服务可以通过注册中心获取其他服务实例的版本信息，并通过修改代码逻辑或 Java Agent 实现流量路由。</span></p></li></ol><p style="margin-left:0; margin-right:0"><strong>全链路数据透传</strong></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>为了实现全链路灰度发布，流量路由规则基于流量染色标记，因此需要将染色标记传递到整个请求链路中，即实现全链路数据透传能力。简单的数据透传可以基于原生的 HTTP Header、Query Parameters 等资源来实现，但在复杂的微服务场景下，应该使用 Tracing Baggage 机制。Tracing Baggage 是分布式链路跟踪工具提供的一种能力，可以携带用户自定义的键值对，主流的跟踪工具如 Skywalking 和 OpenTelemetry 都支持该功能。使用分布式链路追踪框架可以方便地进行日志记录和问题排查，特别适用于灰度发布场景下的需求。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><span id="OSC_h3_3"></span><h3><strong>03、</strong><strong><strong><span>企业发布现状的痛点分析</span></strong></strong></h3><p><span>目前企业在选择和实施发布策略时面临以下困境：</span></p><p><span>1. 从传统部署模式转变为云原生模式后，缺乏相关能力的人才进行技术架构改造，使得企业在发布策略方面难以入手。</span></p><p><span>2. 已经找到适合产品现状的发布策略，但缺乏自动化平台或工具的支持，仍然依赖手工逐步执行，可能导致流程遗漏或人工操作失误，造成生产事故。</span></p><p><span>3. 仅实现了服务级别的灰度能力，逐个发布服务耗时长，导致发布过程缓慢，验证效果不佳。</span></p><p><span>针对以上问题，ZadigX 提供了灰度发布的解决方案，帮助企业应对这些痛点。</span></p><p>&nbsp;</p><span id="OSC_h3_4"></span><h3><strong>04、全链路灰度发布的实现方案</strong></h3><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>主要有 Istio、JavaAgent 等主流方案，基于流量路由的能力，ZadigX 提供了两套通用方案：</span></p><p style="margin-left:0; margin-right:0"><strong>阿里云 MSE + ZadigX&nbsp;</strong></p><p style="margin-left:0; margin-right:0"><span>阿里云 MSE 为 Java 应用提供了便捷实现全链路灰度的能力。MSE 微服务引擎是基于 Java Agent 实现的无侵入式企业生产级服务治理产品，不需要修改任何一行业务代码，即可拥有不限于全链路灰度的治理能力，并且支持近 5 年内所有的 Spring Boot、Spring Cloud 和 Dubbo。</span><span>使用 MSE 进行灰度发布的过程中，ZadigX 可以便捷得创建灰度环境和灰度 K8S 资源、结合发布工作流编排能力，自动为 K8S 资源设置 MSE 所需的资源标记，集成了 MSE API 降低重复工作量。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>Istio + Distributed Tracing + ZadigX</strong></p><p style="margin-left:0; margin-right:0"><span>Istio 可以无侵入得实现全链路流量路由能力，同时还可以设置基于比例、权重、HTTP Header 等条件的流量路由，但全链路数据透传需要服务本身实现，为此需要服务接入支持 Baggage 的分布式链路追踪框架，若还没接入则会涉及到一定的改造成本。</span><span>ZadigX 可以根据指定的灰度任务与灰度标记规则，结合发布工作流编排能力与环境的监测管理能力，自动创建 Istio VirtualService 与 DistinationRule &nbsp;资源以实现相应的泳道，达到了让开发者轻松进行全链路灰度发布的效果。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span>持续关注 KodeRover 公众号，后续文章将详细介绍以上两种方案的细节及实践过程。</span></p><p>&nbsp;</p><span id="OSC_h3_5"></span><h3><strong>周边放送</strong></h3><p style="margin-left:0; margin-right:0"><strong>「 ZadigX Connects Everything 」贴纸 ZadigX 定制 T 恤</strong></p><p style="margin-left:0px; margin-right:0px"><strong><span>获取方式</span></strong></p><ol><li><p style="margin-left:0; margin-right:0"><span>原文转发朋友圈，截图联系公众号客服，获得贴纸三张。</span></p></li><li><p style="margin-left:0; margin-right:0"><span>阅读公众号原文并在公众号评论区留言，点赞数最高的一位获得 ZadigX 定制 T 恤。</span></p></li></ol><p style="margin-left:0; margin-right:0"><img src="https://oscimg.oschina.net/oscnet/up-0cc363cce094cf23f61ce205c28e58b2d2c.png" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-2925cc598efd5c4412c3d57d0e9ca7fb022.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">&nbsp;</p><blockquote><p style="margin-left:0; margin-right:0"><strong>阅读原文：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FpcaPf1w1SCCD6O3aw8F-Kw" target="_blank">https://mp.weixin.qq.com/s/pcaPf1w1SCCD6O3aw8F-Kw</a></p></blockquote><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 09 Feb 2024 10:05:26 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/10087564</guid>
            <link>https://my.oschina.net/koderover/blog/10087564</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[kcp 进入 CNCF 沙箱]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">kcp <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FO7umPZl-XkCs_9drJQfxQw" target="_blank">宣布</a>加入 CNCF 成为沙箱项目。kcp 是一个类似 Kubernetes 的控制平面，专注于：</span></p><ul><li><span style="color:#000000">许多独立、隔离的「集群」（称为工作区）的控制平面</span></li><li><span style="color:#000000">使 API 服务供应商能够使用多租户运营商集中提供 API</span></li><li><span style="color:#000000">方便用户在其工作空间中轻松使用 API</span></li></ul><p><span style="color:#000000">对于需要大规模多租户平台的 SaaS 服务供应商来说，kcp 可以作为一个构建模块，使用 Kubernetes-native API 向大量完全隔离的租户提供服务。目标是为云供应商以及在公司内部提供 API 的企业 IT 部门提供帮助。</span></p><p><span style="color:#000000"><img alt="" height="454" src="https://static.oschina.net/uploads/space/2024/0208/215748_wyEI_4252687.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">去年四月，红帽宣布 kcp 将不再是他们的重点项目，并邀请社区接手该项目。此后，kcp 作为一个社区项目建立了新的项目治理机制，并组成了一份新的维护者名单，推动 kcp 项目的发展。最近，团队成员重新设计了 </span><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fkcp.io" target="_blank"><span style="color:#000000">kcp.io</span></a><span style="color:#000000">，以纪念这个「新」的 kcp 项目。</span></p><blockquote><p><span style="color:#000000">从新的项目治理机制的开始，我们就清楚地认识到，kcp 不是孤立存在的。它是 Kubernetes 生态系统的一部分，因此，加入 CNCF 以正式确认这种关系是显而易见的选择。经过评估我们的申请后，技术监督委员会（TOC）决定接纳我们加入 CNCF 沙箱计划。</span></p><p><span style="color:#000000">显然，我们对这个决定感到非常激动，并且对加入的众多优秀开源项目社区感到自豪。成为 CNCF 社区的一部分是非常令人谦卑的经历，有一种回到家的感觉。</span></p><p><span style="color:#000000">我们对 2024 年和未来有非常庞大的计划。我们将增加对 kcp 使命至关重要的功能，改善在 Kubernetes 上运行 kcp 的体验，传播关于构建面向 SaaS 服务的可扩展控制平面的信息，发展社区等等。</span>&nbsp;</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Thu, 08 Feb 2024 13:53:47 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278288/kcp-cncf</guid>
            <link>https://www.oschina.net/news/278288/kcp-cncf</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
