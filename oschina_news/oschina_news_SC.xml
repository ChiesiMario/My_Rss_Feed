<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sun, 22 Oct 2023 17:46:48 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Redis 欲涉足磁盘存储]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">Redis 方面近期透露，其正在寻求将磁盘作为分层存储架构的一部分，以降低成本并扩大系统的吸引力。</span></p><p><span style="color:#000000">首席执行官 Rowan Trollope 在接受 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theregister.com%2F2023%2F10%2F19%2Fredis_disk_support" target="_blank">The Register</a> 采访时表示，希望此举能够帮助客户降低成本并简化其架构。Trollope 称，亚毫秒级分布式系统为开发人员提供了所需的性能，但必须承认的是，为互联网规模构建的其他系统（例如 MongoDB）可能更具价格优势。为了解决这个问题，该公司已经创建了一种分层的内存方法，在其内存系统后提供闪存支持。</span></p><p><span style="color:#000000">"我们在磁盘和内存之间有半步之遥。对于一些特定的用例，例如在游戏中，公司可能会使用我们来提供他们所需的实时排行榜和其他游戏内统计数据。</span></p><p><span style="color:#000000">然而在一些游戏发布初期的热潮结束之后，一大批用户会离开其账户也会随之进入休眠状态，直至新的一集或一些新的内容发布。Trollope 认为，使用闪存可以让用户对内存进行动态分层。"我们可以把那些很久没有使用过的数据转移到闪存中，在那里存放一段时间。当用户再次回来时时，我们可以很容易的将其从闪存无缝移回内存。这样公司就可以节约成本。</span></p><p><span style="color:#000000">现在，Redis 则计划将这一概念扩展到基于磁盘的内存，以提供对三层架构的支持。</span></p><p><span style="color:#000000">在 </span><a href="https://www.oschina.net/news/245305/so-developer-survey-2023" target="news">Stack Overflow 2023 年度报告</a><span style="color:#000000">中，Redis 被评为专业开发人员中第六大最受欢迎的数据库和第二大最受欢迎的 NoSQL 数据库，有大约 23% 的专业开发人员使用率。系统监控公司 Sumo Logic 的研究报告指出，2020 年，Redis 成为了 AWS 上最受欢迎的数据库。</span></p><p><img height="486" src="https://static.oschina.net/uploads/space/2023/0615/033453_n9mA_2720166.png" width="400" referrerpolicy="no-referrer"></p><p><span style="color:#000000">对此，Trollope 认为，Redis 流行的一大原因在于缺乏竞争。</span></p><p><span style="color:#000000">「我们并没有真正与其他公司竞争......我想说的是，细数世界上最流行的一些数据库，我们在其中也属于领先的内存数据库，其他人都做不到这一点。Mongo 没有这样做。也没有一家云厂商能做到这一点，比如 Azure Cosmos DB、或甲骨文或亚马逊的任何技术（如 DynamoDB）：它们都不是内存数据库。我们与所有其他十大数据库一起被使用，但我们并不真正与它们竞争。」</span></p><p><span style="color:#000000">另一方面，Trollope 还透露，Redis 已经解决了缺乏 SQL 支持的问题，RediSQL 模块现已在 GitHub 上可用。并表示，未来 Redis 还将支持自然语言查询，以及增强向量和特征存储功能。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 22 Oct 2023 04:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262856/redis-disk-support</guid>
            <link>https://www.oschina.net/news/262856/redis-disk-support</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[工信部：中国已建成全球规模最大、技术领先的 5G 网络]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>中国工业和信息化部副部长张云明在 2023 年中国 5G 发展大会开幕上称，中国已建成全球规模最大、技术领先的 5G 网络。</p><p>截至 (今年)9 月底，中国累计建成开通 318.9 万个 5G 基站，5G 移动电话用户达 7.37 亿户，占移动电话用户总数的 42.8%，5G 行业虚拟专网超 2 万个，数字经济发展底座不断夯实。&nbsp;</p><p>「从黑龙江漠河到海南三沙，从海拔 5000 多米的新疆红其拉甫口岸到地下 200 多米深的山西矿井，均已覆盖 5G 信号。」张云明说。</p><p>他介绍，近年来，中国 5G 关键技术取得整体性突破，已构筑形成涵盖系统、芯片、终端、仪表等环节较为完整的 5G 产业链，产业基础实力持续增强。中国 5G 标准必要专利声明数量全球占比达 42%，为推动全球 5G 发展贡献了中国智慧。</p><p>目前，中国 5G 应用已广泛融入 97 个国民经济大类中的 67 个，应用场景由监控巡检等外围环节向生产控制等核心环节稳步拓展，5G 赋能、赋值、赋智作用不断彰显。</p><p>南开大学原校长、世界工程组织联合会原主席龚克在大会上表示，目前全球 5G 网络人口覆盖率约为 37%，用户逾 14 亿，其中约一半用户来自中国。他表示，全球 5G 行业应用还处于发展初期。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 22 Oct 2023 03:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262851</guid>
            <link>https://www.oschina.net/news/262851</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun 1.0.7 版本发布，实现多个 Node.js 兼容改进]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>Bun 是一个集打包工具、转译器和包管理器于一体的 JavaScript 运行时，由 Jarred Sumner 于 2023 年 10 月 20 日发布了 1.0.7 版本。本次更新实现了对 Node.js 运行时的多项兼容性改进，并修复了近 60 个 bug。</p><p>根据发布说明，本版本对「bun install」命令进行了优化，支持可选的 peerDependencies，可以避免安装不必要的依赖包。修复了一个边缘案例 Bug，之前在匹配语义化版本范围时，有时会选择比较老的包版本。另外还修复了一些确定性相关问题，以提高在 Linux 系统下生成的 bun.lockb 文件的一致性。</p><p>在 Node.js 兼容性方面，本版本修复了 child_process 的 IPC 通信可靠性问题，改善了 With Next.js 的兼容性。修复了 net 模块 socket 没有正确发送 end 事件的 Bug。解决了 napi 模块中的内存泄漏问题。修复了 stream 模块中的崩溃问题。修改了 http 服务器的 address() 方法在 Unix Socket 的返回值。以及修复了一些 Worker Threads、Buffer、DNS 模块的 Bug。</p><p>除此之外，还修复了 Bun 运行时本身的一些问题。例如 Docker 容器中错误抛出端口占用的 Bug，请求 url 端口错误的边缘案例问题，Response 对象缺少 statusText 属性等。WebSocket 客户端请求头 Host 字段遗漏端口的问题也已解决。</p><p>总体来说，Bun 1.0.7 对该项目的 Node.js 兼容性做出了长足的改进，使其可以运行更多依赖 Node.js API 的程序。同时也修复了许多影响稳定性的 Bug。这些改进使 Bun 在保持极快的运行速度的同时，向通用的 JavaScript 运行时又迈进了一步。</p><p>除修复 Bug 外，Bun 的团队也在积极准备定期提供 Windows 版本的构建。他们将会切换到使用 Cmake 和 Ninja 等现代化的构建工具。并启用 JavaScriptCore 的 Debug 版本以帮助发现 Bug。未来 Bun 也会从 LLVM 16 升级到 LLVM 17。</p><p>本次更新表明，Bun 的开发者们仍然致力于完善该项目，使其成为一个易于使用和高性能的 JavaScript 平台。随着项目继续成熟，我们有理由期待 Bun 会吸引到更多用户，成为 Web 开发者的不错选择。当然项目当前还有许多不足之处需要改进，我们也期待着后续版本带来的更多惊喜。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 22 Oct 2023 03:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262849/bun-1-0-7-released</guid>
            <link>https://www.oschina.net/news/262849/bun-1-0-7-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[XAgent —— 基于大语言模型的自主智能体]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="project_detail_above_text_link_1" data-tracepid="project_detail_above_text_link"><a style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" target="_blank">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt; <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p><span style="background-color:#ffffff; color:#1f2328">XAgent 是一个开源的基于大型语言模型（LLM）的自主智能体，可以自动解决各种任务。 它被设计为一个通用的智能体，可以应用于各种任务。目前，XAgent 仍处于早期阶段，我们正在努力改进它。</span></p><p><span style="background-color:#ffffff; color:#1f2328">目标是创建一个可以解决任何给定任务的超级智能智能体。</span></p><p style="color:#1f2328; text-align:start">XAgent 具有以下特点：</p><ul><li><strong>自主性</strong>：XAgent 可以在没有人类参与的情况下自动解决各种任务。</li><li><strong>安全性</strong>：XAgent 被设计为安全运行。所有的行为都被限制在一个 docker 容器内。不用担心你的主机环境受到影响</li><li><strong>可扩展性</strong>：XAgent 被设计为可扩展的。您可以轻松地添加新的工具来增强智能体的能力，甚至是新的智能体！</li><li><strong>GUI</strong>：XAgent 为用户提供了友好的 GUI 来与智能体交互。您也可以使用命令行界面与智能体交互。</li><li><strong>与人类的合作</strong>：XAgent 可以与您合作解决任务。它不仅有能力在行进中遵循您的指导来解决复杂的任务，而且在遇到挑战时还可以寻求您的帮助。</li></ul><p style="color:#1f2328; text-align:start">XAgent 由三部分组成：</p><ul><li><strong>调度器</strong><span>&nbsp;</span>负责动态实例化和分派任务给不同的智能体。它允许我们添加新的智能体和改进智能体的能力。</li><li><strong>规划器</strong><span>&nbsp;</span>负责为任务生成和校正计划。它将任务分解为子任务，并为它们生成里程碑，使智能体能够逐步解决任务。</li><li><strong>行动者</strong><span>&nbsp;</span>负责采取行动实现目标和完成子任务。行动者利用各种工具来解决子任务，它也可以与人类合作来解决任务。</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Sun, 22 Oct 2023 03:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/xagent</guid>
            <link>https://www.oschina.net/p/xagent</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 快速构建 OCI/Docker 镜像的工具 ocipack]]>
            </title>
            <description>
                <![CDATA[<div align="center"><br><h1><a id="user-content-ocipack" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#ocipack"></a>ocipack</h1><br>
一个可以快速构建 OCI/Docker 镜像的工具<br><br><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fjelipo%2Focipack-rs%2Fcommits"><img src="https://img.shields.io/github/last-commit/jelipo/ocipack-rs" alt="GitHub last commit" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fjelipo%2Focipack-rs%2Freleases"><img src="https://img.shields.io/github/v/release/jelipo/ocipack-rs" alt="GitHub release (latest by date)" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fjelipo%2Focipack-rs%2Freleases"><img src="https://img.shields.io/github/downloads/jelipo/ocipack-rs/total" alt="GitHub all releases" referrerpolicy="no-referrer"></a><img src="https://img.shields.io/github/repo-size/jelipo/ocipack-rs" alt="GitHub repo size" referrerpolicy="no-referrer"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fjelipo%2Focipack-rs%2Factions"><img src="https://img.shields.io/github/actions/workflow/status/jelipo/ocipack-rs/rust.yml?branch=main" alt="Github Release Publish Status" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fjelipo%2Focipack-rs%2Fblob%2Fmaster%2FLICENSE"><img src="https://img.shields.io/github/license/jelipo/ocipack-rs" alt="License" referrerpolicy="no-referrer"></a></p></div><h2><a id="user-content-特性" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E7%89%B9%E6%80%A7"></a>特性</h2><ul><li>在没有<code>Docker/Containerd</code>等容器引擎环境下构建简单镜像</li><li>兼容 Dockerfile 大部分配置项，降低上手难度</li><li>支持 OCI 和 Docker 镜像格式，并支持互相转换</li><li>支持镜像<code>Pull 和 Push</code>时使用 <code>socks5/http</code> 代理</li><li>一个单独的二进制，Linux 下静态编译无依赖，alpine 也可使用</li><li>支持 <code>Windows</code><code>MacOS</code><code>Linux</code> 三个平台的使用</li><li>支持性能非常好的<code>zstd</code>解压缩算法</li></ul><h2><a id="user-content-下载和安装" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E4%B8%8B%E8%BD%BD%E5%92%8C%E5%AE%89%E8%A3%85"></a>下载和安装</h2><h2><a id="user-content-linux-和-macos" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#linux-%E5%92%8C-macos"></a>Linux 和 MacOS</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">curl -L https://github.com/jelipo/ocipack-rs/releases/download/0.6.0/ocipack-0.6.0-amd64_$(uname).tar.gz | tar xzv</span><span id="LC2" class="line"></span><span id="LC3" class="line"># 把下载解压完成的 `ocipack` 放到 `/usr/local/bin/` （可选操作）</span><span id="LC4" class="line">sudo cp ocipack /usr/local/bin/ &amp;&amp;  sudo chmod +x /usr/local/bin/ocipack</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-windows" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#windows"></a>Windows</h3><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">curl.exe -L https://github.com/jelipo/ocipack-rs/releases/download/0.6.0/ocipack-0.6.0-amd64_windows.zip -o ocipack.zip</span><span id="LC2" class="line"></span><span id="LC3" class="line">tar -xf ocipack.zip</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-简介" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E7%AE%80%E4%BB%8B"></a>简介</h2><p>作者在学习云原生和写代码的时候，经常需要构建一个简单的镜像，但是有时候会因为各种原因导致并不轻松。</p><ul><li>着急开发，但是没有<code>Docker/Containerd</code>等环境。</li><li>居家办公需要连接 VPN 到组织的网络中，但是 Windows 和 MacOS 使用虚拟机运行<code>Docker</code>，这意味着虚拟机中的<code>Docker</code>
无法通过宿主的 VPN 网络<code>Pull 和 Push</code>镜像。</li><li><code>Linux</code>服务器上，<code>Docker</code>/<code>Containerd</code> 等引擎在构建时拉取公共镜像因为众所周知的原因速度非常慢。即使有<code>socks5/http</code>
代理，但是服务器上可能还有正在运行的容器化进程，配置代理意味着可能要重启，且整个容器引擎都会走代理，一般是不可接受的，况且频繁配置也很麻烦。</li><li><code>CI/CD</code>环境中，你可能可以使用<code>Docker 多阶段构建</code>、<code>CI 工具提供的环境</code>构建一个镜像并打包成<code>Image</code>并上传到<code>Registry</code>中。<br>
通常这是两个步骤:<code>构建产物</code>和<code>构建成镜像并 Push</code>，但是有时候 CI 环境并不如我们的意 (可能没有容器环境、只有<code>Docker in Docker</code>
无法 Push 等问题)，而且需要学习每个 CI 环境来完成我们的这两个步骤。<br>
如果有一个通用的工具可以把<code>产物</code>构建成镜像并 Push 到<code>Registry</code>就可以大大提升我们对不同 CI 环境的兼容。</li></ul><p>针对以上问题，所以写了一个小工具去解决这些问题。<br>
也有很多别的工具可以解决，重复造轮子的目的，也是为了加深 Rust 的编写能力和 Image 知识。<br></p><h2><a id="user-content-限制" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E9%99%90%E5%88%B6"></a>限制</h2><p>因为本工具没有任何 Runtime，所以 Dockerfile 配置项中需要 Runtime 支持的一律无法正常支持。<br><code>为了便于上手使用，本工具只是使用常见的 Dockerfile 作为配置，降低使用门槛，但并不是完全兼容 Dockerfile</code><br></p><table><thead><tr><th align="center"></th><th align="center">Filed</th></tr></thead><tbody><tr><td align="center">支持的配置项</td><td align="center"><code>FROM</code><code>LABEL</code><code>CMD</code><code>COPY</code><code>ENV</code><code>USER</code><code>WORKDIR</code><code>EXPOSE</code></td></tr><tr><td align="center">暂不支持但未来会支持</td><td align="center"><code>ADD</code>(可以暂时用 COPY 代替) <code>ENTRYPOINT</code><code>VOLUME</code></td></tr><tr><td align="center">不会支持</td><td align="center"><code>ARG</code><code>RUN</code><code>MAINTAINER</code></td></tr><tr><td align="center">多阶段构建</td><td align="center">不支持</td></tr></tbody></table><br><p>目前的 Image Manifest 主流为 Docker，但是 Docker
Manifest 格式也分为多个版本，本工具对于 Docker 格式只支持<code>Image Manifest V 2, Schema 2</code>
，对于老版本的<code>Image Manifest V 2, Schema 1</code> 不支持，也不计划进行支持。</p><table><thead><tr><th align="center">版本</th><th align="center">是否支持</th></tr></thead><tbody><tr><td align="center"><code>Image Manifest V 2, Schema 2</code></td><td align="center">✅</td></tr><tr><td align="center"><code>Image Manifest V 2, Schema 1</code></td><td align="center">❌</td></tr><tr><td align="center"><code>OCI Image Manifest</code></td><td align="center">✅</td></tr></tbody></table><h2><a id="user-content-使用举例" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E4%BD%BF%E7%94%A8%E4%B8%BE%E4%BE%8B"></a>使用举例</h2><p>很多时候，我们需要的功能只是把文件 COPY 进<code>Base Image</code>，然后运行。</p><p>创建一个<code>Dockerfile</code>文件，这个<code>Dockerfile</code>
既是我们构建 Image 的配置文件，也是我们计划运行我们构建好的镜像时打印内容的文件。写入以下内容:</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">FROM ubuntu:22.04</span><span id="LC2" class="line">COPY Dockerfile /root/</span><span id="LC3" class="line">CMD cat /root/Dockerfile</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>接着运行以下命令：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">./ocipack build <span class="se">\</span></span><span id="LC2" class="line"><span class="nt">--source</span><span class="o">=</span>dockerfile:./Dockerfile <span class="se">\</span></span><span id="LC3" class="line"><span class="nt">--target</span><span class="o">=</span>registry:my.harbor.com/jelipo/demo:v1 <span class="se">\</span></span><span id="LC4" class="line"><span class="nt">--target-auth</span><span class="o">=</span>jelipo:my_password</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>如果顺利，末尾将会输出:</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">Build job successful!</span><span id="LC2" class="line"></span><span id="LC3" class="line">Target image:</span><span id="LC4" class="line">my.harbor.com/jelipo/demo:v1</span><span id="LC5" class="line"></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>当看到<code>Build job successful</code>字样时，说明我们已经构建完成并上传到了<code>Registry</code>。</p><p>接下来我们执行<code>docker run -it --rm my.harbor.com/jelipo/demo:v1</code>时会输出我们的<code>Dockerfile</code>文件的内容。</p><h4><a id="user-content-拉取镜像并打包成文件" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E6%8B%89%E5%8F%96%E9%95%9C%E5%83%8F%E5%B9%B6%E6%89%93%E5%8C%85%E6%88%90%E6%96%87%E4%BB%B6"></a>拉取镜像并打包成文件</h4><p>如果只需要下载镜像保存到文件，可以把 <code>--target</code>参数改为 <code>tgz:file_path</code>，还可以使用 socks5 代理访问。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">./ocipack build <span class="se">\</span></span><span id="LC2" class="line"><span class="nt">--source</span><span class="o">=</span>registry:redis:latest <span class="se">\</span></span><span id="LC3" class="line"><span class="nt">--target</span><span class="o">=</span>tgz:redis.tgz <span class="se">\</span></span><span id="LC4" class="line"><span class="nt">--source-proxy</span><span class="o">=</span>socks5://127.0.0.1:1080</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-功能" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E5%8A%9F%E8%83%BD"></a>功能</h2><h2><a id="user-content-构建 build" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E6%9E%84%E5%BB%BAbuild"></a>构建（Build）</h2><p>最主要的功能，拉取 Base Image，然后把文件 COPY 进 Image，然后 Push。<br>
使用<code>ocipack build</code>子命令。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c"># 当 base image 的 registry 为 http 而非 https 时需要启用</span></span><span id="LC2" class="line"><span class="nt">-a</span>, <span class="nt">--allow-insecure</span></span><span id="LC3" class="line">        Allow insecure registry </span><span id="LC4" class="line"><span class="c"># 连接超时时间</span></span><span id="LC5" class="line"><span class="nt">--conn-timeout</span> &lt;CONN_TIMEOUT&gt;</span><span id="LC6" class="line"><span class="o">[</span>OPTION] Connection <span class="nb">timeout </span><span class="k">in </span>seconds <span class="o">[</span>default: 600]</span><span id="LC7" class="line"><span class="c"># 新 Image 的格式</span></span><span id="LC8" class="line"><span class="nt">-f</span>, <span class="nt">--format</span> &lt;FORMAT&gt;</span><span id="LC9" class="line"><span class="o">[</span>OPTION] Target format type. Support <span class="s1">'docker'</span> and <span class="s1">'oci'</span><span class="o">[</span>default: docker]</span><span id="LC10" class="line"><span class="c"># 指定 Dockerfile 的路径</span></span><span id="LC11" class="line"><span class="nt">-s</span>, <span class="nt">--source</span> &lt;SOURCE&gt;</span><span id="LC12" class="line">        Source type. Support dockerfile <span class="nb">type </span>Example:<span class="s1">'dockerfile:/path/to/.Dockerfile'</span></span><span id="LC13" class="line"><span class="c"># Base Image 的 auth 验证信息，支持环境变量</span></span><span id="LC14" class="line"><span class="nt">--source-auth</span> &lt;SOURCE_AUTH&gt;</span><span id="LC15" class="line"><span class="o">[</span>OPTION] Auth of pull <span class="nb">source </span>image. Example:<span class="s1">'myname:mypass'</span>,<span class="s1">'myname:${MY_PASSWORD_ENV}'</span></span><span id="LC16" class="line"><span class="c"># Base Image 的代理信息</span></span><span id="LC17" class="line"><span class="nt">--source-proxy</span> &lt;SOURCE_PROXY&gt;</span><span id="LC18" class="line"><span class="o">[</span>OPTION] Proxy of pull <span class="nb">source </span>image.</span><span id="LC19" class="line">        Example:<span class="s1">'socks5://127.0.0.1:1080'</span>,<span class="s1">'http://name:pass@example:8080'</span></span><span id="LC20" class="line"><span class="c"># Target Image 的信息</span></span><span id="LC21" class="line"><span class="nt">-t</span>, <span class="nt">--target</span> &lt;TARGET&gt;</span><span id="LC22" class="line">        Target type. Support registry/tar/tgz. Example:<span class="s1">'registry:my.container.com/target/image:1.1'</span>,<span class="s1">'tgz:image.tgz'</span></span><span id="LC23" class="line"><span class="c"># 当 Target Image 的 Registry 为 http 而非 https 时需要启用</span></span><span id="LC24" class="line"><span class="nt">--target-allow-insecure</span></span><span id="LC25" class="line">        Allow target insecure registry </span><span id="LC26" class="line"><span class="c"># Target Image 的 auth 验证信息，支持环境变量</span></span><span id="LC27" class="line"><span class="nt">--target-auth</span> &lt;TARGET_AUTH&gt;</span><span id="LC28" class="line"><span class="o">[</span>OPTION] Auth of push target image. Example:<span class="s1">'myname:mypass'</span>,<span class="s1">'myname:${MY_PASSWORD_ENV}'</span></span><span id="LC29" class="line"><span class="c"># Target Image 的代理信息</span></span><span id="LC30" class="line"><span class="nt">--target-proxy</span> &lt;TARGET_PROXY&gt;</span><span id="LC31" class="line"><span class="o">[</span>OPTION] Proxy of push target image.</span><span id="LC32" class="line">        Example:<span class="s1">'socks5://127.0.0.1:1080'</span>,<span class="s1">'http://name:pass@example:8080'</span></span><span id="LC33" class="line"><span class="c"># 新 layer 使用 zstd 压缩，zstd 拥有更好的，解压缩速度，和 压缩比（很多 Runtime 不支持 zstd，谨慎使用）</span></span><span id="LC34" class="line"><span class="nt">--use-zstd</span></span><span id="LC35" class="line"><span class="o">[</span>OPTION] Compress files using zstd</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-可能遇到的问题" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E5%8F%AF%E8%83%BD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98"></a>可能遇到的问题</h2><h3><a id="user-content-base-image-拉取非常慢" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#base-image-%E6%8B%89%E5%8F%96%E9%9D%9E%E5%B8%B8%E6%85%A2"></a>Base Image 拉取非常慢</h3><p>如果是<code>hub.docker.com</code>中的公共镜像，因为网络原因本身就很慢，可以使用<code>--source-proxy</code>设置一个代理加速访问。
<br><br></p><h3><a id="user-content-pull-或-push-的-registry-不支持 https 协议" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#pull-%E6%88%96-push-%E7%9A%84-registry-%E4%B8%8D%E6%94%AF%E6%8C%81https%E5%8D%8F%E8%AE%AE"></a>Pull 或 Push 的 Registry 不支持 HTTPS 协议</h3><p>目前大多数容器引擎或者工具都会默认使用<code>HTTPS</code>访问<code>Registry</code>，但是很多内网或者学习使用时会使用<code>HTTP</code>协议的 Registry 。</p><p>当 Pull 镜像的 Registry 是<code>HTTP</code>协议，添加<code>--allow-insecure</code>选项。</p><p>如果 Push 的 Registry 是<code>HTTP</code>协议，添加<code>--target-allow-insecure</code>选项。
<br><br></p><h3><a id="user-content-执行命令后在 linux-history 中会显示我的密码" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E5%90%8E%E5%9C%A8linux-history%E4%B8%AD%E4%BC%9A%E6%98%BE%E7%A4%BA%E6%88%91%E7%9A%84%E5%AF%86%E7%A0%81"></a>执行命令后，在 Linux history 中会显示我的密码</h3><p>本工具支持从环境变量中读取密码，可以在<code>build</code>子命令的 help 中看<code>--source-auth</code>或者<code>--target-auth</code>的说明。
<br><br></p><h3><a id="user-content-构建出来的 image 是 docker-manifest 格式的想要 oci 格式的" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E6%9E%84%E5%BB%BA%E5%87%BA%E6%9D%A5%E7%9A%84image%E6%98%AFdocker-manifest%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%83%B3%E8%A6%81oci%E6%A0%BC%E5%BC%8F%E7%9A%84"></a>构建出来的 Image 是 Docker Manifest 格式的，想要 OCI 格式的</h3><p>添加<code>--format=oci</code>选项。
<br><br></p><h2><a id="user-content-转换 transform" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E8%BD%AC%E6%8D%A2transform"></a>转换 (Transform)</h2><p>此功能主要是为了 Docker 和 OCI 之间的转换。主要命令跟<code>build</code>子命令大同小异，可以参考上面的<code>构建（Build）</code>。<br>
可以使用<code>ocipack transform -h</code>查看详情。<br><br></p><h2><a id="user-content-清理缓存 clean" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E6%B8%85%E7%90%86%E7%BC%93%E5%AD%98clean"></a>清理缓存 (Clean)</h2><p>因为无论 Pull 还是 Push ，都会需要缓存到本地，以便下次 Pull 时的加速。</p><p>可以使用<code>ocipack clean</code>子命令清理本地的缓存文件夹，可以使用<code>ocipack clean -h</code>查看更多参数选项。</p><br><h2><a id="user-content-查看 image 信息 show-info" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E6%9F%A5%E7%9C%8Bimage%E4%BF%A1%E6%81%AFshow-info"></a>查看 Image 信息 (Show Info)</h2><p>当你想查看 Registry 中的 Image 信息，但是又无从下手的时候，可以使用此命令查看详细信息。</p><p>例如<code>ocipack show-info -i registry:nginx:latest</code>查看 nginx:latest 的详细信息。</p><br><h2><a id="user-content-挖坑" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E6%8C%96%E5%9D%91"></a>挖坑</h2><ul><li>支持导出或者导入本地的容器引擎。</li><li>更多的 Dockerfile 配置项。</li><li>创建新 Image 时提供，使用<code>zstd</code>压缩所有 layer。
<br></li></ul><h2><a id="user-content-最后" class="anchor" href="https://gitee.com/jelipo/ocipack-rs#%E6%9C%80%E5%90%8E"></a>最后</h2><p>感谢使用，如有问题请反馈。</p>]]>
            </description>
            <pubDate>Sun, 22 Oct 2023 03:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/jelipo/ocipack-rs</guid>
            <link>https://gitee.com/jelipo/ocipack-rs</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 对抗软件复杂度的战争]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" target="_blank">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt; <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><span id="OSC_h3_1"></span><h3>一、何为研发效能？</h3><p style="text-align:justify">当我们谈研发效能的时候，我们在谈些什么？这个议题被抛出来，有人讨论，是因为存在问题，问题就在于实际的研发效率，已经远低于预期了。企业初创的时候，一个想法从形成到上线，一个人花两个小时就完成了，而当企业发展到数千人的时候，类似事情的执行，往往需要多个团队，花费好几周才能完成。这便造成了鲜明的对比，而这一对比产生的印象，对于没有深入理解软件工程的人来说，显得难以理解，可又往往无计可施。</p><p style="text-align:justify">细心的读者会留意到，前文我既用了「效能」一词，也用了「效率」一词。这是为了做严谨的区分，<strong>效能往往是用来衡量产品的经济绩效，而效率仅仅是指提升业务响应能力，提高吞吐，降低成本。</strong></p><p style="text-align:justify">这里的定义引用了乔梁的《如何构建高效能研发团队》课程材料，本文并不讨论产品开发方法，因此后面的关注都在「效率」上。</p><p style="text-align:justify">本世纪 10 年代，早期的互联网从业者开发简易网站的时候，只需要学会使用 Linux、Apache、MySql、PHP（Perl）即可，这套技术有一个好记的名字：LAMP。可今天，在一个大型互联网公司工作的开发者，需要理解的技术栈上升了一个数量级，例如分布式系统、微服务、Web 开发框架、DevOps 流水线、容器等云原生技术等等。如果仅仅是这些复杂度还好说，毕竟都是行业标准的技术，以开发者的学习能力，很快就能掌握。令人生畏的复杂度在于，<strong>大型互联网公司都有一套或者多套软件系统，这些软件系统的规模往往都在百万行以上，质量有好有坏（坏者居多），而开发者必须基于这些系统开展工作。这个时候必须承担非常高的认知负荷，而修改软件的时候也会面临破坏原有功能的巨大风险，而风险的增高就必然导致速度的降低。</strong></p><p style="text-align:justify">因此<strong>研发效率的大幅降低，其中一个核心因素就是软件复杂度的指数上升。</strong></p><span id="OSC_h3_2"></span><h3>二、本质复杂度和偶然复杂度</h3><p style="text-align:justify">Fred Brooks 在经典著作《人月神话》的「没有银弹」一文中对于软件复杂度有着精彩的论述，他将软件复杂度分为本质复杂度（Essential Complexity）和偶然复杂度（Accidental Complexity）。这里的本质和偶然两个词来源于亚里士多德的《形而上学》，在亚里士多德看来，本质属性是一个物体必然拥有的属性，偶然属性是一个物体可以拥有的属性（也可以不拥有）。例如，一个电商软件必然会包含交易、商品等业务复杂度，因此我们称它们为本质复杂度；而同一个电商软件，可以是基于容器技术实现（也可以不是），可以是基于 Java 编写的（也可以不是），因此我们称由于容器技术或者 Java 技术而引入的复杂度，为偶然复杂度。</p><p style="text-align:justify">Fred Brooks 所描述的软件本质复杂度，指的就是来自问题域本身的复杂度，除非缩小问题域的范围，否则是无法消除本质复杂度的。而偶然复杂度是由于解决方案带来的，例如选择了 Java，选择了容器，选择了中台等等。</p><p style="text-align:justify">此外，我们可以从所谓问题空间（Problem Space）和方案空间（Solution Space）来理解这两个复杂度，问题空间就是现实的初始状态和期望状态，以及一系列约束规则（我们常常称之为业务），方案空间就是工程师设计实现的，一系列从初始状态达到期望状态的步骤。缺乏经验的工程师往往在还没理解清楚问题的情况下就急于写代码，这便是缺乏对于问题空间和方案空间的理解，而近年来领域驱动设计为那么多工程师所推崇，其核心原因就是它指导了大家去重视问题空间，去直面本质复杂度。Eric Evans 在 2003 年的著作《Domain Driven Design》，其副标题是 「Tackling Complexity in the Heart of Software」，我想这也不是偶然。</p><p style="text-align:justify">《人月神话》写于 1975 年，距今已经有 47 年了，Brooks 认为软件的本质复杂度是无法得到本质上的降低的，同时认为随着高级编程语言的演进，开发环境的发展演进，偶然复杂度会得到本质的降低。他的论断前半部分对了，然而后半部分是错了，我们今天的确有更高级的编程语言，功能更丰富的框架，能力更强大的 IDE，但是大家逐渐发现学习这些工具已经成为了一个不小的负担。</p><span id="OSC_h3_3"></span><h3>三、复杂度的爆炸</h3><p style="text-align:justify">软件只要不消亡，只要有人用，有开发者维护，那么它的复杂度几乎必然是不断上升的。软件的生存发展意味着商业上的成功，随着时间的积累，越来越多的人使用它，越来越多的功能被加入进去，它的价值越来越大，给企业带去源源不断的收入。前面我们解释过，软件的本质复杂度实际上是问题空间（或者称之为业务）带来的，因此给软件加入越多的功能，那么它就必然会包含越多的本质复杂度。此外，每解决一个问题，就对应了一个方案，而方案的实现必然又引入新的偶然复杂度，例如为了实现支付，需要实现某种新的协议，以对接一个三方的支付系统。软件复杂度是在商业上成功的企业所必须面对的幸福的烦恼。</p><p style="text-align:justify">和 Brooks 的时代所不同的是，今天的软件已经从深入到人类生活的方方面面。稍有规模的互联网软件，都服务着数百万、千万级的用户。阿里巴巴的双 11 在 2020 年的峰值实现了每秒 58.3 万笔的交易；Netflix 在 2021 年 Q4 拥有了 2.2 亿的订阅用户；而 TikTok 在 2021 年 9 月宣布月活数量超过 10 亿。这些惊人的商业成功背后，都少不了复杂的软件系统。而所有这些复杂软件系统，都不得不面对巨大的 Scalability 的挑战，<strong>服务一个人的系统，和服务一亿人的系统，其复杂度有着天壤之别。</strong></p><p style="text-align:justify">本质复杂度是一个方面，毕竟更多用户意味着更多的功能特性，但我们无法忽略这里的偶然复杂度，其中最典型的就是分布式系统引入的偶然复杂度。<strong>为了能够支撑如此大规模的用户量，系统需要能够管理数万机器（调度系统），需要能否管理好用户的流量（负载均衡系统），需要能够管理好不同计算单元之间的通讯（服务发现，RPC，消息系统），需要能够保持服务的稳定性（高可用体系）。</strong>这里的每一个主题都能延展开用几本书来描述，而开发者只有在初步掌握了这些知识后，才能够设计实现足够 Scalable 的系统，服务好大规模的用户。</p><p style="text-align:justify">相比于分布式系统引入的复杂度，团队的扩张更易带来偶然复杂度的急剧增长。成功产品的软件研发团队动辄数百人，有些已经达到了一两千人的规模。如果企业没有严格清晰的人才招聘标准，人员入职后没有严格的技术规范培训，当所有人以不同的风格，不同的长短期目标往代码仓库中提交代码的时候，软件的复杂度就会急剧上升。</p><p style="text-align:justify">例如，团队成员因为个人喜好，在一个全部是 Java 体系的系统中加入了 NodeJS 的组件，当该成员离开团队后，这个组件对于其他不熟悉 NodeJS 的成员来说，就是纯粹多出来的偶然复杂度；</p><p style="text-align:justify">例如，团队新人不熟悉系统，为了急于上线一个特性，又不想影响到系统的其他部分，就会很自然地在某个地方加一个 flag，然后在所有需要改动的地方加 if 判断，而不是去调整系统设计以适应新的问题空间；</p><p style="text-align:justify">例如，同一个领域概念，不同的人在系统不同的模块中使用了不同的名字，核心内涵完全一致，但又加入了差异的属性，平添了大量理解成本。</p><p style="text-align:justify">类似的复杂度都不是软件的本质复杂度，但它们会随着时间的流逝而积累，给开发者带来巨大的认知负担。如果软件存在的时间很长，那除了当前开发团队的规模之外，还得一并考虑历史上给这个软件贡献过代码的所有人，也难怪当程序员看到「祖传代码，勿动！」之类调侃的时候，会会心一笑。</p><p style="text-align:justify">我喜欢学习各种能力强大的编程语言，例如具备元编程能力的 Ruby 和 Scala，使用这些能力你可以尽情发挥自己的兴趣和创造力。但是我对在有一定团队规模的生产环境中使用这些编程语言持保留意见，因为除非花很大力气 Review 和控制代码风格，否则很可能 10 个人写出来的代码是 10 种风格，这种复杂度的增长是个灾难。相反，使用 Java 这种不那么灵活的语言，大家写代码的风格就比较难不一致。</p><p style="text-align:justify">团队的扩张还会带来另外一个问题，在大规模的团队中，关键干系人的目标事实上是影响软件复杂度的关键因素。我亲眼见过许多案例，其方案空间中明明放着简单的方案，但因为这个原因，当事人不得不选择复杂的方案，例如：</p><ul><li>原本方案只需要直接改动系统 A，但由于负责系统 A 的团队并没有解决该问题的动力，其他人不得不绕道去修改系统 B，C，D 来解决该问题。</li><li>原本方案只需要直接改动系统 A，但迫于系统 B 负责人或者上司的压力，方案不得不演进成同时改 A，B，甚至引入 C。</li></ul><p style="text-align:justify">更有甚者，为了各种各样的原因，提出一些完全假设出来的问题（即，事实上并不存在的本质复杂度），然后拿着软件系统一阵无谓折腾。最后个人或者某个团队的目标实现了，但软件没有提供任何增量的价值，而复杂度却不会因此而停止增长。</p><p style="text-align:center"><img src="https://pic2.zhimg.com/80/v2-3c5591fe957fcbb11c77f96fc48a8009_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">因此，只要软件有价值，有用户，有开发者维护，那么就不断会有功能增加，而商业上获得成功的软件必然伴随着用户量的增长和研发团队的增长，这三个因素会不断推动软件复杂度的增长直至爆炸，研发效率自然会越来越低。<strong>软件工程要解决的一个核心命题，就是如何控制复杂度，以让研发效率不至于下降的太厉害，这是一场对抗软件复杂度的战争。</strong></p><p style="text-align:center"><img src="https://pic4.zhimg.com/80/v2-7ca772216e10b3c39015b8424801b4eb_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_4"></span><h3>四、错误的应对方式</h3><p style="text-align:justify">面对效率地不断下降，研发团队的管理者必须做点什么。不幸的是，很多管理者并不明白效率的降低是由软件复杂度的上升造成的，更没有冷静地去思考复杂度蔓延直至爆炸的根因是什么，于是我们看到许多管理者其肤浅的应对方式收效甚微，甚至起到了反作用。</p><p style="text-align:justify">最常见的错误方式是设置一个不可更改的 Deadline，用来倒逼研发团队交付功能。但无数经验告诉我们，软件研发就是在质量、范围和时间这个三角中求取权衡。研发团队短期可以通过加班，牺牲假期等手段来争取一些时间（长期加班实际有百害无一利），但如果这个时间限制过于苛刻，那必然就要牺牲需求范围和软件质量。当需求范围不可缩减的时候，唯一可以被牺牲的就只有质量了，这实际就意味着在很短的时间内往系统中倾泻大量的偶然复杂度。</p><p style="text-align:justify">另一种做法是用「更先进」的技术去替换现有系统的技术，例如用 Java 的微服务体系技术去替换 PHP + Golang 体系的技术；或者用支撑过成功商业产品的中台类技术去替换原来的微服务体系技术；或者简单到用云产品去替换自建的开源服务。这些做法背后的基本逻辑是，「更先进」的技术在成功的商业场景中被验证过，因此可以被直接拿来解决现有的问题。</p><p style="text-align:justify">但在现实情况下，决策者往往忽略了当前的问题是否是「更先进」的技术可以解决的问题。如果现有的系统服务的用户在迅速增长，Scalablity 面临了严重的困境，那么这个答案是肯定的；如果现有的系统的稳定性堪忧，经常不可用且严重影响了用户体验，那么这个答案是肯定的。但是，<strong>如果现有的软件系统面临着研发效率下降问题，那么「更先进」的技术不仅帮不了什么忙，还会因为新老技术的切换给系统增加偶然复杂度。</strong></p><span id="OSC_h3_5"></span><h3>五、正确的技术战略</h3><p style="text-align:justify">前文我解释了导致复杂度增长的几个核心因素，包括业务复杂度的增长，分布式系统规模的增长，团队规模的增长，以及关键干系人目标的因素。这其中，分布式系统引入的偶然复杂度是最容易被消除的。为了更好得理解这个观点，我先简单介绍一下 Wardley Map。</p><p style="text-align:justify">Wardley Map 是一个帮助分析技术战略的工具，它以地图的方式展现，地图中的每个组件可以被理解成一个软件模块，纵座标是价值方向，越往上越靠近用户价值，横座标是进化方向，越往右越靠近成熟商业产品。</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-72d67983510d354ae7901c835ffe912e_720w.webp" referrerpolicy="no-referrer"></p><p style="text-align:justify">例如上图中，Compute 是计算资源，在今天有许多成熟的云计算公司提供，但它离图中上下文业务的用户价值非常远。Virtual Fitting（虚拟试衣）则离用户价值非常靠近，因为它可以让用户更有信心自己是否购买了合适的衣服，但是这个技术显然还谈不上是成熟产品，只是自己研发的模块，远没有达到开放商业化的阶段。</p><p style="text-align:justify">设计研发一套用来支撑百万、千万级用户的分布式系统，是非常有挑战的事情，而且会给系统引入大量的复杂度，管理好这些复杂度本身则又是一项巨大的挑战。<strong>幸运的是，今天的云厂商，包括阿里巴巴，亚马逊，谷歌和微软等，在这方面都具有丰富的经验，并且已经通过多年的积累，把这些经验通过商业产品提供给市场。</strong></p><p style="text-align:justify">从 Wardley Map 的方式去分析，我们就会发现，几乎所有的业务，其左上角（贴近直接用户价值，不成熟）都必须是要自己研发和承担复杂度的，而只要做好正确的软件架构，那么就能把右下角的部分（远离直接用户价值，有现成商业产品）提取出来，直接购买。所以在今天，一个合格的架构师，除非自己是云厂商，否则绝对不应该自己去投入研发数据库、调度系统、消息队列、分布式缓存等软件。通过购买的方式，研发团队完全不用承担这些复杂度，也能轻松地支撑好用户规模的增长。</p><span id="OSC_h3_6"></span><h3>六、微观层面的复杂度控制</h3><p style="text-align:justify">正确的技术战略能够在宏观层面帮助系统控制复杂度，在微观层面我们需要完全不同的方法。在讨论方法之前我想先引用一个来自《Grokking Simplicity》书中的一个简单例子。（有趣的是，这本书的副标题 「Taming complex software with functional thinking」 也是在表达对抗复杂度的意图。）</p><p style="text-align:justify">让我们来看两个函数（JavaScript）：</p><pre><code>function emailsForCustomers(customers, goods, bests) {  var emails = [];  for(var i = 0; i &lt; customers.length; i++) {    var customer = customers[i];    var email = emailForCustomer(customer, goods, bests);    emails.push(email);  }}
function biggestPurchasePerCustomer(customers) {  var purchases = [];  for(var i = 0; i &lt; customers.length; i++) {    var customer = customers[i];    var purchase = biggestPurchase(customer);    purchases.push(purchase);  }}</code></pre><p style="text-align:justify">初看起来这两个函数没什么问题，都是准备一个返回值，写一个循环，根据具体业务逻辑提取需要的数据，差别只是在于，前一个函数的业务逻辑是获取客户的 Email，后一个函数的业务逻辑是获取客户下过的最大的单。然而就这么简单的代码来说，也是存在可以降低的复杂度的，理解阅读这两个函数，每次都需要去理解 for 循环，这个复杂度是否可以进一步被降低呢？答案是肯定的。</p><p style="text-align:justify">对于这种到处可见的逻辑，即遍历集合的每个元素，对其中每个元素做一些处理，返回一个新元素，最后装成一个新的集合，可以被抽象成一个 map 函数。在这个例子中，我假设 JavaScript 支持 map 函数，那么上面的代码可以写成：</p><pre><code>function emailsForCustomers(customers, goods, bests) {  return map(customers, function(customer) {    return emailForCustomer(customer, goods, bests);  });}
function biggestPurchasePerCustomer(customers) {  return map(customers, function(customer) {    return biggestPurchase(customer);  });}</code></pre><p style="text-align:justify">抛开语言语法的因素不谈，这段代码除了这个 map 函数，剩下的就是函数名了，而函数名只要是命名得当的，那它其实就是本质复杂度，就是业务逻辑。行业先辈，大家耳熟能详的 Martin Fowler、Kent Beck、Robert C. Martin，无不在他们的书籍中强调命名的重要性，都是希望代码能够清晰地沟通意图，而这里最核心的意图应当是与问题域匹配的。</p><p style="text-align:justify">这个例子中的代码是极其简单的，所有程序员都能理解，可即便在这些地方还有降低复杂度的空间。可以想象在数年日积月累的代码中，会存在多少复杂度可被消除。我又想起多年前的一位同事兼长辈的程序员的教诲，他说优秀的代码应该是：</p><ul><li>It works</li><li>It is easy to understand</li><li>It is safe to change</li></ul><p style="text-align:justify">事实上要做到第二点已经是非常高的要求，这需要软件工程师精心地设计，清晰地沟通好需求，思考和遗留系统的融合，还需要压制住自己使用新技术（新语言，新的范式）的冲动。而第三点实际上是教会我们认真的写单元测试。</p><p style="text-align:justify">我不知道大家是否体验过这种感觉：在需求讨论清晰后，我编写了对应的代码和单元测试，具体是在原来的几万行 code base 上加了几百行，并原来 1000 个左右的单元测试上加入了 3-5 个单元测试，然后我在本地执行了一次 mvn clean test，这个过程也就消耗几分钟，全部测试都通过了，这时候我非常有信心把代码提交，而且我知道代码在生产环境运行出问题的概率极低。</p><p style="text-align:justify">这种感觉的核心是质量反馈，这个反馈时间越短，效率就越高，反馈时间越长，效率就越低。除了控制复杂度之外，软件工程师必须明白及时质量反馈的重要性，如果一行代码写下去，要等好几个小时，甚至好几天才知道其质量有问题，效率的低下可想而知。所以当我看到当组织自上而下提倡写单元测试，但大家实践中的一些怪现象时，常常会感到匪夷所思，这些现象会包括：</p><ul><li>低质量的单元测试：包括不写 assert，到处是 print 语句，要人去验证。</li><li>不稳定的单元测试：代码是好的，测试是失败的，测试集无法被信任。</li><li>耗时非常长的单元测试：运行一下要几十分钟或者几小时。</li><li>用代码生成单元测试：对不起，我认为这个东西除了提升覆盖率虚荣指标外，毫无意义。</li></ul><span id="OSC_h3_7"></span><h3>七、软件道德观</h3><p style="text-align:justify">在微观层面控制软件复杂度，认真编写单元测试以保障代码编写的质量反馈，对于研发效率来说是至关重要的，但同时也是耗时耗力的。而且由于这种投入对商业的价值需要很长时间才能体现出来，因此容易被研发主管所忽视。</p><p style="text-align:justify">开发者都是在生产代码、文档、API 服务等软件中间产物，这些中间产物被逐渐组装起来成为产品，产生商业价值。软件中间产物的质量对于研发组织的整体效率是至关重要的，而复杂度得到很好控制的代码和系统，就是高质量的软件中间产物；良好的软件研发道德，或者有时候也会认为这是良好的工程师文化，就是大家形成一种以交付高质量软件中间产物为荣，以交付低质量软件中间产物为耻的共识文化。</p><p style="text-align:justify"><strong>软件研发的核心职责之一是关注软件复杂度，通过开放代码、文档，Code Review 等方式让软件复杂度的信息透明，并且让所有在增加/降低复杂度的行为透明，并且持续激励那些消除复杂度的行为。唯有如此，在微观层面的控制复杂度的方法才能得到落实。</strong></p><span id="OSC_h3_8"></span><h3>八、系统架构对复杂度的影响</h3><p style="text-align:justify">介于宏观的技术战略和微观的工程师文化之间，存在着一块重要的决策区域，也对软件复杂度有着关键的影响，我称之为系统架构。在面对需求的时候，缺乏经验的工程师会直接想着在自己熟悉的模块中直接解决，而经验丰富的工程师会先思考一下系统上下文。在《Design Docs at Google》这篇优秀的技术文档写作指导中，就重点提到了，设计文档应当写清楚系统上下文图（system-context-diagram），这背后的原因是什么呢？</p><p style="text-align:justify">我近期对一个遗留系统做了一个依赖链路的梳理分析，这个系统是负责生产环境中各类资源的管理的，包括资源的规格，版本，依赖关系等等，梳理完成后，整体的结构吓了我一跳，这个图大致是这样的：</p><p style="text-align:center"><img src="https://pic3.zhimg.com/80/v2-037f7f3052926e0287b1ae45923379fa_720w.webp" referrerpolicy="no-referrer"></p><p>图中蓝色的部分是控制和执行的子系统（System X，Y，Z），例如控制容器的调度，控制镜像变更的执行等等，是比较清晰的。但是其余部分就不是这样了（A1, A2, A3, C1, C2, S, E），它们都是在管理一个资源的运行态版本，包括镜像的版本，容器的规格，是否有 GPU，容器的数量，关联的网络资源等等，但却演进出了七个子系统，这实际上是非常高的偶然复杂度。当一个领域的概念被分散到这么多子系统之后，就会产生一系列问题：</p><ul><li>不同子系统对于同一个概念有不同的名称，交互的时候会涉及各种翻译。</li><li>不同子系统承担了同一个实体的部分概念，导致修改的时候需要大范围一起修改，且容易出错。</li><li>更高的运维成本。</li></ul><p style="text-align:justify">仔细去分析这一复杂度形成的因素，我发现这既不是技术战略的问题，也不是微观层面工程师生产低质量代码导致，而是有其他更深层次的问题。其中的最核心的因素是，这些子系统在不同时期是归属于不同的团队的，有的甚至是不同部门的，具体来说，当各个部门各个团队目标不一致的时候，而这个系统又不幸地被拆到各个团队，那么就不会有人会对系统整体的复杂度控制负责。当有的团队在负责把这套系统商业化对外输出，有的团队在负责把这套系统从虚拟机模式演进到容器模式，有的团队在负责资源的成本控制，有的团队在思考全局高可用架构，而没有一个全局的架构师从整体控制概念，控制边界的时候，系统就自然而然地腐化成这样的一个状态了。</p><p style="text-align:justify">当一个问题域没有系统架构，或者其系统架构是错误的时候，你就会发现不同的人在发明不同的语言，这就好比相隔几十公里的两个村子，常常对同一个概念有不同的用词或者发音。日常生活中语言的不精确不是问题，因为日常的沟通是充满上下文的（表情，气氛，环境等），但在计算机的世界，语言的不精确就意味着需要写代码翻译，一旦翻译错误软件就会执行出错。这也就是为什么领域驱动设计那么强调统一语言，强调限定上下文。但领域驱动设计是方法论，而知道方法并不能取代系统架构角色的缺位。</p><p style="text-align:justify">这个复杂系统是康威定律的绝佳例证，康威定律说：「任何系统设计的系统，其系统结构会复制组织的沟通结构。」这句话其实还是有些抽象的，更具体的一些阐述是：</p><p style="text-align:justify">「康威定律 … 是一个合理的社会学观察。… 除非模块 A 和模块 B 的设计及实现者能有效沟通，否则这两个软件模块是无法正确对接的。因此软件系统的接口结构，就必然会和生产软件系统的社会结构及组织相对应。」</p><p style="text-align:justify">康威定律所揭示的事实，就是软件架构在很大程度上是由组织的结构和协作模式决定的，这实际上已经不再是一个软件技术问题了，而是一个组织管理问题。因此，解决系统架构层面的软件复杂度问题，就必须面对组织管理的挑战。关键问题域是否有唯一的负责人？当不同的团队在同一个问题域重复建设系统的时候，如何整合团队？当已有团队为了自己的生存，不断夸大其负责系统的重要性和特殊性，如何识别这种问题？组织如何给予大家充分的安全感，让工程师愿意为了架构的合理性，放弃自己辛苦耕作的系统模块？</p><p style="text-align:justify">讨论管理工作似乎已经超出了这篇论述软件复杂度的文章的范畴，但很多工程师或者隐隐感觉，或者思来想去最终领悟，这是我们的软件系统或优雅健壮或千疮百孔的根本因素。</p><span id="OSC_h3_9"></span><h3><strong>小结</strong></h3><p style="text-align:justify">我曾经的大老板郭东白曾在一次 QCon 的演讲中讨论优秀架构师的特质，除了大家都很好理解的有眼光、善于思考、能感召等几个特质外，还特别强调了「有良知」，他说：</p><p style="text-align:justify">有良知，这是一个架构师随着时间的流逝，沉淀在身上最重要的品质。什么是有良知？为人正直，选择做正确的事情。很多人是非常聪明的，业务理解能力强，技术实践丰富，但他不一定为公司或为组织做最正确的事情。有良知是非常重要的一个事情，如果架构师没有素质，他会让一家公司的损失很惨重。</p><p style="text-align:justify">软件复杂度是人的行为引起的，无论是微观层面的重视质量和工程师文化，在系统架构层面让组织结构和沟通符合客观问题域，还是在技术战略层面做符合公司利益的决策，这里都存在客观无法改变的规律。如何认识到这些规律，并基于这些规律制定决策（可改变可影响），努力为公司创造价值，努力让每个工程师被尊重，是每个工程师、架构师、技术管理者所应当秉承的基本态度。本文讨论软件复杂度的初衷，就是尽量去揭示复杂度背后的客观规律，希望帮助大家认清现实，用更务实的态度去思考和决策，创造更有价值，也更让自己满足的软件系统。</p><p style="text-align:justify"><strong>参考阅读：</strong></p><ol><li>Why choose Domain-Driven Design? 这篇文章清晰地解释了本质复杂度和领域驱动设计的关系。</li><li>《人月神话》-「没有银弹」一篇阐述了本质复杂度和偶然复杂度的概念。</li><li>《The Lean Product Playbook》- 本书的第 2 章清晰地解释了 Problem Space 和 Solution Space。</li><li>Wardley Map - 分析技术战略的绝佳工具，合理地选取商业产品可以帮助降低系统复杂度。</li><li>Grokking Simplicity - 在微观层面，使用函数式的思维降低软件复杂度。</li><li>Design Docs at Google</li><li>Conway’s Law</li><li>警惕复杂度困局：关于软件复杂度的思考</li></ol><p style="text-align:justify">作者｜晓斌</p><blockquote><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fclick.aliyun.com%2Fm%2F1000373503%2F" target="_blank"><span style="color:#ff9900">点击立即免费试用云产品，开启云上实践之旅！</span></a></strong></blockquote><p style="text-align:justify"><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.aliyun.com%2Farticle%2F1353112%3Futm_content%3Dg_1000381960" target="_blank">原文链接</a></strong></p><p style="text-align:justify"><strong>本文为阿里云原创内容，未经允许不得转载。</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 22 Oct 2023 02:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/yunqi/blog/10120475</guid>
            <link>https://my.oschina.net/yunqi/blog/10120475</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[clumsy 0.3 历时十年发布，差网络环境模拟工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>clumsy 0.3 现已发布，距离 v0.1 版本已经过去了十年的时间。clumsy 能在 Windows 平台下人工造成不稳定的网络状况，方便你调试应用程序在极端网络状况下的表现。</p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>0.3 二进制文件与一年半前发布的 0.3 RC4 相同。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjagt%2Fclumsy%2Fcommit%2F599a43a558761a01f891096ffad63cf5babdb676" target="_blank">将滞后时间上限提高到 15 秒</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjagt%2Fclumsy%2Fblob%2Fmaster%2Fbuild.zig" target="_blank">改用 zig 0.9.0 生成二进制文件</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjagt%2Fclumsy%2Fissues%2F84" target="_blank">提供 3 个二进制文件，每个文件使用不同的 WinDivert signs</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjagt%2Fclumsy%2Fpull%2F65" target="_blank">将 iup 和 WinDivert 更新到最新版本</a></li><li>改用 genie 和 msys2 进行构建</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjagt%2Fclumsy%2Fpull%2F70" target="_blank">带宽模块</a></li><li>添加了 RST。</li><li>添加了针对突发数据包丢失的「drop throttled」。</li><li>更准确的 chance range。</li></ul><p>更新说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjagt%2Fclumsy%2Freleases%2Ftag%2F0.3" target="_blank">https://github.com/jagt/clumsy/releases/tag/0.3</a></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 22 Oct 2023 02:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262839/clumsy-0-3-released</guid>
            <link>https://www.oschina.net/news/262839/clumsy-0-3-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Hugging Face 被限制访问]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.yahoo.com%2Fopen-source-ai-platform-hugging-202603150.html" target="_blank">根据 Yahoo 新闻的报道</a></u>，人工智能公司 Hugging Face&nbsp;发言人在周五的一封电子邮件中写道：</p><blockquote><p>中国的人工智能社区非常出色，我们希望他们能更好地访问 HF，但目前我们对于政府的法规无能为力。</p><p><em>The Chinese AI community is incredible and we wish their access to HF was better, but there’s not much we can do against government regulations for now</em></p></blockquote><p><img height="864" src="https://static.oschina.net/uploads/space/2023/1021/144415_FF5v_2720166.png" width="1322" referrerpolicy="no-referrer"></p><p>目前尚不清楚 Hugging Face 何时出现访问限制问题。雅虎的报道称，早在今年 5 月起，就已经有用户在 HF 的论坛上抱怨连接问题。<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.chinatalk.media%2Fp%2Fhugging-face-blocked-self-castrating" target="_blank">另外有报道称</a></u>，至少从 9 月 12 日起，Hugging Face 在中国就完全无法使用。</p><p>Hugging Face 有机器学习领域的 "GitHub" 之称，其社区提供了极其丰富的机器学习资源，据称托管着超过 365,000 个开源人工智能模型。</p><hr><p>延伸阅读</p><ul><li><a href="https://www.oschina.net/news/236397" target="news">国家网信办发布《生成式人工智能服务管理办法（征求意见稿）》</a></li><li><a href="https://www.oschina.net/news/249227" target="news">国家网信办等七部门联合公布《生成式人工智能服务管理暂行办法》</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 21 Oct 2023 08:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262772/hugging-face-banned</guid>
            <link>https://www.oschina.net/news/262772/hugging-face-banned</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Oracle 推出 Visual Studio Code 的 Java 开发扩展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>Oracle <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finside.java%2F2023%2F10%2F18%2Fannouncing-vscode-extension%2F" target="_blank">宣布</a>推出针对 Visual Studio Code 的 Java Platform 扩展。该扩展涵盖了从编辑、编译到调试和测试的整个开发周期，并支持类级和变量重构。</p><p>初始版本提供了许多功能，包括：项目视图、自动完成、错误高亮显示、<span style="background-color:#ffffff; color:#333333">跳转到定义、某些形式的自动重构、JavaDoc-on-hover、调试支持、对 JUnit 的单元测试支持以及对 Gradle 和 Maven 项目的支持。</span>该扩展现已在&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3DOracle.oracle-java" target="_blank">Visual Studio Code marketplace</a>&nbsp;上提供。</p><p><img alt="" height="403" src="https://oscimg.oschina.net/oscnet/up-28364ff558580d6dd014206b5a9d485ad26.png" width="300" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Oracle 在公告中表示，Visual Studio Code 作为通用 IDE 的日益普及已经改变了编程语言与其 IDE 之间的关系。在过去，开发人员首先会选择一种语言，然后为该语言选择一个 IDE。如今，许多开发人员希望 VS Code 等与语言无关的 IDE 能够为他们可能使用的每种语言提供良好的支持。</span></p><p><span style="color:#000000">「Java 拥有优秀的专业 IDE，许多大公司和专门的 Java 专业人士都依赖这些 IDE，但也有大量 Java 开发人员使用 VS Code，尤其是学习 Java 的学生和除了 Java 之外还使用其他语言的人。我们希望 Java 程序员能够在他们喜欢的 IDE 中获得良好的体验。</span><span style="color:#000000">」</span></p><p>根据介绍，<span style="color:#000000">为了支持编程语言，VS Code 扩展的核心是 language server —— 一个操作语言工具并使用 Language Server Protocol 与 IDE 通信的后端。</span></p><p><span style="color:#000000">Oracle 的 Java language server 是为 Apache NetBeans 项目开发的服务器的精简版本，基于 OpenJDK JDK 的 javac 编译器（用于代码编辑和编译）和 OpenJDK 的调试器接口（用于调试），使得其可以在新的 JDK 功能推出后立即启用 VS Code 支持。「为此，我们的 VS Code 扩展将支持当前的 JDK 版本以及下一个即将发布的 JDK 版本。」</span></p><p><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finside.java%2F2023%2F10%2F18%2Fannouncing-vscode-extension%2F" target="_blank">查看官方公告</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 21 Oct 2023 05:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262759/oracle-vscode-java-extension</guid>
            <link>https://www.oschina.net/news/262759/oracle-vscode-java-extension</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[阿里达摩院发布业内首个遥感 AI 大模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">阿里达摩院<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FNi_g1d91PNiZ0jPJ0dpxHA" target="_blank">宣布</a>发布业内首个遥感 AI 大模型（AIE-SEG），号称「率先在遥感领域实现了图像分割的任务统一，一个模型实现‘万物零样本’的快速提取」，并可识别农田、水域、建筑物等近百种遥感地物分类，还能根据用户的交互式反馈自动调优识别结果。</span></p><p><span style="color:#000000"><span style="background-color:#ffffff">支持多模态交互，如输入「提取影像中的耕地农田」，会自动识别所选目标</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff"><img alt="" src="https://oscimg.oschina.net/oscnet/up-e41eddfa006ad12d3953961eb35266c87df.gif" width="500" referrerpolicy="no-referrer"></span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">支持任意地表目标识别，并建立多级语义标签体系</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff"><img alt="" height="202" src="https://oscimg.oschina.net/oscnet/up-5237de5b16f14bb37816aa34e19678d2b6a.png" width="500" referrerpolicy="no-referrer"></span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">支持包括衞星与无人机图像的全要素提取</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff"><img alt="" height="224" src="https://oscimg.oschina.net/oscnet/up-8097d2ef3e8d27fe07f25657b0b75359952.png" width="500" referrerpolicy="no-referrer"></span></span></p><p><span style="color:#000000">支持交互式结果修正，如识别「水田」时误把「水域」也提取，可通过人工操作纠偏</span></p><p><span style="color:#000000"><img alt="" height="184" src="https://oscimg.oschina.net/oscnet/up-264dc32b6b766d07665727a8589bb9e8272.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">支持通用及多分类变化检测</span></p><p><span style="color:#000000"><img alt="" height="206" src="https://oscimg.oschina.net/oscnet/up-4598e887d44a7bdb7ce6a8c0532b0b19e02.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">根据介绍，该模型在一些特定场景下，对比传统的遥感模型，实例提取的准确率可提升 25%，变化检测的准确率可提升 30%。基于这些能力，遥感 AI 大模型提供了「开箱即用」的 API 调用服务，用户可以根据需求定制不同的遥感 AI 解译功能，如水体提取、耕地变化监测、光伏识别等。</span></p><p>「<span style="color:#000000">这将让 AI 进一步下沉到田间地头，大幅提升灾害防治、自然资源管理、农业估产等遥感应用的分析效率。</span>」</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 21 Oct 2023 03:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262744</guid>
            <link>https://www.oschina.net/news/262744</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[信通院石霖：国内企业想追赶 GPT-4 需走开源路线]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="background-color:#ffffff; color:#222222">在 OpenCSG 举办的「开源开放，智慧传神」发布会上，中国信通院云计算与大数据研究所内容科技部主任石霖认为，开源和闭源是交替进行的，或者说是一个螺旋上升的状态，与企业背后的商业策略有非常大的联系。</span></p><p><span style="background-color:#ffffff; color:#222222">他表示，目前国内的大模型与 GPT-4 仍存在较大的差距，要推动国内大模型生态的发展，需要落在开源这条路线上。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 21 Oct 2023 03:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262743</guid>
            <link>https://www.oschina.net/news/262743</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Radius —— 微软开源的云原生应用程序平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="project_detail_above_text_link_1" data-tracepid="project_detail_above_text_link"><a style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" target="_blank">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt; <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p>微软刚刚发布了一个新的基于开源的软件平台，旨在帮助开发者和企业创建、部署和管理基于云的应用程序。这个平台叫做 Radius，它来自微软 Azure 孵化团队。</p><p>Radius 是一个云原生应用程序平台，使开发人员和支持他们的平台工程师能够协作交付和管理默认情况下遵循组织成本、运营和安全性最佳实践的云原生应用程序。Radius 是一个开源项目，支持跨私有云、Microsoft Azure 和 Amazon Web Services 部署应用程序，未来还会有更多云提供商推出。</p><div><blockquote><p>Radius 旨在适应而不是破坏现有的开发任务和 CI / CD 管道，致力于帮助开发人员更好地了解构成其应用程序的所有组件，并处理权限、连接字符串等平台配置，以简化他们的任务。因此，运营商可以确保所有应用程序的部署都符合组织策略，然后使用 Radius 来管理应用程序及其资源。</p></blockquote></div><div><p>微软举了一个例子，说明 Radius 如何与使用 Mongo 数据库的应用程序协作：</p></div><div><blockquote><p>借助 Radius，开发人员可以在应用程序中对 Mongo 资源进行建模，并在开发和测试阶段使用其连接字符串。当需要在生产环境中进行部署时，开发人员只需将应用程序定义连接更改为已由操作员预先配置的 Azure CosmosDB 或 AWS DocumentDB 等服务，即可交换应用程序资源。换句话说，更改 Radius 中应用程序的支持基础设施不再需要应用程序代码或配置更改。</p></blockquote></div><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Radius 平台的主要功能包括：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>团队协作：Radius 应用程序和环境允许开发人员与运营人员一起定义和交付应用程序。</li><li>基础设施配方：默认符合组织最佳实践和 IT 政策的可交换基础设施。</li><li>应用程序图：了解应用程序中的服务和基础设施如何互连。</li><li>云中立：跨开发、本地和云环境进行部署，获得一致的体验。</li><li>增量采用：将 Radius 集成到现有工作流程和基础设施即代码模板的现有目录中。</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Sat, 21 Oct 2023 03:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/radius</guid>
            <link>https://www.oschina.net/p/radius</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 企业级物联网平台快速开发框架 PandaX]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-pandax" class="anchor" href="https://gitee.com/XM-GO/PandaX#pandax"></a>PandaX</h1><div align="center"><img src="https://s3.bmp.ovh/imgs/2021/12/86b15968432fc6ea.png" width="100" referrerpolicy="no-referrer"></div><div align="center"><h3 align="center"><a id="user-content-pandax 企业级物联网平台快速开发框架" class="anchor" href="https://gitee.com/XM-GO/PandaX#pandax%E4%BC%81%E4%B8%9A%E7%BA%A7%E7%89%A9%E8%81%94%E7%BD%91%E5%B9%B3%E5%8F%B0%E5%BF%AB%E9%80%9F%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6"></a>PandaX 企业级物联网平台快速开发框架</h3></div><div align="center"><h3 align="center"><a id="user-content-基于 go-120 前后端分离架构代码精简开箱即用前端紧随前沿-vue30--typescript--vite3--element-plus 技术" class="anchor" href="https://gitee.com/XM-GO/PandaX#%E5%9F%BA%E4%BA%8Ego-120%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E6%9E%B6%E6%9E%84%E4%BB%A3%E7%A0%81%E7%B2%BE%E7%AE%80%E5%BC%80%E7%AE%B1%E5%8D%B3%E7%94%A8%E5%89%8D%E7%AB%AF%E7%B4%A7%E9%9A%8F%E5%89%8D%E6%B2%BF-vue30--typescript--vite3--element-plus%E6%8A%80%E6%9C%AF"></a>基于 Go 1.20 前后端分离架构，代码精简，开箱即用，前端紧随前沿 Vue3.0 + TypeScript + vite3 + Element-plus 技术</h3></div><h2><a id="user-content-平台简介" class="anchor" href="https://gitee.com/XM-GO/PandaX#%E5%B9%B3%E5%8F%B0%E7%AE%80%E4%BB%8B"></a>🌈平台简介</h2><ul><li>对前后端进行了大部分功能的封装，后端自封装 go-restful，使用起来更加简洁，功能逻辑清晰，能快速上手学习，并用在生产中。</li><li>报表大屏设计器: 我们只需要拖拉拽即可绑定数据库，完成组态，报表和炫酷大屏的制作，无需要单独开发大屏。</li><li>成熟的规则引擎: 项目针对数据处理使用了规则链进行处理，简化开发及配置。</li><li>前端采用 VUE3.0+ TypeScript + vite3 + Element-plus：<a href="https://gitee.com/XM-GO/PandaUi">PandaUI</a>，适配手机、平板、pc 内置多种 ui 功能减少开发量</li><li>高效率的开发，使用代码生成器可以一键生成前后端代码，可在线预览代码，减少代码开发量。。</li><li>完善的权限认证系统：完善的权限认证系统，包含，菜单按钮权限，api 权限，组织权限。</li><li>多数据库：项目同时支持 MySQL，PostgreSql 等数据库根据自身需求更改。</li></ul><h2><a id="user-content-在线体验" class="anchor" href="https://gitee.com/XM-GO/PandaX#%E5%9C%A8%E7%BA%BF%E4%BD%93%E9%AA%8C"></a>🏭在线体验</h2><p>演示地址：<a href="https://gitee.com/link?target=http%3A%2F%2F101.35.247.125%3A7789%2F">http://101.35.247.125:7789/</a>  帐号：admin 密码：123456<br>
组态大屏：<a href="https://gitee.com/link?target=http%3A%2F%2F101.35.247.125%3A7790%2F">http://101.35.247.125:7790/</a><br>
规则引擎：<a href="https://gitee.com/link?target=http%3A%2F%2F101.35.247.125%3A7791%2F">http://101.35.247.125:7791/</a></p><hr><h2><a id="user-content-系统在线文档" class="anchor" href="https://gitee.com/XM-GO/PandaX#%E7%B3%BB%E7%BB%9F%E5%9C%A8%E7%BA%BF%E6%96%87%E6%A1%A3"></a>系统在线文档</h2><ul><li>文档地址 ：<a href="https://gitee.com/link?target=http%3A%2F%2F101.35.247.125">http://101.35.247.125</a></li></ul><p><strong>&gt; 未来会补充文档和视频，方便友友们使用！</strong></p><h2><a id="user-content-系统截图" class="anchor" href="https://gitee.com/XM-GO/PandaX#%E7%B3%BB%E7%BB%9F%E6%88%AA%E5%9B%BE"></a>🚧系统截图</h2><table><tbody><tr><td><img src="https://s3.bmp.ovh/imgs/2023/08/22/9b285c377717adc7.png" referrerpolicy="no-referrer"></td><td><img src="https://s3.bmp.ovh/imgs/2023/10/09/34ffa64e871f5264.png" referrerpolicy="no-referrer"></td></tr><tr><td><img src="https://s3.bmp.ovh/imgs/2023/10/09/4cea91a8e1dfe99b.png" referrerpolicy="no-referrer"></td><td><img src="https://s3.bmp.ovh/imgs/2023/10/09/0369e8ca0e71f0bb.png" referrerpolicy="no-referrer"></td></tr><tr><td><img src="https://s3.bmp.ovh/imgs/2023/10/09/c0a18770afc652c3.png" referrerpolicy="no-referrer"></td><td><img src="https://s3.bmp.ovh/imgs/2023/10/09/b8cf369ea64daf52.png" referrerpolicy="no-referrer"></td></tr><tr><td><img src="https://s3.bmp.ovh/imgs/2023/03/24/0f9a87733b5fe8da.png" referrerpolicy="no-referrer"></td><td><img src="https://s3.bmp.ovh/imgs/2023/08/22/58dda6cddceba5da.png" referrerpolicy="no-referrer"></td></tr></tbody></table>
更多功能请访问系统体验
<h2><a id="user-content-联系我们" class="anchor" href="https://gitee.com/XM-GO/PandaX#%E8%81%94%E7%B3%BB%E6%88%91%E4%BB%AC"></a>联系我们</h2><p><strong>QQ：2417920382</strong><a target="_blank" href="https://gitee.com/link?target=http%3A%2F%2Fwpa.qq.com%2Fmsgrd%3Fv%3D3%26uin%3D2417920382%26site%3Dqq%26menu%3Dyes">    点击这里给我发消息</a></p><p><strong>QQ 群：467890197</strong><a target="_blank" href="https://gitee.com/link?target=https%3A%2F%2Fqm.qq.com%2Fcgi-bin%2Fqm%2Fqr%3Fk%3DBqzPxK0qWQEyI7YhnSfxc-GsAMlAIgta%26jump_from%3Dwebapi"><img border="0" src="https://pub.idqqimg.com/wpa/images/group.png" alt="PandaX 快速开发交流群" title="PandaX 快速开发交流群" referrerpolicy="no-referrer"></a></p><h2><a id="user-content--内置功能" class="anchor" href="https://gitee.com/XM-GO/PandaX#-%E5%86%85%E7%BD%AE%E5%8A%9F%E8%83%BD"></a>⚡ 内置功能</h2><ul><li><span>✔</span><strong><code>用户管理</code></strong> - <em>用户是系统操作者，该功能主要完成系统用户配置。.</em></li><li><span>✔</span><strong><code>组织管理</code></strong> - <em>配置系统组织机构（公司、组织、小组），树结构展现支持数据权限。</em></li><li><span>✔</span><strong><code>岗位管理</code></strong> - <em>配置系统用户所属担任职务。</em></li><li><span>✔</span><strong><code>菜单管理</code></strong> - <em>配置系统菜单，操作权限，按钮权限标识等。</em></li><li><span>✔</span><strong><code>角色管理</code></strong> - <em>角色菜单,API 权限分配、设置角色按机构进行数据范围权限划分。</em></li><li><span>✔</span><strong><code>字典管理</code></strong> - <em>对系统中经常使用的一些较为固定的数据进行维护。</em></li><li><span>✔</span><strong><code>参数管理</code></strong> - <em>对系统动态配置常用参数。</em></li><li><span>✔</span><strong><code>通知公告</code></strong> - <em>系统通知公告信息发布维护</em></li><li><span>✔</span><strong><code>日志系统</code></strong> - <em>记录日志，更直观浏览</em></li><li><span>✔</span><strong><code>系统接口</code></strong> - <em>根据业务代码自动生成相关的 api 接口文档。</em></li><li><span>✔</span><strong><code>服务监控</code></strong> - <em>监视当前系统 CPU、内存、磁盘、堆栈等相关信息。</em></li><li><span>✔</span><strong><code>代码生成</code></strong> - <em>可直接通过框架生成前后端基础业务代码（go、vue），减少开发时间。</em></li><li><span>✔</span><strong><code>组态大屏设计器</code></strong> - <em>通过拖拉拽直接生成组态、大屏。</em></li><li><span>✔</span><strong><code>规则链设计</code></strong> - <em>物联网规则链过滤</em></li><li><span>✔</span><strong><code>表单设计</code></strong> - <em>表单设计</em></li><li><span>✔</span><strong><code>报表设计</code></strong> - <em>数据报表设计</em></li><li><span>✔</span><strong><code>产品管理</code></strong> - <em>设备的产品管理</em></li><li><span>✔</span><strong><code>设备管理</code></strong> - <em>设备的管理</em></li></ul><h2><a id="user-content--以后可能会有什么 nb 功能" class="anchor" href="https://gitee.com/XM-GO/PandaX#-%E4%BB%A5%E5%90%8E%E5%8F%AF%E8%83%BD%E4%BC%9A%E6%9C%89%E4%BB%80%E4%B9%88nb%E5%8A%9F%E8%83%BD"></a>🛠 以后可能会有什么 NB 功能？</h2><ul><li><span>开发中</span><strong><code>3D 组态 (2023-Q4)</code></strong> - <em>根据 2d 组态自动生成 3D 组态</em></li><li><span>开发中</span><strong><code>报表设计器（2024-Q1）</code></strong> - <em>excel 的低代码报表设计</em></li></ul><hr><h2><a id="user-content-前端工程结构" class="anchor" href="https://gitee.com/XM-GO/PandaX#%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E7%BB%93%E6%9E%84"></a>前端工程结构</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">├── src</span><span id="LC2" class="line">│   ├── api                  # Api ajax 等</span><span id="LC3" class="line">│   ├── assets               # 本地静态资源</span><span id="LC4" class="line">│   ├── i18n                 # 国际化</span><span id="LC5" class="line">│   ├── components           # 业务通用组件</span><span id="LC6" class="line">│   ├── layout               # layout</span><span id="LC7" class="line">│   ├── theme                # css 主题样式</span><span id="LC8" class="line">│   ├── router               # Vue-Router</span><span id="LC9" class="line">│   ├── store                # Vuex</span><span id="LC10" class="line">│   ├── utils                # 工具库</span><span id="LC11" class="line">│   ├── views                # 业务页面入口和常用模板</span><span id="LC12" class="line">│   ├── App.vue              # Vue 模板入口</span><span id="LC13" class="line">│   └── main.ts              # Vue 入口 TS</span><span id="LC14" class="line">├── README.md</span><span id="LC15" class="line">└── package.json</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-后端工程结构" class="anchor" href="https://gitee.com/XM-GO/PandaX#%E5%90%8E%E7%AB%AF%E5%B7%A5%E7%A8%8B%E7%BB%93%E6%9E%84"></a>后端工程结构</h2><table><thead><tr><th align="center">目录</th><th align="left">功能</th></tr></thead><tbody><tr><td align="center"><code>deploy</code></td><td align="left">部署文件，本项目部署是利用<code>K3S</code>进行部署的，因此里面的文档为部署文档</td></tr><tr><td align="center"><code>apps</code></td><td align="left">基本功能,所有功能模块全在这里面</td></tr><tr><td align="center"><code>iothub</code></td><td align="left">设备接入层，设备数据上报在这里处理，使用 emqx 的 hook 模式</td></tr><tr><td align="center"><code>resource</code></td><td align="left">项目启动或生成的资源文件存放目录。</td></tr><tr><td align="center"><code>pkg</code></td><td align="left">所有开发过程中的全局通用代码。</td></tr><tr><td align="center"><code>uploads</code></td><td align="left">存储上传的文件的地方</td></tr></tbody></table><p>更多功能请访问系统。</p><hr><h2><a id="user-content-版权说明" class="anchor" href="https://gitee.com/XM-GO/PandaX#%E7%89%88%E6%9D%83%E8%AF%B4%E6%98%8E"></a>版权说明</h2><ul><li>PandaX 物联网低代码开发基座采用 Apache-2.0 技术协议</li><li>PandaX 代码完全开源，可用于个人学习交流使用,</li><li>不允许商业使用,如需商业使用请联系作者。</li><li>不得进行简单修改包装声称是自己的项目</li><li>我们已经申请了相关的软件开发著作权和相关登记</li><li>如有使用我们项目功能等的扩展项目，请在项目介绍中，进行明确说明</li></ul><h4><a id="user-content--支持作者" class="anchor" href="https://gitee.com/XM-GO/PandaX#-%E6%94%AF%E6%8C%81%E4%BD%9C%E8%80%85"></a>💌 支持作者</h4><p>如果觉得框架不错，或者已经在使用了，希望你可以去 <a target="_blank" href="https://gitee.com/XM-GO/PandaX">PandaX</a> 或者
<a target="_blank" href="https://gitee.com/XM-GO/PandaUi">PandaUi</a> 帮我点个 ⭐ Star，这将是对我极大的鼓励与支持。</p>]]>
            </description>
            <pubDate>Sat, 21 Oct 2023 03:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/XM-GO/PandaX</guid>
            <link>https://gitee.com/XM-GO/PandaX</link>
        </item>
        <item>
            <title>
                <![CDATA[36 种场景分析 ChatGPT Vision 能力，LMM 将全面替代大语言模型？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" target="_blank">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt; <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span style="background-color:#ffffff; color:#080b31">LMM 将会全面替代大语言模型？</span></span></span><span><span><span>人工智能新里程碑 GPT-V 美国预先公测，医疗领域/OCR 实践+166 页 GPT-V 试用报告首发解读</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-11-41H6P0RkbuF16lABB16.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p><span><span><strong><span>ChatGPT Vision</span></strong></span></span><span><span><span style="background-color:#f7f7f8; color:#374151">，亦被广泛称为 GPT-V 或 GPT-4V，代表了人工智能技术的新里程碑。作为</span></span></span><span><span><strong><span>LMM (Large Multimodal Model) </span></strong></span></span><span><span><span style="background-color:#f7f7f8; color:#374151">的代表，它不仅继承了 LLM (Large Language Model) 的文本处理能力，还加入了图像处理的功能，实现了文本与图像的多模态交互。与传统的 LLM 相比，GPT-V 更加强大和灵活，能够更深入地理解和生成与图像相关的内容。这种进化打开了无数新的应用可能性，从图像描述、创意设计到复杂的图文结合任务，GPT-4V 都展现出了卓越的性能和广泛的潜力。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>使用方法</span></strong></span></span><span><span><span>：GPT-V 目前对于美国区 ChatGPT Plus 账户开放。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>相关链接</span></strong></span></span><span><span><span>：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fblog%2Fchatgpt-can-now-see-hear-and-speak" target="_blank" rel="nofollow"><span><span><span>ChatGPT can now see, hear, and speak</span></span></span></a><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>相关介绍</span></strong></span></span><span><span><span>：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.openai.com%2Fpapers%2FGPTV_System_Card.pdf" target="_blank" rel="nofollow"><span><span><span>GPTV_System_Card.pdf</span></span></span></a><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>166 页 GPT-V 试用报告</span></strong></span></span><span><span><span>：</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2309.17421.pdf" target="_blank" rel="nofollow"><span><span><span>Dawn of LMMs: Preliminary Explorations with GPT-4V(ision)</span></span></span></a><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>性能</span></strong></span></span><span><span><span>：对于 ChatGPT4，速度比纯文本中文 Prompt 慢 40% 左右。（注意，当从 GPT4 切换到 GPT-V 后，纯文本中文 Prompt 速度提升了大概 200%）</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>花费</span></strong></span></span><span><span><span>：$20 美元一月，限速 3 小时 25 条，尚未开放 API</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>调研版本</span></strong></span></span><span><span><span>：10-12 ChatGPT Vision（图片聊天/GPT 多模态功能）</span></span></span><span><span><span style="color:#565869"></span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.openai.com%2Fen%2Farticles%2F6825453-chatgpt-release-notes" target="_blank" rel="nofollow"><span><span><span>ChatGPT September 25 Version</span></span></span></a><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>本文图片部分为实践（OCR/医学等），部分来自网络（推特/Arxiv 试用报告），题图由 ChatGPT DALL-E 3 生成。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>本文尝试从以下案例，对 AI 新里程碑 LMM 进行探索</span></strong></span></span><span><span><span>：</span></span></span></p><div><img alt="" height="541" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-11-11wrX0yABBdPKpkZz.png" width="441" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>TLDR 总结</span></strong></span></span><span><span><span>：</span></span></span></p><div><span>1.</span><span><span><span><span>ChatGPT Vision</span></span></span><span><span><u><span>更偏向于有创造性的图片理解，而非机器性细节识别。</span></u></span></span></span></div><div><span>2.</span><span><span><span><span>ChatGPT Vision 试图以大模型的涌现能力，从高层次理解整个图片，将图片如同文字一般对待，而非是 OCR 式的</span></span></span><span><span><strong><span>匹配识别</span></strong></span></span><span><span><span>。ChatGPT Vision 和 OCR 的区别，与语义搜索和关键词搜索的区别类似。</span></span></span></span></div><div><span>3.</span><span><span><span><span>ChatGPT Vision 具有较大</span></span></span><span><span><u><span>幻觉问题</span></u></span></span><span><span><span>，Few-shot/CoT 等 Prompting 方法也无法改善这一点（涌现能力不足），说明 ChatGPT Vision</span></span></span><span><span><span style="color:#f5222d">仍处于像当年 ChatGPT v3 一样的初期阶段</span></span></span><span><span><span>。预计未来几年随着参数规模的进一步提升，多模态大模型可能会复现文本大模型的发展路径。</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><div><img alt="" height="470" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-03CTxIHlPmvmJxvJe.png" width="548" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>（图 1：Few-shot 方法不能提高 GPT-4V 获取仪表板信息的准确性，红色代表回答错误）</span></span></span></p><div><img alt="图片" height="838" src="https://image.jiqizhixin.com/uploads/editor/7e40cd27-96e6-4075-8280-f70fae614022/640.png" width="494" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>（图 2：CoT 方法不能稳定质变提高 GPT-4V 数苹果的准确性，红色代表回答错误，绿色代表正确）</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>适用场景</span></strong></span></span><span><span><span>：</span></span></span></p><div><span>1.</span><span><span><span><span>上下文概念性工作，如文章头图的自动审核初筛、皮肤病的照片辅助筛选，DR/CT 照片影像学诊断，提供 HTML alt text 等。</span></span></span></span></div><div><span>2.</span><span><span><span><span>图片创意性工作，如 1.3 节，商品销售文案生成、商品使用建议生成、商品创意名称生成等。</span></span></span></span></div><div>
  &nbsp; 
</div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>不适用场景</span></strong></span></span><span><span><span>：</span></span></span></p><div><span>1.</span><span><span><span><span>有精确性要求的文字工作：如 1.1 节，患者诊疗单等 OCR 场景。</span></span></span></span></div><div><span>2.</span><span><span><span><span>主体过多的复杂图片，如 1.3 节，前端网页代码复刻。</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>有潜力的场景</span></strong></span></span><span><span><span>：</span></span></span></p><div><span>1.</span><span><span><span><span>清晰图片/截图的总结性工作，包括 1.3 节，图片的复杂理性/感性分析，如网络热图解释、教育场景</span></span></span></span></div><div><span>2.</span><span><span><span><span>高纬度大模型推理，如 1.3 节，辨别电影/景点、客服、气候分析、设计图/网站设计建议等</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>﻿</span></span></span></p><span id="OSC_h1_1"></span><h1><span><span><span>1.0 基础功能</span></span></span></h1><span id="OSC_h3_2"></span><h3><span><span><strong><span>多图片上下文识别能力</span></strong></span></span></h3><div><img alt="图片" height="400" src="https://image.jiqizhixin.com/uploads/editor/a836b07c-fab8-43c7-beea-f705e98f1c3b/640.png" width="406" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>（图 3：研究者输入了多张购物账单小票/菜单图片，GPT-4V 做出了正确回答）</span></span></span></p><span id="OSC_h3_3"></span><h3><span><span><strong><span>理解图中标识（如箭头）和强调（如红圈标红）</span></strong></span></span></h3><div><img alt="图片" height="692" src="https://image.jiqizhixin.com/uploads/editor/39c68fa7-f301-4c2f-880c-b9c40cf4db15/640.png" width="494" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>（图 4：对于使用箭头/画圈标识的图片，GPT-4V 能做出了正确理解和回答）</span></span></span></p><span id="OSC_h1_4"></span><h1><span><span><span>1.1 OCR 功能（幻觉严重，中文效果差）</span></span></span></h1><span id="OSC_h4_5"></span><h4><span><span><span>中文</span></span></span><span><span><span>：</span></span></span><span><span><strong><span>电脑截图</span></strong></span></span><span><span><span>（准确）</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-14-25GhAZKQ16cP7ExU2u.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_6"></span><h4><span><span><span>中文</span></span></span><span><span><span>：</span></span></span><span><span><strong><span>清晰中文表格图片</span></strong></span></span><span><span><span>（幻觉严重）</span></span></span></h4><div><img alt="" height="750" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-040eSkaCNH6nNNcun.png" width="662" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_7"></span><h4><span><span><span>中文：</span></span></span><span><span><strong><span>有复杂信息的真实患者诊疗单</span></strong></span></span><span><span><span>（幻觉严重）</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>患者诊疗单（给 GPT 的是原图，以下图片经过二次处理模糊了患者信息）</span></span></span></p><div><img alt="" height="762" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-18hFEKjldcVyKisxR.png" width="428" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><div><img alt="" height="830" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04c9TrMDqA10cGnkQ0.png" width="710" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_8"></span><h4><span><span><span>英文：</span></span></span><span><span><strong><span>准确：强对比度、轻微镜头畸变、中等像素噪声图片</span></strong></span></span></h4><div><img alt="" height="791" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04PaNHyIV10wlDdB46.png" width="775" referrerpolicy="no-referrer"></div><p>&nbsp;</p><span id="OSC_h4_9"></span><h4><span><span><span>阿拉伯语：</span></span></span><span><span><strong><span>部分准确：手写体转译英文</span></strong></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>muin on X: "GPT-4V will be able to transcribe and translate manuscripts and texts. I am excited to try out Arabic manuscripts to see how well it does. It does a phenomenal job with transcription even better than most humans. https://t.co/K6y6WffLvz" / X</span></span></span></p><span id="OSC_h1_10"></span><h1><span><span><span>1.2 医学诊断（高准确率）</span></span></span></h1><span id="OSC_h3_11"></span><h3><span><span><span>肺部 X 光：</span></span></span><span><span><strong><span>肺炎</span></strong></span></span><span><span><strong><span>判断</span></strong></span></span><span><span><strong><span>（准确）</span></strong></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>图像来源：GitHub - linhandev/dataset: 医学影像数据集列表 『An Index for Medical Imaging Datasets』https://github.com/linhandev/dataset </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.kaggle.com%2Fdatasets%2Fnih-chest-xrays%2Fdata%23%3A%7E%3Atext%3DClass%2520descriptions%2CHernia" target="_blank" rel="nofollow"><span><span><span>https://www.kaggle.com/datasets/nih-chest-xrays/data#:~:text=Class%20descriptions,Hernia</span></span></span></a><span><span><span>﻿</span></span></span></p><span id="OSC_h4_12"></span><h4><span><span><span>图片输入</span></span></span></h4><div><img alt="" height="243" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-03Bvphp59ylgvYyj16n.png" width="243" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_13"></span><h4><span><span><span>GPT-V 判别结果：（</span></span></span><span><span><strong><span>肺炎, 0.7</span></strong></span></span><span><span><span>）</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>1.</span></span></span><span><span><strong><span>肺炎:</span></strong></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>◦置信度: 0.7</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>◦原因: X 光片上下肺区的密度增加可能提示肺炎的存在，但根据图片无法明确确定。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>2.</span></span></span><span><span><strong><span>肺水肿:</span></strong></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>◦置信度: 0.6</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>◦原因: 下肺区的密度增加可能与液体积聚有关，如心力衰竭导致的肺水肿。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>3.</span></span></span><span><span><strong><span>间质性肺病:</span></strong></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>◦置信度: 0.5</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>◦原因: 有一些间质改变的迹象，但需要与先前的影像进行比较。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>4.</span></span></span><span><span><strong><span>支气管炎:</span></strong></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>◦置信度: 0.4</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>◦原因: 慢性支气管炎可能导致一些观察到的不透明度。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>5.</span></span></span><span><span><strong><span>结核病:</span></strong></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>◦置信度: 0.3</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>◦原因: 尽管结核病可表现为不透明和可能的固实化，但该图像并不强烈地表现出结核病的典型特征。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>6.</span></span></span><span><span><strong><span>肺癌:</span></strong></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>◦置信度: 0.2</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>◦原因: 虽然没有明确的结节或肿块，但由于 X 光在显示其他结构后面的小结节时的局限性，肺癌不能完全排除。</span></span></span></p><span id="OSC_h3_14"></span><h3><span><span><span>皮肤病：</span></span></span><span><span><strong><span>黑色素瘤判断（部分准确）</span></strong></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>数据源：ISIC Archive</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>https://gallery.isic-archive.com/#!/topWithHeader/onlyHeaderTop/gallery?filter=%5B%5D</span></span></span></p><span id="OSC_h4_15"></span><h4><span><span><span>图片输入</span></span></span></h4><div><img alt="" height="619" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-041016gLoevFG0tfxn.png" width="748" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_16"></span><h4><span><span><span>GPT-V 判别</span></span></span><span><span><span>结果（</span></span></span><span><span><strong><span>常见痣 0.6，黑色素瘤 0.3</span></strong></span></span><span><span><span>）</span></span></span></h4><div><span>1.</span><span><span><span><strong><span>黑色素细胞痣</span></strong></span></span><span><span><span> (常见痣)</span></span></span></span></div><div><span>◦</span><span><span><span><span>信心分数: 0.6</span></span></span></span></div><div><span>▪</span><span><span><span><span>原因: 该皮损表现出与常见痣相似的特征，中央有深色区域。50 岁左右的人群中很常见。</span></span></span></span></div><div><span>2.</span><span><span><span><strong><span>老年性角化病</span></strong></span></span></span></div><div><span>◦</span><span><span><span><span>信心分数: 0.4</span></span></span></span></div><div><span>▪</span><span><span><span><span>原因: 老年性角化病是老年人中常见的非癌性皮肤生长，颜色可能会有所不同。</span></span></span></span></div><div><span>3.</span><span><span><span><strong><span>异型痣</span></strong></span></span></span></div><div><span>◦</span><span><span><span><span>信心分数: 0.5</span></span></span></span></div><div><span>▪</span><span><span><span><span>原因: 这类痣与常见痣有所不同，通常较大。鉴于大小 (1.4mm) 和位置 (下肢)，需要考虑此诊断。</span></span></span></span></div><div><span>4.</span><span><span><span><strong><span>黑色素瘤</span></strong></span></span></span></div><div><span>◦</span><span><span><span><span>信心分数: 0.3</span></span></span></span></div><div><span>▪</span><span><span><span><span>原因: 黑色素瘤是一种皮肤癌，虽然所提供的图像有可能与黑色素瘤一致的特征，但需要皮肤科医生进行全面评估才能确诊。</span></span></span></span></div><div><span>5.</span><span><span><span><strong><span>基底细胞癌</span></strong></span></span></span></div><div><span>◦</span><span><span><span><span>信心分数: 0.2</span></span></span></span></div><div><span>▪</span><span><span><span><span>原因: 它是最常见的皮肤癌形式，但所提供的图像没有基底细胞癌的典型迹象。但鉴于患者的年龄，仍需考虑。</span></span></span></span></div><div><span>6.</span><span><span><span><strong><span>血管瘤</span></strong></span></span></span></div><div><span>◦</span><span><span><span><span>信心分数: 0.2</span></span></span></span></div><div><span>▪</span><span><span><span><span>原因: 血管瘤是由血管组成的良性肿瘤。图像中的红色可能暗示这一点，但从整体外观看，可能性较小。</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>﻿</span></span></span></p><span id="OSC_h3_17"></span><h3><span><span><strong><span>老年疣（0.7）</span></strong></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>数据源：ISIC Archive</span></span></span></p><span id="OSC_h4_18"></span><h4><span><span><span>图片输入</span></span></span></h4><div><img alt="" height="618" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-049uaQ4Zml10bHgMSW.png" width="658" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_19"></span><h4><span><span><span>GPT-V 判别</span></span></span><span><span><span>结果</span></span></span><span><span><strong><span>（</span></strong></span></span><span><span><strong><span>老年疣 0.7</span></strong></span></span><span><span><strong><span>）</span></strong></span></span></h4><div><span>1.</span><span><span><span><span>老年疣 - 置信度：0.7</span></span></span></span></div><div><span>2.</span><span><span><span><span>黑色素痣 - 置信度：0.5</span></span></span></span></div><div><span>3.</span><span><span><span><span>基底细胞癌 - 置信度：0.4</span></span></span></span></div><div><span>4.</span><span><span><span><span>日光角化症 - 置信度：0.4</span></span></span></span></div><div><span>5.</span><span><span><span><span>鳞状细胞癌 - 置信度：0.3</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span style="background-color:#f7f7f8; color:#374151">该图像显示了皮肤的放大视图，老年疣在头部和颈部区域较为常见，且经常出现在中老年人群中，因此我给予了较高的置信度。</span></span></span></p><span id="OSC_h3_20"></span><h3><span><span><strong><span>其他脑部/胸部 X 光诊断（高准确率）</span></strong></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>（绿色代表正确，红色代表错误，黄色代表幻觉）</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-53vk753IF6WSPN766F.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-54954vMOouJTPVL6bH.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-55CGHiFq9LWYUF16160.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h1_21"></span><h1><span><span><span>1.3 </span></span></span><span><span><span>高纬度</span></span></span><span><span><span>识别能力（高质量，虽有幻觉问题）</span></span></span></h1><span id="OSC_h4_22"></span><h4><span><span><strong><span>大众点评/小红书文案</span></strong></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-24Nx9YiNcyt10S7OOh.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_23"></span><h4><span><span><strong><span>商品使用建议（左），商品销售文案（右）</span></strong></span></span></h4><div><img alt="" height="490" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04zh7EP0jwbBJQBve.png" width="770" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_24"></span><h4><span><span><strong><span>车祸车辆识别</span></strong></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>红色代表错误</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-58Fs101058MGgJZpKevi.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_25"></span><h4><span><span><strong><span>理解流程图</span></strong></span></span></h4><div><img alt="图片" height="948" src="https://image.jiqizhixin.com/uploads/editor/c5d5423c-31bd-403a-ad7a-db16a2f532f9/640.png" width="675" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_26"></span><h4><span><span><strong><span>解释笑话</span></strong></span></span></h4><div><img alt="图片" height="1148" src="https://image.jiqizhixin.com/uploads/editor/2b2de634-35bf-4103-8b65-f5773def36ce/640.png" width="665" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_27"></span><h4><span><span><strong><span>商品新颖命名</span></strong></span></span></h4><div><img alt="" height="349" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04NQ10OqMhZ6ZKrlUN.png" width="435" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_28"></span><h4><span><span><strong><span>电路图描述</span></strong></span></span></h4><div><img alt="" height="619" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04kWEKlp9f7byrzmA.png" width="485" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_29"></span><h4><span><span><strong><span>地标描述</span></strong></span></span></h4><div><img alt="" height="561" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04CU0ibcYcC8bN10qy.png" width="751" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_30"></span><h4><span><span><strong><span>菜谱生成</span></strong></span></span></h4><div><img alt="" height="631" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04m10i8MBZDPXEOxNX.png" width="478" referrerpolicy="no-referrer"></div><span id="OSC_h4_31"></span><h4><span><span><strong><span>分析球类运动局势/运动员姿势（存在幻觉）</span></strong></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>Abran Maldonado on X: "One of my favorite demos I tested out, in honor of football season, ChatGPT Vision will forever change coaching and sports analytics. Whether i build it or not, ChatGPT for coaching will be on every sideline in the league. Mark my words. https://t.co/uUYhsKpEGh" / X</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>幻觉（该运动员使用的是反手 Backhand，而非正手 forehand）：</span></span></span></p><div><img alt="" height="772" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04mvDFFQIdMrmI9fu.png" width="662" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_32"></span><h4><span><span><strong><span>识别电影/相机/景点等</span></strong></span></span></h4><div><img alt="" height="502" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04Rt10n16gWbYLytM109.png" width="680" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><div><img alt="" height="392" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-03wMz10DJ6PDrhjGr9.png" width="336" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>﻿</span></span></span></p><div><img alt="" height="712" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04NrVvmsyyz0drGFx.png" width="949" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_33"></span><h4><span><span><strong><span>给予用户产品安装/摄像等的建议和帮助</span></strong></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>X: "ChatGPT can now see, hear, and speak. Rolling out over next two weeks, Plus users will be able to have voice conversations with ChatGPT (iOS &amp; Android) and to include images in conversations (all platforms). https://t.co/uNZjgbR5Bm https://t.co/paG0hMshXb" / X</span></span></span></p><div><img alt="" height="666" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-033O59YgBrC10oKWQ9J.png" width="355" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_34"></span><h4><span><span><strong><span>辅导扑克（存在幻觉）</span></strong></span></span></h4><div><img alt="" height="491" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04l7mSM0HIRM0Z10XG.png" width="545" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><span id="OSC_h4_35"></span><h4><span><span><strong><span>网页截图到 HTML 代码（理解不足）</span></strong></span></span></h4><div><img alt="" height="751" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-03ZExiqaSQSPAII7E.png" width="693" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>结果：</span></span></span></p><div><img alt="" height="618" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04MyMHnXYzvfA64zx.png" width="436" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p>&nbsp;</p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>﻿</span></span></span></p><span id="OSC_h4_36"></span><h4><span><span><strong><span>白板骨架到前端项目</span></strong></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>Mckay Wrigley on X: "You can give ChatGPT a picture of your team’s whiteboarding session and have it write the code for you. This is absolutely insane. https://t.co/bGWT5bU8MK" / X</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>https://twitter.com/mckaywrigley/status/1707101465922453701</span></span></span></p><span id="OSC_h4_37"></span><h4><span><span><strong><span>清晰图片的复杂理性/感性分析</span></strong></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>Pietro Schirano on X: "This is absolutely wild. I am completely speechless. https://t.co/wGTAx1hFgS" / X</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>https://twitter.com/skirano/status/1706874309124194707?</span></span></span></p><div><img alt="" height="900" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-10-04otVnYSosZae4hFv.png" width="587" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>Mckay Wrigley on X: "ChatGPT breaks down this diagram of a human cell for a 9th grader. This is the future of education. https://t.co/L0Za0ZB5rs" / X</span></span></span></p><span id="OSC_h4_38"></span><h4><span><span><span>主体多的复杂图片的复杂理性分析</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>Alex Northstar on X: "Thanks ChatGPT, that can read &amp; understand better than humans! https://t.co/TgVSuHgf8j" / X</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>https://twitter.com/NorthstarBrain/status/1707668600281063514</span></span></span></p><span id="OSC_h1_39"></span><h1><span><span><span>1.4 不足与风险</span></span></span></h1><span id="OSC_h3_40"></span><h3><span><span><span>图片（含人眼不可见文字）的注入风险</span></span></span></h3><div><img alt="" height="547" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-19-10-15FjF6TMqLHLEaleB.jpeg" width="417" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>（图中，用户以不可见的浅色字添加了 Sephora 化妆品促销水印，人眼无法察觉，但 GPT-V 可感知）</span></span></span></p><div><img alt="" height="382" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-19-10-16tOvlXGvUOtqnLIa.jpeg" width="425" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>（图中，用户以不可见的浅色字使 GPT-4V 一定对这份简历会给出雇佣建议）</span></span></span></p><span id="OSC_h3_41"></span><h3><span><span><span>不能使用于人脸识别</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>当 GPT-4 在 2023 年 3 月首次发布时，GPT-4V 面部识别功能可能存在安全和隐私问题，因此 GPT-4V（具备视觉功能的 GPT-4）被暂缓发布。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在早期的模型中，用户本可以理论上上传人物照片，并要求识别他们，这显然是对隐私的侵犯。根据技术论文，GPT-4V（为 ChatGPT Vision 提供支持）现在拒绝此类请求的时间达到了 98%。</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-16-11-41Y7417E6A6fF0ndD16.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>﻿</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcdn.openai.com%2Fcontributions%2Fgpt-4v.pdf" target="_blank" rel="nofollow"><span><span><span>GPT-4V(ision) technical work and authors</span></span></span></a></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><blockquote><p>作者：京东健康，李卓伦</p><p>来源：京东云开发者社区，转载请注明来源</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sat, 21 Oct 2023 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10120875</guid>
            <link>https://my.oschina.net/u/4090830/blog/10120875</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[工信部：着力推动大模型算法技术突破，提升智能芯片算力水平]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="background-color:#ffffff; color:#222222">国新办 10 月 20 日就 2023 年前三季度工业和信息化发展情况举行发布会。工业和信息化部新闻发言人、运行监测协调局局长陶青表示，下一步，我们将坚持突出重点领域，大力推动制造业数字化转型，推动人工智能创新应用。</span></p><p><strong><span style="background-color:#ffffff; color:#222222">主要从以下四个方面着力：</span></strong></p><p><span style="background-color:#ffffff; color:#222222">一是夯实人工智能技术底座。通过科技创新重大项目，着力推动大模型算法、框架等基础性原创性的技术突破，提升智能芯片算力水平，释放数据价值，强化「根」技术研发。</span></p><p><span style="background-color:#ffffff; color:#222222">二是推动重点行业智能化升级。加快制造业全流程智能化。深化人工智能技术在制造业全流程融合应用，大幅提升研发、中试、生产、服务、管理等环节智能化水平。推进人工智能试点示范，拓展特色应用场景，加快「智改数转」，形成现实生产力，提升制造业发展质量和效益。</span></p><p><span style="background-color:#ffffff; color:#222222">三是推动智能产品和装备发展。发挥大模型强认知、强交互、强生成的特点，促进高端装备、关键软件、智能终端的升级迭代，提升重点产品和装备智能化水平。</span></p><p><span style="background-color:#ffffff; color:#222222">四是加强支撑服务体系建设。加快培育一批行业龙头企业和专精特新中小企业，组建一批生态型创新联合体。深化技术研发、标准研制、伦理治理、人才培养等国际交流合作，协同打造良好的人工智能产业生态。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 20 Oct 2023 10:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262655</guid>
            <link>https://www.oschina.net/news/262655</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌优先展示的 KeePass 官网是冒牌货，定向至恶意软件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>科技媒体 Arstechnica <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farstechnica.com%2Fsecurity%2F2023%2F10%2Fgoogle-hosted-malvertising-leads-to-fake-keepass-site-that-looks-genuine%2F" target="_blank">报道称</a></u>，当使用 Google 搜索"keepass"时，其返回的结果优先展示了<strong>冒充成开源密码管理器"KeePass"官网</strong>的网站。如下图所示：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ee87e32271954c3f4fb42909aeac9c86aa3.png" referrerpolicy="no-referrer"></p><p><em>▲ 真正的&nbsp;KeePass&nbsp;官网位于冒牌货下方</em></p><p>根据介绍，假 KeePass 的网址为「<strong>ķ</strong>eepass.info」，而 KeePass 的真正官网是「<strong>k</strong>eepass.info」。</p><p>这俩网址乍看是一模一样，唯一区别是非常不起眼的<strong> 'k' </strong>——冒牌货的&nbsp;<strong>ķ&nbsp;</strong>字母下方多了一个点。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-5896b21c218c7361901fdbcb6d8fcb811d1.png" referrerpolicy="no-referrer"></p><p>用户如果不注意判断，进入冒牌的 KeePass 官网后，所下载的「密码管理器」实际上是恶意软件，其中包含了 FakeBat 木马，该木马可与黑客设置的服务器进行链接，进而获取密码信息。</p><p>Google 广告透明度中心的信息显示，这些广告自周六以来开始投放，最后一次登录是在周三。投放广告的主体是一家名为 Digital Eagle 的公司，透明度页面称该公司是一家广告商，其身份已通过谷歌验证。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a1bfa8ddd364d840917c5a35c792f8f0c97.png" referrerpolicy="no-referrer"></p><p>Hacker News 上<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D37938866" target="_blank">有人呼吁</a></u>，是时候摆脱 Google 了。</p><p><em><strong>延伸阅读：<a href="https://www.oschina.net/news/216380/google-ads-gimp-official-website-exposed-pcs-malware" target="_blank">开源图形编辑器 GIMP 被恶意软件「劫持」搜索引擎结果</a></strong></em></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 20 Oct 2023 10:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262654/malicious-keepass-ad-google</guid>
            <link>https://www.oschina.net/news/262654/malicious-keepass-ad-google</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Shopify 开源 Ruvy，将 Ruby 代码转换成 WebAssembly]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>Shopify 最近开源了一个名为 Ruvy 的项目。Ruvy 是一个工具链，它接受 Ruby 代码作为输入，并创建一个将执行该 Ruby 代码的 WebAssembly 模块。</p><p>目前已有从 Ruby 代码创建 Wasm 模块的项目，最常见的是 ruby.wasm，Ruvy 也是基于 ruby.wasm 构建，并提供了一些特定的优势。</p><p>官方称创建 Ruvy 旨在利用预初始化 Ruby 虚拟机和 Ruby 脚本包含的 Ruby 文件带来的性能改进。此外，Ruvy 不需要在运行时提供 WASI 参数，从而简化了 Wasm 模块的执行。</p><blockquote><p>WASI 是一组导入的 Wasm 函数的标准化集合，旨在为 Wasm 模块提供一个标准接口，以实现许多典型语言标准库中存在的系统调用。</p></blockquote><p>目前，Ruvy 并未随预编译的二进制文件一起发布，因此需要安装它的构建依赖项，然后编译 Ruvy 才能使用。</p><p>安装这些依赖项的详细信息<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FShopify%2Fruvy" target="_blank">请查看 README</a></u>。</p><p>构建 Ruvy 后，可以运行以下命令来打印出 Hello World。</p><pre><code>$ cargo run -- package=cli ruby_examples / hello_world.rb - o index.wasm 
$ wasmtime index.wasm 
Hello world
</code></pre><p>上述命令将构建并执行 CLI，首先获取<code>ruby_examples/hello_world.rb</code>&nbsp;的内容，并创建一个名为<code>index.wasm</code>的 Wasm 模块。当调用<code>index.wasm</code>的导出<code>_start</code>的函数时，将执行<code>puts 「Hello world」</code>。</p><p>如果要使用额外的 Ruby 文件，可以运行以下命令：</p><pre><code>$ cargo run -- package=cli -- -- preload=prelude / ruby_examples / use_preludes_and_stdin.rb 
$ echo "this is my input" | wasmtime index.wasm 
{:discount_input=&gt;"this is my input", :value=&gt;100.0}
</code></pre><p>这就是 Shopify 新推出 Ruvy 项目的简要介绍。它为 Ruby 开发者提供了一个新工具，使得他们可以更方便地将 Ruby 代码转换为 WebAssembly 模块，并从中获得性能改进。</p><p><strong>延伸阅读</strong>：<a href="https://www.oschina.net/news/225370/overhauling-shopify-cli" target="_blank">Shopify 开发团队放弃 Ruby，改用 Node 重写 CLI 工具</a></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 20 Oct 2023 09:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262643/shopify-ruvy</guid>
            <link>https://www.oschina.net/news/262643/shopify-ruvy</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Neptyne 插件：在 Google Sheets 集成 Python]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>一家名为 Neptyne 的公司<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.neptyne.com%2Fblog%2Fannouncing-neptyne-for-google-sheets" target="_blank">推出</a><span style="color:#000000">了一款可在 Google Sheets 中提供 Python 功能的产品。根据介绍，该团队早在今年 2 月份推出了 Neptyne，首个完全集成 Python 的电子表格。「不是一种编写电子表格脚本或允许 Python 程序与电子表格交互的 API 的方法，而是 Python 的全部功能，因为电子表格是用 Python 编写的。 」</span></p><p><span style="color:#000000">时至今日，他们又进一步推出了适用于 Google Sheets 的 Neptyne 插件，可将 Python 的强大功能直接带入用户的电子表格中：</span></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-82b157621669e4766711a3c89307bd66ee6.gif" width="500" referrerpolicy="no-referrer"></p><p style="text-align:start"><span style="color:#000000">启动并运行后，你在代码面板中输入的任何函数都可以立即使用 PY() 公式从电子表格中调用：</span></p><div><pre>=PY(「my_function」, args)</pre></div><p style="text-align:start"><span style="color:#000000">其中 my_function 是函数的名称，args 是电子表格中的内容，例如 A1 或 B2:B7、C2。</span></p><p style="text-align:start"><span style="color:#000000">Neptyne 联合创始人&nbsp;Douwe Osinga 称，「这是为 Google Sheets 电子表格添加额外功能的最快捷方式。而且它是&nbsp;full Python，所以你可以导入任何你需要的东西。如果你需要的东西没有安装，我们可以直接在 Google Sheets 中为你提供软件包管理器。」</span></p><p style="text-align:start"><span style="color:#000000">Neptyne for Google Sheets 插件允许将 Python 函数用作电子表格函数，将单元格范围用作 Python 列表，并将 DataFrames 可视化为 Matplotlib 等软件包或 Google Sheets 内置的图表类型。</span></p><p style="margin-left:0px; margin-right:0px; text-align:start"><span style="color:#000000">今年 8 月份，</span><a href="https://www.oschina.net/news/254971/microsoft-excel-python-integration-support" target="_blank">微软宣布已将 Python 集成到 Excel</a><span style="color:#000000">。也正是因为这个契机，Neptyne 方面<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fthenewstack.io%2Fpython-comes-to-google-sheets%2F" target="_blank">认为</a>，刚好可以为 Google Sheets 推出相同的功能。「因为我们已经有了基础架构，所以只花了一个月左右的时间就建立起来了。」</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">「这个新插件将为 Google Sheets 带来无缝的 Python 集成。包括安装第三方软件包、对任何端点进行 API 调用以及将复杂的数据结构（例如 Panda DataFrames）返回到工作表的能力。」</span></span></p><p style="margin-left:0px; margin-right:0px; text-align:start"><span style="color:#000000">Neptyne 的定价分为：<span style="background-color:#ffffff">免费版</span>、专业版以及团队版。该产品在发布之初对所有人都是免费的--这三个层级是针对公司当前的产品，而 Sheets Extension 将融入其中，但免费版本将始终存在。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 20 Oct 2023 08:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262633/python-google-sheets</guid>
            <link>https://www.oschina.net/news/262633/python-google-sheets</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[工信部部长金壮龙会见苹果公司首席执行官库克]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F6Z_MKC22nvXYyKqF74HA8g" target="_blank">据工信微报微信公众号消息</a></u>，工业和信息化部部长金壮龙在北京会见苹果公司首席执行官库克，双方就苹果公司在华发展、产业链供应链合作等议题交换意见。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0cd48e4a1aa78806a5546cb3bbe54fd0e9b.png" referrerpolicy="no-referrer"></p><p>金壮龙表示，中国支持建设开放型世界经济，将全面取消制造业领域外资准入限制措施，扩大数字产品等市场准入。希望苹果公司继续扎根中国、投资中国，进一步提高对华合作层次和水平，积极参与中国新型工业化进程，实现互利共赢。</p><p>库克表示，苹果公司愿意积极参与中国经济高质量发展，在华持续推进绿色制造、智能制造，不断丰富开发者生态，支持产业链供应链伙伴共同成长。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 20 Oct 2023 08:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262631</guid>
            <link>https://www.oschina.net/news/262631</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中国市场移动网络测速报告：北京最快、苹果速度排名第一]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://gitee.com/gitee-community/gitee-talk/blob/fe3647ff951894421dbeb6c0c1c62a0a4fdb37db/Yuanchuanghui-1024.md" _blank"="">【源创会预告】1024 程序员节（的前两天），相约开源中国办公室，我们一起聊 AI！&gt;&gt;&gt;<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>全球知名网络测速平台 SpeedTest 母公司&nbsp;Ookla 发布了三季度中国市场移动网络速度测试报告。</p><p><img src="https://static.oschina.net/uploads/space/2023/1020/144544_Zwmb_2720166.png" referrerpolicy="no-referrer"></p><p>▲&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.speedtest.net%2Fglobal-index%2Fchina%23market-analysis" target="_blank">https://www.speedtest.net/global-index/china#market-analysis</a></u></p><p>本次报告主要针对中国各大运营商及其 5G 性能、不同设备厂商、不同城市地区的网速情况进行了分析。</p><p><strong>运营商方面</strong>，中国移动以 179.81Mbps 的中位数下载速度排名第一，中国电信和中国联通分别以 126.41Mbps 和 118.63Mbps 位居第二和第三。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e064f3b6efcebd6ca5cde22fa1d07c6bab5.png" referrerpolicy="no-referrer"></p><p><strong>网络稳定性方面</strong>，中国移动再次以 95.6% 的稳定性排名第一，中国联通和中国电信分别为 94.1% 和 93.5%。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-eb3d6f9a514347f99ec0e82aee3db9c4520.png" referrerpolicy="no-referrer"></p><p><strong>5G 网速方面</strong>，中国广电以 297.59Mbps 的中位数下载速度位居第一，中国移动以 276.99Mbps 位居第二，中国联通和中国电信的 5G 下载速度分别为 230.02Mbps 和 222.92Mbps。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-5c72a1a7adbfdfc3be12996bc05d888986b.png" referrerpolicy="no-referrer"></p><p><strong>至于具体设备方面</strong>，三季度苹果的新品 iPhone15 Pro Max 和 iPhone 15 Pro 分别以 286.08Mbps 和 257.79Mbps 位居前两名，华为 Mate40 Pro+ 5G 则位居第三，中位数下载速度为 244.92Mbps。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-d54107899622f7d5919616c1425d7414958.png" referrerpolicy="no-referrer"></p><p><strong>手机厂商方面</strong>，苹果中位数下载排行继续排名第一，网速为 165.74Mbps；荣耀紧随其后为 149.75Mbps。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fdea732d036c77d9f297b7c73904d4e94fb.png" referrerpolicy="no-referrer"></p><p><strong>在具体芯片上</strong>，高通的骁龙 X70 以 272.11Mbps 的中位数下载速度遥遥领先，排名第二第三的分别是骁龙 X65 和麒麟 9000E。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bb1153fc701187d7b2af877f7ab78727d0a.png" referrerpolicy="no-referrer"></p><p><strong>至于各个城市地区</strong>，中位数下载速度最快的城市是北京，达到了 220.21Mbps，上海、天津、杭州、沈阳分列第二至第五名。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-af58964a53df828fc6cd4f00b8ddc3f988f.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 20 Oct 2023 06:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/262604</guid>
            <link>https://www.oschina.net/news/262604</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
