<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 25 Dec 2023 07:15:12 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[openKylin 社区第三次理事会会议成功召开！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">2023 年 12 月 22 日下午，openKylin 社区第三次理事会会议在北京成功召开。本次会议由 openKylin 社区秘书长余杰主持，麒麟软件、普华基础软件、中科方德、麒麟信安、凝思软件、中兴新支点、元心科技、中国电科 32 所、技德系统、北京麟卓、先进操作系统创新中心、飞腾、兆芯、龙芯中科、景美、京东科技、玄铁、申泰信息、海光等 21 家社区理事单位代表参会。</span></span></p><div><img alt="" height="720" src="https://oscimg.oschina.net/oscnet/up-89ff214b26c58cc74cf9c9fcbb41c82fefe.png" width="1080" referrerpolicy="no-referrer"></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社区咨询委员会委员韩乃平为本次会议作开场致辞，向出席会议的各位来宾致以欢迎和感谢，并表示一个社区的良性发展，不仅需要主流软硬件厂商的积极合作，更需要吸引全球众多开源社区开发者不断涌入。openKylin 作为我国开源操作系统根社区，通过聚合产、学、研、用等开源力量，在过去一年取得了行业瞩目的成绩，希望通过本次会议，共同商讨如何更好推进社区发展，挖掘社区更多潜能，为推进中国信息化产业的发展作出更大的贡献。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b126e34cb4bad1857b66cf44f36cad418cf.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#6ec1f5"><span style="background-color:#f7fcff">社区工作汇报</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社区副秘书长刘敏以线上形式参与会议，围绕社区治理、基础设施、SIG 组、社区版本、社区会员和品牌推广等维度，向理事单位代表汇报 2023 年社区运营进展及 2024 年发展规划。openKylin 社区技术委员会委员李剑峰从系统版本构建和社区技术创新等维度向理事单位代表进行汇报。</span></span></p><div><p style="text-align:center"><img alt="" height="2432" src="https://oscimg.oschina.net/oscnet/up-c40a204c7c674be4aca5f9baa697d7f0959.jpg" width="3648" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">2023 年，openKylin 社区发布了 3 个系统版本，并围绕桌面操作系统底层核心技术和用户体验提升，推出了「分级冻结」应用生命周期管理机制、软硬件生态「原生兼容」技术、VirtIO-GPU 硬件视频加速机制、新一代图形显示框架 wlcom 合成器、开明软件包格式等一系列创新成果。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">此外，面向快速发展的人工智能技术领域，openKylin 社区积极布局，2023 年 6 月启动了对 AI 大模型产品的生态兼容和系统级融合，发布 openKylin AI 框架安装助手，并在 openKylin 1.0 版本中支持桌面 AI 大模型插件和智能语音助手功能，推动桌面操作系统智能交互创新发展。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#6ec1f5"><span style="background-color:#f7fcff">理事单位贡献分享</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">北京麟卓总经理温研发表《绘制辉煌，驱动未来--图形 SIG 组工作汇报》主题分享，基于社区平台，北京麟卓成立了 GraphicSystem SIG，负责 openKylin 社区中 GPU 驱动的适配与优化、图形软件栈优化、基于 GPU 的通用计算、图形处理系统综合测试评估等与图形系统相关的信息交流和配套软件开发工作。未来，麟卓将于与社区加深合作，为拓展社区应用生态提供支撑。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-8281f0b89a1a8051710c2f34a8299ec7806.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">元心科技研究院副院长李何佳发表《Flutter SIG 组的工作进展及后续工作方向》主题分享，加入社区后，元心科技参与了 Security SIG 相关工作，并对相关仓库进行了 CVE 的漏洞修复。同时发起成立了 Flutter SIG，致力于为推进 Flutter 应用开发框架在 openKylin 社区的支持，包括对 Flutter 开发环境支持和 Flutter 应用运行支持。后续，将与 openKylin 社区紧密协作，共同开展更多技术尝试与创新探索。</span></span></p><div><p style="text-align:center"><img alt="" height="2432" src="https://oscimg.oschina.net/oscnet/up-c1d070fd8ccd1211a40b6ec0ef66c5d8f84.jpg" width="3648" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">飞腾软件支持经理郑俊普发表《与开放的麒麟共飞腾》主题分享，飞腾与 openKylin 社区在技术支持、开源社区建设和生态活动等方面有着密切合作。基于社区，创建了 Phytium SIG，2024 年，飞腾将围绕服务器平台上的 openKylin 内核和软件适配开展工作，为社区生态繁荣贡献一份力量。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-42ac95fa812d4ddef5b497314b302201ea9.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">阿里巴巴达摩院，RISC-V 及生态高级技术专家王云龙发表《openKylin&amp;玄铁 RISC-V 合作进展》主题分享，王云龙表示，玄铁与 openKylin 社区在技术融合、软件适配和生态推广方面有着深度合作，基于玄铁 CPU+openKylin 操作系统的基础平台，联合钉钉，三方共同努力完成了 27000+文件的编译、Qt&amp;CEF 等核心组件、17 个第三方库的构建工作，在 RISC-V 架构上首次实现了大型商业 IM 的流畅运行。</span></span></p><div><p style="text-align:center"><img alt="" height="2432" src="https://oscimg.oschina.net/oscnet/up-086ff4a6aea5896e7cea8088376720081e1.jpg" width="3648" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">景美产品总监邱江发表《国产 GPU 的 openKylin 开源之路》主题分享，景美在加入 openKylin 社区后发起成立 GPU SIG 组，并邀请了国内多家 GPU 厂商陆续加入并贡献社区，目前已正式完成景美 JM9100 显卡与 openKylin 1.0 版本操作系统的适配工作，其适配成果后续也将逐步合并到 openKylin 2.0 版本中。</span></span></p><div><p style="text-align:center"><img alt="" height="2432" src="https://oscimg.oschina.net/oscnet/up-4c6fb975407dd2b4754514f4b7c64beac2d.jpg" width="3648" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">兆芯高级产品经理张伟发表《共建 openKylin 社区》主题分享，兆芯加入社区 GPU SIG 后，积极开展 openKylin 内核在兆芯 CPU 平台上的验证适配、性能优化、新需求支持等相关工作，协助社区有序推进 openKylin 开源操作系统的完善和版本更新，目前，兆芯最新一代开先 KX-6000G 处理器已与 openKylin 操作系统完成适配认证工作，并在 openKylin 社区代码贡献位列前茅。</span></span></p><div><p style="text-align:center"><img alt="" height="2432" src="https://oscimg.oschina.net/oscnet/up-7fbab6bb17d73843fd51af01b0036d508af.jpg" width="3648" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#6ec1f5"><span style="background-color:#f7fcff">闭门讨论</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社区理事会作为社区决策机构和领导机构，主要职责为指导社区的发展方向，制定长期发展规划和实施指导意见。会上，openKylin 副秘书长刘敏就 openKylin 社区章程更新向理事单位进行汇报。随后，各理事单位围绕</span><strong><span style="color:#000000">社区运营、生态共建、技术创新发展方向</span></strong><span style="color:#000000">等重大事宜发表了各自意见，并进行了深入讨论。</span></span></p><div><p style="text-align:center"><img alt="" height="1549" src="https://oscimg.oschina.net/oscnet/up-ec6edfcdc1519d9b04b5729e9a7ed94fa38.jpg" width="3921" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#6ec1f5"><span style="background-color:#f7fcff">总结致辞</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">最后，由社区理事长朱晨对本次理事会进行总结致辞，朱晨表示，openKylin 社区的繁荣发展，离不开每一位贡献者的辛勤付出。在今天上午的社区 2023 年度伙伴暨开发者大会上，我们对参与社区共建的优秀企业伙伴和个人开发者进行了表彰颁奖。我们很高兴地看到，越来越多优秀伙伴加入，为打造国产开源操作系统根社区贡献力量。</span></span></p><div><p style="text-align:center"><img alt="" height="720" src="https://oscimg.oschina.net/oscnet/up-6daf096096b8cee46f43e5562cd5d447400.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">未来，openKylin 将继续秉持「开源聚力、共创未来」的社区理念，持续推动技术创新和生态拓展，打造一个更加强大和优秀的桌面操作系统开源社区，同时将不断提升自身在开源技术发展中的影响力，为推进中国信息化产业的发展作出更大的贡献。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 06:58:07 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272584</guid>
            <link>https://www.oschina.net/news/272584</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源共创，携手成长 | openKylin 伙伴暨开发者年度会议圆满落幕！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">12 月 22 日，openKylin 伙伴暨开发者年度会议在北京成功召开。本次会议以「开源共创，携手成长」为主题，邀请了社区杰出共建单位和开发者代表线下相聚，共鉴社区新进展、共享开源操作系统新技术、共研产业未来新趋势。</span></span></p><div><p style="text-align:center"><img height="1280" src="https://oscimg.oschina.net/oscnet/up-95191a5aa9adb13597715074c98ca955469.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><em><span><strong><span style="color:#ffce73">01</span></strong></span></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#57b8f6">会议开场致辞</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社区理事、麒麟软件总经理孔金珠在开场致辞中表示，过去一年里，越来越多优秀的企业伙伴和开发者加入到 openKylin 开源大家庭中，为操作系统根技术创新奠定智囊基础。在社区 400+生态伙伴和 5500+开发者的携手共创下，openKylin 社区取得多项技术创新成果，实现了从系统效能、功能体验、生态融合、应用开发等方面的全栈技术创新。此次会议是一次技术的交流，也是一次思想的碰撞，更是一次创新的启程。希望通过交流和分享，碰撞出智慧的火花，进一步推动操作系统创新技术融合。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-5f02f52e732f362c83ecc5301f00c9bc212.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><em><span><strong><span style="color:#ffce73">02</span></strong></span></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#57b8f6">社区成果回顾</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社区生态委员会主任李震宁分享了 openKylin 进展成果及未来展望，李震宁表示，2023 年，在建立中国开源操作系统根社区的信念引领下，openKylin 社区汇聚了社会各界的产业力量、院士专家、高校师生、个人开发者，共同推动社区治理体系完善、社区产品打造、系统生态建设及使用体验提升。openKylin 社区的快速发展，充分体现了开源作为一种创新的软件协同生产模式所绽放的活力和无限潜能。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-08a7ee5efbc0ff067ea9d9b9ea7e78bc67e.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><ul><li><span><strong><span style="color:#000000">生态共建</span></strong><span style="color:#000000">方面，目前，openKylin 社区已汇聚了涵盖操作系统、数据库、办公软件、CPU、GPU、整机、人工智能等在内的 400+企业会员和 36 所研究型、教学型、应用型的各层次高等院校。</span></span></li><li><span><strong><span style="color:#000000">版本发布</span></strong><span style="color:#000000">方面，openKylin 社区累计发布 6 个版本，完成 20+核心组件选型工作，累计下载量超百万。</span></span></li><li><span><strong><span style="color:#000000">创新演进</span></strong><span style="color:#000000">方面，成立 94 个 SIG 开展技术研究与创新，其中，开明包格式环境、wlcom 合成器、KARE 生态兼容、不可变系统和跨版本升级工具等社区最新重大技术成果都将融入到 openKylin 2.0 版本中，颠覆性创新带来全新体验。目前 openKylin 2.0 alpha 版本已发布，面向开发者和尝新用户体验。</span></span></li><li><span><strong><span style="color:#000000">智能融合</span></strong><span style="color:#000000">方面，发布 openKylin AI 框架安装助手，实现一键安装 AI 框架，并在 openKylin 1.0 版本中实现支持桌面 AI 大模型插件和智能语音助手功能，从智能输入、智能输出两方面入手，深度融合 AI 技术，推动桌面操作系统智能交互创新发展。</span></span></li><li><span><strong><span style="color:#000000">RISC-V 布</span></strong><span style="color:#000000">局方面，openKylin 社区正式加入 RISC-V 基金会，从源码级别自主构建了 RISC-V 开源桌面操作系统版本成为其产业联盟成员，支持 80% 以上市场主流 RISC-V 芯片，并携手深度数智发布全球首款 RISC-V 笔记本电脑 DC-ROMA。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">迈向 2024 年，openKylin 社区将立足新起点、实现新跨越。以开源、开放、平等、协作模式融智共创，为用户及开发者创造全新体验及价值。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><em><span><strong><span style="color:#ffce73">03</span></strong></span></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#57b8f6">年度贡献榜单揭晓</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社区的繁荣发展，离不开每一位贡献者的辛勤付出。会上，openKylin 社区公布了 2023 年度贡献榜单并进行颁奖，以表彰在过去一年中为社区做出突出贡献的杰出企业伙伴、高校共建先锋、SIG 团队和开发者菁英等。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#888888">感谢每一位参与社区共建的小伙伴！欢迎更多企业、高校和开发者加入社区，共同打造中国开源操作系统根社区！以下为现场部分颁奖留影：</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ec33487714ec154fceead05a87ff6e18c15.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-055afff730218da4aae68795a967a3d0076.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-28988997294bf968c922166fab67c3b46e8.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-538daf8e0d17bd318f74522b98e8a380362.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><em><span><strong><span style="color:#ffce73">04</span></strong></span></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#57b8f6">共建伙伴成果分享</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">格兰菲市场支持科主管岳晓帅发表《格兰菲 openKylin 社区会员开源实践技术分享》主题演讲，岳晓帅表示，在加入 openKylin 社区后，格兰菲积极参与社区共建，并加入社区 GPU SIG，目前已完成了 Arise1 平台与 openKylin 操作系统的兼容适配认证工作，并在功能、性能及兼容性方面表现优异。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-6caa8d88cb5fad2a0b4f66d85c5519373b4.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">信创海河实验室副研究员王文竹发表《信创海河实验室 openKylin 社区会员开源实践分享》主题演讲，王文竹表示，信创海河实验室与 openKylin 社区在 RISC-V 版本共建、运营推广和人才培养等方面有着紧密的合作关系。双方携手从源码级别自主构建了 RISC-V 开源桌面操作系统版本，目前已实现 openKylin 对算能 RISC-V 产品的全方位支持，涵盖了桌面环境、软件生态、容器化部署和人工智能等多个关键领域。未来双方将深化合作，共同推进 RISC-V 生态技术发展。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-488499cad322a4e5f7f7ca8e2efe730b22a.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">南开大学软件学院团委书记王真发表《南开大学+openKylin: 共同推动开源社区国际化建设》主题演讲，王真表示，南开大学软件学院作为 openKylin 社区共建伙伴，创建了 InternationalPromotion SIG，负责对接 30+国家，103 位国外留学生开展相关国际化推广工作，目前已开展四届国际推广交流活动，颁发尼泊尔、肯尼亚、塞拉利昂等 11 个国家星级推广站点授权证书。未来，双方将进一步携手扩大国际项目交流圈，推动 openKylin 社区科技创新合作、技术推广交流和成果转化应用。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-a2b78bd919f34e066c3561280f2edccd3c0.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">儒特科技 CEO 马铁发表《QSFramework SIG 贡献及成果分享》主题演讲，儒特科技加入社区后，发起成立了 QSFramework SIG，SIG 团队维护的开源项目青霜框架（QSFramework），是一款新形态、轻量化、微内核 Web 引擎。目前，已正式完成 QSFramework 与 openKylin 操作系统的兼容适配，并已发布到 openKylin 2.0 软件仓库，感兴趣的小伙伴可以下载体验。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-09f68cf3fcaad8955597abd5839fa41d054.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">社区个人开发者孙圣博也分享了他与 openKylin 社区的结缘故事以及在社区的开源实践之旅，孙圣博作为一名高中生，在加入社区后，发起成立了 Cutefish SIG 等，完成了 Cutefish 等桌面环境及相关组件与 openKylin 的兼容适配。同时，还积极参与社区 RISC-V 生态共建，并成立了 FAQ SIG，负责收集各渠道开发者、爱好者等用户反馈的问题，建立相关标准化流程推动问题解答或解决。孙圣博的发言引发阵阵掌声，让更多的开发者感受到了开源的魅力与活力。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-b66fe15ad20ef69fcfdceeb97f16025fe9d.jpg" width="1920" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><em><span><strong><span style="color:#ffce73">05</span></strong></span></em></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#57b8f6">会议落幕致辞</span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin 社区生态委员会主任李震宁在总结致辞中提到，过去一年，正是有了大家的共同努力，openKylin 才能取得今天的靓丽成绩。在 openKylin 社区，各界伙伴都可以在开源、开放、协作的模式下，基于产业发展现状、院校科研积累和开发者实践经验等，开放自由的交流想法与建议，并进行实践、检验与完善。通过本次会议，不仅加深了社区与企业伙伴、社区与个人开发者之间的了解，也为 openKylin 的发展提供了新的思路和方向。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-55cfd98b21f0d69d4c5e8f11a5b09378305.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-863b3b1f00649033bd11bb0edd70ec04d76.jpg" referrerpolicy="no-referrer"></p><p style="text-align:center">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">展望未来，openKylin 社区也将持续把握发展机遇，聚焦操作系统根技术，发挥社区平台支撑作用，聚合产、学、研、用及国内外开源力量，加速系统创新迭代，共同推动 openKylin 开源操作系统根社区构建，为推动形成众研众用众创的开源软件生态添砖加瓦，逐步走向同国际顶尖开源社区比肩的星辰大海。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 06:50:07 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272582</guid>
            <link>https://www.oschina.net/news/272582</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GTA 5 完整源代码被公开泄露]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在国外正值圣诞假期之际，一个匿名用户公开<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cyberkendra.com%2F2023%2F12%2Fgta-5-source-code-leaked-on-christmas.html" target="_blank">泄露</a>了 Rockstar 旗下知名游戏《侠盗猎车手 5》（GTA 5）的所有源代码。</span></p><p><span style="color:#000000">泄露的文件大约有 4GB，其中包含与游戏 RAGE 引擎相关的关键文件、概念图、游戏圣安地列斯背景的早期地图以及其他敏感资料。此外，还包括未发布的《GTA 6》中的一些 Python 脚本文件和<span style="background-color:#ffffff">一个 Bully 2 文件</span>。</span></p><p><img height="287" src="https://oscimg.oschina.net/oscnet/up-cea5c5b3990f3c01ce94728fdbbf1d3c3ad.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">早在 2022 年 9 月，就有一匿名黑客声称获得了《GTA 5》和《GTA 6》的源代码，并威胁要公开这些数据企图敲诈 Rockstar 游戏公司。此后，Rockstar 官方也发布声明<span style="background-color:#ffffff">确认遭遇网络入侵，证实了</span>大规模的《GTA 6》泄漏。</span></p><p><span style="color:#000000">时至今日，《GTA 5》的完整源代码似乎又被泄露，并在几个文件共享网站和专门讨论《GTA》修改和黑客问题的论坛上公开。目前尚未清楚相关的泄露事件是如何发生的。但有人<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FGTAFocal%2Fstatus%2F1739051532149039111" target="_blank">推测</a>，早自 2022 年泄露事件以来，游戏完整的源代码就一直在被交易。</span></p><p><span style="color:#000000"><img alt="" height="500" src="https://oscimg.oschina.net/oscnet/up-9cc40522a4d848442c48a30ddc5b5226046.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">Rockstar Games 及其母公司 Take-Two Interactive 尚未就最新泄露事件发表官方声明。</span></span></p><p><strong><span style="color:#000000"><span style="background-color:#ffffff">相关阅读：</span></span></strong></p><ul><li><a href="https://www.oschina.net/news/210946/gta-6-leak" target="_blank">官方确认，GTA 6 源代码泄漏</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 06:49:07 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272581/gta-5-source-code-leaked-on-christmas</guid>
            <link>https://www.oschina.net/news/272581/gta-5-source-code-leaked-on-christmas</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[周热点 | 知名开源项目作者「在线求打钱」；No Star, No Fix；支持苹果芯片的 Fedora 发行版推出......]]>
            </title>
            <description>
                <![CDATA[回顾一周热门资讯。2023.12.18-2023.12.24]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 06:27:07 GMT</pubDate>
            <guid isPermaLink="false">https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649094075&#38;idx=1&#38;sn=00275798424976ecbd47ae4f4f525775&#38;chksm=880c4ca8bf7bc5be2e47003634d2fd46e6617414e6d8b2a9906ba9429ad095d432067a48c04d&#38;token=288730784&#38;lang=zh_CN#rd</guid>
            <link>https://mp.weixin.qq.com/s?__biz=MzA4OTI5NjUwOA==&#38;mid=2649094075&#38;idx=1&#38;sn=00275798424976ecbd47ae4f4f525775&#38;chksm=880c4ca8bf7bc5be2e47003634d2fd46e6617414e6d8b2a9906ba9429ad095d432067a48c04d&#38;token=288730784&#38;lang=zh_CN#rd</link>
        </item>
        <item>
            <title>
                <![CDATA[生成式 AI 的下一阶段将走向何方？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p><strong>编者按：</strong> 最近，随着&nbsp;ChatGPT&nbsp;的出现，很多人认为人工智能领域进入了大探索时代。然而这仅仅只是生成式 AI 发展的第一幕。</p><p>我们今天要给大家带来的这篇文章认为，生成式 AI 已经进入第二幕，即整合时代，不同系统和企业之间将出现广泛合作，以定制解决方案将 AI 能力深度嵌入各行各业。</p><p>文章详细阐述了第二幕的几个特征：(1) 科技巨头纷纷与 AI 初创公司建立合作伙伴关系；(2) 将生成式 AI 无缝嵌入已有产品成为主流；(3) 内容公司与模型公司达成授权协议；(4)AI 与设备、系统集成；(5) 初创公司通过 API 为大公司提供服务。</p><p>生成式 AI 正在重塑软件世界，小公司的长期生存面临挑战，开源仍然至关重要。未来第三幕可能是物联网与 AI、合成生物学的深度融合。我们有理由相信未来会出现更多惊喜。</p></blockquote><p><strong>作者 | Paul DelSignore</strong></p><p><strong>🚢🚢🚢欢迎小伙伴们加入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaihai-idp.yuque.com%2Fmwvla8%2Fdoc%3F%23" target="_blank">AI 技术软件及技术交流群</a>，追踪前沿热点，共探技术难题~</strong></p><p>生成式人工智能的历史可追溯至 20&nbsp;世纪 60&nbsp;年代，但直到 2022 年，才迎来生成式人工智能大觉醒之年。</p><h1><strong>01 第一幕：探索</strong></h1><p>我还记得 2022 年 4 月我第一次看到 DALLE-2 时的情景，那就像是一种顿悟，我知道有大事将要发生了。我开始使用 GPT-3 和当时的一些人工智写作工具。</p><p>然后在 8 月，开源图像大模型 Stable Diffusion 发布，突然间，图像工具的数量呈现爆炸式增长。</p><p>到 2022 年 12 月，一款利用 Stable Diffusion 的手机拍照应用 Lensa AI 在短短一个月内就实现了全球近 2000&nbsp;万次的下载记录。</p><p>2022 年，ChatGPT 的公开发布让人工智能推向了新高潮，这标志着该技术突破性地进入了主流市场。ChatGPT 在短短几个月内用户数量就达到了 1 亿。</p><p>ChatGPT 的成功让其他行业开始思索大模型可能带来的颠覆性变化，成为人工智能创新的催化剂。突然间，每个人都在尝试使用生成式人工智能，几乎每天都有新工具发布。</p><p>举几个例子，比如大语言模型（GPT-4、PaLM2、Claude、LLaMA 等）、图像、视频和代码模型的创新，以及 AutoGPT 和 AI 智能体的新实验范例等等。</p><p>关于 ChatGPT 发布以来的大量创新，我也许可以写一本书，但如果要我用一个词来概括，那就是：<strong>探索</strong></p><h1><strong>02 第二幕：整合</strong></h1><p>最近，红杉（Sequoia）的一篇文章[1]，伊桑-莫利克（Ethan Mollick）的一篇文章[2]等都表明，变革之风正盛，我们正处于 Gen AI 故事的第二幕。</p><p>我也注意到了这种变化。人工智能正在走向成熟，而且正在产生一种捆绑效应（bundling effect）。我想用以下标题来定义第二幕：<strong>整合</strong></p><p>将其称为新阶段并不意味着「探索」阶段已经结束，远非如此。在未来几年里，我们将继续看到令人惊叹的创新水平。</p><p><strong>Gen AI 的时间轴并不是一个阶段结束，另一个新的阶段接着开始，而是一个嵌套的阶段。我们在接近整合时代的同时，仍将迎来创新时代。</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-4504e82e3d41c557191aa6309817670fdd5.png" alt="" referrerpolicy="no-referrer"></p><h1><strong>03 整合时代</strong></h1><p><strong>整合时代始于生成式 AI 人工智能军备竞赛元年。</strong></p><p>大型科技公司纷纷建立合作伙伴关系，以确保自己在竞争中占据主导地位和主要优势。这其中包括微软&nbsp;+ OpenAI、亚马逊&nbsp;+ Anthropic 和谷歌&nbsp;+ Nvidia。</p><p>由于 Gen AI 是一种功能、一种超级能力，而不是一种特定的应用或软件，因此现有的科技公司都拥有一个完美的战略来确保自己的立足点，即：<strong>将生成式 AI 融入一切。</strong></p><p>这个战略很简单，将人工智能的精华嵌入消费者和企业已经在使用的工具和产品中。因此，如果你想在人工智能的帮助下写作，你不需要一个新的人工智能写作应用程序，因为它已经包含在微软的 Word 工具中了。</p><p>对于微软来说，他们的计划是将人工智能嵌入到一切中，包括他们的 365 Office 工具套件、必应搜索引擎、基于网络的应用程序和 Xbox 游戏机，以及最重要的，他们的 Windows 操作系统。</p><p>对于谷歌来说，他们的计划是相同的。谷歌搜索将由他们日益强大的 LLM（如 PaLM 和 Genesis）提供支持，谷歌 Workspace 将服务于商业用途，AI 将赋能包括电子商务、导航和图像捕捉在内的每个移动应用。</p><p>在图像和图形方面，尽管 Midjourney 和 Stable Diffusion 在探索时代占据了主导地位，但 Adobe 现已通过 Firefly v2 赶上，并在其所有应用程序和创意工具套件中整合了一系列令人印象深刻的生成式 AI 功能。</p><p>亚马逊作为云计算提供商，现在也是 LLM 提供商，通过 Bedrock 提供模型即服务（model-as-a-service，MaaS）。</p><p>Meta 将继续构建新的沉浸式技术，并通过 AI 增强其社交应用体验，而我们甚至还不清楚苹果一旦加入这场游戏会做些什么。AppleGPT 很可能会成为 AI 个人助理，超越包括 ChatGPT 在内的所有其他 chatbot。为什么呢？因为它将被整合进苹果生态系统——iPhone、电脑和其他设备中。</p><p>整合时代意味着生成式 AI 进入软件领域，就像为家庭供电一样。它将成为系统的一部分，成为我们已有的用户体验的一部分。</p><h1><strong>04 初创公司面临的挑战</strong></h1><p>虽然我们将继续看到初创公司在 Discord 频道、Github repos 和社交媒体上的惊人创新，但小公司与 Gen AI 玩长期游戏将变得越来越困难。</p><p>至少，他们需要「缴税「，因为大型科技公司拥有 LLM，他们拥有铁路和电网。</p><p>毫无疑问，这就是为什么大多数大型科技公司（Meta 除外）反对开源 LLM 的原因。不要相信关于安全问题的谎言。</p><p>这就是为什么开源必须继续成为生成式 AI 的一个充满活力的组成部分。创新需要公司在不受专有 LLM 公司限制的情况下进行实验和创新。</p><h1><strong>05 合作推动定制化</strong></h1><p>随着生成式 AI 进入下一个阶段，系统和这些公司之间的合作将增加，以便为工业和商业的各种应用提供整合 AI 能力的定制解决方案。</p><p>那看起来会是什么样的？</p><ul><li>随着多模态体验的增加，我们可能会看到专注于某一细分市场的公司与其他公司合作。最近的一个例子是 Canva + Runway。</li><li>像 Anthropic 或 OpenAI 这样的 LLM 公司将寻找高质量的内容进行训练。内容公司将会对模型公司进行授权或合作。最近的一个例子是 AP 将内容授权给 OpenAI[3]。</li><li>随着设备开始变得智能并融入 AI，预计 LLM 将开始与设备连接。最近的一个例子是使用 LLM 进行视觉引导的自动驾驶[4]。</li><li>像 Pika Labs 或 Midjourney 这样的公司将通过 API 为大公司提供服务集成。最近的一个例子是 Google 将 Adobe 的 Firefly 用于图像生成。</li></ul><h1><strong>06 未来行动展望</strong></h1><p>如果让我预测&nbsp;"第三幕&nbsp;"会是什么样子，我会说，我们将看到人工智能在物理世界中越来越多地出现。</p><p><strong>集成时代主要是人工智能与软件&nbsp;(AI+Software)&nbsp;的融合，而生物空间时代将是人工智能与物理和生物的融合 (AI + Physical + Biology)。</strong></p><p>第三幕将是由人工智能物联网（AIoT）和不断涌现的合成生物学驱动的的物联网融合时代。我们还没有一个合适的词来形容它，所以我称之为&nbsp;"生物空间时代"。我相信会有更好的词出现。</p><p><img src="https://oscimg.oschina.net/oscnet/up-9dd15fd57035e012224407de4ba25a9f7a5.png" alt="" referrerpolicy="no-referrer"></p><h1><strong>07 最后的思考</strong></h1><p><strong>生成式人工智能已进入第二幕</strong>，其特点是不同系统和企业协作的融合，协同为各行各业的各种应用提供量身定制的人工智能能力，并将其深度融入到到应用解决方案中。</p><p>作为一个谨慎的技术乐观主义者，我深知进步将伴随着许多挑战。随着生成式人工智能进一步深入我们的工具和生活，围绕人工智能伦理、数据隐私和安全的合理担忧也将变得突出。</p><p><strong>Thanks for reading!</strong></p><p><strong>🚢🚢🚢欢迎小伙伴们加入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbaihai-idp.yuque.com%2Fmwvla8%2Fdoc%3F%23" target="_blank">AI 技术软件及技术交流群</a>，追踪前沿热点，共探技术难题~</strong></p><p><strong>END</strong></p><p><strong>参考资料</strong></p><p>[1]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sequoiacap.com%2Farticle%2Fgenerative-ai-act-two%2F" target="_blank">https://www.sequoiacap.com/article/generative-ai-act-two/</a></p><p>[2]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tandfonline.com%2Fdoi%2Ffull%2F10.1080%2F08956308.2023.2213102" target="_blank">https://www.tandfonline.com/doi/full/10.1080/08956308.2023.2213102</a></p><p>[3]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapnews.com%2Farticle%2Fopenai-chatgpt-associated-press-ap-f86f84c5bcc2f3b98074b38521f5f75a" target="_blank">https://apnews.com/article/openai-chatgpt-associated-press-ap-f86f84c5bcc2f3b98074b38521f5f75a</a></p><p>[4]&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnews.ycombinator.com%2Fitem%3Fid%3D37710865" target="_blank">https://news.ycombinator.com/item?id=37710865</a></p><p><strong>本文经原作者授权，由 Baihai IDP 编译。如需转载译文，请联系获取授权。</strong></p><p><strong>原文链接：</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2Fthe-generator%2Fthe-next-phase-of-generative-ai-984b109915ed" target="_blank">https://medium.com/the-generator/the-next-phase-of-generative-ai-984b109915ed</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 05:49:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/IDP/blog/10388555</guid>
            <link>https://my.oschina.net/IDP/blog/10388555</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 拟以 1000 亿美元估值开启新一轮融资]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">彭博社援引知情人士<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bloomberg.com%2Fnews%2Farticles%2F2023-12-22%2Fopenai-in-talks-to-raise-new-funding-at-100-billion-valuation" target="_blank">消息称</a>，OpenAI&nbsp;正在以 1000 亿美元或以上的估值筹集新一轮融资，相关谈判尚处于早期阶段。这笔交易将巩固这家 ChatGPT 制造商作为全球最有价值初创公司之一的地位。</span></p><p><span style="color:#000000">可能参与本轮融资的投资者的相关信息并未有过多透露，且本轮融资的条款、估值和时间安排等细节也尚未最终确定，仍可能发生变化。根据 </span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cbinsights.com%2Fresearch-unicorn-companies" target="_blank">CBInsights 的数据</a><span style="color:#000000">，如果本轮融资按计划进行，那么 OpenAI 将成为美国价值第二高的初创企业，仅次于 Elon Musk 的太空探索技术公司（SpaceX）。</span></p><p><span style="color:#000000">OpenAI 对此拒绝置评。</span></p><p><img height="240" src="https://oscimg.oschina.net/oscnet/up-933407733ad072a31a3b04922263ecc0b34.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">知情人士称，OpenAI 还与阿布扎比 G42 进行了商讨，为一家新的芯片合资企业募集资金。其中一位知情人士称，OpenAI 已经讨论过从 G42 筹集 80 亿至 100 亿美元的资金。目前尚不清楚芯片合资企业和公司更广泛的融资计划之间是否有关联。</span></p><p><span style="color:#000000">事实上，OpenAI 首席执行官 Sam Altman 一直在为代号为 Tigris 的芯片制造项目寻求资金。据彭博社上个月报道，其目标是生产能够与英伟达半导体竞争的半导体。</span></p><p><span style="color:#000000">10 月份，G42 曾宣布与 OpenAI 合作，"向阿联酋和地区市场提供尖端的人工智能解决方案"，但没有公布具体的财务细节。G42 公司成立于 2018 年，由阿联酋国家安全顾问兼阿布扎比投资局主席 Sheikh Tahnoon bin Zayed Al Nahyan 领导。</span></p><p><strong><span style="color:#000000">相关阅读：</span></strong></p><ul><li><a href="https://www.oschina.net/news/259735/openai-seeks-new-valuation-90-billion" target="news">OpenAI 寻求出售现有股票，估值高达 900 亿美元</a></li><li><a href="https://www.oschina.net/news/269384/openai-buy-ai-chips-startup-sam-altma" target="_blank">OpenAI 承诺从 Altman 投资的初创公司购买 AI 芯片</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 03:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272549/openai-valuation-100-billion-funding-round</guid>
            <link>https://www.oschina.net/news/272549/openai-valuation-100-billion-funding-round</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[苹果发布开源多模态大语言模型 Ferret]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>科技媒体 VentureBeat&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fventurebeat.com%2Fai%2Fapple-quietly-released-an-open-source-multimodal-llm-in-october%2F">报道称</a></u>，苹果公司在 2023 年 10 月低调发布了一款名为 Ferret 的开源多模态大语言模型，这是苹果与哥伦比亚大学研究人员的合作成果。当时发布的内容包括了<strong>代码和权重</strong>（仅限研究用途，不包含商业许可），但并未引起太多关注。</p><p>随着近期<a href="https://www.oschina.net/news/270317/mixtral-8-7b-32kseqlen">Mistral 的开源 MoE 模型</a>成为焦点，以及谷歌的 Gemini 模型即将在 Pixel Pro 上亮相，未来还将进入 Android 系统，越来越多人开始关注<strong>本地 LLMs 为小型设备提供支持</strong>的潜力。</p><p>近日，专注于医疗领域开源 AI 的欧洲非营利组织负责人 Bart de Witte 在 X 平台上分享了他的惊讶：「我之前竟然没发现这个。」 他表示，「苹果在 10 月份加入了开源 AI 圈子。<strong>Ferret 的推出展现了苹果对影响深远的 AI 研究的承诺</strong>，巩固了它在多模态 AI 领域的领先地位…… 另外，我很期待有一天 Local Large Language Models (LLLMs) 能作为重新设计的 iOS 的一部分，在我的 iPhone 上运行。」</p><p>苹果公司 AI/ML 研究科学家 Zhe Gan 在 10 月份发布的一条<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fzhegan4%2Fstatus%2F1712345137983201716" target="_blank">推文</a></u>中解释了 Ferret 的用途 —— 一个可以在图像中 "以任何粒度对任何地方的任何东西进行参照和定位" 的系统。它还可以通过使用图像中任何形状的区域来做到这一点。</p><p>简单地说，该模型可以分析图像上绘制的区域，确定其中对用户查询有用的元素，并将其识别出来，在检测到的元素周围绘制一个边界框。然后，它就可以将识别出的元素用作查询的一部分，并以典型的方式作出响应。</p><p>例如，高亮显示图像中的动物图片并询问 LLM 这是什么动物，LLM 可以确定该动物的种类，并确定用户所指的是动物群中的某只动物。然后，它还可以利用图像中检测到的其他项目的上下文，提供进一步的回复。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a440d5b0e01c06148ff9a53a44893647400.png" referrerpolicy="no-referrer"></p><blockquote><p><strong>GitHub</strong>：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.co%2FX29q1Kazew" target="_blank">https://github.com/apple/ml-ferret</a></u><br><strong>论文</strong>：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ft.co%2FOdhGoyK33r" target="_blank">https://arxiv.org/abs/2310.07704</a></u></p></blockquote><p>Ferret 拥有 (7B, 13B) 两个版本，为了增强 Ferret 模型的能力苹果特别收集了一个 GRIT 数据集。它包含了 1.1M 个样本，这些样本包含了丰富的层次空间知识。</p><p>尽管苹果以往以其产品和技术的封闭性著称，但现在它通过发布开源 LLM 模型，正逐渐改变这一形象，展现出其在 AI 领域的活跃参与和创新精神。这不仅对苹果自身，也对整个 AI 领域来说，都是一个值得关注的重要发展方向。</p><p>VentureBeat 撰稿人 Ben Dickson 写道：「2023 年最让你意外的人工智能进展是什么？对我来说，是苹果发布了开源 LLMs（虽然是非商业许可）。」他指出，苹果一贯以来是封闭系统、围墙花园开发、保密、严格的保密协议、发布极少细节、并为其产品申请每一项小的专利的代表。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272543/apple-quietly-released-an-open-source-multimodal-llm-in-october</guid>
            <link>https://www.oschina.net/news/272543/apple-quietly-released-an-open-source-multimodal-llm-in-october</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[De4py —— Python 逆向工程工具包]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>De4py 是一款高级 python 反混淆器，拥有漂亮的用户界面和一系列高级功能，可帮助恶意软件分析师和反向工程师对 python 文件等进行反混淆。</p><table border="1" cellspacing="0" style="-webkit-text-stroke-width:0px; background-color:#ffffff; border-collapse:collapse; border-spacing:0px; border:1px solid var(--borderColor-default, var(--color-border-default)); box-sizing:border-box; color:#1f2328; display:block; font-family:-apple-system,BlinkMacSystemFont,&quot;Segoe UI&quot;,&quot;Noto Sans&quot;,Helvetica,Arial,sans-serif,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;; font-size:16px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; margin-bottom:16px; margin-top:0px; max-width:100%; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:max-content; word-spacing:0px"><tbody><tr><th>特征</th><th>功能</th></tr></tbody><tbody><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>反混淆</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>De4py 支持一些流行的混淆器，例如：Jawbreaker、BlankOBF、PlusOBF、Wodx、Hyperion、pyobfuscate.com 混淆器</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>Pycode 执行</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>在进程内执行 python 代码，这在许多情况下很有用，可以使程序执行您想让它执行的操作，例如，如果程序具有许可并且它调用真正的「main」只有购买了程序才可以直接调用。</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>字符串转储</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>在 python 进程中转储字符串并将其保存为文件，这对于从内存中提取数据（例如 webhook）非常有用。</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>删除退出功能</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>删除退出函数，如果 python 程序在找到调试器或虚拟机时尝试退出，该函数将非常有用</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>获取所有功能</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>获取 python 进程内的所有函数，这在尝试修改内存中的 python 函数时非常有用</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>Pyshell 图形用户界面</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>自定义 GUI，可以轻松在所需进程内执行 python 代码。</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>GUI 和控制枱支持</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>De4py 同时支持控制枱和 GUI</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>文件分析器</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>一个具有许多功能的分析器，例如检测 python 程序是否已打包，并尝试在使用 pyinstaller 时解包它，例如，它还有一个功能，可以显示所有字符串或可疑字符串（可疑字符串，例如：IP、网站和「token」「discord」「leveldb」字符串和文件中的其他可疑字符串）并在一个漂亮的输出窗口中显示它们。</span></td></tr><tr><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>行为监控</span></td><td style="background-color:#ffffff; border-style:solid; border-width:1px"><span>De4py 可以监控 python 进程，查看它们是否打开了任何文件句柄、打开了进程、写入/读取了其他进程的内存，还可以监控该进程是否终止了其他进程，此外还可以监控套接字（包括正在传输的数据大小）发送和正在发送/接收的 IP）。</span></td></tr></tbody></table><p><img height="281" src="https://static.oschina.net/uploads/space/2023/1218/162454_FC7o_4252687.png" width="500" referrerpolicy="no-referrer"></p><p><img height="291" src="https://static.oschina.net/uploads/space/2023/1218/162502_5f0Q_4252687.png" width="500" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/de4py</guid>
            <link>https://www.oschina.net/p/de4py</link>
        </item>
        <item>
            <title>
                <![CDATA[联想毛世杰：行业元宇宙愿景需要分阶段实现]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span>「满足人和机器的协同效率，为现实世界提供服务，这是元宇宙的愿景」，1</span></span><span><span>2</span></span><span><span>月 2</span></span><span><span>2</span></span><span><span>日，联想集团副总裁、联想研究院上海分院院长毛世杰在网易未来大会上表示，「而这个愿景需要分阶段实现。」</span></span></span></span></span></p><p><img height="333" src="https://static.oschina.net/uploads/space/2023/1225/101601_t3iM_4252687.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span>「之所以我们需要元宇宙，需要数字空间，是因为在虚拟空间里可以实现真实世界难以实现，或者是实现成本很高的事情。」毛世杰强调，但是在构建虚拟空间以后，最终的目的仍然是要回到现实世界，一步一步赋能现实世界变得更加美好和高效。</span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span>以工业元宇宙为例，毛世杰指出，第一步是要构建元宇宙产线。在元宇宙产线中，工业产线叠加虚拟世界的信息与感知能力，可以提升人与机器人的决策能力和协作效率；</span></span><span><span>在人、机器、数据等关键要素融合的产线数字孪生体和工业元宇宙虚拟装配空间中，非接触式检测手段可以实现三维自动化、智能化质检；工艺仿真模型库可以引导规范产线操作，提供专家远程协同指导等。</span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span>第二步是要构建元宇宙工厂。在元宇宙工厂中，通过低时延、高保真、智能决策的工厂级元宇宙平台可以实现多类型工业软件集成、沉浸交互设备实现智能巡检、远程协作等应用，工厂生产运营各环节信息可以全面感知和实时反馈。</span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span>第三步是打造元宇宙园区。在元宇宙园区中，虚实结合的新型园区建设模式和运营模式可以提升工业园区产业规划和布局能力，优化园区空间布局、设施配套、资源调配等协同服务能力和运营效率。此外，还可以建立基于工业元宇宙的科技创新和招商引资平台，创新园区服务模式。</span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span>「未来，联想将把持续打造成熟的工业元宇宙，开拓虚实互促的制造业增长新模式作为长期目标。」毛世杰强调。</span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272529</guid>
            <link>https://www.oschina.net/news/272529</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 支持私有部署的云端双链笔记软件 Blossom]]>
            </title>
            <description>
                <![CDATA[<p align="center"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/blossom_name.png" height="auto" referrerpolicy="no-referrer"></p><p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-demo%2F%23%2Fsettingindex">💻️ 试用</a> | <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Findex.html">📃 文档</a> | <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Fabout%2Fdownload.html">📥 下载</a></p><p>Blossom 是一个支持<strong>私有部署</strong>的<strong>云端双链笔记软件</strong>，你可以将你的笔记，图片，个人计划安排保存在自己的服务器中，并在任意设备之间实时同步。同时还是一个动态博客。</p><p>支持 Windows，Mac，网页客户端，网页移动端。</p><p align="center"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/device.png" referrerpolicy="no-referrer"></p><h1><a id="️-在线试用" class="anchor" href="https://gitee.com/blossom-editor/blossom#%EF%B8%8F-%E5%9C%A8%E7%BA%BF%E8%AF%95%E7%94%A8"></a>🛎️ 在线试用</h1><p>你可以通过<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-demo%2F%23%2Fsettingindex">在线地址</a>或<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Fabout%2Fdownload.html">下载客户端</a>试用，详细信息请查看<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Ftryuse.html">试用</a>文档。</p><p><br><br></p><h1><a id="-blossom-的特点" class="anchor" href="https://gitee.com/blossom-editor/blossom#-blossom-%E7%9A%84%E7%89%B9%E7%82%B9"></a>👏 Blossom 的特点:</h1><h3><a id="完善的文件关系" class="anchor" href="https://gitee.com/blossom-editor/blossom#%E5%AE%8C%E5%96%84%E7%9A%84%E6%96%87%E4%BB%B6%E5%85%B3%E7%B3%BB"></a>完善的文件关系</h3><p>Blossom 不依赖任何三方存储和图床，其本身就是一个图床，并且提供了完善的图片管理，访勿删，以及图片和文章的双向关系绑定。</p><p>基于 Markdown 编写，没有破坏性的语法拓展，在这里编写的内容在任何 Markdown 软件中都能正常显示。</p><h3><a id="快速迁移" class="anchor" href="https://gitee.com/blossom-editor/blossom#%E5%BF%AB%E9%80%9F%E8%BF%81%E7%A7%BB"></a>快速迁移</h3><p>所有图片和文章都支持一键备份和导出，可以在几分钟内轻松迁出。导出的文件可以无缝使用 VS Code 或 Obsidian 等本地软件正常打开。</p><h3><a id="丰富的附加功能" class="anchor" href="https://gitee.com/blossom-editor/blossom#%E4%B8%B0%E5%AF%8C%E7%9A%84%E9%99%84%E5%8A%A0%E5%8A%9F%E8%83%BD"></a>丰富的附加功能</h3><ul><li>📅 <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Fplan.html">计划安排</a></li><li>🏷️ <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Ftodo.html">待办事项</a></li><li>🎫 <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Fnote.html">快捷便签</a></li><li>🍅 <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.wangyunf.com%2Fblossom-doc%2Fguide%2Farticle.html%23tomato">番茄钟</a></li><li>🧰 多用户、字数统计、字数折线图、编辑热力图、天气预报、主题设置...</li></ul><p>Blossom 拥有丰富的功能，不仅仅是知识管理，更是一个可以供多人同时使用的全面实用性工具。</p><p><br><br></p><h1><a id="-docker-compose-一键部署" class="anchor" href="https://gitee.com/blossom-editor/blossom#-docker-compose-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2"></a>🚀 Docker Compose 一键部署</h1><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">docker compose -f docker/compose/blossom-mysql8.yaml up -d</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><br><br></p><h1><a id="-加入群聊" class="anchor" href="https://gitee.com/blossom-editor/blossom#-%E5%8A%A0%E5%85%A5%E7%BE%A4%E8%81%8A"></a>🥳 加入群聊</h1><p>加入群聊进行沟通，反馈问题。</p><ul><li>1 群：522359970 (即将满)</li><li>2 群：921906098</li></ul><p align="center"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/qq1.png" height="400" referrerpolicy="no-referrer"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/qq2.png" height="400" referrerpolicy="no-referrer"></p><h1><a id="-赞助-blossom" class="anchor" href="https://gitee.com/blossom-editor/blossom#-%E8%B5%9E%E5%8A%A9-blossom"></a>🤝 赞助 Blossom</h1><p><strong>Blossom 不会向你收取任何的费用，你可以永久免费使用！</strong></p><p>但开源软件的收益目前很难维持生活，并且项目设计，开发，测试需要大量的时间和精力，如果你愿意赞助我的工作，将非常有助于该项目的成长，并激励我长期持续下去！</p><p><strong>感谢每一个位赞助者对 Blossom 的大力支持，Blossom 因为你们变得更好。</strong></p><table><thead><tr><th align="left">赞助者 / Sponsors</th><th align="left">赞助者 / Sponsors</th><th align="left">赞助者 / Sponsors</th><th align="left">赞助者 / Sponsors</th></tr></thead><tbody><tr><td align="left">i just walked away🏃</td><td align="left">KalyanYang</td><td align="left">dsx</td><td align="left">熊猫不是猫</td></tr><tr><td align="left">白驹过隙</td><td align="left">支付宝用户-*发</td><td align="left">支付宝用户-*琛</td><td align="left">支付宝匿名用户</td></tr><tr><td align="left">疾风剑豪索隆</td><td align="left">放羊的星星</td><td align="left">立冬</td><td align="left">给你一支烟</td></tr><tr><td align="left">林诗</td><td align="left">Criesgod</td><td align="left">支付宝用户-*伟</td><td align="left">黑醋栗和丁香</td></tr><tr><td align="left">Mr_tg000</td><td align="left">Lucky</td><td align="left">egil</td><td align="left">Glimpse</td></tr></tbody></table><hr><h4 align="center"><a id="你可以通过以下几种方式赞助-blossom" class="anchor" href="https://gitee.com/blossom-editor/blossom#%E4%BD%A0%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E4%BB%A5%E4%B8%8B%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F%E8%B5%9E%E5%8A%A9-blossom"></a>你可以通过以下几种方式赞助 Blossom。</h4><p align="center"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/sponsors/wechat.png" height="400" referrerpolicy="no-referrer"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/sponsors/ali.png" height="400" referrerpolicy="no-referrer"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/sponsors/aifadian.png" height="400" referrerpolicy="no-referrer"></p><br><h1><a id="更多图片" class="anchor" href="https://gitee.com/blossom-editor/blossom#%E6%9B%B4%E5%A4%9A%E5%9B%BE%E7%89%87"></a>更多图片</h1><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/article.png" alt="&quot;编辑器&quot;" referrerpolicy="no-referrer"></p><p align="center">编辑器</p><hr><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/article_reference.png" alt="&quot;双链笔记&quot;" referrerpolicy="no-referrer"></p><p align="center">双链笔记</p><hr><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/picture.png" alt="&quot;照片墙&quot;" referrerpolicy="no-referrer"></p><p align="center">照片墙</p><hr><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/todo.png" alt="&quot;日历计划&quot;" referrerpolicy="no-referrer"></p><p align="center">待办事项清单</p><hr><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/plan.png" alt="&quot;日历计划&quot;" referrerpolicy="no-referrer"></p><p align="center">日历计划</p><hr><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/note.png" alt="&quot;便签管理&quot;" referrerpolicy="no-referrer"></p><p align="center">便签管理</p><hr><p><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/blog_home_pc.png" alt="&quot;博客&quot;" referrerpolicy="no-referrer"></p><p align="center">博客</p><p align="center"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/blog_home_m.png" height="600" referrerpolicy="no-referrer"><img src="https://gitee.com/blossom-editor/blossom/raw/dev/doc/imgs/blog_article.png" height="600" referrerpolicy="no-referrer"></p><p align="center">博客移动端</p>]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/blossom-editor/blossom</guid>
            <link>https://gitee.com/blossom-editor/blossom</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 前端 JS 安全对抗原理与实践]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="letter-spacing: 0.578px;text-wrap: wrap;font-size: 15px;line-height: 1.6;"><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;"><section style="padding-left: 8px;display: inline-block;width: 578px;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;align-self: flex-start;flex: 0 0 auto;"><section powered-by="xiumi.us" style="color: rgba(0, 0, 0, 0.5);font-size: 14px;text-align: justify;"><p>作者：vivo 互联网安全团队- Luo Bingsong</p></section></section></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="text-align: left;"><section style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;color: rgb(160, 160, 160);"><p>前端代码都是公开的，为了提高代码的破解成本、保证 JS 代码里的一些重要逻辑不被居心叵测的人利用，需要使用一些加密和混淆的防护手段。</p></section></section><section powered-by="xiumi.us" style="margin-bottom: -5px;text-align: right;line-height: 1;font-size: 5px;transform: translate3d(5px, 0px, 0px);"><section style="width: 0px;display: inline-block;vertical-align: top;border-bottom: 0.6em solid rgb(160, 160, 160);border-right: 0.6em solid rgb(160, 160, 160);border-top: 0.6em solid transparent !important;border-left: 0.6em solid transparent !important;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>一、概念解析</p></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">1.1 什么是接口加密</span></p><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p>如今这个时代，数据已经变得越来越重要，网页和 APP 是主流的数据载体，如果获取数据的接口没有设置任何的保护措施的话，数据就会被轻易地窃取或篡改。</p><p><br></p><p>除了数据泄露外，一些重要功能的接口如果没有做好保护措施也会被恶意调用造成 DDoS、条件竞争等攻击效果，比如如下几个场景：</p><p><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014131" data-ratio="0.3388888888888889" data-s="300,640" src="https://oscimg.oschina.net/oscnet/7ad9ffb7-adfb-4eda-b6ab-870efe6f751f.png" data-type="png" data-w="1080" referrerpolicy="no-referrer"></p><p><br></p></section><section powered-by="xiumi.us"><p>一些营销活动类的 Web 页面，领红包、领券、投票、抽奖等活动方式很常见。此类活动对于普通用户来说应该是「拼手气」，而对于非正常用户来说，可以通过直接刷活动 API 接口的这种「作弊」方式来提升「手气」。这样对普通用户来说就很不公平。</p><p><br></p><p>所以对重要接口都会采用加密验签的方式进行保护，而验签的加密逻辑大多数都通过 JS 代码实现，所以保护 JS 代码不被攻击者窃取尤为重要。</p></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">1.2 为什么要保护 JS 代码</span><span style="background-color: rgb(239, 239, 239);letter-spacing: 0.034em;"></span></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: right;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: transparent;background-color: rgb(239, 239, 239);height: auto;"><section powered-by="xiumi.us" style="text-align: justify;"><ul class="list-paddingleft-1" style="width: 555.438px;"><li><p><span style="letter-spacing: 0.578px;">JavaScript 代码运行于客户端</span><br></p></li><li><p><span style="letter-spacing: 0.034em;">JavaScript 代码是公开透明的</span><br></p></li></ul></section></section></section><p powered-by="xiumi.us"><span style="letter-spacing: 0.034em;">由于这两个原因，致使 JavaScript 代码是不安全的，任何人都可以读、分析、复制、盗用甚至篡改。</span><br></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">1.3 应用场景</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">以下场景就通过特定的防护措施提高了攻击成本：</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><ul class="list-paddingleft-1" style="width: 545.453px;"><li><p><span style="letter-spacing: 0.578px;">某些网站会在页面中使用 JavaScript 对数据进行加密，以保护数据的安全性和隐私性，在爬取时需要通过解密 JavaScript 代码才能获取到数据。</span><br></p></li><li><p>某些网站的 URL 会有某个参数带有一些看不太懂的长串加密参数，攻击者要爬取的话就必须要知道这些参数是怎么构造的，否则无法正确地访问该 URL。</p></li><li><p><span style="letter-spacing: 0.034em;">翻看网站的 JavaScript 源代码，可以发现很多压缩了或者看不太懂的字符，比如 JavaScript 文件名被编码，JavaScript 的文件内容都压缩成几行，JavaScript 变量也被修改成单个字符或者一些十六进制的字符，所以我们不能轻易地根据 JavaScript 找出某些接口的加密逻辑。</span></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">1.4 涉及的技术</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">这些场景都是网站为了保护数据不被轻易抓取采取的措施，运用的技术主要有：</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><ul class="list-paddingleft-1" style="width: 545.453px;"><li><p><span style="letter-spacing: 0.578px;">接口加密技术</span><br></p></li><li><p><span style="letter-spacing: 0.034em;">JavaScript 压缩、混淆和加密技术</span><br></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>二、技术原理</p></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.1 接口加密技术</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">数据和功能一般是通过服务器提供的接口来实现，为了提升接口的安全性，客户端会和服务端约定一种接口检验方式，通常是各种加密和编码算法，如 Base64、Hex、MD5、AES、DES、RSA 等。</p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">常用的数据接口都会携带一个 sign 参数用于权限管控：</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><p>① 客户端和服务端约定一种接口校验逻辑，客户端在每次请求服务端接口的时候附带一个 sign 参数。<br>② sign 参数的逻辑自定义，可以由当前时间戳信息、设备 ID、日期、双方约定好的秘钥经过一些加密算法构造而成。<br>③ 客户端根据约定的加密算法构造 sign，每次请求服务器的时候附带上 sign 数。<br>④ 服务端根据约定的加密算法和请求的数据对 sign 进行校验，如果检验通过，才返回数据，否则拒绝响应。</p></section></section></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014130" data-ratio="0.5841708542713567" data-s="300,640" src="https://oscimg.oschina.net/oscnet/31059832-3a24-49be-bc27-11ceb57f0134.png" data-type="png" data-w="796" referrerpolicy="no-referrer"></p><p><br></p><p>这就是一个比较简单的接口参数加密的实现，如果有人想要调用这个接口的话，必须要破解 sign 的生成逻辑，否则是无法正常调用接口的。</p><p><br></p><p>当然上面的实现思路比较简单，还可以增加一些时间戳信息和访问频次来增加时效性判断，或使用非对称加密提高加密的复杂程度。</p><p><br></p><p>实现接口参数加密需要用到一些加密算法，客户端和服务器都有对应的 SDK 来实现这些加密算法，如 JavaScript 的 crypto-js、Python 的 hashlib、Crypto 等等。如果是网页且客户端的加密逻辑是用 JavaScript 来实现的话，其源代码对用户是完全可见的，所以我们需要用压缩、混淆、加密的方式来对 JavaScript 代码进行一定程度的保护。</p></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.2 什么是压缩</span></p><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p>去除 JavaScript 代码中不必要的空格、换行等内容，使源码都压缩为几行内容，降低代码可读性，同时可提高网站的加载速度。</p><p><br></p><p>如果仅仅是去除空格换行这样的压缩方式，几乎没有任何防护作用，这种压缩方式仅仅是降低了代码的直接可读性，可以用 IDE、在线工具或 Chrome 轻松将 JavaScript 代码变得易读。</p><p><br></p><p>所以 JavaScript 压缩技术只能在很小的程度上起到防护作用，想提高防护的效果还得依靠 JavaScript 混淆和加密技术。</p></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.3 什么是混淆</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">使用变量混淆、字符串混淆、属性加密、控制流平坦化、调试保护、多态变异等手段，使代码变得难以阅读和分析，同时不影响代码原有功能，是一种理想且实用的 JS 保护方案。<span style="background-color: rgb(239, 239, 239);letter-spacing: 0.034em;"></span></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: right;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: transparent;background-color: rgb(239, 239, 239);height: auto;"><section powered-by="xiumi.us" style="text-align: justify;"><ul class="list-paddingleft-1" style="width: 555.438px;"><li><p><strong>变量混淆</strong><span style="letter-spacing: 0.578px;">：将变量名、方法名、常量名随机变为无意义的乱码字符串，降低代码可读性，如转成单个字符或十六进制字符串。</span><br></p></li><li><p><strong>字符串混淆</strong>：将字符串阵列化集中放置，并进行 MD5 或 Base64 编码存储，使代码中不出现明文字符串，可以避免使用全局搜索字符串的方式定位到入口点。</p></li><li><p><strong>属性加密</strong><span style="letter-spacing: 0.578px;">：针对 JavaScript 对象的属性进行加密转化，隐藏代码之间的调用关系，把 key-value 的映射关系混淆掉。</span></p></li><li><p><strong>控制流平坦化</strong><span style="letter-spacing: 0.578px;">：打乱函数原有代码执行流程及函数调用关系，使代码逻辑变得混乱无序。</span></p></li><li><p><strong>调试保护</strong><span style="letter-spacing: 0.578px;">：基于调试器特性，加入一些强制调试 debug 语句，无限 debug、定时 debug、debug 关键字，使其在调试模式下难以顺利执行 JavaScript 代码。</span></p></li><li><p><strong>多态变异</strong><span style="letter-spacing: 0.578px;">：JavaScript 代码每次被调用时，代码自身立刻自动发生变异，变化为与之前完全不同的代码，避免代码被动态分析调试。</span><span style="letter-spacing: 0.034em;"></span></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.4 什么是加密</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">JavaScript 加密是对 JavaScript 混淆技术防护的进一步升级，基本思路是将一些核心逻辑用 C/C++语言来编写，并通过 JavaScript 调用执行，从而起到二进制级别的防护作用，加密的方式主要有 Emscripten 和 WebAssembly 等。</p><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p><strong>1. Emscripten</strong></p><p>Emscripten 编译器可以将 C/C++代码编译成 asm.js 的 JavaScript 变体，再由 JavaScript 调用执行，因此某些 JavaScript 的核心功能可以使用 C/C++语言实现。</p></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p><strong>2.WebAssembly</strong></p><p>WebAssembly 也能将 C/C++代码转成 JavaScript 引擎可以运行的代码，但转出来的代码是二进制字节码，而 asm.js 是文本，因此运行速度更快、体积更小，得到的字节码具有和 JavaScript 相同的功能，在语法上完全脱离 JavaScript，同时具有沙盒化的执行环境，利用 WebAssembly 技术，可以将一些核心的功能用 C/C++语言实现，形成浏览器字节码的形式，然后在 JavaScript 中通过类似如下的方式调用：</p></section><p powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014132" data-ratio="0.31203703703703706" data-s="300,640" src="https://oscimg.oschina.net/oscnet/6fc3ee11-4879-4a3a-a9fd-1ae1cf3e94de.png" data-type="png" data-w="1080" referrerpolicy="no-referrer"></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">这种加密方式更加安全，想要逆向或破解需要逆向 WebAssembly，难度极大。</p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">2.5 工具介绍</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>2.5.1 压缩混淆工具</strong></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><ul class="list-paddingleft-1" style="width: 545.453px;"><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmishoo%2FUglifyJS" textvalue="Uglifyjs" linktype="text" imgurl="" tab="outerlink" data-linktype="2" style="letter-spacing: 0.578px;"><strong>Uglifyjs</strong></a><span style="letter-spacing: 0.578px;">（开源）：</span><br></p><p>用 NodeJS 编写的 JavaScript 压缩工具，是目前最流行的 JS 压缩工具，JQuery 就是使用此工具压缩，UglifyJS 压缩率高，压缩选项多，并且具有优化代码，格式化代码功能。</p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jshaman.com%2F" textvalue="jshsman" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><strong>jshaman</strong></a>：</p><p><span style="letter-spacing: 0.034em;">jshaman 是一个商业级</span><span style="letter-spacing: 0.034em;">工具，看了很多社区的评论，这个目前是最好的，可以在线免费使用，也可以购买商业版。</span></p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.jsfuck.com%2F" textvalue="jsfuck" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><strong>jsfuck</strong></a>：</p><p>开源的 js 混淆工具，原理比较简单，通过特定的字符串加上下标定位字符，再由这些字符替换源代码，从而实现混淆。</p></li><li><p><strong><span style="letter-spacing: 0.034em;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fyui.github.io%2Fyuicompressor%2F" textvalue="YUI Compressor" linktype="text" imgurl="" tab="outerlink" data-linktype="2">YUI Compressor</a>：</span></strong></p><p><span style="letter-spacing: 0.034em;">业界巨头 yahoo 提供的一个前端压缩工具，通过 java 库编译 css 或 js 文件进行压缩</span></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>2.5.2 反混淆工具</strong></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><ul class="list-paddingleft-1" style="width: 545.453px;"><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbeautifier.io%2F" textvalue="jsbeautifier" linktype="text" imgurl="" tab="outerlink" data-linktype="2" style="letter-spacing: 0.578px;"><strong>jsbeautifier</strong></a><span style="letter-spacing: 0.578px;">：</span></p><p>jsbeautifier 是一个为前端开发人员制作的 Chrome 扩展，能够直接查看经过压缩的 Javascript 代码。</p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Feth-sri%2FUnuglifyJS" textvalue="UnuglifyJS" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><strong>UnuglifyJS</strong></a>：</p><p>压缩工具 uglify 对应的解混淆工具。</p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jspacker.org%2F" textvalue="jspacker" linktype="text" imgurl="" tab="outerlink" data-linktype="2"><span style="letter-spacing: 0.034em;"><strong>jspacker</strong></span></a><span style="letter-spacing: 0.034em;">：</span></p><p><span style="letter-spacing: 0.034em;"></span><span style="letter-spacing: 0.034em;">用 PHP 编写的压缩工具，可以混淆代码保护知识产权，产生的代码兼容 IE、FireFox 等常用浏览器，国内大部分在线工具网站都采用这种算法压缩。</span><br></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 3px;display: inline-block;border-bottom: 1px solid rgb(65, 94, 255);font-size: 17px;color: rgb(65, 94, 255);"><p>三、前端安全对抗</p></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.1 前端调试手法</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.1.1 Elements</strong></p><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p>Elements 面板会显示目前网页中的 DOM、CSS 状态，且可以修改页面上的 DOM 和 CSS，即时看到结果，省去了在编辑器修改、储存、浏览器查看结果的流程。</p><p><br></p><p>有时候一些 dom 节点会嵌套很深，导致我们很难利用 Element 面板 html 代码来找到对应的节点。inspect(dom 元素) 可以让我们快速跳转到对应的 dom 节点的 html 代码上。</p><p><br></p></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014129" data-ratio="0.19074074074074074" data-s="300,640" src="https://oscimg.oschina.net/oscnet/39694af8-33f5-487e-a5b7-77e04bb1b89c.png" data-type="png" data-w="1080" referrerpolicy="no-referrer"></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.1.2 Console</strong></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">Console 对象提供了浏览器控制枱调试的接口，Console 是一个对象，上面有很多方便的方法。</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: right;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: transparent;background-color: rgb(239, 239, 239);height: auto;"><section powered-by="xiumi.us" style="text-align: justify;"><ul class="list-paddingleft-1" style="width: 555.438px;"><li><p><strong style="letter-spacing: 0.578px;">console.log( )</strong><span style="letter-spacing: 0.578px;">：</span><span style="letter-spacing: 0.578px;">最常用的语句，可以将变量输出到浏览器的控制枱中，方便开发者调用 JS 代码</span><br></p></li><li><p><strong>console.table( )</strong>：可用于打印 obj/arr 成表格<br></p></li><li><p><strong><span style="letter-spacing: 0.034em;">console.trace( )</span></strong><span style="letter-spacing: 0.034em;">：</span><span style="letter-spacing: 0.034em;">可用于 debugger 堆栈调试，方便查看代码的执行逻辑，看一些库的源码</span></p></li><li><p><strong style="letter-spacing: 0.034em;"><span style="letter-spacing: 0.034em;"></span></strong><strong style="letter-spacing: 0.034em;">console.count( )</strong><span style="letter-spacing: 0.034em;">：</span><span style="letter-spacing: 0.034em;">打印标签被执行了几次，预设值是 default，可用在快速计数</span></p></li><li><p><strong style="letter-spacing: 0.034em;">console.countReset( )</strong><span style="letter-spacing: 0.034em;">：</span><span style="letter-spacing: 0.034em;">用来重置，可用在计算单次行为的触发的计数</span></p></li><li><p><strong style="letter-spacing: 0.034em;">console.group( )/console.groupEnd( )</strong><span style="letter-spacing: 0.034em;">：</span></p><p><span style="letter-spacing: 0.034em;"></span><span style="letter-spacing: 0.034em;">为了方便一眼看到自己的 log，可以用 console.group 自定义 message group 标签，还可以多层嵌套，并用 console.groupEnd 来关闭 Group。</span></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.1.3 JS 断点调试</strong></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">JS 断点调试，即在浏览器开发者工具中为 JS 代码添加断点，让 JS 执行到某一特定位置停住，方便开发者对该处代码段进行分析与逻辑处理。</p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>&nbsp;Sources 面板</strong></p><section powered-by="xiumi.us"><p><br></p><p><strong>① 普通断点（breakpoint）</strong></p><p>给一段代码添加断点的流程是："F12（Ctrl + Shift + I）打开开发工具"-&gt;"点击 Sources 菜单"-&gt;"左侧树中找到相应文件"→"点击行号列"即完成在当前行添加/删除断点操作。当断点添加完毕后，刷新页面 JS 执行到断点位置停住，在 Sources 界面会看到当前作用域中所有变量和值。</p><p><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014133" data-ratio="0.2953703703703704" data-s="300,640" src="https://oscimg.oschina.net/oscnet/b8309fa8-8bcf-4c9d-9911-0c4940c2fc03.png" data-type="png" data-w="1080" referrerpolicy="no-referrer"></p><p><br></p></section><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><ul class="list-paddingleft-1" style="width: 545.453px;"><li><p><span style="letter-spacing: 0.578px;"><strong>恢复（Resume）</strong>：</span><span style="letter-spacing: 0.578px;">&nbsp;恢复按钮 (第一个按钮)，继续执行，快捷键 F8，继续执行，如果没有其他的断点，那么程序就会继续执行，并且调试器不会再控制程序。</span><br></p></li><li><p><strong>跨步（Step over）</strong>：运行下一条指令，但不会进入到一个函数中，快捷键 F10。</p></li><li><p><span style="letter-spacing: 0.034em;"><strong>步入（Step into）</strong>：</span><span style="letter-spacing: 0.034em;">快捷键 F11，和「下一步（Step）」类似，但在异步函数调用情况下表现不同，步入会进入到代码中并等待异步函数执行。</span></p></li><li><p><strong>步出（Step out）</strong>：继续执行到当前函数的末尾，快捷键 Shift+F11，继续执行代码并停止在当前函数的最后一行，当我们使用偶然地进入到一个嵌套调用，但是我们又对这个函数不感兴趣时，我们想要尽可能的继续执行到最后的时候是非常方便的。</p></li><li><p><span style="letter-spacing: 0.034em;"><strong>下一步（Step）</strong></span><span style="letter-spacing: 0.034em;">：</span><span style="letter-spacing: 0.034em;">运行下一条语句，快捷键 F9，一次接一次地点击此按钮，整个脚本的所有语句会被逐个执行，下一步命令会忽略异步行为。</span></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">启用/禁用所有的断点：这个按钮不会影响程序的执行。只是一个批量操作断点的开/关。</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><ul class="list-paddingleft-1" style="width: 545.453px;"><li><p><span style="letter-spacing: 0.578px;"><strong>察看（Watch）</strong>：</span><span style="letter-spacing: 0.578px;">显示任意表达式的当前值</span></p></li><li><p><span style="letter-spacing: 0.034em;"><strong>调用栈（Call Stack）</strong>：</span><span style="letter-spacing: 0.034em;">显示嵌套的调用链</span></p></li><li><p><span style="letter-spacing: 0.034em;"><strong>作用域（Scope）</strong>：</span><span style="letter-spacing: 0.034em;">显示当前的变量</span></p></li><li><p><span style="letter-spacing: 0.034em;"><strong>Local</strong>：</span><span style="letter-spacing: 0.034em;">显示当前函数中的变量</span></p></li><li><p><span style="letter-spacing: 0.034em;"><strong>Global</strong>：</span><span style="letter-spacing: 0.034em;">显示全局变量</span></p></li></ul></section></section></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p><strong>② 条件断点（Conditional breakpoint）</strong></p><p>给断点添加条件，只有符合条件时，才会触发断点，条件断点的颜色是橙色。</p><p><br></p></section><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-imgfileid="100014135" data-ratio="0.5224111282843895" data-s="300,640" src="https://oscimg.oschina.net/oscnet/0b4c6239-c36d-463c-8821-b3c4b21aa82a.png" data-type="png" data-w="647" referrerpolicy="no-referrer"></p><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p><strong>③ 日志断点（logpoint）</strong></p><p>当代码执行到这里时，会在控制枱输出你的表达式，不会暂停代码执行，日志断点式粉红色。</p></section><p powered-by="xiumi.us"><br></p><p style="text-align: center;"><img class="rich_pages wxw-img js_insertlocalimg" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="302" data-imgfileid="100014134" data-ratio="0.5037707390648567" data-s="300,640" src="https://oscimg.oschina.net/oscnet/a82c513e-796f-42e8-b27a-f2e2c01d0b61.png" data-type="png" data-w="663" style="width: 578px;height: 291px;" referrerpolicy="no-referrer"></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>debugger 命令</strong></p><section powered-by="xiumi.us"><p><br></p><p>通过在代码中添加"debugger;"语句，当代码执行到该语句的时候就会自动断点，之后的操作和在 Sources 面板添加断点调试，唯一的区别在于调试完后需要删除该语句。</p><p><br></p><p>在开发中偶尔会遇到异步加载 html 片段（包含内嵌 JS 代码）的情况，而这部分 JS 代码在 Sources 树中无法找到，因此无法直接在开发工具中直接添加断点，那么如果想给异步加载的脚本添加断点，此时"debugger;"就发挥作用了。</p></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.2 反调试手段</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.2.1 禁用开发者工具</strong></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">监听是否打开开发者工具，若打开，则直接调用 JavaScript 的 window.close( ) 方法关闭网页</p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">① 监听 F12 按键、监听 Ctrl+Shift+I（Windows 系统）组合键、监听右键菜单，监听 Ctrl+s 禁止保存至本地，避免被 Overrides。</p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="xml"><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;<span class="code-snippet__name">script</span>&gt;</span></span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//监听 F12、Ctrl+Shift+i、Ctrl+s</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">document</span>.onkeydown = <span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params">event</span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">if</span> (event.key === <span class="code-snippet__string">"F12"</span>) {</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer">        } <span class="code-snippet__keyword">else</span><span class="code-snippet__keyword">if</span> (event.ctrlKey &amp;&amp; event.shiftKey &amp;&amp; event.key === <span class="code-snippet__string">"I"</span>) {<span class="code-snippet__comment">//此处 I 必须大写</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer">        } <span class="code-snippet__keyword">else</span><span class="code-snippet__keyword">if</span> (event.ctrlKey &amp;&amp; event.key === <span class="code-snippet__string">"s"</span>) {<span class="code-snippet__comment">//此处 s 必须小写</span></span></code><code><span class="code-snippet_outer">            event.preventDefault();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer">        }</span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer">    };</span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//监听右键菜单</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">document</span>.oncontextmenu = <span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params"></span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer">    };</span></code><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;/<span class="code-snippet__name">script</span>&gt;</span></span></code></pre></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">② 监听窗口大小变化</p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="xml"><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;<span class="code-snippet__name">script</span>&gt;</span></span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">var</span> h = <span class="code-snippet__built_in">window</span>.innerHeight, w = <span class="code-snippet__built_in">window</span>.innerWidth;</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.onresize = <span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params"></span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">if</span> (h !== <span class="code-snippet__built_in">window</span>.innerHeight || w !== <span class="code-snippet__built_in">window</span>.innerWidth) {</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer">        }</span></code><code><span class="code-snippet_outer">    }</span></code><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;/<span class="code-snippet__name">script</span>&gt;</span></span></code></pre></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">③ 利用 Console.log</p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="xml"><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;<span class="code-snippet__name">script</span>&gt;</span></span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//控制枱打开的时候回调方法</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__function"><span class="code-snippet__keyword">function</span><span class="code-snippet__title">consoleOpenCallback</span>(<span class="code-snippet__params"></span>)</span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">return</span><span class="code-snippet__string">""</span>;</span></code><code><span class="code-snippet_outer">    }</span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">//立即运行函数，用来检测控制枱是否打开</span></span></code><code><span class="code-snippet_outer">    !<span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params"></span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 创建一个对象</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">let</span> foo = <span class="code-snippet__regexp">/./</span>;</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 将其打印到控制枱上，实际上是一个指针</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">console</span>.log(foo);</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// 要在第一次打印完之后再重写 toString 方法</span></span></code><code><span class="code-snippet_outer">        foo.toString = consoleOpenCallback;</span></code><code><span class="code-snippet_outer">    }()</span></code><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;/<span class="code-snippet__name">script</span>&gt;</span></span></code></pre></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.2.2 无限 debugger 反调试</strong></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">① constructor</p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="xml"><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;<span class="code-snippet__name">script</span>&gt;</span></span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__function"><span class="code-snippet__keyword">function</span><span class="code-snippet__title">consoleOpenCallback</span>(<span class="code-snippet__params"></span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.close();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__built_in">window</span>.location = <span class="code-snippet__string">"about:blank"</span>;</span></code><code><span class="code-snippet_outer">    }</span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer">    setInterval(<span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params"></span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">const</span> before = <span class="code-snippet__keyword">new</span><span class="code-snippet__built_in">Date</span>();</span></code><code><span class="code-snippet_outer">        (<span class="code-snippet__function"><span class="code-snippet__keyword">function</span>(<span class="code-snippet__params"></span>)</span>{}).constructor(<span class="code-snippet__string">"debugger"</span>)();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// debugger;</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">const</span> after = <span class="code-snippet__keyword">new</span><span class="code-snippet__built_in">Date</span>();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">const</span> cost = after.getTime() - before.getTime();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">if</span> (cost &gt; <span class="code-snippet__number">100</span>) {</span></code><code><span class="code-snippet_outer">            consoleOpenCallback();</span></code><code><span class="code-snippet_outer">        }</span></code><code><span class="code-snippet_outer">    }, <span class="code-snippet__number">1000</span>);</span></code><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;/<span class="code-snippet__name">script</span>&gt;</span></span></code></pre></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">② Function</p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="xml"><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;<span class="code-snippet__name">script</span>&gt;</span></span></code><code><span class="code-snippet_outer">    setInterval(<span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params"></span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">const</span> before = <span class="code-snippet__keyword">new</span><span class="code-snippet__built_in">Date</span>();</span></code><code><span class="code-snippet_outer">        (<span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params">a</span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">return</span> (<span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params">a</span>) </span>{</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">return</span> (<span class="code-snippet__built_in">Function</span>(<span class="code-snippet__string">'Function(arguments[0]+"'</span> + a + <span class="code-snippet__string">'")()'</span>))</span></code><code><span class="code-snippet_outer">            })(a)</span></code><code><span class="code-snippet_outer">        })(<span class="code-snippet__string">'bugger'</span>)(<span class="code-snippet__string">'de'</span>);</span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// Function('debugger')();</span></span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer"><span class="code-snippet__comment">// debugger;</span></span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">const</span> after = <span class="code-snippet__keyword">new</span><span class="code-snippet__built_in">Date</span>();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">const</span> cost = after.getTime() - before.getTime();</span></code><code><span class="code-snippet_outer"><span class="code-snippet__keyword">if</span> (cost &gt; <span class="code-snippet__number">100</span>) {</span></code><code><span class="code-snippet_outer">            consoleOpenCallback2();</span></code><code><span class="code-snippet_outer">        }</span></code><code><span class="code-snippet_outer"></span></code><code><span class="code-snippet_outer">    }, <span class="code-snippet__number">1000</span>);</span></code><code><span class="code-snippet_outer"><span class="code-snippet__tag">&lt;/<span class="code-snippet__name">script</span>&gt;</span></span></code></pre></section><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 8px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;"><section style="padding-left: 8px;display: inline-block;width: 578px;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;align-self: flex-start;flex: 0 0 auto;"><section powered-by="xiumi.us" style="color: rgba(0, 0, 0, 0.5);font-size: 14px;text-align: justify;"><p>有大佬写了一个库专门用来判断是否打开了开发者工具，可供参考使用：<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fsindresorhus%2Fdevtools-detect" textvalue="点击查看>>" linktype="text" imgurl="" tab="outerlink" data-linktype="2">点击查看&gt;&gt;</a></p></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><span style="font-size: 16px;color: rgb(65, 95, 255);">3.3 反反调试手段</span></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.3.1 禁用开发者工具</strong></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">针对判断是否打开开发者工具的破解方式很简单，只需两步就可以搞定。</p><section powered-by="xiumi.us" style="margin-top: 10px;margin-bottom: 10px;text-align: center;"><section style="padding: 10px;display: inline-block;width: 578px;border-width: 1px;border-style: solid;border-color: rgb(160, 160, 160);"><section powered-by="xiumi.us" style="padding-right: 5px;padding-left: 5px;text-align: justify;line-height: 1.8;"><p>① 将开发者工具以独立窗口形式打开</p><p>② 打开开发者工具后再打开网址</p></section></section></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us"><strong>3.3.2 无限 debugger</strong></p><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">针对无限 debugger 反调试，有以下破解方法</p><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us"><p>① 直接使用 dubbger 指令的，可以在 Chrome 找到对应行（格式化后），右键行号，选择 Never pause here 即可。</p><p><br></p><p>② 使用了 constructor 构造 debugger 的，只需在 console 中输入以下代码后，点击 F8（Resume script execution）回复 js 代码执行即可（直接点击小的蓝色放行按钮即可）。</p></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer"><span class="code-snippet__built_in">Function</span>.prototype.constructor=<span class="code-snippet__function"><span class="code-snippet__keyword">function</span>(<span class="code-snippet__params"></span>)</span>{}</span></code></pre></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">③ 使用了 Function 构造 debugger 的，只需在 console 中输入以下代码。</p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer"><span class="code-snippet__built_in">Function</span> = <span class="code-snippet__function"><span class="code-snippet__keyword">function</span> (<span class="code-snippet__params"></span>) </span>{}</span></code></pre></section><p powered-by="xiumi.us"><br></p><section powered-by="xiumi.us" style="font-size: 16px;color: rgb(65, 95, 255);"><p>3.4 总结</p></section><p powered-by="xiumi.us"><br></p><p powered-by="xiumi.us">JavaScript 混淆加密使得代码更难以被反编译和分析，从而提高了代码的安全性，攻击者需要花费更多的时间和精力才能理解和分析代码，从而降低了攻击者入侵的成功率，但它并不能完全保护代码不被反编译和分析，如果攻击者有足够的时间和资源，他们仍然可以理解代码并找到其中的漏洞，道高一尺，魔高一丈，任何客户端加密混淆都会被破解，只要用心都能解决，我们能做的就是拖延被破解的时间，所以尽量避免在前端代码中嵌入敏感信息或业务逻辑。</p><p powered-by="xiumi.us"><span style="font-size: 14px;text-align: left;background-color: rgb(239, 239, 239);letter-spacing: 0.578px;"><br></span></p><section style="font-size: 15px;"><section style="margin-right: 0%;margin-bottom: 20px;margin-left: 0%;justify-content: flex-start;display: flex;flex-flow: row;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 40%;align-self: center;flex: 0 0 auto;"><section style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><section style="border-top: 1px dotted rgb(90, 98, 114);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section><section style="display: inline-block;vertical-align: middle;width: 20%;align-self: center;flex: 0 0 auto;"><section style="text-align: center;color: rgb(45, 66, 87);font-size: 11px;" powered-by="xiumi.us"><p>END</p></section></section><section style="display: inline-block;vertical-align: middle;width: 40%;align-self: center;flex: 0 0 auto;"><section style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><section style="border-top: 1px dotted rgb(90, 98, 114);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="margin-top: 10px;margin-bottom: 10px;text-align: left;" powered-by="xiumi.us"><section style="padding-left: 1em;padding-right: 1em;display: inline-block;text-align: center;"><span style="display: inline-block;padding: 0.3em 0.5em;border-radius: 0.5em;background-color: rgb(65, 94, 255);color: rgb(255, 255, 255);" title="" opera-tn-ra-cell="_$.pages:0.layers:0.comps:1.title1"><p>猜你喜欢</p></span></section><section style="border-width: 1px;border-style: solid;border-color: transparent;margin-top: -1em;padding: 20px 10px 10px;background-color: rgb(239, 239, 239);text-align: center;"><section style="font-size: 14px;text-align: left;" powered-by="xiumi.us"><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247497810%26idx%3D1%26sn%3Dfb5334c9637cdde4b5125f69ed32e89f%26chksm%3Debdb88c0dcac01d6faf82e4d44e8421616ec9128f46ea494339a599c346b13212b9f1d774886%26scene%3D21%23wechat_redirect" textvalue="Hudi 在 vivo 湖仓一体的落地实践" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">Hudi 在 vivo 湖仓一体的落地实践</a></p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247497721%26idx%3D1%26sn%3D7fc575754a006dc68bb08cf730971cde%26chksm%3Debdb876bdcac0e7d1b579c0e69b8d36854bb08457c231640dab9418ee75dd35788e90e0688bf%26scene%3D21%23wechat_redirect" textvalue="RocksDB 在 vivo 消息推送系统中的实践" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">RocksDB 在 vivo 消息推送系统中的实践</a></p></li><li><p><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzI4NjY4MTU5Nw%3D%3D%26mid%3D2247497638%26idx%3D1%26sn%3D7c773beb9f6062991ff11a068d55b132%26chksm%3Debdb8734dcac0e22e33f20a45472e8918c2b4bb7ccc47f138e3d1d37af76cd1fef986283edbd%26scene%3D21%23wechat_redirect" textvalue="线上 ES 集群参数配置引起的业务异常案例分析" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">线上 ES 集群参数配置引起的业务异常案例分析</a></p></li></ul></section></section></section></section><p powered-by="xiumi.us"><span style="font-size: 14px;text-align: left;background-color: rgb(239, 239, 239);letter-spacing: 0.578px;"></span></p><section class="mp_profile_iframe_wrp"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-pluginname="mpprofile" data-id="MzI4NjY4MTU5Nw==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/4g5IMGibSxt45QXJZicZ9gaNU2mRSlvqhQd94MJ7oQh4QFj1ibPV66xnUiaKoicSatwaGXepL5sBDSDLEckicX1ttibHg/0?wx_fmt=png" data-nickname="vivo 互联网技术" data-alias="vivoVMIC" data-signature="分享 vivo 互联网技术干货与沙龙活动，推荐最新行业动态与热门会议。" data-from="0" data-is_biz_ban="0"></mp-common-profile><span style="background-color: rgb(239, 239, 239);font-size: 14px;letter-spacing: 0.578px;text-align: left;"></span><span style="background-color: rgb(239, 239, 239);font-size: 14px;letter-spacing: 0.578px;text-align: left;"></span></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - vivo 互联网技术（vivoVMIC）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 25 Dec 2023 02:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/vivotech/blog/10322909</guid>
            <link>https://my.oschina.net/vivotech/blog/10322909</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Sam Altman 公布网友对 OpenAI 的新年愿望清单]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Sam Altman 今日在社交平台向网友<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsama%2Fstatus%2F1738639394800906381" target="_blank">征集</a></u>大家希望 OpenAI 在 2024 年实现的事项。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-a33e81dfe8ecf936111917e0da6407d3e23.png" referrerpolicy="no-referrer"></p></blockquote><p>从回复来看，「AGI」是呼声最高的请求，但 Sam Altman <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsama%2Fstatus%2F1738640093097963713" target="_blank">表示</a></u>，OpenAI 无法在 2024 年实现这一目标。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-2b8df6a16780c81b36c005e358f02452201.png" referrerpolicy="no-referrer"></p></blockquote><p>下面是 Sam Altman <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsama%2Fstatus%2F1738673279085457661" target="_blank">汇总</a></u>的网友愿望清单：</p><blockquote><p>AGI (a little patience please)<br> GPT-5<br> better voice mode<br> higher rate limits<br> better GPTs<br> better reasoning<br> control over degree of wokeness/behavior<br> video<br> personalization<br> better browsing<br> 'sign in with openai'<br> open source</p></blockquote><p>翻译如下：</p><blockquote><p>AGI（请耐心等待）<br> GPT-5<br> 更好的语音模式<br> 更高的速率限制<br> 更好的 GPTs<br> 更好的推理<br> 控制觉醒/行为的程度<br> 视频<br> 个性化<br> 更好的浏览<br> '使用 openai 登录'<br><strong>开源</strong></p></blockquote><p>不过网友似乎不太满意 Sam Altman 把「开源」放在最后，表示<strong>「开源可能是大多数人的首选愿望</strong>」。</p><p><img src="https://oscimg.oschina.net/oscnet/up-8fb26700d80d2984ab70cc7e89c07cdf8c2.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 03:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272394</guid>
            <link>https://www.oschina.net/news/272394</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Linus：圣诞夜我不看代码，明年再发布新版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Linus Torvalds 在内核邮件列表<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Fnetdev%2FCAHk-%253DwhceLbGZwuLnR0S3V_ajedDXj%253Ds86sm89m%252BVT2YrbG1NA%40mail.gmail.com%2F" target="_blank">宣布</a></u>，按照他们芬兰的习俗，圣诞夜是十分重要的一天，所以周日他会休息。因此他计划在圣诞前夕的 12 月 24 日发布 Linux 6.7-rc7（<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Fall%2F20231224010459.release-6.7-rc7%40kdist.linux.kernel.org%2F" target="_blank">已发布</a></u></em>），但不会在新年前夕的 12 月 31 日发布 Linux 6.7 的正式版，而是发布 <strong>6.7-rc8</strong>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-35e9f9e06f351f39fb1d3c9ef61e061b27d.png" referrerpolicy="no-referrer"></p><p>目前 Linux 6.7 的开发工作一切顺利，但因为年终假期 Linus 决定推迟一周到明年 1 月 7 日发布 Linux 6.7 正式版，然后在 1 月 8 日开启 Linux 6.8 合并窗口——避免在 1 月 1 日开启。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 02:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272392</guid>
            <link>https://www.oschina.net/news/272392</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun 1.0.19 版本更新：重要的性能优化与功能改进]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Bun 的最新版本 1.0.19 为 JavaScript 和 TypeScript 运行环境带来了一系列重要更新。这个版本在性能、兼容性和可用性方面进行了显著改进，解决了多个问题，并提高了整体的开发者体验。</p><h4>增强的 TypeScript 支持：<code>@types/bun</code></h4><p>Bun 1.0.19 中的一个突出更新是重新引入<code>@types/bun</code>，此前称为<code>bun-types</code>。这一变化极大地简化了 Bun 与 TypeScript 的整合，解决了先前实现中的一些问题。开发者不再需要为 Bun 特别配置<code>tsconfig.json</code>，而新包无缝重导出<code>@types/node</code>包，确保了兼容性和易用性。</p><h4>改进的加密包支持</h4><p>对于 JavaScript 生态系统的安全来说，Bun 1.0.19 现在完全支持<code>bcrypt</code>和<code>argon2</code>包，这是对 N-API 兼容性改进的重要一步。这一更新允许开发者在 Bun 环境中使用这些流行的加密包进行安全的密码哈希和验证，使 Bun 成为构建安全应用程序的更加多功能的平台。</p><h4>性能优化</h4><p>Bun 1.0.19 引入了几项性能增强。<code>setTimeout</code>和<code>setInterval</code>的实现在 Linux x64 系统上现在快了四倍，这要归功于一种新的计时器堆，它有效地管理计时器。对于严重依赖计时器操作的应用程序来说，这一改进至关重要，提供了显著更好的性能和资源利用。</p><p>此外，针对 Linux 系统上处理大量输入的<code>Bun.spawnSync</code>进行了优化，为具有大量输出的子进程提供了 50% 的性能提升。<code>Bun.peek()</code>函数也实现了惊人的 90 倍速度提升，而使用<code>expect(...).toEqual</code>比较<code>Map</code>实例现在快了 100 倍，这对于广泛依赖这些功能的应用程序来说，是一大益处。</p><h4>用户体验改进</h4><p>Bun 1.0.19 引入了更好的错误处理，特别是对于使用<code>await</code>在<code>async</code>函数外部这类常见错误。这次更新提供了更有信息量的错误消息，帮助开发者调试并提高代码质量。此版本还解决了<code>bun:test</code>中模块模拟的问题，通过直接使用模块指定符使其更直观。</p><h4>安装和安装后脚本</h4><p>新版本记录了安装后脚本的执行速度，帮助开发者在包安装期间识别性能瓶颈。此外，<code>bun install --verbose</code>现在将安装后脚本的输出实时流式传输，提供实时反馈，增强了安装包过程的透明度。</p><h4>Bug 修复和升级</h4><p>Bun 1.0.19 修复了一系列问题，包括与<code>--frozen-lockfile</code>标志相关的问题、TypeScript 解析器的边缘案例以及与环境变量相关的回归。此更新还带来了 SQLite 版本的升级（至 v3.44.2），确保内嵌的 SQLite 客户端保持最新和安全。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 24 Dec 2023 00:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272386</guid>
            <link>https://www.oschina.net/news/272386</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[苹果将大语言模型部署到设备本地]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>苹果研究团队在预印本平台 arxiv&nbsp;发表论文《LLM in a flash》，介绍了一项全新的闪存技术，让苹果可以在其内存有限的设备上部署大语言模型。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-5a88c9804ee5a73ff25ed65e648d4f3ed16.png" referrerpolicy="no-referrer"></p><p>论文地址：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fpdf%2F2312.11514.pdf" target="_blank">https://arxiv.org/pdf/2312.11514.pdf</a></u></em></p></blockquote><p>研究团队表示，他们通过<strong>将模型参数存储在闪存 (Flash Memory) 中</strong>——也就是储存应用和照片的地方，解决了有效运行大语言模型容量的挑战。与传统用于运行大语言模型的 RAM 相比，闪存在移动设备中容量要大得多。</p><p><img src="https://oscimg.oschina.net/oscnet/up-54d369ce15b54b862ab932f6ecec8c1634f.png" referrerpolicy="no-referrer"></p><p>论文指出，这项技术可以让 AI 模型的运行规模达到 iPhone 可用内存的两倍。在这项技术的加持之下，LLM 的推理速度在 Apple M1 Max CPU 上提高了 4-5 倍，在 GPU 上提高了 20-25 倍。</p><hr><p>延伸阅读</p><ul><li><a href="https://www.oschina.net/news/265689">苹果正在利用 LLM 彻底改造 Siri，将成为杀手级 AI 应用</a></li><li><a href="https://www.oschina.net/news/263067">苹果将在 Xcode 中原生集成 AI 编码助手 —— 类似 GitHub Copilot</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Dec 2023 03:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272282/apple-wants-ai-to-run-directly-on-its-hardware</guid>
            <link>https://www.oschina.net/news/272282/apple-wants-ai-to-run-directly-on-its-hardware</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国家大模型标准测试首批通过名单公布：含阿里通义千问、腾讯混元等]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在 12 月 22 日的全国信息技术标准化技术委员会人工智能分委会全体会议期间，国内首个官方「<strong>大模型标准符合性评测</strong>」结果公布。阿里云、百度、360、腾讯四家企业旗下的大模型产品首批通过评测，代表着其在通用性、智能性等维度均达到国家相关标准要求。</p><p>根据公开资料，上述四家企业拥有的大模型分别为通义千问、文心一言、360 智脑、混元大模型，其中通义千问是唯一的开源模型。</p><p><img height="1762" src="https://oscimg.oschina.net/oscnet/up-e743a508e455deb1027539e309a2c3518a9.png" width="1236" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-89e98f4ad9fa0022908903e2cf46bd3ca64.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a69057c841456cdd581eeff774ee42e9e4a.png" referrerpolicy="no-referrer"></p><p>据介绍，「大模型标准符合性评测」由中国电子技术标准化研究院发起，旨在建立中国大模型标准符合性名录，引领人工智能产业健康有序发展。该评测对外征集了学术界、产业界几十家头部单位意见，覆盖评估语言大模型通用性、智能性的 30 余项具体评测维度。 &nbsp;</p><p>阿里方面介绍称，通义千问是本次通过的首次大模型中唯一的开源模型。</p><p>腾讯方面介绍称，腾讯混元大模型符合《人工智能大规模与训练模型，第 2 部分：测评指标与方法》语言大模型的相关技术要求。该模型号称拥有超千亿参数规模、预训练语料超 2 万亿 tokens。 &nbsp;</p><p>同时，阿里云、腾讯云分别以技术牵头方、提案牵头方的身份启动《人工智能模型即服务（MaaS）功能要求》的讨论与编制。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Dec 2023 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272275</guid>
            <link>https://www.oschina.net/news/272275</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[思科将收购 Cilium 母公司]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">思科宣布有意收购 Cilium 母公司 Isovalent。Cilium 是一个用于容器网络领域的开源项目，主要是面向容器而使用，用于提供并透明地保护应用程序工作负载（如应用程序容器或进程）之间的网络连接和负载均衡。</span></p><p><span style="color:#000000">Cilium 项目诞生于 7 年前，在项目启动一年后，Dan Wendlandt 和 Thomas Graf 共同创立了 Isovalent 公司。2021 年，Isovalent 将 Cilium 捐献给了 CNCF；2023 年 10 月，Cilium 正式从 CNCF 毕业，成功加入了 Kubernetes、Prometheus 和 Envoy 的行列。</span></p><p><span style="color:#000000">「在过去的七年里，我们将所有的热情和心血投入到开源项目 Cilium、Tetragon、Hubble 和 eBPF 中。」</span></p><p><img height="272" src="https://oscimg.oschina.net/oscnet/up-8ff5a1004ae80000d95ee32423eccf8c408.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Isovalent 公告称，在与思科就潜在收购进行的初步谈判中，关于 Cilium、Tetragon 等开源项目的发展就已经非常明确。「从一开始就很明显，思科带着明确的愿景来到谈判桌，加大我们的产品和开源战略的力度，并对我们的开源项目做出坚定的承诺。开源已成为技术标准化的方式，云原生基础设施也不例外。」</span></p><p><span style="color:#000000">此外，他们还推出了&nbsp;<span style="background-color:#ffffff">Cilium 和 Tetragon 企业发行版 Isovalent Enterprise。并计划在</span></span><span style="background-color:#ffffff; color:#0a0b0f">加入思科后，继续开发和增强 Isovalent Enterprise。</span></p><p>「<span style="background-color:#ffffff; color:#0a0b0f">随着我们对思科的战略和计划了解得越来越多，我们对继续围绕 eBPF、Cilium 和我们的开源项目组建我们出色的团队，同时加快产品方面的发展，并通过客户喜爱的产品为客户带来卓越的云原生技术的共同愿景越来越兴奋。</span>」</p><p><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fisovalent.com%2Fblog%2Fpost%2Fcisco-acquires-isovalent%2F" target="_blank">查看官方公告</a>。</span></p><p><strong><span style="color:#000000">相关阅读：</span></strong></p><ul><li><a href="https://www.oschina.net/news/209999/isovalent-raises-40m-series-b" target="news">Cilium 母公司融资 4000 万美元，微软、Grafana 参与投资</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 07:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272178/cisco-acquires-isovalent</guid>
            <link>https://www.oschina.net/news/272178/cisco-acquires-isovalent</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国家新闻出版署发布《网络游戏管理办法（草案征求意见稿）》]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>12 月 22 日，国家新闻出版署发布《网络游戏管理办法（草案征求意见稿）》，意见截止日期 2024 年 1 月 22 日。</p><p><img src="https://oscimg.oschina.net/oscnet/up-5758922f6978b486100bc8b150513bf06df.png" referrerpolicy="no-referrer"></p><p><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.nppa.gov.cn%2Fxxfb%2Ftzgs%2F202312%2Ft20231221_823187.html" target="_blank">https://www.nppa.gov.cn/xxfb/tzgs/202312/t20231221_823187.html</a></em></u></p><p>《草案》规定：</p><p>第十八条【限制游戏过度使用和高额消费】<strong>网络游戏不得设置每日登录、首次充值、连续充值等诱导性奖励</strong>。网络游戏出版经营单位不得以炒作、拍卖等形式提供或纵容虚拟道具高价交易行为。所有网络游戏须设置用户充值限额，并在其服务规则中予以公示，对用户非理性消费行为，应进行弹窗警示提醒。<br> 第二十四条【游戏币交易规范】从事网络游戏币交易服务，应当遵守以下规定：</p><ul><li><p>（一）不得为未经审批的网络游戏提供交易服务；</p></li><li><p><strong>（二）应以实名制数字人民币钱包从事网络游戏币交易，不得向用户提供匿名数字人民币钱包交易服务；</strong></p></li><li><p>（三）应采取技术措施，对交易过程进行有效监管，对存在违法可疑行为的交易须及时报告有关部门，避免为网络赌博、网络诈骗等违法行为提供便利；</p></li><li><p>（四）接到利害关系人、政府部门、司法机关通知后，应当协助核实交易行为的合法性，经核实属于违法交易的，应当立即采取措施终止交易服务并保存有关记录；</p></li><li><p>（五）保存用户间的交易记录和账务记录等信息不得少於单次交易发生之日起的 2 年。</p></li></ul><p>第二十七条【随机抽取】网络游戏出版经营单位在提供随机抽取服务时，<strong>应对抽取次数、概率作出合理设置，不得诱导网络游戏用户过度消费</strong>。同时应为用户提供虚拟道具兑换、使用网络游戏币直接购买等其他获得相同性能虚拟道具和增值服务的方式。<br> 第二十八条【禁止为违法游戏提供支付服务】任何单位不得为非法网络游戏和违法网络游戏经营活动提供支付服务...<br> 第二十九条【宣传推广规范】为网络游戏提供宣传推广服务的单位，应当查验服务对象的有关证明文件，核对广告内容，不得发布内容不符或者证明文件不全的网络游戏广告。<strong>网络游戏直播不得出现高额打赏</strong>。网络游戏的宣传推广不得含有本办法第十六条所列内容和其他法律法规禁止内容。</p><hr><p>网络游戏管理办法（草案征求意见稿）》一出，引起游戏行业「巨震」，网游大厂港股股价集体跳水：网易股价跌 8%，腾讯控股跌 5.7%，哔哩哔哩港股跌 4%。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2975127d471028eb9e56b06917e98348c8b.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-5f3e93454e5f5bf3ccb95188037f39ec1b9.png" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-900d0378f4b17b5bd51e4383722c78941b6.png" referrerpolicy="no-referrer"></p><p>午后，港股游戏股跌幅进一步扩大，腾讯跌幅一度超过 15%、网易跌幅一度逼近 30%，创下最大盘中跌幅纪录。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 06:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272162</guid>
            <link>https://www.oschina.net/news/272162</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Sam Altman 的 2023 年度个人总结]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Sam Altman 写了他的 2023 年度总结，题目是「<strong>我希望有人告诉我的那些事情</strong>」，总共 17 条。</p><hr><p>1、事业的开启，源于乐观、执着、自信、根本动力和人际关系；</p><p>2、事业的完成，来自团队的凝聚力、冷静与紧迫的结合、超出想象的承诺。尽量不要在意他人的短期想法，时间越久，就越容易；</p><p>3、团队需要的是做真正重要的艰难任务，而不是无关紧要的简单任务，具有突破性的想法可以激励同伴；</p><p>4、但也要小心设计自己的激励方式，它有超能力的一面；</p><p>5、把资源集中在少数高回报的赌注上，这是知易行难的决定，你可以砍掉比你预想的还要更多的工作；</p><p>6、沟通务必清晰、简明；</p><p>7、保持反对官僚主义、反对废话连篇，更发动让身边的人一起反对，不要让组织成为妨碍效率的祸首；</p><p>8、结果永远是最重要的，在结果很糟糕时，别用过程很优秀来作借口；</p><p>9、在招聘上投入更多，把机会留给潜力大、进步快的人，除了聪明这个条件之外，还要看他们实际工作的表现；</p><p>10、明星员工的价值往往比他们看上去的更大，但评估时也要考虑到他们对于业务效能的净收益；</p><p>11、快速迭代至关重要，为此可以容忍犯错，以年为单位制定计划，以周为单位安排执行；</p><p>12、切勿对抗商业世界的物理法则；</p><p>13、灵感易逝，生命苦短，不作为是一种容易被忽视的风险；</p><p>14、规模的扩大能够带来新的机会；</p><p>15、复利有如神奇的魔法，而企业规模的扩大，就能实现复利优势；</p><p>16、赶紧站起来，继续前行；</p><p>17、与优秀的人共事是生命里最美好的体验，没有之一。</p><hr><p><img src="https://oscimg.oschina.net/oscnet/up-ebab408ef957a809cfe0a74eeb7c4967d01.png" referrerpolicy="no-referrer"></p><p>来源：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.samaltman.com%2Fwhat-i-wish-someone-had-told-me" target="_blank">https://blog.samaltman.com/</a></u><br> 翻译转载自：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Ffoxshuo%2Fstatus%2F1738049835209773170" target="_blank">https://twitter.com/foxshuo/</a></u></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 04:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272137/samaltman-what-i-wish-someone-had-told-me</guid>
            <link>https://www.oschina.net/news/272137/samaltman-what-i-wish-someone-had-told-me</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌公布 2023 年最受欢迎的 Chrome 扩展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>谷歌公布 <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Fproducts%2Fchrome%2Ffavorite-google-chrome-extensions-2023%2F" target="_blank">2023 年最受欢迎的 Chrome 扩展</a></u>。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-523b5ea188d4c957efa95f604f000fa14a5.png" referrerpolicy="no-referrer"></p><p>总共 12 款，涵盖了从提升工作效率到游戏娱乐的多个方面，旨在增强用户的浏览体验和生产力。</p><p><img src="https://oscimg.oschina.net/oscnet/up-f1573e799bc671336423fbe5cc8ad5f5711.png" referrerpolicy="no-referrer"></p><hr><ol><li><p><strong>Scribe</strong>：</p><ul><li>功能：使用 AI 记录工作流程并创建逐步指南。</li><li>特点：自动记录和生成详细的工作流程文档，方便培训和指导同事。</li><li>下载链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2Fscribe-ai-documentation-s%2Fokfkdaglfjjjfefdcppliegebpoegaii" target="_blank">https://chromewebstore.google.com/detail/scribe-ai-documentation-s/okfkdaglfjjjfefdcppliegebpoegaii</a></li></ul></li><li><p><strong>DeepL Translate</strong>：</p><ul><li>功能：即时翻译网页。</li><li>特点：提供高质量的翻译服务，支持多种语言，帮助用户克服语言障碍。</li><li>下载链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2Fdeepl-translate-reading-w%2Fcofdbpoegempjloogbagkncekinflcnj" target="_blank">https://chromewebstore.google.com/detail/deepl-translate-reading-w/cofdbpoegempjloogbagkncekinflcnj</a></li></ul></li><li><p><strong>QuillBot</strong>：</p><ul><li>功能：快速撰写和回复电子邮件。</li><li>特点：使用 AI 辅助写作和改写工具，提高写作效率和质量。</li><li>下载链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2Fquillbot-ai-writing-and-g%2Fiidnbdjijdkbmajdffnidomddglmieko" target="_blank">https://chromewebstore.google.com/detail/quillbot-ai-writing-and-g/iidnbdjijdkbmajdffnidomddglmieko</a></li></ul></li><li><p><strong>Sider</strong>：</p><ul><li>功能：浏览器边栏，允许使用 ChatGPT、Claude 和 Bard 等生成 AI 工具。</li><li>特点：无需打开新标签页即可访问和使用多种 AI 工具，提高工作效率。</li><li>下载链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2Fsider-chatgpt-sidebar-%2B-v%2Fdifoiogjjojoaoomphldepapgpbgkhkb" target="_blank">https://chromewebstore.google.com/detail/sider-chatgpt-sidebar-+-v/difoiogjjojoaoomphldepapgpbgkhkb</a></li></ul></li><li><p><strong>Teal</strong>：</p><ul><li>功能：用于从流行的求职板收藏工作，跟踪和管理所有求职申请。</li><li>特点：集中管理求职进程，提供清晰的申请概览和进度跟踪。</li><li>下载链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2Fteal-free-job-search-cont%2Fopafjjlpbiaicbbgifbejoochmmeikep" target="_blank">https://chromewebstore.google.com/detail/teal-free-job-search-cont/opafjjlpbiaicbbgifbejoochmmeikep</a></li></ul></li><li><p><strong>Transkriptor</strong>：</p><ul><li>功能：自动将会议从音频转录为文本。</li><li>特点：支持超过 100 种语言，适用于国际会议和多语言环境。</li><li>下载链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2Ftranskriptor-transcribe-a%2Fpbajmiiebklfjhkeahpgjdlgclelihjh" target="_blank">https://chromewebstore.google.com/detail/transkriptor-transcribe-a/pbajmiiebklfjhkeahpgjdlgclelihjh</a></li></ul></li><li><p><strong>Bonjourr</strong>：</p><ul><li>功能：保持浏览器主页简洁、美观且无干扰。</li><li>特点：提供优雅且定制化的新标签页体验，减少分心。</li><li>下载链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2Fbonjourr-%25C2%25B7-minimalist-sta%2Fdlnejlppicbjfcfcedcflplfjajinajd" target="_blank">https://chromewebstore.google.com/detail/bonjourr-·-minimalist-sta/dlnejlppicbjfcfcedcflplfjajinajd</a></li></ul></li><li><p><strong>Speechify</strong>：</p><ul><li>功能：文本到语音扩展，朗读文章、电子邮件和 PDF。</li><li>特点：使用自然声音和口音，包括名人声音，提高阅读可访问性。</li><li>下载链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2Fspeechify-text-to-speech%2Fljflmlehinmoeknoonhibbjpldiijjmm" target="_blank">https://chromewebstore.google.com/detail/speechify-text-to-speech/ljflmlehinmoeknoonhibbjpldiijjmm</a></li></ul></li><li><p><strong>Equalizer</strong>：</p><ul><li>功能：提供更精细的音频控制，改善在线内容的声音质量。</li><li>特点：适用于各种音频和视频内容，提供个性化的听觉体验。</li><li>下载链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2Fequalizer-for-chrome-brow%2Fabikfbojmghmfjdjlbagiamkinbmbaic" target="_blank">https://chromewebstore.google.com/detail/equalizer-for-chrome-brow/abikfbojmghmfjdjlbagiamkinbmbaic</a></li></ul></li><li><p><strong>Boxel 3D</strong>：</p><ul><li>功能：平台游戏，挑战用户创建自己的关卡。</li><li>特点：提供创意和娱乐的休息方式，激发创造力。</li><li>下载链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2Fboxel-3d%2Fmjjgmlmpeaikcaajghilhnioimmaibon" target="_blank">https://chromewebstore.google.com/detail/boxel-3d/mjjgmlmpeaikcaajghilhnioimmaibon</a></li></ul></li><li><p><strong>BTRoblox</strong>：</p><ul><li>功能：增强 Roblox 游戏网站的功能。</li><li>特点：提供更丰富的 Roblox 体验，包括改进的用户界面和额外功能。</li><li>下载链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2Fbtroblox-making-roblox-be%2Fhbkpclpemjeibhioopcebchdmohaieln" target="_blank">https://chromewebstore.google.com/detail/btroblox-making-roblox-be/hbkpclpemjeibhioopcebchdmohaieln</a></li></ul></li><li><p><strong>Coupert</strong>：</p><ul><li>功能：找到网上最好的促销代码，并在结账时自动应用。</li><li>特点：节省时间和金钱，自动寻找和应用最佳折扣。</li><li>下载链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fdetail%2Fcoupert-automatic-coupon%2Fmfidniedemcgceagapgdekdbmanojomk" target="_blank">https://chromewebstore.google.com/detail/coupert-automatic-coupon/mfidniedemcgceagapgdekdbmanojomk</a></li></ul></li></ol><p><strong>完整榜单：<u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchromewebstore.google.com%2Fcollection%2F2023_favorites" target="_blank">https://chromewebstore.google.com/collection/2023_favorites</a></em></u></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Dec 2023 03:43:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272133/favorite-google-chrome-extensions-2023</guid>
            <link>https://www.oschina.net/news/272133/favorite-google-chrome-extensions-2023</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
