<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 06 Oct 2023 22:48:40 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[1/8 的开源下载包含已知漏洞，开源项目的积极维护减少]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Sonatype&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.sonatype.com%2Fintroducing-our-9th-annual-state-of-the-software-supply-chain-report" target="_blank">发布</a>了最新的一份</span>《软件供应链状况》报告，深入探讨了如何在充满选择的世界中定义更好的软件，并探讨人工智能 (AI) 对软件开发的深远影响；还研究了开源供应、需求和安全之间错综复杂的相互作用。</p><p>报告跟踪了 Java (Maven)、JavaScript (npm)、Python (PyPI)、.NET (NuGet Gallery) 四大开源生态系统的开源应用增长情况。2022 年至 2023 年间，可用开源项目的数量平均增长了 29%。2023 年，开源项目平均发布了 15 个可供使用的版本，不同开源注册中心的特定生态系统平均有 10 到 22 个版本。这意味着每个月都会发布 1-2 个新版本，在观察到的生态系统中总共发布了 6000 万个新版本。</p><p><img height="293" src="https://oscimg.oschina.net/oscnet/up-a3af85a689f0adbcfb8236b4dac77b7f235.png" width="500" referrerpolicy="no-referrer"></p><p>每个受检测的生态系统都表现出一致的项目增长率，平均同比增长率高达 29%。</p><p><img height="295" src="https://oscimg.oschina.net/oscnet/up-9ab7acc5786b753b241922eeaa519953a3d.png" width="500" referrerpolicy="no-referrer"></p><p>但随着开源组件供应量的持续增长，其需求却未能与之同步。在过去两年中，下载量的增长率逐渐下降。2023 年的平均增长率为 33%，与 2021 年 73% 的增长率相比大幅下降。</p><p><span style="color:#000000">与此同时，开源软件安全问题没有放缓的迹象。截至 2023 年 9 月，研究团队共发现了&nbsp;245,032 个恶意软件包，是往年总和的 2 倍。八分之一的开源下载存在已知风险，且仍有 23% 的 Log4j 下载存在严重漏洞。</span></p><p><img height="304" src="https://oscimg.oschina.net/oscnet/up-b8b946760f70163d67ebbf53b91a14930fd.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">开源项目的主动维护也变得越来越少。研究表明，去年有近五分之一（18.6%）的项目停止维护，影响了 Java 和 JavaScript 生态系统。<span style="background-color:#ffffff">只有 11% 的开源项目实际上得到了积极维护。</span>尽管存在这些缺陷，但 Sonatype 仍然表示，近 96% 存在已知漏洞的组件下载可以通过选择无漏洞版本来避免。</span></p><p><span style="color:#000000">就软件开发中的人工智能而言，97% 的受访 DevOps 和 SecOps 领导者表示，他们目前在工作流程中某种程度上使用了人工智能，大多数人每天使用两个或更多工具。</span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>去年，企业环境中 AI 和 ML 组件的采用率增加了 135%。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">研究还发现，企业自认为的安全程度与实际情况之间存在脱节。67% 的公司表示，他们确信自己的系统中没有来自漏洞库的代码，但今年有 10% 的公司因漏洞组件而遭遇安全漏洞。39% 的公司可以在</span><span style="background-color:#ffffff">&nbsp;1 到 7 天的时间内发现漏洞，29% 的公司需要一周以上的时间，28% 的公司只需要不到一天的时间。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.sonatype.com%2Fstate-of-the-software-supply-chain%2Fintroduction" target="_blank">查看完整报告</a>。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 05 Oct 2023 04:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260454/9th-annual-state-of-the-software-supply-chain-report</guid>
            <link>https://www.oschina.net/news/260454/9th-annual-state-of-the-software-supply-chain-report</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[AgentVerse —— 多 LLM 环境模拟框架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>AgentVerse 提供了一个多功能框架，可简化为大型语言模型（LLM）创建定制多代理环境的过程。框架旨在以最小的投入促进快速开发和定制，从而使研究人员能够专注于他们的研究，而不是被实施细节所困扰。</p><p><img alt="" height="333" src="https://static.oschina.net/uploads/space/2023/0915/161848_BpYH_4252687.png" width="500" referrerpolicy="no-referrer"></p><h4 style="text-align:start"><strong><span><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>特点</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li><p><span><span><strong>高效的环境构建：</strong>我们的框架提供了一系列基本构建块，可以轻松创建多代理环境。只需要配置文件中的几行，就可以轻松构建 LLM 聊天室等基本环境。此过程需要为 LLM 士定义环境设置和提示，使研究人员能够专注于实验和分析。</span></span></p></li><li><p><span><span><strong>可定制组件</strong>：AgentVerse 通过将多代理环境划分为五个功能模块并定义各自的接口来简化多代理环境。对于使用 AgentVerse 提供的基础模块无法直接构建的复杂环境，你可以自定义这五个功能模块中的一个或多个接口，根据你的需求高效地创建你自己的多 Agent 环境。</span></span></p></li><li><p><span><span><strong>工具（插件）利用</strong>：AgentVerse 通过工具支持多代理环境。目前，AgentVerse 支持<a href="https://github.com/OpenBMB/BMTools">BMTools</a>中提供的工具。</span></span></p></li></ul><p><img height="287" src="https://static.oschina.net/uploads/space/2023/0915/161814_aa6e_4252687.png" width="500" referrerpolicy="no-referrer"></p></div>
                                                                ]]>
            </description>
            <pubDate>Thu, 05 Oct 2023 03:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/agentverse</guid>
            <link>https://www.oschina.net/p/agentverse</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | Rocky Linux 系统安全加固工具 narsil]]>
            </title>
            <description>
                <![CDATA[<p><a href="https://gitee.com/seatonjiang/narsil/blob/main/README.md">English</a> | 简体中文</p><p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%23gh-light-mode-only"><img src="https://gitee.com/seatonjiang/narsil/raw/main/.github/narsil-light.png#gh-light-mode-only" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%23gh-dark-mode-only"><img src="https://gitee.com/seatonjiang/narsil/raw/main/.github/narsil-dark.png#gh-dark-mode-only" referrerpolicy="no-referrer"></a></p><p align="center"><img src="https://img.shields.io/static/v1?style=flat-square&amp;message=Rocky%20Linux&amp;color=15B076&amp;logo=rockylinux&amp;logoColor=FFFFFF&amp;label=" referrerpolicy="no-referrer"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%2Fissues"><img src="https://img.shields.io/github/issues/seatonjiang/narsil?style=flat-square&amp;color=blue" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%2Fpulls"><img src="https://img.shields.io/github/issues-pr/seatonjiang/narsil?style=flat-square&amp;color=brightgreen" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%2Fblob%2Fmain%2FLICENSE"><img src="https://img.shields.io/github/license/seatonjiang/narsil?&amp;style=flat-square" referrerpolicy="no-referrer"></a></p><p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%2Fissues">报告问题</a>
    ·
    <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%2Fissues">功能需求</a></p><p align="center">Rocky Linux 的系统安全加固工具</p><h2><a id="user-content--工具截图" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E5%B7%A5%E5%85%B7%E6%88%AA%E5%9B%BE"></a>💻 工具截图</h2><h3><a id="user-content-脚本执行" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C"></a>脚本执行</h3><p align="center"><img src="https://gitee.com/seatonjiang/narsil/raw/main/.github/script-execution.png" referrerpolicy="no-referrer"></p><h3><a id="user-content-登录信息" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E7%99%BB%E5%BD%95%E4%BF%A1%E6%81%AF"></a>登录信息</h3><p align="center"><img src="https://gitee.com/seatonjiang/narsil/raw/main/.github/login-information.png" referrerpolicy="no-referrer"></p><h3><a id="user-content-挂载硬盘" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E6%8C%82%E8%BD%BD%E7%A1%AC%E7%9B%98"></a>挂载硬盘</h3><p align="center"><img src="https://gitee.com/seatonjiang/narsil/raw/main/.github/mount-disk.png" referrerpolicy="no-referrer"></p><h2><a id="user-content--工具特性" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E5%B7%A5%E5%85%B7%E7%89%B9%E6%80%A7"></a>✨ 工具特性</h2><ul><li>限制密码使用期限为 30 天</li><li>密码过期 30 天后，该账户将被禁用</li><li>设置两次修改密码的时间间隔为 1 天</li><li>在密码过期前 7 天将发出警告</li><li>将系统默认加密算法设置为 SHA512</li><li>将会话超时策略设置为 180 秒</li><li>为新建的用户创建并加入一个同名的组</li><li>将新建用户的 home 目录权限设置为 0750</li><li>将存量用户的 home 目录权限设置为 0750</li><li>强化 OpenSSH 配置（有些配置需要手动配置）</li><li>禁止没有 home 目录的用户登录</li><li>禁止新建的用户使用 SHELL 登录</li><li>禁止上传和用户信息的功能</li><li>禁止删除用户时同步删除该用户的组</li></ul><p>还有很多特性没有被列举出来，可以参考 <code>scripts</code> 目录下的文件了解更多信息。</p><h2><a id="user-content--使用说明" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E"></a>🚀 使用说明</h2><h3><a id="user-content-第一步克隆仓库" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E7%AC%AC%E4%B8%80%E6%AD%A5%E5%85%8B%E9%9A%86%E4%BB%93%E5%BA%93"></a>第一步：克隆仓库</h3><p>确保服务器安装了 Git，否则需要先用 <code>sudo dnf install -y git</code> 命令安装软件：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">git clone https://github.com/seatonjiang/narsil.git</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>如果因为网络问题无法连接，可以使用 Gitee 镜像仓库，但是镜像仓库会有 <code>30</code> 分钟的延迟：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">git clone https://gitee.com/seatonjiang/narsil.git</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-第二步编辑配置" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E7%AC%AC%E4%BA%8C%E6%AD%A5%E7%BC%96%E8%BE%91%E9%85%8D%E7%BD%AE"></a>第二步：编辑配置</h3><p>进入项目文件夹：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">cd </span>narsil</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>核对配置文件中的配置信息（配置文件说明在下文）：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">vi narsil.conf</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-第三步运行脚本" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E7%AC%AC%E4%B8%89%E6%AD%A5%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC"></a>第三步：运行脚本</h3><p>如果是 root 账号，可以直接运行，如果是普通账号，需要使用 <code>sudo</code> 运行，而且必须用 <code>bash</code> 运行该脚本：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content--配置文件" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6"></a>📝 配置文件</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c"># 每一项操作完成后进行验证</span></span><span id="LC2" class="line"><span class="py">VERIFY</span><span class="p">=</span><span class="s">'Y'</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="c"># 云服务器使用 Metadata 覆盖默认配置</span></span><span id="LC5" class="line"><span class="py">METADATA</span><span class="p">=</span><span class="s">'Y'</span></span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="c"># 在 banner 中添加生产环境的提示</span></span><span id="LC8" class="line"><span class="py">PROD_TIPS</span><span class="p">=</span><span class="s">'Y'</span></span><span id="LC9" class="line"></span><span id="LC10" class="line"><span class="c"># SSH 端口配置</span></span><span id="LC11" class="line"><span class="py">SSH_PORT</span><span class="p">=</span><span class="s">'22'</span></span><span id="LC12" class="line"></span><span id="LC13" class="line"><span class="c"># 时区配置</span></span><span id="LC14" class="line"><span class="py">TIME_ZONE</span><span class="p">=</span><span class="s">'Asia/Shanghai'</span></span><span id="LC15" class="line"></span><span id="LC16" class="line"><span class="c"># 主机名称配置（当 METADATA 为 Y 时会自动拉取元数据）</span></span><span id="LC17" class="line"><span class="py">HOSTNAME</span><span class="p">=</span><span class="s">'rockylinux'</span></span><span id="LC18" class="line"></span><span id="LC19" class="line"><span class="c"># DNS 服务器配置（当 METADATA 为 Y 时会自动拉取元数据）</span></span><span id="LC20" class="line"><span class="py">DNS_SERVER</span><span class="p">=</span><span class="s">'119.29.29.29 119.28.28.28'</span></span><span id="LC21" class="line"></span><span id="LC22" class="line"><span class="c"># NTP 服务器配置（当 METADATA 为 Y 时会自动拉取元数据）</span></span><span id="LC23" class="line"><span class="py">NTP_SERVER</span><span class="p">=</span><span class="s">'ntp.tencent.com'</span></span><span id="LC24" class="line"></span><span id="LC25" class="line"><span class="c"># Docker 配置</span></span><span id="LC26" class="line"><span class="py">DOCKER_CE_REPO</span><span class="p">=</span><span class="s">'http://mirrors.tencent.com/docker-ce/linux/centos/docker-ce.repo'</span></span><span id="LC27" class="line"><span class="py">DOCKER_CE_MIRROR</span><span class="p">=</span><span class="s">'mirrors.tencent.com'</span></span><span id="LC28" class="line"><span class="py">DOCKER_HUB_MIRRORS</span><span class="p">=</span><span class="s">'https://hub-mirror.c.163.com'</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content--独立功能" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E7%8B%AC%E7%AB%8B%E5%8A%9F%E8%83%BD"></a>🔨 独立功能</h2><p>Narsil 中包含了一些独立的功能，这些功能并不在自动执行的脚本中，需要使用参数单独使用，可以使用 <code>sudo bash narsil.sh -h</code> 命令查看所有独立功能。</p><h3><a id="user-content-清理垃圾" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E6%B8%85%E7%90%86%E5%9E%83%E5%9C%BE"></a>清理垃圾</h3><p>清理所有的系统日志文件。</p><blockquote><p>某些云服务商提供的镜像由于制作的过程不规范，导致打包了一些垃圾文件到镜像中，建议在初始化系统之前先进行清理。</p></blockquote><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-c</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-安装-docker" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E5%AE%89%E8%A3%85-docker"></a>安装 Docker</h3><p>安装 Docker 服务并设置镜像加速（腾讯云会自动使用内网加速地址）。</p><blockquote><p>安装完成后，可以使用 <code>docker run hello-world</code> 测试 Docker 的相关功能是否正常。</p></blockquote><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-d</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-挂载硬盘-1" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E6%8C%82%E8%BD%BD%E7%A1%AC%E7%9B%98-1"></a>挂载硬盘</h3><p>交互式挂载数据盘（腾讯云会使用弹性云硬盘的软链接方式挂载），数据无价，操作过程切记小心！</p><blockquote><p>如果所选的硬盘已经被挂载，会提示解除挂载及格式化操作。</p></blockquote><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-f</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-修改主机名称" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D%E7%A7%B0"></a>修改主机名称</h3><p>配置文件的参数如果没有变化，那么将优先获取元数据。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-h</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-修改端口" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E4%BF%AE%E6%94%B9%E7%AB%AF%E5%8F%A3"></a>修改端口</h3><p>交互式修改 SSH 端口。</p><blockquote><p>端口范围需要在 10000 到 65535 之间。</p></blockquote><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-p</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-卸载监控" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E5%8D%B8%E8%BD%BD%E7%9B%91%E6%8E%A7"></a>卸载监控</h3><p>卸载云服务商安装到服务器中的各种监控组件。</p><blockquote><p>目前已经支持腾讯云监控组件的卸载。</p></blockquote><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-r</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-添加交换空间" class="anchor" href="https://gitee.com/seatonjiang/narsil#%E6%B7%BB%E5%8A%A0%E4%BA%A4%E6%8D%A2%E7%A9%BA%E9%97%B4"></a>添加交换空间</h3><p>如果物理内存太小，建议添加交换空间。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nb">sudo </span>bash narsil.sh <span class="nt">-s</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content--目录结构" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84"></a>📂 目录结构</h2><p>下面是整个项目的文件夹结构，<code>config</code> 及 <code>scripts</code> 文件夹中的文件省略显示。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">narsil</span><span id="LC2" class="line">├── narsil.sh</span><span id="LC3" class="line">├── narsil.conf</span><span id="LC4" class="line">├── config</span><span id="LC5" class="line">│   └── <span class="o">(</span>some config files<span class="o">)</span></span><span id="LC6" class="line">└── scripts</span><span id="LC7" class="line">    └── <span class="o">(</span>some script files<span class="o">)</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content--参与共建" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E5%8F%82%E4%B8%8E%E5%85%B1%E5%BB%BA"></a>🤝 参与共建</h2><p>我们欢迎所有的贡献，你可以将任何想法作为 Pull Requests 或 Issues 提交，顺颂商祺 :)</p><h2><a id="user-content--开源许可" class="anchor" href="https://gitee.com/seatonjiang/narsil#-%E5%BC%80%E6%BA%90%E8%AE%B8%E5%8F%AF"></a>📃 开源许可</h2><p>项目基于 GNU 通用公共许可证 v3.0 发布，详细说明请参阅 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fseatonjiang%2Fnarsil%2Fblob%2Fmain%2FLICENSE">LICENCE</a> 文件。</p>]]>
            </description>
            <pubDate>Thu, 05 Oct 2023 03:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/seatonjiang/narsil</guid>
            <link>https://gitee.com/seatonjiang/narsil</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 使用 FHE 实现加密大语言模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section data-tool="mdnice 编辑器" data-website="https://www.mdnice.com" style="font-size: 16px;color: black;padding-right: 10px;padding-left: 10px;line-height: 1.6;letter-spacing: 0px;word-break: break-word;text-align: left;font-family: Roboto, Oxygen, Ubuntu, Cantarell, PingFangSC-regular, PingFangTC-regular, &quot;Open Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif;" data-mpa-powered-by="yiban.io"><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">近来，大语言模型 (LLM) 已被证明是提高编程、内容生成、文本分析、网络搜索及远程学习等诸多领域生产力的可靠工具。</p><span id="OSC_h2_1"></span><h2 data-tool="mdnice 编辑器" style="font-weight: bold;font-size: 22px;line-height: 1.2em;margin-top: 2em;margin-bottom: 35px;color: rgb(255, 157, 0);"><span style="font-size: 18px;color: rgb(255, 157, 11);padding-left: 10px;border-left: 5px solid rgb(255, 157, 11);visibility: visible;display: none;"></span><span style="color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);padding: 2px 13px;margin-right: 3px;height: 50%;font-size: 18px;">大语言模型对用户隐私的影响</span><span style="font-size: 18px;color: rgb(255, 157, 11);display: inline-block;padding-left: 10px;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">尽管 LLM 很有吸引力，但如何保护好 <code style="font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);padding: 3px;margin: 3px;">输入给这些模型的用户查询中的隐私</code> 这一问题仍然存在。一方面，我们想充分利用 LLM 的力量，但另一方面，存在向 LLM 服务提供商泄露敏感信息的风险。在某些领域，例如医疗保健、金融或法律，这种隐私风险甚至有一票否决权。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">一种备选解决方案是本地化部署，LLM 所有者将其模型部署在客户的计算机上。然而，这不是最佳解决方案，因为构建 LLM 可能需要花费数百万美元 (GPT3 为 460 万美元)，而本地部署有泄露模型知识产权 (intellectual property, IP) 的风险。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">Zama 相信有两全其美之法: 我们的目标是同时保护用户的隐私和模型的 IP。通过本文，你将了解如何利用 Hugging Face transformers 库并让这些模型的某些部分在加密数据上运行。完整代码见，此处。</p><span id="OSC_h2_2"></span><h2 data-tool="mdnice 编辑器" style="font-weight: bold;font-size: 22px;line-height: 1.2em;margin-top: 2em;margin-bottom: 35px;color: rgb(255, 157, 0);"><span style="font-size: 18px;color: rgb(255, 157, 11);padding-left: 10px;border-left: 5px solid rgb(255, 157, 11);visibility: visible;display: none;"></span><span style="color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);padding: 2px 13px;margin-right: 3px;height: 50%;font-size: 18px;">全同态加密 (Fully Homomorphic Encryption，FHE) 可以解决 LLM 隐私挑战</span><span style="font-size: 18px;color: rgb(255, 157, 11);display: inline-block;padding-left: 10px;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">针对 LLM 部署的隐私挑战，Zama 的解决方案是使用全同态加密 (FHE)，在加密数据上执行函数。这种做法可以实现两难自解，既可以保护模型所有者知识产权，同时又能维护用户的数据隐私。我们的演示表明，在 FHE 中实现的 LLM 模型保持了原始模型的预测质量。为此，我们需要调整 Hugging Face transformers 库，中的 GPT2 实现，使用 Concrete-Python 对推理部分进行改造，这样就可以将 Python 函数转换为其 FHE 等效函数。</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="1.2027809965237544" data-type="png" data-w="863" style="margin-right: auto;margin-left: auto;width: 100%;border-radius: 5px;display: block;margin-bottom: 15px;height: auto !important;" src="https://oscimg.oschina.net/oscnet/338741ab-aa57-4681-b21f-eeeabcd24fce.png" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: #dda52d;font-size: 14px;">
     图 1. GPT2 架构; 图源: https://en.wikipedia.org/wiki/GPT-2 
   </figcaption></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">图 1 展示了由多个 transformer block 堆叠而成的 GPT2 架构: 其中最主要的是多头注意力 (multi-head attention，MHA) 层。每个 MHA 层使用模型权重来对输入进行投影，然后各自计算注意力，并将注意力的输出重新投影到新的张量中。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">在 TFHE 中，模型权重和激活均用整数表示。非线性函数必须通过可编程自举 (Programmable Bootstrapping，PBS) 操作来实现。PBS 对加密数据实施查表 (table lookup，TLU) 操作，同时刷新密文以支持，任意计算。不好的一面是，此时 PBS 的计算时间在线性运算中占主导地位。利用这两种类型的运算，你可以在 FHE 中表达任何子模型的计算，甚至完整的 LLM 计算。</p><span id="OSC_h2_3"></span><h2 data-tool="mdnice 编辑器" style="font-weight: bold;font-size: 22px;line-height: 1.2em;margin-top: 2em;margin-bottom: 35px;color: rgb(255, 157, 0);"><span style="font-size: 18px;color: rgb(255, 157, 11);padding-left: 10px;border-left: 5px solid rgb(255, 157, 11);visibility: visible;display: none;"></span><span style="color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);padding: 2px 13px;margin-right: 3px;height: 50%;font-size: 18px;">使用 FHE 实现 LLM 的一层</span><span style="font-size: 18px;color: rgb(255, 157, 11);display: inline-block;padding-left: 10px;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">接下来，你将了解如何加密多头注意力 (MHA) 中的一个注意力头。你可以在，此处，找到完整的 MHA 实现代码。</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="1.0334538878842676" data-type="svg" data-w="1106" style="margin-right: auto;margin-left: auto;width: 100%;border-radius: 5px;display: block;margin-bottom: 15px;height: auto !important;" src="https://oscimg.oschina.net/oscnet/72fc90eb-872e-4a86-9f18-c949824b4c7d.svg" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: #dda52d;font-size: 14px;">
     图 2. 在 FHE 中运行 LLM 模型的某些部分 
   </figcaption></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">图 2 概述了一个简化的底层实现。在这个方案中，模型权重会被分成两个部分，分别存储在客户端和服务端。首先，客户端在本地开始推理，直至遇到已第一个不在本地的层。用户将中间结果加密并发送给服务端。服务端对其执行相应的注意力机制计算，然后将结果返回给客户端，客户端对结果进行解密并继续在本地推理。</p><span id="OSC_h3_4"></span><h3 data-tool="mdnice 编辑器" style="font-weight: bold;font-size: 20px;line-height: 1.4;padding-top: 10px;margin-top: 10px;margin-bottom: 5px;"><span style="display: none;"></span><span style="color: rgb(81, 81, 81);font-size: 17px;padding-left: 1em;border-left: 3px solid rgb(249, 191, 69);">量化</span><span style="display: none;"></span></h3><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">首先，为了对加密值进行模型推理，模型的权重和激活必须被量化并转换为整数。理想情况是使用，训练后量化，这样就不需要重新训练模型了。这里，我们使用整数和 PBS 来实现 FHE 兼容的注意力机制，并检查其对 LLM 准确率的影响。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">要评估量化的影响，我们运行完整的 GPT2 模型，并让其中的一个 LLM 头进行密态计算。然后我们基于此评估权重和激活的量化比特数对准确率的影响。</p><figure data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;display: flex;flex-direction: column;justify-content: center;align-items: center;"><img class="rich_pages wxw-img" data-ratio="0.8024691358024691" data-type="png" data-w="567" style="margin-right: auto;margin-left: auto;width: 100%;border-radius: 5px;display: block;margin-bottom: 15px;height: auto !important;" src="https://oscimg.oschina.net/oscnet/e0260d01-fa3c-414c-a6d7-a0c0025b9e4b.png" referrerpolicy="no-referrer"><figcaption style="margin-top: 5px;text-align: center;color: #dda52d;font-size: 14px;">
     单注意力头量化的平均 top-k 准确率 
   </figcaption></figure><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">上图表明 4 比特量化保持了原始精度的 96%。该实验基于含有约 80 个句子的数据集，并通过将原始模型的 logits 预测与带有量化注意力头的模型的 logits 预测进行比较来计算最终指标。</p><span id="OSC_h3_5"></span><h3 data-tool="mdnice 编辑器" style="font-weight: bold;font-size: 20px;line-height: 1.4;padding-top: 10px;margin-top: 10px;margin-bottom: 5px;"><span style="display: none;"></span><span style="color: rgb(81, 81, 81);font-size: 17px;padding-left: 1em;border-left: 3px solid rgb(249, 191, 69);">在 Hugging Face GPT2 模型中使用 FHE</span><span style="display: none;"></span></h3><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">我们需要在 Hugging Face 的 transformers 库的基础上重写加密模块的前向传播，以使其包含量化算子。首先通过加载 GPT2LMHeadModel 构建一个 SingleHeadQGPT2Model 实例，然后手动使用 QGPT2SingleHeadAttention 替换第一个多头注意力模块，代码如下。你可以在，这里，找到模型的完整实现。</p><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;"><code style="overflow-x: auto;padding: 16px;color: #333;background: #f8f8f8;display: -webkit-box;font-family: Operator Mono, Consolas, Monaco, Menlo, monospace;border-radius: 0px;font-size: 12px;-webkit-overflow-scrolling: touch;">self.transformer.h[<span style="color: #008080;line-height: 26px;">0</span>].attn&nbsp;=&nbsp;QGPT2SingleHeadAttention(config,&nbsp;n_bits=n_bits)<br></code></pre><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">至此，前向传播已被重载成用 FHE 算子去执行多头注意力的第一个头，包括构建查询、键和值矩阵的投影。以下代码中的 <code style="font-size: 14px;border-radius: 4px;font-family: &quot;Operator Mono&quot;, Consolas, Monaco, Menlo, monospace;word-break: break-all;color: rgb(155, 110, 35);background-color: rgb(255, 245, 227);padding: 3px;margin: 3px;">QGPT2</code> 模块的代码见，此处。</p><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;"><code style="overflow-x: auto;padding: 16px;color: #333;background: #f8f8f8;display: -webkit-box;font-family: Operator Mono, Consolas, Monaco, Menlo, monospace;border-radius: 0px;font-size: 12px;-webkit-overflow-scrolling: touch;"><span style="line-height: 26px;"><span style="font-weight: bold;line-height: 26px;">class</span>&nbsp;<span style="color: #458;font-weight: bold;line-height: 26px;">SingleHeadAttention</span><span style="line-height: 26px;">(QGPT2)</span>:</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #d14;line-height: 26px;">"""Class&nbsp;representing&nbsp;a&nbsp;single&nbsp;attention&nbsp;head&nbsp;implemented&nbsp;with&nbsp;quantization&nbsp;methods."""</span><br><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="line-height: 26px;"><span style="font-weight: bold;line-height: 26px;">def</span>&nbsp;<span style="color: #900;font-weight: bold;line-height: 26px;">run_numpy</span><span style="line-height: 26px;">(self,&nbsp;q_hidden_states:&nbsp;np.ndarray)</span>:</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #998;font-style: italic;line-height: 26px;">#&nbsp;Convert&nbsp;the&nbsp;input&nbsp;to&nbsp;a&nbsp;DualArray&nbsp;instance</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q_x&nbsp;=&nbsp;DualArray(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;float_array=self.x_calib,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int_array=q_hidden_states,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quantizer=self.quantizer<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #998;font-style: italic;line-height: 26px;">#&nbsp;Extract&nbsp;the&nbsp;attention&nbsp;base&nbsp;module&nbsp;name</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mha_weights_name&nbsp;=&nbsp;<span style="color: #d14;line-height: 26px;">f"transformer.h.<span style="color: rgb(51, 51, 51);line-height: 26px;">{self.layer}</span>.attn."</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #998;font-style: italic;line-height: 26px;">#&nbsp;Extract&nbsp;the&nbsp;query,&nbsp;key&nbsp;and&nbsp;value&nbsp;weight&nbsp;and&nbsp;bias&nbsp;values&nbsp;using&nbsp;the&nbsp;proper&nbsp;indices</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;head_0_indices&nbsp;=&nbsp;[<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list(range(i&nbsp;*&nbsp;self.n_embd,&nbsp;i&nbsp;*&nbsp;self.n_embd&nbsp;+&nbsp;self.head_dim))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight: bold;line-height: 26px;">for</span>&nbsp;i&nbsp;<span style="font-weight: bold;line-height: 26px;">in</span>&nbsp;range(<span style="color: #008080;line-height: 26px;">3</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q_qkv_weights&nbsp;=&nbsp;...<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q_qkv_bias&nbsp;=&nbsp;...<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #998;font-style: italic;line-height: 26px;">#&nbsp;Apply&nbsp;the&nbsp;first&nbsp;projection&nbsp;in&nbsp;order&nbsp;to&nbsp;extract&nbsp;Q,&nbsp;K&nbsp;and&nbsp;V&nbsp;as&nbsp;a&nbsp;single&nbsp;array</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q_qkv&nbsp;=&nbsp;q_x.linear(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight=q_qkv_weights,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bias=q_qkv_bias,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key=<span style="color: #d14;line-height: 26px;">f"attention_qkv_proj_layer_<span style="color: rgb(51, 51, 51);line-height: 26px;">{self.layer}</span>"</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #998;font-style: italic;line-height: 26px;">#&nbsp;Extract&nbsp;the&nbsp;queries,&nbsp;keys&nbsp;and&nbsp;vales</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q_qkv&nbsp;=&nbsp;q_qkv.expand_dims(axis=<span style="color: #008080;line-height: 26px;">1</span>,&nbsp;key=<span style="color: #d14;line-height: 26px;">f"unsqueeze_<span style="color: rgb(51, 51, 51);line-height: 26px;">{self.layer}</span>"</span>)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q_q,&nbsp;q_k,&nbsp;q_v&nbsp;=&nbsp;q_qkv.enc_split(<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #008080;line-height: 26px;">3</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;axis=<span style="color: #008080;line-height: 26px;">-1</span>,<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key=<span style="color: #d14;line-height: 26px;">f"qkv_split_layer_<span style="color: rgb(51, 51, 51);line-height: 26px;">{self.layer}</span>"</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #998;font-style: italic;line-height: 26px;">#&nbsp;Compute&nbsp;attention&nbsp;mechanism</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q_y&nbsp;=&nbsp;self.attention(q_q,&nbsp;q_k,&nbsp;q_v)<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight: bold;line-height: 26px;">return</span>&nbsp;self.finalize(q_y)<br></code></pre><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">模型中的其他计算仍以浮点形式进行，未加密，并由客户端在本地执行。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">将预训练的权重加载到修改后的 GPT2 模型中，然后调用 <em style="color: black;">generate</em> 方法:</p><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;"><code style="overflow-x: auto;padding: 16px;color: #333;background: #f8f8f8;display: -webkit-box;font-family: Operator Mono, Consolas, Monaco, Menlo, monospace;border-radius: 0px;font-size: 12px;-webkit-overflow-scrolling: touch;">qgpt2_model&nbsp;=&nbsp;SingleHeadQGPT2Model.from_pretrained(<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #d14;line-height: 26px;">"gpt2_model"</span>,&nbsp;n_bits=<span style="color: #008080;line-height: 26px;">4</span>,&nbsp;use_cache=<span style="color: #008080;line-height: 26px;">False</span><br>)<br><br>output_ids&nbsp;=&nbsp;qgpt2_model.generate(input_ids)<br></code></pre><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">举个例子，你可以要求量化模型补全短语 「Cryptography is a」 。在 FHE 中运行模型时，如果量化精度足够，生成的输出为:</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">「Cryptography is a very important part of the security of your computer」</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">当量化精度太低时，您会得到:</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">「Cryptography is a great way to learn about the world around you」</p><span id="OSC_h3_6"></span><h3 data-tool="mdnice 编辑器" style="font-weight: bold;font-size: 20px;line-height: 1.4;padding-top: 10px;margin-top: 10px;margin-bottom: 5px;"><span style="display: none;"></span><span style="color: rgb(81, 81, 81);font-size: 17px;padding-left: 1em;border-left: 3px solid rgb(249, 191, 69);">编译为 FHE</span><span style="display: none;"></span></h3><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">现在，你可以使用以下 Concrete-ML 代码编译注意力头:</p><pre data-tool="mdnice 编辑器" style="margin-top: 10px;margin-bottom: 10px;"><code style="overflow-x: auto;padding: 16px;color: #333;background: #f8f8f8;display: -webkit-box;font-family: Operator Mono, Consolas, Monaco, Menlo, monospace;border-radius: 0px;font-size: 12px;-webkit-overflow-scrolling: touch;">circuit_head&nbsp;=&nbsp;qgpt2_model.compile(input_ids)<br></code></pre><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">运行此代码，你将看到以下打印输出: 「Circuit compiled with 8 bit-width」。该配置与 FHE 兼容，显示了在 FHE 中执行的操作所需的最大位宽。</p><span id="OSC_h3_7"></span><h3 data-tool="mdnice 编辑器" style="font-weight: bold;font-size: 20px;line-height: 1.4;padding-top: 10px;margin-top: 10px;margin-bottom: 5px;"><span style="display: none;"></span><span style="color: rgb(81, 81, 81);font-size: 17px;padding-left: 1em;border-left: 3px solid rgb(249, 191, 69);">复杂度</span><span style="display: none;"></span></h3><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">在 transformer 模型中，计算量最大的操作是注意力机制，它将查询、键和值相乘。在 FHE 中，加密域中乘法的特殊性加剧了成本。此外，随着序列长度的增加，这些乘法的数量还会呈二次方增长。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">而就加密注意力头而言，长度为 6 的序列需要 11622 次 PBS 操作。我们目前的实验还很初步，尚未对性能进行优化。虽然可以在几秒钟内运行，但不可否认它需要相当多的计算能力。幸运的是，我们预期，几年后，硬件会将延迟提高 1000 倍到 10000 倍，使原来在 CPU 上需要几分钟的操作缩短到 ASIC 上的低于 100 毫秒。有关这些估算的更多信息，请参阅，此博文。</p><span id="OSC_h2_8"></span><h2 data-tool="mdnice 编辑器" style="font-weight: bold;font-size: 22px;line-height: 1.2em;margin-top: 2em;margin-bottom: 35px;color: rgb(255, 157, 0);"><span style="font-size: 18px;color: rgb(255, 157, 11);padding-left: 10px;border-left: 5px solid rgb(255, 157, 11);visibility: visible;display: none;"></span><span style="color: rgb(255, 157, 11);visibility: visible;display: inline-block;border-left: 5px solid rgb(255, 157, 0);padding: 2px 13px;margin-right: 3px;height: 50%;font-size: 18px;">总结</span><span style="font-size: 18px;color: rgb(255, 157, 11);display: inline-block;padding-left: 10px;border-left: 5px solid rgb(255, 157, 11);visibility: visible;"></span></h2><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">大语言模型有望使能大量应用场景，但其实现引发了用户隐私的重大关切。在本文中，我们朝着密态 LLM 迈出了第一步，我们的最终愿景是让整个模型完全在云上运行，同时用户的隐私还能得到充分尊重。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">当前的做法包括将 GPT2 等模型中的特定部分转换至 FHE 域。我们的实现利用了 transformers 库，用户还能评估模型的一部分在加密数据上运行时对准确率的影响。除了保护用户隐私之外，这种方法还允许模型所有者对其模型的主要部分保密。你可在，此处，找到完整代码。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">Zama 库 Concrete 和 Concrete-ML (别忘了给我们的 github 代码库点个星星 ⭐️💛) 允许直接构建 ML 模型并将其转换至等价的 FHE 域，从而使之能够对加密数据进行计算和预测。</p><p data-tool="mdnice 编辑器" style="margin-bottom: 20px;line-height: 1.8em;color: rgb(58, 58, 58);">希望你喜欢这篇文章。请随时分享你的想法/反馈！</p><hr data-tool="mdnice 编辑器" style="height: 1px;border-right: none;border-bottom: none;border-left: none;border-top-style: solid;border-top-color: rgb(249, 191, 69);margin-top: 20px;margin-bottom: 20px;"><blockquote data-tool="mdnice 编辑器" style="border-top: none;border-right: none;border-bottom: none;color: rgb(91, 91, 91);background: rgba(158, 158, 158, 0.1);padding-top: 1px;padding-bottom: 1px;padding-left: 5px;margin-top: 0px;margin-bottom: 0px;"><blockquote style="border-width: initial;border-style: none;border-color: initial;margin-top: 0px;margin-bottom: 0em;padding-top: 0px;padding-left: 0px;"><blockquote style="border-width: initial;border-style: none;border-color: initial;margin-top: 0px;margin-bottom: 0em;padding-top: 0px;padding-left: 0px;"><blockquote style="border-width: initial;border-style: none;border-color: initial;margin-top: 0px;margin-bottom: 0em;padding-top: 0px;padding-left: 0px;"><p style="color: rgb(63, 63, 63);line-height: 1.5;font-size: 14px;margin: 10px;">英文原文:&nbsp;<span style="color: rgb(136, 136, 136);letter-spacing: 0px;">https://hf.co/blog/encrypted-llm</span></p><p style="color: rgb(63, 63, 63);line-height: 1.5;font-size: 14px;margin: 10px;">原文作者: Roman Bredehoft，Jordan Frery</p><p style="color: rgb(63, 63, 63);line-height: 1.5;font-size: 14px;margin: 10px;">译者: Matrix Yao (姚伟峰)，英特尔深度学习工程师，工作方向为 transformer-family 模型在各模态数据上的应用及大规模模型的训练推理。</p><p style="color: rgb(63, 63, 63);line-height: 1.5;font-size: 14px;margin: 10px;">审校/排版: zhongdongy (阿东)</p></blockquote></blockquote></blockquote></blockquote></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - Hugging Face（gh_504339124f0f）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 05 Oct 2023 03:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/HuggingFace/blog/10112832</guid>
            <link>https://my.oschina.net/HuggingFace/blog/10112832</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Android 14 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Android 14 现已正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fandroid-developers.googleblog.com%2F2023%2F10%2Fandroid-14-is-live-in-aosp.html" target="_blank">发布</a>，该版本旨在提高开发人员的工作效率，同时增强性能、隐私、安全和用户定制功能。</p><p>目前 Android 14 已经面向部分 Pixel 设备推出，今年晚些时候将在三星、iQOO、Nothing、一加、Oppo、Realme、夏普、索尼、传音、vivo 和小米等设备上更新。</p><p><img alt="" height="124" src="https://oscimg.oschina.net/oscnet/up-cbfa279b16f4fbb420ecf378ff77fddbdf8.png" width="700" referrerpolicy="no-referrer"></p><p>该版本的一些重点更新内容包括：</p><h4><strong>性能和效率</strong></h4><p>Android 14 的一大重点是提高平台的性能和效率。</p><ul><li><strong>冻结缓存应用。</strong>在 Android 14 之前，缓存应用程序可以不受任何限制地运行。在 Android 14 中，会在短时间内冻结缓存应用程序，使其 CPU 时间为零。</li><li><strong style="color:#202124">优化广播。</strong>为了延长冻结应用程序的冻结时间（即不占用 CPU 时间），此版本调整了应用程序进入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Fguide%2Fcomponents%2Factivities%2Fprocess-lifecycle" target="_blank">缓存状态后接收</a><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Fguide%2Fcomponents%2Fbroadcasts%23context-registered-receivers" target="_blank">上下文注册</a><span style="color:#202124">广播的方式；它们可能会排队，并且重复的（例如&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Freference%2Fandroid%2Fcontent%2FIntent%23ACTION_BATTERY_CHANGED" target="_blank">BATTERY_CHANGED</a><span style="color:#202124">）可能会合并到一个广播中。</span></li><li><p style="margin-left:0; margin-right:0; text-align:start"><strong style="color:#202124">更快的应用程序启动</strong>。<span><span><span><span style="color:#202124"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>在 8GB 设备上，测试组发现应用程序冷启动减少了 20%，在 12GB 设备上减少了 30% 以上。与热启动相比，冷启动速度较慢，而且耗电量大。这项工作有效地改善了电量使用和整体应用启动时间。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p style="margin-left:0; margin-right:0; text-align:start"><strong style="color:#202124">减少内存占用。</strong><span><span><span><span style="color:#202124"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>在 Android 14 中，Android Runtime (ART) 在不影响性能的情况下优化了 code size，平均减少了 9.3%。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><h4><strong><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#202124"><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>定制化</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span>&nbsp;</strong></h4><ul><li style="text-align:left"><strong>非线性字体放大。</strong><span style="color:#000000">从 Android 14 开始，系统默认支持字体放大至 200%。</span></li></ul><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left"><span style="color:#000000"><img alt="" height="342" src="https://oscimg.oschina.net/oscnet/up-330d4f6e4e9bf64f78b10cacb9b63690486.png" width="500" referrerpolicy="no-referrer"></span></p><ul><li style="text-align:left"><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span style="color:#202124"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>每个应用程序的语言偏好。</strong>可以使用<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fd.android.com%2Freference%2Fandroid%2Fapp%2FLocaleManager%3Fhl%3Den%23setOverrideLocaleConfig%28android.app.LocaleConfig%29" target="_blank"><span><span><span>LocaleManager.setOverrideLocaleConfig</span></span></span></a>动态更新应用程序的 localeConfig&nbsp;，以自定义 Android 设置中每个应用程序语言列表中显示的语言集。IME 现在可以使用<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Freference%2Fandroid%2Fapp%2FLocaleManager%23getApplicationLocales%2528%2529" target="_blank"><span><span><span>LocaleManager.getApplicationLocales</span></span></span></a>来了解当前应用程序的 UI 语言，以更新键盘语言。从<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Fguide%2Ftopics%2Fresources%2Fapp-languages%23auto-localeconfig" target="_blank">Android Studio Giraffe</a>和 AGP 8.1 开始，可以将应用配置为自动支持 Android 13 的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Fguide%2Ftopics%2Fresources%2Fapp-languages" target="_blank">每个应用语言偏好</a>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></li><li style="text-align:left"><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span style="color:#202124"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>区域偏好</strong>。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Freference%2Fandroidx%2Fcore%2Ftext%2Futil%2FLocalePreferences" target="_blank">区域偏好</a>使用户能够个性化温度单位、一周的第一天和编号系统。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></li><li style="text-align:left"><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span style="color:#202124"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>语法变形</strong>。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Freference%2Fandroidx%2Fcore%2Ftext%2Futil%2FLocalePreferences" target="_blank">语法变形 API</a>&nbsp;允许用户更轻松地为使用具有语法性别的语言的用户添加支持。要显示个性化翻译，你只需为受影响的语言添加针对每种语法性别的变形翻译并集成 API。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></li></ul><h4 style="text-align:start"><strong><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span><span style="color:#202124"><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>新媒体能力</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><ul><li><strong style="color:#202124">图像的 Ultra HDR</strong>。Android 14 增加了对 10 位高动态范围 (HDR) 图像的支持，并支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Fguide%2Ftopics%2Fmedia%2Fhdr-image-format" target="_blank">Ultra HDR 图像格式</a>。该格式完全向后兼容 JPEG，允许应用程序与 HDR 图像无缝互操作。</li></ul><p><img alt="" height="251" src="https://oscimg.oschina.net/oscnet/up-c3de6e626e20d082b57a43109bcfbb12949.png" width="200" referrerpolicy="no-referrer"></p><ul><li style="text-align:start"><span><span><span><span style="color:#202124"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>相机扩展中的缩放、聚焦、后视图等</strong>。Android 14 升级并改进了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Ftraining%2Fcamera%2Fcamera-extensions" target="_blank">相机扩展</a>，允许应用处理更长的处理时间，并在支持的设备上使用低光摄影等计算密集型算法来改进图像。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li><li style="text-align:start"><span><span><span><span style="color:#202124"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>无损 USB 音频</strong>。Android 14 设备可以支持无损<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.android.com%2Freference%2Fandroid%2Fmedia%2FAudioMixerAttributes" target="_blank">音频格式</a>，通过 USB 有线耳机提供发烧级体验。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></li></ul><p>此外，<span style="background-color:#ffffff; color:#121212">Android 14 还带来了各种图形驱动程序增强、OpenJDK 17 支持以及各种隐私和保护安全更新。</span>&nbsp;</p><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fandroid-developers.googleblog.com%2F2023%2F10%2Fandroid-14-is-live-in-aosp.html" target="_blank">查看官方博客</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 05 Oct 2023 03:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260444/android-14</guid>
            <link>https://www.oschina.net/news/260444/android-14</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[大模型在无损压缩方面超越 PNG 和 FLAC]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start">Google DeepMind 和 Meta 的研究人员发表论文《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farxiv.org%2Fabs%2F2309.10668" target="_blank">Language Modeling Is Compression</a>》，他们发现 DeepMind 的大语言模型 Chinchilla 70B 在图像和音频的无损压缩上超过了 PNG 和 FLAC。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start">论文提到，Chinchilla 70B 能将 ImageNet 图像数据库中的图像无损压缩到原始大小 43.4%，超过了 PNG 算法的 58.5%。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:start">Chinchilla 能将 LibriSpeech 音频数据集中的样本无损压缩到原始大小 16.4%，超过 FLAC 算法的 30.3%。</p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ca6b2c476913b6a89c88077731175c6b63b.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Farstechnica.com%2Finformation-technology%2F2023%2F09%2Fai-language-models-can-exceed-png-and-flac-in-lossless-compression-says-study%2F" target="_blank">据介绍</a>，Chinchilla 70B 主要是训练用于处理文本，但它在压缩其它类型的数据集上的效果也表现优异，甚至优于专门的算法。</p><p style="color:#000000; text-align:start">下面的例子比较了 gzip 和 Chinchilla 在示例文本上的生成效果。可以看到，gzip 的输出没有可读性。</p><p><img alt="" src="https://static.oschina.net/uploads/space/2023/1005/191209_GfKh_2720166.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 04 Oct 2023 11:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260407/llm-can-exceed-png-and-flac-in-lossless-compression</guid>
            <link>https://www.oschina.net/news/260407/llm-can-exceed-png-and-flac-in-lossless-compression</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visual Studio Code 1.83]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Visual Studio Code 1.83 已发布。</p><p><strong>主要变化</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_83%23_accessibility" target="_blank">改进可访问性</a>&nbsp;- 屏幕阅读器支持 PR 注释</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_83%23_similar-command-results-in-the-command-palette" target="_blank">优化 Command Palette 搜索</a>&nbsp;- 引入新的 "similar commands" 列表，用于帮助发现命令</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_83%23_icons-for-profiles" target="_blank">为配置文件添加自定义图标</a>&nbsp;- 方便识别活跃的配置文件</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_83%23_editor-tab-height-density" target="_blank">引入紧凑的编辑器 tab 选项卡高度</a>&nbsp;- 增大了编辑器显示区域</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_83%23_pinned-editor-tabs-on-separate-row" target="_blank">专用的固定编辑器行</a>&nbsp;-&nbsp;新的编辑器选项卡行支持通过拖放进行固定/取消固定</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_83%23_go-to-symbol-in-notebooks" target="_blank">Go to Symbol in notebooks</a>&nbsp;-&nbsp;快速导航到 notebooks 中的代码符号</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_83%23_python" target="_blank">升级 Python 调试器</a>&nbsp;- 支持配置进入&nbsp;system/library 还是只进入代码</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_83%23_github-copilot" target="_blank">Preview: GitHub Copilot</a>&nbsp;- 基于当前框架和项目约定的测试生成</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_83" target="_blank">详情</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 04 Oct 2023 08:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260395/vs-code-1-83-released</guid>
            <link>https://www.oschina.net/news/260395/vs-code-1-83-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[RMS 谈 AI、Red Hat 和道德软件许可]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start">在瑞士 Biel 举行的庆祝 GNU 诞生 40 周年的活动上，GNU 和 FSF 创始人 Richard Stallman (RMS) 发表了 25 分钟的演讲，除了披露身患癌症外，他还谈论了 Red Hat、AI 和道德软件许可。</p><p style="color:#000000; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-d7dc3b154962c7667a46bffdb69807efc99.png" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start"><em>RMS 在瑞士 Biel 参加庆祝 GNU 40 岁生日的活动</em></p><p style="color:#000000; text-align:start">RMS 表示目前正在接受滤泡性淋巴瘤的治疗，他称之为「生长缓慢和可控的」。</p><p style="color:#000000; text-align:start"><strong>Red Hat&nbsp;<strong><strong>和&nbsp;</strong></strong>GPL</strong></p><p style="color:#000000; text-align:start">Red Hat 的支持合同禁止客户重新分发该公司的开源软件，RMS 认为此举可能没有违反 GPL 许可，但其做法是「反社会的」。</p><p style="color:#000000; text-align:start">他认为 Red Hat 应该停止这一做法，或者社区能通过施加影响力让 Red Hat 做出改变。</p><p style="color:#000000; text-align:start"><strong>生成式&nbsp;<strong><strong>AI&nbsp;</strong></strong>不具备理解能力</strong></p><p style="color:#000000; text-align:start">对于 AI 或生成式聊天机器人 ChatGPT，RMS 认为危险主要来自于 AI 营销人员所编织的敍事。</p><p style="color:#000000; text-align:start">他认为今天的 AI 尚未真正具有理解能力，但人们正使用 AI 这一术语来夸大其词，他说 ChatGPT 生成的内容都是废话，不过是流畅的废话。</p><p style="color:#000000; text-align:start">因此他认为，相信 ChatGPT 这类产品生成的内容的人都很愚蠢。</p><p style="color:#000000; text-align:start">RMS 说道：「在我看来，‘intelligence’ 意味着需要具备了解或理解某个领域的能力。如果某些东西不能真正理解事情，我们不应该说它是智能的，甚至是一点智能都没有，但人们正在用人工智能一词来描述废话生成器。」</p><p style="color:#000000; text-align:start">所以他没有把那些产品称作「人工智能」或任何带有 ‘intelligence’ 一词的东西，因为这会鼓励大众认为它们（生成式人工智能程序）所说的不是胡说八道。它鼓励大众相信它们，这给了他们造成巨大伤害的机会。</p><p style="color:#000000; text-align:start">然而，这并不意味着 RMS 认为真正的人工智能并不存在。</p><p style="color:#000000; text-align:start">他说：「有些程序可以查看一些放大细胞的照片并告诉你诊断结果，无论是否患有癌症，比任何人类医生都更有可能正确。另外，有一些人工智能系统可以非常有效地找出什么会吸引人们的注意力。这些被反社交媒体平台使用，可悲的是，它们效果很好。他们非常擅长这些工作，但他们所做的是让用户上瘾。」</p><p style="color:#000000; text-align:start"><strong>道德软件许可证</strong></p><p style="color:#000000; text-align:start">RMS 似乎不是所谓的「道德」软件许可证的支持者，试图监管谁可以使用软件。</p><p style="color:#000000; text-align:start">这不足为奇，因为他倡导的自由软件哲学的四项基本自由中的第一项是用户具有出于任何目的运行软件的自由。</p><p style="color:#000000; text-align:start">演讲最后，RMS 抛出了一个问题——「我们如何让年轻人对自由软件感兴趣？」</p><p style="color:#000000; text-align:start">他称这个问题是「我们在社区中面临的难题之一」。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 04 Oct 2023 04:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260374/rms-talks-red-hat-ai-and-ethical-software-licenses</guid>
            <link>https://www.oschina.net/news/260374/rms-talks-red-hat-ai-and-ethical-software-licenses</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[龙芯为 Linux 6.7 支持 LoongArch 架构 KVM 虚拟机]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在已发布的多个 Linux 内核版本中，龙芯工程师都致力于为 LoongArch 架构实现更多内核功能。到目前为止，LoongArch CPU 的性能虽然无法与 x86_64 或 Arm 硬件相比，但正在慢慢变得更加实用，此外架构支持方面已经越来越成熟。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgit.kernel.org%2Fpub%2Fscm%2Flinux%2Fkernel%2Fgit%2Fchenhuacai%2Flinux-loongson.git%2Flog%2F%3Fh%3Dloongarch-next" target="_blank">根据龙芯工程师最新提交的代码</a>，Linux 内核的龙芯 Git 分支已将其所有初始 KVM 支持 (Kernel-based Virtual Machine) 代码提交到 loongarch-next 排队，迎接大约一个月后 Linux 6.7 合并窗口，即将迎来对基于内核的虚拟机支持。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-da5409cd652b9af9cb94b9dd19283a665d1.png" referrerpolicy="no-referrer"></p><p>这组补丁为龙芯 CPU 提供了所有基础的 KVM 支持代码。这种 KVM 支持依赖于 LoongArch 的虚拟化扩展，是 LoongArch 支持的首个虚拟化方式。</p><p>虽然考虑到目前 LoongArch CPU 性能水平，KVM 虚拟化支持在目前可能不太实用，但随着性能的提高，以及龙芯未来在云 / 虚拟化服务器领域的扩展，KVM 虚拟化支持将变得十分重要，因此提早做准备是有必要的。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 04 Oct 2023 04:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260296/loongarch-kvm-for-linux-6-7</guid>
            <link>https://www.oschina.net/news/260296/loongarch-kvm-for-linux-6-7</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GCC 安全策略文档已合并到仓库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start">最近几周在 GCC 邮件列表进行讨论后，开发团队为 GCC 代码库添加了 GCC 安全策略，以概述编译器项目的安全流程。</p><p style="color:#000000; text-align:start"><img alt="" src="https://static.oschina.net/uploads/space/2023/1006/113615_PVqj_2720166.jpeg" referrerpolicy="no-referrer"></p><p style="color:#000000; text-align:start">该文档概述了 GCC 安全漏洞处理建议、GCC 语言运行库的安全注意事项、在 GCC 中实现的安全功能，以及私下报告安全漏洞的最佳方式。</p><p style="color:#000000; text-align:start">GCC 安全政策文档于周三<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgcc.gnu.org%2Fgit%2F%3Fp%3Dgcc.git%3Ba%3Dcommit%3Bh%3D4cac1d2eec5549927fe0caee179f80007e8d729b" target="_blank">提交</a>到代码库。如果希望了解更多关于 GCC 安全策略的内容，可以在&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgcc.gnu.org%2Fgit%2F%3Fp%3Dgcc.git%3Ba%3Dblob%3Bf%3DSECURITY.txt" target="_blank">SECURITY.txt</a>&nbsp;中阅读。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 04 Oct 2023 03:37:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260447/gcc-security-policy</guid>
            <link>https://www.oschina.net/news/260447/gcc-security-policy</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Bun v1.0.4 发布，Zig 编写的 JavaScript 运行时]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Bun 1.0 发布了第 4 个补丁更新：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbun.sh%2Fblog%2Fbun-v1.0.4" target="_blank">1.0.4</a>。</p><blockquote><p>Bun 是速度极快的 JavaScript 运行时，采用 Zig 编写，集打包器、转译器和包管理器于一身。</p></blockquote><p>此版本修复了 62 个错误，添加了<code>server.requestIP</code>，支持运行时插件中的虚拟模块，并降低了<code>Bun.serve()</code>中的内存消耗。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a7ebc6fb1806b1c44968612d25f53a08793.png" referrerpolicy="no-referrer"></p><hr><ul><li><strong>降低<code>Bun.serve()</code>中的内存消耗</strong></li></ul><p><code>Bun.serve()</code>&nbsp;现在向 JavaScriptCore 的垃圾回收器报告手动管理的每个请求的内存使用情况。在某些情况下，这会将<code>Bun.serve()</code>的内存使用量减少 50%。</p><blockquote><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fjarredsumner%2Fstatus%2F1707355427904860475" target="_blank"><img src="https://static.oschina.net/uploads/space/2023/1004/111037_ARsy_2720166.png" referrerpolicy="no-referrer"></a></p></blockquote><ul><li><strong>实现<code>server.requestIP</code></strong></li></ul><p>现在可以使用<code>server.requestIP()</code>检索给定<code>Request</code>的 IP 地址。</p><pre><code class="language-javascript">Bun.serve({
  port: 3000,
  handler: (req, res) =&gt; {
    console.log(server.requestIP(req));
  },
});</code></pre><ul><li><strong><code>Bun.plugin</code>&nbsp;中的虚拟模块 (Virtual Module)</strong></li></ul><p>Bun 的插件系统变得更加灵活并且与 esbuild 兼容。除了自定义加载程序 (&nbsp;<code>import stuff from "./stuff.foo"</code>&nbsp;) 之外，它现在还支持完全虚拟模块 (&nbsp;<code>import stuff from "foo"</code>&nbsp;)。开发者可以通过注册插件来注册虚拟模块。</p><pre><code class="language-javascript">import { plugin } from "bun";

plugin({
  name: "my plugin",
  setup(builder) {
    builder.module("my-virtual-module", () =&gt; {
      return {
        exports: {
          hello: "world",
        },
        loader: "object",
      };
    });
  },
});</code></pre><p>然后可以像普通模块一样使用该虚拟模块：</p><pre><code class="language-javascript">import { hello } from "my-virtual-module";
console.log(hello); // "world"

// require("my-virtual-module") also works
// await import("my-virtual-module") also works
// require.resolve("my-virtual-module") also works</code></pre><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbun.sh%2Fblog%2Fbun-v1.0.4" target="_blank">详情</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 04 Oct 2023 03:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260293/bun-1-0-4-released</guid>
            <link>https://www.oschina.net/news/260293/bun-1-0-4-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[特斯拉：FSD 不使用高清地图，只依赖神经网络和海量数据]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>特斯拉最近解释了其全自动驾驶 (FSD) 软件是如何运作的，以及其作出决策背后的依据。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1003/180701_AefK_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>特斯拉的官方推特账号<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FTesla%2Fstatus%2F1707858812424606039" target="_blank">转发</a>了特斯拉硅谷车主俱乐部发布的一段短视频，视频内容展示了 FSD 如何在没有任何导航的情况下在湖边的一条土路上行驶。该俱乐部<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FteslaownersSV%2Fstatus%2F1706123024037269568" target="_blank">写道</a>：「世界还没有意识到正在发生什么。」</p><p><img height="823" src="https://static.oschina.net/uploads/space/2023/1003/180844_X59r_2720166.png" width="725" referrerpolicy="no-referrer"></p><p>特斯拉在转发的推文中说道：</p><blockquote><p>特斯拉 FSD 不依赖高清地图，这意味着 Autopilot 可以在汽车以前从未见过的地方启用。 虽然它会考虑导航以到达正确的目的地，但如果没有路线或地图可用，它会选择最可能的路径。<strong>这条路径是由大多数人在任何给定场景下所做的事情决定的，并由我们全球数百万辆汽车的学习提供动力。</strong>车道的概念也只是松散地嵌入到我们的系统中，使汽车能够自信地在没有标记的道路上行驶。</p></blockquote><p>特斯拉利用其车队的视频来训练 FSD 的能力。马斯克此前曾表示：「道路是为生物神经网络和眼睛设计的，因此数字神经网络和摄像头将发挥最佳作用。」</p><p>今年 7 月初，在 2023 年世界人工智能大会上，马斯克还表示，特斯拉「非常接近」实现全自动驾驶能力。他说：「过去我对这个预测一直是错误的，但我觉得我们比以往任何时候都更接近这个预测。」</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-adf92c911bcb0d3d528ae1aac0dca386027.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 03 Oct 2023 10:13:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260260</guid>
            <link>https://www.oschina.net/news/260260</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Stability AI 发布最新语言模型：Stable LM 3B]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Stability AI 昨日<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstability.ai%2Fblog%2Fstable-lm-3b-sustainable-high-performance-language-models-smart-devices" target="_blank">发布</a>最新语言模型：Stable LM 3B，可在笔记本和手机等智能设备上运行。</p><p><img src="https://static.oschina.net/uploads/space/2023/1003/123230_hJQt_2720166.png" referrerpolicy="no-referrer"></p><p>公告写道，Stable LM 3B 包含 30 亿个参数，相比于行业通常使用的 70 亿参数，它更小、更高效。主要功能如下：&nbsp;</p><ul><li>文本生成：可以用于生成文本</li><li>自回归：基于变换器解码器架构</li><li>多样性的训练数据：使用了多个开源大规模数据集</li></ul><p>Stable LM 3B 主要特点：</p><ol><li>高性能：尽管只有 30 亿个参数，但性能与更大的模型相当，甚至有时超过它们。</li><li>低功耗：设计为在便携式设备上高效运行，因此电力需求较低。</li><li>多平台兼容：可以在边缘设备、家用电脑以及其他便携式数字设备上运行。</li><li>可微调：模型可以根据特定需求进行微调，如编程辅助或其他专用应用。</li><li>开源：该模型已在 Hugging Face 平台上开源 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fstabilityai%2Fstablelm-3b-4e1t" target="_blank">https://huggingface.co/stabilityai/stablelm-3b-4e1t</a>)，方便开发者使用和改进。</li><li>训练细节：该模型在 Stability AI 的集群上进行了训练，使用了 256 个 NVIDIA A100 40GB GPU（AWS P4d 实例）。</li></ol><p>详情：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstability.ai%2Fblog%2Fstable-lm-3b-sustainable-high-performance-language-models-smart-devices" target="_blank">https://stability.ai/blog/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 03 Oct 2023 04:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260235/stable-lm-3b</guid>
            <link>https://www.oschina.net/news/260235/stable-lm-3b</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Python 3.12.0 稳定版 & 3.11.6 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Python 3.12.0 已正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpythoninsider.blogspot.com%2F2023%2F10%2Fpython-3120-final-now-available.html" target="_blank">发布</a>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1003/111138_Mtlw_2720166.png" referrerpolicy="no-referrer"></p><p><strong>主要变化</strong></p><ul><li>更灵活的 f-string 解析 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpeps.python.org%2Fpep-0701%2F">PEP 701</a>)<br> 详情查看<em>&nbsp;<a href="https://www.oschina.net/news/257832/python-f-strings-pep-701" target="news">Python 改进 f-strings 语法，解除封印，整合到统一的解析器中</a></em></li><li>支持 buffer 协议 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpeps.python.org%2Fpep-0688%2F">PEP 688</a>)</li><li>引入新的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.python.org%2F3.12%2Fwhatsnew%2F3.12.html%23pep-669-low-impact-monitoring-for-cpython" target="_blank">debugging/profiling API</a>&nbsp;(<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpeps.python.org%2Fpep-0669%2F" target="_blank">PEP 669</a>)</li><li>支持具有单独全局解释器锁的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.python.org%2F3.12%2Fwhatsnew%2F3.12.html%23pep-684-a-per-interpreter-gil" target="_blank">分离子解释器</a>&nbsp;(<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpeps.python.org%2Fpep-0684" target="_blank">PEP 684</a>)</li><li>优化性能，例如 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpeps.python.org%2Fpep-0709%2F" target="_blank">PEP 709 </a>和对 BOLT 二进制优化器的支持，预计总体性能提高 5%。</li><li>改进错误信息</li><li>支持 Linux perf 分析器在跟踪过程中报告 Python 函数名称</li></ul><p><strong>类型注释</strong></p><ul><li>为泛型类引入新的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.python.org%2F3.12%2Fwhatsnew%2F3.12.html%23pep-695-type-parameter-syntax" target="_blank">类型注释语法</a> (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpeps.python.org%2Fpep-0695%2F" target="_blank">PEP 695</a>)</li><li>为方法引入<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.python.org%2F3.12%2Fwhatsnew%2F3.12.html%23pep-698-override-decorator-for-static-typing" target="_blank">新的 override 装饰器</a>&nbsp;(<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpeps.python.org%2Fpep-0698" target="_blank">PEP 698</a>)</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.python.org%2Fdownloads%2Frelease%2Fpython-3120%2F" target="_blank">发布说明</a> | <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.python.org%2Fdownloads%2F" target="_blank">下载地址</a></p><hr><p>此外，Python 3.11 发布了第 6 个维护版本<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpythoninsider.blogspot.com%2F2023%2F10%2Fpython-3116-is-now-available.html" target="_blank"> 3.11.6</a>，引入了许多新变化，详情查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.python.org%2Fdownloads%2Frelease%2Fpython-3110%2F" target="_blank">https://www.python.org/downloads/release/python-3110/</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 03 Oct 2023 03:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260227/python-3-12-0-final-released</guid>
            <link>https://www.oschina.net/news/260227/python-3-12-0-final-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[适用于 Box 的 ONLYOFFICE 文档集成应用程序现已可用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">适用于 Box 的 ONLYOFFICE 集成应用程序可直接在 Box 前端中处理文件。 请继续阅读了解详情。</p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="New integration available: ONLYOFFICE &amp; Box" src="https://static-blog.onlyoffice.com/wp-content/uploads/2023/09/27103552/ONLYOFFICE-Box-integration.jpg" referrerpolicy="no-referrer"></p><h2>ONLYOFFICE 文档是什么</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.onlyoffice.com%2Fzh%2Foffice-suite.aspx" target="_blank">ONLYOFFICE 文档</a>是一个功能强大的在线编辑器，用于文本文档、电子表格、演示文稿、表单和 PDF 阅读器，可以与任何平台集成。跨平台并与微软格式高度兼容，ONLYOFFICE 为初创公司提供了优秀的办公套件。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">在 ONLYOFFICE 文档中，您能够以实时和段落锁定模式安全地协作处理文档。共享权限包括可编辑、可查看、可审阅、可填写表单、可留评论等。其他协作功能包括追踪更改、版本历史记录、文档比较和恢复。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">由于自定义选项和灵活性，ONLYOFFICE 文档几乎可以适应任何屏幕。默认功能可通过第三方插件进行扩展，例如 <a href="https://www.oschina.net/news/259993/onlyoffice-ai">AI 助手</a>、缩放、谷歌翻译、文本识别、语音输入等。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">ONLYOFFICE 也可以与其他平台集成，允许您在&nbsp;<span style="background-color:#ffffff; color:#333333">Odoo、Pipedrive、Confluence、Moodle、Nextcloud、Seafile 等平台上使用文档协作编辑功能。</span></p><h2><strong>ONLYOFFICE 应用程序及其功能</strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">ONLYOFFICE 新的集成应用程序可以让用户在流行的云内容管理平台 Box 中轻松打开和编辑现有文档、电子表格和演示文稿。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">为此，请单击 3 点图标启动文件上下文菜单，找到<strong>集成</strong>，然后选择<strong>用 ONLYOFFICE 打</strong><strong>开</strong>，相应的 ONLYOFFICE 编辑器将以全屏模式在新选项卡中打开。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">如果您与其他 Box 用户有共享文件，还可以协作处理文档。</p><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:center"><img alt="New integration available: ONLYOFFICE &amp; Box" src="https://static-blog.onlyoffice.com/wp-content/uploads/2023/09/27103850/Box-onlyoffice-edit-files.png" referrerpolicy="no-referrer"></p><h2><strong>如何安装应用程序</strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">ONLYOFFICE 应用程序可在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fapp.box.com%2Fapp-center%2Fonlyoffice_personal%2Fapp" target="_blank">Box App Center</a>（应用程序中心）完全免费使用。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Faccount.box.com%2Flogin" target="_blank">登录您的 Box 帐户</a>并按「<strong>安装</strong>」按钮即可。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:start"><strong>请注意</strong>：该应用程序使用 ONLYOFFICE 文档云的预配置租户，不需要任何额外配置。</p><h2><strong>支持的文件格式</strong></h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:start">适用于 Box 的 ONLYOFFICE 应用程序支持处理多种文件格式：</p><ul><li>OOXML 文件，包括 DOCX、XLSX、PPTX，可直接打开进行编辑。</li><li>DOCXF 和 OFORM，用于处理数字表单。</li><li>ODT、ODP、ODS、TXT、CSV、RTF、EPUB、FB2 只能打开查看，也可以直接进行编辑，但由于格式限制可能会导致数据丢失，或者转换为 OOXML 进行进一步编辑。</li><li>DOC、XLS、PPT、DOT、ET、FODP、HTM、POT 等可以打开仅供查看，也可以转换为 OOXML 进行编辑。</li><li>PDF、DJVU、OXPS 只能打开查看。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 02 Oct 2023 11:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260197</guid>
            <link>https://www.oschina.net/news/260197</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[「开源 Windows」ReactOS 改进 GUI 设置/安装]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，ReactOS Deutschlande.V.&nbsp;宣布聘请了该项目的长期贡献者，在接下来的五个月内致力于开发 ReactOS GUI 设置模式 (ReactOS GUI setup mode)，该特性将替代之前基于文本的设置方案，以降低使用门槛。</p><p>目前 ReactOS 正在向 Hermès Bélusca-Maïto 支付费用，让他在接下来的五个月内开发 ReactOS GUI 设置模式，以完成安装 ReactOS 过程中第一阶段的目标。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bf70d29b68f97316bc35adb689b7fa33baf.png" referrerpolicy="no-referrer"></p><p>据介绍，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Freactos.org%2Fwiki%2FInstalling_ReactOS" target="_blank">安装 ReactOS 会经历三个阶段</a>。前两个阶段需要处理系统的安装，而第三阶段是用户的第一个可用引导界面。</p><ul><li>第一阶段 – 文本模式设置，从 ReactOS CD-ROM 启动。</li><li>第二阶段 – 引导至 GUI 安装程序。用户信息的输入和文件的注册。</li><li>第三阶段 – 引导至桌面，用户配置。</li></ul><p><strong>目前安装 ReactOS 第一步的唯一选择是通过文本模式安装</strong>，其余的安装将在第二阶段安装后处理。自该项目启动以来，这一直是在虚拟机或裸机上安装 ReactOS 的标准方法，因此需要一些门槛，也劝退了不少用户。</p><p>ReactOS GUI 设置模式的开发路线图如下：</p><ul><li>完成有关 CAB 文件提取的 setupapi.dll 的部分 Winesync；</li><li>将 FreeLdr 引导加载程序安装选择步骤移至 ROS 磁盘 / 分区选择步骤之后，并放在实际安装之前；</li><li>集成注册表设置回调（目前 GUI 设置中不存在）；</li><li>添加对 GUI 设置的 GPT 支持；</li><li>杂项（进一步清理、一些重构等）。</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Freactos.org%2Fproject-news%2Fhermes-belusca-hired-full-time%2F" target="_blank">详情</a></p><blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">ReactOS 项目的主要目标就是提供一个与 Windows 环境二进制兼容的操作系统。它能让你的 Windows 应用程序和驱动程序如同在 Windows 上一样运行。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">此外，由于应用了 Windows 操作系统的外观特性，已经熟悉 Windows 用户界面的用户在使用 ReactOS 时将驾轻就熟。ReactOS 的终极目标是使你能够在感觉不到最终用户体验变化的前提下，使用 ReactOS 来替代 Windows。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img src="https://static.oschina.net/uploads/space/2019/0306/073550_CIxD_2720166.png" referrerpolicy="no-referrer"></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 02 Oct 2023 03:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260162/reactos-gui-setup-project</guid>
            <link>https://www.oschina.net/news/260162/reactos-gui-setup-project</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[苹果中国 App Store 将不允许未备案应用上架]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>苹果更新了「App 信息」中「<strong>在中国大陆的供应情况</strong>」，要求 App 有备案号才能在中国大陆的 App Store 中上架。这意味着大部分外国应用将无法通过 App Store 在中国区提供下载。</p><p><img src="https://static.oschina.net/uploads/space/2023/1002/112310_WnrJ_2720166.jpg" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/1002/112502_k0Xd_2720166.jpg" referrerpolicy="no-referrer"></p><p>苹果称：</p><blockquote><p>中国工业和信息化部（MIIT）要求 App 必须具备有效的互联网信息服务提供者（ICP）备案号。此外，游戏 App 必须取得网络游戏出版物号。图书和报刊杂志 App 必须持有中国国家新闻出版署（NPPA）颁发的《网络出版服务许可证》。包含宗教内容的 App 必须持有中国国家宗教事务局（NRAA）颁发的《互联网宗教信息服务许可证》。新闻 App 必须持有中国国家互联网信息办公室（CAC）颁发的《互联网新闻信息服务许可证》。如果你已经或计划在中国大陆的 App Store 中提供上述类型的 App，则必须提供相关信息和证明文件。如果 App 符合上述情况，请在「App 信息」页面的相应位置填写 ICP 备案信息。为方便 Apple 验证你的网络游戏出版物号，请上传游戏的 ISBN（国际标准书号）核发单或批复文件，以及最新营业执照的副本。此外，你还可以上传相应运营单位的授权协议。为方便 Apple 验证你的出版许可，请上传《网络出版服务许可证》或中国国家新闻出版署颁发的其他相关许可、授权方提供的出版许可授权书、营业执照、ICP 许可证或类似的证明文件。为方便 Apple 验证你的互联网宗教信息服务许可，请上传《互联网宗教信息服务许可证》、授权方提供的许可授权书、营业执照、ICP 许可证或类似的证明文件。为方便 Apple 验证你的互联网新闻信息服务许可，请上传《互联网新闻信息服务许可证》、授权方提供的许可授权书、营业执照、ICP 许可证或类似的证明文件。</p></blockquote><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fcn%2Fhelp%2Fapp-store-connect%2Freference%2Fapp-information%2F" target="_blank">https://developer.apple.com/cn/help/app-store-connect/reference/app-information/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 02 Oct 2023 03:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260160</guid>
            <link>https://www.oschina.net/news/260160</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zephix 7 发布，基于 Debian 稳定分支的发行版]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Zephix 是一个基于 Debian 稳定版的实时 Linux 操作系统。它可以完全从可移动媒介上运行，而不触及用户系统磁盘上存储的任何文件。Zephix 的目的是提供一个免费的模块化操作系统，用户可以随身携带，在有笔记本电脑或桌面系统的地方使用。</p><p>运行 Zephix 的最低系统要求是 1GHz 奔腾处理器和 1.5GB 内存，不过建议使用更好的规格，以获得 Zephix 更快和更流畅的实时系统体验。</p><p>Zephix v7 (Zephix-7R-x86_64) 已于上个月发布，此版本包含许多重大变化：</p><ul><li>底层系统升级至 Debian 12.1</li><li>大量重新设计的模块创建和操作脚本</li><li>重命名脚本以获得更好的约定</li><li>添加了 3 个新脚本 - 创建自定义核心模块、将 2 个模块合并在一起，以及在构建大型模块时扩展交换空间</li><li>添加了默认行为，自动将新创建的模块移动到正确的位置</li><li>进一步消除了最终 ISO 中不必要的膨胀，将大小减小至 380MB</li><li>删除固件模块，引入一个名为 isenkram 的工具，该工具提供 isenkram-autoinstall-firmware（这可以与 USB 网络共享一起使用来安装所需的缺失固件）</li><li>删除传统的桌面模块，提供了 (7) 个预构建的桌面模块（Cinnamon、GNOME、KDE、LXDE、LXQt、MATE、Xfce），以允许更自由的选择</li><li>添加 bc、rsync 和 ifrename 工具</li><li>更新官方网站以反映所有这些变化并提供更多信息</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2f15529fabaf53bb3c3900dbd256366c803.png" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsourceforge.net%2Fprojects%2Fzephix-linux%2Ffiles%2FISO%2F" target="_blank">下载地址</a></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 02 Oct 2023 03:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260159/zephix-linux-7</guid>
            <link>https://www.oschina.net/news/260159/zephix-linux-7</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Snap 商店遭受恶意应用攻击，临时新增人工审核]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><span style="background-color:#ffffff">Canonical 的 Snap Store&nbsp;团队发布<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fforum.snapcraft.io%2Ft%2Ftemporary-suspension-of-automatic-snap-registration-following-security-incident%2F37077" target="_blank">公告称</a>，他们于近日收到了一些用户所报告的安全隐患事件。即，几个最近新发布的 Snap 可能存在恶意</span><span style="background-color:#ffffff">，可以</span><span style="background-color:#ffffff">窃取用户的加密资金。</span></span></p><p><span style="color:#000000">目前，Snap Store 已经删除了所报告的 Snap。新的 Snap 注册实施了临时人工审核要求，立即生效。此人工审查旨在阻止恶意行为者注册合法应用程序的名称（或至少听起来合法的名称），并将其用作向用户推送恶意 Snap 的途径。</span></p><p><img height="270" src="https://oscimg.oschina.net/oscnet/up-88656dc09868a0f56e324642884ef0b8f38.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">当用户尝试注册新的&nbsp;Snap 时，系统将提示「请求保留名称」。Snap Store 工作人员手动审核成功后，该名称将被注册。上传和发布现有 Snap 的修订版则不会受到影响。</span></p><blockquote><p style="text-align:start"><span style="color:#000000">对于这可能给我们的 snap 发布者和开发者带来的任何不便，我们深表歉意。然而，我们认为这是目前最谨慎的行动。</span></p><p style="text-align:start"><span style="color:#000000">我们希望彻底调查这一事件，而不会给系统带来任何干扰，更重要的是，我们希望确保我们的用户在 Snap Store 中获得安全且值得信赖的体验。</span></p><p style="text-align:start"><span style="color:#000000">请耐心等待我们进行调查。我们将在未来几天提供更详细的更新。</span></p></blockquote><p><span style="color:#000000">如果你最近从 Snap Store 安装了任何新上架的<span style="background-color:#ffffff">加密账本应用程序</span>，不妨检查一下应用程序是否还在列表中。如果没有，这可能意味着它已因为被怀疑是恶意程序而撤下。&nbsp;</span></p><p><span style="color:#000000">更多详情可查看&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fforum.snapcraft.io%2Ft%2Ftemporary-suspension-of-automatic-snap-registration-following-security-incident%2F37077" target="_blank">Snapcraft 论坛</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 01 Oct 2023 04:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260114/snap-store-security-incident</guid>
            <link>https://www.oschina.net/news/260114/snap-store-security-incident</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[美国国家安全局将开设人工智能安全中心]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">美国国家安全局 (NSA) 宣布正在创建人工智能安全中心，以「监督美国国家安全系统内人工智能功能的开发和集成」。</span></p><p><span style="color:#000000">新中心将帮助促进与在国家安全中使用人工智能相关的最佳实践、评估方法和风险框架的发展。美国国家安全局将整合所有与人工智能和安全相关的活动，并在人工智能安全中心进行。</span></p><p><span style="color:#000000">美国国家安全局将与商业公司、国家实验室、学术界、国防部和选定的外国合作伙伴就这一计划密切合作。</span></p><p><span style="color:#000000">美国国家安全局局长、陆军上将 Paul Nakasone 表示：</span></p><blockquote><p><span style="color:#000000">「人工智能将对我们国家以及我们的盟友和合作伙伴的外交、技术和经济事务中的国家安全产生越来越重要的影响。今天，美国在这个关键领域处于领先地位，但这种领先不应被视为理所当然。几十年来，我们的对手一直利用盗窃和利用我们的知识产权来促进他们的利益，他们将寻求利用我们在人工智能方面的进步，并破坏我们对其的应用。」</span></p></blockquote><p><span style="color:#000000">这一公告是美国政府一系列人工智能相关举措中的又一项。例如，1 月份，美国国防部更新了 2012 年关于负责任地开发自主武器系统的指南，以反映人工智能的最新进展。2020 年，他们还发布了《负责任的人工智能战略和实施路径》。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 01 Oct 2023 04:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/260112/nsa-open-ai-security-center</guid>
            <link>https://www.oschina.net/news/260112/nsa-open-ai-security-center</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
