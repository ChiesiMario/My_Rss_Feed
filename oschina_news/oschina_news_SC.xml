<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sat, 23 Sep 2023 07:15:19 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[尤雨溪：高质量中文文档的重要性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000"><span style="background-color:#ffffff">Vue.js 和 Vite 的创建者</span>尤雨溪在最近的一次<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.thisdot.co%2Fblog%2Fcreator-of-vue-js-and-vite-evan-yous-journey-from-google-engineer-to-open%2F" target="_blank">访谈中</a>，谈到了自己<span style="background-color:#ffffff">成为独立开源开发人员的历程；重点介绍了向全职开源工作的过渡、Vue.js 的成长以及他对未来的期望。</span></span></p><p><span style="color:#000000"><img height="282" src="https://oscimg.oschina.net/oscnet/up-98b89dc57ad7b224f597857decc86eb4ee9.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">在分享了成为一名全职开源开发人员的历程以及促进这一转变的挑战和因素时，尤雨溪将自己的成功归功于运气和坚持的结合。他详细阐述了自己开发 Vue.js 的经历，强调了保持对解决一些有趣的问题时的热情；并概述了 API 驱动开发的方法，即在实现之前设计事物的工作方式。</span></p><p><span style="color:#000000">尤雨溪解释称，Vue.js 最初是通过 Hacker News 和中国社交网络等平台吸引的用户，而这主要得益于它自下而上的方法和用户友好的文档；与 React 和 Angular 等大型框架形成了鲜明对比。</span></p><p><span style="color:#000000">他认为，Vue.js 的发展历程中的一大转折点是其在 Laravel 社区中的崭露头角，正是因此才巩固了 Vue.js 作为生产项目可靠框架的声誉。关于 Vue.js 对后端开发人员的吸引力，尤雨溪则认为，主要得益于该项目与传统后端框架的无缝集成。</span></p><p><span style="color:#000000">访谈内容还涉及了&nbsp;<span style="background-color:#ffffff">Vue.js 在不同地区（尤其是亚洲）的采用情况。尤雨溪将项目在这些地区的成功归功于自己对中国社交网络的积极参与，同时还强调了高质量中文文档的重要性。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">此外，尤雨溪还分享了他在 Vue.js 早期阶段的工作节奏和满足感，并将其与项目发展过程中所需的更复杂的决策过程进行了对比。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutu.be%2FweaYWoL_ymI" target="_blank">查看完整视频</a>。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 04:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259202</guid>
            <link>https://www.oschina.net/news/259202</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[英特尔参与 CentOS Stream 项目]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">红帽官方发布<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FgAmZSf447gZEqd8n3tGd_A" target="_blank">公告</a>欢迎英特尔参与进 CentOS Stream 项目，并表示「这一举措不仅进一步深化了我们长期的合作关系，也构建在英特尔已经在 Fedora 项目中积极贡献的基础之上。」</span></p><p><img height="250" src="https://oscimg.oschina.net/oscnet/up-de0d91800dda02f5f04460a8e28f9ef7085.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">目前，CentOS Stream 共包括以下特别兴趣小组（SIG）：</span></p><ul><li><p><span style="color:#000000">指令集架构（ISA）特别兴趣小组（SIG）致力于聚焦于 CentOS Stream 中最新的 ISA 基线和工具链技术，以提高性能并减少碳足迹为最终目标。</span></p></li><li><p><span style="color:#000000">虚拟化 SIG 旨在为最新的虚拟化安全功能提供全面支持，确保开箱即用，其中包括像 Intel® Trust Domain Extensions（Intel® TDX）这样的保密计算能力。</span></p></li><li><p><span style="color:#000000">超大规模 SIG 旨在支持和构建适用于大规模基础设施的 CentOS Stream 部署用例，以满足不同规模的需求。</span></p></li></ul><p>英特尔将为这些小组做出贡献。「<span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">通过积极频繁地为 CentOS Stream 贡献，红帽和英特尔能够更有效地支持 RHEL 中最新的硬件架构进步，尤其是那些满足我们用户新兴关键需求的进展。</span>」</p><p><span>英特尔公司系统软件工程副总裁兼总经理 Mark Skarpness 表示，该公司的目标是借助 CentOS Stream 和 Fedora，为红帽生态系统的所有上游贡献提供更强大的英特尔平台支持。</span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">除了为 CentOS Stream 贡献外，红帽与英特尔的合作涵盖了多个领域，包括 5G 网络、边缘计算、人工智能（AI）和系统安全。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 03:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259196</guid>
            <link>https://www.oschina.net/news/259196</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[NExT-GPT —— 任意对任意多模态大语言模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="text-align:start">NExT-GPT 是一个端到端通用的任意多模态大型语言模型（MM-LLM）系统。开发团队将 LLM 与多模态适配器和不同的扩散解码器连接起来，使 NExT-GPT 能够感知输入并以文本、图像、视频和音频的任意组合生成输出。</p><p style="text-align:start">通过利用现有训练有素的高性能编码器和解码器，NExT-GPT 仅使用某些投影层的少量参数（1％）进行调整，这不仅有利于低成本训练，而且便于方便地扩展到更多潜在的方式。</p><p style="text-align:start">此外还引入了模态切换指令调整（MosIT）并为 MosIT 手动策划高质量的数据集，在此基础上，NExT-GPT 被赋予了复杂的跨模态语义理解和内容生成的能力。</p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>NExt-GPT 建立在现有预训练的 LLM、多模态编码器和 SoTA 扩散模型之上，具有足够的端到端指令调整。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="text-align:start"><span><span><span><span style="color:#1f2328"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" height="255" src="https://static.oschina.net/uploads/space/2023/0922/152547_Wq8a_4252687.png" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><strong>多模态编码阶段。</strong>利用已建立的编码器以各种模式对输入进行编码，其中这些表示通过投影层投影成法学硕士可以理解的类似语言的表示。</li><li><strong>LLM 理解和推理阶段。</strong>利用现有的开源法学硕士作为核心来处理输入信息以进行语义理解和推理。LLM 不仅直接生成文本标记，还生成独特的「模态信号」标记，这些标记充当指示解码层是否相应输出模态内容以及输出什么模态内容的指令。</li><li><strong>多模式生成阶段。</strong>从 LLM（如果有）接收具有特定指令的多模态信号，基于 Transformer 的输出投影层将信号标记表示映射为后续多模态解码器可以理解的表示形式。</li></ul><p><img height="138" src="https://static.oschina.net/uploads/space/2023/0922/152430_MsEF_4252687.png" width="500" referrerpolicy="no-referrer"></p><p><img alt="" height="599" src="https://static.oschina.net/uploads/space/2023/0922/152456_Uqt0_4252687.png" width="500" referrerpolicy="no-referrer"></p><p><em>NExT-GPT 推理过程。灰色表示模块已停用。</em></p></div>
                                                                ]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 03:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/next-gpt</guid>
            <link>https://www.oschina.net/p/next-gpt</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 云原生分布式操作系统 KubeSphere]]>
            </title>
            <description>
                <![CDATA[<p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2F"><img src="https://gitee.com/kchstack/kubesphere/raw/master/docs/images/kubesphere-icon.gif" alt="banner" width="200px" referrerpolicy="no-referrer"></a></p><p align="center"><b>The container platform tailored for <i>Kubernetes multi-cloud, datacenter, and edge</i> management</b></p><p align="center"><a href="https://gitee.com/link?target=https%3A%2F%2Fgoreportcard.com%2Freport%2Fgithub.com%2Fkubesphere%2Fkubesphere"><img src="https://goreportcard.com/badge/github.com/kubesphere/kubesphere" alt="A+" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fhub.docker.com%2Fr%2Fkubesphere%2Fks-installer"><img src="https://img.shields.io/docker/pulls/kubesphere/ks-installer" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere%2Fissues%3Fq%3Dis%253Aissue%2Bis%253Aopen%2Bsort%253Aupdated-desc%2Blabel%253A%2522good%2Bfirst%2Bissue%2522"><img src="https://img.shields.io/github/issues/kubesphere/kubesphere/good%20first%20issue?logo=github" alt="good first issue" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Ftwitter.com%2Fintent%2Ffollow%3Fscreen_name%3DKubeSphere"><img src="https://img.shields.io/twitter/follow/KubeSphere?style=social" alt="follow on Twitter" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fjoin.slack.com%2Ft%2Fkubesphere%2Fshared_invite%2Fzt-1ilxbsp39-t4ES4xn5OI0eF5hvOoAhEw"><img src="https://img.shields.io/badge/Slack-2000%2B-blueviolet?logo=slack&amp;logoColor=white" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.youtube.com%2Fchannel%2FUCyTdUQUYjf7XLjxECx63Hpw"><img src="https://img.shields.io/youtube/channel/subscribers/UCyTdUQUYjf7XLjxECx63Hpw?style=social" referrerpolicy="no-referrer"></a></p><hr><h2><a id="user-content-what-is-kubesphere" class="anchor" href="https://gitee.com/kchstack/kubesphere#what-is-kubesphere"></a>What is KubeSphere</h2><blockquote><p>English | <a href="https://gitee.com/kchstack/kubesphere/blob/master/README_zh.md">中文</a></p></blockquote><p><a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2F">KubeSphere</a> is a <strong>distributed operating system for cloud-native application management</strong>, using <a href="https://gitee.com/link?target=https%3A%2F%2Fkubernetes.io">Kubernetes</a> as its kernel. It provides a plug-and-play architecture, allowing third-party applications to be seamlessly integrated into its ecosystem. KubeSphere is also a multi-tenant container platform with full-stack automated IT operation and streamlined DevOps workflows. It provides developer-friendly wizard web UI, helping enterprises to build out a more robust and feature-rich platform, which includes most common functionalities needed for enterprise Kubernetes strategy, see <a href="https://gitee.com/kchstack/kubesphere#features">Feature List</a> for details.</p><p>The following screenshots give a close insight into KubeSphere. Please check <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fdocs%2Fintroduction%2Fwhat-is-kubesphere%2F">What is KubeSphere</a> for further information.</p><table><tbody><tr><td width="50%" align="center"><b>Workbench</b></td><td width="50%" align="center"><b>Project Resources</b></td></tr><tr><td><img src="https://gitee.com/kchstack/kubesphere/raw/master/docs/images/console.png" referrerpolicy="no-referrer"></td><td><img src="https://gitee.com/kchstack/kubesphere/raw/master/docs/images/project.png" referrerpolicy="no-referrer"></td></tr><tr><td width="50%" align="center"><b>CI/CD Pipeline</b></td><td width="50%" align="center"><b>App Store</b></td></tr><tr><td><img src="https://gitee.com/kchstack/kubesphere/raw/master/docs/images/cicd.png" referrerpolicy="no-referrer"></td><td><img src="https://gitee.com/kchstack/kubesphere/raw/master/docs/images/app-store.png" referrerpolicy="no-referrer"></td></tr></tbody></table><h2><a id="user-content-demo-environment" class="anchor" href="https://gitee.com/kchstack/kubesphere#demo-environment"></a>Demo environment</h2><p>🎮 <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.cloud%2Fen%2Fconsole%2Fmanaged-cluster%2F">KubeSphere Lite</a> provides you with free, stable, and out-of-the-box managed cluster service. After registration and login, you can easily create a K8s cluster with KubeSphere installed in only 5 seconds and experience feature-rich KubeSphere.</p><p>🖥 You can view the <a href="https://gitee.com/link?target=https%3A%2F%2Fyoutu.be%2FYxZ1YUv0CYs">Demo Video</a> to get started with KubeSphere.</p><h2><a id="user-content-features" class="anchor" href="https://gitee.com/kchstack/kubesphere#features"></a>Features</h2><details><summary><b>🕸 Provisioning Kubernetes Cluster</b></summary>
  Support deploy Kubernetes on any infrastructure, support online and air-gapped installation. <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fdocs%2Finstalling-on-linux%2Fintroduction%2Fintro%2F">Learn more</a>.
  </details><details><summary><b>🔗 Kubernetes Multi-cluster Management</b></summary>
  Provide a centralized control plane to manage multiple Kubernetes clusters, and support the ability to propagate an app to multiple K8s clusters across different cloud providers.
  </details><details><summary><b>🤖 Kubernetes DevOps</b></summary>
  Provide GitOps-based CD solutions and use Argo CD to provide the underlying support, collecting CD status information in real time. With the mainstream CI engine Jenkins integrated, DevOps has never been easier. <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fdevops%2F">Learn more</a>.
  </details><details><summary><b>🔎 Cloud Native Observability</b></summary>
  Multi-dimensional monitoring, events and auditing logs are supported; multi-tenant log query and collection, alerting and notification are built-in. <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fobservability%2F">Learn more</a>.
  </details><details><summary><b>🧩 Service Mesh (Istio-based)</b></summary>
  Provide fine-grained traffic management, observability and tracing for distributed microservice applications, provides visualization for traffic topology. <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fservice-mesh%2F">Learn more</a>.
  </details><details><summary><b>💻 App Store</b></summary>
  Provide an App Store for Helm-based applications, and offer application lifecycle management on Kubernetes platform. <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fdocs%2Fpluggable-components%2Fapp-store%2F">Learn more</a>.
  </details><details><summary><b>💡 Edge Computing Platform</b></summary>
  KubeSphere integrates <a href="https://gitee.com/link?target=https%3A%2F%2Fkubeedge.io%2Fen%2F">KubeEdge</a> to enable users to deploy applications on the edge devices and view logs and monitoring metrics of them on the console. <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fdocs%2Fpluggable-components%2Fkubeedge%2F">Learn more</a>.
  </details><details><summary><b>📊 Metering and Billing</b></summary>
  Track resource consumption at different levels on a unified dashboard, which helps you make better-informed decisions on planning and reduce the cost. <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fdocs%2Ftoolbox%2Fmetering-and-billing%2Fview-resource-consumption%2F">Learn more</a>.
  </details><details><summary><b>🗃 Support Multiple Storage and Networking Solutions</b></summary>
  Support GlusterFS, CephRBD, NFS, LocalPV solutions, and provide CSI plugins to consume storage from multiple cloud providers.Provide Load Balancer Implementation <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fopenelb">OpenELB</a> for Kubernetes in bare-metal, edge, and virtualization. Provides network policy and Pod IP pools management, support Calico, Flannel, Kube-OVN..
  </details><details><summary><b>🏘 Multi-tenancy</b></summary>
  Provide unified authentication with fine-grained roles and three-tier authorization system, and support AD/LDAP authentication.
  </details><details><summary><b>🧠 GPU Workloads Scheduling and Monitoring</b></summary>
  Create GPU workloads on the GUI, schedule GPU resources, and manage GPU resource quotas by tenant.
  </details><h2><a id="user-content-architecture" class="anchor" href="https://gitee.com/kchstack/kubesphere#architecture"></a>Architecture</h2><p>KubeSphere uses a loosely-coupled architecture that separates the <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fconsole">frontend</a> from the <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere">backend</a>. External systems can access the components of the backend through the REST APIs.</p><p><img src="https://gitee.com/kchstack/kubesphere/raw/master/docs/images/architecture.png" alt="Architecture" referrerpolicy="no-referrer"></p><hr><h2><a id="user-content-latest-release" class="anchor" href="https://gitee.com/kchstack/kubesphere#latest-release"></a>Latest release</h2><p>🎉 KubeSphere 3.3.2 was released! It brings enhancements and better user experience, see the <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fdocs%2Frelease%2Frelease-v332%2F">Release Notes For 3.3.2</a> for the updates.</p><h2><a id="user-content-installation" class="anchor" href="https://gitee.com/kchstack/kubesphere#installation"></a>Installation</h2><p>KubeSphere can run anywhere from on-premise datacenter to any cloud to edge. In addition, it can be deployed on any version-compatible Kubernetes cluster. The installer will start a minimal installation by default, you can <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fdocs%2Fquick-start%2Fenable-pluggable-components%2F">enable other pluggable components before or after installation</a>.</p><h3><a id="user-content-quick-start" class="anchor" href="https://gitee.com/kchstack/kubesphere#quick-start"></a>Quick start</h3><h4><a id="user-content-installing-on-k8sk3s" class="anchor" href="https://gitee.com/kchstack/kubesphere#installing-on-k8sk3s"></a>Installing on K8s/K3s</h4><p>Ensure that your cluster has installed Kubernetes v1.19.x, v1.20.x, v1.21.x, * v1.22.x, * v1.23.x, or * v1.24.x. For Kubernetes versions with an asterisk, some features of edge nodes may be unavailable due to incompatibility. Therefore, if you want to use edge nodes, you are advised to install Kubernetes v1.21.x or earlier.
Run the following commands to install KubeSphere on an existing Kubernetes cluster:</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="s">kubectl apply -f https://github.com/kubesphere/ks-installer/releases/download/v3.3.1/kubesphere-installer.yaml</span></span><span id="LC2" class="line"></span><span id="LC3" class="line"><span class="s">kubectl apply -f https://github.com/kubesphere/ks-installer/releases/download/v3.3.1/cluster-configuration.yaml</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-all-in-one" class="anchor" href="https://gitee.com/kchstack/kubesphere#all-in-one"></a>All-in-one</h4><p>👨‍💻 No Kubernetes? You can use <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubekey">KubeKey</a> to install both KubeSphere and Kubernetes/K3s in single-node mode on your Linux machine. Let's take K3s as an example:</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1"># Download KubeKey</span></span><span id="LC2" class="line"><span class="s">curl -sfL https://get-kk.kubesphere.io | VERSION=v2.3.0 sh -</span></span><span id="LC3" class="line"><span class="c1"># Make kk executable</span></span><span id="LC4" class="line"><span class="s">chmod +x kk</span></span><span id="LC5" class="line"><span class="c1"># Create a cluster</span></span><span id="LC6" class="line"><span class="s">./kk create cluster --with-kubernetes v1.21.4-k3s --with-kubesphere v3.3.1</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>You can run the following command to view the installation logs. After KubeSphere is successfully installed, you can access the KubeSphere web console at <code>http://IP:30880</code> and log in using the default administrator account (admin/P@88w0rd).</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="s">kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l 'app in (ks-install, ks-installer)' -o jsonpath='{.items[0].metadata.name}') -f</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h3><a id="user-content-kubesphere-for-hosted-kubernetes-services" class="anchor" href="https://gitee.com/kchstack/kubesphere#kubesphere-for-hosted-kubernetes-services"></a>KubeSphere for hosted Kubernetes services</h3><p>KubeSphere is hosted on the following cloud providers, and you can try KubeSphere by one-click installation on their hosted Kubernetes services.</p><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Faws.amazon.com%2Fquickstart%2Farchitecture%2Fqingcloud-kubesphere%2F">KubeSphere for Amazon EKS</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fmarket.azure.cn%2Fmarketplace%2Fapps%2Fqingcloud.kubesphere">KubeSphere for Azure AKS</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fmarketplace.digitalocean.com%2Fapps%2Fkubesphere">KubeSphere for DigitalOcean Kubernetes</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.qingcloud.com%2Fproducts%2Fkubesphereqke">KubeSphere on QingCloud AppCenter(QKE)</a></li></ul><p>You can also install KubeSphere on other hosted Kubernetes services within minutes, see the <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fdocs%2Finstalling-on-kubernetes%2F">step-by-step guides</a> to get started.</p><blockquote><p>👨‍💻 No internet access? Refer to the <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fdocs%2Finstalling-on-kubernetes%2Fon-prem-kubernetes%2Finstall-ks-on-linux-airgapped%2F">Air-gapped Installation on Kubernetes</a> or <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fdocs%2Finstalling-on-linux%2Fintroduction%2Fair-gapped-installation%2F">Air-gapped Installation on Linux</a> for instructions on how to use private registry to install KubeSphere.</p></blockquote><h2><a id="user-content-guidance-discussion-contribution-and-support" class="anchor" href="https://gitee.com/kchstack/kubesphere#guidance-discussion-contribution-and-support"></a>Guidance, discussion, contribution, and support</h2><p>We <img class="emoji" alt=":heart:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/heart-aa0a990af1ed6612e33b6344ea04b28b.png" width="14" height="14" referrerpolicy="no-referrer"> your contribution. The <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fcommunity">community</a> walks you through how to get started contributing KubeSphere. The <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fcommunity%2Ftree%2Fmaster%2Fdeveloper-guide%2Fdevelopment">development guide</a> explains how to set up development environment.</p><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fjoin.slack.com%2Ft%2Fkubesphere%2Fshared_invite%2FenQtNTE3MDIxNzUxNzQ0LTZkNTdkYWNiYTVkMTM5ZThhODY1MjAyZmVlYWEwZmQ3ODQ1NmM1MGVkNWEzZTRhNzk0MzM5MmY4NDc3ZWVhMjE">Slack Channel</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.youtube.com%2Fchannel%2FUCyTdUQUYjf7XLjxECx63Hpw">Youtube</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Ftwitter.com%2FKubeSphere">Twitter</a></li></ul><p>:hugs: Please submit any KubeSphere bugs, issues, and feature requests to <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere%2Fissues">KubeSphere GitHub Issue</a>.</p><p><img class="emoji" alt=":heart_decoration:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/heart_decoration-c6bb912722707dbea619b810f0f9eccf.png" width="14" height="14" referrerpolicy="no-referrer"> The KubeSphere team also provides efficient official ticket support to respond in hours. For more information, click <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.cloud%2Fen%2Fticket%2F">KubeSphere Online Support</a>.</p><h2><a id="user-content-who-are-using-kubesphere" class="anchor" href="https://gitee.com/kchstack/kubesphere#who-are-using-kubesphere"></a>Who are using KubeSphere</h2><p>The <a href="https://gitee.com/link?target=https%3A%2F%2Fkubesphere.io%2Fcase%2F">user case studies</a> page includes the user list of the project. You can <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere%2Fissues%2F4123">leave a comment</a> to let us know your use case.</p><h2><a id="user-content-landscapes" class="anchor" href="https://gitee.com/kchstack/kubesphere#landscapes"></a>Landscapes</h2><p align="center"><br><br><img src="https://landscape.cncf.io/images/left-logo.svg" width="150" referrerpolicy="no-referrer">&nbsp;&nbsp;<img src="https://landscape.cncf.io/images/right-logo.svg" width="200" referrerpolicy="no-referrer">&nbsp;&nbsp;
<br><br>
KubeSphere is a member of CNCF and a <a href="https://gitee.com/link?target=https%3A%2F%2Fwww.cncf.io%2Fcertification%2Fsoftware-conformance%2F%23logos">Kubernetes Conformance Certified platform
</a>, which enriches the <a href="https://gitee.com/link?target=https%3A%2F%2Flandscape.cncf.io%2F%3Flandscape%3Dobservability-and-analysis%26license%3Dapache-license-2-0">CNCF CLOUD NATIVE Landscape.
</a></p>]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 03:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/kchstack/kubesphere</guid>
            <link>https://gitee.com/kchstack/kubesphere</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 实时数仓混沌演练实践]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><span id="OSC_h1_1"></span><h1>一、背景介绍</h1><p>目前实时数仓提供的投放实时指标优先级别越来越重要，不再是单独的报表展示等功能，特别是提供给下游规则引擎的相关数据，直接对投放运营的广告投放产生直接影响，数据延迟或者异常均可能产生直接或者间接的资产损失。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-809771304bbfbfaefda51eb5e25fc0b743f.jpg" referrerpolicy="no-referrer"></p><p>从投放管理平台的链路全景图来看，实时数仓是不可或缺的一环,可以快速处理海量数据，并迅速分析出有效信息，同时支持投放管理平台的手动控盘。实时节点事故，将可能导致整个投放链路无法正常运行，另外，投放规则引擎是自动化操作，服务需要 24 小时运行，所以需要配置及时有效的数据质量监控预警，能快速识别到波动异常或者不符合业务的数据，从而计划引入混沌工程，希望可以通过主动注入故障的方式、尽可能提前感知风险、发现潜在问题，并针对性地进行防范、加固，避免故障发生时所带来的严重后果，提高实时数仓整体抗风险能力。</p><span id="OSC_h1_2"></span><h1>二、演练范围</h1><p>为了能更细致反应出混沌演练情况，根据演练的内容不同，将实时数仓混沌分为两部分：<strong>技术侧和业务侧</strong>。</p><p><strong>技术侧混沌</strong>：基于中间件、数据库、JVM、基础资源、网络、服务等注入常见的异常，根据实际业务中梳理的应用核心场景进行混沌演练，检验系统的脆弱性和应急响应能力，从而提升团队的稳定性保障处理能力。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-cc08de52de41ac5854303f7b55939ec35ff.jpg" referrerpolicy="no-referrer"></p><p><strong>业务侧混沌</strong>：对于电商活动密集型的公司来说，各种到达率、曝光率，以及更加宏观的 GMV、用户拉新数、用户召唤数等，都能表现出业务的健康程度，在实际生活中，为了描述一种稳定状态，我们需要一组指标构成一种模型，而不是单一指标。无论是否采用混沌工程，识别出这类指标的健康状态都是至关重要的，所以要围绕它们建立一整套完善的数据采集、监控、预警机制，当业务指标发生波动较大时，我们能搞快速感知、定位、修复止血。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-f656ab86204af67698ca5e53593548d77c9.jpg" referrerpolicy="no-referrer"></p><p><strong>过往数仓混沌工程均是技术侧，此次在投放链路已搭建完成主备链路的前提下，期望通可以通过多轮业务侧混沌，提高系统整体的数据异动感知能力。</strong></p><span id="OSC_h1_3"></span><h1>三、演练计划</h1><p>工欲善其事，必先利其器，在执行混沌演练前，需要准备好前置工作，制定合理的演练 SOP、方案、计划，对演练环境、脚本、数据、工具，场景及爆炸半径等进行可能性评估，在确认可行性 ok 的情况下，约好关联方时间，再进行实践操作。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-cfdf19906836e41b5cb869b64608d799432.jpg" referrerpolicy="no-referrer"></p><p>本篇主要和大家分享基于业务侧的实时数仓混沌演练过程：</p><span id="OSC_h2_4"></span><h2>1.编写演练 SOP</h2><p>SOP 是一种标准的作业程序，就是将某一事件的操作步骤和要求，进行细化、量化及优化，形成一种标准的操作过程，关于业务侧混沌，尤其是实时数仓数据相关的演练，我们也是第一次做，目前在业界也没有找到相关的演练指导参考，处于探索阶段，为了方便项目进度的顺利进行及后续演练操作更加规范、高效，在演练前期大家经过沟通、讨论后，项目前期梳理的 SOP 演练模板，如下： <img alt="" src="https://oscimg.oschina.net/oscnet/up-b05836c213c5deb4a521e61b8d9bf67f60f.jpg" referrerpolicy="no-referrer"></p><span id="OSC_h2_5"></span><h2>2.演练方案调研</h2><p>先收集实时数仓投放链路核心指标范围，在此基础上，拉取一段时间内的历史数据进行分析，找到每个指标对应的健康波动阀值，从而在配置相应的 DQC 规则监控，对于波动不在健康阀值的异常指标，在分钟级别（预期 15min）内及时告警，并快速排查响应。为此，在演练前期，我们经历过一系列的方案调研、探索，如下：</p><p><strong>「下文提供的方案，指标数据都是以设备激活数为例进行分析」</strong></p><ul><li><p>方案一: 按照天维度，收集最近一段时间，<strong>同一天每个整点设备激活数，占当天大盘占比</strong>，统计出最小值、最大值，作为该指标的健康波动阀值; <img alt="" src="https://oscimg.oschina.net/oscnet/up-5db6bf773388277a477d014346b562cbbc9.jpg" referrerpolicy="no-referrer"></p></li><li><p>方案二: 按照天维度，收集一段时间内，<strong>同一天相邻整点指标波动</strong>数据找规律，比如每天上午 9 点到 10 点的波动数据，然后分别通过一系列的数学分布方法进行数据统计，从而希望找一个相对稳定的波动区间； <img alt="" src="https://oscimg.oschina.net/oscnet/up-e6acfa0ba597d5eec2b48a96608a1ded0d4.jpg" referrerpolicy="no-referrer"></p></li><li><p>方案三: 按照天维度，收集一段时间内，<strong>相邻天整点指标波动</strong>数据找规律，比如昨天上午 9 点到前天上午 9 点的波动数据，然后分别通过一系列的数学分布方法进行数据统计，从而希望找一个相对稳定的波动区间； <img alt="" src="https://oscimg.oschina.net/oscnet/up-ec085c12fa338ea0704fef3dcc4a96d16fa.jpg" referrerpolicy="no-referrer"></p></li><li><p>方案四:在前面三种方案的基础上，指标在工作日和周末的波动可能不一样，所以我们在日维度统计的基础上，我们也调研了<strong>周维度同比波动</strong>分布情况，比如每周一上午 9 点到上午 10 点的波动数据，然后分别通过一系列的数学分布方法进行数据统计，从而希望找一个相对稳定的波动区间； <img alt="" src="https://oscimg.oschina.net/oscnet/up-867fe3fd131a2016e25d162e0a81407fc07.jpg" referrerpolicy="no-referrer"></p></li><li><p>方案五:同理，我们也调研了<strong>周维度环比波动</strong>分布情况，比如本周一上午 9 点到上周一上午 9 点的波动数据，然后分别通过一系列的数学分布方法进行数据统计，从而希望找一个相对稳定的波动区间； <img alt="" src="https://oscimg.oschina.net/oscnet/up-3f6117360a9087dea86b7d0a38eb7053db9.jpg" referrerpolicy="no-referrer"></p></li><li><p>方案六：基于主备链路，在 source 源相同的情况下，经过实时数仓计算出的指标，在同一段时间两条链路 sink 出来的结果数据，正常应该是保持一致，或者波动较小，比如 10 分钟延迟的主备链路，波动不超过 10%，平均差异做到一致性做到 90% 以上。</p></li></ul><p>方案 1 到 5，都尝试过一遍，每个方案场景数据通过最大值、最小值、平均值、各百分位分布、方差、标准差等统计出来的数据分析，很难找到一个相当稳定的波动规律，也无法框定指标具体的阀值区间，实际演练过程，如果设置的波动告警阀值过大，真实生产上业务数据波动异常时，无法及时告警发现；设置过小，将导致告警频繁，对其准确性、有效性可能存在质疑，而且，实时投放的核心指标有几十个，每个指标对应的健康阀值都不一样，要收集、分析成本非常高，从演练的效果上看，也不是很明显。</p><p><strong>整体评估下来，演练主要采用的是方案六：涉及到的实时投放核心指标数共收集 29 个，一段时间内（15min），主备链路指标波动差异不超过 10%。</strong></p><span id="OSC_h2_6"></span><h2>3.演练方式</h2><p>红蓝对抗演练，将团队分为红（防）蓝（攻）两组。</p><blockquote><p>测试人员组成蓝军：负责制定混沌演练方案，执行目标系统故障注入，详细记录演练过程；</p><p>实时数仓开发为红军：负责发现故障、应急响应、排除故障，同时验证系统在不同故障场景下的容错能力、监控能力、人员响应能力、恢复能力等可靠性能力。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-f3b6dfa0fc9f4c79a51bf8dda03258b9c04.jpg" referrerpolicy="no-referrer"></p></blockquote><span id="OSC_h1_7"></span><h1>四、演练流程</h1><p>整体演练过程，大致分为三个阶段：准备阶段、攻防阶段及覆盘阶段。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-7cd2ed35bed2468d536c47d934484c34db0.jpg" referrerpolicy="no-referrer"></p><span id="OSC_h2_8"></span><h2>1.准备阶段</h2><ul><li><p>方案准备完评审通过后，确认好链路计划；</p></li><li><p>蓝军按计划根据事先制定的攻击方案，提前准备好相应的测试数据、脚本； ‍</p></li><li><p>红军按计划根据事先制定的攻击方案，在演练前，提前确保环境可用，并进行监控防御、应急响应措施。</p></li></ul><span id="OSC_h2_9"></span><h2>2.攻防阶段</h2><ul><li><p>蓝队根据事先制定的攻击方案，模拟真实的攻击行为，按照约定的时间在演练链路（备用链路）进行攻击，进行故障注入，同时记录好相应的操作步骤，方便后续报告梳理；</p></li><li><p>红队在蓝军攻击后，通过飞书/邮件告警等通知方式实时关注监控系统运行情况，如有异常告警，需第一时间进行问题排查定位，在评估修复方案；</p></li><li><p>在攻防对抗的过程中，蓝军可根据红军的防御措施进行调整和改进攻击策略，尽力突破系统的防御并达到既定目标，同时红军也可分析蓝军的攻击手法和行为模型，不断改进防御措施来加强防御。</p></li></ul><span id="OSC_h2_10"></span><h2>3.覆盘和改进阶段</h2><ul><li><p>在混沌演练结束后，进行总结和评估，分析红队和蓝队的表现，评估系统的安全性和抗攻击能力；</p></li><li><p>总结经验教训，总结成功的防御措施和失败的攻击手法，以便于改进系统的安全策略； ‍</p></li><li><p>根据评估结果和总结经验，制定改进计划，修补系统中的漏洞和薄弱点，提升系统的抗风险能力。</p></li></ul><span id="OSC_h1_11"></span><h1>五、攻防实战</h1><p>本次演练共计有 29 个指标波动 case，整体演练操作大同小异。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-231ad23a9d169ab0aca3cc910ee770bb003.jpg" referrerpolicy="no-referrer"></p><p>以其中 case17 「召回商品收藏 uv 在某个渠道下整点波动异常」为例，<strong>具体的演练操作流程如下。</strong></p><span id="OSC_h2_12"></span><h2>1.数据准备</h2><ul><li>通过后台数据库，拉出生产主 (备) 链路，某个渠道（如<code>media_id</code> = '2'）下某个整点（如<code>hour</code> = 10）下，召回商品收藏 uv 对应的整体统计值 N。</li></ul><pre><code>--渠道小时整点维度下，商品收藏 uv 汇总数据
select
  `指标名称`,
  `日期`,
  '2' as `指标 ID`,
  `小时段`,
  sum(`指标值`)
from table_a
where
  date = date_format(now(), '%Y%m%d')
  and `指标名称` in ( '商品收藏 uv' )
  and `小时段` = 10
  AND `指标 id` = '2'
GROUP BY
  `指标名称`,
  `日期`,
  `小时段`
order by
  指标名称;
</code></pre><ul><li>拉出备用链路，某个渠道（如<code>media_id</code> = '2'）下某个整点（如<code>hour</code> = 10）下，具体的一条明细数据，记录商品收藏 uv 对应的值为 n,把 n 改为 n+0.1N,后续注入进备用链路，从而使得主备波动差异在 10%。</li></ul><pre><code>-- 明细数据
select
  t.指标名称,t.账户 id,t.计划 ID,t.设备类型,t.指标值
from
  (
    select
      `账户 id`,
      `计划 id`,
      `指标名称`,
      `指标值`,
      `设备类型` ,
      row_number() over (partition by 指标名称 order by 指标值 desc ) as rn
    from  table_a
    where
      date = date_format(now(), '%Y%m%d')
      and `指标名称` in ('商品收藏 uv')
      and `设备类型` = '召回'
      and `小时段` = 10
      AND `指标 id` = '2'
  ) t
where
  t.rn = 1
ORDER BY 指标名称;
</code></pre><ul><li>整理后得到需要注入的数据数据，见标黄部分。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-ede988eb7f5092a5961838f767529977686.jpg" referrerpolicy="no-referrer"></li></ul><span id="OSC_h2_13"></span><h2>2.故障注入 odps</h2><ul><li>将需要注入的数据导入 odps。</li></ul><p>导入前，需要在 datawork 空间中新建测试表 du_qa_dw_dev.hundun_case，用于导入演练数据</p><pre><code>-- drop table if  EXISTS du_qa_dw_dev.hundun_case;
CREATE TABLE IF NOT EXISTS hundun_case
(
    message  STRING COMMENT '消息内容'
)
COMMENT '混沌演练'
;
</code></pre><ul><li>往 du_qa_dw_dev.hundun_case 表里灌数。</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9a812903d786097d62990f612ff7aa80cac.jpg" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-46b380b575675ee1cfa3f6fb5dcfd895036.jpg" referrerpolicy="no-referrer"></p><ul><li>验证数据导入是否成功。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-f1b328461b1a5b283c4e8975019463c0d4d.jpg" referrerpolicy="no-referrer"></li></ul><span id="OSC_h2_14"></span><h2>3.odps 同步到 kafka</h2><p>执行 flink 同步脚本，将 odsp du_qa_dw_dev.hundun_case 表表数据同步到对应的 kafka topic 中。</p><p><strong>flink 任务脚本：</strong></p><pre><code>--SQL
--********************************************************************--
--odps 同步到 kakfa 脚本，用于实时数仓混沌演练异常注入使用
--********************************************************************--
-- 基本函数
CREATE FUNCTION JsonParseField AS 'com.alibaba.blink.udx.log.JsonParseField';
CREATE FUNCTION jsonStringUdf AS 'com.alibaba.blink.udx.udf.JsonStringUdfV2';
---同步账号表
CREATE TABLE `source` (
message                        VARCHAR  
) WITH (
   'connector' = 'du-odps',
  'endPoint' = '***',
  'project' = '***',
  'tableName' = 'hundun_case_01',
  'accessId' = '*******',
  'accessKey' = '*******'

);

CREATE TABLE `kafka_sink` (
  `messageKey`  VARBINARY,
  `message`  VARBINARY,
  PRIMARY KEY (`messageKey`) NOT ENFORCED
) WITH (
  'connector' = 'du-kafka',
  'topic' = '********',
   'properties.bootstrap.servers' = '*******',
  'properties.compression.type' = 'gzip',
  'properties.batch.size' = '40960',
  'properties.linger.ms' = '1000',
  'key.format' = 'raw',
  'value.format' = 'raw',
  'value.fields-include' = 'EXCEPT_KEY'
);

INSERT INTO kafka_sink
SELECT
cast(MD5(message) as VARBINARY),
cast(message as VARBINARY)
FROM source
;
</code></pre><span id="OSC_h2_15"></span><h2>4.kafka 平台查询数据</h2><p>执行完 flink 同步任务后，可通过后台查询，对应的数据是否同步成功。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-1cf077eceab902d334f7a02744f110a4ea3.jpg" referrerpolicy="no-referrer"></p><span id="OSC_h2_16"></span><h2>5.异常注入通知</h2><p>在异常注入完成后，可以通过飞书群通知，告知红军，如收到告警，需第一时间群告知。</p><blockquote><p>蓝军：蓝军已完成数据准备，请红军在演练前确保环境 OK 且已完成规则配置，另外务必将演练时间计划及时同步通知到下游关联方；</p><p>蓝军：已完成注入。</p></blockquote><span id="OSC_h2_17"></span><h2>6.告警触发通知</h2><ul><li>红军在演练前，可通过监控平台提前配置好防御规则。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-db13e71a209e4074cce8a2bbc1a41667f5c.jpg" referrerpolicy="no-referrer"></li><li>在异常注入后，如符合预期，在 15min 内发现指标波动异常，红军需及时同步到演练群中。</li></ul><blockquote><p>中危**双链路主备一致监控</p><p>服务名：**** 环境：****** 告警时间：****** 触发条件：**双链路比对波动异常，持续 10 分钟，告警详情：指标:prd_collect_uv 主对比备下降:[-10%] 主:1066 备:956</p><p>业务域：实时数仓</p><p>应用负责人：***</p></blockquote><ul><li>如不符合预期，未在 15min 内发现指标波动异常，红军需及时定位、跟进问题，并在修复后，沟通后续演练验证修复结果。</li></ul><blockquote><p>红军：15min 内未收到告警，定位中</p><p>红军：原因已找到，由于***造成，导致告警数据没有及时发出，正在修复处理</p><p>红军：已修复，请红军重新发起攻击</p></blockquote><span id="OSC_h2_18"></span><h2>7.演练过程记录</h2><p>收集、汇总记录演练过程中的每个操作，含时间点、执行人、操作等，如下： <img alt="" src="https://oscimg.oschina.net/oscnet/up-464e3d7975b42956cc2007407a22290fcce.jpg" referrerpolicy="no-referrer"></p><span id="OSC_h1_19"></span><h1>六、演练总结</h1><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-679f8b1b380d497f60dc055e5eb209dc097.jpg" referrerpolicy="no-referrer"></p><span id="OSC_h1_20"></span><h1>七、未来展望</h1><p>实时数仓业务侧的混沌演练，从 0 到 1，在经过一系列的探索实践后，通过主备链路比对方式，演练期间对于异常波动的指标，可以快速识别感知，从演练结果上，取得了不错的成效，但也存在一定的局限性，如：</p><ul><li><p>演练期间，通过人工注入的异常数据，如无法快速清除，可能影响到备用链路使用。</p></li><li><p>对于没有备链路的实时指标波动，需要制定更精细化的可行方案，找寻指标健康波动范围。</p></li></ul><p>这些都需要团队进一步去探索、解决，同时在演练的过程中，我们将不断积累、丰富演练 case、完善演练库，后续计划通过引入工具（平台）、建立演练协助机制、定期定时演练等手段，使混沌演练更加自动化、规范化、常态化，提高实时数仓整体数据稳定。 <img alt="" src="https://oscimg.oschina.net/oscnet/up-44be503ee4b17e831ef9e2fabf906b71236.jpg" referrerpolicy="no-referrer"> *文 / 袁宵</p><p>本文属得物技术原创，更多精彩文章请看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftech.dewu.com%2F" rel="nofollow" target="_blank">得物技术官网</a></p><p>未经得物技术许可严禁转载，否则依法追究法律责任！</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 23 Sep 2023 03:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5783135/blog/10112796</guid>
            <link>https://my.oschina.net/u/5783135/blog/10112796</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[华为开源 openInula 前端框架，兼容 React API 和生态]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">lnula（发音为：[ˈɪnjʊlə]）。openInula 是一款用于构建用户界面的 JavaScript 库，提供响应式 API 帮助开发者简单高效构建 web 页面，比传统虚拟 DOM 方式渲染效率提升 30% 以上！同时 InulaJS 提供与 React 保持一致的 API，并且提供 5 大常用功能丰富的核心组件：状态管理器、路由、国际化、请求组件、应用脚手架，以便开发者高效、高质量的构筑基于 InulaJS 的前端产品。</p><h2 style="margin-left:0; margin-right:0; text-align:left">技术架构</h2><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><img alt="输入图片说明" src="https://static.oschina.net/uploads/img/202309/23073740_6lHO.png" referrerpolicy="no-referrer"></p><h3 style="margin-left:0; margin-right:0; text-align:left">核心能力</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>响应式 API</strong></p><ul><li>openInula 通过最小化重新渲染的范围，从而进行高效的 UI 渲染。这种方式避免了虚拟 DOM 的开销，使得 openInula 在性能方面表现出色。</li><li>openInula 通过比较变化前后的 JavaScript 对象以细粒度的依赖追踪机制来实现响应式更新，无需用户过度关注性能优化。</li><li>简洁 API：
<ol style="list-style-type:lower-roman"><li>openInula 提供了两组简洁直观的 API--响应式 API 和与 React 一致的传统 API，使得开发者可以轻松地构建复杂的交互式界面。</li><li>openInula 简洁的 API 极大降低了开发者的学习成本，开发者使用响应式 API 可以快速构建高效的前端界面。</li></ol></li></ul><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>兼容 ReactAPI</strong></p><ul><li>与 React 保持一致 API 的特性、可以无缝支持 React 生态。</li><li>使用传统 API 可以无缝将 React 项目切换至 openInula，React 应用可零修改切换至 openInula。</li></ul><h3 style="margin-left:0; margin-right:0; text-align:left">openInula 配套组件</h3><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>状态管理器/inula-X</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">inula-X 是 openInula 默认提供的状态管理器，无需额外引入三方库，就可以简单实现跨组件/页面共享状态。 inula-X 与 Redux 比可创建多个 Store，不需要在 Reducer 中返回 state 并且简化了 Action 和 Reducer 的创建步骤，原生支持异步能力，组件能做到精准重渲染。inula-X 均可使用函数组件、class 组件，能提供 redux 的适配接口及支持响应式的特点。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>路由/inula-router</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">inula-router 是 openInula 生态组建的一部分，为 openInula 提供前端路由的能力，是构建大型应用必要组件。 inula-router 涵盖 react-router、history、connect-react-router 的功能。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>请求/inula-request</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">inula-request 是 openInula 生态组件，涵盖常见的网络请求方式，并提供动态轮询钩子函数给用户更便捷的定制化请求体验。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>国际化/inula-intl</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">lnula-intl 是基于 openInula 生态组件，其主要提供了国际化功能，涵盖了基本的国际化组件和钩子函数，便于用户在构建国际化能力时方便操作。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>调试工具/inula-dev-tools</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">inula-dev-tools 是一个为 openInula 开发者提供的强大工具集，能够方便地查看和编辑组件树、管理应用状态以及进行性能分析，极大提高了开发效率和诊断问题的便捷性。</p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><strong>脚手架/inula-cli</strong></p><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left">lnula-cli 是一套针对 openInula 的编译期插件，它支持代码优化、JSX 语法转换以及代码分割，有助于提高应用的性能、可读性和可维护性。</p></div>
                                                                ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 23:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/openinula</guid>
            <link>https://www.oschina.net/p/openinula</link>
        </item>
        <item>
            <title>
                <![CDATA[低代码引擎 TinyEngine 正式发布！！！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p><img src="https://oscimg.oschina.net/oscnet/up-889246aad04bcf78bd25d07144ac7a00325.png" alt="" referrerpolicy="no-referrer"> 在当今数字化飞速发展的时代，企业对高效、敏捷的应用程序需求日益旺盛。为了满足这一需求，越来越多的低代码开发平台开始涌现。这些平台通过提供简单易用的开发工具和优化后的开发流程，帮助开发者快速构建高质量、可重复使用的应用程序，同时降低了开发的难度和成本，提高了开发效率和灵活性。这些低代码开发平台的出现，无疑为企业的数字化转型提供了更快速、更高效的方法，也将推动整个软件开发行业的进步。</p><h2>TinyEngine 项目介绍</h2><p>随着企业对于低代码开发平台的需求日益增长，急需一个通用的解决方案来满足各种低代码平台的开发需求。正是在这种情况下，低代码引擎应运而生。它是一种通用的开发框架，通过对低代码平台系统常用的功能进行解构，将其划分为多个功能模块，并为每个模块定义了相应的协议和开发范式，使得开发者可以根据自身的业务需求，轻松定制开发出自己的低代码开发平台。</p><p>随着企业对于低代码开发平台的需求日益增长，急需一个通用的解决方案来满足各种低代码平台的开发需求。正是在这种情况下，低代码引擎应运而生。它是一种通用的开发框架，通过对低代码平台系统常用的功能进行解构，将其划分为多个功能模块，并为每个模块定义了相应的协议和开发范式，使得开发者可以根据自身的业务需求，轻松定制开发出自己的低代码开发平台。</p><p><img src="https://oscimg.oschina.net/oscnet/up-eafd0400a47b2223f7736ca1f815f5931b7.png" alt="" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 提供了低代码底层能力，并集成了人工智能，从而使用户能够高效开发。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 具有强大的拖拽功能，无论是图元还是复杂组件，都能在画布上带来流畅的体验。它适用于多场景的低代码平台开发，包括资源编排、流程编排、服务端渲染、模型驱动、移动端、大屏端以及页面编排等低代码平台。</p><h3>架构</h3><p><img src="https://oscimg.oschina.net/oscnet/up-9987cd6c7d0245549bcf11fca5ea1e97da5.png" alt="" referrerpolicy="no-referrer"></p><h3>核心亮点</h3><ul><li><strong>可以定制开发低码平台</strong>。</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 采用灵活的系统架构，其出色的整体架构提供了高度的自定义自由度，使用户能够像搭建积木一样选择不同的模块来构建自己的专属设计器。此外，插件化的架构使得用户可以方便地扩展与业务相关的功能。 在 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 中，插件根据位置大致分为三类：toolbars/plugins/settings，分别对应顶部区域、左侧区域和右侧区域。toolbars 插件主要偏向于无需 UI 或者 UI 较为简单的工具插件，plugins 是业务功能插件，显示在左侧 (或下方) 抽屉页面，可以通过点击进行展开收起或切换。这些功能都像是独立的积木块，用户可以选择性地保留或删除。同时，用户也可以开发自己的插件或工具，并将其安装到对应的位置。<strong>TinyEngine 的灵活性极强，用户可以自由地决定他们想要开发什么样的低代码平台。</strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 提供了一套完善的插件体系，涵盖了插件开发所需的基础 UI 库、工具库、插件面板的显示控制、生命周期管理、公共 API 注册与共享等。这一体系使得开发者只需遵循简单的规范，即可快速开发出业务所需的插件，从而极大地提高了开发效率和灵活性。通过使用 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 提供的插件体系，开发者可以更加轻松地管理和维护复杂的插件生态系统，同时降低维护成本。总之，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 的插件体系为开发者提供了一个全面、高效、灵活的开发平台，使得快速开发出高质量的插件成为可能。</p><p>插件开发需要遵循一定的开发规范，主要是文件规范与导出规范：</p><p>1、文件规范，必须包含下面几个文件</p><pre><code class="language-js">pluginProject
- src 插件源码
- index.js 注册插件入口，需要导出约定的数据结构
- package.json
</code></pre><p>2、导出规范， index.js 文件需要导出一个对象来声明基础信息</p><pre><code class="language-js"> import component, { api } from './src/Main.vue'
 
 export default {
          id: 'pluginId', // 插件 id
          title: 'pluginName', // 插件名
          icon: 'js', // 插件 icon
          align: 'top', // 插件位置，左侧插件可选值：'top' | 'bottom'  工具栏可选值：'right' | 'center' | 'left'
          component, // 插件面板打开时渲染的组件
          api, // 插件暴露的 api，可以提供给其他插件调用
        }
</code></pre><p>在此基础上就可以按照业务需要自由开发相关逻辑代码。</p><p>3、最后在 addons.js 插件配置文件中引入，就完成一个完整的插件开发了。</p><pre><code class="language-js">import Materials from '@xxxx/lowcode-plugin-materials'

        export default {
          plugins: [
            Materials,
            // ...
          ],
          toolbars: [
            // ...
          ],
          settings: [
            // ...
          ],
        }
</code></pre><p>（ps:我们呼吁用户把开发的插件包开源，共建 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 的生态。）</p><ul><li><strong>TinyEngine 有开放的物料协议和扩展接口。</strong> &nbsp;</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 低代码引擎默认的物料来源于华为云开源组件库 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-vue%2Fzh-CN%2Fos-theme%2Fdocs%2Fchangelog" target="_blank">TinyVue</a>，该组件库拥有丰富的组件和强大的功能。并且实现了跨端垮技术栈，同时支持 vue2 和 vue3。即使业务系统使用其他组件库，也无需切换，得益于 TinyEngine 强大的开放物料设计，可直接导入第三方组件库，例如 elementUI 和 AntDesign 等。引擎底层技术架构采用 webcomponent 技术，因此支持 Vue、React 和 Angular 等不同技术栈的组件或区块。<strong>用户可以自由选择所需的组件库并导入使用</strong>。</p><p>导入第三方组件库，找到 runner.js 物料文件。然后参照默认物料 @opentiny/vue 即可，主要修改以下地方：</p><pre><code class="language-js">// 全量导入 UI 组件库
import UI from '@xxxx/UI'

Object.entries(UI).forEach(([key, component]) =&gt; {
   const { name } = component
   if (name) {
   window.TinyLowcodeComponent[name] = component
   }
  })

// 导入某个组件库里面的单个组件
 import { button } from '@xxxx/UI'

window.TinyLowcodeComponent[name] = button
</code></pre><p>通过导入第三方组件库，用户可以在低代码平台中使用这些组件库来开发应用程序。除了导入组件外，用户还需要通过 bundle.json 文件来描述导入的组件所暴露出来的事件和属性。这样，用户可以在应用程序中使用这些组件，并通过 bundle.json 文件来了解和使用组件的事件和属性。这是一个非常方便和灵活的功能，使得用户可以自由地使用和定制他们所需的组件，从而快速开发出高质量的应用程序。</p><pre><code class="language-json"> // 以下 JSON 为节选按钮暴露的属性
        {
          "schema": {
            "type": "object",
            "properties": {
              "size": {
                "title": "定义按钮尺寸",
                "type": "string",
                "enum": ["large", "medium", "small", "mini"],
                "enumNames": ["较大尺寸", "中等尺寸", "较小尺寸", "迷你尺寸"],
                "default": ""
              },
              "text": {
                "title": "设置按钮显示的文本",
                "type": "string",
                "default": ""
              }
            },
            "events": {
              "onClick": {
                "label": {
                  "zh_CN": "鼠标单击时触发",
                  "en_US": "Triggered on mouse click"
                },
                "description": {
                  "zh_CN": "鼠标单击时触发的回调函数"
                },
                "type": "event",
                "defaultValue": ""
              }
            }
          }
        }
</code></pre><ul><li><strong>TinyEngine 支持自定义 DSL 生成定制的源代码。</strong></li></ul><p>相对于在运行时由平台提供渲染引擎的方式，这种方式能够为用户提供更多的自主权和安全性。用户可以自由地定义自己的 DSL，并根据需要生成定制化的源代码，从而更加灵活地控制应用程序的行为和性能。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a49a7815e0e7252136772b0fcb2daf2f5ca.png" alt="" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 默认生成 Vue 的源代码。当页面编排完成后，会生成一个包含页面信息的 schema。DSL 通过便利递归等方法，从中生成源代码。如果技术栈是 Angular 或 React，用户可以完全开发一个 Angular 或 React 的 DSL，从而生成一个新的源代码工程。用户可以根据自己的需求定制生成源代码的方式，这是一个非常灵活和强大的功能，使得 TinyEngine 可以适应不同的技术栈和需求，从而更加广泛地应用于各种应用程序的开发。</p><p>如果你想开发其他技术栈的 DSL，那么一定要对<strong>页面协议</strong>比较熟悉。</p><pre><code class="language-js">interface&nbsp;IPageSchema&nbsp;{&nbsp;//&nbsp;页面&nbsp;或&nbsp;区块&nbsp;schema  
&nbsp;&nbsp;fileName?:&nbsp;string;&nbsp;//&nbsp;页面名称，schema&nbsp;是页面时使用  
&nbsp;&nbsp;componentName?:&nbsp;string;&nbsp;//&nbsp;组件名，schema&nbsp;是页面时值为&nbsp;"Page"  
&nbsp;&nbsp;blockName?:&nbsp;string;&nbsp;//&nbsp;区块名，schema&nbsp;是区块时使用  
&nbsp;&nbsp;id:&nbsp;string;  
&nbsp;&nbsp;css?:&nbsp;string;&nbsp;//&nbsp;页面全局样式  
&nbsp;&nbsp;props?:&nbsp;{&nbsp;//&nbsp;组件绑定的属性  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[prop:string]?:&nbsp;any;  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style?:&nbsp;string;&nbsp;//&nbsp;行内样式  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;className?:&nbsp;string;&nbsp;//&nbsp;绑定的样式类名  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lifeCycles?:&nbsp;{&nbsp;//&nbsp;生命周期  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[prop:string]?:&nbsp;{  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;'js';&nbsp;//&nbsp;固定值  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source:&nbsp;string;&nbsp;//&nbsp;函数字符串  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};  
&nbsp;&nbsp;children?:&nbsp;Array&lt;&nbsp;IComponentSchema&nbsp;&gt;&nbsp;|&nbsp;string;&nbsp;//&nbsp;子组件列表&nbsp;或&nbsp;文本字符串  
&nbsp;&nbsp;dataSource?:&nbsp;{&nbsp;//&nbsp;数据源  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list:&nbsp;Array&lt;&nbsp;IDateSource&nbsp;&gt;&nbsp;//&nbsp;数据源列表  
&nbsp;&nbsp;};  
&nbsp;&nbsp;actions?:&nbsp;{&nbsp;//&nbsp;页面&nbsp;JS  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;module:&nbsp;{  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;source:&nbsp;string;&nbsp;//&nbsp;页面定义的&nbsp;JS&nbsp;源码字符串  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;"FUNCTION";&nbsp;//&nbsp;固定值  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;list:&nbsp;Array&lt;{  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id:&nbsp;string;&nbsp;//&nbsp;页面所定义的函数名  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title:&nbsp;string;&nbsp;//&nbsp;配置时显示名称&nbsp;与&nbsp;id&nbsp;一致  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&gt;  
&nbsp;&nbsp;};  
&nbsp;&nbsp;bridge?:&nbsp;{&nbsp;//&nbsp;桥接  
&nbsp;&nbsp;imports?:&nbsp;Array&lt;{  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;string;&nbsp;//&nbsp;配置时显示名称  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;"package"&nbsp;|&nbsp;"local";&nbsp;//&nbsp;package:&nbsp;npm&nbsp;包;&nbsp;local:&nbsp;本地文件  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;path:&nbsp;string;&nbsp;//&nbsp;导入的路径 (包名或者本地路径)  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;item:&nbsp;string;&nbsp;//&nbsp;导入的项目  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;useDefault?:&nbsp;boolean;&nbsp;//&nbsp;是否默认导出  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;instance?:&nbsp;string;&nbsp;//&nbsp;实例名，需要注入 service 时需要添加该字段，typescript&nbsp;模式下使用  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&gt;  
&nbsp;&nbsp;};  
&nbsp;&nbsp;inputs:&nbsp;Array&lt;{&nbsp;//&nbsp;页面接口：输入类型  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;string;&nbsp;//&nbsp;输入属性名称  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;string;&nbsp;//&nbsp;数据类型声明  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;defaultValue?:&nbsp;any;&nbsp;//&nbsp;默认值  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&gt;;  
&nbsp;&nbsp;outputs:&nbsp;Array&lt;{&nbsp;//&nbsp;页面接口：事件输出  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name:&nbsp;string;&nbsp;//&nbsp;typescript 类型声明  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type:&nbsp;string;&nbsp;//&nbsp;数据类型声明  
&nbsp;&nbsp;}&gt;;  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;schema?:&nbsp;IComponentMetaSchema&nbsp;//&nbsp;区块时使用，区块需要暴露的组件属性元数据  
&nbsp;&nbsp;}
</code></pre><p>对于需要被搜索引擎爬虫 SEO 的用户，也可以用服务端 SSR 的解决方式。这种方案也可以用来快速查看自己编辑的页面。</p><pre><code class="language-js"> // 伪代码
 function render(_schema) {
  let _arr = []
  _schema.forEach((item) =&gt; {
    let componentName = item.componentName
    if (item.children &amp;&amp; item.children.length) {
      _arr.push(
        h(componentName, item.props, [
          item?.props?.text,
          render(item.children),
        ]),
      )
    } else {
      const text = item?.props?.text || ''
      _arr.push(h(componentName, item.props, text))
    }
  })

  return _arr
}
</code></pre><ul><li><strong>TinyEngine 支持高低代码混合开发。</strong></li></ul><p>高低代码混合开发可以更好地满足业务需求。在企业的应用开发中，往往需要面对快速变化的业务需求，此时，如果全部采用低代码方式进行开发，则可能会因为代码的复杂性而无法快速适应变化。而如果采用高低代码混合的方式，则可以通过低代码进行常规业务的快速开发，对于特殊的业务逻辑，则由专业开发人员通过高代码进行实现，这样就可以更好地满足业务需求的变化。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 在构建应用程序的过程中，提供了下载源代码的功能，使得用户可以在线下进行复杂业务逻辑的调试。这一特点极大地便利了开发者的操作，减少了在线调试和测试的时间和资源消耗，同时也提高了代码的质量和可靠性。通过下载源代码进行调试，用户可以更加灵活地控制应用程序的行为和性能，从而更好地满足业务需求。总之，TinyEngine 的这一特点为用户提供了更多的自主权和灵活性，使得他们可以更加高效地控制应用程序的行为和性能。</p><ul><li><strong>TinyEngine 支持 AI 辅助开发。</strong> &nbsp;</li></ul><p>低代码平台与 AI 的结合具有巨大的发展潜力。这种结合可以在很大程度上提高非专业开发者的开发效率和应用智能化水平。随着 AI 技术的不断发展和低代码平台的不断成熟，二者的结合将会在更多领域内实现更高效、更智能的业务流程和管理模式，带来更大的商业价值。</p><p>低代码平台通过提供易于使用的开发工具和预先构建的模块，简化了应用程序的开发过程。AI 技术则可以帮助应用程序具备更智能、更自适应的特性。通过低代码平台和 AI 的结合，开发者可以更快速、更高效地构建应用程序，并实现更智能化的应用特性。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3acfa3b07927729dbdd65990716f506f4e0.gif" alt="" referrerpolicy="no-referrer"></p><h2>企业关于低代码的需求</h2><ul><li><h3>PDM 元数据电子审批流</h3></li></ul><p>审批流业务场景是现代企业运营中不可或缺的一环。业务流程从某个特定点开始，然后经过一系列的审批节点，完成流程的审批。这些节点通常由不同级别的人员担任，例如主管、经理、财务、法务和总经理等，每个人都扮演着特定的角色和职责。</p><p>假设场景如下：流程发起人 A 启动了一个电子审批流程。这个流程首先会被传递到主管进行审批。在审批过程中，主管会仔细检查初始业务流程信息和其他相关数据，然后决定是否进一步推进流程，或退回给 A 进行修订。如果主管批准了这个流程，那么它将被移交给下一级审批人，也就是经理。在经理的审批环节，他/她也会详查相关数据和信息，并基于这些以及自己的独立判断来做出决策。值得注意的是，尽管经理可以查看到主管填写的一些技术信息，但这些信息并不对财务和法务公开。也就是说，只有经理和总经理可以看到这些技术信息，财务和法务无法获知。经理会根据这些保密信息以及自己的专业判断来决定是否继续推进流程。</p><p>如果经理也批准了该流程，那么它将被送至财务节点进行审批。在审批过程中，财务主要关注经济相关的问题，例如价格、付款方式等等。一旦财务审批通过，流程会被移交给法务进行审批。</p><p>与财务审批类似，法务审批主要关注法律风险和合规性问题。在审批时，法务会仔细检查相关的合同、协议等法律文件，并评估是否存在任何法律风险或合规性问题。一旦法务批准了流程，流程将被移交给总经理进行最后的审批，以完成整个审批流程。 <img src="https://oscimg.oschina.net/oscnet/up-9fc0999e0fce89328d824f66ddf847869ac.png" alt="" referrerpolicy="no-referrer"> 需要注意的是，这种审批流业务场景并不是只有一个，而是有很多个。例如，除了上述的采购流程，还有其他业务流程需要进行审批，比如：数据入库流程、报价流程等等。每个流程都有自己的特点和审批节点数量不一。有些流程可能只需要两三个节点就可以完成审批，有些则可能需要十几个节点才能完成。但是，所有类型的审批流大致相似。如：页面上常见的元素包括表单、表格以及常用的审批组件等。</p><p><strong>技术分析：</strong> 若采用传统的开发方式，每当新增一种流程时，前端开发人员都需要开发所有审批节点的审批页面，并重新进行发布流程。同样地，服务端开发人员也需要重新建立一个审批流，通过特定页面录入各节点审批人，并编写相应的审批流规则。显然，这对于前端和服务端开发人员来说都是十分繁琐的工作。</p><p><strong>解决方案：</strong> &nbsp;基于 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 低代码引擎，开发出一个专为电子审批流设计的低代码平台。然后，将所有与流程相关的组件，如模板、评审记录和流程指引等导入到平台的物料区域。最后，将这个专注于开发审批流的低代码平台集成到 PDM 元数据电子流业务模块中。在低代码平台上，想要开发任意一个流程的审批页面，只需要将流程模板拖入，并在模板中嵌入本流程的表单或表格，即可轻松完成该节点的审批页面，极大地提高了开发效率和便利性！ 服务端也将采用另一种特定于 flow 类型的低代码平台（将在后续内容中详细介绍），以实现对审批流程人员编排。这样，前后端之间的连接就实现了完美的贯通。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a11ab19ac7c4e4cc0c06599cea2390308c9.png" alt="" referrerpolicy="no-referrer"></p><ul><li><h3>Flow 图元编排类型设计器</h3></li></ul><p>图形编排在众多场景中扮演着重要角色，例如流程图、审批流、部署流水线和架构图等。资源编排只是编排的主体变成了云服务资源。</p><p>资源编排遵循基础设施即代码（Infrastructure as Code, IaC）的设计理念，资源编排与以往单独管理每种云服务资源的方式有所不同。通过资源编排设计器，用户无需手动创建多个资源，只需在平台上使用设计器进行拖拽和配置，即可生成模板，并一键部署多个资源。这样，用户可以更加高效地管理和编排云服务资源，提高资源的利用率和部署速度。</p><p>因此，针对资源编排服务场景，我们需要定制一个专用的低代码平台来满足用户的需求。该平台将具备图形化界面，允许用户通过简单的拖拽和配置来创建、修改和删除资源编排模板，而无需编写大量的代码。此外，该平台还将支持一键部署功能，以快速部署多个资源，提高资源编排的效率和速度。</p><p>考虑到需要支持大量的云服务资源，且每个云服务资源需要配置的属性各不相同，因此采用传统开发方式为每种云服务资源开发专门的属性设置页面是不可行的。因此，我们需要一个能够自定义渲染的属性配置方案。通过自定义渲染，用户可以根据不同的云服务资源类型和属性，自由地定义和控制属性页面的交互效果，从而提高属性配置的灵活性和可扩展性。</p><p>同时模板是极为重要的一环，它直接关系到最终资源的部署。因此，模板需要符合特定的标准格式，这就要求画布和属性面板的输入必须能够准确反映到最终的模板中。</p><p>整理出主要的述求：</p><ul><li>整个页面应至少包含以下几部分：资源列表、画布和属性设置面板</li><li>画布应具备核心的拖拽和连线绘图功能，以支持用户直观地进行资源编排</li><li>属性设置面板需要支持自定义配置渲染，以满足不同云服务资源类型和属性的配置需求</li><li>该平台应具备可拓展性，以支持开发出其他能力，满足未来可能出现的新的编排需求</li></ul><p>在分析了上述需求后，我们可以清楚地看到，使用传统开发方式将面临巨大的工作量和现实的实现困难。同时，经过对比发现，资源编排设计器和低代码设计器之间有许多相似之处，例如它们都涉及基础资源、拖拽操作和配置功能，只是在画布区域存在差异。</p><p><strong>解决方案：</strong> TinyEngine 作为一个出色的低代码引擎，通过优秀的整体架构提供了高度自由的定制能力。它允许我们像搭积木一样选择不同的积木来搭建一个专属的设计器。同时，属性面板全部通过 JSON 配置文件进行渲染，无需编写任何代码，灵活而强大。这种开发方式可以大大降低开发成本，提高效率。 该设计器的布局类似于 VS Code，核心模板与功能区域划分清晰明了，易于上手。插件化的架构也使得自由拓展业务相关功能变得轻而易举。 综上所述，我们最终决定使用 TinyEngine 来开发图元编排设计器，以满足资源编排的需求。</p><p><img src="https://oscimg.oschina.net/oscnet/up-83884bfe0dc60af97c83a8fcd38fb3980d5.png" alt="" referrerpolicy="no-referrer"></p><ul><li><h3>其他业务类型的低码平台诉求</h3></li></ul><p>1，跨境电商的低代码平台，旨在方便商家快速装修店铺。商家只需要从平台提供的模板中选择一套适合自己的商品模板，并进行文字和图片的修改，即可快速建立自己的电商网站。此外，该平台还需要具备方便搜索引擎优化（SEO）的功能，让商家的电商网站更容易被潜在客户发现。</p><p>2，随着移动互联网的迅速普及，各种应用程序推送消息的需求日益增长。在这个背景下，APP 厂商只需要使用推送消息平台提供的模板，并简单配置一下推送内容和样式，即可轻松实现消息推送。</p><p>3，运维管理平台是针对企业运营过程中涉及的各种数据和页面进行管理的工具。随着企业运营数据的不断增加，页面变得越来越复杂。其实不同的岗位对于关心的信息也不尽相同。低代码平台的应用可以让不同岗位的员工通过简单的拖拽操作，轻松获取自己需要的数据和信息。这种方式不仅可以提高工作效率，而且还可以降低操作难度，使得更多人可以轻松上手使用。</p><h2>未来展望</h2><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">TinyEngine</a> 专注于为用户提供低代码的基础能力，目前正致力于跟生成式 AI 相结合，与用户共同打造面向未来的应用。</p><h2><strong>其他说明</strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-82d36f2d7d034985e744c65d9c21470bba8.png" alt="" referrerpolicy="no-referrer"></p><p>OpenTiny&nbsp;是一套企业级 Web 应用构建解决方案，提供跨端、跨框架的 UI 组件库，适配 PC 端 / 移动端等多端，支持&nbsp;Vue2 / Vue3 / Angular&nbsp;多技术栈，拥有集成人工智能的低代码引擎，包含主题配置系统 / 中后台模板 / CLI&nbsp;命令行等丰富的效率提升工具，可帮助开发者高效开发 Web 应用。</p><p><strong>核心亮点：</strong></p><ul><li>跨端跨框架：&nbsp;使用 Renderless 无渲染组件设计架构，实现了一套代码同时支持 Vue2 / Vue3，PC / Mobile 端，并支持函数级别的逻辑定制和全模板替换，灵活性好、二次开发能力强</li><li>组件丰富：PC 端有 100+组件，移动端有 30+组件，包含高频组件 Table、Tree、Select 等，内置虚拟滚动，保证大数据场景下的流畅体验，除了业界常见组件之外，我们还提供了一些独有的特色组件，如：Split 面板分割器、IpAddress IP 地址输入框、Calendar 日历、Crop 图片裁切等</li><li>集成人工智能：低代码引擎提供低代码底层的能力，集成人工智能，让 AI 助力用户高效开发，适用于多场景的低代码平台开发。如：资源编排、服务端渲染、模型驱动、移动端、大屏端、页面编排等低代码平台</li><li>配置式组件：&nbsp;组件支持模板式和配置式两种使用方式，适合低代码平台，目前团队已经将 OpenTiny 集成到内部的低代码平台，针对低码平台做了大量优化</li><li>周边生态齐全：&nbsp;提供了基于 Angular + TypeScript 的 TinyNG 组件库，提供包含 10+ 实用功能、20+ 典型页面的 TinyPro 中后台模板，提供覆盖前端开发全流程的 TinyCLI 工程化工具，提供强大的在线主题配置平台 TinyTheme</li></ul><hr><p>欢迎加入 OpenTiny 开源社区。添加微信小助手：opentiny-official 一起参与交流前端技术～</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fopentiny.design%252F" title="https://link.juejin.cn/?target=https%3A%2F%2Fopentiny.design%2F" target="_blank">OpenTiny 官网</a>&nbsp;：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fopentiny.design%252F" title="https://link.juejin.cn/?target=https%3A%2F%2Fopentiny.design%2F" target="_blank">opentiny.design/</a></strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttps%253A%252F%252Fgithub.com%252Fopentiny%252F" title="https://github.com/opentiny/" target="_blank">OpenTiny 代码仓库</a>：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttps%253A%252F%252Fgithub.com%252Fopentiny%252F" title="https://github.com/opentiny/" target="_blank">github.com/opentiny/</a></strong></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fopentiny.design%252Ftiny-vue" title="https://link.juejin.cn/?target=https%3A%2F%2Fopentiny.design%2Ftiny-vue" target="_blank">Vue 组件库</a>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fopentiny.design%252Ftiny-vue" title="https://link.juejin.cn/?target=https%3A%2F%2Fopentiny.design%2Ftiny-vue" target="_blank">opentiny.design/tiny-vue</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fopentiny.design%252Ftiny-ng" title="https://link.juejin.cn/?target=https%3A%2F%2Fopentiny.design%2Ftiny-ng" target="_blank">Angular 组件库</a>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%2F%3Ftarget%3Dhttps%253A%252F%252Fopentiny.design%252Ftiny-ng" title="https://link.juejin.cn/?target=https%3A%2F%2Fopentiny.design%2Ftiny-ng" target="_blank">opentiny.design/tiny-ng</a></p><p>欢迎进入代码仓库 Star🌟TinyVue、TinyNG、TinyCLI~</p><p>如果你也想要共建，可以进入代码仓库，找到&nbsp;<code>good first issue</code>标签，一起参与开源贡献~</p><p><strong>往期文章推荐</strong></p><p><img src="https://oscimg.oschina.net/oscnet/up-e8bd5f9b0f2dedea3b5fcd23ab93a80c124.png" alt="" referrerpolicy="no-referrer"></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttp%253A%252F%252Fmp.weixin.qq.com%252Fs%253F__biz%253DMzU5ODA3OTY5Ng%253D%253D%2526mid%253D2247491605%2526idx%253D1%2526sn%253Db85064d6b81a2a673bc9e1eeea82a1dd%2526chksm%253Dfe4b01aac93c88bc1de779f6e558da7cdd181cec49a1fbdac804b54bab19729cbc45ddf3f104%2526scene%253D21%2523wechat_redirect" title="http://mp.weixin.qq.com/s?__biz=MzU5ODA3OTY5Ng==&amp;mid=2247491605&amp;idx=1&amp;sn=b85064d6b81a2a673bc9e1eeea82a1dd&amp;chksm=fe4b01aac93c88bc1de779f6e558da7cdd181cec49a1fbdac804b54bab19729cbc45ddf3f104&amp;scene=21#wechat_redirect" target="_blank">必不可少的 UI 组件一——组件的基础知识</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttp%253A%252F%252Fmp.weixin.qq.com%252Fs%253F__biz%253DMzU5ODA3OTY5Ng%253D%253D%2526mid%253D2247491250%2526idx%253D1%2526sn%253D66b6840f3f93d415a33b9ade09dcd9b8%2526chksm%253Dfe48ff0dc93f761ba3965380b759b184616d9dc39a903f1bda689037ba0b177c98fb0bae7c38%2526scene%253D21%2523wechat_redirect" title="http://mp.weixin.qq.com/s?__biz=MzU5ODA3OTY5Ng==&amp;mid=2247491250&amp;idx=1&amp;sn=66b6840f3f93d415a33b9ade09dcd9b8&amp;chksm=fe48ff0dc93f761ba3965380b759b184616d9dc39a903f1bda689037ba0b177c98fb0bae7c38&amp;scene=21#wechat_redirect" target="_blank">OpenTiny Vue 3.10.0 版本发布：组件 Demo 支持 Composition 写法，新增 4 个新组件</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttp%253A%252F%252Fmp.weixin.qq.com%252Fs%253F__biz%253DMzU5ODA3OTY5Ng%253D%253D%2526mid%253D2247490886%2526idx%253D1%2526sn%253D3c0fcbe86c01b01e0ed876904743ca76%2526chksm%253Dfe48fcf9c93f75ef621391689021922451ae5621c75f0c5c3024352d9df8d0f18139095865f9%2526scene%253D21%2523wechat_redirect" title="http://mp.weixin.qq.com/s?__biz=MzU5ODA3OTY5Ng==&amp;mid=2247490886&amp;idx=1&amp;sn=3c0fcbe86c01b01e0ed876904743ca76&amp;chksm=fe48fcf9c93f75ef621391689021922451ae5621c75f0c5c3024352d9df8d0f18139095865f9&amp;scene=21#wechat_redirect" target="_blank">前端 Vuer，请收好这份《Vue 组件单元测试》宝典</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttp%253A%252F%252Fmp.weixin.qq.com%252Fs%253F__biz%253DMzU5ODA3OTY5Ng%253D%253D%2526mid%253D2247490622%2526idx%253D1%2526sn%253Df928726a3608ebf0999529187dc2a22c%2526chksm%253Dfe48fd81c93f7497608ed97ea0d60d12b61d03c062ebda49c84a9c4e3cdb0550e25930df9aa1%2526scene%253D21%2523wechat_redirect" title="http://mp.weixin.qq.com/s?__biz=MzU5ODA3OTY5Ng==&amp;mid=2247490622&amp;idx=1&amp;sn=f928726a3608ebf0999529187dc2a22c&amp;chksm=fe48fd81c93f7497608ed97ea0d60d12b61d03c062ebda49c84a9c4e3cdb0550e25930df9aa1&amp;scene=21#wechat_redirect" target="_blank">OpenTiny 前端组件库正式开源啦！面向未来，为开发者而生</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttp%253A%252F%252Fmp.weixin.qq.com%252Fs%253F__biz%253DMzU5ODA3OTY5Ng%253D%253D%2526mid%253D2247490528%2526idx%253D1%2526sn%253D911d84e6bb275e6125464f07643c1150%2526chksm%253Dfe48fa5fc93f734911c4f44a5f4e2d6c4e29e00ad68cae35c4edc3771de1cbf65cd5f2a8a224%2526scene%253D21%2523wechat_redirect" title="http://mp.weixin.qq.com/s?__biz=MzU5ODA3OTY5Ng==&amp;mid=2247490528&amp;idx=1&amp;sn=911d84e6bb275e6125464f07643c1150&amp;chksm=fe48fa5fc93f734911c4f44a5f4e2d6c4e29e00ad68cae35c4edc3771de1cbf65cd5f2a8a224&amp;scene=21#wechat_redirect" target="_blank">从自研走向开源的 TinyVue 组件库</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.juejin.cn%3Ftarget%3Dhttp%253A%252F%252Fmp.weixin.qq.com%252Fs%253F__biz%253DMzI2MDE3MTM4MA%253D%253D%2526mid%253D2701520396%2526idx%253D1%2526sn%253Dbd42224d212cb4b78ffcbca98f463db8%2526chksm%253Dce9cfd17f9eb7401d41b21639f80b09846a1c44b237c6733b809aeb2259c3d2521c88c490e7a%2526scene%253D21%2523wechat_redirect" title="http://mp.weixin.qq.com/s?__biz=MzI2MDE3MTM4MA==&amp;mid=2701520396&amp;idx=1&amp;sn=bd42224d212cb4b78ffcbca98f463db8&amp;chksm=ce9cfd17f9eb7401d41b21639f80b09846a1c44b237c6733b809aeb2259c3d2521c88c490e7a&amp;scene=21#wechat_redirect" target="_blank">我要做开源，提交我的第一个 PR</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 10:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6769809/blog/10112556</guid>
            <link>https://my.oschina.net/u/6769809/blog/10112556</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenTiny 低代码开发引擎子项目 TinyEngine 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>2023 年 9 月 21 日，华为全联接大会 2023 「开源创新，共筑智能世界」论坛在上海前滩香格里拉酒店圆满落幕。在此次开源分论坛上，华为云开源业务总经理邓明昆进行了题为《开源协同创新，加速云计算应用》的分享。</p><p><img alt="" height="333" src="https://oscimg.oschina.net/oscnet/up-117a8ef69eb67291660e465882856e89581.webp" width="500" referrerpolicy="no-referrer"></p><p><em>华为云开源业务总经理，邓明昆</em></p><p>邓明昆在分论坛演讲中提到：云原生技术以「分布式、松耦合、高韧性」等特征在企业基础架构升级及应用开发上展现出巨大的价值，越来越多企业开始基于云原生构建面向未来的创新服务。华为云深耕云原生，坚持开放共享，协同推动云原生技术创新与生态发展，共创新价值，释放数字生产力。 截止到目前，华为云已经开源了多个开源项目，并吸引了社区广大开发者的深度参与和支持。</p><p><strong>1.聚焦分布式云原生技术设施与云原生应用技术栈开源</strong></p><p>Kurator 整合多云、多集群统一编排、统一调度、统一流量治理，统一监控运维、边云协同等核心能力，助力广大开发者快速搭建分布式云原生平台，实现跨云跨边的一致性分布式云原生应用体验。</p><p>与此同时，华为云还将云原生技术栈开源，帮助开发者快速构建云原生应用。通过云原生应用技术栈，开发者可以专注业务实现，应用一跳入云，实现业务敏捷、高效创新。</p><p><img alt="" height="333" src="https://oscimg.oschina.net/oscnet/up-2509296725ce8927bcbc81f4e5c44bb5cfc.webp" width="500" referrerpolicy="no-referrer"></p><p><strong>2.Volcano 特性升级，新能力释放大模型计算潜力</strong></p><p>大模型时代，以 GPU 为核心的算力供给已成为大模型产业发展的关键基础设施，用户对于 GPU 资源的使用存在资源利用率低、资源分配不灵活等痛点问题，必须采购大量冗余的异构算力才能满足业务需求，异构算力成本高昂，为企业的发展带来很大的负担。</p><p>基于此现状，邓明昆在演讲中向大家介绍了 Volcano 的两个重点特性：<strong> GPU 调度与隔离以及 JobFlow 工作流编排引擎支持。</strong></p><ul><li>通过 GPU 资源多任务共享，GPU 资源按比例分配等技术来大幅提升算力资源的利用率，降低算力成本。</li><li>通过支持 JobFlow 轻量任务流编排引擎，帮助开发者简化多个任务并行与依赖关系的管理，大幅度提升整体计算效率。</li></ul><p><strong>3. OpenTiny 低代码开发引擎子项目 TinyEngine 正式发布，AI 辅助加速应用创新</strong></p><p>OpenTiny 作为开源的跨端、跨框架、跨版本企业级前端组件方案，可以帮助开发者快速构建极致体验的云原生应用。在本次大会中，邓明昆正式对外发布了低代码开发引擎子项目 TinyEngine。</p><p>TinyEngine 低码引擎通过接入华为云盘古大模型等各类大模型的强大能力，使得开发者通过文本交互或者语音对话就可以完成 WEB 应用的开发，应用技术门槛大幅降低，开发效率大幅提升，实现企业应用的高效敏捷、极致体验。</p><p>邓明昆强调：</p><p>「华为云坚持深耕云原生，坚持开源开放，我们希望通过开源、开放，能够快速凝聚企业、开源组织、学术机构、以及广大开发者一起推动云原生技术共享，以及云原生产业的标准化，真正实现云原生产业创新与生态发展，共创新价值，释放数字生产力！」</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 10:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259135</guid>
            <link>https://www.oschina.net/news/259135</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CentOS Integration SIG 成立]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">CentOS 董事会已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.centos.org%2F2023%2F09%2Fcentos-board-meeting-recap-september-2023%2F" target="_blank">批准</a>成立 CentOS Integration Special Interest Group (SIG)。该小组旨在帮助那些在 Red Hat Enterprise Linux (RHEL) 或特别是其上游 CentOS Stream 上构建产品和服务的人员，验证其能否在未来版本中继续运行。</span></p><p><span style="color:#000000">红帽 RHEL CI 工程师 Aleksandra Fedorova 在相关</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.centos.org%2Fpipermail%2Fcentos-devel%2F2023-August%2F143077.html" target="_blank">提案</a><span style="color:#000000">中提出：</span></p><blockquote><p style="text-align:start"><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span>我想提议成立一个新的特别兴趣小组，专注于围绕 CentOS Stream 的集成工作。</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><span style="color:#000000">集成就是验证构建在 RHEL 或 CentOS Stream 基础上的产品和服务能否在 CentOS Stream 和下一个 RHEL 版本上继续运行，并且不会因软件包更新而中断。</span></p><p><span style="color:#000000">由于 RHEL 内容只有在发布后才可用，因此&nbsp;</span>RHEL-based<span>&nbsp;</span><span style="color:#000000">服务传统上使用的是 catching-up 集成模式：人们必须在更新发布后调整其产品和服务，以便在新的 RHEL 上运行。调整服务需要时间，会占用受支持的 RHEL 生命周期。这也减少了我们处理破坏性变更的选择。</span></p><p><span style="color:#000000">CentOS Stream 提供了一种实现前瞻性集成的方法：你可以在开发过程中，在变更发布到 CentOS Stream 或 RHEL 软件源之前，尽早进行集成。这样，我们就可以防止或至少为任何可能通过 CentOS Stream 或 RHEL 更新发布的破坏性变更做好准备。</span></p></blockquote><p><span style="color:#000000">此&nbsp;SIG 的目的在于，在 CentOS Stream 更新发布到 CentOS 镜像之前，提供一个共享空间来开发和维护有关协作控制和测试 CentOS Stream 更新的工具和知识库。包括 package-level&nbsp;和 compose-level 集成。</span></p><p><span style="color:#000000">SIG 计划将记录其他 SIG 使用的现有集成工作流程；确定常见问题；管理、开发和推广 CentOS Stream 的第三方 CI；以及开发集成工具包。</span></p><p><span style="color:#000000">在 SIG 获得董事会批准之后，Aleksandra Fedorova 还发帖<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscussion.fedoraproject.org%2Ft%2Fcentos-integration-sig-everyone-is-welcome%2F90378" target="_blank">表示</a>，该小组正在建立工具和沟通渠道，欢迎大家加入并探讨合作方式。</span></p><p><img height="315" src="https://oscimg.oschina.net/oscnet/up-3e6928d626dc3ff9422b7d4ff53f37fa148.png" width="500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 09:07:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259120/centos-integration-sig</guid>
            <link>https://www.oschina.net/news/259120/centos-integration-sig</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 开源华容道（滑块拼图）游戏]]>
            </title>
            <description>
                <![CDATA[<pre class="clean txt-style">这是一款 linux 平台下的滑块拼图游戏. 详细文档参见 doc/slide.pdf.
游戏按前后台模式设计. 后台负责游戏规则实现和流程控制, 前台负责与用户交互. 
前端开发者可以基于软件包内的游戏引擎部分开发不同的用户界面.

软件包内包含 3 个部分:

1) 游戏引擎
2) ncurses 的前端
3) gtk3 的前端

编译运行方法为:

1) 游戏引擎 (无法直接运行)
make

2) 基于 ncurses 的前端
make sp_cs
./sp_cs

3) 基于 gtk3 的前端
make sp_gtk
./sp_gtk

依赖:

ncurses
gtk3
pkg-config</pre>
]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 07:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/tfcolin/slide</guid>
            <link>https://gitee.com/tfcolin/slide</link>
        </item>
        <item>
            <title>
                <![CDATA[PHP、.NET 和 Java 到底谁遥遥领先，看评论区见高低！]]>
            </title>
            <description>
                <![CDATA[<h1 class="header article-title"><a href="https://www.oschina.net/question/2720166_2331057">PHP、.NET 和 Java 到底谁遥遥领先，看评论区见高低！</a><div class="ui red label horizontal" data-tooltip="置顶">顶</div></h1><div class="extra ui horizontal list meta-wrap"><div class="item"><a href="https://my.oschina.net/hardbone" class="__user"><span>局</span></a> 发布于，昨天 12:32
                    </div><div class="item">阅读 3K+</div><div class="item collect-btn " data-id="2331057" data-user-id="2720166" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags="PHP"><i class="star outline icon"></i> 收藏 <span data-collect-count="" data-id="2331057" data-obj-type="2">3</span></div><div class="item comment-count"><a href="https://www.oschina.net/question/2720166_2331057#comments" class="normal"><i class="comment outline icon"></i> 答案 <span data-article-reply-count="">12</span></a></div></div><div class="tags"><a class="ui horizontal label" href="https://www.oschina.net/question/tag/php" target="_blank"><img src="https://static.oschina.net/uploads/logo/php_C12WY.png" referrerpolicy="no-referrer">PHP</a></div><div class="content" id="articleContent"><p class="ad-wrap"><a data-traceid="question_detail_above_text_link_ad" data-tracepid="question_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？&gt;&gt;&gt; <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></p><p>上周末将《<a href="https://www.oschina.net/news/257647/an-internet-of-php" target="_blank" rel="nofollow">PHP 最新统计数据：市场份额超 7 成、CMS 中的王者</a>》这篇新闻挂到了置顶位，并且修改了标题——《PHP 遥遥领先》。</p><p><img src="https://static.oschina.net/uploads/space/2023/0922/121304_DUFP_2720166.png" referrerpolicy="no-referrer"></p><p>「编程语言一哥」PHP 不负众望，水友们的评论马上干到了上百条。春哥<a href="https://my.oschina.net/easysoft" target="_blank" rel="nofollow"></a><a href="https://my.oschina.net/easysoft" target="_blank" rel="nofollow">@开源春哥</a> 甚至让我长期置顶这篇新闻：</p><blockquote><p><img height="464" src="https://static.oschina.net/uploads/space/2023/0922/120758_eC7B_2720166.png" width="1747" referrerpolicy="no-referrer"></p></blockquote><p>刚好 Java 前天也发布了重大更新<strong>&nbsp;<a href="https://www.oschina.net/news/258730/jdk-21-lts-ga" target="_blank" rel="nofollow">Java 21 LTS</a></strong>，上周&nbsp;<strong>.NET 8&nbsp;也发布了<a href="https://www.oschina.net/news/258091/performance-improvements-in-dot-net-8" target="_blank" rel="nofollow">首个 RC</a></strong>。</p><p>下面就来看看三大编程语言金刚的评论区表现。</p><p><img height="368" src="https://oscimg.oschina.net/oscnet/up-56c5275191fd70caf6787c4a196ed4b4eee.png" width="1298" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-2229a1117aad67bb82de3971896f8a2c3ab.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-5f055ef0241f6ea1c078a62eee16e4f84fd.png" referrerpolicy="no-referrer"></p><p>看到这，一眼高下立辨了吧？</p><p>不服？继续看各自的精彩评论：</p><ul><li><strong>.NET</strong></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-376d055216fd9aa85439f8eb344a71c3d06.png" referrerpolicy="no-referrer"></p><ul><li><strong>Java</strong></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-1c44bba64b7ddae051509774c0982fb8ad8.png" referrerpolicy="no-referrer"></p><ul><li><strong>PHP</strong></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-52b51e937e44bdbbd46d14a2716a1c39cf6.png" referrerpolicy="no-referrer"></p><p>好了，不多说了。Sir，this way——</p><ul><li><a href="https://www.oschina.net/comment/news/258091" target="_blank" rel="nofollow">.NET 8 性能大幅提升，比 .NET 7 遥遥领先</a></li><li><a href="https://www.oschina.net/comment/news/258730" target="_blank" rel="nofollow">Java 21 / JDK 21 (LTS) GA</a></li><li><a href="https://www.oschina.net/comment/news/257647" target="_blank" rel="nofollow">PHP 最新统计数据：市场份额超 7 成、CMS 中的王者</a></li></ul></div><div class="poll-wrap"></div><div class="additional-remarks"></div><div class="ui basic center aligned segment action"><div class="ui big buttons"><a class="ui basic button collect-btn hover" data-id="2331057" data-user-id="2720166" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags="PHP"><i class="star outline icon"></i>收藏 (<span data-collect-count="" data-id="2331057" data-obj-type="2">3</span>)</a><div class="ui basic dropdown share button osc-share dropdown-share" data-tag="share-question"><i class="share icon"></i><span>分享</span><div class="menu"><a class="item" data-platform="weibo" data-value="weibo"><i class="weibo icon"></i>微博</a><a class="item" data-platform="qq" data-value="qq"><i class="qq icon"></i>QQ</a><a class="item" data-platform="wechat" data-value="wechat"><i class="weixin icon"></i>微信</a></div></div></div><div class="ui basic segment"><a class="ban" ban-report="" data-id="2331057" data-obj-type="2" data-url="https://www.oschina.net/question/2720166_2331057"><i class="flag red icon"></i>举报</a></div></div>
            ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 04:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/question/2720166_2331057</guid>
            <link>https://www.oschina.net/question/2720166_2331057</link>
        </item>
        <item>
            <title>
                <![CDATA[Bun v1.0.3 发布，Zig 编写的 JavaScript 运行时]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>Bun 发布了其最新版本 v1.0.3，这是一个集 JavaScript 运行时、打包器、转译器和包管理器于一体的工具。这次的更新不仅修复了众多已知的问题，还引入了一系列令人期待的新功能。</p><p>首先，Bun 在这个版本中增加了对 TypeScript 的<span>&nbsp;</span><code>emitDecoratorMetadata</code><span>&nbsp;</span>的支持，这意味着开发者现在可以在 Bun 中无缝地使用 Nest.js 这样的框架。Nest.js 是 Node.js 生态系统中的一个受欢迎的框架，而 Bun 对其的支持无疑将进一步扩大其在开发者社区中的影响力。</p><p>此外，Bun 还引入了对<span>&nbsp;</span><code>module.parent</code><span>&nbsp;</span>的支持。这是 Node.js 中的一个特性，允许开发者确定一个模块是直接运行还是被另一个模块所需。这个功能的引入进一步增强了 Bun 与 Node.js 的兼容性。</p><p>在私有 npm 仓库的支持方面，Bun 也做了大量的工作。现在，它已经与 Azure Artifacts 和 JFrog Artifactory 这样的私有 npm 仓库实现了更好的兼容性。用户可以使用<span>&nbsp;</span><code>bunfig.toml</code><span>&nbsp;</span>文件来配置这些私有仓库，这为开发者提供了更大的灵活性。</p><p>值得一提的是，应广大用户的反馈，Bun 决定默认关闭<span>&nbsp;</span><code>[0.5ms] env loaded</code><span>&nbsp;</span>消息。这是一个小改动，但它反映了 Bun 对用户反馈的重视。</p><p>在与 Node.js 的兼容性方面，Bun 也做了大量的工作。这次的更新中，Bun 实现了<span>&nbsp;</span><code>console.Console</code><span>&nbsp;</span>构造函数，并修复了环境变量处理中的问题。这些改进都是为了确保 Bun 能够为开发者提供与 Node.js 一致的开发体验。</p><pre><code class="language-javascript">import { Console } from "console";
import { createWriteStream } from "fs";

const writer = new Console({ stdout: createWriteStream("log.txt") });

writer.log("hello");
writer.log("world", { x: 2 });
</code></pre><p>此外，Bun 还修复了一系列已知的问题。其中包括<span>&nbsp;</span><code>request.json()</code><span>&nbsp;</span>中的一个问题，以及与<span>&nbsp;</span><code>bun pm rm cache</code><span>&nbsp;</span>命令相关的一个问题。这些修复都是为了确保 Bun 能够为开发者提供一个稳定和可靠的开发环境。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 03:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259198/bun-1-0-3-released</guid>
            <link>https://www.oschina.net/news/259198/bun-1-0-3-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Windows 版 AI Copilot 将于 9 月 26 日推出]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">微软<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.microsoft.com%2Fblog%2F2023%2F09%2F21%2Fannouncing-microsoft-copilot-your-everyday-ai-companion%2F" target="_blank">宣布</a>将发布统一的人工智能助手 Copilot，称之为「Microsoft Copilot」；可在 Windows 11、Microsoft 365 以及 Edge 和必应的网络浏览器中使用。</span></p><p><span style="color:#000000"><img alt="" height="281" src="https://static.oschina.net/uploads/space/2023/0922/114210_h1cO_4252687.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">公告指出，Copilot 将作为 Windows 11 免费更新的一部分，从 9 月 26 日开始以早期形式推出；并将于今年秋季在必应、Edge 和 Microsoft 365 Copilot 上推出。</span></p><ul><li><span style="color:#000000">下一个 Windows 11 更新拥有 150 多项新功能。为 Windows PC 带来强大的 Copilot 功能和全新的人工智能体验，如画图、照片、剪贴板等应用程序。</span></li><li><span style="color:#000000">必应将增加对 OpenAI 最新 <a href="https://www.oschina.net/news/259053/openai-dall-e-3">DALL.E 3</a> 模型的支持，并根据用户的搜索历史提供更加个性化的答案，还将提供全新的人工智能购物体验，以及更新必应聊天企业版，使其更具移动性和可视化。DALL.E 3&nbsp;是 OpenAI 刚推出的最新图像生成 AI 模型，该模型本身已升级包括生成嵌入图像中的文本的能力，并且能够更好地理解用户对图像中对象之间关系的自然语言描述。</span></li><li><span style="color:#000000">Microsoft 365 Copilot 将于 2023 年 11 月 1 日与 Microsoft 365 Chat (曾用名 Business Chat) 一起面向企业客户全面推出。Microsoft 365 Chat 是一款全新的人工智能助手，可以梳理你工作中的所有数据，包括电子邮件、会议、聊天、文档等，还有网络。</span></li></ul><p><span style="color:#000000">Windows 中的 Copilot 集成提供的新功能之一是"Sound Like Me"，即 Copilot AI 可以扫描和分析你的写作风格，并在 Microsoft Outlook 中为你撰写电子邮件。微软方面还演示了新的 Windows 版 Copilot，类似于其当前的开放式人工智能 Bing Chat 应用界面，右侧栏允许用户与 Copilot 对话，并选择不同的选项。</span></p><p><span style="color:#000000">Microsoft 365 总经理 Colette Stallbaumer 在活动中<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fventurebeat.com%2Fai%2Fmicrosoft-announces-ai-copilot-for-windows-coming-september-26th%2F" target="_blank">发言</a>称，计划于 11 月 1 日推出的新 Microsoft 365 Copilot 可以跨多个网络源实时执行自己的市场研究，为员工提供准确的最新信息。「你很快就会无法想象没有它的生活。」</span></p><p><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.microsoft.com%2Fblog%2F2023%2F09%2F21%2Fannouncing-microsoft-copilot-your-everyday-ai-companion%2F" target="_blank">查看官方博客</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 03:41:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259065/microsoft-copilot-windows</guid>
            <link>https://www.oschina.net/news/259065/microsoft-copilot-windows</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[思科 280 亿美元收购 Splunk]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>思科公司今日宣布，将以每股 157 美元的现金收购网络安全软件公司 Splunk，交易总金额约为 280 亿美元。</p><p>收购交易完成后，Splunk 总裁兼 CEO Gary Steele 将加入思科的高级领导团队，向思科董事长兼 CEO 查克・罗宾斯 (Chuck Robbins) 汇报工作。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bfa94442f47d5f037a2aa360a512186ccfd.png" referrerpolicy="no-referrer"></p><p>Splunk 创建于 2003 年，总部位于旧金山，是一家网络安全公司，<strong>帮助企业监控和分析其数据，以最大限度地减少黑客攻击的风险，并更快地解决一些技术问题。</strong></p><p>罗宾斯对此表示：「我们很高兴能让思科和 Splunk 走到一起。两家公司合并后，将有能力推动下一代以人工智能（AI）为基础的安全和监控。从威胁检测和响应，到威胁预测和预防，我们将帮助各种规模的组织更安全、更具弹性。」</p><p>Splunk 总裁兼 CEO Gary Steele 称：「与思科的合并代表着 Splunk 下一阶段的成长之旅，这将加快我们的使命，帮助世界各地的组织变得更具弹性，同时为股东提供更多价值。」</p><p>思科表示，在这笔交易完成后的第一个财年，预计将推动公司实现正现金流和毛利率增长，并在第二年实现每股收益增长（基于非美国通用会计准则）。此外，它还将加快思科的营收和毛利率增长。</p><p>这笔交易不会影响思科之前宣布的股票回购计划和分红计划。目前，该交易已获得思科和 Splunk 董事会的一致批准，预计将在 2024 年第三季度末完成。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 03:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259064/cisco-to-acquire-splunk</guid>
            <link>https://www.oschina.net/news/259064/cisco-to-acquire-splunk</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visopsys 0.92 发布，小型操作系统]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">Visopsys 是一个 PC 机的操作系统，系统小型、快速而且开源。有着丰富的图形界面、抢先式多任务机制以及支持虚拟内存。Visopsys 视图兼容很多操作系统，但并不是他们的克隆版本。Visopsys 0.92 现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.osnews.com%2Fstory%2F137195%2Fvisopsys-0-92-released%2F" target="_blank">发布</a>，此维护版本引入了多任务处理程序、文件系统、文本编辑器和网络程序的可用性和稳定性改进，以及许多错误修复。</span></p><p><span style="color:#000000">具体更新内容包括：</span></p><ul><li><span style="color:#000000">添加了对 64 位 EXT 文件系统的支持（read-only，和以前一样）。</span></li><li><span style="color:#000000">实施了一系列步骤来更改内核的多任务处理程序以使用软件任务切换，而不是使用处理器功能。这是添加 x86_64 版本的先决条件。</span><ol><li><span style="color:#000000">实现了 contextSwitch() 函数。</span></li><li><span style="color:#000000">添加了一个「collector」线程来完成清理已完成进程的工作，而不是在调度程序本身内进行。</span></li><li><span style="color:#000000">取消了 x86 IDT &nbsp;task gates 的使用，并删除了多任务程序的调度程序进程并将其转换为中断处理程序。</span></li></ol></li><li><span style="color:#000000">更新了「edit」文本编辑器程序以添加「New」和「Save As」菜单项，使其更符合其他编辑器使用的惯例。当在没有文件名的情况下调用或创建「New」文档时，「Save」菜单项将被禁用。停止为未保存文档使用临时文件。</span></li><li><span style="color:#000000">添加了一个窗口库「cancel」对话框，用于停止正在进行的操作。</span></li><li><span style="color:#000000">由于通过 TCP 连接可能会阻塞相当长的时间，因此网络程序现在使用可以通过新的「cancel」对话框终止的连接线程。</span></li><li><span style="color:#000000">为数据包嗅探器添加了过滤（例如仅 TCP、仅 ARP 等）。默认情况下，显示所有网络数据包。左侧面板底部的一个新按钮将弹出一个对话框窗口，允许用户（取消）选择要显示的各种类型的数据包。</span></li><li><span style="color:#000000">添加了「errno」程序来打印与错误代码相关的错误消息。</span></li><li><span style="color:#000000">更新了内核的 MD5 hashing 函数以（正确）匹配更现代的 SHA1 和 SHA256 代码的用法和行为。</span></li><li><span style="color:#000000">删除了「md5」程序，并将其替换为「md5pass」和「md5sum」程序，分别用于 hashing 字符串和文件。</span></li><li><span style="color:#000000">在 kernelFile.c 中的 freeEntries 列表中添加了一个锁。</span></li><li><span style="color:#000000">在目录 fileEntry 结构中添加或删除条目列表时添加了锁定。</span></li><li><span style="color:#000000">添加了标准 C 库函数 strndup()。</span></li><li><span style="color:#000000">向 C 库添加了全局错误字符串表，并将 strtol() 和 family 的定义从 &lt;stdio.h&gt; 移至 &lt;stdlib.h&gt;。</span></li><li><span style="color:#000000">更改了「test」程序的 file_ops 测试以在 /temp 中创建其临时目录，以便即使在只读启动磁盘上它也可以默认工作。</span></li><li><span style="color:#000000">已修复：VmWare 虚拟 SATA 磁盘的 SATA 驱动程序问题。初始磁盘枚举期间 SATA AHCI DMA 模式设置出错。</span></li><li><span style="color:#000000">已修复：创建缩略图或单击多个图像时 Jpeg 加载和/或调整图像大小的问题。在许多情况下，创建了缩略图，但&nbsp;View 程序在加载缩略图时会报错。</span></li><li><span style="color:#000000">已修复：从只读文件系统 (CD) 启动时，按 PrtScn 可能会导致页面错误，并在控制枱上显示错误消息，显示「文件系统是只读的」和「无法打开 [文件] 进行写入」。</span></li><li><span style="color:#000000">已修复：当从只读介质/磁盘（例如 CD/DVD）启动时，单击程序窗口中的文本编辑器时，会显示错误对话框「Error -11 loading fil」。</span></li><li><span style="color:#000000">已修复：挂载新文件系统时，它会出现在目录列表中按字母顺序排序的其他项目之前。最近安装的文件系统始终作为其安装点父目录中的第一个条目插入，因为尚未设置文件名。</span></li><li><span style="color:#000000">已修复：内核 API 在 high 32 bits 中返回不正确的 64 位值。例如，「ls」命令显示的空闲字节值和「ping」命令显示的时间值显然是错误的。</span></li><li><span style="color:#000000">已修复：尝试遍历空窗口容器可能会导致「Can’t allocate zero bytes」错误被记录到控制枱，例如在首次启动屏幕上切换语言后。</span></li><li><span style="color:#000000">修复了使用「clang」编译器构建时产生的一些警告。</span></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 02:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259188/visopsys-0-92-released</guid>
            <link>https://www.oschina.net/news/259188/visopsys-0-92-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IntelliJ IDEA 2023.3 EAP 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="background-color:#ffffff; color:#19191c">第一个 IntelliJ IDEA 2023.3 EAP 版本现已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fidea%2F2023%2F09%2Fintellij-idea-2023-3-eap%2F" target="_blank">发布</a>，此版本提供了一系列 UI/UX 增强功能和对 GitLab snippets 的支持，以及对索引过程和 IDE 启动速度的改进。</span></p><div style="text-align:start"><h4 style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>用户体验</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4></div><div style="text-align:start"><p style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>在 default viewing 模式下隐藏主工具栏的选项</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p></div><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>提供了一个选项，可以在使用 IDE 的 default viewing 模式时隐藏主工具栏，与在旧 UI 中一样。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b7dc9e77ae4c9a387497b2b1aaed16f8342.gif" width="500" referrerpolicy="no-referrer"></p><div style="text-align:start"><p style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>默认工具窗口布局选项&nbsp;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p></div><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>随着 IntelliJ IDEA 2023.1 的发布，引入了保存多个工具窗口布局并在它们之间切换的功能，从而增强了工作区的可定制性。在第一个 IntelliJ IDEA 2023.3 EAP 版本中，通过引入「Default layout」选项来扩展此功能，该选项提供了一种将工作区的外观恢复为其默认状态的快速方法。此布局不可自定义，可通过 Window | Layouts 访问。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><img height="453" src="https://oscimg.oschina.net/oscnet/up-e2d257524a8a33a36598782f371f51a2102.png" width="1124" referrerpolicy="no-referrer"></p><div style="text-align:start"><p style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>默认情况下编辑器选项卡的彩色编码高亮显示</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p></div><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>为了增强用户在编辑器中同时处理多种文件类型时的导航体验，此版本为编辑器选项卡引入了默认的彩色编码高亮显示，与项目工具窗口中的显示效果一致。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><img height="201" src="https://oscimg.oschina.net/oscnet/up-c98835bb1dc0b2b4af3bfa4ebfcdcafe2fb.png" width="500" referrerpolicy="no-referrer"></p><p><img height="202" src="https://oscimg.oschina.net/oscnet/up-d022110fecd232c86aa85a82ece1086e4f5.png" width="500" referrerpolicy="no-referrer"></p><div style="text-align:start"><h3 style="margin-left:0; margin-right:0"><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>macOS 的新产品图标&nbsp;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></h3></div><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>随着 IntelliJ IDEA 2023.3 EAP 的发布，重新设计了适用于 macOS 的 IntelliJ IDEA 图标，使其符合操作系统的标准样式指南。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p><img height="200" src="https://oscimg.oschina.net/oscnet/up-72677c825eb94ddada25bae58e9e2446b46.png" width="500" referrerpolicy="no-referrer"></p><div style="text-align:start"><h4 style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>Java</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4></div><div style="text-align:start"><p style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>Java 21 支持</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p></div><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>此版本已经成功集成了对最新<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenjdk.org%2Fprojects%2Fjdk%2F21%2F" target="_blank">Java 21</a>功能的支持。包括虚拟线程、记录模式、<code>switch</code>表达式的模式匹配和序列集合等重要新增功能，以及字符串模板、作用域值等新引入语言功能的预览。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><img height="200" src="https://oscimg.oschina.net/oscnet/up-a93c5663612262c7296f7bdd9744894e4cd.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start"><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-f85dd5121e4880c4e77bc8598b7d675c9cf.gif" width="500" referrerpolicy="no-referrer"></p><div style="text-align:start"><h4 style="margin-left:0px; margin-right:0px"><img height="200" src="https://oscimg.oschina.net/oscnet/up-0de0b47d00eb8fd6847932d699311a2b003.png" width="500" referrerpolicy="no-referrer"></h4><h4 style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>版本控制系统</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4></div><div style="text-align:start"><p style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>支持 GitLab snippets</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p></div><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>为了扩展 IntelliJ IDEA 2023.2 版本中引入的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fblog%2F2023%2F07%2F26%2Fgitlab-support-in-jetbrains-ide%2F" target="_blank">GitLab 集成</a>，此版添加了对<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.gitlab.com%2Fee%2Fuser%2Fsnippets.html" target="_blank">GitLab snippets</a>的支持。用户现在可以直接在 IDE 中创建公共或私有代码片段。&nbsp;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><img alt="" src="https://oscimg.oschina.net/oscnet/up-5825979606f6bf31e3bc766b85211395910.gif" width="500" referrerpolicy="no-referrer"></p><div style="text-align:start"><h4 style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>Performance</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4></div><div style="text-align:start"><p style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>默认启用共享 JDK 索引的下载&nbsp;</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p></div><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>IntelliJ IDEA 将在后台无缝连接到专用资源，自动获取并应用 JDK 的共享索引。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>有关此 EAP 版本中的更改的完整列表，可阅读<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Farticles%2FIDEA-A-2100661680%2FIntelliJ-IDEA-2023.3-EAP-1-233.6745.305-build-Release-Notes" target="_blank">发行说明</a>。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 22 Sep 2023 02:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259186/intellij-idea-2023-3-eap</guid>
            <link>https://www.oschina.net/news/259186/intellij-idea-2023-3-eap</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ubuntu 23.10 Beta]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>Ubuntu 23.10 "Mantic Minotaur" 首个 Beta 已发布，正式版计划于 10 月 12 日推出。</p><p>下载地址：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Freleases.ubuntu.com%2F23.10%2F" target="_blank">https://releases.ubuntu.com/23.10/</a></u></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-541beee395c5d41cd656c0e10c9a6540913.png" referrerpolicy="no-referrer"></p><p><strong>主要变化</strong></p><ul><li>内核采用最新的 Linux 6.5 系列</li><li>默认启用多代 LRU 页面回收</li><li>支持 idmapped Ceph 挂载</li><li>桌面环境采用 GNOME 45</li><li>使用 Wayland 时默认启用原生 Wayland 模式会话，以获得更快的浏览体验</li><li>支持基于 TPM 的全磁盘加密</li><li>预装采用 Flutter 编写的全新应用商店 "App Center"</li><li>使用 Netplan 作为 NetworkManager 的默认设置存储后端</li></ul><p>此前曾报道过上文提到的部分变化：</p><ul><li><a href="https://www.oschina.net/news/258253/ubuntu-23-10-zfs-install" target="_blank">Ubuntu 23.10 安装工具恢复支持 ZFS 文件系统</a></li><li><a href="https://www.oschina.net/news/257464/ubuntu-23-10-tpm-fde" target="_blank">Ubuntu 23.10 支持基于 TPM 的全磁盘加密</a></li><li><a href="https://www.oschina.net/news/247869/ubuntu-23-10-new-app-store-deb-support" target="_blank">Ubuntu 23.10 引入新的「应用商店」，优先支持 Snap 格式</a></li><li><a href="https://www.oschina.net/news/256910/gnome-45-arrives-in-ubuntu-23-10" target="news">Ubuntu 23.10 每日构建版已搭载 GNOME 45</a></li><li><a href="https://www.oschina.net/news/250357/ubuntu-noto-fonts-change" target="_blank">Ubuntu 23.10 调整字体包，将 DejaVu 替换为 Noto</a></li><li><a href="https://www.oschina.net/news/255590/ubuntu-23-10-no-gimp-3-0" target="_blank">Ubuntu 23.10 不会预装 GIMP 3.0 测试版</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Sep 2023 10:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259137/ubuntu-23-10-beta-released</guid>
            <link>https://www.oschina.net/news/259137/ubuntu-23-10-beta-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Fedora 39 Beta]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>Fedora 39 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoramagazine.org%2Fannouncing-fedora-39-beta%2F" target="_blank">发布</a>了首个 Beta 测试版。</p><p><strong>下载地址</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fworkstation%2Fdownload%2F" target="_blank">Fedora Workstation 39 Beta</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fserver%2Fdownload%2F" target="_blank">Fedora Server 39 Beta</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fiot%2Fdownload%2F" target="_blank">Fedora IoT 39 Beta</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fcloud%2Fdownload%2F" target="_blank">Fedora Cloud 39 Beta</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fcoreos%2Fdownload%2F%3Fstream%3Dnext" target="_blank">Fedora CoreOS 「next」 stream</a></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-9dcd03aed40bfc308c5034140d02ab3facd.png" referrerpolicy="no-referrer"></p><p>相对于 Fedora 38，Fedora 39 带来了如下更新：</p><ul><li>更快的 DNF</li><li>Fedora Workstation 使用 GNOME 45 桌面</li><li>LibreOffice 7.6 办公套件</li><li>LLVM 17 编译器堆栈</li><li>其他核心软件包更新</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-2c342419a612242e1618e6e6e9ba0e2f043.png" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffedoraproject.org%2Fwiki%2FReleases%2F39%2FChangeSet" target="_blank">完整变更内容</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Sep 2023 08:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259116/fedora-39-beta</guid>
            <link>https://www.oschina.net/news/259116/fedora-39-beta</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GNOME 45]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>GNOME 45 已正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscourse.gnome.org%2Ft%2Fgnome-45-released%2F17296" target="_blank">发布</a>，代号 <strong>"Rīga"</strong>。此版本带来了新的活动指示器、摄像头使用指示器、新的快速设置、浅色模式、新的图像查看器和新的相机应用程序、众多应用程序更新和增强功能等等。</p><p>公告写道，新版本专注于改进日常交互、增强性能，并使整体体验更流畅、更高效。从微妙的设计调整到功能升级，GNOME 45 致力于优化用户依赖的核心桌面环境。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ac730b329de5b464942ca32cf88e241d49b.png" referrerpolicy="no-referrer"></p><p>下面介绍值得关注的新特性。</p><ul><li><strong>活动指示器 (Activities Indicator)</strong></li></ul><p>「活动指示器」是位于顶部导航栏的动态工作空间。用户通过点击和滑动即可切换不同的工作区，当前选中的工作区以药丸形状进行指示，为工作区切换提供了更加直观的方式。</p><p><img src="https://static.oschina.net/uploads/space/2023/0922/144408_9OLi_2720166.gif" referrerpolicy="no-referrer"></p><ul><li><strong>提升搜索性能</strong></li></ul><p>此版本针对「搜索」的性能改进是系统级特性，适用于一系列应用程序，包括 GNOME Software、GNOME Characters、时钟、文件和计算器。</p><p>这些优化带来了更快的搜索速度和更少的资源使用。</p><ul><li><strong>改进「文件」应用</strong></li></ul><p>GNOME 45 的「文件」应用显著提升了速度，即使在搜索数百万个文件时，现在也可以在几毫秒内返回结果。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-485699d023cdae2911578b42e1a3367f9ad.png" referrerpolicy="no-referrer"></p><ul><li><strong>键盘背光快速设置 &amp;&nbsp;</strong><strong style="color:#000000">新的快速设置键盘快捷键</strong></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-17e902fdd1d15406071ecea1f77340ade3e.png" referrerpolicy="no-referrer"></p><ul><li><strong>浅色模式</strong></li></ul><p>GNOME 45 提供新选项为系统提供浅色界面风格，而不是默认的深色外观。</p><p>通过<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fextensions.gnome.org%2Fextension%2F6198%2Flight-style%2F" target="_blank">扩展程序</a>或从命令行使用<code>gsettings set org.gnome.desktop.interface color-scheme prefer-light</code>启用此功能。</p><ul><li><strong>新的图像查看器</strong></li></ul><p>GNOME 45 使用了新的默认图像查看器，亮点是快速、简洁。</p><p><img height="422" src="https://static.oschina.net/uploads/space/2023/0922/150907_wL3z_2720166.gif" width="600" referrerpolicy="no-referrer"></p><ul><li><strong>新的相机应用</strong></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2d1e97e49d998130d17332e2c68f3721c34.png" referrerpolicy="no-referrer"></p><p>详情查看&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frelease.gnome.org%2F45%2F" target="_blank">Release Notes</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Sep 2023 07:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259088/gnome-45-r%C4%ABga-released</guid>
            <link>https://www.oschina.net/news/259088/gnome-45-r%C4%ABga-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Svelte 造了个「新轮子」—— runes]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
数据技术都能四世同堂，凭什么开发 30 岁就要被干掉？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>前端 UI 框架 Svelte<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fsveltejs%2Fstatus%2F1704496039468605842" target="_blank"> 宣布</a>下一个大版本 Svelte 5 将引入名为<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsvelte.dev%2Fblog%2Frunes" target="_blank"><strong>「runes」</strong></a>的新 API。</p><p><img src="https://static.oschina.net/uploads/space/2023/0922/114521_CYvH_2720166.png" referrerpolicy="no-referrer"></p><p>从公告来看，runes 是 Svelte 开发团队对<strong>「响应式」 (reactivity) </strong>进行反思的一次探索。</p><blockquote><p>Svelte 5 changes all that with runes, which <strong>unlock universal, fine-grained reactivity</strong>.</p></blockquote><p>他们表示 runes 提供了<strong>更通用、以及更细粒度的响应性</strong>。</p><p>由于 Svelte 的 runes 和 Vue Reactive Transform 的设计思想比较相似，有开发者进行了如下总结：</p><blockquote><p>runes(Svelte) = ref(Vue) = signal(Solid/Angular) = observable(Mobx) ...</p></blockquote><p>更是有人做了一张 Svelte 和 Vue 的代码对比图，表示 Svelte 5 将会和 Vue 变得<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Ficarusgkx%2Fstatus%2F1704512491865207205" target="_blank">非常相似</a>：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-5ae8c25a6c6dfd9bb24eda8e2f619c5026e.png" referrerpolicy="no-referrer"></p><p>目前 Svelte 5&nbsp;尚未准备好用于正式环境，不过其开发团队提供了可以体验新特性的 Playground：<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsvelte-5-preview.vercel.app%2F" target="_blank">svelte-5-preview</a></strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Sep 2023 04:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/259069/svelte-5-api-runes</guid>
            <link>https://www.oschina.net/news/259069/svelte-5-api-runes</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
