<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 30 Oct 2023 21:37:00 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[ChatGPT 可以做 WebRTC 音视频质量性能优化，惊艳到我了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><strong>摘要</strong></p><blockquote><p>随着 GPT-4 的发布，AI 的风越吹越旺。GPT-4 可以回答问题，可以写作，甚至可以基于一张草图生成 html 代码搭建一个网站。即构社区的一位开发者@倪同学就基于目前在研究的 WebRTC QOS 技术点对 GPT-3.5 跟 GPT-4 进行一场实验，ChatGPT 会取代程序员还是成为最强辅助？</p></blockquote><p><strong>以下为@倪同学的博文。</strong></p><hr><h1>ChatGPT 取代程序员还是给程序员加 Buff？</h1><p>这两周，AI 新闻一个接着一个，3 月 23 日，Google 开放了内测已久的 AI 对话服务 Bard，Google 强调，这是一款定位为用户提供创意之源的产品，可生成写作草稿或生活中的聊天机器人。早在一周前 3 月 15 日凌晨，OpenAi 距发布 GPT-3.5 后四个月发布了升级版模型 GPT-4，据发布会说，GPT-4 可支持图片输入，角色扮演，写作能力更强了。紧接着 3 月 16 日百度发布了文心一言，一共有五大功能：文学创作、商业文案创作、数理逻辑推算、中文理解、多模态生成。</p><p>随着近日各大厂商 AI 产品的接连发布，<strong>AI 取代人工</strong>这个话题持续在发酵。AI 大幅解放人的生产力或是将冲击一大批职业？</p><p>博主近期在输出 WebRTC 相关的技术博客，不如向 AI 提问看他有什么见解。</p><p>和大部分人一样，博主都还没拿到 Bard 跟文心一言的内测资格。得知 NewBing 用的是 GPT-4 的模型，下面就着<strong>WebRTC 通过哪些 QOS 技术提升音视频通话质量</strong>，向 GPT-3.5 和 Newbing（GPT-4）分别提问，看看他们的答案有何差异。</p><p>如下图，技术科普类问题都难不倒 GPT-3.5 和 GPT-4，我就该问题继续深挖让它们举实例说明：</p><p>NewBing(GPT-4)</p><p><img src="https://oscimg.oschina.net/oscnet/up-4629da845197985993c293d94127cc0c271.png" alt="" referrerpolicy="no-referrer"></p><p>GPT-3.5 给出的结果</p><p><img src="https://oscimg.oschina.net/oscnet/up-54f9e77266206f54ed5b4f0946988bcca36.png" alt="" referrerpolicy="no-referrer"></p><p>NewBing(GPT-4) 直接给出了具体操作实例</p><p><img src="https://oscimg.oschina.net/oscnet/up-d7d0918e1048c337e7d4649564b3858f3f3.png" alt="" referrerpolicy="no-referrer"></p><p>GPT-3.5 给出的结果（有些空泛）</p><p><img src="https://oscimg.oschina.net/oscnet/up-e9dc01bfdceb3cc698a4093d5b1d46da426.png" alt="" referrerpolicy="no-referrer"></p><h1>GPT-4 和 GPT-3.5 对比结论</h1><p>通过实验，我们比较了同一问题两个版本的回答。在普通的文本处理当中，GPT-4 和 GPT-3.5 的区别可能比较小，但是当问题足够具体和复杂时，GPT-4 就会比 GPT-3.5 更精准、更有创意，而且能够处理用户更细微的指令。</p><p>当然，本篇内容不是要讨论 GPT-3.5 跟 GPT-4 的具体差别，而是程序员如何利用 ChatGPT 提升工作效率，加上最强 Buff。以下我将以个人开发经验为音视频开发者分享《<strong>WebRTC 的 QOS 如何提升音视频质量》。</strong></p><h1><strong>WebRTC 技术概述</strong></h1><p>WebRTC 通过一系列的 QOS 技术来提升音视频通话质量: 抗丢包策略 (NACK、 FEC), 拥塞控制策略 (TWCC/REMB), SVC 或多视轨, 视频质量自适应策略， Pacer、JitterBuffer 等.</p><p>总体 QOS 架构如下图所示：</p><p><img src="https://oscimg.oschina.net/oscnet/up-ce883c8c8e5fbb12f3bd9320f13c85cb0aa.png" alt="" referrerpolicy="no-referrer"></p><p>图 1</p><h1><strong>1</strong><strong>丢包恢复策略</strong></h1><h2><strong>1.1 NACK</strong></h2><p>NACK(Negative Acknowledgment) 相较于 ACK 是通过"非到达确认"进行选择性重传的机制。基本原理是发送端对数据进行缓存，接收端通过到达包连续性检测丢包，结合 rtt 和乱序情况在合适的时机向发送端发起重传请求。</p><p><img src="https://oscimg.oschina.net/oscnet/up-1d2480e0c83a78a74feed657cd91b53ff67.png" alt="" referrerpolicy="no-referrer"></p><p>图 2</p><p>如图所示,Receiver 在收到报文 4 之后发现报文 2、3 未到达，暂时将报文 2、3 放入丢失 nack 列表。在超过一定乱序阈值 (通过乱序直方图计算得到，假设这里是 2，那么收到包 4 可认为包 2 丢失)，或者超过一定抖动时间 (根据 rtt 计算)，向 Sender 请求重传丢失的报文 2、3。 Receiver 的请求通过 RTP FB 发送给 Sender, 具体 NACK 请求格式参考 RFC4585。Sender 在收到 NACK 请求后重新发送报文 2、3。</p><p><strong>值得注意的是</strong>，NACK 策略丢包恢复效果取决于重传请求时机。一是 rtt 的计算 (webrtc 默认 rtt 是 100ms)，一是乱序阈值计算。重传请求节奏控制不好容易造成重传风暴，加重拥塞导致拉流出现卡顿。</p><p>参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rfc-editor.org%2Frfc%2Frfc4585.html%23page-34%3Fsource%3Doschina%26article64" target="_blank">https://www.rfc-editor.org/rfc/rfc4585.html#page-34</a></p><h2><strong>1.2</strong><strong>FEC</strong></h2><p>FEC(Forward Error Correction),前向纠错, 在数据传输和存储中普遍用于数据纠错。WebRTC 中也使用了该技术进行丢包恢复。</p><p>webrtc 实现该冗余功能，有三种方式：</p><h3><strong>1.2.1、RED</strong></h3><p>将前面的报文直接打入到新包里面，在接收端解析主包和冗余包。</p><p><img src="https://oscimg.oschina.net/oscnet/up-dcd63ecbf52cf04e410e589f927271b375a.png" alt="" referrerpolicy="no-referrer"></p><p>图 3</p><p>如图，后面的报文直接包含前面报文，所以当其中某个报文丢失了，可以通过其相邻报文直接恢复。这种方式缺点是抗连续丢包效果差，但是实现简单。</p><p>Opus In-band FEC 正是使用这种方式进行纠错： 将重要信息以较低的比特率再次编码之后添加到后续数据包中，opsu 解码器根据收包情况决定是否利用当前包携带的冗余包进行丢包恢复。</p><p>Opus In-band FEC 详细参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatatracker.ietf.org%2Fdoc%2Fhtml%2Frfc6716%23section-2.1.7" target="_blank">https://datatracker.ietf.org/doc/html/rfc6716#section-2.1.7</a></p><p>RED 详细介绍参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rfc-editor.org%2Frfc%2Frfc2198.html%3Fsource%3Doschina%26article64" target="_blank">https://www.rfc-editor.org/rfc/rfc2198.html</a></p><h3><strong>1.2.2、ULPFEC</strong></h3><p>在多个数据包之间使用 XOR 来生成此冗余信息，并能够在需要时在接收方恢复丢失的数据包。 ULPFEC 能够通过选择受保护的字节数并应用 XOR 的先前数据包的数量，为不同的数据包提供不同级别的保护。</p><p><img src="https://oscimg.oschina.net/oscnet/up-dbc67f90d60129a5ac409477503478c5928.png" alt="" referrerpolicy="no-referrer"></p><p>图 4</p><p>如图，FEC packet 1 保护 L0 级报文 A、B。 FEC packet 2 及保护 L0 级的 A、B, 也保护 L1 级报文 C、D。</p><p>参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rfc-editor.org%2Frfc%2Frfc5109.html%3Fsource%3Doschina%26article64" target="_blank">https://www.rfc-editor.org/rfc/rfc5109.html</a></p><h3><strong>1.2.3、FLEXFEC</strong></h3><p>较 ULPFEC，FLEXFEC 可以灵活选择 1D 行异或、列异或以及 2D 行列异或，增加网络抗丢包能力。</p><p>1-D 行异或纠错</p><p><img src="https://oscimg.oschina.net/oscnet/up-10096bc8991b4dd01f54dfc56124b023479.png" alt="" referrerpolicy="no-referrer"></p><p>图 5</p><p>1-D 列异或纠错</p><p><img src="https://oscimg.oschina.net/oscnet/up-b5c40a4c18f39836dbb9e92fc3017670964.png" alt="" referrerpolicy="no-referrer"></p><p>图 6</p><p>2-D 行列异或纠错</p><p><img src="https://oscimg.oschina.net/oscnet/up-36d1716da02b29d6139ec01f2c1ca7a4845.png" alt="" referrerpolicy="no-referrer"></p><p>图 7</p><p>FLEXFEC 虽然相比前面两个有更强的恢复能力，行列交错丢包比如图 7 中 (1、2、5、6) 丢失就会出现无法纠错的情况。</p><p>WebRTC 用到 FEC 策略整体丢包恢复能力都偏弱，业界普遍应用 Reed-Solomon FEC 进行丢包恢复，Reed-Solomon FEC(K + N : K 个数据包 N 个 FEC 包) 可以真正恢复分组内任意 &lt;=N 个丢包。</p><p>FLEXFEC 详细实现可以参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rfc-editor.org%2Frfc%2Frfc8627.html%3Fsource%3Doschina%26article64" target="_blank">https://www.rfc-editor.org/rfc/rfc8627.html</a></p><h1><strong>2 带宽评估及码率控制</strong></h1><h2><strong>2.1 REMB-GCC</strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-0651b1a1da43906fa2e59639953688b12dc.png" alt="" referrerpolicy="no-referrer"></p><p>图 8</p><p>图 8 是 REMB-GCC 架构图，基本思想是通过接收端评估带宽， 然后通过 RTCP REMB 将带宽反馈给发送端。 发送端结合丢包率计算一个带宽结果 As,和 RMEB 的结果 Ar, 取 min(As, Ar) 作为最终带宽结果。</p><h2><strong>2.2 SendSide BWE</strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-c4f0e4a20b5e2e2bc5801517dce2e63525b.png" alt="" referrerpolicy="no-referrer"></p><p>图 9</p><p>跟<strong>REMB-GCC</strong> 相比，TFB-GCC 主要区别在于大部分带宽计算都转移到发端计算，滤波器的实现不再用 Kalman 滤波，而是变成<strong>TrendLine 滤波器</strong>。</p><p>发送端发送的包需在扩展头带： Transport-wide sequence number.</p><p>接收端定期发送 Transport-wide feedback 报文，通知发送端和接收端接收报文的相关信息，包括报文到达时间、报文到达时间、报文格式等信息。发送端收到 Transport-wide feedback 报文之后，根据报文携带的信息进行延迟滤波计算 (Trandline).</p><p>Transport-wide feedback 报文格式参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdatatracker.ietf.org%2Fdoc%2Fhtml%2Fdraft-holmer-rmcat-transport-wide-cc-extensions-01%3Fsource%3Doschina%26article64" target="_blank">https://datatracker.ietf.org/doc/html/draft-holmer-rmcat-transport-wide-cc-extensions-01</a></p><h2><strong>2.3 速率控制</strong></h2><p><img src="https://oscimg.oschina.net/oscnet/up-cf155320998fb6f015ca55496f9b6716354.png" alt="" referrerpolicy="no-referrer"></p><p>图 10</p><p><img src="https://oscimg.oschina.net/oscnet/up-6c862c3581fe6d7a57ae15e961f84f7db78.png" alt="" referrerpolicy="no-referrer"></p><p>图 11</p><p>根据过载检测器产生的信号 s，驱动如图 10 所示的有限状态机来调整码率。</p><p>GCC 算法原理详细参考：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fc3lab.poliba.it%2Fimages%2F6%2F65%2FGcc-analysis.pdf%3Fsource%3Doschina%26article64" target="_blank">https://c3lab.poliba.it/images/6/65/Gcc-analysis.pdf</a></p><h1><strong>3</strong><strong>SVC</strong><strong>、多视轨</strong></h1><h2><strong>3.1</strong><strong>SVC</strong></h2><p>SVC (Scalable Video Coding，可适性视频编码或可分级视频编码) 是传统 H.264/MPEG-4 AVC 编码的延伸，可提升更大的编码弹性，并具有时间可适性 (Temporal Scalability)、空间可适性 (Spatial Scalability) 及质量可适性 (SNR/Quality/Fidelity Scalability) 三大特性。</p><p>WebRTC 中 h264 不支持 svc 编码，Vp8 仅支持 Temporal Scalability, VP9 和 AV1 支持时间可适性 (Temporal Scalability)、空间可适性 (Spatial Scalability)。</p><p><img src="https://oscimg.oschina.net/oscnet/up-973028f5afa2ef31a24851f224e9e74bd0e.png" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-e52d6c53588cf1a352975f823e2cef803dd.png" alt="" referrerpolicy="no-referrer"></p><p>图 12</p><p>上面是时间可适应示意图。假设图例中显示的图层以 30 fps 的帧速率显示。如果我们移除所有 L2 层的图片，剩下层（L0 和 L1）仍然可以成功解码，并且产生一个 15fps 的视频。如果我们进一步删除所有的 L1 图像，那么剩下的 L0 层依然可以被解码并产生一个 7.5fps 的视频, 所以即便是出现丢包，相比不可分级编码可明显提升弱网视频流畅度。</p><p><img src="https://oscimg.oschina.net/oscnet/up-b2dfcbe88b9bfb1b8f3f1f22ad9267f43be.png" alt="" referrerpolicy="no-referrer"></p><p>图 13</p><p>如图 12，L0 基层为分辨率最小编码数据，级别越高，分辨率越高。当实际应用中需要较低分辨率时，只需丢弃高 Level 层级数据进行解码。</p><p>针对不同的带宽条件用户和以及不同设备性能的用户可以灵活调整分辨。</p><p>SVC 扩展参考： <a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fip.hhi.de%2Fimagecom_G1%2Fassets%2Fpdfs%2FOverview_SVC_IEEE07.pdf%3Fsource%3Doschina%26article64" target="_blank">http://ip.hhi.de/imagecom_G1/assets/pdfs/Overview_SVC_IEEE07.pdf</a></p><p>SVC 与 H264 结合参考： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.itu.int%2Frec%2FT-REC-H.264-201704-I%3Fsource%3Doschina%26article64" target="_blank">https://www.itu.int/rec/T-REC-H.264-201704-I</a></p><h2><strong>3.2 多视轨</strong></h2><p>目前主流浏览器都支持 unified-plan sdp, 我们可以在 sdp 协商的时候添加多个视轨，业务上比较常见的就是添加两条视轨 (类似于 SVC 的 Spatial Scalability)，复用相同 DTLS 传输通道。</p><p><img src="https://oscimg.oschina.net/oscnet/up-e11f7f6b5c3c71a6cc86c76a69182dc2ddf.png" alt="" referrerpolicy="no-referrer"></p><p>图 14</p><p>图 12 典型利用 WebRTC 支持多视轨特性编码一大一小两条流的出帧示意图。</p><p>支持多视轨 (大小流) 可以让接收端在下行带宽受限的情况下动态切换到可以支持的分辨率，提升弱网体验。</p><p>多视轨 (大小流) 在对网络丢包及带宽受限情况的适应不如 SVC 灵活，但是多视轨实现简单，编码、解码性能消耗较低，在实际的业务场景中得到广泛应用。</p><p>多视轨需要支持 Unified Plan SDP 协商, 参考 WebRTC 相关说明：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwebrtc.github.io%2Fwebrtc-org%2Fweb-apis%2Fchrome%2Funified-plan%2F%3Fsource%3Doschina%26article64" target="_blank">https://webrtc.github.io/webrtc-org/web-apis/chrome/unified-plan/</a></p><h1><strong>4 视频质量调整策略</strong></h1><p>在网络传输质量变差 (上行带宽不足)、CPU 占有率过高，编码器编码质量 QP 值过大等情况下，WebRTC 会通过降质量来保障视频通话。降质量策略主要分降帧率 (即清晰优先模式) 和降分辨率 (即流畅优先模式)，通过 MediaStreamTrack Content Hints 来设置。</p><p><strong>清晰优先模式</strong> WebRTC 在编码的时候更注重视频细节，在出现上述情况需要降质量时，会通过降低帧率、保持分辨率不变来保障拉流用户的主观感受。对于推流端做屏幕分享内容是 PPT 或者拉流用户大屏显示的业务场景尤为重要。</p><p><strong>流畅优先模式</strong> 推流端在需要降质量的时候优先降低分辨率、保持一定的帧率来保障拉流用户的流畅体验。</p><p>在带宽或 CPU 资源等不再受限时，WebRTC 会根据降质量偏好设置逆向提升视频质量。</p><p>使用者应该根据自己的业务场景进行适当设置，才能在极端情况下保证主观体验不至于太差。</p><h1><strong>5 Pacer</strong></h1><p>WebRTC 的 Pacer 模块主要是让需要发送的包根据评估的网络带宽尽量均匀的分布在每个发送时间窗口发出，起到平滑发包、避免网络拥塞的作用。</p><p>假设有一条 5Mbps 和 30fps 的视频流。 在理想情况下，每个帧大小约为 21kB，打包成 18 个 RTP 数据包。 按照一秒时间窗口统计的平均比特率是 5Mbps，但在更短的时间范围内，它可以被视为每 33 毫秒突发 167Mbps。 此外，视频编码器在突然移动的情况下会超过目标帧率，尤其是在处理屏幕共享时，帧比目标尺寸大 10 倍甚至 100 倍很常见。 这些数据包如果编码完成马上发出去会导致几个问题: 网络拥塞、缓冲区膨胀、甚至数据包丢失。 大多数会话都有不止一条媒体流，可能同时包含音频流、视频流、数据流。 如果你一次性将一个帧放在一条传输通道发送，这些数据包需要 100 毫秒才能发出，这可能阻止了任何音频数据包及时发送出去。 Pacer 通过有一个缓冲区来解决这个问题。 媒体包在其中排队，然后使用漏桶算法将它们调整到网络上。 缓冲区包含所有媒体轨道的独立 fifo 流，例如，音频可以优先于视频 - 可以以循环方式发送相同优先级的流，以避免任何一个流阻塞其他流。</p><p><img src="https://oscimg.oschina.net/oscnet/up-3b894e7d0824cc00b76bb2b75a11c932177.png" alt="" referrerpolicy="no-referrer"></p><p>图 15</p><h1><strong>6 JitterBuffer</strong></h1><p><img src="https://oscimg.oschina.net/oscnet/up-0a330d475cd478eb5ad7158389b8d6b3362.png" alt="" referrerpolicy="no-referrer"></p><p>图 16</p><p>WebRTC 接收端收到 RTP 包后，放到 PacketBuffer 进行缓存和排序。如上图，在收到 Mark(帧结束) 标志之后，从后往前开始组帧。组完一帧会放到该帧所在 GOP 的缓存里面，根据帧间参考顺序进行调整，当帧间参考关系建立好之后就会放到解码器进行解码。可以认为 Jitter 主要先后做包排序、帧排序、GOP 排序。之所以要进行着一系工作是因为网络本身存在一定的抖动、甚至有丢包，如果有丢包还得等丢包恢复才能完整组帧，所以导致帧到达时间跟发送时间存在一定抖动。Jitter buffer 的存在就很好的解决这个问题，能够在拉流端对待解码数据进行平滑处理，保证我们渲染出来视频是平滑、流畅的。</p><h1><strong>7 关键帧请求</strong></h1><p>视频流通常是以 1 个关键帧+ N 个增量帧的方式发送，这些增量帧依赖于先前的帧进行解码和显示。如果因为一些原因导致 sps/pps 丢失、 组包错误等，如果不采取任何补救措施，就很难继续解码视频流，视频就会卡主, 直到下个关键帧。很多时候为了编码稳定 GOP 设置很大，这个时候意味着长时间卡顿或者黑屏。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a58f2b74a6631610904cf29d65b3ff8ec98.png" alt="" referrerpolicy="no-referrer"></p><p>图 17</p><p>如图接收端因为丢包不能恢复导致 Frame 9 组帧失败，后面即使能组帧成功也无法解码，此时需要从发送端请求一个 I 帧解码刷新当前视频流。</p><p>WebRTC 通过 RTCP 报文向发送端请求发送关键帧，关键帧请求 RTCP 报文格式比较简单，在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftools.ietf.org%2Fhtml%2Frfc4585" target="_blank">RFC4585</a>（RTP/AVPF）以及<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftools.ietf.org%2Fhtml%2Frfc5104" target="_blank">RFC5104</a>（AVPF）规定了两种不同的关键帧请求报文格式：Picture Loss Indication (PLI)、Full Intra Request (FIR)。从目前的实现看 WebRTC 在收到 PLI 或者 FIR 之后，都是让编码器编码输出关键帧，然后发送给接收端。</p><p>PLI 报文格式参考： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rfc-editor.org%2Frfc%2Frfc4585.html%23page-36%3Fsource%3Doschina%26article64" target="_blank">https://www.rfc-editor.org/rfc/rfc4585.html#page-36</a></p><p>FIR 参考： <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.rfc-editor.org%2Frfc%2Frfc5104.html%3Fsource%3Doschina%26article64" target="_blank">https://www.rfc-editor.org/rfc/rfc5104.html</a></p><h1><strong>QOS 技术总结：</strong></h1><p>本文简单介绍了 WebRTC 中所使用到的 Qos 技术，这些技术从不同的角度去提升 Qos 质量。包括通过<strong>NACK、FEC</strong>技术对丢包进行恢复，解决丢包导致的音、视频卡顿。通过<strong>带宽评估和拥塞控制</strong>技术调整编码和发送码率来自动适应网络带宽的变化情况。通过 SVC、多视轨技术保障不同网络质量的拉流的用户差异的视频质量。 而<strong>Pacer、JitterBuffer</strong>分别在发送端和接收端提升音视频的平滑、流畅度。<strong>关键帧请求</strong>对极端网络抖动之后的快速视频恢复起了重要作用。WebRTC 利用这些技术协同作用，提升整体的 Qos 质量，需要了解技术细节最好的方式还是去阅读 WebRTC 源码。</p><p>WebRTC 的 Qos 技术对提升整体音视频质量效果显著、但 WebRTC 的这些技术还是存在有很多可以优化的地方。音视频厂商 ZEGO 即构自研的 WebRTC 网关对这些策略都做了一定的优化：包括自研带宽评估算法、NACK 算法、大小流等。</p><p>所以，如果你的业务需要一款稳定可靠的音视频服务，可以试试即构实时音视频 RTC 服务。</p><p><strong>点击跳转<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdoc-zh.zego.im%2Farticle%2F9675%3Fsource%3Doschina%26article64" target="_blank">ZEGO 即构实时音视频服务</a>了解更多 WebRTC 最佳实践内容。</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 12:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5818436/blog/8590740</guid>
            <link>https://my.oschina.net/u/5818436/blog/8590740</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国家广电总局公示《云游戏总体技术要求》等行业标准]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>国家广播电视总局科技司<u><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.nrta.gov.cn%2Fart%2F2023%2F10%2F30%2Fart_113_65962.html" target="_blank">发布公告称</a></u>，按照广播电视和网络视听行业标准制定程序要求和计划安排，国家广播电视总局组织相关单位编制《沉浸式终端通用技术要求》《云游戏总体技术要求》《自由视角视频系统技术要求》行业标准，现对已通过全国广播电影电视标准化技术委员会审查的报批稿予以公示。</p><p><img height="1820" src="https://oscimg.oschina.net/oscnet/up-ad5c1b15dcc8e8faf28a1caa2fb63e4aefb.png" width="2436" referrerpolicy="no-referrer"></p><p>根据《云游戏总体技术要求》行业标准的报批稿，<strong>该文件规定了云游戏的总体技术架构，以及云游戏平台、网络、云游戏终端和云游戏安全的技术要求</strong>，并针对未成年人用户对云游戏平台和云游戏终端提出了要求。</p><p>该标准的起草单位包括：</p><blockquote><p>国家广播电视总局广播电视科学研究院、腾讯科技（上海）有限公司、中国广播电视网络集团有限公司、咪咕互动娱乐有限公司、元境生生（北京）科技有限公司、浙江华数广电网络股份有限公司、江苏省广电有线信息网络股份有限公司、中国广电湖南网络股份有限公司、国广东方网络（北京）有限公司、青岛西发广电传媒科技有限公司、互影科技（北京）有限公司、北京决策数科技有限公司、北京和创摩尔科技有限公司。</p></blockquote><p>云游戏总体技术架构包括云游戏平台、网络、云游戏终端和云游戏安全四个部分：</p><ul><li><p>云游戏平台接收用户操作指令，完成游戏画面的渲染、音视频编解码和游戏推流等操作，将游戏内容以音视频流的形式通过网络传输到用户侧的终端进行呈现；</p></li><li><p>用户使用终端通过网络发送操作指令到云游戏平台进行下一步游戏画面的渲染、游戏推流等；</p></li><li><p>云游戏安全贯穿云游戏的各个环节，实现对用户信息、账号信息、游戏行为信息等的保护。</p></li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c3dafe5b6f038392293411fb97f761a26cb.png" referrerpolicy="no-referrer"></p><p>文件显示，云游戏平台应具备基于独立 GPU 的画面渲染能力，应符合 GY / T 353—2021 中的视频格式要求，<strong>应具备 1080P / 50fps 或 1080P / 60fps 的画面渲染能力</strong>，宜支持 2K / 60fps、4K / 50fps、4K / 60fps 等的画面渲染。</p><p>网络方面，根据游戏画面质量的不同，对网络的要求也有所不同，<strong>比如 1080p 50/60fps 要求下行带宽为 20Mbps。</strong></p><p><img alt="" src="https://img.ithome.com/newsuploadfiles/2023/10/a00f64bc-0450-4e75-bd10-557e31022a27.png?x-bce-process=image/format,f_avif" referrerpolicy="no-referrer"><img alt="" src="https://oscimg.oschina.net/oscnet/up-3d6e9bf9cf65cd2abe5e3c9e79a1f6eb0b9.png" referrerpolicy="no-referrer"></p><p>云游戏终端方面，文件要求设备应满足以下硬件配置要求：</p><ul><li><p>CPU：不低于 4 个处理核心，最高频率不低于 1.5GHz；</p></li><li><p>内存：至少 1GB，建议 2GB 或以上；</p></li><li><p>存储：4GB 或以上，高速 eMMC 或者 UFS。</p></li></ul><p>云游戏终端的解码时延应满足帧率为 30fps 时，解码时延在 20ms 以内；帧率为 50/60fps 时，解码时延在 10ms 以内。终端设备渲染的每一帧画面和播放的声音应严格同步，音画同步时间宜不超过 + 90ms 和-185ms，其中，正值表示声音超前于图像，负值表示声音滞后于图像。<strong>额外操作时延应不大于 150ms，宜不大于 100ms</strong>。</p><p>对未满 18 周岁的未成年人用户，云游戏平台应提供以下保护功能：</p><ul><li><p>具备对用户账号进行实名管理的能力；</p></li><li><p>具备控制未成年人使用游戏时段和时长的能力；</p></li><li><p>具备对未成年人用户游戏消费管理的能力；</p></li><li><p>具备至少通过一种方式向监护者进行提醒通知的能力。</p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 10:53:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264148</guid>
            <link>https://www.oschina.net/news/264148</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[昆仑万维开源「天工」Skywork-13B 系列大模型，0 门槛商用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">昆仑万维宣布开源百亿级大语言模型「天工」Skywork-13B 系列，并配套开源了 600GB、150B Tokens 的超大高质量开源中文数据集。昆仑万维「天工」Skywork-13B 系列目前包括 130 亿参数的两大模型：Skywork-13B-Base 模型、Skywork-13B-Math 模型。</span></p><p><span style="color:#000000">除模型开源外，Skywork-13B 系列大模型还将开源 600GB、150B Tokens 的高质量中文语料数据集 Skypile/Chinese-Web-Text-150B。公告称，这是目前最大的开源中文数据集之一。同时，昆仑万维「天工」Skywork-13B 系列大模型即将全面开放商用；开发者无需申请，即可商用。</span></p><p><span style="background-color:#ffffff; color:#000000">「此次 Skywork-13B 系列大模型将全面开放商用许可，用户在下载模型并同意并遵守《Skywork 模型社区许可协议》后，无需再次申请授权即可将大模型进行商业用途。希望用户能够更便捷地探索 Skywork-13B 系列大模型技术能力，探索在不同场景下的商业化应用。」</span></p><p><strong><span style="color:#000000">Skywork-13B-Base 模型</span></strong></p><blockquote><p><span style="color:#000000">Skywork-13B-Base 模型是 Skywork-13B 的基础模型，其经由 3.2 万亿个多语言高质量数据训练，在 CEVAL、CMMLU、MMLUGSM8K 等评测与基准测试上都展现了同等规模模型的最佳效果。</span></p></blockquote><p><strong><span style="color:#000000">Skywork-13B-Math 模型</span></strong>&nbsp;</p><blockquote><p><span style="color:#000000">Skywork-13B-Math 模型经过专门的数学能力强化训练，在 GSM8K 等数据集上取得了同等规模模型的最佳效果。&nbsp;</span></p></blockquote><p><strong><span style="color:#000000">Skypile/Chinese-Web-Text-150B 数据集</span></strong>&nbsp;</p><blockquote><p><span style="color:#000000">该数据集是根据昆仑天工团队方面经过精心过滤的数据处理流程从中文网页中筛选出的高质量数据。本次开源的数据集大小约为 600GB，总 token 数量约为 150B，目前开源最大的中文数据集之一。</span></p></blockquote><p>一些评测结果如下所示：</p><p><img height="232" src="https://oscimg.oschina.net/oscnet/up-1db28014754e9cdff9ea99cd4870f7d3ee1.png" width="500" referrerpolicy="no-referrer">&nbsp;</p><p><img height="267" src="https://oscimg.oschina.net/oscnet/up-091dc8c601db00caf525c2b1517e82fda18.png" width="500" referrerpolicy="no-referrer"></p><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FQTe6pILo6jehgC7fiZBmmQ" target="_blank">查看官方公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 09:50:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264137</guid>
            <link>https://www.oschina.net/news/264137</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[为什么好好的一个开源项目，商业化却往往扑街？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><p>数字化产品如何做商业化？为什么有些开源项目这么优秀，商业化却老是扑街？第四期《开源漫谈》，我们邀请了<strong>王晔倞（头哥）</strong>和<strong>厉启鹏（寈峰）</strong>，一起来聊聊，<strong>开源项目的商业化变现，到底该怎么做？</strong></p><ul><li><p><strong>王晔倞（头哥）</strong>，「头哥侃码」主理人，专注分享技术、创业与产品创新等主题内容。</p></li><li><p><strong>厉启鹏（寈峰）</strong>，现为 vanus.ai CEO，曾就职于阿里云，Apache RocketMQ PMC ，长期专注于 AI 基础设施软件及中间件。</p></li></ul><p>&nbsp;</p><p><strong>头哥：</strong>技术，和一坨代码，和一个好的产品，中间没有直接的关系，只有间接的关系。所以你会发现很多人，他开源做得很好，但商业化做得很差。反过来有的人他商业化做得很好，但社区不会做。现在的 AI 类产品、大模型产品、开源产品，其实都是数字化产品。那么第一个问题来了：</p><p><strong>数字化产品如何实现商业化？中间有什么样的途径吗？</strong></p><p>&nbsp;</p><p><strong>厉启鹏：</strong>我先分享一下开源产品吧。一般来说，我们会先把产品在 Github 上开源，吸引一些人气。这样一来可以找到最初的用户，（毕竟开源是一种很好的推广方式），二来可以通过开源快速地打磨这个产品，在开发者们的帮助下让产品快速迭代，迅速成熟。第二步就是商业化了，在国内的话，像我们做基础设施类的，一般都是以 license 的方式去售卖，或者去拿一些大项目。我们之前服务过大客户，像银行、Saas 公司等等。除此之外，还有一种方式就是提供 Saas 服务，我们会先把产品托管到公有云上去，这样用户在使用产品的时候就不需要自己去部署、自己去运维，需要的时候开箱即用即可。</p><p>不过，不同的项目，它的形态和在商业化的时候需要考虑的东西是不一样的。举个例子，我们现在 vanus 产品的用户有国内的也有国外的，但以我们的经验来说，不同点在于：在国内，提供软件服务的公司，很难避免去做私有化的交付方式。在中国现在的环境下去运营一个纯产品类的公司还是蛮难的。我自己在甲方待过，也在乙方待过，我的感受就是：在中国的软件市场里边，甲方是非常强势的，软件用户的边界感也比较差，如果买了你的产品，就会希望你给他解决所有的问题，无论是软件的问题还是周边的问题，你都要给他解决。现在连我们国内用户做招聘，都要问我们给建议，我还帮我的甲方去面试过（笑~）</p><p>不过话说回来，这种方式还是有它的好处的。首先呢你会跟客户建立一个很强的连接，因为你服务时间长所以他会很信任你，很多东西都给到你，可能你会更容易拿到单子。像中国政企的一些客户，他们的项目都是一年到三年的，这对你的企业来讲，可能毛利不是特别高，但是会让你有持续的现金流输入，对整个企业的发展都有好处。</p><p>当然，这种方式的弊端也很明显。像我现在的产品服务了几十个客户，每个客户都有一个代码分支，每个客户手里的都不一样，这对于我们产品的维护、运维的压力就蛮大的。你会发现，一个软件公司到后期会越做越大，这不是说产品或生意越做越大，而是人员越来越多了，尤其是实施侧的人员、维护的人员，越来越多。这样下来，整体的毛利就会比较低，产品本身也比较割裂，最后可能形成了好几个产品而不是一个产品了。这也算是个有趣的中国特色吧。</p><p>从市场来看，中国纯产品型的软件公司还是比较少的，更多的是项目型的公司。但海外就不一样，就我们接触的经验而言，海外的客户他的边界感非常强，续费率又高，这就很有利于你费心思去打磨自己的产品。不过这种方式也有弊端，那就是他不愿意跟你建立太多的连接。我们之前想做个用户访谈，想问问产品的使用体验，看看你还有哪些场景是我们的产品可以满足的，但就遇到了困难。他可能会觉得，这个产品我用着没事，我也付钱了，你干嘛老找我？</p><p>哈哈，总之，这个市场的差别就非常明显。我个人觉得这两种形态都是比较典型的，也各有利弊，如果要做一个创业项目的话，还要结合具体的产品、不同的团队风格，甚至是创始人的风格，来做选择。</p><p>&nbsp;</p><p><strong>头哥：</strong>刚刚启鹏说的，我真是感同身受啊。我分享一下我的经验吧，我工作比较早，2001 年开始接触 Java，2004 年开始接触 IOE 架构，上海有个电视购物叫东方购物就是我们做的。七八年前，中国是没有基础软件厂商的，更早一点，十五年前，你说要找数据库，那只能想到 Oracle，这是一方面；另一方面，以神州数码为代表的基于标准厂商上面的第三方服务公司大行其道，我们的甲方之所以这么强势，就是被这些人给哄出来的。</p><p>当年我在东方购物的时候，我们一开始买了 Oracle 原厂的服务，Oracle 的工程师来这里支持，1 天 8 小时就要给 1 万块钱，加班另算。你想想 04 年 1 天 1 万是什么水平？后面我们把原厂的服务包给神州数码，服务非常好，价格还只要一半，加班不要钱。就这样，甲方慢慢地就被捧出来了。如果你不能全包，那我就不选你。反正我只是花钱解决问题，却还要我分清问题分开花钱，那我为什么不选一个全包的呢？我自己要是运维这么强还用找你吗？</p><p>所以，现在的甲方都很喜欢把项目总包给阿里云、华为云，这些云厂商都有行业解决方案架构师，他们做的都是解决方案，下面的产品都是模糊的，能用就行。内卷就是这么出来的。不过话说回来，市场没有好坏，关键是你要去适应它，而不是从自己的技术经验出发来判定这个市场好不好，这个思维要不得。</p><p>&nbsp;</p><p><strong>厉启鹏：</strong>是的，你在不同的市场做，就是要尊重不同市场的规则。像国内就是用这种方式去驱动产业的发展的。你也很难用好坏来评判一个市场。我上个月去考察了日本的市场，发现日本市场特别难进入，当时同行有个公司，花了一年的时间，才从日本市场拿了一个 80 万的单子。因为它那里有 POC 、安全认证等等的审核，门槛比较高。但是呢，一旦你吃下这个市场，你就可以一直吃下去，因为他们很少会主动更换供应商。所以，这也是日本市场的一个特点，我们要是想做的话也一样要尊重它的规则，国内国外都一样。</p><p>&nbsp;</p><p><strong>头哥：</strong>说得很好。刚刚启鹏也提到了一个点，就是国内的集成商比较厉害，<strong>很多甲方也会把你当外包看待，压根不管你的产品标不标准，还提一堆有关无关的需求，每个项目按人头算钱，对于这种现象，你怎么看呢？</strong></p><p>&nbsp;</p><p><strong>厉启鹏：</strong>我个人感觉，在国内做项目，要是想做得比较大，那对于这个项目负责人的要求还蛮高的，负责人他可能需要考虑很多方面。我见过一种情况就是，因为一个项目孵化了一个产品，通过这个产品打下了一个行业。之前有个做监控的公司就是这样，刚开始的时候是从建行做起来，后来把产品完善之后推到了浦发等等别的银行去了。那我觉得这种类型还是蛮有价值的，因为你解决的这个问题是一些通用的问题，你把它抽象成了产品，实现了规模化。</p><p>当然，更多的是头哥你说的那种，根本不管你产品如何是不是要做商业化，他只想解决他的问题。当然，这也没有问题，毕竟人家是甲方，出了钱的嘛。对于这种情况，可能这个项目负责人就要考虑下投入的问题，或者是怎么投入这个项目。一种是直接让自己的研发上，all in 到这个项目里边，还有一种方式是去找一些合作伙伴一起把这个项目拿下。甚至很多公司可能会先临时找些外包，因为你如果只要人头，那我就只给你人头，然后我只赚人头的钱。但有的公司呢可能会说对不起这人头钱我不赚，这个项目我不做了。</p><p>我觉得还是要想清楚吧，因为你要是没想清楚的话，可能会对公司的影响比较大，它会冲击你整个研发体系，甚至会影响整个产品的正常迭代。所以去做项目的时候一定要想清楚，你要做什么样的项目，你要服务什么样的用户，你要以什么样的方式去服务他。这个用户画像一定要清楚，不然就会把你的节奏带乱。</p><p>&nbsp;</p><p><strong>头哥：还有一个问题，作为我们这种普通的技术人，如何把我们手上的技术变现呢？</strong></p><p>&nbsp;</p><p><strong>厉启鹏：</strong>加入一家大公司，我觉得可能是一个比较好的方式。因为我自己的体会就是这样的，当时我在阿里做社区，看到不少小伙伴当时还在一家小公司，但是他在我们这个社区里边比较活跃，贡献了很多代码，这给他的经验、经历做了很大的加持，后来他们就都跳槽到大公司去了。从 ROI 的角度，或者从收益的角度来看，这是一个收益很高的事情，通过在知名项目做贡献，提升自己的技术和影响力，从而提升自己的职业生涯，我觉得这是最直接的一种方式。</p><p>第二种方式我也见过好多，就是技术经验丰富之后，去做咨询，或者是指导别人写代码，出书，出课程，做培训等等，也都做得挺不错的。</p><p>最后一种就是创业了，不过如果纯技术人想要创业的话，我建议你可以先加入一家创业公司，如果你能适应的话。假如公司靠谱，那之后它发达了你也就财富自由了。加入一家创业公司工作跟在大公司做一个具体细分的工作差异肯定非常大，在创业公司，假如说要做一辆劳斯莱斯，说不定得先从一辆自行车做起，然后做一辆电动车，再做一辆奥拓，再到宝马，最后才到劳斯莱斯，他是这么一个过程。绝对不是说我给你几年时间，让你做一辆劳斯莱斯，那样公司在市场上很难活下去的。但是在这种逐渐发展的过程中，对于一个技术人的技术视野，甚至商业的视野都会打开很多。我也见过很多这种人，之前是纯做技术的，加入这家创业公司之后，可能刚开始是做技术，后来他可能要做产品经理，再后来他可能是负责整个的售前，这对他个人能力就会有非常大的提升。</p><p>当然，选择也跟年龄段有关系。比如说工作五年以前的，我觉得还是可以去大厂看一看，体验一下。但是如果工作 5 年到 10 年甚至更久的时间了，我觉得加入一家创业公司还是一个不错的选择。但是，如果你说你要作为一个合伙人甚至是创始人去创办一家商业公司，那说实话我个人不是特别推荐。因为如果你是作为合伙人的身份的话，你会发现到后面你首先关注的不是技术了，而是用户，是融资，是市场，你要花很大的精力去做这些事情，可能有些人不一定喜欢。可能你后面做着做着发现自己成了一个销售，当然不是说销售不好，但他可能之前不喜欢，但是后边需要他做这个工作。所以第二个要考虑的就是，这是不是你能力范围内的事情，有些人他快速成长，快速改变，他的适应力非常强，那就没有问题。</p><p>&nbsp;</p><p><strong>头哥：最后一个问题，作为一个优秀的开源项目，如果想尝试商业化，有哪些方式呢？</strong></p><p>&nbsp;</p><p><strong>厉启鹏：</strong>如果是大厂想通过开源实现商业化的话，现在最典型的路径就是捐到基金会去，然后再通过运营社区的方式去获客。这种方式尤其适合基础软件，如果是一个特别垂类的软件倒不一定合适了。个人更赞同的一种方式是通过开源树立一个标杆，获得某些标杆企业的开发者的认可，这时候你再去复制可能就会非常快。比方说我这个软件，如果大厂采用了，那下面的二三线厂商可能也会跟进。影响力打出去了之后，再寻求付费可能就会容易一点了。</p><p>但是在当下，2023 年，这个节点，你建立一个项目去创业，那是比较难的。第一，开源商业化的路径比较长，你得先有项目，然后通过运营社区把这个影响力做起来，再出商业版去变现，那可能意味着这家创业公司要一年两年甚至三年没有收入，或者养活不了自己。在目前的这种就业环境包括投融资环境下，你能不能活两三年，这是一个非常大的问题，很多人撑不住的。</p><p>还有就是，以我自己的感受来讲，很多用户他只用开源版本，他从来就没有想过要用你的商业版，或者你出了商业版之后他就直接走了，这种就很难转化。有些开源公司做商业化成功了，并不是因为转化了开源用户为商业化用户，而是因为这个项目影响力起来之后，影响了那些不使用开源项目的用户，从而实现了商业化。这属于间接影响，你不好量化，从顶上来看的话，你都不好去制定一个考核机制，让大家知道哪些事有价值和引导他们做事。所以我觉得，如果是 Saas 的话，会比开源更能解决你打磨产品的问题，因为上面有数据，他们用了多少你看得到。</p><p>最后，我觉得开源最大的价值就是标准化，比如 Conflict ，它是构建大数据平台的一个标准，不管用它的开源还是买它的商业版，只要构建大数据平台都会想到它。其次就是开源有助于国际化，给了中国的企业出海或者是服务海外客户的一个机会，这是本土闭源的软件公司很难做到的。我一度认为开源加上云，是一个蛮好的方式，能够助力中国的软件企业成为一个服务全球的企业。以前没有云，想服务海外客户还得建本地团队，现在托 AWS 就可以了，大大节省了成本。</p><p>当然，开源好处多多，明天也很美好，现在的挑战就是看你能不能活到明天了。（笑~）</p><p>&nbsp;</p><p>本期直播回放如下，大家快扫码查看吧~</p><p><img height="355" src="https://oscimg.oschina.net/oscnet/up-41198acd2e49349768fe28449ea945e7227.png" width="385" referrerpolicy="no-referrer"></p></div></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 09:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/10139809</guid>
            <link>https://my.oschina.net/u/6852546/blog/10139809</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌承诺 20 亿美元投资 OpenAI 对手 Anthropic]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">谷歌发言人日前表示，该公司已同意向 OpenAI 的强力竞争对手 Anthropic 投资最多 20 亿美元。目前已预先投资了 5 亿美元，随着时间的推移将再追加 15 亿美元。</span></p><p><span style="color:#000000">Anthropic 成立于 2021 年，是一家由前 OpenAI 团队成员创立的人工智能初创公司。其在 ChatGPT 发布两个月后，就推出了 GPT-4 的重要竞品 Claude，并在 7 月初推出了升级版的 Claude 2。在今年上半年，Anthropic 的估值已达到了约 41 亿美元。</span></p><p><img height="277" src="https://oscimg.oschina.net/oscnet/up-cdc73121940d2bf6a2632504928ecf5790a.png" width="500" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Anthropic 的一份<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2023%2F04%2F06%2Fanthropics-5b-4-year-plan-to-take-on-openai%2F" target="_blank">内部文件透露</a>，该公司计划筹集 50 亿美元或更多以直接与 OpenAI 较量。并预计花费 10 亿美元，在 2024 年底推出自己的新一代大语言模型「Claude-Next」。</span></p><p><span style="color:#000000">Anthropic 首席执行官兼联合创始人 Dario Amodei 曾在上个月的一次谈话中称，「我们只成立了两年半多一点……在这段时间里，我们已经筹集了 15 亿美元，这是一个很大的数字。我们的团队规模相较来说要小得多，但我们已经成功地保持了自己的地位。我们真正做到了少花钱多办事，我认为很快我们就能用更多的资源做更多的事。」</span></p><p><span style="color:#000000">而除谷歌外，Anthropic 还获得了 Salesforce 和 Zoom 的融资。亚马逊也已经向 Anthropic 投资了 12.5 亿美元；并在 9 月份承诺，后续计划共向 Anthropic 投资高达 40 亿美元。</span></p><p><strong><span style="color:#000000">相关阅读：</span></strong></p><ul><li><a href="https://www.oschina.net/news/232921/claude-ai" target="_blank">Anthropic 推出 「更理性的 Claude」，正面硬刚 ChatGPT</a></li><li><p style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/news/263552/frontier-model-forum-ai-safety" target="_blank">OpenAI、谷歌微软等设立 1000 万美元 AI 安全基金</a></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 08:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264126/google-invest-2-billion-anthropic</guid>
            <link>https://www.oschina.net/news/264126/google-invest-2-billion-anthropic</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[百川智能发布 Baichuan2-192K 大模型，上下文窗口全球最长]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>10 月 30 日，百川智能发布<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FlAJh6qGG27u_qCl0kI-0lA" target="_blank">Baichuan2-192K 大模型</a></u>，其上下文窗口长度高达 192K，是目前全球最长的上下文窗口。</p><blockquote><p>上下文窗口长度是大模型的核心技术之一，通过更大的上下文窗口，模型能够结合更多上下文内容获得更丰富的语义信息，更好的捕捉上下文的相关性、消除歧义，进而更加准确、流畅的生成内容，提升模型能力。</p></blockquote><p>据介绍，<strong>Baichuan2-192K 能够处理约 35 万个汉字</strong>，是目前支持长上下文窗口最优秀大模型 Claude2（支持 100K 上下文窗口，实测约 8 万字）的 4.4 倍，更是 GPT-4（支持 32K 上下文窗口，实测约 2.5 万字）的 14 倍。Baichuan2-192K 不仅在上下文窗口长度上超越 Claude2，在长窗口文本生成质量、长上下文理解以及长文本问答、摘要等方面的表现也全面领先 Claude2。</p><p><img height="708" src="https://static.oschina.net/uploads/space/2023/1030/143754_9Lc3_2720166.png" width="1280" referrerpolicy="no-referrer"></p><p>Baichuan2-192K 在 Dureader、NarrativeQA、LSHT、TriviaQA 等 10 项中英文长文本问答、摘要的评测集上表现优异，有 7 项取得 SOTA，显著超过其他长窗口模型。</p><p><img src="https://static.oschina.net/uploads/space/2023/1030/143926_8N50_2720166.png" referrerpolicy="no-referrer"></p><p>此外，LongEval 的评测结果显示，在窗口长度超过 100K 后 Baichuan2-192K 依然能够保持非常强劲的性能，而其他开源或者商用模型在窗口长度增长后效果都出现了近乎直线下降的情况。Claude2 也不例外，在窗口长度超过 80K 后整体效果下降非常严重。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e09d70b43d3d3782cda3982ae4d742587e1.png" referrerpolicy="no-referrer"></p><p>今年 9 月 25 日，百川智能已开放了 Baichuan2 的 API 接口，正式进军企业级市场，开启商业化进程。<strong>此次 Baichuan2-192K 将以 API 调用和私有化部署的方式提供给企业用户</strong>，目前百川智能已经启动 Baichuan2-192K 的 API 内测，开放给法律、媒体、金融等行业的核心合作伙伴。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 06:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264086</guid>
            <link>https://www.oschina.net/news/264086</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IntelliJ IDEA 2023.3 EAP 6 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">IntelliJ IDEA 2023.3 EAP 6 现已发布。这是 IntelliJ IDEA 2023.3 Beta 发布之前的最终 EAP 版本，带来了更多新功能和增强功能的预览。</span></p><p><span style="color:#000000">一些亮点更新内容如下：</span></p><h4><span style="color:#000000"><strong>远程开发（</strong>Beta<strong>）</strong></span></h4><p><span style="color:#000000"><strong>改进了对 </strong></span><strong><span>Dev Containers&nbsp;</span></strong><span style="color:#000000"><strong>的支持</strong></span></p><p><span style="color:#000000">IntelliJ IDEA 2023.3 EAP 6 引入了对&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcontainers.dev%2Fimplementors%2Ffeatures%2F" target="_blank">Dev Container Features</a>&nbsp;<span style="color:#000000">的支持，提供了一种方便快捷的方式来集成开发所需的其他工具、运行时和库。虽然你仍然可以依靠 Dockerfile 和脚本来实现此目的，但功能的引入简化了基本组件的安装，确保更快的设置过程。</span></p><p><img height="201" src="https://oscimg.oschina.net/oscnet/up-a0e771254565fb54b102aec6ea08d0134b5.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>还在 Dev Containers 中引入了对 Docker Compose 的支持，从而可以使用 IDE 无缝启动主容器以及任何依赖容器，例如那些在开发过程中非常有用的数据库或消息队列容器。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><code>dockerComposeFile</code>属性指向<code>docker-compose.yml</code>文件的位置。</li><li><code>service</code>属性指定主容器的位置。</li><li><code>runServices</code>是一组依赖容器，应与开发环境一起启动或停止。</li></ul><p><img height="199" src="https://oscimg.oschina.net/oscnet/up-e1c2ac5ebcff62d528e76feb866f3f96732.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:#19191c">此外，还实现了自动端口转发，以便应用程序在 Dev Container 中开始侦听的任何端口都可以无缝转发。</span>&nbsp;</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3cb3ff996796f85f50d2b39712f1baae583.gif" width="500" referrerpolicy="no-referrer"></p><div><h4><strong><span>Clouds</span></strong></h4></div><div><p style="margin-left:0px; margin-right:0px"><strong><span>Bicep 支持</span></strong></p><p style="margin-left:0px; margin-right:0px">引入了对<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fen-us%2Fazure%2Fazure-resource-manager%2Fbicep%2F" target="_blank">Bicep</a>的初步支持，这是一种专为 Azure 量身定制的基础设施即代码语言。它转换为 Azure Resource Manager (ARM) 模板，旨在与 Azure 服务紧密集成。IDE 现在通过 Bicep 语言服务器协议提供代码高亮显示和代码自动补全功能。</p><p style="margin-left:0px; margin-right:0px"><img height="252" src="https://oscimg.oschina.net/oscnet/up-17ae979ece3e8edab2008933b09a0c423f6.png" width="500" referrerpolicy="no-referrer"></p><div><h4><strong><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>Kubernetes</span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4></div><div><p style="margin-left:0px; margin-right:0px"><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><strong>在 Kubernetes 中使用数据库</strong></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>IntelliJ IDEA 2023.3 EAP 6 在处理 Kubernetes 中托管的数据库时提供了增强的用户体验。现在，数据库工具允许你在建立数据库连接时在 Kubernetes 中配置端口转发。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div></div><p><img height="251" src="https://oscimg.oschina.net/oscnet/up-5e1ba9fa01eae8e9110b323f19a180ecfe9.png" width="500" referrerpolicy="no-referrer">&nbsp;</p><div><p style="margin-left:0px; margin-right:0px"><strong><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><span><span><span><span><span><span style="color:#19191c"><span><span><span><span><span>支持 YAML 文件注释中的<code>$schema</code></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p></div><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>IDE 现在可以识别对作为注释包含的特定 YAML 架构的引用，并根据指定架构在 YAML 文件内提供代码补全和语法验证，无论其是本地存储还是远程访问。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><img alt="" src="https://oscimg.oschina.net/oscnet/up-3a6382c981094f7c13aba8dc94f37056d50.gif" width="500" referrerpolicy="no-referrer"></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4><strong><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Build tools</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></h4><p style="margin-left:0px; margin-right:0px; text-align:start"><strong><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>基于限定模块名称的 Maven 项目模块分组</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></strong></p><p style="margin-left:0px; margin-right:0px; text-align:start">新版本改进了 IDE 处理项目模块分组的方式。现在，它会根据模块的限定名称自动对模块进行分组。如有需要，你可以手动重命名模块，这些名称将在后续 Maven 项目重新加载期间保留。</p><p style="margin-left:0px; margin-right:0px; text-align:start">详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fidea%2F2023%2F10%2Fintellij-idea-2023-3-eap-6%2F" target="_blank">查看官方博客</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 06:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264082/intellij-idea-2023-3-eap-6</guid>
            <link>https://www.oschina.net/news/264082/intellij-idea-2023-3-eap-6</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[华为申请注册「遥遥领先」商标]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>近日，华为技术有限公司申请注册「遥遥领先」商标，国际分类为运输工具、科学仪器，当前商标状态为等待实质审查。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-2632d0767a23ab6a185920e5193ba46340f.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-84f3e8ecf2f2e09c7cf0b5e8bafc4e67698.png" referrerpolicy="no-referrer"></p><p>最近因华为 Mate60 系列手机发售，「遥遥领先」成为网络热词。</p><p>「遥遥领先」一词最先是出现在华为手机 Mate40 的发布会上，余承东在介绍手机的处理器、屏幕、电池、充电、摄像头、音质等状况时，曾经说了 14 次「遥遥领先」。去年的 Mate50 发布，全球首发了衞星通信功能，余承东再次提及「遥遥领先」，并称其为捅破天的技术，又将「遥遥领先」的热度推高。</p><p>随后，华为的粉丝也经常在华为发布会上喊「遥遥领先」为华为加油。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c2112b8f18f699b1b8299410458e1811c69.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 06:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264078</guid>
            <link>https://www.oschina.net/news/264078</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[📙《高并发的哲学原理》纸质版书稿完全开源，共 16 万多字]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><img alt="" height="600" src="https://oscimg.oschina.net/oscnet/up-1fb8b3621b91010af5c26e565583383ab83.png" width="1762" referrerpolicy="no-referrer"></p><p><strong>阅读地址：</strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpphc.lvwenhan.com" target="_blank">https://pphc.lvwenhan.com</a></p><p style="color:#24292f; text-align:start"><strong>pdf 下载链接在网站右上角。</strong></p><h3>写作目标</h3><p style="color:#2c3e50; text-align:start">本书的目标是在作者有限的认知范围内，讨论一下高并发问题背后隐藏的一个哲学原理——找出单点，进行拆分。</p><h3>内容梗概</h3><p style="color:#2c3e50; text-align:start">我们将从动静分离讲起，一步步深入 Apache、Nginx、epoll、虚拟机、k8s、异步非阻塞、协程、应用网关、L4/L7 负载均衡器、路由器 (网关)、交换机、LVS、软件定义网络 (SDN)、Keepalived、DPDK、ECMP、全冗余架构、用户态网卡、集中式存储、分布式存储、PCIe 5.0、全村的希望 CXL、InnoDB 三级索引、内存缓存、KV 数据库、列存储、内存数据库、Shared-Nothing、计算存储分离、Paxos、微服务架构、削峰、基于地理位置拆分、高可用等等等等。并最终基于地球和人类社会的基本属性，设计出可以服务地球全体人类的高并发架构。</p><p style="color:#2c3e50; text-align:start"><br> 全书共 167674 字。</p><h3>读者评价</h3><blockquote><p>会上一谈到架构和 I/O，我都想到你的文章。主讲解答清楚和没解答清楚的，都没你的文章清楚。</p><p>—— 秋收，于 RubyConf 2023</p></blockquote><hr><blockquote><p>像看小说一样把文章都看完了，全程无尿点，作者的脑袋是在哪里开过光，知识储备竟如此扎实</p><p>—— 观东山</p></blockquote><hr><blockquote><p>非常棒的技术分享！深入浅出，娓娓道来，让我想起了那本 csapp。</p><p>—— drhrchen</p></blockquote><hr><blockquote><p>写得真好，膜拜！作者愿意出书吗，一定买！</p><p>—— bean</p></blockquote><hr><blockquote><p>拜读了！应该算是架构顶级总结！！</p><p>—— 雨山前</p></blockquote><hr><blockquote><p>看完了，博主好厉害，学习到了各种骚技巧，和知识，膜拜</p><p>—— evanxian</p></blockquote><hr><blockquote><p>写的太好了，不仅充满了理工科的严谨较真，也充满了文科的浪漫</p><p>—— 一秒</p></blockquote><hr><blockquote><p>写得很好，视角也是我喜欢的，站在地球表面，述事宏大，思维自信。</p><p>—— 纳秒时光</p></blockquote><hr><blockquote><p>全部看完，博主太强了，很受启发</p><p>—— Bruce</p></blockquote><hr><blockquote><p>棒</p><p>—— JuniaWonter</p></blockquote><h2>作者信息</h2><h3>吕文翰</h3><ol><li>GitHub：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjohnlui" target="_blank">johnlui</a></li><li>职位：住范儿创始成员，CTO，监事</li></ol><h4>高并发系统处理经验</h4><ol><li>2017 年维护的单体 CMS 系统顶住了每日两百万 PV 的压力</li><li>2020 年优化一个单机 PHP 商城顶住了 QPS 1000+ 的压力</li><li>2021 年设计的分布式电商秒杀系统在实际业务中跑到了最高一分钟 GMV 500 万，QPS 10000+</li></ol><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3e128c2c71f79a9f5c551fa204024a7d6d1.jpg" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p>&nbsp;</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-c1a9c97d554a8c227a53037467944206a7c.jpg" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ce3364f3899525cd6ffc33de9d05faf6e73.jpg" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-03c79aa58b98f1f7f757bc4647cc40a81b0.jpg" referrerpolicy="no-referrer"></p><p><img alt="" height="1818" src="https://oscimg.oschina.net/oscnet/up-bbca5aa6d8d33372882757c429ad5a13815.jpg" width="3320" referrerpolicy="no-referrer"></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 05:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264073</guid>
            <link>https://www.oschina.net/news/264073</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Windows 11 已原生支持 11 种文件存档格式，包括 7-Zip 和 RAR]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">在今年 5 月份，微软方面曾<a href="https://www.oschina.net/news/242230/windows-11-supports-rar">宣布</a>将在&nbsp;<span style="background-color:#ffffff">Windows 11 系统中原生增加对 RAR、7-Zip 等压缩文件格式的解压支持。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">时至今日，该公司已通过本月的可选&nbsp;KB5031455&nbsp;预览累积更新添加了对 11 种新文件存档格式的支持，Windows 11 22H2 现在原生支持近十几种附加存档格式。</span></span><span style="color:#000000"><span style="background-color:#ffffff">Windows 11 中支持的存档类型的更新列表现在添加了：.rar、.7z、.tar、.tar.gz、.tar.bz2、.tar.zst、.tar.xz、.tgz、.tbz2、.tzst、和 .txz。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">不过目前还不支持密码加密文件，微软<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bleepingcomputer.com%2Fnews%2Fmicrosoft%2Fwindows-11-adds-support-for-11-file-archives-including-7-zip-and-rar%2F" target="_blank">发言人</a>也没有透露更多的相关信息；其后续可能还将添加对&nbsp;LZH、LZH 和 XAR 等其他格式的支持。</span></span></p><p><span style="color:#000000">「我们使用 </span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flibarchive%2Flibarchive" target="_blank">libarchive</a><span style="color:#000000"> 开源项目添加了对其他存档格式的原生支持，包括 tar、7-Zip、RAR、gz 和许多其他格式。现在，你可以在 Windows 上的压缩过程中获得更高的存档功能性能。」</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">libarchive 是一个开源的 C 库，旨在为各种不同的压缩格式提供读取和写入支持。它支持许多常见的压缩格式，并提供了许多高级功能，例如加密、数字签名、多卷支持等。libarchive 的主要优点是它的跨平台支持，它可以在各种操作系统上运行，包括 Linux、Windows、macOS 等。它还提供了多种语言的绑定，如 Python、Ruby、Perl 等，使得开发人员可以方便地在自己喜欢的编程语言中使用它。</span></p><p><span style="color:#000000">由于 KB5031455 是一个可选更新，Windows 用户必须手动安装。这项新功能还将通过计划在 11 月份的"</span>Patch Tuesday<span style="color:#000000">"发布的累积更新向所有 Windows 11 用户推出。</span></p><p><img height="271" src="https://oscimg.oschina.net/oscnet/up-2a02652354dae96fd940ccc4d707d65e355.png" width="500" referrerpolicy="no-referrer"></p><p><strong>延伸阅读：</strong></p><ul><li><a href="https://www.oschina.net/news/242230/windows-11-supports-rar" target="_blank">Windows 将原生支持解压 RAR 和 7Z</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 03:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264054/windows-11-support-11-file-archives-7-zip-rar</guid>
            <link>https://www.oschina.net/news/264054/windows-11-support-11-file-archives-7-zip-rar</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[🎊OpenTiny Vue 3.11.0 发布：增加富文本、ColorPicker 等 4 个新组件，迎来了贡献者大爆发！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>你好，我是 Kagol。</p><p>非常高兴跟大家宣布，2023 年 10 月 24 日，OpenTiny Vue 发布了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Freleases%2Ftag%2Fv3.11.0" target="_blank">v3.11.0</a> 🎉。</p><p>OpenTiny 每次大版本发布，都会给大家带来一些实用的新特性，8.14 我们发布了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Freleases%2Ftag%2Fv3.10.0" target="_blank">v3.10.0</a> 版本，增加了 4 个新组件，组件 Demo 支持在 Options 和 Composition api 之间切换。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7268207722239148044" target="_blank">🎉OpenTiny Vue 3.10.0 版本发布：组件 Demo 支持 Composition 写法，新增 4 个新组件</a></p><p>本次 3.11.0 版本主要增加以下新组件：</p><ul><li>RichTextEditor 富文本编辑器组件 - by <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FCaesar-ch" target="_blank">Caesar-ch</a></li><li>ColorPicker 颜色选择器组件 - by <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FGaoNeng-wWw" target="_blank">GaoNeng-wWw</a></li><li>CalendarView 日历视图组件 - by <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkagol" target="_blank">kagol</a></li><li>Divider 分割线组件 - by <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvaebe" target="_blank">vaebe</a></li></ul><p>本次版本共有 23 位贡献者参与开发，其中有 14 位是新贡献者，欢迎新朋友们👏</p><p>以下是新贡献者：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjack-zishan" target="_blank">@jack-zishan</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F392" target="_blank">#392</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FLinboLen" target="_blank">@LinboLen</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F478" target="_blank">#478</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvaebe" target="_blank">@vaebe</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F471" target="_blank">#471</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fallenli178" target="_blank">@allenli178</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F488" target="_blank">#488</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FBinks123" target="_blank">@Binks123</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F500" target="_blank">#500</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fyoyo201626" target="_blank">@yoyo201626</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F513" target="_blank">#513</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fwkif" target="_blank">@wkif</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F512" target="_blank">#512</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fchenguang1994" target="_blank">@chenguang1994</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F518" target="_blank">#518</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FZuowendong" target="_blank">@Zuowendong</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F503" target="_blank">#503</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgweesin" target="_blank">@gweesin</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F554" target="_blank">#554</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fshonen7" target="_blank">@shonen7</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F567" target="_blank">#567</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxlearns" target="_blank">@xlearns</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F574" target="_blank">#574</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fianxinnew" target="_blank">@ianxinnew</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F617" target="_blank">#617</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FXppp0217" target="_blank">@Xppp0217</a>&nbsp;made their first contribution in&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2Ftiny-vue%2Fpull%2F610" target="_blank">#610</a></li></ul><p>也感谢老朋友们对 OpenTiny 的辛苦付出！</p><p>尤其感谢 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fpe-3" target="_blank">pe-3</a> / <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FCaesar-ch" target="_blank">Caesar-ch</a> / <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FGaoNeng-wWw" target="_blank">GaoNeng-wWw</a> / <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvaebe" target="_blank">vaebe</a> / <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FBinks123" target="_blank">Binks123</a>。</p><p>大家可以更新 <code>@opentiny/vue@3.11.0</code> 进行体验！</p><h2>RichTextEditor 富文本编辑器</h2><p>该组件由 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FCaesar-ch" target="_blank">Caesar-ch</a> 同学贡献🎉</p><p>富文本编辑器虽然不是高频组件，但在特定的领域，比如需求管理、内容编辑、文章创作等，几乎是必备组件之一。</p><p>为了满足这些业务的需求，我们推出了 RichTextEditor 富文本组件，目前只是初版，只包含以下基础功能：</p><ul><li>加粗、斜体、下划线、删除线</li><li>引用</li><li>行内代码、代码块</li><li>有序列表、无序列表、任务列表</li><li>上标、下标</li><li>撤销、重做</li><li>左对齐、右对齐、居中对齐</li><li>段落、H1-H6 标题</li><li>字号、行间距</li><li>高亮、文本颜色、背景色</li><li>清除格式</li><li>超链接</li><li>上传图片</li><li>插入/编辑表格</li></ul><p>后续将不断进行丰富，欢迎朋友们一起参与共建。</p><p>使用起来非常简单：</p><pre><code class="language-html">&lt;template&gt;
  &lt;tiny-rich-text-editor&gt;&lt;/tiny-rich-text-editor&gt;
&lt;/template&gt;

&lt;script lang="ts" setup&gt;
import { RichTextEditor as TinyRichTextEditor } from '@opentiny/vue'
&lt;/script&gt;
</code></pre><p>以下是效果图：</p><p><img src="https://oscimg.oschina.net/oscnet/up-47bf70d440b55b03b73cadece12c578c878.png" alt="" referrerpolicy="no-referrer"></p><p>可以通过 custom-toolbar 配置工具栏：</p><pre><code class="language-html">&lt;template&gt;
  &lt;tiny-rich-text-editor :customToolBar="customToolBar"&gt;&lt;/tiny-rich-text-editor&gt;
&lt;/template&gt;

&lt;script setup lang="jsx"&gt;
import { ref } from 'vue'
import { RichTextEditor as TinyRichTextEditor } from '@opentiny/vue'

const customToolBar = ref(['bold', 'italic'])
&lt;/script&gt;
</code></pre><p>效果如下：</p><p><img src="https://oscimg.oschina.net/oscnet/up-1147fffec6379d22695d67e56fba4664680.png" alt="" referrerpolicy="no-referrer"></p><p>更多功能等你来体验！</p><h2>ColorPicker 颜色选择器</h2><p><code>ColorPicker</code> 颜色选择组件用于在应用程序和界面中让用户选择颜色。它是一个交互式的元素，通常由一个色彩光谱、色相环和颜色值输入框组成，用户可以通过这些元素来选择所需的颜色。ColorPicker 的主要功能是让用户能够精确地选择特定的颜色，以便在应用程序的各种元素中使用。</p><p>该组件是由 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FGaoNeng-wWw" target="_blank">GaoNeng</a> 同学贡献的🎉，他还写了一篇 ColorPicker 组件开发全流程的总结文章。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7273039565904805943" target="_blank">GaoNeng：我是如何为 OpenTiny 贡献新组件的？</a></p><p>ColorPicker 使用方式很简单：</p><pre><code class="language-html">&lt;template&gt;
  &lt;tiny-color-picker v-model="color" /&gt;
&lt;/template&gt;

&lt;script setup lang="ts"&gt;
import { ref } from 'vue'
import { ColorPicker as TinyColorPicker } from '@opentiny/vue'
const color = ref('#66ccff')
&lt;/script&gt;
</code></pre><p>效果如下：</p><p><img src="https://oscimg.oschina.net/oscnet/up-b057da8b3789c696e4d08173ef282701c0f.png" alt="" referrerpolicy="no-referrer"></p><p>该组件功能非常强大，除了在色板中选择颜色之外，还支持：</p><ul><li>透明度调节</li><li>预定义颜色</li><li>颜色历史</li><li>颜色选择面板单独使用</li></ul><p>更多功能等你来体验！</p><p>透明度调节：</p><p><img src="https://oscimg.oschina.net/oscnet/up-c350aad80432e9ca114193691533a44c539.png" alt="" referrerpolicy="no-referrer"></p><p>预定义颜色：</p><p><img src="https://oscimg.oschina.net/oscnet/up-4e263213bfaa04d89cd65b26d6cc28e4f47.png" alt="" referrerpolicy="no-referrer"></p><p>颜色历史：</p><p><img src="https://oscimg.oschina.net/oscnet/up-84717f04236162824c078dd4b52e6d4c956.png" alt="" referrerpolicy="no-referrer"></p><p>颜色面板单独使用：</p><p><img src="https://oscimg.oschina.net/oscnet/up-538fd1ef71f738381ec1b57677217a37339.png" alt="" referrerpolicy="no-referrer"></p><h2>CalendarView 日历视图</h2><p>大家都知道 DatePicker 日期选择器，这个组件通过一个日期表格来选择一个日期，日期表格的放大版本就是日历表格，我们来看下对比图。</p><p>DatePicker 日期表格：</p><p><img src="https://oscimg.oschina.net/oscnet/up-9c75f49c4563c1c34d33d83efa3bba203e5.png" alt="" referrerpolicy="no-referrer"></p><p>CalendarView 日历表格：</p><p><img src="https://oscimg.oschina.net/oscnet/up-c3f1e361478ec9c16b89e8e5651e097945f.png" alt="" referrerpolicy="no-referrer"></p><p>欢迎体验！</p><h2>Divider 分割线</h2><p>该组件由 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvaebe" target="_blank">vaebe</a> 同学贡献🎉</p><p>分割线相对比较简单，目前主要支持：</p><ul><li>横向和竖向分割线</li><li>添加分割线文案、调整文案位置</li><li>自定义分割线样式</li></ul><p>效果如下：</p><p><img src="https://oscimg.oschina.net/oscnet/up-1660ecf8650d5f1824c8afd9a48cf9374cb.png" alt="" referrerpolicy="no-referrer"></p><p>欢迎体验！</p><h2>关于 OpenTiny</h2><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">OpenTiny</a> 是一套企业级 Web 前端开发解决方案，提供跨端、跨框架的 UI 组件库，适配 PC 端 / 移动端等多端，支持 Vue2 / Vue3 / Angular 多技术栈，拥有灵活扩展的低代码引擎，包含主题配置系统 / 中后台模板 / CLI 命令行等丰富的效率提升工具，可帮助开发者高效开发 Web 应用。</p><p><img src="https://oscimg.oschina.net/oscnet/up-668bb932353df7dbf97bc64795d640c6a25.png" alt="" referrerpolicy="no-referrer"></p><p>核心亮点：</p><ol><li><code>跨端跨框架</code>：使用 Renderless 无渲染组件设计架构，实现了一套代码同时支持 Vue2 / Vue3，PC / Mobile 端，并支持函数级别的逻辑定制和全模板替换，灵活性好、二次开发能力强。</li><li><code>组件丰富</code>：PC 端有 100+组件，移动端有 30+组件，包含高频组件 Table、Tree、Select 等，内置虚拟滚动，保证大数据场景下的流畅体验，除了业界常见组件之外，我们还提供了一些独有的特色组件，如：Split 面板分割器、IpAddress IP 地址输入框、Calendar 日历、Crop 图片裁切等。</li><li><code>低代码引擎</code>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-engine" target="_blank">TinyEngine</a> 低代码引擎使能开发者定制低代码平台。它是低代码平台的底座，提供可视化搭建页面等基础能力，既可以通过线上搭配组合，也可以通过下载源码进行二次开发，实时定制出自己的低代码平台。适用于多场景的低代码平台开发，如：资源编排、服务端渲染、模型驱动、移动端、大屏端、页面编排等。</li><li><code>配置式组件</code>：组件支持模板式和配置式两种使用方式，适合低代码平台，目前团队已经将 OpenTiny 集成到内部的低代码平台，针对低码平台做了大量优化</li><li><code>周边生态齐全</code>：提供了基于 Angular + TypeScript 的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-ng%2Foverview" target="_blank">TinyNG</a> 组件库，提供包含 10+ 实用功能、20+ 典型页面的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Fpro" target="_blank">TinyPro</a> 中后台模板，提供覆盖前端开发全流程的 TinyCLI 工程化工具，提供强大的在线主题配置平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Fdesigntheme%2Fhome" target="_blank">TinyTheme</a></li></ol><hr><p>欢迎加入 OpenTiny 开源社区。</p><p>添加微信小助手：opentiny-official，一起参与共建！</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">OpenTiny</a> 官网：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2F" target="_blank">https://opentiny.design/</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-vue" target="_blank">Vue 组件库</a>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-vue" target="_blank">https://opentiny.design/tiny-vue</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-engine" target="_blank">低代码引擎</a>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-engine" target="_blank">https://opentiny.design/tiny-engine</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-ng" target="_blank">Angular 组件库</a>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopentiny.design%2Ftiny-ng" target="_blank">https://opentiny.design/tiny-ng</a></p><p>OpenTiny 代码仓库：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fopentiny%2F" target="_blank">https://github.com/opentiny/</a> （欢迎 Star ⭐）</p><p>往期文章推荐</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7291598231954653240" target="_blank">OpenTiny Vue 支持 Vue2.7 啦！</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7280006603637751865" target="_blank">🖖少年，该升级 Vue3 了！</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7273039565904805943" target="_blank">✨GaoNeng：我是如何为 OpenTiny 贡献新组件的？</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7262349502920523833" target="_blank">✨xiaoy：但因热爱，愿迎万难，OpenTiny 社区增加一枚前端程序媛贡献者</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7255239937170161723" target="_blank">✨贡献者招募：前端 Vuer，请收好这份《Vue 组件单元测试》宝典，给自己多一些安全感</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7258319655285571644" target="_blank">🎉OpenTiny 前端组件库正式开源啦！面向未来，为开发者而生</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7252198762624548924" title="从自研走向开源的 TinyVue 组件库" target="_blank">🎉从自研走向开源的 TinyVue 组件库</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7218926523252260923" target="_blank">🌈一个 OpenTiny，Vue2 Vue3 都支持！</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuejin.cn%2Fpost%2F7224756843711758393" target="_blank">🌈如何启动我的第一次开源贡献</a>（如果你之前没有参加过开源贡献，请阅读这篇文章）</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 03:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4863191/blog/10128241</guid>
            <link>https://my.oschina.net/u/4863191/blog/10128241</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[官宣｜Apache Flink 1.18 发布公告]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#24292e; margin-left:0px; margin-right:0px; text-align:start"><img alt="" height="383" src="https://oscimg.oschina.net/oscnet/up-3eb9414c54625e015117d61b4b0b2397619.png" width="685" referrerpolicy="no-referrer"></p><p style="color:#24292e; margin-left:0px; margin-right:0px; text-align:start">Apache Flink PMC 已正式发布 Apache Flink 1.18.0 版本。与往常一样，这是一个充实的版本，包含了广泛的改进和新功能。总共有 174 人为此版本做出了贡献，完成了 18 个 FLIPs 和 700 多个问题。感谢各位贡献者的支持！</p><span id="OSC_h2_1"></span><h2>迈向 Streaming Lakehouse</h2><span id="OSC_h3_2"></span><h3>Flink SQL 提升</h3><span id="OSC_h4_3"></span><h4>Flink SQL Gateway 的 JDBC Driver</h4><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">Flink 1.18 版本提供了 Flink SQL Gateway 的 JDBC Driver。因此，您现在可以使用支持 JDBC 的任何 SQL 客户端通过 Flink SQL 与您的表进行交互。以下是使用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjulianhyde.github.io%2Fsqlline%2Fmanual.html" rel="nofollow" target="_blank">SQLLine</a><span>&nbsp;</span>的示例。</p><pre><code>sqlline version 1.12.0
sqlline&gt; !connect jdbc:flink://localhost:8083
Enter username for jdbc:flink://localhost:8083:
Enter password for jdbc:flink://localhost:8083:
0: jdbc:flink://localhost:8083&gt; CREATE TABLE T(
<span style="color:#4078f2">. </span>.)&gt;      a INT,
<span style="color:#4078f2">. </span>.)&gt;      b VARCHAR(10)
<span style="color:#4078f2">. </span>.)&gt;  ) WITH (
<span style="color:#4078f2">. </span>.)&gt;      <em>'connector'</em> = <em>'filesystem'</em>,
<span style="color:#4078f2">. </span>.)&gt;      <em>'path'</em> = <em>'file:///tmp/T.csv'</em>,
<span style="color:#4078f2">. </span>.)&gt;      <em>'format'</em> = <em>'csv'</em><span style="color:#4078f2">. </span>.)&gt;  );
No rows affected (0.122 seconds)
<span style="color:#e45649">0: jdbc:flink://localhost:8083&gt; INSERT INTO T VALUES (1, 'Hi'), (2, 'Hello');
+----------------------------------+</span><span style="color:#e45649">|              job id              |
+----------------------------------+</span><span style="color:#e45649">| fbade1ab4450fc57ebd5269fdf60dcfd |
+----------------------------------+</span>
1 row selected (1.282 seconds)
<span style="color:#e45649">0: jdbc:flink://localhost:8083&gt; SELECT * FROM T;
+---+-------+</span><span style="color:#e45649">| a |   b   |
+---+-------+</span>
| 1 | Hi    |
<span style="color:#e45649">| 2 | Hello |
+---+-------+</span>
2 rows selected (1.955 seconds)
0: jdbc:flink://localhost:8083&gt;
</code></pre><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdev%2Ftable%2Fjdbcdriver%2F" rel="nofollow" target="_blank">文档</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-293%253A%2BIntroduce%2BFlink%2BJdbc%2BDriver%2BFor%2BSql%2BGateway" rel="nofollow" target="_blank">FLIP-293: Introduce Flink Jdbc Driver For Sql Gateway</a></li></ul><span id="OSC_h4_4"></span><h4>Flink 连接器的存储过程（Stored Procedure）支持</h4><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">存储过程（Stored Procedure）在传统数据库中一直是不可或缺的工具，它提供了一种方便的方式来封装用于数据操作和任务管理的复杂逻辑。存储过程还提供了增强性能的潜力，因为它们可以直接在外部数据库中触发数据操作的处理。其他流行的数据系统如 Trino 和 Iceberg 将常见的维护任务自动化并简化为一小组存储过程，从而大大减轻了用户的管理负担。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">本次更新主要针对 Flink 连接器的开发人员，他们现在可以通过 Catalog 接口预定义自定义存储过程到连接器中。对用户的主要好处是，以前需要编写自定义 Flink 代码来实现的连接器特定任务现在可以用封装化、标准化和潜在优化底层操作的简单调用来替代。用户可以使用熟悉的 CALL 语法执行存储过程，并使用 SHOW PROCEDURES 查看连接器的可用存储过程。连接器内的存储过程提高了 Flink 的 SQL 和 Table API 的可扩展性，为用户提供更顺畅的数据访问和管理能力。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">用户可以使用 Call 语句来直接调用 catalog 内置的存储过程（注：catalog 内置的存储过程请参考对应 catalog 的文档）。比如可以通过如下 Call 语句对 Paimon 表进行 compact 操作：</p><pre><code><span style="color:#a626a4">CREATE</span><span style="color:#a626a4">TABLE</span><span style="color:#50a14f">`paimon`</span>.<span style="color:#50a14f">`default`</span>.<span style="color:#50a14f">`T`</span> ( 
 <span style="color:#a626a4">id</span><span style="color:#c18401">BIGINT</span> PRIMARY <span style="color:#a626a4">KEY</span><span style="color:#a626a4">NOT</span><span style="color:#a626a4">ENFORCED</span>,  
 dt <span style="color:#a626a4">STRING</span>, <em>-- format 'yyyy-MM-dd'  </em>
 v <span style="color:#a626a4">STRING</span>
);

<em>-- use catalog before call </em>
proceduresUSE CATALOG `paimon`;

<em>-- compact the whole table using call statement</em><span style="color:#a626a4">CALL</span> sys.compact(<span style="color:#50a14f">'default.T'</span>);
</code></pre><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdev%2Ftable%2Fprocedures%2F" rel="nofollow" target="_blank">文档</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-311%253A%2BSupport%2BCall%2BStored%2BProcedure" rel="nofollow" target="_blank">FLIP-311: Support Call Stored Procedure</a></li></ul><span id="OSC_h4_5"></span><h4>DDL 支持扩展</h4><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">从 1.18 版本开始，Flink 支持以下功能：</p><ul><li>REPLACE TABLE AS SELECT</li><li>CREATE OR REPLACE TABLE AS SELECT</li></ul><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">这两个命令以及之前支持的 CREATE TABLE AS 现在都支持原子性，前提是底层连接器也支持。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">此外，Apache Flink 现在支持在批处理模式下执行 TRUNCATE TABLE。与以前一样，底层连接器需要实现并提供此功能。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">最后，我们还实现了通过以下方式支持添加、删除和列出分区：</p><ul><li>ALTER TABLE ADD PARTITION</li><li>ALTER TABLE DROP PARTITION</li><li>SHOW PARTITIONS</li></ul><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdev%2Ftable%2Fsql%2Ftruncate%2F" rel="nofollow" target="_blank">TRUNCATE 文档</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdev%2Ftable%2Fsql%2Fcreate%2F%23create-or-replace-table" rel="nofollow" target="_blank">CREATE OR REPLACE 文档</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdev%2Ftable%2Fsql%2Falter%2F%23alter-table" rel="nofollow" target="_blank">ALTER TABLE 文档</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-302%253A%2BSupport%2BTRUNCATE%2BTABLE%2Bstatement%2Bin%2Bbatch%2Bmode" rel="nofollow" target="_blank">FLIP-302: Support TRUNCATE TABLE statement in batch mode</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-303%253A%2BSupport%2BREPLACE%2BTABLE%2BAS%2BSELECT%2Bstatement" rel="nofollow" target="_blank">FLIP-303: Support REPLACE TABLE AS SELECT statement</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-305%253A%2BSupport%2Batomic%2Bfor%2BCREATE%2BTABLE%2BAS%2BSELECT%2528CTAS" rel="nofollow" target="_blank">FLIP-305: Support atomic for CREATE TABLE AS SELECT(CTAS) statement</a>+statement)</li></ul><span id="OSC_h4_6"></span><h4>时间旅行（Time Traveling）</h4><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">Flink 支持时间旅行（time travel） SQL 语法，用于查询历史版本的数据。用户可以指定一个时间点，来检索表在该时间点的数据和架构。借助时间旅行功能，用户可以轻松分析和比较数据的历史版本。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">例如，用户可以通过如下的语句查询一张表指定时间点的数据；</p><pre><code><em>-- 查询表 `paimon_tb` 在 2022 年 11 月 11 日的数据</em><span style="color:#a626a4">SELECT</span> * <span style="color:#a626a4">FROM</span> paimon_tb <span style="color:#a626a4">FOR</span> SYSTEM_TIME <span style="color:#a626a4">AS</span><span style="color:#a626a4">OF</span><span style="color:#986801">TIMESTAMP</span><span style="color:#50a14f">'2022-11-11 00:00:00'</span>；
</code></pre><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdev%2Ftable%2Fsql%2Fqueries%2Ftime-travel%2F" rel="nofollow" target="_blank">文档</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-308%253A%2BSupport%2BTime%2BTravel" rel="nofollow" target="_blank">FLIP-308: Support Time Travel</a></li></ul><span id="OSC_h3_7"></span><h3>流处理提升</h3><span id="OSC_h4_8"></span><h4>Table API &amp; SQL 支持算子级别状态保留时间（TTL）</h4><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">从 Flink 1.18 版本开始，Table API 和 SQL 用户可以为有状态的算子单独设置状态保留时间 (TTL)。在像流 regular join 这样的场景中，用户现在可以为左侧和右侧流设置不同的 TTL。在以前的版本中，状态保留时间只能在 pipeline 级别使用配置项 table.exec.state.ttl 进行控制。引入算子级别的状态保留后，用户现在可以根据其具体需求优化资源使用。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdev%2Ftable%2Fconcepts%2Foverview%2F%23configure-operator-level-state-ttl" rel="nofollow" target="_blank">文档</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-292%253A%2BEnhance%2BCOMPILED%2BPLAN%2Bto%2Bsupport%2Boperator-level%2Bstate%2BTTL%2Bconfiguration" rel="nofollow" target="_blank">FLIP-292: Enhance COMPILED PLAN to support operator-level state TTL configuration</a></li></ul><span id="OSC_h4_9"></span><h4>SQL 的水印对齐（Watermark Alignment）和空闲检测（Idleness Detection）</h4><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">现在，您可以使用 SQL Hint 配置<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdev%2Fdatastream%2Fevent-time%2Fgenerating_watermarks%2F%23watermark-alignment" rel="nofollow" target="_blank">水印对齐</a>和<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdev%2Fdatastream%2Fevent-time%2Fgenerating_watermarks%2F%23dealing-with-idle-sources" rel="nofollow" target="_blank">数据源空闲超时</a>。之前这些功能仅在 DataStream API 中可用。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdev%2Ftable%2Fsql%2Fqueries%2Fhints%2F" rel="nofollow" target="_blank">文档</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-296%253A%2BExtend%2Bwatermark-related%2Bfeatures%2Bfor%2BSQL" rel="nofollow" target="_blank">FLIP-296：Extend watermark-related features for SQL</a></li></ul><span id="OSC_h3_10"></span><h3>批处理提升</h3><span id="OSC_h4_11"></span><h4>Hybrid Shuffle 支持远程存储</h4><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">Hybrid Shuffle 支持将 Shuffle 数据存储在远程存储中。可以使用配置项 taskmanager.network.hybrid-shuffle.remote.path 配置远程存储路径。Hybrid Shuffle 通过将内存用量与并行度解耦，减少了网络内存的使用，提高了稳定性和易用性。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fops%2Fbatch%2Fbatch_shuffle%2F%23hybrid-shuffle" rel="nofollow" target="_blank">文档</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-301%253A%2BHybrid%2BShuffle%2Bsupports%2BRemote%2BStorage" rel="nofollow" target="_blank">FLIP-301: Hybrid Shuffle supports Remote Storage</a></li></ul><span id="OSC_h4_12"></span><h4>性能提升与 TPC-DS 基准测试</h4><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">在之前的版本中，社区投入了大量精力来改进 Flink 的批处理性能，产生了显著的改进。在这个发布周期中，社区的贡献者继续付出了重大努力，进一步改进了 Flink 的批处理性能。</p><p>Flink SQL 的运行时过滤（Runtime Filter）</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">运行时过滤（Runtime Filter）是用于优化 join 性能的常见方法。它旨在动态生成某些 join 查询的运行时过滤条件，以减少扫描或 Shuffle 的数据量，避免不必要的 I/O 和网络传输，从而加速查询。我们在 Flink 1.18 版本引入了运行时过滤，并通过 TPC-DS 基准测试验证了其有效性，观察到启用此功能后，某些查询的速度提高了 3 倍。</p><p>Flink SQL 算子的融合代码生成（Operator Fusion Codegen）</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">算子融合代码生成（Operator Fusion Codegen）通过将算子 DAG 融合成一个经过优化的单算子，消除了虚函数调用，利用 CPU 寄存器进行中间数据操作，并减少指令缓存不命中的情况，从而提高了查询的执行性能。作为一项技术优化，我们通过 TPC-DS 验证了其有效性，部分批处理算子（Calc、HashAgg 和 HashJoin）在 1.18 版本中完成了融合代码生成支持，很多查询性能显著提高。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">请注意，上述两个功能默认情况下处于关闭状态。可以通过使用 table.optimizer.runtime-filter.enabled 和 table.exec.operator-fusion-codegen.enabled 两个配置项来启用它们。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">自 Flink 1.16 以来，Apache Flink 社区一直在通过 TPC-DS 基准测试框架持续跟踪其批处理引擎的性能。在 Flink 1.17 版本中经过重大改进（动态 join 重排序、动态 local aggregation）后，前面描述的两项改进（算子融合、运行时过滤）在分区表 10T 数据集上，与 Flink 1.17 相比性能提高了 14%，与 Flink 1.16 相比性能提高了 54%。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><img alt="1" src="https://oscimg.oschina.net/oscnet/up-7127b4e54a13b1ffae35dd7df454a629f62.png" referrerpolicy="no-referrer"></p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-324%253A%2BIntroduce%2BRuntime%2BFilter%2Bfor%2BFlink%2BBatch%2BJobs" rel="nofollow" target="_blank">FLIP-324: Introduce Runtime Filter for Flink Batch Jobs</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-315%2BSupport%2BOperator%2BFusion%2BCodegen%2Bfor%2BFlink%2BSQL" rel="nofollow" target="_blank">FLIP-315: Support Operator Fusion Codegen for Flink SQL</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fververica%2Fflink-sql-benchmark" rel="nofollow" target="_blank">Benchmarking 代码仓库</a></li></ul><span id="OSC_h2_13"></span><h2>迈向云原生弹性化</h2><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">弹性化（Elasticity）描述了系统在不中断的情况下适应工作负载变化的能力，理想情况下是以自动方式进行。这是云原生系统的一个定义特征，对于长时间运行的流处理工作负载尤为重要。因此，弹性性能的改进是 Apache Flink 社区不断投入的领域。最近的提议包括 Kubernetes<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-kubernetes-operator-docs-release-1.6%2Fdocs%2Fcustom-resource%2Fautoscaler%2F" rel="nofollow" target="_blank">自动缩放器（Autoscaler）</a>、对性能调整的众多改进，以及<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdeployment%2Felastic_scaling%2F%23adaptive-scheduler" rel="nofollow" target="_blank">自适应调度器（Adaptive Scheduler）</a>。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">自 Flink 1.15 版本首次引入以来，自适应调度器构成了完全弹性 Apache Flink 部署的核心。在其核心功能中，它允许作业在运行时更改其资源要求和并行度。此外，它还根据集群中可用的资源进行自适应调整，只有当集群能够满足作业的最低所需资源时才会重新调整。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">在 Flink 1.18 版本之前，自适应调度器主要用于<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdeployment%2Felastic_scaling%2F%23reactive-mode" rel="nofollow" target="_blank">响应模式（Reactive Mode）</a>，根据设计，单个作业始终会使用集群中的所有可用资源。请参阅这篇<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fflink.apache.org%2F2021%2F05%2F06%2Fscaling-flink-automatically-with-reactive-mode%2F" rel="nofollow" target="_blank">博客文章</a>，了解如何使用 Kubernetes 上的水平 Pod 自动缩放器自动缩放 Flink 作业。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">在 Flink 1.18 版本中，自适应调度器变得更加强大和更广泛适用，并正在成为 Apache Flink 流处理任务的默认调度器。</p><span id="OSC_h3_14"></span><h3>通过 REST API 控制动态细粒度扩缩容</h3><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">尽管自适应调度器具有在运行时更改作业资源需求的能力，但此功能之前一直未开放给用户，自 Flink 1.18 起，在作业运行时，您可以通过 Flink Web UI 和 REST API 更改作业的任何 task 的并行度。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">实现细节上，Apache Flink 在获得新并行度所需的资源后会立即执行扩缩容操作。扩缩容操作不基于 savepoint，而是基于普通的定期 checkpoint，这意味着它不会引入额外的 snapshot。对于状态规模较小的作业，重新调整操作几乎立即发生，且中断时间非常短。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">与 Apache Flink Web UI 的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fops%2Fmonitoring%2Fback_pressure%2F" rel="nofollow" target="_blank">反压监控</a>相结合，现在更容易找到并维护使每个任务高效运行、无反压的并行度。</p><ul><li>如果一个任务非常繁忙（红色），您可以增加并行度。</li><li>如果一个任务大部分时间处于空闲状态（蓝色），您可以减少并行度。</li></ul><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><img alt="2" src="https://oscimg.oschina.net/oscnet/up-8e76119ef7de7e31d5444226a93ec6a24b0.png" referrerpolicy="no-referrer"></p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-291%253A%2BExternalized%2BDeclarative%2BResource%2BManagement" rel="nofollow" target="_blank">FLIP-291: Externalized Declarative Resource Management</a></li></ul><span id="OSC_h3_15"></span><h3>更快地 RocksDB 扩缩容</h3><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">使用 RocksDB 状态后端和增量 checkpoint 的扩缩容时间在第 99 百分位数（99th percentile）上提高了约 30%。我们提升了并行下载的能力，从只并行下载状态句柄（state handle），扩展到并行下载文件。此外，我们关闭了用于扩缩容的临时 RocksDB 实例在批量插入时的写前日志（write-ahead-logging）。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><img alt="3" src="https://oscimg.oschina.net/oscnet/up-5ed594259e7e1a0189a021388cb95a0fd42.png" referrerpolicy="no-referrer"></p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-32326" rel="nofollow" target="_blank">FLINK-32326</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-32345" rel="nofollow" target="_blank">FLINK-32345</a></li></ul><span id="OSC_h2_16"></span><h2>Java 17 支持</h2><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">Java 17 于 2021 年发布，是 Java 的最新长期支持（LTS）版本，将于 2029 年终止支持。从 Flink 1.18 版本开始，您现在可以在 Java 17 上运行 Apache Flink。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhub.docker.com%2F_%2Fflink" rel="nofollow" target="_blank">官方 Docker 仓库</a>目前已包含基于 Java 17 的镜像:</p><pre><code>docker pull flink:<span style="color:#986801">1.18</span><span style="color:#986801">.0</span>-java17
</code></pre><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">如果您的集群运行在 Java 17 上，您的用户程序中也可以使用 Java 17 的功能，并将其编译为 Java 17 版本。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdeployment%2Fjava_compatibility%2F" rel="nofollow" target="_blank">文档</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-15736" rel="nofollow" target="_blank">FLINK-15736</a></li></ul><span id="OSC_h2_17"></span><h2>其他改进</h2><span id="OSC_h3_18"></span><h3>生产可用的水印对齐（Watermark Alignment）功能</h3><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">自 Flink 1.16 和 Flink 1.17 版本以来以 Beta 形式支持的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdev%2Fdatastream%2Fevent-time%2Fgenerating_watermarks%2F%23watermark-alignment" rel="nofollow" target="_blank">水印对齐</a>已在实际环境中经过大规模的充分测试。在此期间，社区已经收集并解决了发现的错误和性能问题。随着这些问题的解决，我们推荐水印对齐功能供一般使用。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-32548" rel="nofollow" target="_blank">FLINK-32548</a></li></ul><span id="OSC_h3_19"></span><h3>可插拔式故障处理</h3><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">Apache Flink 作为许多公司流处理平台的基础，也是许多商业流处理服务的基础。因此，能够轻松集成到内部和供应商平台更广泛生态系统中的能力变得越来越重要。Catalog 修改监听器和可插拔式故障处理程序属于这一类改进。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdeployment%2Fadvanced%2Ffailure_enrichers%2F" rel="nofollow" target="_blank">文档</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-304%253A%2BPluggable%2BFailure%2BEnrichers" rel="nofollow" target="_blank">FLIP-304: Pluggable Failure Enrichers</a></li></ul><span id="OSC_h3_20"></span><h3>SQL 客户端的改进</h3><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">在 1.18 版本中，SQL 客户端进行了一系列的易用性改进：</p><ul><li>客户端更加多彩，可开启 SQL 语法突出显示和切换 7 种不同配色方案。</li><li>更容易编辑和预览大查询。</li><li>可随时关闭和打开行号。</li></ul><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcwiki.apache.org%2Fconfluence%2Fdisplay%2FFLINK%2FFLIP-189%253A%2BSQL%2BClient%2BUsability%2BImprovements" rel="nofollow" target="_blank">FLIP-189: SQL Client Usability Improvements</a></li></ul><span id="OSC_h3_21"></span><h3>Apache Pekko 代替 Akka</h3><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">一年前，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fflink.apache.org%2F2022%2F09%2F08%2Fregarding-akkas-licensing-change%2F" rel="nofollow" target="_blank">Lightbend 宣布</a>将 Akka 未来版本（2.7+）的许可证从 Apache 2.0 更改为 BSL，Apache Flink 使用的 Akka 2.6 版本将在 2023 年 9 月之前接收安全更新和关键错误修复。因此在 Flink 1.18 版本，我们决定从 Akka 切换到<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpekko.apache.org%2F" rel="nofollow" target="_blank">Apache Pekko</a>(Incubating)。Apache Pekko (Incubating) 基于 Akka 项目采用商业源代码许可证之前的 Akka 2.6.x。Pekko 最近发布了 Apache Pekko 1.0.1-incubating，我们即刻在 Flink 1.18 中进行使用。虽然我们的中期计划是完全放弃对 Akka 或 Pekko 的依赖（参见<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-29281" rel="nofollow" target="_blank">FLINK-29281</a>），但切换到 Pekko 提供了一个良好的短期解决方案，并确保了 Apache Pekko 和 Apache Flink 社区能够处理整个软件供应链中的关键错误修复和安全漏洞。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-32468" rel="nofollow" target="_blank">FLINK-32468</a></li></ul><span id="OSC_h3_22"></span><h3>Calcite 升级</h3><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">在 Apache Flink 1.18 中，Apache Calcite 逐渐从 1.29 版本升级到 1.32 版本。版本升级的带来的好处包括错误修复、更智能的优化器和性能改进。在解析器级别，它现在允许使用括号将 join 操作分组成树状结构（SQL-92）。例如 SELECT * FROM a JOIN (b JOIN c ON b.x = c.x) ON a.y = c.y，请参阅<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FCALCITE-35" rel="nofollow" target="_blank">CALCITE-35</a>。此外，升级到 Calcite 1.31+ 解锁了通过表值函数支持会话窗口（Session Windows via Table-Valued Functions，参见<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FCALCITE-4865" rel="nofollow" target="_blank">CALCITE-4865</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-24024" rel="nofollow" target="_blank">FLINK-24024</a>），并弃用旧的分组窗口聚合（Group Window Aggregations）。由于<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FCALCITE-4861" rel="nofollow" target="_blank">CALCITE-4861</a>，Flink 的强制类型转换行为略有改变。一些边界情况现在可能会有不同的行为：例如，从 FLOAT/DOUBLE 9234567891.12 到 INT/BIGINT 的强制类型转换会产生 Java 的溢出行为。</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>更多信息</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-27998" rel="nofollow" target="_blank">FLINK-27998</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-28744" rel="nofollow" target="_blank">FLINK-28744</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fissues.apache.org%2Fjira%2Fbrowse%2FFLINK-29319" rel="nofollow" target="_blank">FLINK-29319</a></li></ul><span id="OSC_h2_23"></span><h2>重要 API 弃用</h2><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">为了为明年发布的 Flink 2.0 版本做准备，社区已经决定正式弃用多个接近生命周期结束的 API。</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Fmaster%2Fflink-streaming-java%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fstreaming%2Fapi%2Ffunctions%2Fsource%2FSourceFunction.java" rel="nofollow" target="_blank">SourceFunction</a>现在已经弃用。如果您仍在使用基于 SourceFunction 构建的连接器，请将其迁移到<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fapache%2Fflink%2Fblob%2Fmaster%2Fflink-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fflink%2Fapi%2Fconnector%2Fsource%2FSource.java" rel="nofollow" target="_blank">Source</a>。SinkFunction 目前尚未正式弃用，但它也即将接近生命周期结束，将被 SinkV2 所取代。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.17%2Fdocs%2Fdev%2Fdatastream%2Ffault-tolerance%2Fqueryable_state%2F" rel="nofollow" target="_blank">Queryable State</a>现已弃用，将在 Flink 2.0 中移除。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.17%2Fdocs%2Fdev%2Fdataset%2Foverview%2F" rel="nofollow" target="_blank">DataSet API</a>现已弃用。建议用户迁移到<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-stable%2Fdocs%2Fdev%2Fdatastream%2Fexecution_mode%2F" rel="nofollow" target="_blank">执行模式</a>设置为 BATCH 的 DataStream API。</li></ul><span id="OSC_h2_24"></span><h2>升级注意事项</h2><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">Flink 社区尽力确保无缝升级。然而，某些变更可能需要用户在升级到 1.18 版本时对程序的某些部分进行调整。请参考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnightlies.apache.org%2Fflink%2Fflink-docs-release-1.18%2Frelease-notes%2Fflink-1.18%2F" rel="nofollow" target="_blank">发行说明</a>，以获取升级过程中需要进行的调整和要检查的问题的综合列表。</p><span id="OSC_h2_25"></span><h2>贡献者列表</h2><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">Apache Flink 社区向所有为这个版本的实现做出贡献的贡献者表示感谢：</p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">Aitozi, Akinfolami Akin-Alamu, Alain Brown, Aleksandr Pilipenko, Alexander Fedulov, Anton Kalashnikov, Archit Goyal, Bangui Dunn, Benchao Li, BoYiZhang, Chesnay Schepler, Chris Nauroth, Colten Pilgreen, Danny Cranmer, David Christle, David Moravek, Dawid Wysakowicz, Deepyaman Datta, Dian Fu, Dian Qi, Dong Lin, Eric Xiao, Etienne Chauchot, Feng Jin, Ferenc Csaky, Fruzsina Nagy, Gabor Somogyi, Gunnar Morling, Gyula Fora, HaiYang Chen, Hang Ruan, Hangxiang Yu, Hanyu Zheng, Hong Liang Teoh, Hongshun Wang, Huston, Jacky Lau, James Hughes, Jane Chan, Jark Wu, Jayadeep Jayaraman, Jia Liu, JiangXin, Joao Boto, Junrui Lee, Juntao Hu, K.I. (Dennis) Jung, Kaiqi Dong, L, Leomax_Sun, Leonard Xu, Licho, Lijie Wang, Liu Jiangang, Lyn Zhang, Maomao Min, Martijn Visser, Marton Balassi, Mason Chen, Matthew de Detrich, Matthias Pohl, Min, Mingliang Liu, Mohsen Rezaei, Mrart, Mulavar, Nicholas Jiang, Nicolas Fraison, Noah, Panagiotis Garefalakis, Patrick Lucas, Paul Lin, Peter Vary, Piotr Nowojski, Qingsheng Ren, Ran Tao, Rich Bowen, Robert Metzger, Roc Marshal, Roman Khachatryan, Ron, Rui Fan, Ryan Skraba, Samrat002, Sergey Nuyanzin, Sergio Morales, Shammon FY, ShammonFY, Shengkai, Shuiqiang Chen, Stefan Richter, Tartarus0zm, Timo Walther, Tzu-Li (Gordon) Tai, Venkata krishnan Sowrirajan, Wang FeiFan, Weihua Hu, Weijie Guo, Wencong Liu, Xiaogang Zhou, Xintong Song, XuShuai, Yanfei Lei, Yu Chen, Yubin Li, Yun Gao, Yun Tang, Yuxin Tan, Zakelly, Zhanghao Chen, ZhengYiWeng, Zhu Zhu, archzi, baiwuchang, cailiuyang, chenyuzhi, darenwkt, dongwoo kim, eason.qin, felixzh, fengli, frankeshi, fredia, godfrey he, haishui, hehuiyuan, huangxingbo, jiangxin, jiaoqingbo, jinfeng, jingge, kevin.cyj, kristoffSC, leixin, leiyanfei, liming.1018, lincoln lee, lincoln.lil, liujiangang, liuyongvs, luoyuxia, maigeiye, mas-chen, novakov-alexey, oleksandr.nitavskyi, pegasas, sammieliu, shammon, shammon FY, shuiqiangchen, slfan1989, sunxia, tison, tsreaper, wangfeifan, wangkang, whjshj, wuqqq, xiangyu0xf, xincheng.ljr, xmzhou, xuyu, xzw, yuanweining, yuchengxin, yunfengzhou-hub, yunhong, yuxia Luo, yuxiqian, zekai-li, zhangmang, zhengyunhong.zyh, zzzzzzzs, 沈嘉琦</p><hr><span id="OSC_h3_26"></span><h3>更多内容</h3><p style="color:#24292e; margin-left:0; margin-right:0; text-align:center"><img height="910" src="https://oscimg.oschina.net/oscnet/up-43d076aa116b5d091e0d5fd64fd6cd97364.png" width="2584" referrerpolicy="no-referrer"></p><hr><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start"><strong>活动推荐</strong></p><p style="color:#24292e; margin-left:0; margin-right:0; text-align:start">阿里云基于 Apache Flink 构建的企业级产品-实时计算 Flink 版现开启活动：<br> 0 元试用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffree.aliyun.com%2F%3FpipCode%3Dsc" rel="nofollow" target="_blank">实时计算 Flink 版</a>（5000CU*小时，3 个月内）<br> 了解活动详情：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffree.aliyun.com%2F%3FpipCode%3Dsc" rel="nofollow" target="_blank">https://free.aliyun.com/?pipCode=sc</a></p><p style="color:#24292e; margin-left:0px; margin-right:0px; text-align:start"><img height="1280" src="https://oscimg.oschina.net/oscnet/up-f29f46119d7714c79fd0f7baf4854c960f4.png" width="2578" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 03:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/2828172/blog/10136976</guid>
            <link>https://my.oschina.net/u/2828172/blog/10136976</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Fleet 中的 Kotlin 支持：探索 JetBrains 的新 IDE]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       defaultNoSetting
            " id="js_content"><section style="font-size: 15px;line-height: 1.6;letter-spacing: 0px;padding-right: 5px;padding-left: 0px;color: rgb(0, 0, 0);box-sizing: border-box;font-style: normal;font-weight: 400;text-align: justify;margin-bottom: 0px;" data-mpa-powered-by="yiban.io"><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: 30px 0% 10px;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;background-color: rgb(237, 238, 242);align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="display: flex;width: 100%;flex-flow: column;box-sizing: border-box;" powered-by="xiumi.us"><section style="z-index: auto;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: flex;flex-flow: row;justify-content: flex-start;transform: translate3d(18px, 0px, 0px);-webkit-transform: translate3d(18px, 0px, 0px);-moz-transform: translate3d(18px, 0px, 0px);-o-transform: translate3d(18px, 0px, 0px);margin: -16px 0% 0px;box-sizing: border-box;"><section style="display: inline-block;vertical-align: top;width: 15%;flex: 0 0 auto;height: auto;align-self: flex-start;box-sizing: border-box;"><section style="text-align: center;margin: -16px 0px 0px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="1" data-s="300,640" src="https://oscimg.oschina.net/oscnet/d7d41ee0-255e-45b1-b525-8f3fc5d21f72.png" data-w="707" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: top;width: auto;flex: 0 0 auto;align-self: flex-start;min-width: 10%;max-width: 100%;height: auto;box-sizing: border-box;"><section style="transform: translate3d(5px, 0px, 0px);-webkit-transform: translate3d(5px, 0px, 0px);-moz-transform: translate3d(5px, 0px, 0px);-o-transform: translate3d(5px, 0px, 0px);box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;color: rgb(115, 119, 173);padding: 0px 7px;line-height: 1.2;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="box-sizing: border-box;"><strong style="box-sizing: border-box;">记得加关注， Kotlin 之路不迷路！</strong></span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: justify;font-size: 12px;line-height: 1.2;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="color: transparent;background-image: linear-gradient(to right, rgb(36, 113, 228), rgb(250, 40, 88));display: inline-block;-webkit-background-clip: text;box-sizing: border-box;">&nbsp; &nbsp; Kotlinlang.org</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section></section></section></section></section></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247486951%26idx%3D1%26sn%3Dd1bf11e8ae42331d24bc993bc2a91213%26chksm%3Dc08860b9f7ffe9af87765cb145573b765ef3543c80b72c924f6282e99b96acb04775667ad84f%26scene%3D21%23wechat_redirect" textvalue="JetBrains Fleet" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2"><strong style="box-sizing: border-box;">JetBrains Fleet</strong></a>&nbsp;是一款轻量型代码编辑器和 IDE，使用 IntelliJ 代码处理引擎。该产品目前处于<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkwNDI5NzUyMQ%3D%3D%26mid%3D2247491483%26idx%3D1%26sn%3D7ef92a11da98c89c18feb4d97185a872%26chksm%3Dc08872c5f7fffbd3da3621d9e6311bdca0e9abc325fdc537af83f282e9ee9107b62892a05c29%26scene%3D21%23wechat_redirect" textvalue="公开预览版" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2"><strong style="box-sizing: border-box;">公开预览版</strong></a>阶段，供公众试用。</p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">目前，Fleet 允许您使用 Python、TypeScript / JavaScript、Go、Java、PHP、C# 以及 Kotlin 等流行语言进行开发。<strong>Kotlin 支持是最先进的支持之一，因为 Fleet 主要使用 Kotlin 开发而成，JetBrains 团队也使用 Fleet 开发 Fleet。</strong>您可以查看<strong style="box-sizing: border-box;">完整的 Fleet 功能矩阵</strong><sup style="box-sizing: border-box;">1</sup>，了解该产品已经支持哪些语言和技术以及哪些仍在开发。借助即将推出的插件，Fleet 也将尽快支持更多语言和技术。</p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">在这篇博文中，我们想详细介绍 Fleet 公开预览版中 Kotlin 支持的当前状态，包括适用于 Kotlin 项目的 IDE 功能的概述。</p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-s="300,640" src="https://oscimg.oschina.net/oscnet/bbc93270-e7bd-4cc9-9e15-fdbbd532751e.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" data-ratio="1" data-w="500" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">为什么选择 Fleet？</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 基于我们多年的 IDE 开发经验从头开始构建而成。它结合了轻量型文本编辑器的简单和速度，还有智能开发环境的变革能力。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong>Fleet 并不是为了取代或复制 JetBrains 的现有 IDE 而设计。</strong>Fleet 背后的主要理念是为开发者提供智能、多语言工具和工作流的新体验，例如分布式协作开发，以及生成式 AI 编码。JetBrains 在开发 Fleet 的同时也在继续开发现有 IDE。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img data-s="300,640" src="https://oscimg.oschina.net/oscnet/bbc93270-e7bd-4cc9-9e15-fdbbd532751e.png" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" data-ratio="1" data-w="500" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;"><span style="letter-spacing: 0px;box-sizing: border-box;">Fleet Smart Mode（智能模式）</span><span style="text-align: unset;letter-spacing: 0px;box-sizing: border-box;">下</span><span style="text-align: unset;letter-spacing: 0px;box-sizing: border-box;">适用于 Kotlin 的功能</span></strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 开箱即支持 Kotlin，这就使得该语言的使用不仅高效简单，并且令人愉悦。它为 Kotlin 开发者提供了简化的体验。需要快速深入项目、分析其结构，以及立即进行有针对性的编辑时，您可以使用 Fleet 作为编辑器。但是，如果需要更强大的功能，它可以转换为全功能 IDE。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">如果您想在 Kotlin 中启用代码智能功能，则应打开<strong style="box-sizing: border-box;">&nbsp;Smart Mode（智能模式）</strong><sup style="font-size: 11px;box-sizing: border-box;">2</sup>。这些额外功能有助于避免错误，同时更快、更高效地编写代码。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.4266666666666667" data-s="300,640" src="https://oscimg.oschina.net/oscnet/1023290c-073e-42fe-9a58-15d488de05f9.gif" data-w="600" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">启用 Smart Mode（智能模式）后，即可使用 IntelliJ IDEA 用户熟悉和喜爱的代码编辑功能，包括：</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><ul class="list-paddingleft-1" style="list-style-type: disc;box-sizing: border-box;padding-left: 40px;list-style-position: outside;"><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">代码补全</p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">代码操作</p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">类型信息和形参信息</p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">实时模板</p></li><li style="box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">代码生成</p></li></ul></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">我们来仔细看看这些功能以及它们将如何简化您的编码方式。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">代码补全</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">当您输入时，Fleet 会根据各种因素，例如可用的代码智能服务、项目结构、环绕代码和符号可见性，提供代码补全建议。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;">补全建议可以自动显示，也可以通过按&nbsp;<em style="box-sizing: border-box;">Ctrl+空格键</em>手动激活。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.37222222222222223" data-s="300,640" src="https://oscimg.oschina.net/oscnet/0b462a95-7426-4984-a63f-16a07f581f31.png" data-w="1080" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">代码操作</strong></p></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">借助持续代码质量分析，您可以做出明智的决策并提高编码效率。Fleet 建议的操作根据您所处的特定上下文量身定制。这些建议涵盖从纠正错误到重构文本光标处的代码等一系列操作。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.48333333333333334" data-s="300,640" src="https://oscimg.oschina.net/oscnet/d5158516-45c3-43db-8e8c-a1bc57c46a7e.gif" data-w="600" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">您可以按&nbsp;<em style="box-sizing: border-box;">Opt+Enter</em>&nbsp;(macOS) 或<em style="box-sizing: border-box;">&nbsp;Alt+Enter</em>（Windows 和 Linux）检查文本光标处的可用操作。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">决定待使用的操作后，您可以立即应用，也可以使用快捷键预览结果：macOS 为<em style="box-sizing: border-box;">&nbsp;Cmd+P</em>，Windows 和 Linux 为&nbsp;<em style="box-sizing: border-box;">Ctrl+P</em>。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.48333333333333334" data-s="300,640" src="https://oscimg.oschina.net/oscnet/45604de1-3484-4b1a-9827-d5a13a82a473.gif" data-w="600" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">类型信息</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">如果您不确定当前正在处理的类型，可以按&nbsp;<em style="box-sizing: border-box;">Cmd+Shift+T</em>&nbsp;(macOS) 或&nbsp;<em style="box-sizing: border-box;">Ctrl+Shift+T</em>（Windows 和 Linux）轻松查找。&nbsp;</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">这将提示 Fleet 显示有关符号或表达式的静态类型的详细信息。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.19189765458422176" data-s="300,640" src="https://oscimg.oschina.net/oscnet/0d0a5755-3ac2-4ce7-b2c3-ea0ab4c220ce.png" data-w="938" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">形参信息</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">您是否使用具有大量重载的方法，或者需要快速找到必要形参？按<em style="box-sizing: border-box;">&nbsp;Cmd+I</em>&nbsp;(macOS) 或<em style="box-sizing: border-box;">&nbsp;Ctrl+I</em>（Windows 和 Linux）即可浏览可用选项。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.29814814814814816" data-s="300,640" src="https://oscimg.oschina.net/oscnet/5cefda5a-ccd1-4b0f-b0d2-09ed6d57832c.png" data-w="1080" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">实时模板</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 提供了一组 Kotlin 实时模板，您可以在代码中插入常见结构，如循环、条件、声明或打印语句。与 IntelliJ IDEA 不同，Fleet 不允许创建新模板。不过，您可以在 Kotlin 代码中使用大量预制模板。Fleet 文档包含<strong style="box-sizing: border-box;"><span style="color: rgb(62, 62, 62);box-sizing: border-box;">实时模板的完整列表</span></strong><sup style="font-size: 11px;box-sizing: border-box;">3</sup>。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.4666666666666667" data-s="300,640" src="https://oscimg.oschina.net/oscnet/8019dfa0-efe9-4f73-9736-a48bdea35fcb.gif" data-w="600" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 18px;color: rgb(120, 85, 245);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">代码生成</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">在您开始输入特定方法或语句时，Fleet 会根据上下文和现有代码建议可能的补全选项。选择一个建议即可立即生成所需代码。您可以利用代码补全重写超类成员，例如 equals()、hashcode() 和其他方法。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.16018518518518518" data-s="300,640" src="https://oscimg.oschina.net/oscnet/4746b9c4-2243-447d-8f04-f5ab67797838.png" data-w="1080" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: unset;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;">使用代码生成，您可以节省时间，并确保代码遵循正确的语法和结构，因为 Fleet 可以帮助您生成必要的代码段。</p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: center;justify-content: center;display: flex;flex-flow: row;margin: 10px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;vertical-align: middle;width: 48px;align-self: center;flex: 0 0 auto;height: auto;box-sizing: border-box;"><section style="margin-top: 10px;margin-bottom: 10px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 80%;height: auto;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="1" data-s="300,640" src="https://oscimg.oschina.net/oscnet/bbc93270-e7bd-4cc9-9e15-fdbbd532751e.png" data-w="500" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" referrerpolicy="no-referrer"></section></section></section><section style="display: inline-block;vertical-align: middle;width: auto;align-self: center;flex: 100 100 0%;height: auto;padding: 0px 0px 0px 10px;box-sizing: border-box;"><section style="text-align: left;margin: 10px 0px 0px;box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgb(42, 8, 69);font-size: 22px;line-height: 1.2;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">试用 Fleet 并分享您的体验</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 2px 0px 8px;box-sizing: border-box;" powered-by="xiumi.us"><section style="background-color: rgb(120, 85, 245);height: 1px;box-sizing: border-box;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></section></section></section></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 是一款多语言代码编辑器和 IDE，支持 Kotlin 等多种语言。您可以将 Fleet 视为一种多用途工具，并期望特定类型的项目后续获得专属支持。</p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">如果您有兴趣并且发现了新工具的好用途，我们邀请您亲自上手探索 Fleet 功能！</p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">下载并开始使用 Fleet 的最简单方式是使用免费的&nbsp;<strong style="box-sizing: border-box;">JetBrains Toolbox App</strong><sup style="font-size: 11px;box-sizing: border-box;">4</sup>。</p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">您也可以观看这个简短的 Fleet 概览视频帮助您入门，以及参阅<strong style="box-sizing: border-box;">文档</strong><sup style="font-size: 11px;box-sizing: border-box;">5</sup>获取进一步指导。</p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><section class="channels_iframe_wrp"><mp-common-videosnap class="js_uneditable custom_select_card channels_iframe videosnap_video_iframe" data-pluginname="mpvideosnap" data-url="https://findermp.video.qq.com/251/20304/stodownload?encfilekey=S7s6ianIic0ia4PicKJSfB8EjyjpQibPUAXol1WXnS32s8hOA3RTibrGzhjvMNxgtTBicialbyyKKxIjbZuq53dZyNBldvbjgu2glJgFfqWrbIwNzKRlAJIATvqafA&amp;adaptivelytrans=0&amp;bizid=1023&amp;dotrans=0&amp;hy=SH&amp;idx=1&amp;m=&amp;scene=0&amp;token=x5Y29zUxcibBibbOsfyoFM1Xgzc7qHewxsqpBicZS8u7qJReXaGvg1gvG6bn1QtfmUk6th1DKGulh4" data-headimgurl="http://wx.qlogo.cn/finderhead/0nn3FBrD9a1RrlqKFBkoafxwpIL3ud40TkWcw5qOoYibKzYxvDA2hew/0" data-username="v2_060000231003b20faec8c4e48811c7dccb00ec34b077f60e877e2e3d611e57ac6b6b589aa577@finder" data-nickname="JetBrains" data-desc="#Fleet 是我们全新的分布式多语言编辑器和 #IDE，正面向所有人开放公共预览。它基于我们在后端的 IntelliJ 平台，并采用全新的用户界面和分布式架构从头开始构建。要了解更多详情，请至 Fleet 产品页面：https://www.jetbrains.com.cn/fleet @JetBrains " data-nonceid="2085350396973162235" data-type="video" data-mediatype="    " data-authiconurl="https://dldir1v6.qq.com/weixin/checkresupdate/icons_filled_channels_authentication_enterprise_a2658032368245639e666fb11533a600.png" data-from="new" data-width="1920" data-height="1080" data-id="export/UzFfAgtgekIEAQAAAAAA_38x2YoPwwAAAAstQy6ubaLX4KHWvLEZgBPEt4JIOlEYX5aCzNPgMItlLEUdCyfEPAQ6EF-gJfP5" data-isdisabled="0" data-errortips=""></mp-common-videosnap></section><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">Fleet 仍处于预览版阶段，正在积极开发中。您的反馈和意见将帮助 JetBrains 团队稳定和改进产品。如果遇到问题，请向此<strong style="box-sizing: border-box;">问题跟踪器</strong><sup style="font-size: 11px;box-sizing: border-box;">6</sup>提交报告。您也可以发送电子邮件至&nbsp;<span style="color: rgb(51, 122, 183);box-sizing: border-box;">fleet-support@jetbrains.com</span>&nbsp;与我们联系。</p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;">敬请期待更多公告！</p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><br style="box-sizing: border-box;"></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: 10px 0% 8px;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;border-left: 3px solid rgb(219, 219, 219);border-bottom-left-radius: 0px;padding: 0px 0px 0px 8px;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="color: rgba(0, 0, 0, 0.5);text-align: justify;font-size: 12px;box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">本博文英文原作者：</strong></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">Daria Voronina</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section></section></section><section style="margin-top: 10px;margin-bottom: 10px;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;border-width: 1px;border-style: solid;border-color: rgb(120, 85, 245);padding: 10px;box-shadow: rgb(204, 204, 204) 0.2em 0.2em 0.3em;box-sizing: border-box;"><section style="box-sizing: border-box;" powered-by="xiumi.us"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">相关链接：</strong></p><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: left;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">1. 完整的 Fleet 功能矩阵：</span></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://docs.google.com/spreadsheets/u/1/d/e/2PACX-1vTWt9RlJPfIJwD5H7Gsqbu9xHTd-K1oj_zCpP6YIQq8xvjARDYqC6OnVIVt5WPi2-B-vWHZw5qMnhvx/pubhtml</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="text-align: left;box-sizing: border-box;"><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">2. Smart Mode（智能模式）：&nbsp;</span></p><p style="margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/en-us/help/fleet/smart-mode.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">3. 实时模板的完整列表：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/help/fleet/live-templates-list-kotlin.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">4. JetBrains Toolbox App：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/fleet/download/</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">5. 文档：</span></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://www.jetbrains.com.cn/help/fleet/getting-started.html</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="box-sizing: border-box;" powered-by="xiumi.us"><section style="box-sizing: border-box;"><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;box-sizing: border-box;">6. 问题跟踪器:&nbsp;</span></p><p style="text-align: left;white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><span style="font-size: 14px;color: rgb(51, 122, 183);box-sizing: border-box;">https://youtrack.jetbrains.com/issues/FL</span></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section></section></section><section style="margin: 10px 0% 0px;text-align: left;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;background-position: 97.529% 66.6681%;background-repeat: repeat;background-size: 171.01%;background-attachment: scroll;align-self: flex-start;flex: 0 0 auto;height: auto;background-image: url(&quot;https://oscimg.oschina.net/oscnet/6a0c66f8-0a97-4863-a1b7-e027000fd10f.png&quot;);box-sizing: border-box;"><section style="text-align: justify;justify-content: flex-start;display: flex;flex-flow: row;box-sizing: border-box;" powered-by="xiumi.us"><section style="display: inline-block;width: 100%;vertical-align: top;padding: 26px;align-self: flex-start;flex: 0 0 auto;box-sizing: border-box;"><section style="margin: -9px 0px 7px;box-sizing: border-box;" powered-by="xiumi.us"><section style="font-size: 16px;color: rgb(248, 248, 248);box-sizing: border-box;"><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">这就是 Kotlin 编程语言</strong></p><p style="white-space: normal;margin: 0px;padding: 0px;box-sizing: border-box;"><strong style="box-sizing: border-box;">简洁、跨平台、且有趣！</strong></p></section><grazie-editor-wrapper style="box-sizing: border-box;"></grazie-editor-wrapper></section><section style="margin: 0px;box-sizing: border-box;" powered-by="xiumi.us"><section class="mp_profile_iframe_wrp" style="box-sizing: border-box;"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-id="Mzg4MzkxMzg3MQ==" data-pluginname="mpprofile" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/y4ibuu6gd7d4NyzPduLLqtqddBasicL77gAgbLQD89CyYm1n7icODFhBr3xMoloOA7yicfjR8Bv0oaRP3CJuRLIO4Q/0?wx_fmt=png" data-nickname="Kotlin 开发者" data-alias="" data-signature="现代、简洁、安全的编程语言，由 JetBrains 打造。面向服务器、Android、Web 和原生平台，提供多种在平台间重用代码的方式以实现高效编程。官网：kotlinlang.org" data-from="0" data-is_biz_ban="0"></mp-common-profile></section></section><section style="text-align: center;margin: 7px 0px 0px;line-height: 0;box-sizing: border-box;" powered-by="xiumi.us"><section style="max-width: 100%;vertical-align: middle;display: inline-block;line-height: 0;width: 45%;height: auto;box-sizing: border-box;"><img class="rich_pages wxw-img" data-ratio="0.4119760479041916" data-s="300,640" src="https://oscimg.oschina.net/oscnet/3fb2fe5a-fbfb-4b28-b55d-9c8dcfa3db81.png" data-w="835" style="vertical-align: middle;max-width: 100%;width: 100%;box-sizing: border-box;" width="100%" referrerpolicy="no-referrer"></section></section></section></section></section></section></section><p style="display: none;margin-bottom: 0px;"><mp-style-type data-value="10000"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - JetBrains（JetBrainsChina）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 03:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5494143/blog/10136803</guid>
            <link>https://my.oschina.net/u/5494143/blog/10136803</link>
            <author>
                <![CDATA[JetBrains 中国]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[B 站：全年「AIGC」相关视频播放量 90 亿]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">哔哩哔哩 (B 站) 日前在其首届「bilibili 超级科学晚」会上，发布了一个「五大科学焦点榜单」—— AIGC、室温超导、脑机接口、黑洞、可控核聚变入选。</span></p><p><span style="color:#000000">并公布数据称，过去一年有 2.43 亿用户在 B 站进行学习，是中国在校大学生人数的 5.5 倍。B 站泛知识内容消费人群中，有 72% 为 00 后。</span></p><p><span style="color:#000000">科学和知识品类占 B 站用户搜索排名第 2 位，相关内容播放量占 B 站 41%，00 后正在成为科学内容消费主力。全年「AIGC」相关视频播放量 90 亿，播放时长达 140 亿分钟。全站 UP 主围绕 ChatGPT、文心一言、盘古气象等多个大模型发布动向，共投稿 330 万支视频，是无可争议的 2023 年热度最高科学技术领域。</span></p><p><span style="color:#000000">截至目前，B 站累计入驻知识类 UP 主 300 余万人。</span></p><p><span style="color:#000000"><img alt="" height="1596" src="https://oscimg.oschina.net/oscnet/up-8324fab9d8b85f93db34425ec9fc991cf4b.jpg" width="350" referrerpolicy="no-referrer"></span></p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 03:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264039</guid>
            <link>https://www.oschina.net/news/264039</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[jQuery 4.0 开发进度：已完成 99%]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>根据 jQuery 的 GitHub 里程碑状态，其 4.0.0 版本的开发进度已完成 99%。</p><p><img height="1018" src="https://static.oschina.net/uploads/space/2023/1030/105430_Ecrh_2720166.png" width="2170" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjquery%2Fjquery%2Fmilestone%2F7" target="_blank">https://github.com/jquery/jquery/milestone/7</a></u></em></p><p>可以看到，目前待处理的 issue 仅剩一个，其内容是升级与 ESLint 相关的软件包，以及修复 linting 错误。已经处理完毕的 issue 共计 163 个，内容包括核心变更、构建变更、与 Ajax 相关的改动等，详情查看&nbsp;<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fjquery%2Fjquery%2Fmilestone%2F7%3Fclosed%3D1" target="_blank">https://github.com/jquery/jquery/milestone/7?closed=1</a></u>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1030/111012_2yQh_2720166.png" referrerpolicy="no-referrer"></p><blockquote><p>jQuery 是一个快速、小型且功能丰富的 JavaScript 库。通过易于使用的 API（可在多种浏览器中使用），使 HTML 文档的遍历和操作、事件处理、动画和 Ajax 等操作变得更加简单。结合了多功能性和可扩展性，jQuery 改变了数百万人编写 JavaScript 的方式。</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 03:10:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264038/jquery-4-0-milestone-99-percent-complete</guid>
            <link>https://www.oschina.net/news/264038/jquery-4-0-milestone-99-percent-complete</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[KubeSphere 社区双周报 | KubeKey 支持 Web UI]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>KubeSphere 社区双周报主要整理展示新增的贡献者名单和证书、新增的讲师证书以及两周内提交过 commit 的贡献者，并对近期重要的 PR 进行解析，同时还包含了线上/线下活动和布道推广等一系列社区动态。</p><p>本次双周报涵盖时间为：2023.10.13-2023.10.26。</p><h2>贡献者名单</h2><p><img src="https://oscimg.oschina.net/oscnet/up-1a76ec80c43e7bcb348d4c83f3acd397fe2.gif" alt="" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-a1db65d7a7a9dd815a333a3f0f7cac20dde.png" alt="" referrerpolicy="no-referrer"></p><h2>新晋 KubeSphere Contributor</h2><p>两周内共有 7 位新晋 KubeSphere Contributor，包括在社区分享最佳实践经验的小伙伴，感谢各位对 KubeSphere 社区的贡献！</p><table><thead><tr><th>GitHub ID</th><th>证书</th></tr></thead><tbody><tr><td>Hanmo123</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-Hanmo123.png" target="_blank">下载证书</a></td></tr><tr><td>JoeDerby</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-JoeDerby.png" target="_blank">下载证书</a></td></tr><tr><td>SongJXin</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-SongJXin.png" target="_blank">下载证书</a></td></tr><tr><td>gunine</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-gunine.png" target="_blank">下载证书</a></td></tr><tr><td>jongwooo</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-jongwooo.png" target="_blank">下载证书</a></td></tr><tr><td>studyingwang23</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-studyingwang23.png" target="_blank">下载证书</a></td></tr><tr><td>Leirong Luo</td><td><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpek3b.qingstor.com%2Fkubesphere-community%2Fimages%2Fcontributor-2023-luoleirong.png" target="_blank">下载证书</a></td></tr></tbody></table><h2>近期更新</h2><h3>KubeSphere</h3><h4>1. 修复 K8s 1.26+ 环境中网管地址未正确展示的问题</h4><p>相关 PR：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere%2Fpull%2F5950" target="_blank">https://github.com/kubesphere/kubesphere/pull/5950</a></p><p>贡献者：hongzhouzi</p><h4>2. 修复应用更新时间不正确的问题</h4><p>相关 PR：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere%2Fpull%2F5948" target="_blank">https://github.com/kubesphere/kubesphere/pull/5948</a></p><p>贡献者：king-119</p><h4>3. 镜像 tag 列表默认按名称排序</h4><p>相关 PR：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubesphere%2Fpull%2F5957" target="_blank">https://github.com/kubesphere/kubesphere/pull/5957</a></p><p>贡献者：zhou1203</p><h3>KubeKey</h3><h4>1. 支持 Web UI</h4><p>相关 PR：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkubesphere%2Fkubekey%2Fpull%2F2007" target="_blank">https://github.com/kubesphere/kubekey/pull/2007</a></p><p>贡献者：shijilin0116</p><h2>社区动态</h2><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NTU0MzEyMg%3D%3D%26mid%3D2247526348%26idx%3D1%26sn%3Dbc88cb295e3d769a8bf7f2f94b17dab7%26chksm%3Dcfa57e71f8d2f7670a55352fd93aafb57f990c2ab407e0996c63888aeb085aa765d61507e31c%26token%3D1638355988%26lang%3Dzh_CN%23rd" target="_blank">ARM 版 openEuler 22.03 部署 KubeSphere v3.4.0 不完全指南</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NTU0MzEyMg%3D%3D%26mid%3D2247526431%26idx%3D1%26sn%3D035ab125b4109ab78c685b5eba12ab4d%26chksm%3Dcfa571a2f8d2f8b435a22c90e1fec21e4ebd58270e9e2ddd1d292faf77ce79c06026b2402bf0%26token%3D1638355988%26lang%3Dzh_CN%23rd" target="_blank">11 月 4 日成都站 Meetup 分享内容详情曝光！</a></li></ul><blockquote><p>本文由博客一文多发平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 发布！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 03:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10138824</guid>
            <link>https://my.oschina.net/u/4197945/blog/10138824</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Vercel 发布免费开源字体 Geist]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Vercel 公司发布了一款免费开源字体 ——<strong>「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvercel.com%2Ffont" target="_blank">Geist</a>」</strong>，称专门面向设计师和开发者而设计。</p><blockquote><p><em>开源地址：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvercel%2Fgeist-font" target="_blank">https://github.com/vercel/geist-font</a></u><br> 下载地址：</em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fvercel%2Fgeist-font%2Freleases%2Ftag%2F1.0.0" target="_blank">https://github.com/vercel/geist-font/releases/tag/1.0.0</a></u></p></blockquote><p>Geist 字体由 Vercel 与 Basement Studio 联手打造，包含<strong> Geist Sans 和 Geist Mono</strong>，分别对应的是<strong>无衬线字体</strong>和<strong>等宽字体</strong>。</p><p>根据官方的介绍，Geist Sans 作为无衬线字体，其设计理念是易读和简洁。它是一种现代的几何字体，基于经典的瑞士字体设计原则打造，被设计用于标题、徽标、海报和其他大尺寸显示屏。</p><p>Geist Mono 则是 Geist Sans 的完美搭档。作为等宽字体，它被设计用于代码编辑器、图表、终端和其他以文本为基础的代码界面。目前提供的版本优先考虑可读性，并支持无缝集成到编码环境中。</p><h4><strong>Geist 字体预览效果</strong></h4><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e79e19a1fd7bb59d7c6f9780a4b6b40cefd.png" referrerpolicy="no-referrer"></p><p>此外，Geist 受到以下字体的影响和启发：Inter、Univers、SF Mono、SF Pro、Suisse International、ABC Diatype Mono 和 ABC Diatype。</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 02:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264031/vercel-geist-font</guid>
            <link>https://www.oschina.net/news/264031/vercel-geist-font</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Weaviate —— 开源向量数据库]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span><span><span>Weaviate 是一个开源向量数据库，</span></span></span><span style="background-color:#ffffff; color:#1f2328">具有强大、可扩展、云原生且快速的特点。</span><span><span><span>可存储对象和向量，允许将向量搜索与结构化过滤与云原生数据库的容错性和可扩展性相结合，所有这些都可以通过 GraphQL、REST 和各种语言客户端进行访问。</span></span></span></p><p><span style="color:#000000">允许你存储来自你最喜欢的 ML 模型的数据对象和向量嵌入，并无缝扩展到数十亿个数据对象。</span></p><p style="margin-left:0px; margin-right:0px; text-align:start"><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span><strong>简而言之</strong>：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li>Weaviate 是一个开源<a href="https://weaviate.io/blog/what-is-a-vector-database" target="_blank">向量数据库</a>。</li><li><a href="https://weaviate.io/developers/weaviate/concepts/vector-index">Weaviate 允许你通过使用向量索引</a>来根据数据对象的语义属性来存储和检索数据对象。</li><li>Weaviate 可以独立使用<span style="background-color:#ffffff; color:#000000">&nbsp;(aka<span>&nbsp;</span></span>bring your vectors<span style="background-color:#ffffff; color:#000000">)<span>&nbsp;</span></span>，也可以与各种可以为您进行向量化并扩展核心功能的<a href="https://weaviate.io/developers/weaviate/modules">模块一起使用。</a></li><li>Weaviate 具有<a href="https://weaviate.io/developers/weaviate/api/graphql">GraphQL-API</a>，可轻松访问你的数据。</li><li>Weaviate 速度很快（查看<a href="https://weaviate.io/developers/weaviate/benchmarks">开源基准测试</a>）。</li></ul><p>Weaviate 是一个低延迟向量数据库，对不同媒体类型（文本、图像等）提供开箱即用的支持。它提供语义搜索、问答提取、分类、可定制模型 (PyTorch/TensorFlow/Keras) 等。Weaviate 以 Go 语言从头开始构建，同时存储对象和向量，从而将向量搜索与结构化过滤和云原生数据库的容错性结合起来。所有这些都可以通过 GraphQL、REST 和各种客户端编程语言进行访问。</p><p style="margin-left:0px; margin-right:0px; text-align:start"><span><span><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>Weaviate 可以轻松使用最先进的 AI 模型，同时提供专用向量数据库的可扩展性、易用性、安全性和成本效益。最为显着地：</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><ul><li><p style="margin-left:0px; margin-right:0px"><span><span><span><span><strong>快速查询</strong><br>
Weaviate 通常在不到 100 毫秒的时间内对数百万个对象执行最近邻 (NN) 搜索。<a href="https://weaviate.io/developers/weaviate/benchmarks">可以在我们的基准</a>页面上找到更多信息。</span></span></span></span></p></li><li><p style="margin-left:0px; margin-right:0px"><span><span><span><span><strong>使用 Wea​​viate 模块摄取任何媒体类型</strong><br>
使用最先进的 AI 模型推理（例如 Transformer）在搜索和查询时访问数据（文本、图像等），让 Weaviate 管理数据矢量化过程为你 - 或提供你自己的向量。</span></span></span></span></p></li><li><p style="margin-left:0px; margin-right:0px"><span><span><span><span><strong>组合向量和标量搜索</strong><br>
Weaviate 可以进行高效的组合向量和标量搜索。例如，「过去 7 天内发表的与 COVID-19 大流行相关的文章」。Weaviate 存储对象和向量，并确保两者的检索始终高效。不需要第三方对象存储。</span></span></span></span></p></li><li><p style="margin-left:0px; margin-right:0px"><span><span><span><span><strong>实时且持久的</strong><br>
Weaviate 让你可以搜索数据，即使当前正在导入或更新数据。此外，每次写入都会写入预写日志 (WAL)，以便立即持久写入 - 即使发生崩溃也是如此。</span></span></span></span></p></li><li><p style="margin-left:0px; margin-right:0px"><span><span><span><span><strong>水平可扩展性</strong></span></span></span></span><br><span style="background-color:#ffffff; color:#000000">Scale</span>&nbsp;<span><span><span><span>Weaviate 满足你的确切需求，例如最大摄取量、最大可能的数据集大小、每秒最大查询数等。</span></span></span></span></p></li><li><p style="margin-left:0px; margin-right:0px"><span><span><span><span><strong>高可用性</strong><br>
已列入<a href="https://weaviate.io/developers/weaviate/roadmap">路线图</a>，并计划于今年晚些时候发布。</span></span></span></span></p></li><li><p style="margin-left:0px; margin-right:0px"><span><span><span><span><strong>成本效益</strong><br>
非常大的数据集不需要完全保存在 Weaviate 的内存中。同时，可以利用可用内存来提高查询速度。这样可以有意识地进行速度/成本权衡，以适应每个用例。</span></span></span></span></p></li><li><p style="margin-left:0px; margin-right:0px"><span><span><span><span><strong>对象之间的类似图形的连接</strong><br>
以类似图形的方式在对象之间建立任意连接，以类似于数据点之间的真实连接。使用 GraphQL 遍历这些连接。</span></span></span></span></p></li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/weaviate</guid>
            <link>https://www.oschina.net/p/weaviate</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 基于 LLM 大语言模型的知识库问答系统 FastGPT]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-fastgpt" class="anchor" href="https://gitee.com/xindian/FastGPT#fastgpt"></a>FastGPT</h1><p>FastGPT 是一个基于 LLM 大语言模型的知识库问答系统，提供开箱即用的数据处理、模型调用等能力。同时可以通过 Flow 可视化进行工作流编排，从而实现复杂的问答场景！</p><h2><a id="user-content--在线体验" class="anchor" href="https://gitee.com/xindian/FastGPT#-%E5%9C%A8%E7%BA%BF%E4%BD%93%E9%AA%8C"></a>🛸 在线体验</h2><p>🎉 <a href="https://gitee.com/link?target=https%3A%2F%2Ffastgpt.run%2F">fastgpt.run</a>（服务器在新加坡，部分地区可能无法直连）</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><img src="https://gitee.com/xindian/FastGPT/raw/dev4/.github/imgs/intro1.png" alt="Demo" referrerpolicy="no-referrer"></td><td><img src="https://gitee.com/xindian/FastGPT/raw/dev4/.github/imgs/intro2.png" alt="Demo" referrerpolicy="no-referrer"></td></tr><tr><td><img src="https://gitee.com/xindian/FastGPT/raw/dev4/.github/imgs/intro3.png" alt="Demo" referrerpolicy="no-referrer"></td><td><img src="https://gitee.com/xindian/FastGPT/raw/dev4/.github/imgs/intro4.png" alt="Demo" referrerpolicy="no-referrer"></td></tr></tbody></table><h2><a id="user-content--开发" class="anchor" href="https://gitee.com/xindian/FastGPT#-%E5%BC%80%E5%8F%91"></a>👨‍💻 开发</h2><p>项目技术栈: NextJs + TS + ChakraUI + Mongo + Postgres（Vector 插件）<br><a href="https://gitee.com/xindian/FastGPT/blob/dev4/docSite/i18n/zh-Hans/docusaurus-plugin-content-docs/current/quick-start/dev.md">本地开发 Quick Start</a></p><h2><a id="user-content--部署" class="anchor" href="https://gitee.com/xindian/FastGPT#-%E9%83%A8%E7%BD%B2"></a>🚀 部署</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fsealos.io%2Fdocs%2Fexamples%2Fai-applications%2Finstall-fastgpt-on-desktop">官方推荐 Sealos 部署</a> 无需服务器，代理和域名，高可用。</li><li><a href="https://gitee.com/xindian/FastGPT/blob/dev4/docSite/i18n/zh-Hans/docusaurus-plugin-content-docs/current/deploy/docker.md">docker-compose 部署</a> 单机版。</li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1tV4y1y7Mj%2F%3Fvd_source%3D92041a1a395f852f9d89158eaa3f61b4">由社区贡献的宝塔部署和本地运行教程</a> 单机版。</li></ul><h2><a id="user-content--roadmap" class="anchor" href="https://gitee.com/xindian/FastGPT#-roadmap"></a><img class="emoji" alt=":point_right:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/point_right-8d392cf32998e3bca12bb7b4ee10dae0.png" width="14" height="14" referrerpolicy="no-referrer"> RoadMap</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fkjqvjse66l.feishu.cn%2Fdocx%2FRVUxdqE2WolDYyxEKATcM0XXnte">FastGpt RoadMap</a></li></ul><h2><a id="user-content-️-交流群" class="anchor" href="https://gitee.com/xindian/FastGPT#%EF%B8%8F-%E4%BA%A4%E6%B5%81%E7%BE%A4"></a>🏘️ 交流群</h2><p>添加 wx 进入：<br><img src="https://otnvvf-imgs.oss.laf.run/wx300.jpg" alt="Demo" referrerpolicy="no-referrer"></p><h2><a id="user-content-powered-by" class="anchor" href="https://gitee.com/xindian/FastGPT#powered-by"></a>Powered by</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fmsgbyte%2Ftushan">TuShan: 5 分钟搭建后台管理系统</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Flabring%2Flaf">Laf: 3 分钟快速接入三方应用</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Flabring%2Fsealos">Sealos: 快速部署集群应用</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fsongquanpeng%2Fone-api">One API: 令牌管理 &amp; 二次分发，支持 Azure</a></li></ul><h2><a id="user-content--其他" class="anchor" href="https://gitee.com/xindian/FastGPT#-%E5%85%B6%E4%BB%96"></a>👀 其他</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fkjqvjse66l.feishu.cn%2Fdocx%2FHtrgdT0pkonP4kxGx8qcu6XDnGh">FastGpt 常见问题</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1jo4y147fT%2F">docker 部署教程视频</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1xh4y1t7fy%2F">公众号接入视频教程</a></li><li><a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Wo4y1p7i1%2F">FastGpt 知识库演示</a></li></ul><h2><a id="user-content-第三方生态" class="anchor" href="https://gitee.com/xindian/FastGPT#%E7%AC%AC%E4%B8%89%E6%96%B9%E7%94%9F%E6%80%81"></a>第三方生态</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fluolin-ai%2FFastGPT-Enterprise-WeChatbot">luolinAI: 企微机器人，开箱即用</a></li></ul><h2><a id="user-content--star-history" class="anchor" href="https://gitee.com/xindian/FastGPT#-star-history"></a>🌟 Star History</h2><p><a href="https://gitee.com/link?target=https%3A%2F%2Fstar-history.com%2F%23labring%2FFastGPT%26Date"><img src="https://api.star-history.com/svg?repos=labring/FastGPT&amp;type=Date" alt="Star History Chart" referrerpolicy="no-referrer"></a></p>]]>
            </description>
            <pubDate>Mon, 30 Oct 2023 02:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/xindian/FastGPT</guid>
            <link>https://gitee.com/xindian/FastGPT</link>
        </item>
        <item>
            <title>
                <![CDATA[Spring Framework 6.1 RC2]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>Spring Framework 6.1 发布了<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fspring.io%2Fblog%2F2023%2F10%2F26%2Fspring-framework-6-1-rc2-released" target="_blank">第 2 个 RC</a></u>，开发团队称这是 11 月正式发布前的最后一个版本。</p><p><img src="https://static.oschina.net/uploads/space/2023/1030/120256_ZKGg_2720166.png" referrerpolicy="no-referrer"></p><p>此版本包含 51 项错误修复和改进，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Freleases%2Ftag%2Fv6.1.0-RC2" target="_blank">点此查看详情</a>。</p><p>Spring Framework 文档<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fwiki%2FWhat%2527s-New-in-Spring-Framework-6.x">显示</a>，Spring 6.1 已全面兼容虚拟线程 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fspring-projects%2Fspring-framework%2Fissues%2F23443">Virtual Threads</a>) 和 JDK 21。</p><p><img alt="" src="https://static.oschina.net/uploads/space/2023/0817/140919_ppSy_2720166.png" referrerpolicy="no-referrer"></p><p>虚拟线程配置选项：专用的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fcore%2Ftask%2FVirtualThreadTaskExecutor.html">VirtualThreadTaskExecutor</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fcore%2Ftask%2FSimpleAsyncTaskExecutor.html%23setVirtualThreads%28boolean%29">SimpleAsyncTaskExecutor 上的虚拟线程模式</a>，以及类似的具有 new-thread-per-task strategy 和虚拟线程模式的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.spring.io%2Fspring-framework%2Fdocs%2F6.1.0-SNAPSHOT%2Fjavadoc-api%2Forg%2Fspringframework%2Fscheduling%2Fconcurrent%2FSimpleAsyncTaskScheduler.html">SimpleAsyncTaskScheduler</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 28 Oct 2023 04:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264062/spring-framework-6-1-rc2-released</guid>
            <link>https://www.oschina.net/news/264062/spring-framework-6-1-rc2-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
