<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 24 Jan 2024 19:20:45 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Chrome 将添加多项生成式 AI 功能]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>从今天开始发布的 Chrome (M121) 版本起，Chrome 将引进一系列实验性的生成式 AI 功能。在未来几天内，如需尝试这些 Chrome 新功能。只需登录 Chrome，点击三点菜单中的「设置」，并前往「实验性 AI」页面。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b9cba575d4fce922f4f42aac0344cb6d9d9.png" referrerpolicy="no-referrer"></p><p>需要注意的是，鉴于这些功能处于初步公开实验阶段，目前尚未对企业和教育账户开放。</p><p><strong>1. 智能组织浏览器标签页</strong></p><p>标签组是管理众多标签页的便捷方式，但手动整理它们可能较为繁琐。Chrome 的「标签页组织器」能自动根据你当前打开的标签页建议并创建标签组。这一功能在处理多重任务时特别有用，比如在 Chrome 中同时规划旅行、研究某个主题和在线购物。只需右键点击一个标签页并选择「组织相似标签」，或点击标签左侧的下拉箭头即可使用此功能。Chrome 还会为这些新的标签组建议名称和 emoji，方便你下次快速找到它们。</p><p><img src="https://oscimg.oschina.net/oscnet/up-a1c0f41719a22527ad6fdd2856be376b9fc.png" referrerpolicy="no-referrer"></p><p><strong>2. 借助文本生成图像模型生成个性化壁纸图片</strong></p><p>可以用 AI 生成个性化壁纸图片，让你的浏览器更具个性化。你可以轻松地基于所选的主题、心情、视觉风格和颜色生成定制化主题。</p><p>操作很简单，访问「自定义 Chrome」侧面板，点击「更改主题」，然后选择「用 AI 创建」。例如，你或许喜欢「极光」主题，并希望以「动画」风格和「宁静」心情来展现它。只需选择这些选项，Chrome 就会为你展现创造性的结果。</p><p><img src="https://oscimg.oschina.net/oscnet/up-5755f6da1b336fed96230dde19e0481af5d.png" referrerpolicy="no-referrer"></p><p><strong>3. 辅助写作</strong></p><p>在下月发布的 Chrome 版本中，将推出另一个实验性的 AI 功能，帮助你在网络上写作 —— 无论是为餐馆写点评、回复邀请，还是咨询租房信息。</p><p>要开始使用，只需在 Chrome 中访问任何网站的文本框或字段，右键选择「帮助我写作」。输入几个词之后，AI 就会开始帮助你撰写文本。</p><p>例如，假设你在一个租房网站的联系表格中。初始草稿可能是「我对这个地方很感兴趣 - 你们允许养狗吗？」而 Chrome 的「帮我写作」功能则能为你提供更完整、更有说服力的文本建议。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e2e50a0592da5ac9a57d2dac2baef8646b1.png" referrerpolicy="no-referrer"></p><p>详情：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Fproducts%2Fchrome%2Fgoogle-chrome-generative-ai-features-january-2024%2F" target="_blank">https://blog.google/products/chrome/google-chrome-generative-ai-features-january-2024/</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 10:41:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276552/chrome-generative-ai-features-january-2024</guid>
            <link>https://www.oschina.net/news/276552/chrome-generative-ai-features-january-2024</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[逆天神机 —— 17 寸的 64 核 AMD EPYC 工作站]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>广东湛江芯聚能科技有限公司最近<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.techradar.com%2Fpro%2Fvideo-of-ridiculously-powerful-64-core-amd-epyc-workstation-laptop-emerges-but-that-pales-in-comparison-to-the-dual-socket-512-core-powerhouse-its-chinese-maker-is-working-on" target="_blank">引发了关注</a></u>，该公司发布了一款 64 核 AMD EPYC 笔记本电脑，并宣称正在研发双插槽 512 核 AMD EPYC 笔电。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-98976404da8694f549b44bc840f81fe1501.png" referrerpolicy="no-referrer"></p><p>芯聚能称，笔记本电脑市场目前处理器核心数最多的是 i9-13980hx，有 24 核，它研发的内置液冷散热 64 核 17 寸桌面级显卡笔记本电脑，多核性能是 i9 13980hx 的两倍以上，整机厚度为 4.6 厘米，主机厚度仅 3.9 厘米，配备的显卡是桌面级 RTX4080 16G。</p><p>该笔电有两个版本，一个配备是基于 Zen3 的 EPYC 7713 CPU，另一个是配备基于 Zen4 的 EPYC 9554。考虑到 EPYC 9554 的价格 7000-9000 美元，这款笔电的价格将会非常昂贵。</p><p><img src="https://oscimg.oschina.net/oscnet/up-b79a3d6145f2049bf098fc17fb908c01094.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-962a7d2163eefd9af82c4da0903594a7f52.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fwww.xinjuneng.com.cn%2Fabout.html" target="_blank">http://www.xinjuneng.com.cn/about.html</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 10:18:03 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276550</guid>
            <link>https://www.oschina.net/news/276550</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OBS Studio 支持 FFmpeg VAAPI AV1 编码器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OBS Studio 刚刚合并了支持&nbsp;FFmpeg VAAPI AV1 编码器的 PR，这意味它将支持使用 Linux 的视频加速接口 (Video Acceleration API, VA-API) 接口进行 AV1 视频编码。</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3831b08b3ec190e7ce23ab4742fc13c8d7c.png" referrerpolicy="no-referrer"><br><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fobsproject%2Fobs-studio%2Fpull%2F8832" target="_blank">https://github.com/obsproject/obs-studio/pull/8832</a></u></em></p></blockquote><p>根据描述，该 PR 于去年 5 月开提交，主要是为了添加对 VA-API 的 AV1 支持。</p><p>维护者称已使用 Mesa 驱动程序成功测试了 VA-API AV1 编码。因此当涉及到开源 Mesa 驱动程序支持时，VA-API AV1 编码可用于 AMD Radeon RX 7000 系列显卡和 Intel Arc 显卡。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 09:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276546/obs-lands-av1-va-api</guid>
            <link>https://www.oschina.net/news/276546/obs-lands-av1-va-api</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[红帽预测开源在 2024 年发展的三个趋势]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">红帽全球高级副总裁兼亚太区总经理 Marjet Andriesse <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FtE2Sw1wyYTiBYVg9fbE29w" target="_blank">发文</a>，预测了开源在 2024 年发展的三个趋势。提出了以下三个可能会对亚太区产生重大影响的关键趋势：</span></p><p><strong><span style="color:#000000">一、超越云端</span></strong></p><p><span style="color:#000000">过去，企业曾发现从非结构化数据中提取价值是一项充满挑战的任务。随着数据分析的不断进步，尤其是生成式人工智能（gen AI）对非结构化数据进行获取和分析的能力，企业能够更充分地利用他们的数据。这也因此带来了对数据增加需求的情况，将所有这些数据存储和处理在云端可能不再是最为高效的选择。</span></p><p><span style="color:#000000">通过将边缘计算与当前的云策略整合，企业可以获得「优势」，更有效地管理预算和工作负载。边缘计算在亚太地区将继续发展，预计从 2023 年的 437 亿美元增长到 2027 年的 810 亿美元。</span></p><p><span style="color:#000000">今年，我们很可能会看到企业继续寻找优化成本和运营效率的方式，例如采用无服务器计算。开源解决方案也可以使这些企业定制基础架构，以满足其需求，在规模上实现更高水平的定制和控制。</span></p><p><strong><span style="color:#000000">二、创新的步伐由 AI 继续加速</span></strong></p><p><span style="color:#000000">Andriesse 认为，AI 将在 2024 年继续成为企业的重要优先事项，因为它几乎改变了每个行业，并以我们才刚刚开始理解的方式影响着社会。尽管这将激发出新工具超越基础模型的创新，但正是开源能够支持 gen AI 驱动的应用程序的激增，使业务领导者能够自信地应对变化的速度和规模。</span></p><p><span style="color:#000000">去年在 GitHub 上，首次为开源做贡献的人的数量创下了历史新高，而亚太区的开发者社区推动了相当大的增长。例如，印度拥有超过 1320 万的开发者，同比增长超过 30%。仅在去年上半年，生成式 AI 项目的数量已经超过了 2022 年的两倍以上。</span></p><p><span style="color:#000000">但是，当我们寻求利用 AI 解决我们最大的挑战并减少工作效率低下时，企业需要确保 AI 在访问、技能和知识上是包容的。业务领导者需要以身作则，引导企业朝着未来准备就绪的工作方式发展，以适应并茁壮成长。</span></p><p><strong><span style="color:#000000">三、安全仍然是首要任务</span></strong></p><p><span style="color:#000000">ChatGPT 将 gen AI 引入主流意识的前沿，改变了人们对 AI 的看法，并利用它改进了在经济不确定性中的业务工作流程和资源效率。</span></p><p><span style="color:#000000">然而，对这些技术的使用方式也是一个值得关注的问题。根据红帽 2023 全球科技展望报告，IT 领导者表示安全仍然是首要资金投入的焦点。随着在当今信息时代数据变得越来越容易获取，隐私和安全变得更加重要。与开源社区类似，我们可以预期对使用的软件和组件进行更严格的审查。例如，采用更强大的分析工具和自动化安全测试来在开发过程的早期识别任何漏洞。这种范式转变可能会影响开发人员的工作方式，更加强调在某些设计决策中将安全性作为核心考虑因素。</span></p><p><span style="color:#000000">Andriesse 预计，对安全的持续关注也将改变企业管理数据的方式。为了从数据中获取最有效的见解，企业必须确保其数据准确且及时。我们将看到更多企业更加关注数据溯源，了解其数据的起源、完整性和真实性。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 08:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276536</guid>
            <link>https://www.oschina.net/news/276536</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源向量数据库 Qdrant 融资 2800 万美元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">继 2023 年 4 月完成 750 万美元种子轮融资后，开源向量数据库公司 Qdrant <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fqdrant.tech%2Fblog%2Fseries-a-funding-round%2F" target="_blank">宣布</a>完成 2800 万美元的 A 轮融资。由 Spark Capital 领投，公司现有投资者 Unusual Ventures 和 42CAP 参投。</span></p><p><span style="color:#000000">总部位于柏林的 Qdrant 成立于 2021 年，定位是面向下一代 AI 应用的向量数据库，采用 Rust 编写。Qdrant 是一个向量相似度搜索引擎和向量数据库，提供了一个生产就绪的服务，带有一个方便的 API 来存储、搜索和管理点 —— 带有额外有效载荷的向量 Qdrant 是为扩展过滤支持而定制的。使它可用于各种神经网络或基于语义的匹配、分面搜索和其他应用程序。</span></p><p><span style="color:#000000"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-22538a14f07005d4eab56ed5ab65cabd5b7.jpg" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">向量数据库领域在近两年炙手可热。向量数据库公司 Zilliz 于 2022 年 8 月宣布完成 6000 万美元 B+ 轮融资，用于 Milvus 开源向量数据库的商业化；Weaviate 在 2023 年 4 月完成 B 轮 5000 万美元融资。此外，开源向量数据库研发商 Chroma 公司也在去年获得 1800 万美元种子轮融资，Pinecone 公司则为其专有替代方案筹集了 1 亿美元资金。</span></p><p><span style="color:#000000">Qdrant 在公告中表示，他们在过去的两年里看到了令人难以置信的用户增长和开源社区的支持，其最近的下载量已经超过了 500 万次。目前，Qdrant 的一些知名采用者包括德勤、埃森哲以及马斯克旗下的 xAI 公司。</span></p><p><span style="color:#000000">Qdrant 首席执行官兼联合创始人 Andre Zayarni 向 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2024%2F01%2F23%2Fqdrant-open-source-vector-database%2F" target="_blank">TechCrunch</a> 解释称，「我们的计划是在今年第二季度进行下一次融资，但几个月前我们收到了一份报价，因此决定节省一些时间，现在就开始扩大公司规模。筹资和聘用合适的人总是需要时间的。」</span></p><p><span style="color:#000000">值得注意的是，Zayarni 表示，在收到后续投资报价的同时，公司实际上拒绝了一家"主要数据库市场参与者"的潜在收购要约。并补充说，鉴于公司目前主要由工程师组成，他们将利用新注入的现金组建业务团队。</span></p><p><span style="color:#000000">Qdrant 没有透露哪些客户正在使用开源 Qdrant 版本，哪些客户正在使用其托管服务。不过，Zayarni 坚称，即使公司选择付费购买附加服务，公司的开源特质也是主要卖点之一。</span></p><p><span style="color:#000000">「在使用专有或纯云计算解决方案时，始终存在被供应商锁定的风险。如果供应商决定调整价格或更改其他条款，客户需要同意或考虑迁移到其他替代方案，如果是重型生产用例，这并不容易。通过开源，对数据的控制总是更多一些，而且可以在不同的部署选项之间切换。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 07:18:40 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276529/qdrant-series-a-funding-round</guid>
            <link>https://www.oschina.net/news/276529/qdrant-series-a-funding-round</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[龙芯 LoongArch 架构在 Linux 6.8 内核初步支持 Rust]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>根据内核列表消息，龙芯 LoongArch 架构已在最新 Linux 6.8 版本中提供初步 Rust 支持。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-ec1300f650a539acb9a091893e4201647df.png" referrerpolicy="no-referrer"><br><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2F20240119110700.335741-1-chenhuacai%40loongson.cn%2FT%2F%23u" target="_blank">https://lore.kernel.org/lkml/20240119110700.335741-1-chenhuacai@loongson.cn/T/#u</a></u></em></p></blockquote><p>Linux 6.8 内核和 LoongArch 架构相关的变化还包括将最低 Clang 编译器版本提升至 v18，为架构添加了内置 DTB 支持，并更新了默认内核配置文件。此外，补丁中还包含了一系列错误修复，以提升系统的稳定性和兼容性。</p><p>目前，Linux 6.8 内核的 LoongArch 相关 PR 已经被合并到主线 mainline。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 06:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276520/loongarch-linux-6-8</guid>
            <link>https://www.oschina.net/news/276520/loongarch-linux-6-8</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[200 小时深度体验分析，DevOps 选型重磅发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#191b1f; margin-left:0px; margin-right:0px; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-b31aff555046a4c349e6e088370a204b798.png" referrerpolicy="no-referrer"></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">打造一个功能全面、稳定且用户体验友好的 DevOps 平台对于推动持续集成、持续交付、团队协作和效率提升至关重要。企业在选择 DevOps 平台时，有的倾向于采用平台类产品，如 Zadig、云效、Coding 等；而另一些企业则基于企业文化和项目需求，在已有的 CI/CD 工具（如 Jenkins、GitLab、Argo、Tekton）基础上自建 DevOps 平台，以实现对企业内部 DevOps 方案的定制。无论是选择平台类产品还是自建平台，都需要在搭建之前进行充分的规划和评估，以确保满足企业的需求并提升 DevOps 实践的效率。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">本文将详细分析各个 DevOps 平台和工具的设计理念、特点、局限性等，并从多个维度（团队规模和业务复杂度、多云策略和厂商关联、使用场景和业务需求等）出发，结合企业实际的业务需求给出建议，为企业 DevOps 选型指明方向。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h2_1"></span><h2><strong>DevOps 平台类产品</strong></h2><span id="OSC_h3_2"></span><h3><em><strong>Zadig</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Zadig 是由 KodeRover 公司基于 Kubernetes 研发的自助式云原生 DevOps 平台，服务端源码 100% 开放。Zadig 提供灵活可扩展的工作流支持、多种发布策略编排以及一键安全审核等特性。该平台还支持定制的企业级 XOps 敏捷效能看板，深度集成多种企业级平台，并通过项目模板化批量快速接入，实现数千个服务的一键纳管治理。其主要目标是帮助企业实现产研的数字化转型，使工程师成为创新引擎，并为数字经济的无限价值链接提供支持<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.koderover.com" target="_blank">[1]</a>。</p><span id="OSC_h4_3"></span><h4><strong>01-Zadig 具有以下几个核心特性：</strong></h4><ul><li>灵活易用的高并发工作流</li><li>面向开发者的云原生环境</li><li>高效协同的测试管理</li><li>强大免运维的模板库</li><li>安全可靠的发布管理</li><li>稳定高效的客户交付</li><li>客观精确的效能度量</li><li>云原生 IDE 插件</li></ul><span id="OSC_h4_4"></span><h4><strong>02-Zadig 的核心优势：</strong></h4><ul><li>设计理念：产品级交付，包含代码、配置、数据全要素的交付</li><li>底座真云原生架构：Zadig 基于 k8s 底座，支持较高规模的构建部署并发、多个微服务同时交付场景</li><li>用户接入难度低：Zadig 支持导入和托管现有服务，并对现有流程几乎无侵入极简、开放，易于企业内落地，不需要改变用户行为</li><li>产品可用性较强：3 年开源、大量一线真实场景高频使用打磨，积众家之所长，积累 15 万企业开发者，全球累计部署 50 万应用，2000 家企业高频使用，稳定可靠保证，内置众多最佳实践工作模式</li><li>产品开放性较强：天生支持企业私有化部署，支持全球多地部署、分布式交付分发，针对具有全球化战略的企业更为友好</li></ul><span id="OSC_h4_5"></span><h4><strong>03-Zadig 的局限性：</strong></h4><ul><li>设计理念和其他 DevOps 平台存在不同，初次接触的用户需要一定时间学习和掌握</li><li>系统依赖 K8s，对于对于未采用 K8s、完全处于传统主机环境的企业项目而言并不适用</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_6"></span><h3><em><strong>云效</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">云效是阿里云提供的一站式 DevOps 平台，提供涵盖软件研发全生命周期的研发工具链和研发管理服务，并支持公共云、专有云多种部署形态。通过云原生新技术和研发新模式，助力创新创业和数字化转型企业快速实现研发敏捷和组织敏捷，打造「双敏」组织，实现多倍效能提升<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F153739.html" target="_blank">[2]</a>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">云效具有项目协作、代码管理、流水线、制品仓库、测试管理、应用交付平台、效能洞察等核心能力。</p><span id="OSC_h4_7"></span><h4><strong>01-云效主要特点：</strong></h4><ul><li>开箱即用</li><li>企业级安全保障</li><li>实践经验模板化沉淀</li><li>无缝对接阿里云产品</li></ul><span id="OSC_h4_8"></span><h4><strong>02-云效的局限性：</strong></h4><ul><li>系统比较厚重，迁移成本比较高</li><li>耦合度较高，跟阿里云产品深度绑定，对于多云架构的支持不够友好</li><li>对于非阿里云工具链的扩展较困难</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">云效与其他平台在设计理念上存在显著差异，云效专注於单应用的交付，将环境管理能力主要集中在应用维度。云效流水线以代码库为主要视角，随着业务增长，流水线数量迅速增加，配置管理难度加大，所以云效更适用于初期快速启动 DevOps 的场景。云效天然亲和阿里云资源和产品，对于多云需求或全球交付需求的企业而言，接入云效可能面临一定的适应难度。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_9"></span><h3><em><strong>Coding</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Coding DevOps 是面向软件研发团队的一站式研发协作管理平台，提供从需求到设计、开发、构建、测试、发布到部署的全流程协同及研发工具支撑<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcoding.net%2Fhelp%2Fdocs%2Fstart%2Fnew.html" target="_blank">[3]</a>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Coding 具有团队管理、项目协同、代码仓库、代码扫描、持续集成、持续部署、应用管理等核心能力</p><span id="OSC_h4_10"></span><h4><strong>01-Coding 主要特点：</strong></h4><ul><li>一站式协作平台及研发工具链</li><li>支持双态研发体系建设（瀑布模型、敏捷模型）</li><li>项目度量数据可视化</li><li>无缝集成第三方平台</li></ul><span id="OSC_h4_11"></span><h4><strong>02-Coding 的局限性：</strong></h4><ul><li>以代码库为核心的工作流，管理成本较高</li><li>现有工程体系迁移有一定的成本</li><li>耦合度较高，跟腾讯云产品深度绑定，对于多云架构的支持不够友好</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">和其他平台的定位上存在不同，Coding 是流程协同平台，一站式为开发者提供完整的 DevOps 工具链。由于其天然亲和腾讯云资源和产品，对于存在多云架构以及现有业务由其他云平台支撑的场景不够友好。在接入 Coding 过程中，需要做服务的初始化，有一定迁移成本。此外，Coding 构建和部署为两个单独的模块，对于习惯在一条工作流走完所有流程（构建、部署、测试、配置变更、数据变更等）的用户，可能需要重新适应或者调整使用方式。</p><span id="OSC_h2_12"></span><h2>&nbsp;</h2><span id="OSC_h2_13"></span><h2><strong>DevOps 工具类产品</strong></h2><span id="OSC_h3_14"></span><h3><em><strong>Jenkins</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Jenkins 是一款开源、可扩展的自动化构建和交付工具。其设计初衷是为了满足不同团队和项目的需求，提供高度可扩展和灵活的平台。通过插件和扩展，Jenkins 赋予开发团队持续集成和交付的能力，帮助实现软件开发的自动化、协作和快速交付<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jenkins.io%2Fdoc" target="_blank">[4]</a>。</p><span id="OSC_h4_15"></span><h4><strong>01-Jenkins 的主要特点：</strong></h4><ul><li>扩展性非常强，有大量的插件支持</li><li>分布式构建</li><li>流水线项目 pipeline as code 支持在代码仓库中管理</li></ul><span id="OSC_h4_16"></span><h4><strong>02-Jenkins 的局限性：</strong></h4><ul><li>系统本身安装过程不复杂，但对于插件管理非常繁琐</li><li>项目实施难度大，所有任务都需要写脚本，维护成本高</li><li>Jenkinsfile 分散到不同的工程中，对于后期维护成本比较高</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">对用户而言，Jenkins 需依赖众多插件和大量脚本来解决业务交付过程中的构建、部署、测试和自动化流程串接的难题。对于云原生的场景而言需要通过脚本的方式来操作集群，对脚本维护和管理要求比较高。此外 Jenkins 通过插件来管理工作流的权限，权限管理负担较重。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Zadig 和 Jenkins 的比对请参阅 「<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490637%26idx%3D1%26sn%3D6e0498b37fb15f8b8903c4997e5611d8%26chksm%3Dcfb450edf8c3d9fb758d691081f09fd85d91dbb17534ba9c18c2300725462d3806581efbd237%26scene%3D21%23wechat_redirect" target="_blank"><span style="color:#5f9cef">Zadig vs. Jenkins 详细比对：时代的选择与开发者之选</span></a>」一文。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_17"></span><h3><em><strong>GitLab CI/CD</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">GitLab 是一个基于 Git 的版本控制和协作平台。它提供了一套强大的工具，支持团队协作、代码托管、持续集成、持续交付等软件开发过程中的多个方面<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.gitlab.com%2Fee" target="_blank">[5]</a>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">GitLab 具有代码仓库管理、CI/CD 流水线、效能管理、敏捷项目管理、集成其他工具等核心能力。</p><span id="OSC_h4_18"></span><h4><strong>01-GitLab 的主要特点：</strong></h4><ul><li>一站式管理 DevOps 工具</li><li>自动化工作流程加速软件交付</li><li>与云厂商解耦</li></ul><span id="OSC_h4_19"></span><h4><strong>02-GitLab 的局限性：</strong></h4><ul><li>As code 工作流配置不直观，学习和维护成本较高</li><li>缺少基本环境管理能力，需另外搭建其他平台观测服务的情况</li><li>多角色协同过程中，权限管理比较难，需要给运维测试代码仓库权限才能做 CI/CD，风险较大</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">GitLab CI/CD 设计理念是以代码仓库为核心，对于小型项目、单仓库顺序交付的场景较为友好，而对于更为复杂的项目和团队多角色协作，使用方面和管理上存在一定局限性。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_20"></span><h3><em><strong>Argo</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Argo 是一个基于 Kubernetes CRD 实现的一个开源工具，基于 Kubernetes 的调度能力实现了工作流的控制和任务的运行。同时提供了一个 UI 方便用户查看任务的详情<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fargoproj.github.io" target="_blank">[6]</a>。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Argo 有三个核心产品 Workflows 、CD、Rollouts，为持续集成、持续交付、持续部署提供底层能力。</p><ul><li>Workflows：云原生工作流引擎，支持编排构建、测试、部署等场景，支持声明式地管理复杂任务的执行流程</li><li>CD：基于 GitOps 的理念实现自动化部署、回滚和版本管理</li><li>Rollouts：用于实现 Kubernetes 上的蓝绿发布、金丝雀发布、渐进式发布等发布策略，确保生产发布的稳定性</li></ul><span id="OSC_h4_21"></span><h4><strong>01-Argo 的局限性：</strong></h4><ul><li>声明式的配置，维护和管理成本较高</li><li>本身提供的 Web UI 无法企业级安全性和合规性要求</li><li>适用 K8s 场景，对于传统主机场景并不适用</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">尽管 Argo 在云原生工作流引擎方面表现卓越，但对于完整的 DevOps 解决方案仍有欠缺，缺乏一系列企业管理功能，如环境管理、测试管理和权限控制，因此企业可能需要二次开发以建设相应的管理能力，以满足多角色协作的需求。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h3_22"></span><h3><em><strong>Tekton</strong></em></h3><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Tekton 是一个谷歌开源的基于 Kubernetes 的云原生 CI/CD 框架，通过定义 CRD 的方式，让用户可以灵活的自定义流水线以满足自身 CI/CD 需求<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftekton.dev%2Fdocs" target="_blank">[7]</a>。</p><span id="OSC_h4_23"></span><h4><strong>01-Tekton 的主要特点：</strong></h4><ul><li>高度抽象底层，方便企业定制工作流程</li><li>与云原生环境无缝对接</li><li>跨云厂商、技术栈和部署环境，帮助实现标准化的 CI/CD</li></ul><span id="OSC_h4_24"></span><h4><strong>02-Tekton 的局限性：</strong></h4><ul><li style="color: rgb(25, 27, 31); margin-left: 0px; margin-right: 0px; text-align: start;">适用 K8s 场景，对于传统主机场景并不适用</li><li style="color: rgb(25, 27, 31); margin-left: 0px; margin-right: 0px; text-align: start;">自定义资源，有一定的学习成本</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">Tekton 注重底层灵活性，尽管灵活性强，但也显著增加了使用的难度。因此，要在 Tekton 上实现完整的 CI/CD 过程，就必须进行二次开发，门槛高，需要消耗一定建设成本。</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h2_25"></span><h2><strong>各平台和工具之间的比较</strong></h2><div><img src="https://pic1.zhimg.com/80/v2-5bae69be9f8a1aa5fe51311b1f0fd99c_1440w.webp" referrerpolicy="no-referrer"></div><span id="OSC_h2_26"></span><h2>&nbsp;</h2><span id="OSC_h2_27"></span><h2><strong>DevOps 体系选型建议</strong></h2><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">企业在选择 DevOps 平台时，可以从多个角度进行考量，具体选择取决于企业的需求、文化和项目特点。以下是一些建议：</p><span id="OSC_h4_28"></span><h4><strong>01-团队规模和业务复杂度：</strong></h4><ul><li><strong>小型团队：</strong>适用于业务相对简单，研发为主的团队，可考虑选择 GitLab 方案，以代码管理作为入口，开启 GitLab CI/CD 功能，适用于强调全方位版本控制的企业。</li><li><strong>中型企业：</strong>对于复杂业务、多角色协作的情况，可选择一站式平台，如云效、Coding、Zadig，提供开箱即用的协作工具链。</li><li><strong>大型团队：</strong><span>&nbsp;</span>针对复杂场景、历史负担重的团队，建议选择功能全面、灵活可扩展的平台，如 Zadig，适用于复杂的异构环境交付流程和大规模的微服务架构。</li></ul><span id="OSC_h4_29"></span><h4><strong>02-多云架构及全球化战略需求：</strong></h4><ul><li><strong>多云架构需求：</strong>若企业有多云和全球化战略，首选 Zadig。它天然支持企业私有化部署，厂商中立，友好支持多云架构，并满足国际化政策需求（i18n、出海合规等）。</li><li><strong>特定云服务需求：</strong><span>&nbsp;</span>对于已深度关联某一云厂商的企业，可考虑选择该厂商提供的平台，如云效（阿里云关联）或 Coding（腾讯云关联）。</li></ul><span id="OSC_h4_30"></span><h4><strong>03-使用场景和业务需求：</strong></h4><ul><li><strong>全生命周期管理需求：</strong>若企业需全面管理全流程，可选择 Coding、云效提供的一站式协作平台。Zadig 平台侧重于研发和发布侧的一站式协同，需结合第三方实现业务到研发的衔接。</li><li><strong>云原生和微服务需求：</strong><span>&nbsp;</span>针对云原生和微服务架构，Zadig 提供灵活可扩展的工作流支持，适合大规模的构建、部署并发和产品级交付。</li><li><strong>传统单体业务：</strong>对于传统的单体业务，Jenkins 是一个灵活且支持强大插件的选择，满足基本的构建部署需求。</li><li><strong>K8s 生态需求：</strong>Argo 是专注于 Kubernetes GitOps 持续交付工具，适用于新兴企业没有历史负担的情况。</li></ul><span id="OSC_h4_31"></span><h4><strong>04-DevOps 平台建设成本考量：</strong></h4><ul><li><strong>围绕 CI/CD 工具自建平台成本估算：</strong>围绕 Jenkins、Tekton、Argo 工具搭建 DevOps 流程串接管理平台，需要组建跨职能、有丰富 DevOps 经验的团队，人力成本预估至少 300 万元/每年。</li><li><strong>直接购买商业 DevOps 平台成本估算：</strong>直接使用云厂商公有云或采用 Zadig 私有化 DevOps 平台。成本根据团队规模不同在 5 万元-20 万元/每年，可与供应商商谈获取更有竞争力的报价。</li><li><strong>开源商业产品与自研结合成本估算：</strong>针对 200 人以上团队，推荐选择 Zadig 作为自研平台的底层「平台工程」框架，结合自身业务进行定制开发。总体成本预估在 50 万元/每年左右，相较于从零开始搭建团队，采用 Zadig 可在成本上更具优势，同时满足企业特定需求。</li></ul><span id="OSC_h4_32"></span><h4><strong>05-数据的安全与合规考量：</strong></h4><ul><li><strong>下公有云、上行业云：</strong>随着技术发展和政企数字化的深入，数据已成为组织中最核心的资产。数据的安全与合规已经成为国内越来越多组织的核心关注点。在这个背景下，将核心的生产过程及数据从公有云转移到行业私有云，已成为刻不容缓的时代需求。Zadig 作为提供标准私有模式的 DevOps 平台可以直接对接自建云、私有云，通过云原生技术架构迭代业务的同时又能满足数据本地化安全管理的诉求。</li></ul><span id="OSC_h4_33"></span><h4><strong>06-原厂实施考虑因素：</strong></h4><ul><li><strong>专业支持和最佳实践需求：</strong>如果企业注重由产品开发者提供的专业支持和最佳实践，以降低试错成本和减少建设周期，可优先考虑 Zadig 作为原厂实施的选择。云效和 Coding 生态伙伴实施，提供的技术支持和最佳实践可能受制于生态伙伴的服务范围和能力。</li></ul><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">后续将推出云效、Coding 等平台与 Zadig 之间详细对比文章，提供更全面的选型分析。敬请期待！</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><span id="OSC_h2_34"></span><h2>参考链接：</h2><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[1] Zadig 官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.koderover.com" target="_blank"><span style="color:#5f9cef">https://docs.koderover.com</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[2] 云效官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhelp.aliyun.com%2Fdocument_detail%2F153739.html" target="_blank"><span style="color:#5f9cef">https://help.aliyun.com/document_detail/153739.html</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[3] Coding 官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcoding.net%2Fhelp%2Fdocs%2Fstart%2Fnew.html" target="_blank"><span style="color:#5f9cef">https://coding.net/help/docs/start/new.html</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[4] Jenkins 官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.jenkins.io%2Fdoc" target="_blank"><span style="color:#5f9cef">https://www.jenkins.io/doc</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[5] GitLab 官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.gitlab.com%2Fee" target="_blank"><span style="color:#5f9cef">https://docs.gitlab.com/ee</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[6] Argo 官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fargoproj.github.io" target="_blank"><span style="color:#5f9cef">https://argoproj.github.io</span></a></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left">[7] Tekton 官方资料：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftekton.dev%2Fdocs" target="_blank"><span style="color:#5f9cef">https://tekton.dev/docs</span></a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">立即体验 Zadig V2.0 新架构，开启高效交付之旅！🚀&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968">Zadig，让工程师更加专注创造</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-16e6b25cd9b3c92bc711c17b21e99e9b040.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491542%26idx%3D1%26sn%3D007a0329060f75cd6daa225fb4c3ed0e%26chksm%3Dcfb45376f8c3da6052fc628ed3083e2c27aa6f64b0b4efb8ee6473e663d62b91de05d7d067c4%26token%3D2032062673%26lang%3Dzh_CN%23rd" target="_blank">阅读原文</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank">Zadig 在 Github</a>&nbsp;/&nbsp;<a href="https://gitee.com/koderover/zadig">Zadig 在 Gitee</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>推荐阅读 :&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491527%26idx%3D1%26sn%3D6024fc78adfb92892c170ecc41704e3a%26chksm%3Dcfb45367f8c3da71eff88b1220aef48e5de6ff54788bff81012906443f135e77a99df07f265a%26scene%3D21%23wechat_redirect" target="_blank">Zadig v2.1.0 版本发布：工作流与环境全面协同升级！</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490637%26idx%3D1%26sn%3D6e0498b37fb15f8b8903c4997e5611d8%26chksm%3Dcfb450edf8c3d9fb758d691081f09fd85d91dbb17534ba9c18c2300725462d3806581efbd237%26scene%3D21%23wechat_redirect" target="_blank">Zadig vs. Jenkins 详细比对：时代的选择与开发者之选</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491499%26idx%3D1%26sn%3D0bf38f5bde35f9f0aec0cedca79d74b4%26chksm%3Dcfb4530bf8c3da1d9e9aad6af00d150be6ffd231a3e7801512cb8b749746e3c8ceca2feafadd%26scene%3D21%23wechat_redirect" target="_blank">探索 Zadig 自测模式，一套环境多人协同，释开发者创造力！</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491474%26idx%3D1%26sn%3D5f7c40d430e16fcbfa69104c4a46a797%26chksm%3Dcfb45332f8c3da247c792998c84b0885a3b40a534cfd2011e0e7ea30a51cadeeabb37fdba14d%26scene%3D21%23wechat_redirect" target="_blank">阿里云 MSE + Zadig，面向开发者的全链路灰度发布解决方案</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491336%26idx%3D1%26sn%3D805f7d2c44c96cab529ffef120d84ca0%26chksm%3Dcfb453a8f8c3dabe83163a873135f2a72cdddcb9faeecefe5e40f20a358681304484c56cce51%26scene%3D21%23wechat_redirect" target="_blank">ZADIG 专家版倾情上线：一键高效发布，119 元/人月起，社区老友享年终福利！</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 05:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/10926966</guid>
            <link>https://my.oschina.net/koderover/blog/10926966</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开源截图程序 ScreenCapture 渲染引擎迁移到 Skia]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>功能介绍：&nbsp;</p><ul><li><span style="background-color:#ffffff; color:#333333">多屏幕截图、跨屏幕截图。</span></li><li><span style="background-color:#ffffff; color:#333333">画椭圆、正圆、矩形、正方形、箭头、标号、直线、画自由路径线条（填充、非填充、不同颜色、不同线框粗细、可调整大小和位置）。</span></li><li><span style="background-color:#ffffff; color:#333333">马赛克、橡皮擦（矩形、自由路径）、文本（滚轮调整文字大小）。</span></li><li><span style="background-color:#ffffff; color:#333333">上一步（Ctrl+Z）、下一步（Ctrl+Y）（历史路径中的图形元素可以调整大小和位置）。</span></li><li><span style="background-color:#ffffff; color:#333333">保存成文件（Ctrl+S）、保存到剪切板（Ctrl+C）。</span></li><li><span style="background-color:#ffffff; color:#333333">取景框，支持快捷键复制 RGB 颜色 （Ctrl+R）</span><span style="background-color:#ffffff; color:#333333">和 HEX 颜色（Ctrl+H）。</span></li><li><span style="background-color:#ffffff; color:#333333">在新窗口中钉住截图区域（Ctrl+P）。</span></li><li><span style="background-color:#ffffff; color:#333333">非常快、低内存消耗、低 CPU 使用率。</span></li><li><span style="background-color:#ffffff; color:#333333">非常小、仅一个可执行文件（4.9M），无需安装，不依赖任何动态链接库。</span></li><li><span style="background-color:#ffffff; color:#333333">可以非常容易的集成到其他应用中。</span></li><li><span style="background-color:#ffffff; color:#333333">可以随时修改已绘制的元素（鼠标移到元素上等待 1.6 秒）。</span></li></ul><p>本次更新内容：</p><ul><li>渲染引擎从 Blend2D 切换到 Skia，体积变大了少许，能力增强了很多</li><li>CMake 支持，不再是一个简单的 VisualStudio 工程</li><li>几乎重写了整个项目的代码，代码更加易读，易学，易维护</li><li>优化了很多细节，绘制元素更快，更好。</li></ul><p>项目地址：</p><ul><li><a href="https://gitee.com/horsejs_admin/ScreenCapture">https://gitee.com/horsejs_admin/ScreenCapture</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxland%2FScreenCapture" target="_blank">https://github.com/xland/ScreenCapture</a></li></ul><p><img alt="" height="357" src="https://oscimg.oschina.net/oscnet/up-20b2b15f3e4c3a1dee46f6f75c3049b00c6.png" width="500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 05:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276513/screencapture-skia</guid>
            <link>https://www.oschina.net/news/276513/screencapture-skia</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ioGame17 文档或将强制收费，netty java 游戏服务器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h3>公告</h3><p>不久之后，将会发布 ioGame21；当 ioGame21 发布后，在线文档将对应最新版本的 ioGame21；</p><p>开发者如果不打算升级到 ioGame21 的，请提前保存好 ioGame17 相关文档。当 ioGame21 发布后，旧的文档（ioGame17）将从自愿付费模式转为强制付费文档。<strong>简单的说，如果你不打算支付这部分文档费用，请私下保存一份自留使用，但不得以任何形式传播及公开</strong>。</p><p>同时，ioGame21 在线文档依旧采用自愿付费模式策略。简单的说，我们提供了最新在线文档的白嫖方式，如果你打算跟进框架最新版本的，依旧可以选择白嫖在线文档。</p><p>最后，由于精力有限，在 ioGame21 发布后，ioGame17 将不再提供免费的修复。通常一个 fix 的批发价是 8k ~ 50k，如果你的实力雄厚，不想升级且需要 fix 时，请联系我们。</p><p>综上，想继续白嫖的，请跟进最新版本。ioGame21 在性能、简化并发编程、吞吐量、编码方式、全链路调用日志跟踪、 文档阅读...等各方面均有质的飞越。</p><h3>ioGame 是什么？</h3><blockquote><p>ioGame 的学习成本非常低，可以说是<strong>零学习成本</strong>，即使没有游戏编程（网络编程）经验，也能轻松上手。开发者只需掌握普通的 java 方法或 webMVC 相关知识，就能用框架开发业务，通常在 10 分钟内就能掌握。框架不要求开发者改变编码习惯，而是自身适应开发者的需求。</p><p>同时，ioGame 也适用于<strong>网络游戏服务器、物联网、内部系统</strong>及各种需要长连接的场景；框架采用无锁异步化、事件驱动的架构设计；轻量级，无需依赖任何第三方中间件或数据库就能支持集群、分布式。通过 ioGame 可以很容易的搭建出一个集群无中心节点、集群自动化、多进程的分布式游戏服务器。</p><p>ioGame 是一个非常适合网络游戏开发的框架。可以让你轻松地创建高性能、低延迟、易扩展的游戏服务器，并且节省时间和资源。如果你想要快速地开发出令人惊艳的网络游戏，请不要犹豫，立即选择 ioGame 吧！框架屏蔽了很多复杂且重复性的工作，并可为项目中的功能模块结构、开发流程等进行<strong>清晰的组织定义</strong>，减少了后续的项目维护成本。</p></blockquote><h3>ioGame 使用趋势数据</h3><p>关注 ioGame 的游戏服务器开发者持续增多，<strong>2022-09 ~ 至今</strong>各月的统计数据；</p><p>这里的统计信息是关于开发者关注 ioGame 框架相关的，从统计数据中可以看出，由于 ioGame 上手简单，功能强大等优点，得到了众多开发者的关注。如果你想知道 ioGame 有没有人在使用，可以先到这里看下统计数据、开发者的评价与讨论。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao%2Fgame%2Fgpxk93%23TwVa8" target="_blank">https://www.yuque.com/iohao/game/gpxk93#TwVa8</a></p><p>这里展示了每月的统计数据，统计数据来源于语雀后台，这些数据都是<strong>真实的、客观存在的、活的</strong>。</p><blockquote><p><span style="color:#e74c3c"><strong>因为成本的原因，某宝某多还没有出现能提供这种服务的商家，所以这样的统计数据也更具真实性。</strong></span></p></blockquote><p>通过统计数据，我们可以看到每天会有很多开发者在访问 ioGame 的在线文档，并且这些统计数据不是来源于口嗨的，也不是主观创造的。</p><p>所以，还在犹豫要不要使用 ioGame 的开发者们，更应该讨论的是「为什么这些开发者会选择使用 ioGame」，而不是 ioGame 有没有人在使用的问题。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.yuque.com%2Fiohao" target="_blank">点击我，到语雀后台查看 ioGame 的数据</a></p><p><img alt="" height="434" src="https://foruda.gitee.com/images/1704787607029603343/5c1f2c07_5475.png" width="700" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 04:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276508</guid>
            <link>https://www.oschina.net/news/276508</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Mozilla 修复了 Firefox 长达 21 年的「陈年老 bug」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Firefox 的工单记录页面显示，一个在 21 年前发现的 bug 终于被修复了。</p><p><img src="https://oscimg.oschina.net/oscnet/up-76c5db83fb95c2268e8259600065cdd5e1d.png" referrerpolicy="no-referrer"><br><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D221154" target="_blank">https://bugzilla.mozilla.org/show_bug.cgi?id=221154</a></u></em></p><p>根据描述，具体错误是<strong>表格单元格无法正确处理内容「溢出」的情况</strong>，不支持 'hidden'、<span style="font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">'auto' 和 'scroll' 属性。</span></p><p>如下图所示：</p><p><img src="https://oscimg.oschina.net/oscnet/up-df5fc6957b0a41e01c9a1c9f33e781f13d6.png" referrerpolicy="no-referrer"></p><p>开发者在评论中指出，这个错误是因表格单元格框架结构存在设计缺陷导致，它没有像行组框架那样将框架封装到可伸缩框架中。</p><p>看起来这不是难以解决的问题，但不知为何拖了 20 年才被修复。去年也报道过类似的修复 Firefox 「陈年老 bug」 新闻：<u><em><a href="https://www.oschina.net/news/261435/22-year-old-firefox-tooltip-bug-fixed" target="_blank">23 岁博士生修复 Firefox 中的 22 年 「幽灵老 Bug」</a></em></u>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 03:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276504</guid>
            <link>https://www.oschina.net/news/276504</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Oracle 的 2024 年 Java 工作规划]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Oracle 的 Java 开发者布道师 Nicolai Parlog 于近日发布一段<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finside.java%2F2024%2F01%2F18%2Fnewscast-61%2F" target="_blank">视频</a>，介绍了 2024 年的 Java 工作规划。其中涉及了一些 OpenJDK 项目，包括 Amber、Babylon、Leyden、Lilliput、Loom、Panama 和 Valhalla。</p><blockquote><p>2024 年，Java 不断发展。让我们看看 OpenJDK 项目 Amber、Babylon、Leyden、Lilliput、Loom、Panama 和 Valhalla 今年的计划是什么，以及它们将如何推动 Java 向前发展。无论是模式匹配还是其他语言改进、与外部代码、内存或平台的交互、内存局部性或效率，还是启动时间，Java 在 2024 年将在很多领域进行改进。不过请记住，任何一年的大部分工作都不会在同一年发布，因此许多改进只能在 2025 年或更晚的时间才能使用。</p></blockquote><p><img height="281" src="https://oscimg.oschina.net/oscnet/up-e5e07b35f475f1e4f839ab54e475326a17b.png" width="500" referrerpolicy="no-referrer"></p><p>对于 Babylon 项目，Parlog 提到了 code reflection、扩展 reflection API 以及允许在方法内转换 Java 代码等计划。Babylon 团队计划在未来几周内发布一些用例工作，例如 auto-differentiating、C# LINQ emulation 和 GPU 编程等。不过，Babylon 项目仍处于早期阶段，所以&nbsp;Parlog 预计该项目主线在 2024 年应该不会有任何实质性的内容。</p><p>至于孵化 Java VM 和 API 功能的 Loom 项目，Parlog 认为，该项目备受瞩目的日子即将结束；因为虚拟线程已经最终确定，结构化并发和作用域值 API 也已在 Java 22 中达到了第二个预览版，预计会在今年某个时候完成。Parlog 特别希望能够在 synchronization non-pinning 和 file I/O non-capturing 方面取得进展，至少在 Linux 上使用 io_uring；但能不能在 2024 年实现不好说，毕竟距离 JDK 23 fork 只有 5 个月的时间了。</p><p>2023 年，Leyden 项目在研究潜在 potential condensers 方面取得了进展，并且提出了一些相当大的性能改进。2024 年的计划包括完善冷凝器（Condenser）的概念并致力于原型冷凝器的生产准备，但也很难期待今年能有任何有形的成果落地。</p><p>Amber 项目仍然是 Java 语言发展背后的动力源泉，目前预览的三个功能包括：字符串模板、简化 main 方法以及 statements before this() and super()。Parlog 预计，这三个功能都将在 2024 年完成。正在探索的功能还包括 with 表达式和 primitive types in patterns。</p><p><img height="283" src="https://oscimg.oschina.net/oscnet/up-96670611d834699b5c2b1066895af7b0c12.png" width="500" referrerpolicy="no-referrer"></p><p>Panama 项目「有三项工作正在进行中」：Vector API 正处于孵化阶段、Foreign Function &amp; Memory API 正在改进、jextract 工具正在构建中（Panama 项目 2024 年的主要事项）。</p><p>在 Valhalla 项目中，工作将集中在值类和对象上，它们提供仅具有实例字段且缺乏对象标识的类实例 final。表示 boxed primitives 的类 Integer、Double 和 Byte 是包装或「box」不需要标识的简单值的类的示例。删除标识不仅可以消除开发人员对 == 应用于这些类的含义的困惑，而且还可以显着减少 boxed Integer、Double 和 Byte 对象的运行时开销。</p><p>Lilliput 项目旨在缩小 HotSpot JVM 中 Java object headers 的大小并减少 Java 内存占用。2023 年 Lilliput 合并了一种替代的 fast-locking scheme，以便按预期减小 header size，但该方案在进入黄金阶段之前还需进一步改进。因此，项目团队现在的工作重点是完善 fast-locking scheme，但 Parlog 预计 header size 的改进不会在 2024 落地。</p><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Finside.java%2F2024%2F01%2F18%2Fnewscast-61%2F" target="_blank">查看完整视频</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 03:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276501/oracles-plans-for-java-in-2024</guid>
            <link>https://www.oschina.net/news/276501/oracles-plans-for-java-in-2024</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[如何估算开源软件的实际价值？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>哈佛商学院战略小组 (Harvard Business School Strategy Unit) 近日发表论文<em><strong>《The Value of Open Source Software》</strong>，</em>深入研究了如何估算开源软件的实际价值。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-3ca34d03d4b061341454ff8132f8928095d.png" referrerpolicy="no-referrer"></p><p><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fpapers.ssrn.com%2Fsol3%2Fpapers.cfm%3Fabstract_id%3D4693148" target="_blank">https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4693148</a></em></u></p></blockquote><p>论文提到，开源软件 (OSS) 作为一种全球公共产品，在经济中发挥着至关重要的作用，也是我们今天使用的大多数技术的基础。然而，由于开源软件的非货币性质和缺乏集中使用跟踪，很难衡量其价值。因此在经济计量中，开源软件在很大程度上仍未被计算在内。</p><p>尽管以前的研究已经估算了重新创建这种软件的供应方成本，但由于缺乏数据，无法估算出开源软件创造的更大的需求方（使用）价值。</p><p>为了了解广泛使用的开源软件的全部经济和社会价值，研究人员利用了两个互补来源的独立全球数据，这些数据记录了全球数百万企业使用开源软件的情况。</p><p>他们首先通过计算<strong>重新创建一次最广泛使用的开源软件的成本来估算供应方价值</strong>。然后<strong>根据每个使用该软件的公司的替代价值计算需求方价值</strong>——如果没有开源软件，这些公司就需要在内部自行开发该软件。</p><p>按此估算，被广泛使用的开源软件的供应方价值为 41.5 亿美元，而需求方的价值要大得多，达到 8.8 万亿美元。</p><p>研究人员发现，如果没有开源软件，企业在软件方面的支出将是现在的 3.5 倍。在他们的样本中，排名前 6 的编程语言占开源软件需求方价值的 84%。<strong>此外，96% 的需求方价值由仅 5% 的开源软件开发者创造</strong>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 03:02:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276494</guid>
            <link>https://www.oschina.net/news/276494</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Firefox 122.0 正式发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Firefox 122.0 现已发布，具体更新内容如下：</p><p><strong>New</strong></p><ul><li><p>Firefox 现在会在搜索引擎提供搜索建议时显示图像和描述。</p></li></ul><p><img height="214" src="https://oscimg.oschina.net/oscnet/up-4cbc89200801a7e727946349df3e26b39fc.png" width="700" referrerpolicy="no-referrer"></p><ul><li><p>翻译功能提高了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.mozilla.org%2Fkb%2Fwebsite-translation" target="_blank">翻译</a>网页的质量。结果应该更加稳定。这解决了翻译时页面内容可能消失或交互式小部件可能损坏的问题。</p></li><li><p>Firefox 现在支持在 macOS 上创建和使用存储在 iCloud Keychain 中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.apple.com%2Fguide%2Fmac-help%2Fcreate-a-passkey-mchl4af65d1a%2Fmac" target="_blank">密钥。</a></p></li><li><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2F" target="_blank">来自 Firefox Suggest 的 MDN Web Docs</a>&nbsp;文章建议将在地址栏中提供，供搜索 Web 开发相关信息的用户使用。</p></li><li><p>Web 内容的换行规则现在符合 Unicode 标准。这提高了 Web 浏览器对换行的兼容性。针对东亚和东南亚最终用户的另一项改进是，当双击中文、日语、缅甸语、老挝语、高棉语和泰语等语言的文本时，Firefox 现在支持正确的语言感知单词选择。</p></li><li><p>Firefox 现在为 Ubuntu、Debian 和 Linux Mint 上的 Linux 用户提供了新的&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fsupport.mozilla.org%2Fkb%2Finstall-firefox-linux%23w_install-firefox-deb-package-for-debian-based-distributions" target="_blank">.deb 软件包。</a></p></li></ul><p><strong>Fixed</strong></p><ul><li>各种<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fsecurity%2Fadvisories%2Fmfsa2024-01%2F" target="_blank">安全</a>修复。</li></ul><p><strong>Developer</strong></p><ul><li><p>修复 Inspector Rules 视图中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ffxdx.dev%2Frules-view-enter-key%2F" target="_blank">键盘导航</a>。从 Firefox 122 开始，在检查器中编辑选择器、属性名称或属性值时，Enter 键将不再将焦点移动到下一个输入，而是验证输入的内容并聚焦匹配元素 (<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbugzilla.mozilla.org%2Fshow_bug.cgi%3Fid%3D1861674" target="_blank">#1861674</a>) 。用户仍然可以使用 Ctrl + Enter（macOS 上的 Cmd + Enter）或 Tab 来验证并将焦点移动到下一个输入。</p></li></ul><p><strong>Web Platform</strong></p><ul><li><p>启用 offset-position 属性，这对于大多数 offset-path 值很有用。在 offset-path&nbsp;CSS 属性中添加了对&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fray" target="_blank">ray()</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fbasic-shape" target="_blank">basic-shape</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fbox-edge%23values" target="_blank">coord-box</a>&nbsp;的支持。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fclip-path" target="_blank">在 Clip-path</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Foffset-path" target="_blank">offset-path CSS 属性上添加了对</a>&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FSVG%2FElement%2Frect" target="_blank">rect()</a>&nbsp;和&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FCSS%2Fbasic-shape%2Fxywh" target="_blank">xywh()</a>&nbsp;basic shapes 的支持。</p></li><li><p>Firefox 现在支持使用&nbsp;SMIL by animations&nbsp;&nbsp;对 SVG&nbsp;viewBox&nbsp;属性进行动画处理。</p></li><li><p>添加了 LargestContentfulPaint&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FAPI%2FLargestContentfulPaint" target="_blank">API</a>，它在用户与网页交互之前提供有关最大图像或文本绘制的计时信息。</p></li><li><p>现在支持&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FHTML%2FElement%2Fhr" target="_blank">hr</a><span style="background-color:#ffffff; color:#42425a"><span>&nbsp;</span>in<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FHTML%2FElement%2Fselect" target="_blank">select</a>，允许网站轻松地在元素内使用分隔符。</p></li><li><p><code>&lt;select&gt;</code>元素现在支持 showPicker 方法，这可用于通过 JavaScript 触发下拉行为。</p></li><li><p>未知方案的后备 URL 解析器已更改为<code>DefaultURI</code>，这提高了规范遵循性和 Web 兼容性。</p></li><li><p>启用&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftc39%2Fproposal-arraybuffer-transfer" target="_blank">ArrayBuffer.prototype.transfer 提案</a>方法，该方法可以转移&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FJavaScript%2FReference%2FGlobal_Objects%2FArrayBuffer" target="_blank">ArrayBuffer</a>&nbsp;数据的所有权。</p></li><li><p>添加了对<span style="background-color:#ffffff; color:#42425a"><span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fdocs%2FWeb%2FAPI%2FScreen_Wake_Lock_API" target="_blank">Screen Wake Lock API 的</a>支持。</p></li><li><p>Firefox 现在可以识别「webauthn」autocomplete token，并会在表单自动填充对话框中建议使用密码。</p></li><li><p>脚本现在可以在 Private Browsing 模式下存储<code>cacheAPI</code>数据。获得在常规浏览模式与 Private Browsing 模式下的统一体验。</p></li><li><p>为了进一步保护用户隐私，Firefox 现在会对使用 currentColor 作为输入的过滤器进行 taints filters。由于颜色可以通过 :visited&nbsp;pseudo selector 设置，它可能包含隐私敏感信息，因此必须将这些 primitives 标记为 tainted。这意味着如果你使用这样的过滤器，将无法从&nbsp;canvas 中读取过滤器输出。</p></li><li><p>现在，Firefox 中默认启用&nbsp;Uneven Level Protection Forward Error Correction&nbsp;(ULPFEC)。这为 WebRTC 服务提供了另一个可以利用的工具，为互联网连接不稳定的用户提高视频质量。</p></li></ul><p><strong>未解决</strong></p><ul><li>某些配备较旧 AMD CPU 的计算机可能会在文件对话框中看到图像缩略图错误地呈现为全黑。如果是这种情况，更新显卡驱动程序应该可以解决此问题。</li></ul><p>详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.mozilla.org%2Fen-US%2Ffirefox%2F122.0%2Freleasenotes%2F" target="_blank">查看更新说明</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 02:23:13 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276489/firefox-122-0-released</guid>
            <link>https://www.oschina.net/news/276489/firefox-122-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ant Engine —— 开源游戏引擎]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Ant 是由灵犀互娱开发的开源游戏引擎。现阶段仅将代码仓库公开，尚未正式发布。文档、示例等均待在 Wiki 上逐步完善。</p><p><strong>Ant 目录结构</strong></p><ul><li>bin：编译结果，exe/dll/lib 等</li><li>build：编译的中间结果</li><li>clibs：c/c++代码</li><li>engine：引擎基础支持代码，包括包管理器、启动代码等</li><li>pkg：引擎的各个功能包（包与包之间有依赖）</li><li>runtime：引擎运行时的不同平台支持</li><li>test：测试工程</li><li>tools：引擎相关的工具</li></ul></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 02:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/ant-engine</guid>
            <link>https://www.oschina.net/p/ant-engine</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 摩尔斯电码练习器 Coffee]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-zclub-coffee" class="anchor" href="https://gitee.com/FredyXu/coffee#zclub-coffee"></a>ZClub Coffee</h1><p>一个基于 ESP32 使用 ESP-IDF 架构开发的摩尔斯电码练习器，使用 LVGL 制作图形界面。可以实现摩尔斯电码的本地练习以及通过网络与其他使用此项目的 HAM 进行模拟通联。</p><p><strong>目前项目正处于开发测试阶段，不保证所有的功能都能正常使用，仅供有兴趣的朋友抢先体验。</strong></p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/screen_1.png" width="300" referrerpolicy="no-referrer"><h1><a id="user-content-项目计划及进度" class="anchor" href="https://gitee.com/FredyXu/coffee#%E9%A1%B9%E7%9B%AE%E8%AE%A1%E5%88%92%E5%8F%8A%E8%BF%9B%E5%BA%A6"></a>项目计划及进度</h1><ul class="task-list"><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 基础功能</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 电码录入</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 电码解译</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""><del>配网</del></p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""><del>微信配网</del></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""><del>ESP-TOUCH 配网</del></li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" disabled=""> 模拟通联</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> WebSocket 方式模拟通联</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> MQTT 方式模拟通联</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 设置</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 在练习器上进行设置</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" checked="" disabled=""> 在 Web 页面上进行设置</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" disabled=""> 训练</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 键入训练</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 解码训练</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 训练排行榜</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" disabled=""> 网络对讲</p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" disabled=""> SDR</p><ul class="task-list"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 本地 SDR</li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled=""> 网络 SDR</li></ul></li></ul><h1><a id="user-content-物料清单" class="anchor" href="https://gitee.com/FredyXu/coffee#%E7%89%A9%E6%96%99%E6%B8%85%E5%8D%95"></a>物料清单</h1><p><strong>鉴于目前为测试阶段，此物料清单不作为最终版本使用。所列内容可能随时有改变。</strong></p><table><thead><tr><th align="left">名称</th><th align="center">数量</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">ESP32 开发板</td><td align="center">1</td><td align="left"></td></tr><tr><td align="left">杜邦线</td><td align="center">若干</td><td align="left"></td></tr><tr><td align="left">扬声器</td><td align="center">1</td><td align="left"></td></tr><tr><td align="left">旋转编码器</td><td align="center">1</td><td align="left"></td></tr><tr><td align="left">彩色显示屏</td><td align="center">1</td><td align="left">显示控制芯片 ILI9341<br>分辨率 240×320<br>触摸控制芯片 XPT2046</td></tr><tr><td align="left">3.5 毫米音频母座</td><td align="center">1</td><td align="left">用于连接电键</td></tr><tr><td align="left">3.5 毫米音频线</td><td align="center">1</td><td align="left">公对公，用于连接电键。</td></tr><tr><td align="left">电键</td><td align="center">1</td><td align="left">手动或自动均可，或者也可以使用开关代替</td></tr><tr><td align="left">功放</td><td align="center"></td><td align="left">目前项目中并没有使用功放，后续会添加</td></tr></tbody></table><h1><a id="user-content-使用方法" class="anchor" href="https://gitee.com/FredyXu/coffee#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95"></a>使用方法</h1><h2><a id="user-content-接线" class="anchor" href="https://gitee.com/FredyXu/coffee#%E6%8E%A5%E7%BA%BF"></a>接线</h2><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">DISP:显示屏  </span><span id="LC2" class="line">TOUCH:触摸控制引脚（可以不接，使用旋转编码器可进行所有操作）</span><span id="LC3" class="line">KEY:电键  </span><span id="LC4" class="line">ROT:旋转编码器  </span><span id="LC5" class="line">SPK:扬声器</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>所有模块的 GND 均接入开发板的 GND 引脚，下表中不再重复说明。</p><table><thead><tr><th align="left">设备</th><th align="center">ESP32</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">DISP - MOSI</td><td align="center">GPIO13</td><td align="left">或标为 SDI</td></tr><tr><td align="left">DISP - CLK</td><td align="center">GPIO14</td><td align="left">或标为 SCK</td></tr><tr><td align="left">DISP - CS</td><td align="center">GPIO15</td><td align="left"></td></tr><tr><td align="left">DISP - DC</td><td align="center">GPIO2</td><td align="left"></td></tr><tr><td align="left">DISP - RESET</td><td align="center">GPIO4</td><td align="left"></td></tr><tr><td align="left">DISP - VCC</td><td align="center">VIN</td><td align="left"></td></tr><tr><td align="left">DISP - LED</td><td align="center">3V3</td><td align="left"></td></tr><tr><td align="left">TOUCH - IRQ</td><td align="center">GPIO27</td><td align="left"></td></tr><tr><td align="left">TOUCH - CS</td><td align="center">GPIO5</td><td align="left"></td></tr><tr><td align="left">TOUCH - CLK</td><td align="center">GPIO18</td><td align="left">或标为 SCK</td></tr><tr><td align="left">TOUCH - MOSI</td><td align="center">GPIO23</td><td align="left">或标为 DIN</td></tr><tr><td align="left">TOUCH - MISO</td><td align="center">GPIO19</td><td align="left">或标为 DO</td></tr><tr><td align="left">ROT - CLK</td><td align="center">GPIO33</td><td align="left"></td></tr><tr><td align="left">ROT - DT</td><td align="center">GPIO32</td><td align="left"></td></tr><tr><td align="left">ROT - SW</td><td align="center">GPIO12</td><td align="left"></td></tr><tr><td align="left">KEY - A</td><td align="center">GPIO34</td><td align="left">默认手动键使用该引脚</td></tr><tr><td align="left">KEY - B</td><td align="center">GPIO35</td><td align="left"></td></tr><tr><td align="left">SPK</td><td align="center">GPIO25</td><td align="left">暂时没有使用功放，后续接线方法可能会发生改变</td></tr></tbody></table><p>如需更改引脚，可在在 coffee_lib 目录下的 config.h 文件中进行配置。</p><h2><a id="user-content-固件上传" class="anchor" href="https://gitee.com/FredyXu/coffee#%E5%9B%BA%E4%BB%B6%E4%B8%8A%E4%BC%A0"></a>固件上传</h2><p>固件上传可以使用以下三种方式</p><ul><li>使用乐鑫的 Flash download tool 工具上传。（仅限 Windows 操作系统）</li><li>使用 IDF 工具上传。（Windows、Linux 及 MacOS）</li><li>使用 VSCode 插件编译上传。（Windows、Linux 及 MacOS）</li></ul><p>以下分别介绍这三种方式的操作方法。</p><h3><a id="user-content-固件下载的方式安装" class="anchor" href="https://gitee.com/FredyXu/coffee#%E5%9B%BA%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85"></a>固件下载的方式安装</h3><p><strong>此方式目前仅支持 Windows 操作系统</strong></p><ol><li><p>在<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.espressif.com%2Fzh-hans%2Fsupport%2Fdownload%2Fother-tools">乐鑫工具下载页面</a>下载 Flash 下载工具。
<img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220907-193850@2x.png" alt="" referrerpolicy="no-referrer"></p></li><li><p>根据自己手上的开发板下载对应的 USB 驱动。目前市面上的 ESP32 开发板所使用的串口转 USB 芯片多为 CH340 或 CP2102，确认好自己的开发板的芯片信号下载对应驱动即可。</p></li><li><p>确定开发板已经被电脑正确识别后，启动乐鑫的 Flash 下载工具。
<img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220907-200227@2x.png" alt="" referrerpolicy="no-referrer"></p></li><li><p>启动后将<code>ChipType</code>选择为<code>ESP32</code>，其他内容不变。如下图：</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220907-194229@2x.png" width="200" referrerpolicy="no-referrer"></li><li><p>将 bin 目录中的 4 个文件分别添加到工具中。记得要将工具中文件名称前面的复选框勾选，并将每个文件对应的地址偏移写到文件名后方。具体填写内容如下表：</p><table><thead><tr><th align="left">文件名</th><th align="center">地址</th></tr></thead><tbody><tr><td align="left">bootloader.bin</td><td align="center">0x1000</td></tr><tr><td align="left">partition-table.bin</td><td align="center">0x8000</td></tr><tr><td align="left">ota_data_initial.bin</td><td align="center">0xd000</td></tr><tr><td align="left">coffee.bin</td><td align="center">0x10000</td></tr></tbody></table></li><li><p>选择好正确的端口，点击<code>START</code>后等待下载完成即可。完整的设置如下图：</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220907-194930@2x.png" width="200" referrerpolicy="no-referrer"><p><strong>再次提醒：一定要将文件名称前面的复选框勾选上</strong></p></li></ol><h3><a id="user-content-使用 idf 工具上传" class="anchor" href="https://gitee.com/FredyXu/coffee#%E4%BD%BF%E7%94%A8idf%E5%B7%A5%E5%85%B7%E4%B8%8A%E4%BC%A0"></a>使用 IDF 工具上传</h3><p>todo</p><h3><a id="user-content-使用 vscode 插件编译上传" class="anchor" href="https://gitee.com/FredyXu/coffee#%E4%BD%BF%E7%94%A8vscode%E6%8F%92%E4%BB%B6%E7%BC%96%E8%AF%91%E4%B8%8A%E4%BC%A0"></a>使用 VSCode 插件编译上传</h3><blockquote><p>使用 VSCode 中编译使用的是乐鑫的<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fespressif%2Fvscode-esp-idf-extension">vscode-esp-idf-extension</a>扩展插件。为什么不用<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fplatformio">PlatformIO</a>呢？因为 PlatformIO 所使用依赖库大部分都是放在境外的服务器上，由于不便详细阐述的原因，很多小伙伴没有办法正常安装和使用。但是习惯使用 PlatformIO 的小伙伴也不用担心，项目源码在 PlatfromIO 上也可以正常跑通，IDF 版本使用 4.4.x 和 5 都可以，但是由于 IDF 5 的特性，使用的时候需要手动添加一些库，例如 esp_websocket_client。具体详情请参考乐鑫官方文档关于<a href="https://gitee.com/link?target=https%3A%2F%2Fdocs.espressif.com%2Fprojects%2Fesp-idf%2Fzh_CN%2Fv5.0-beta1%2Fesp32%2Fmigration-guides%2Frelease-5.x%2Fremoved-components.html">从 ESP-IDF 中移出或弃用的组件</a>中的内容。</p></blockquote><ol><li><p>在<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.python.org%2Fdownloads%2F">Python 官网的下载页面</a>下载并安装 python3。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-221826@2x.png" width="300" referrerpolicy="no-referrer"><p>安装时记得把底部的两个复选框都勾选上</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-222624@2x.png" width="300" referrerpolicy="no-referrer"></li><li><p>下载保存源码文件，git 或下载 zip 文件的方式均可。</p></li><li><p>在<a href="https://gitee.com/link?target=https%3A%2F%2Fcode.visualstudio.com%2F">官网</a>下载 VSCode。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/1662638698095.jpg" width="300/" referrerpolicy="no-referrer"></li><li><p>在 VSCode 中的扩展标签里搜索并安装」ESP-IDF「扩展插件。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-202024@2x.png" width="300/" referrerpolicy="no-referrer"></li><li><p>插件下载完成后，点击工具栏的」ESP-IDF「图标，等待一会，初始化完成后会出现 ESP-IDF 安装配置页面。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-202329@2x.png" width="300/" referrerpolicy="no-referrer"></li><li><p>出现安装配置页面后选择」ADVANCED「选项。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-202536@2x.png" width="300" referrerpolicy="no-referrer"></li><li><p>进入配置页面后，在」Select download server「中尽量选择乐鑫服务器（Espressif）而不是 Github。至于原因...这里不便展开说明，会被屏蔽。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-202830@2x.png" width="300" referrerpolicy="no-referrer"><p>IDF 的版本选择 4.4.X。如果选项中没有，可以勾选」Show all ESP-IDF tags「，之后就可以列出全部可下载版本。</p><p>一切就绪后点击」Install「。</p></li><li><p>接下来就是耐心等待下载完成</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-203938@2x.png" width="300" referrerpolicy="no-referrer"><p><strong>温馨提示：如果不出意外的话，这一步骤需要极大的耐心</strong></p></li><li><p>接下来是下载"ESP-IDF Tools"， 同样需要耐心等待。</p><img src="https://gitee.com/FredyXu/coffee/raw/master/images/WX20220908-205808@2x.png" width="300" referrerpolicy="no-referrer"><p>不过好在以上两个步骤的这个过程只需要一次即可。</p></li><li><p>打开下载的项目文件夹，连接好 ESP32 开发板，选择正确的端口，编译并上传。</p></li></ol><h1><a id="user-content-功能介绍" class="anchor" href="https://gitee.com/FredyXu/coffee#%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D"></a>功能介绍</h1><h2><a id="user-content-进入设置页面" class="anchor" href="https://gitee.com/FredyXu/coffee#%E8%BF%9B%E5%85%A5%E8%AE%BE%E7%BD%AE%E9%A1%B5%E9%9D%A2"></a>进入设置页面</h2><p>在主页面按下编码器按钮即可进入设置页面。</p><h2><a id="user-content-web 页面设置" class="anchor" href="https://gitee.com/FredyXu/coffee#web%E9%A1%B5%E9%9D%A2%E8%AE%BE%E7%BD%AE"></a>Web 页面设置</h2><p>在主页长按编码器按钮即可弹出一个二维码，当练习器与手机连接在同一个 WiFi 下时，扫描二维码即可进入设置页面。</p><h2><a id="user-content-传输内容格式约定" class="anchor" href="https://gitee.com/FredyXu/coffee#%E4%BC%A0%E8%BE%93%E5%86%85%E5%AE%B9%E6%A0%BC%E5%BC%8F%E7%BA%A6%E5%AE%9A"></a>传输内容格式约定</h2><p>目前网络通信部分使用 WebSocket 方式，后续会添加 MQTT 方式可供选择。两种方式所传输的数据均使用同一种格式约定。具体约定内容如下：</p><p><code>发送时间|呼号|发送内容</code></p><p>其中，<code>发送时间</code>的格式为，小时:分钟:秒钟，每个时间使用 2 位数字表示，例如：<code>22:45:32</code>。<br>
每一部分内容之间使用」|「分割。完整示例如下：</p><p><code>22:45:32|BG7YXY|-.-. --.-</code></p><p>传输内容中不可包含电码翻译内容，电码翻译工作在练习器中实现。
如下内容为错误传输内容</p><p><code>22:45:32|BG7YXY|-.-.C --.-Q</code></p><p>尽管以上的传输内容可以正常工作，但是不建议这样使用。原因如下：</p><ul><li><p>电码是否需要翻译在练习器中设定。练习器不过滤传输内容，会将所接收到的内容原样输出，所以如果将翻译后的电码一同传输会导致设置不翻译电码的用户显示出翻译后的内容。</p></li><li><p>后续功能中还将通过网络传输其他内容，将翻译后的电码一同传输将影响此功能。</p></li></ul><h2><a id="user-content-自建服务器" class="anchor" href="https://gitee.com/FredyXu/coffee#%E8%87%AA%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8"></a>自建服务器</h2><p>用户可以自行搭建服务器使用，只需要实现如下功能即可。</p><ol><li>电码内容通过文本格式传输，练习器发送的内容不包含发送时间信息，需要由服务器添加。练习器发送的内容示例如下：<code>BG7YXY|-.-. --.-</code> 。服务器需要将接收到的内容前插入时间信息，时间格式符合上一节」传输内容格式约定「中的要求。</li><li>将整理好的数据发送到在线的其他用户客户端中。最好能够带有群组功能。后续我会将我的实现源码共享出来供大家参考。</li></ol><h1><a id="user-content-特别鸣谢" class="anchor" href="https://gitee.com/FredyXu/coffee#%E7%89%B9%E5%88%AB%E9%B8%A3%E8%B0%A2"></a>特别鸣谢</h1><p>感谢 <strong>执水无为</strong> 提供关于练习器通联训练的促进机制的创意，稍后会在基础功能稳定后添加进去。</p><p><strong>感谢在此项目中使用到的开源代码的所有贡献者们！世界因为有你们所以如此美好！</strong></p><h1><a id="user-content-更新日志" class="anchor" href="https://gitee.com/FredyXu/coffee#%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97"></a>更新日志</h1><p>2023-01-01</p><ul><li>完成练习器设置页面部分</li></ul><p>2022-09-20</p><ul><li>优化设置部分</li><li>取消微信配网，改为使用 ESP 的 HTTP 服务进行设置</li><li>增加通知对话框</li></ul><p>2022-09-06</p><ul><li>优化按键检查机制</li><li>优化分区表</li><li>调整 - 在播放接收到的电码时不可键入电码</li></ul><p>2022-09-05</p><ul><li>考虑到上网条件，将开发环境从 PlatformIO 更换到了乐鑫的 IDF 环境，以便下载相关内容的时候避免使用到境外服务器。</li><li>ESP-IDF 版本因为更换开发环境的原因，从 5.1.1 调整到 4.4.3</li></ul><p>2022-09-04</p><ul><li>完成电码翻译功能</li></ul>]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 02:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/FredyXu/coffee</guid>
            <link>https://gitee.com/FredyXu/coffee</link>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | Ngnix 常用配置及和基本功能讲解]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:0px; margin-right:0px; text-align:left">Ngnix 已经广泛应用于 J-one 和 Jdos 的环境部署上，本文对 Ngnix 的常用的配置和基本功能进行讲解，适合 Ngnix 入门学习。</p><span id="OSC_h1_1"></span><h1>1 核心配置</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">找到 Nginx 安装目录下的 conf 目录下 nginx.conf 文件，Ngnix 的基本功能配置是由它提供的。</p><span id="OSC_h2_2"></span><h2>1.1 配置文件结构</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Nginx 的配置文件 (conf/nginx.conf) 整体上分为如下几个部分：</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/86865a3b-b7da-45c7-838d-9fce9ae9761b20230313164814.jpg" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">配置层级图如下所示。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img alt="" src="https://img1.jcloudcs.com/developer.jdcloud.com/81aab960-45ae-4d09-a696-e70efc8bff1620230313164828.png" referrerpolicy="no-referrer"></p><span id="OSC_h2_3"></span><h2>1.2 配置文件示例</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">一个比较全的配置文件示例如下。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#880000"># 以下是全局段配置</span></code></li><li><code><span style="color:#880000">#user administrator administrators; #配置用户或者组，默认为 nobody nobody。</span></code></li><li><code><span style="color:#880000">#worker_processes 2; #设置进程数，默认为 1</span></code></li><li><code><span style="color:#880000">#pid /nginx/pid/nginx.pid; #指定 nginx 进程运行文件存放地址</span></code></li><li><code><span style="color:#000000">error_log log</span><span style="color:#666600">/</span><span style="color:#000000">error</span><span style="color:#666600">.</span><span style="color:#000000">log debug</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#制定日志路径，级别：debug|info|notice|warn|error|crit|alert|emerg</span></code></li><li><code><span style="color:#880000"># events 段配置信息</span></code></li><li><code><span style="color:#000000">events </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">accept_mutex on</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#设置网路连接序列化，防止惊群现象发生，默认为 on</span></code></li><li><code><span style="color:#000000">multi_accept on</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#设置一个进程是否同时接受多个网络连接，默认为 off</span></code></li><li><code><span style="color:#880000">#use epoll; #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport</span></code></li><li><code><span style="color:#000000">worker_connections </span><span style="color:#006666">1024</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#最大连接数，默认为 512</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#880000"># http、配置请求信息</span></code></li><li><code><span style="color:#000000">http </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">include mime</span><span style="color:#666600">.</span><span style="color:#000000">types</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#文件扩展名与文件类型映射表</span></code></li><li><code><span style="color:#000000">default_type application</span><span style="color:#666600">/</span><span style="color:#000000">octet</span><span style="color:#666600">-</span><span style="color:#000000">stream</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#默认文件类型，默认为 text/plain</span></code></li><li><code><span style="color:#880000">#access_log off; #取消服务日志 </span></code></li><li><code><span style="color:#000000">log_format myFormat </span><span style="color:#008800">'$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#自定义格式</span></code></li><li><code><span style="color:#000000">access_log log</span><span style="color:#666600">/</span><span style="color:#000000">access</span><span style="color:#666600">.</span><span style="color:#000000">log myFormat</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#combined 为日志格式的默认值</span></code></li><li><code><span style="color:#000000">sendfile on</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#允许 sendfile 方式传输文件，默认为 off，可以在 http 块，server 块，location 块。</span></code></li><li><code><span style="color:#000000">sendfile_max_chunk </span><span style="color:#006666">100k</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#每个进程每次调用传输数量不能大于设定的值，默认为 0，即不设上限。</span></code></li><li><code><span style="color:#000000">keepalive_timeout </span><span style="color:#006666">65</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#连接超时时间，默认为 75s，可以在 http，server，location 块。</span></code></li><li>&nbsp;</li><li><code><span style="color:#000000">upstream mysvr </span><span style="color:#666600">{</span><span style="color:#000000"></span></code></li><li><code><span style="color:#000000">server </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">:</span><span style="color:#006666">7878</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server </span><span style="color:#006666">192.168</span><span style="color:#666600">.</span><span style="color:#006666">10.121</span><span style="color:#666600">:</span><span style="color:#006666">3333</span><span style="color:#000000"> backup</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#热备</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">error_page </span><span style="color:#006666">404</span><span style="color:#000000"> https</span><span style="color:#666600">://</span><span style="color:#000000">www</span><span style="color:#666600">.</span><span style="color:#000000">baidu</span><span style="color:#666600">.</span><span style="color:#000000">com</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#错误页</span></code></li><li><code><span style="color:#880000"># 第一个 Server 区块开始，表示一个独立的虚拟主机站点</span></code></li><li><code><span style="color:#000000">server </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">keepalive_requests </span><span style="color:#006666">120</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#单连接请求上限次数。</span></code></li><li><code><span style="color:#000000">listen </span><span style="color:#006666">4545</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#监听端口</span></code></li><li><code><span style="color:#000000">server_name </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#监听地址 </span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">~*^.+</span><span style="color:#000000">$ </span><span style="color:#666600">{</span><span style="color:#000000"></span><span style="color:#880000">#请求的 url 过滤，正则匹配，~为区分大小写，~*为不区分大小写。</span></code></li><li><code><span style="color:#880000">#root path; #根目录</span></code></li><li><code><span style="color:#880000">#index vv.txt; #设置默认页</span></code></li><li><code><span style="color:#000000">proxy_pass http</span><span style="color:#666600">://</span><span style="color:#000000">mysvr</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#请求转向 mysvr 定义的服务器列表</span></code></li><li><code><span style="color:#000000">deny </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#拒绝的 ip</span></code></li><li><code><span style="color:#000000">allow </span><span style="color:#006666">172.18</span><span style="color:#666600">.</span><span style="color:#006666">5.54</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#允许的 ip </span></code></li><li><code><span style="color:#666600">}</span><span style="color:#000000"></span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_4"></span><h2>1.3 locat 路径映射讲解</h2><span id="OSC_h3_5"></span><h3>1.3.1 格式：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">location [ = | ~ | ~<em><span>&nbsp;</span>| !~ | !~</em><span>&nbsp;</span>| @ ] uri {…}</p><span id="OSC_h3_6"></span><h3>1.3.2 解释：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">= 表示精确匹配，如果找到，立即停止搜索并立即处理此请求。<br> ~ 表示执行一个正则匹配，区分大小写匹配<br> ~<em><span>&nbsp;</span>表示执行一个正则匹配，不区分大小写匹配<br> !~ 区分大小写不匹配<br> !~</em><span>&nbsp;</span>不区分大小写不匹配<br> ^~ 即表示只匹配普通字符（空格）。使用前缀匹配，^表示「非」，即不查询正则表达式。如果匹配成功，则不再匹配其他 location。<br> @ 指定一个命名的 location，一般只用于内部重定向请求。例如 error_page, try_files<br> uri 是待匹配的请求字符串，可以不包含正则表达式，也可以包含正则表达式；</p><span id="OSC_h3_7"></span><h3>1.3.3 优先级和示例：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">[不加] &lt; [~/~*] &lt; [^~] &lt; [=]<br> 示例如下：</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">location </span><span style="color:#666600">=</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000"># 精确匹配/，主机名后面不能带任何字符串 /</span></code></li><li><code><span style="color:#880000"># 只匹配 http://abc.com</span></code></li><li><code><span style="color:#880000"># http://abc.com [匹配成功]</span></code></li><li><code><span style="color:#880000"># http://abc.com/index [匹配失败]</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">^~</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#000000">img</span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000">#以 /img/ 开头的请求，都会匹配上</span></code></li><li><code><span style="color:#880000">#http://abc.com/img/a.jpg [成功]</span></code></li><li><code><span style="color:#880000">#http://abc.com/img/b.mp4 [成功]</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">~*</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#660066">Example</span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000"># 则会忽略 uri 部分的大小写</span></code></li><li><code><span style="color:#880000">#http://abc.com/test/Example/ [匹配成功]</span></code></li><li><code><span style="color:#880000">#http://abc.com/example/ [匹配成功]</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000">documents </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000"># 如果有正则表达式可以匹配，则优先匹配正则表达式。</span></code></li><li><code><span style="color:#880000">#http://abc.com/documentsabc [匹配成功]</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#880000">#http://abc.com/abc [匹配成功]</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h1_8"></span><h1>2 反向代理</h1><span id="OSC_h2_9"></span><h2>2.1 反向代理概念：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">反向代理 (Reverse Proxy) 是指以代理服务器来接受 internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 internet 上请求连接的客户端。真实的服务器不能直接被外部网络访问，所以需要一台代理服务器，而代理服务器能被外部网络访问的同时又跟真实服务器在同一个网络环境，当然也可能是同一台服务器，端口不同而已。<br> 反向代理通过 proxy_pass 指令来实现。</p><span id="OSC_h2_10"></span><h2>2.2 反向代理示例：</h2><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">server </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">listen </span><span style="color:#006666">80</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server_name localhost</span><span style="color:#666600">;</span></code></li><li>&nbsp;</li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">proxy_pass http</span><span style="color:#666600">://</span><span style="color:#000000">localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">proxy_set_header </span><span style="color:#660066">Host</span><span style="color:#000000"> $host</span><span style="color:#666600">:</span><span style="color:#000000">$server_port</span><span style="color:#666600">;#为请求头添加</span><span style="color:#660066">Host</span><span style="color:#666600">字段，用于指定请求服务器的域名/</span><span style="color:#000000">IP</span><span style="color:#666600">地址和端口号。</span><span style="color:#000000"></span></code></li><li>&nbsp;</li><li><code><span style="color:#880000"># 设置用户 ip 地址</span></code></li><li><code><span style="color:#000000">proxy_set_header X</span><span style="color:#666600">-</span><span style="color:#660066">Forwarded</span><span style="color:#666600">-</span><span style="color:#660066">For</span><span style="color:#000000"> $remote_addr</span><span style="color:#666600">;#为请求头添加</span><span style="color:#000000">XFF</span><span style="color:#666600">字段，值为客户端的</span><span style="color:#000000">IP</span><span style="color:#666600">地址。</span></code></li><li><code><span style="color:#880000"># 当请求服务器出错去寻找其他服务器</span></code></li><li><code><span style="color:#000000">proxy_next_upstream error timeout invalid_header http_500 http_502 http_503</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">当我们访问 localhost 的时候，ngnix 就将我们的请求转到 localhost:8081 了</p><span id="OSC_h1_11"></span><h1>3 负载均衡</h1><span id="OSC_h2_12"></span><h2>3.1 负载均衡概念：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">当有 2 台或以上服务器时，代理服务器根据规则将请求分发到指定的服务器上处理。</p><span id="OSC_h2_13"></span><h2>3.2 负载均衡策略及示例：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Nginx 目前支持多种负载均衡策略，这里讲解常用的 6 种。</p><span id="OSC_h3_14"></span><h3>3.2.1RR(round robin :轮询，默认)：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">每个请求按时间顺序逐一分配到不同的后端服务器，也就是说第一次请求分配到第一台服务器上，第二次请求分配到第二台服务器上，如果只有两台服务器，第三次请求继续分配到第一台上，这样循环轮询下去，也就是服务器接收请求的比例是 1:1， 如果后端服务器 down 掉，能自动剔除。轮询是默认配置，不需要太多的配置<br> 同一个项目分别使用 8081 和 8082 端口启动项目</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream web_servers </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8082</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li>&nbsp;</li><li>&nbsp;</li><li><code><span style="color:#000000">server </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">listen </span><span style="color:#006666">80</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server_name localhost</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#880000">#access_log logs/host.access.log main;</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">proxy_pass http</span><span style="color:#666600">:</span><span style="color:#880000">//web_servers;</span></code></li><li><code><span style="color:#000000">proxy_set_header </span><span style="color:#660066">Host</span><span style="color:#000000"> $host</span><span style="color:#666600">:</span><span style="color:#000000">$server_port</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_15"></span><h3>3.2.2 热备：</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">假设有 2 台服务器，当一台服务器发生事故时，才启用第二台服务器给提供服务。服务器处理请求的顺序：AAAAAA 突然 A 挂了，服务器处理请求的顺序：BBBBBBBBBBBBBB…..</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream web_servers </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">server </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">:</span><span style="color:#006666">7878</span><span style="color:#666600">;</span><span style="color:#000000"></span></code></li><li><code><span style="color:#000000">server </span><span style="color:#006666">192.168</span><span style="color:#666600">.</span><span style="color:#006666">10.121</span><span style="color:#666600">:</span><span style="color:#006666">3333</span><span style="color:#000000"> backup</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000">#热备 </span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_16"></span><h3>3.2.3 权重</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">跟据配置的权重的大小而分发给不同服务器不同数量的请求。如果不设置，则默认为 1。下面服务器的请求顺序为：ABBABBABBABBABB….。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream web_servers </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#000000"> weight</span><span style="color:#666600">=</span><span style="color:#006666">1</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8082</span><span style="color:#000000"> weight</span><span style="color:#666600">=</span><span style="color:#006666">2</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_17"></span><h3>3.2.4 ip_hash</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">这样每个 ip 地址固定访问一个后端服务器，可以解决 session 的问题。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream test </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">ip_hash</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8080</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_18"></span><h3>3.2.5 fair(第三方)</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">按后端服务器的响应时间来分配请求，响应时间短的优先分配。这个配置是为了更快的给用户响应。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream backend </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">fair</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8080</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h3_19"></span><h3>3.2.6 url_hash(第三方)</h3><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">按访问 url 的 hash 结果来分配请求，使每个 url 定向到同一个后端服务器，后端服务器为缓存时比较有效。在 upstream 中加入 hash 语句，hash_method 是使用的 hash 算法</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream backend </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">hash_method crc32</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">hash $request_uri</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8080</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">以上 6 种负载均衡各自适用不同情况下单独或者混合使用，可以根据实际情况选择使用，fair 和 url_hash 需要安装第三方模块才能使用。</p><span id="OSC_h1_20"></span><h1>4 动静分离：</h1><span id="OSC_h2_21"></span><h2>4.1 动静分离概念：</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">动静分离是指在 web 服务器架构中，将静态页面与动态页面或者静态内容接口和动态内容接口分开不同系统访问的架构设计方法，进而提升整个服务访问性能和可维护性。</p><span id="OSC_h2_22"></span><h2>4.2 动静分离示例：</h2><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">upstream web_servers </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8081</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server localhost</span><span style="color:#666600">:</span><span style="color:#006666">8082</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">server </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">listen </span><span style="color:#006666">80</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">server_name localhost</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">set $doc_root </span><span style="color:#666600">/</span><span style="color:#000000">usr</span><span style="color:#666600">/</span><span style="color:#000000">local</span><span style="color:#666600">/</span><span style="color:#000000">var</span><span style="color:#666600">/</span><span style="color:#000000">www</span><span style="color:#666600">;</span></code></li><li>&nbsp;</li><li><code><span style="color:#000000">location </span><span style="color:#666600">~*</span><span style="color:#000000"> \.</span><span style="color:#666600">(</span><span style="color:#000000">gif</span><span style="color:#666600">|</span><span style="color:#000000">jpg</span><span style="color:#666600">|</span><span style="color:#000000">jpeg</span><span style="color:#666600">|</span><span style="color:#000000">png</span><span style="color:#666600">|</span><span style="color:#000000">bmp</span><span style="color:#666600">|</span><span style="color:#000000">ico</span><span style="color:#666600">|</span><span style="color:#000000">swf</span><span style="color:#666600">|</span><span style="color:#000000">css</span><span style="color:#666600">|</span><span style="color:#000000">js</span><span style="color:#666600">)</span><span style="color:#000000">$ </span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">root $doc_root</span><span style="color:#666600">/</span><span style="color:#000000">img</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">proxy_pass http</span><span style="color:#666600">://</span><span style="color:#000000">web_servers</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">proxy_set_header </span><span style="color:#660066">Host</span><span style="color:#000000"> $host</span><span style="color:#666600">:</span><span style="color:#000000">$server_port</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">error_page </span><span style="color:#006666">500</span><span style="color:#000000"></span><span style="color:#006666">502</span><span style="color:#000000"></span><span style="color:#006666">503</span><span style="color:#000000"></span><span style="color:#006666">504</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#006666">50x</span><span style="color:#666600">.</span><span style="color:#000000">html</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#666600">#出现</span><span style="color:#000000"></span><span style="color:#006666">500</span><span style="color:#000000"></span><span style="color:#006666">502</span><span style="color:#000000"></span><span style="color:#006666">503</span><span style="color:#000000"></span><span style="color:#006666">504</span><span style="color:#666600">错误时走内部跳转</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">=</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#006666">50x</span><span style="color:#666600">.</span><span style="color:#000000">html </span><span style="color:#666600">{</span><span style="color:#000000"></span></code></li><li><code><span style="color:#000000">root $doc_root</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">结果：访问<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%2Ftest.jpg" rel="nofollow" target="_blank">http://localhost/test.jpg</a><span>&nbsp;</span>时直接返回/usr/local/var/www/img 路径下的图片.<br> 访问<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Flocalhost%2Findex.html" rel="nofollow" target="_blank">http://localhost/index.html</a><span>&nbsp;</span>就会访问后端服务器 (tomcat 等)</p><span id="OSC_h1_23"></span><h1>5 其他常用的指令：</h1><span id="OSC_h2_24"></span><h2>5.1.return 指令</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">返回 http 状态码和可选的第二个参数可以是重定向的 URL</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000088">return</span><span style="color:#000000"> code </span><span style="color:#666600">[</span><span style="color:#000000">text</span><span style="color:#666600">];</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"> code URL</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"> URL</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">例如：</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"></span><span style="color:#006666">404</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000"># 直接返回状态码</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"></span><span style="color:#006666">404</span><span style="color:#000000"></span><span style="color:#008800">"pages not found"</span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000"># 返回状态码 + 一段文本</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"></span><span style="color:#006666">302</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#000000">bbs </span><span style="color:#666600">;</span><span style="color:#000000"></span><span style="color:#880000"># 返回状态码 + 重定向地址</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000088">return</span><span style="color:#000000"> https</span><span style="color:#666600">:</span><span style="color:#880000">//www.baidu.com ; # 返回重定向地址</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_25"></span><h2>5.2 rewrite 指令</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">重写 URI 请求 rewrite，通过使用 rewrite 指令在请求处理期间多次修改请求 URI，该指令具有一个可选参数和两个必需参数。<br> 第一个 (必需) 参数是请求 URI 必须匹配的正则表达式。<br> 第二个参数是用于替换匹配 URI 的 URI。<br> 可选的第三个参数重写策略</p><ul><li>last 重写后的 URL 发起新请求，再次进入 server 段，重试 location 的中的匹配；</li><li>break 直接使用重写后的 URL ，不再匹配其它 location 中语句；</li><li>redirect 返回 302 临时重定向；</li><li>permanent 返回 301 永久重定向；</li></ul><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000">users</span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">rewrite </span><span style="color:#666600">^/</span><span style="color:#000000">users</span><span style="color:#666600">/(.*)</span><span style="color:#000000">$ </span><span style="color:#666600">/</span><span style="color:#000000">show</span><span style="color:#666600">?</span><span style="color:#000000">user</span><span style="color:#666600">=</span><span style="color:#000000">$1 </span><span style="color:#000088">break</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_26"></span><h2>5.3 error_page 指令</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">使用 error_page 指令，您可以配置 NGINX 返回自定义页面以及错误代码，替换响应中的其他错误代码，或将浏览器重定向到其他 URI。在以下示例中，error_page 指令指定要返回 404 页面错误代码的页面 (/404.html)。</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">server</span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">error_page </span><span style="color:#006666">500</span><span style="color:#000000"></span><span style="color:#006666">502</span><span style="color:#000000"></span><span style="color:#006666">503</span><span style="color:#000000"></span><span style="color:#006666">504</span><span style="color:#000000"></span><span style="color:#666600">/</span><span style="color:#006666">50x</span><span style="color:#666600">.</span><span style="color:#000000">html</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">=/</span><span style="color:#006666">50x</span><span style="color:#666600">.</span><span style="color:#000000">html</span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">root html</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#666600">}</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_27"></span><h2>5.4 日志</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">访问日志：需要开启压缩 gzip on; 否则不生成日志文件，打开 log_format、access_log 注释</p><pre>&nbsp;</pre><ol><li><code><span style="color:#000000">log_format main </span><span style="color:#008800">'$remote_addr - $remote_user [$time_local] "$request" '</span></code></li><li><code><span style="color:#008800">'$status $body_bytes_sent "$http_referer" '</span></code></li><li><code><span style="color:#008800">'"$http_user_agent" "$http_x_forwarded_for"'</span><span style="color:#666600">;</span></code></li><li>&nbsp;</li><li>&nbsp;</li><li><code><span style="color:#000000">access_log </span><span style="color:#666600">/</span><span style="color:#000000">usr</span><span style="color:#666600">/</span><span style="color:#000088">local</span><span style="color:#666600">/</span><span style="color:#000000">etc</span><span style="color:#666600">/</span><span style="color:#000000">nginx</span><span style="color:#666600">/</span><span style="color:#000000">logs</span><span style="color:#666600">/</span><span style="color:#000000">host</span><span style="color:#666600">.</span><span style="color:#000000">access</span><span style="color:#666600">.</span><span style="color:#000000">log main</span><span style="color:#666600">;</span></code></li><li>&nbsp;</li><li>&nbsp;</li><li><code><span style="color:#000000">gzip on</span></code></li></ol><span id="OSC_h2_28"></span><h2>5.5 deny 、allow 指令</h2><pre>&nbsp;</pre><ol><li><code><span style="color:#880000">#禁止访问某个目录</span></code></li><li><code><span style="color:#000000">location </span><span style="color:#666600">/</span><span style="color:#000000"></span><span style="color:#666600">{</span></code></li><li><code><span style="color:#000000">allow </span><span style="color:#006666">192.168</span><span style="color:#666600">.</span><span style="color:#006666">0.0</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">allow </span><span style="color:#006666">127.0</span><span style="color:#666600">.</span><span style="color:#006666">0.1</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#000000">deny all</span><span style="color:#666600">;</span></code></li><li><code><span style="color:#880000">#这段配置值允许 192.168.0./24 网段和 127.0.0.1 的请求，其他来源 IP 全部拒绝。</span></code></li><li><code><span style="color:#666600">}</span></code></li></ol><span id="OSC_h2_29"></span><h2>5.6 内置变量</h2><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">nginx 的配置文件中可以使用的内置变量以美元符$开始。其中，大部分预定义的变量的值由客户端发送携带。<br> $args ：#这个变量等于请求行中的参数，同$query_string<br> $content_length ：请求头中的 Content-length 字段。<br> $content_type ：请求头中的 Content-Type 字段。<br> $document_root ：当前请求在 root 指令中指定的值。<br> $host ：请求行的主机名，为空则为请求头字段 Host 中的主机名，再为空则与请求匹配的 server_name<br> $http_user_agent ：客户端 agent 信息<br> $http_cookie ：客户端 cookie 信息<br> $limit_rate ：这个变量可以限制连接速率。<br> $request_method ：客户端请求的动作，通常为 GET 或 POST。<br> $remote_addr ：客户端的 IP 地址。<br> $remote_port ：客户端的端口。<br> $remote_user ：已经经过 Auth Basic Module 验证的用户名。<br> $request_filename ：当前请求的文件路径，由 root 或 alias 指令与 URI 请求生成。<br> $scheme ：HTTP 方法（如 http，https）。<br> $server_protocol ：请求使用的协议，通常是 HTTP/1.0 或 HTTP/1.1。<br> $server_addr ：服务器地址，在完成一次系统调用后可以确定这个值。<br> $server_name ：服务器名称。<br> $server_port ：请求到达服务器的端口号。<br> $request_uri ：包含请求参数的原始 URI，不包含主机名，如：」/foo/bar.php?arg=baz」。<br> $uri ：不带请求参数的当前 URI，$uri 不包含主机名，如」/foo/bar.html」。<br> $document_uri ：与$uri 相同</p><span id="OSC_h1_30"></span><h1>6 总结</h1><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Ngnix 是一款高性能反向代理服务器，学习它非常有必要，本文讲解了 Ngnix 核心配置，介绍了反向代理，负载均衡，动静分离三大功能，最后扩展了一些常用的指令。本文介绍了 Ngnix 的基础用法，后续的 Ngnix 内核以及原理部分有待研究。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">作者：京东物流，殷世杰</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">来源：京东云开发者社区，自猿其说 Tech 转载请注明来源</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 24 Jan 2024 01:55:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10887916</guid>
            <link>https://my.oschina.net/u/4090830/blog/10887916</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FydeOS for You 增加对 Raspberry Pi 5 的支持，性能更优，体验更佳]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0px; margin-right:0px"><img alt="" height="720" src="https://oscimg.oschina.net/oscnet/up-fe04bc78f070724f462d97a2e829c3660f9.jpg" width="1280" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">2023 年底，树莓派基金会终于推出了众望所归的 Raspberry Pi 5。Raspberry Pi 5 配备了新的四核 2.4 GHz Cortex-A76 Arm CPU，据称 CPU 的处理能力是上一代产品的 2-3 倍，一时间成为开发者们的新宠。</p><div><div><img height="720" src="https://pic1.zhimg.com/80/v2-03997cccf738fdb13552a01ffe5ebd58_1440w.webp" width="1280" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">FydeOS v17.1 Nostalgic Reflection 是，针对 Raspberry Pi 5 的首个 FydeOS for You 版本。在此次的发布里，值得一提的修改的有：</p><ul><li>Chromium 已升级至<span>&nbsp;</span><code>114.0.5735.*</code>，Chromium OS 平台更新至<span>&nbsp;</span><code>15437.44.17.*</code>，伴随着以下上游新功能的同步： 
   <ul><li>添加了自定义系统 UI 配色的选择，让你的界面和壁纸更搭调，让系统整体的视觉效果更接近 Material You 设计语言。</li><li>新增窗体分屏管理小部件支持，只需将鼠标悬浮在「最大化」按钮上时即可出现所有选项，点击即可快速调整该窗口的尺寸。这项功能还在试验阶段，你需要手动在<span>&nbsp;</span><u><code>chrome://flags#window-layout-menu</code></u><span>&nbsp;</span>中启用它</li><li>优化了全局 emoji 输入面板，让你输入 emoji 更轻松；可以通过按下<span>&nbsp;</span><code>super</code>（<span>&nbsp;</span><code>❖</code><span>&nbsp;</span>或<span>&nbsp;</span><code>⌘</code><span>&nbsp;</span>） +<span>&nbsp;</span><code>Shift</code><span>&nbsp;</span>+<span>&nbsp;</span><code>Space</code><span>&nbsp;</span>呼出它</li><li>新增了在新标签页中自定义你的 Chromium 浏览器配色和主题的功能</li></ul></li><li>FydeOS 应用商店进行了全新设计，并更新了内容；同时改进了从 FydeOS 应用商店安装 Android 应用的机制</li><li>新增了「报告问题」和「发送反馈」功能，让你可以直接在系统内分享你的 FydeOS 使用体验。你可以通过按<span>&nbsp;</span><code>Alt</code><span>&nbsp;</span>+<span>&nbsp;</span><code>Shift</code><span>&nbsp;</span>+<span>&nbsp;</span><code>I</code><span>&nbsp;</span>调用，或者你也可以在 Chromium 菜单和「关于 FydeOS」页面中找到它。还请阅读这个<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Ffydeos.com%2Fdocs%2Fknowledge-base%2Frecipes%2Ffeedback-howto" target="_blank">如何写出有用反馈的小建议</a></u></li><li>更新了 rEFInd 启动器二进制文件并且更新了 rEFInd 主题</li><li>更新了一些 FydeOS 系统内置程序的图标</li><li>增加了 HEVC（h265）视频播放解码功能</li><li>对系统备份和还原功能进行了优化</li><li>改进了 FydeOS 中 Linux 子系统的下载和更新方式</li><li>优化了将可选的 Widevine CDM 模块加载到系统的方式</li><li>其它系统稳定性和性能增强</li><li>优化了系统镜像的初始分区表及镜像包装方式：从 v17 开始，所有针对卡式电脑的 FydeOS for You 镜像均支持直接烧写在可启动的存储媒介上，无需额外完成一次「安装」即可直接支持系统的 OTA 升级</li><li>最后，一个小贴士：从 FydeOS v17 开始，你将无法在系统 bash shell 中使用<span>&nbsp;</span><code>sudo su</code><span>&nbsp;</span>来提权，请使用<span>&nbsp;</span><code>sudo -i</code><span>&nbsp;</span>替代</li></ul><p style="margin-left:0; margin-right:0">希望你喜欢本次更新，有什么想对我们说的，欢迎随时到<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.fydeos.com%2F" target="_blank"><u>FydeOS 社区</u></a>来告诉我们。</p><p style="margin-left:0; margin-right:0">我们希望也相信，FydeOS 将逐渐成为一个更加开放的平台，你想要的所有程序，都能在 FydeOS 上使用。千里之行，这是我们的第一步，只愿今后的每一步都有你相伴。</p></div></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 09:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276545</guid>
            <link>https://www.oschina.net/news/276545</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【直播预告】DBA 会被云淘汰吗？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>DBA（Database Administrator），即数据库管理员，专门负责管理和维护公司的数据库。然而，随着上云的趋势渐盛，许多企业都把数据库迁到了云平台上。云服务提供商通常会提供自动化工具和标准化服务，这让 DBA 的工作得到了解放，也产生了一丝危机——有人质疑：毕竟最重要的硬件管理和架构管理已经没了需求，而日常的监控和优化工作借助工具就能完成，是否也意味着，DBA 这一岗位要被云淘汰了？</p><p>但持相反意见的人认为，现在谈 DBA 被云淘汰还为时过早，云服务更多是辅助工具而非生产工具，它并没有完全取代 DBA，只是改变了 DBA 的工作方式和职责，让 DBA 更专注于高级的数据库管理任务，在数据优化、安全管理、成本管理和合规性方面发挥更大的作用。</p><p>那么，你怎么看呢？随着云数据库越来越火，企业对 DBA 这一岗位的需求会减少吗？云环境对 DBA 的工作产生了哪些新要求？作为个人的我们，又该补充哪些新知识，才能跟上云时代的发展呢？</p><p>本期，OSCHINA【开源漫谈】特地邀请了 5 位业内具有代表性的专家，直播探讨一下，接下来，DBA 会被云淘汰吗？</p><p>&nbsp;</p><p><strong>直播主题：</strong>DBA 会被云淘汰吗？</p><p><strong>直播时间：</strong>1 月 31 日 19:00 - 20:30</p><p><strong>直播平台：</strong>「OSC 开源社区」视频号</p><p><strong>主办方：</strong>开源中国</p><p><strong>特邀嘉宾：</strong>马工</p><p>&nbsp;</p><p><strong>直播亮点：</strong></p><p>1、DBA 对组织的价值是什么？是不是不可替代的？</p><p>2、DBA 哪些工作内容是可以用云数据库替代的？哪些是不能被云数据库替代的？</p><p>3、云数据库引入解决了什么问题？又有什么新的问题？</p><p>4、云数据库究竟普及到什么程度了？未来究竟会怎么样？</p><p>5、普通 DBA 应该怎么应对云数据库？不上云的企业怎么应对？</p><p>&nbsp;</p><p><strong>直播嘉宾：</strong></p><div><div><div><p>&nbsp;&nbsp;<strong>主持人：</strong></p><p>&nbsp;&nbsp;冯若航，磐吉云数 CEO / 创始人，Pigsty 作者，PostgreSQL 中文社区开源技术委员。公众号《非法加冯》主理人。</p><p>&nbsp;&nbsp;<strong>正方：</strong></p><p>&nbsp;&nbsp;马工，在北欧从事 Infra 工程师，公众号《瑞典马工》主理人。</p><p>&nbsp;&nbsp;李令辉，云原生数据库 clapdb 创始人，前乘法云 CTO，美洽 CTO，滴滴出行首席架构师。目前致力于基于云上的基础设施新范式，提供新时代的分析型数据服务。</p><p>&nbsp;&nbsp;<strong>反方：</strong></p><p>&nbsp;&nbsp;李真旭，云和恩墨的数据库技术负责人，前 Oracle ACE，数据库恢复专家。公众号《Roger 的数据库专栏》主理人。个人网站 www.killdb.com。</p><p>&nbsp;&nbsp;薛晓刚，Oracle ACE-Pro。PostgreSQL ACE Partner。阿里云 MVP，墨天轮 MVP。TiDB MVA。ITPUB 论坛内存数据库版主、核心专家、金牌顾问。个人公众号：《四海内皆兄弟》。</p></div></div></div><p>&nbsp;</p><p>随着上云大潮的到来，传统的 DBA 岗位会不会被云服务所替代呢？快扫码预约直播，谈谈你的看法吧~还可以进我们的 OSC 技术交流群，一起抱团学习哦~</p><p style="text-align:center"><img height="2828" src="https://oscimg.oschina.net/oscnet/up-c6a3432048f888f0596656cfb3a5a7fe12b.png" width="750" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p style="text-align:left"><strong>直播福利</strong></p><ul><li><p>互动抽奖：在直播评论区提问，被直播嘉宾回复的用户可获 OSC 魔方一个，名额不限。</p></li><li><p>福袋抽奖：直播中将有多轮抽奖，参与就有机会获得 OSC T 恤、魔方等。</p></li></ul><p style="text-align:center"><img height="2160" src="https://oscimg.oschina.net/oscnet/up-4828cfaa2774ad6ebd1bd4394f0129e2ea7.png" width="3840" referrerpolicy="no-referrer"></p><p>我们直播间见吧~</p><p>&nbsp;</p><p><strong>特别鸣谢本次合作社区：</strong></p><ul><li><p><strong>Gitee</strong></p></li></ul><p>Gitee（码云）是开源中国于 2013 年推出的基于 Git 的代码托管平台、企业级研发效能平台，提供中国本土化的代码托管服务。</p><p>截止 2023 年 7 月，Gitee 已经有 1000 万名注册用户和 2500 万个代码仓库，是中国境内规模最大的代码托管平台。同时，旗下企业级 DevOps 研发效能管理平台 Gitee 企业版已服务超过 26 万家企业。</p><p>网址：https://gitee.com/</p><p>&nbsp;</p><ul><li><p><strong>PostgreSQL</strong><strong>中文社区</strong></p></li></ul><p>PostgreSQL 中文社区是一个非盈利的民间组织，目前成员都以志愿者身份加入，成立的目的在于构建 PG 数据库技术生态圈子 (内核、用户培训机构、厂商、服务商、软件开发商、高校形成 「业务与利益双向驱动」 的良性发展生态圈); 帮助企业解决人才培养和企业商用数据库成本问题，社区会在各运营平台发布 PostgreSQL 最新信息和 PostgreSQL 相关技术文章，推动 PG 技术在中国的发展。</p><p>官网链接：http://www.postgres.cn/index.php/v2/home</p><p>&nbsp;</p><ul><li><p><strong>Pigsty</strong></p></li></ul><p style="text-align:left">Pigsty 是本地优先的 RDS 开源替代，开箱即用的 PostgreSQL 发行版，自带高可用、监控系统，PITR，IaC 与部署方案。</p><p style="text-align:left">官网链接：https://pigsty.cc</p><p>&nbsp;</p><ul><li><p><strong>爱可生开源社区</strong></p></li></ul><p>爱可生开源社区，一个有深度的数据库开源社区。社区成立于 2017 年，由上海爱可生信息技术股份有限公司发起。以开源高质量的运维工具、日常分享技术干货内容、数据库技术布道为己任；目前开源的产品有：SQL 质量管理平台 SQLE、分布式中间件 DBLE 和数据传输组件 DTLE 等。在这里，你将收获：高质量的技术内容、企业级数据库工具及服务、丰富的社区活动。</p><p>社区地址：opensource.actionsky.com</p><p>&nbsp;</p><ul><li><p><strong>TiDB</strong></p></li></ul><p>由 TiDB 生态中的开发者、用户、合作伙伴一起建立的分享、学习平台。TiDB 线上社区汇聚了 33448 位 TiDB 资深用户（注册用户数），所有成员都可以在这里自由发声，互相协助解决问题。社区线上论坛 asktug.com 已经积累 23,000+ 个问题帖（主题帖数），90% 的问题都得到了解决，累计总回复 243,000+ 个（主题帖回复数）。</p><p>社区地址：asktug.com</p><p>&nbsp;</p><ul><li><p><strong>中国</strong><strong>开源软件</strong><strong>推进联盟 </strong><strong>PostgreSQL</strong><strong> 分会</strong></p></li></ul><p>中国开源软件推进联盟 PostgreSQL 分会（简称中国 PG 分会）于 2017 年成立，是开源联盟旗下致力于推动 PostgreSQL 技术应用与生态发展的组织。我们的运营范围包括技术布道、用户社群、峰会与沙龙、培训与认证、高校教育。</p><p>问答社区：www.pgfans.cn</p><p>&nbsp;</p><ul><li><p><strong>PolarDB</strong></p></li></ul><p>PolarDB&nbsp;开源社区是阿里云数据库开源产品 PolarDB 的技术交流平台，PolarDB 可以 100% 兼容 MySQL 和 PostgreSQL 生态，助力开发者和客户通过开源版本快速使用阿里云数据库产品技术，并参与到技术产品的迭代过程中来。</p><p>社区地址：openpolardb.com</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 07:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6852546/blog/10929981</guid>
            <link>https://my.oschina.net/u/6852546/blog/10929981</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[开放签电子签章企业版，业务线功能正确使用方法]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>一、业务线功能说明</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>业务线全称为「开放签电子签章业务线管理」，顾名思义业务线功能主要是围绕用户不同业务场景下使用电子签章的业务管理。用户可根据不同的业务场景（人力资源合同签署、内部证明文件签署、企业对企业签署、企业对个人签署等），通过业务线功能配置不同的电子签署功能，从而更加便捷、安全的管理电子签章的应用。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>用户可通过业务线配置电子文件签署的业务流程，通过对业务线进行配置来确定和规范签署文件、签署方、签署过程，同时也极大的简化了签署发起的操作。</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>二、功能特点</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>灵活规范：</strong></span></span></span></strong><span><span><span>通过业务线可快速构建出企业的各类签约场景，并进行标准化管理。例如，人事合同签署、内部文件审批签字、销售合同签署、对外报告盖章等场景；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>操作标准：</strong></span></span></span></strong><span><span><span>通过标准化的流程，确保各方按照一致的规范和要求进行文件签署；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>风险控制：</strong></span></span></span></strong><span><span><span>通过业务线控制，降低签署过程中因操作不当等带来的风险；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>提高效率：</strong></span></span></span></strong><span><span><span>自动化和简化发起流程，提高文件签署的效率和速度；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>合规性：</strong></span></span></span></strong><span><span><span>确保文件签署符合法律法规和企业内部政策；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>权限可控：</strong></span></span></span></strong><span><span><span>业务线设置各类权限，包括业务线本身的管理权、使用权，同时包括通过业务线发起的签署业务的数据查看权限、文件下载权限；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>三、业务线功能说明</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>1、视频讲解</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>（1）业务线介绍：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1oc411x7zu%2F%3Fspm_id_from%3D888.80997.embed_other.whitelist%26t%3D43" target="_blank">视频功能讲解</a></strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>（2）业务线配置介绍：</strong></span></span></span></strong></span></span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1Z94y1T7gB%2F%3Fspm_id_from%3D888.80997.embed_other.whitelist%26t%3D45" target="_blank"><span><span><span><span><strong><span><span><span><strong>视频功能讲解</strong></span></span></span></strong></span></span></span></span></a></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>2、文字说明</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>（1）基本信息设置</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>编号：</strong></span></span></span></strong><span><span><span>发起签署时，可根据预设的规则自动生成文档编号，统一一类签署场景的编号规范，减少发起人输入操作，编号规则支持文本、日期、流水号、时间戳，示例：KFQ-renshi-20230101-000001;</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>主题：</strong></span></span></span></strong><span><span><span>发起签署时，可根据预设的规则自动生成文档主题，统一一类签署场景的主题规范，减少发起人输入操作，主题规则支持文本、业务线名称、日期、流水号、时间戳、发起人姓名、接收方姓名，示例：KFQ-入职相关合同（2023 版本）-20230101-000001-李四;</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>签署方：</strong></span></span></span></strong><span><span><span>支持经办人发起时自行设置和经办人发起时，按照预设流程发起并签署两种方式。可设置签署顺序、发起方内部签署人和外部接收方；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>抄送：</strong></span></span></span></strong><span><span><span>是否允许抄送，为该业务线设置抄送时机、抄送的用户类型、指定抄送人；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>签约文件：</strong></span></span></span></strong><span><span><span>支持上传本地文件和选择在线模板，减少经办人发起时重复上传签约文件。同时，可限制经办人是否可删除或新增签约文件；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>附件：</strong></span></span></span></strong><span><span><span>限制经办人发起签署时是否可以上传附件；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>签署方式：</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>a、使用 CA 数字证书（符合电子签名法）：签署文件时，需要使用 CA 机构颁发的数字证书；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>b、使用平台防篡改证书（保护文件）（无法律效力）：签署文件时，使用平台下发的防篡改证书，该证书非 CA 机构颁发，仅用于文件保护，避免文件被篡改，签署后的文件不具备法律效力；</span></span></span></span></span></span></span></p><p><img height="709" src="https://oscimg.oschina.net/oscnet/up-3b855599317328959d0b6e8d2dbd23ef0d2.png" width="1280" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:center"><span><span><span><span><span><span><span>图一、基本信息设置</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>（2）权限管理</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>业务线管理权限：业务线的管理权限和使用权限配置；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>签约文件权限设置：签约数据查看权限和签署文件下载权限配置.</span></span></span></span></span></span></span></p><p><img height="630" src="https://oscimg.oschina.net/oscnet/up-94a4f4e4dde46ddd76822def13d63575dbd.png" width="1280" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:center"><span><span><span><span><span><span><span><span>图二、权限管理</span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>（3）签署位置及参数设置</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>指定各签署方的签署位置；</span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>如果签约文件中包含在线模板，可为模板中的各个参数指定对应的填写方，在签署环节时，各签署人可根据设置完成待签署文件的信息完善。</span></span></span></span></span></span></span></p><p><img height="708" src="https://oscimg.oschina.net/oscnet/up-921b6aa7ff79c0c801f4d5782b3d069f2a2.png" width="1280" referrerpolicy="no-referrer"></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:.0001pt; margin-right:0; text-align:center"><span><span><span><span><span><span><span><span>图三、位置及参数设置</span></span></span></span></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><strong><span><span><span><strong>​四、总结</strong></span></span></span></strong></span></span></span></span></p><p style="margin-left:.0001pt; margin-right:0; text-align:justify"><span><span><span><span><span><span><span>开放签业务线具有灵活、便捷、安全的电子签署业务配置能力。接下来业务线将持续更新，添加更多配置功能，使开放签电子签章系统可以满足更多电子签业务场景。</span></span></span></span></span></span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 07:04:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276436</guid>
            <link>https://www.oschina.net/news/276436</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 社区生态委员会第四次会议圆满召开]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><span style="background-color:#ffffff">2024 年 1 月 23 日，</span><span style="background-color:#ffffff"><strong>openKylin 社区生态委员会第四次会议</strong></span><span style="background-color:#ffffff">圆满召开。openKylin 社区生态委员会作为社区治理架构之一，主要职责为携手社区核心伙伴，推动社区生态共建，打造创新解决方案，提升 openKylin 品牌影响力。</span></span></p><p><span><span style="background-color:#ffffff">本次会议由社区生态委员会成员单位</span><span style="background-color:#ffffff"><strong>北京技德系统技术有限公司</strong></span><span style="background-color:#ffffff">承办，</span><span style="background-color:#ffffff"><strong>openKylin 社区生态委员会主任李震宁</strong></span><span style="background-color:#ffffff">担任主持，20 家生态委员会单位代表于线上线下参会。会上总结和回顾了</span><span style="background-color:#ffffff"><strong>openKylin 社区两个月来的运营发展情况</strong><strong>，</strong></span><span style="background-color:#ffffff">并针对</span><span style="background-color:#ffffff"><strong>后续重点活动计划</strong></span><span style="background-color:#ffffff">等话题进行了讨论。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-43ff9bd70670e16aaef0df0d374b5f35fff.jpg" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><span style="background-color:#ffffff"><strong>北京技德系统技术有限公司 CEO 张耀斌</strong></span></span><span style="background-color:#ffffff">作为会议的承办方代表致辞，他表示很荣幸 openKylin 社区生态委员会走进技德，预祝第四次生态委员会会议圆满成功！技德作为社区理事单位，成立了 AIService SIG，负责 openKylin 社区中 AI 技术相关的开发和信息交流。未来，技德也将秉承着开源聚力、共创未来的社区理念，与各生态伙伴伙伴共建共享，以社区链动产业共振，推动中国开源产业发展。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span><span style="background-color:#ffffff"><strong>北京技德系统技术有限公司公共事务部主任王俊</strong></span></span><span><span style="background-color:#ffffff">针对 openKy</span><span style="background-color:#ffffff">lin 社区 2023 年第四季度运营亮点和要点做了回顾，从</span><span style="background-color:#ffffff">社区会员、平台、生态、SIG 和活动等方面进展向各委员进行了汇报，并对 2024 上半年活动计划做了介绍。</span></span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">随后，社区理事单位代表围绕生态合作推广、应用软件适配和技术深度融合等方面分享了其与社区在 RISC-V 领域的合作成果。openKylin 社区 Release SIG Maintainer 张天雄就 openKylin 版本进展向各委员进行汇报。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff">会议最后，各参会委员围绕社区运营进展及后续活动规划展开了深入探讨，并针对社区建设提出了各自的看法和建议。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:left"><span style="background-color:#ffffff">社区的发展离不开各企业伙伴的大力支持。openKylin 社区生态委员会例会每两月召开一次，会议期间，各委员代表汇聚一堂，就社区运营进展与规划进行细致的探讨，对 openKylin 社区运营工作具有重要指导意义。openKylin 社区也将秉持开源、开放的原则，与各伙伴共同参与、共同治理，一起打造中国领先的开源操作系统根社区。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 23 Jan 2024 02:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/276492</guid>
            <link>https://www.oschina.net/news/276492</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
