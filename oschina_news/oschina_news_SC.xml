<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Sun, 18 Feb 2024 02:51:04 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[LangChain 完成 2500 万美元 A 轮融资，正式发布 LLMOps 产品 LangSmith]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>LangChain 是用于构建 LLM 应用的开源工具，近日其开发商宣布完成了由红杉资本领投的 2500 万美元 A 轮融资，并正式推出首款付费 LLMOps 产品 LangSmith。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-b25af7c499d0b428655a1d2252687cedd5c.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FLangChainAI%2Fstatus%2F1758169569364230542" target="_blank">https://twitter.com/LangChainAI/status/1758169569364230542</a></u></em></p></blockquote><p>LangSmith 旨在成为一站式 LLM 应用开发平台，让开发者能够加速他们的 LLM 应用开发流程，包含了从开发、测试到部署及监控的整个项目生命周期。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-13ce0809dadd727d979ea9107ae1c00fd75.png" referrerpolicy="no-referrer"></p><p><em>▲ LangSmith 在 LLM 应用程序生命周期的每个阶段支持的工作流</em></p><p>根据介绍，在原型设计阶段，使用 LangSmith 的开发者可以全面掌握 LLM 调用的整个流程，并能实时识别错误源头和性能瓶颈，进行调试和迭代优化。他们还可以与领域专家协作，进一步优化应用表现，并且可以添加人工反馈或通过 AI 辅助进行评估，以确保应用的相关性、准确性、安全性和敏感度等。</p><p>一旦确定了原型，这个一站式平台可通过托管的 LangServe 帮助用户部署应用，并提供对生产环境中发生情况的全面视图，覆盖从成本和响应时间到异常和错误等各个方面，以便企业能够交付在生产环境中既高质量又具成本效益的 LLM 应用。</p><p>相关链接：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fventurebeat.com%2Fai%2Flangchain-lands-25m-round-launches-platform-to-support-entire-llm-application-lifecycle%2F" target="_blank">https://venturebeat.com/</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Sun, 18 Feb 2024 02:36:01 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278995/langsmith-ga</guid>
            <link>https://www.oschina.net/news/278995/langsmith-ga</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[VALL-E X —— 多语言文本到语音合成与语音克隆]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#1f2328">微软&nbsp;</span>VALL-E X<span style="background-color:#ffffff; color:#1f2328"><span>&nbsp;</span>零样本语音合成模型的开源实现。</span><strong style="color:#1f2328">预训练模型现已向公众开放，供研究或应用使用。</strong></p><p><strong style="color:#1f2328"><img alt="" height="250" src="https://static.oschina.net/uploads/space/2023/0829/142926_34Of_4252687.jpg" width="500" referrerpolicy="no-referrer"></strong></p><p><span style="background-color:#ffffff; color:#1f2328">VALL-E X 是一个强大而创新的多语言文本转语音（TTS）模型，最初由微软发布。虽然微软最初在他们的研究论文中提出了该概念，但并未发布任何代码或预训练模型。</span></p><p style="text-align:start"><span><span><span style="color:#000000"><span><span><span><span><span><span><span><span><span><span><span><span><span><span>VALL-E X 可以为单语使用者合成另一种语言的个性化语音。以源自源文本和目标文本的音素序列以及源自音频编解码器模型的源声学标记作为提示，VALL-E X 能够生成目标语言的声学标记，然后将其解压缩为目标语言语音波形。得益于强大的上下文学习能力，VALL-E X 不需要同一说话人的跨语言语音数据进行训练，可以执行各种零样本跨语言语音生成任务，例如跨语言文本到-语音合成和语音到语音翻译。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><h4 style="text-align:start"><strong>功能特点</strong></h4><ol><li><p><strong>多语言 TTS</strong>: 可使用三种语言 - 英语、中文和日语 - 进行自然、富有表现力的语音合成。</p></li><li><p><strong>零样本语音克隆</strong>: 仅需录制任意说话人的短短的 3~10 秒录音，VALL-E X 就能生成个性化、高质量的语音，完美还原他们的声音。</p></li></ol><ol start="3"><li><strong>语音情感控制</strong>: VALL-E X 可以合成与给定说话人录音相同情感的语音，为音频增添更多表现力。</li><li><strong style="color:#1f2328">零样本跨语言语音合成</strong><span style="background-color:#ffffff; color:#1f2328">: VALL-E X 可以合成与给定说话人母语不同的另一种语言，在不影响口音和流利度的同时，保留该说话人的音色与情感。</span></li><li><strong style="color:#1f2328">口音控制</strong><span style="background-color:#ffffff; color:#1f2328">: VALL-E X 允许您控制所合成音频的口音，比如说中文带英语口音或反之。</span></li><li><strong>声学环境保留</strong>: 当给定说话人的录音在不同的声学环境下录制时，VALL-E X 可以保留该声学环境，使合成语音听起来更加自然。</li></ol><p><span style="background-color:#ffffff; color:#1f2328">查看&nbsp;</span><a href="https://plachtaa.github.io/">demo 页面</a><span style="background-color:#ffffff; color:#1f2328">来浏览更多示例。</span></p></div>
                                                                ]]>
            </description>
            <pubDate>Sun, 18 Feb 2024 02:34:01 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/vall-e-x</guid>
            <link>https://www.oschina.net/p/vall-e-x</link>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 轻量且高效的 Excel 读写工具 EEC]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-eec 介绍" class="anchor" href="https://gitee.com/wangguanquan/eec#eec%E4%BB%8B%E7%BB%8D"></a>EEC 介绍</h1><p><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwangguanquan%2Feec%2Freleases"><img src="http://img.shields.io/badge/release-0.5.12-blue.svg?style=flat" alt="Release" referrerpolicy="no-referrer"></a><a href="https://gitee.com/link?target=http%3A%2F%2Fwww.apache.org%2Flicenses%2FLICENSE-2.0"><img src="http://img.shields.io/badge/license-Apache--2-blue.svg?style=flat" alt="License" referrerpolicy="no-referrer"></a></p><p>EEC（Excel Export Core）是一款轻量且高效的 Excel 读写工具，它具有包体小、接入代码量少和运行时消耗资源少等优点</p><p>EEC 的设计初衷是为了解决 Apache POI 内存高、速度慢且 API 臃肿的诟病。EEC 的底层并不依赖 POI 包，所有的底层代码均自己实现，事实上 EEC 仅依赖<code>dom4j</code>和<code>slf4j</code>，前者用于小文件 xml 读取，后者统一日志接口。</p><p>EEC 在 JVM 参数<code>-Xmx10m -Xms10m</code>下读写 100w 行 x29 列内存使用截图，下载 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwangguanquan%2Feec-benchmark">eec-benchmark</a> 项目进行性能测试</p><p><img src="https://gitee.com/wangguanquan/eec/raw/master/images/write_read_100w.jpg" alt="write_read 100w" referrerpolicy="no-referrer"></p><h2><a id="user-content-现状" class="anchor" href="https://gitee.com/wangguanquan/eec#%E7%8E%B0%E7%8A%B6"></a>现状</h2><p>EEC 支持大多数日常应用场景，最擅长的是表格处理，比如转对象数组、转 Map 数组、内容检查等导入/导出常见功能。</p><p>目前已实现 worksheet 类型有六种，也可以继承已有<a href="https://gitee.com/wangguanquan/eec/blob/master/src/main/java/org/ttzero/excel/entity/Sheet.java">Worksheet</a>来实现自定义数据源</p><ul><li><a href="https://gitee.com/wangguanquan/eec/blob/master/src/main/java/org/ttzero/excel/entity/ListSheet.java">ListSheet</a> // 对象数组</li><li><a href="https://gitee.com/wangguanquan/eec/blob/master/src/main/java/org/ttzero/excel/entity/ListMapSheet.java">ListMapSheet</a> // Map 数组</li><li><a href="https://gitee.com/wangguanquan/eec/blob/master/src/main/java/org/ttzero/excel/entity/StatementSheet.java">StatementSheet</a> // PreparedStatement</li><li><a href="https://gitee.com/wangguanquan/eec/blob/master/src/main/java/org/ttzero/excel/entity/ResultSetSheet.java">ResultSetSheet</a> // ResultSet 支持 (多用于存储过程)</li><li><a href="https://gitee.com/wangguanquan/eec/blob/master/src/main/java/org/ttzero/excel/entity/EmptySheet.java">EmptySheet</a> // 空 worksheet</li><li><a href="https://gitee.com/wangguanquan/eec/blob/master/src/main/java/org/ttzero/excel/entity/CSVSheet.java">CSVSheet</a> // 支持 csv 与 xlsx 互转</li></ul><h2><a id="user-content-主要功能" class="anchor" href="https://gitee.com/wangguanquan/eec#%E4%B8%BB%E8%A6%81%E5%8A%9F%E8%83%BD"></a>主要功能</h2><ol><li>支持<strong>大数据量导出</strong>，行数无上限，超过单个 Sheet 上限会自动分页</li><li><strong>超低内存</strong>，无论是 xlsx 还是 xls 格式，大部分情况下可以在 10MB 以内完成十万级甚至百万级行数据读写</li><li>支持动态样式，如导出库存时将低于预警阈值的行背景标黄显示</li><li>支持一键设置斑马线，利于阅读</li><li><strong>自适应列宽对中文更精准</strong></li><li>采用 Stream 流读文件，按需加载不会将整个文件读入到内存</li><li>支持 Iterator 和 Stream+Lambda 读文件，你可以像操作集合类一样操作 Excel</li><li>支持 csv 与 excel 格式相互转换</li></ol><h2><a id="user-content-wiki" class="anchor" href="https://gitee.com/wangguanquan/eec#wiki"></a>WIKI</h2><p>阅读<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwangguanquan%2Feec%2Fwiki">WIKI</a> 了解更多用法</p><h2><a id="user-content-gitee" class="anchor" href="https://gitee.com/wangguanquan/eec#gitee"></a>Gitee</h2><p>国内用户可访问<a href="https://gitee.com/wangguanquan/eec">Gitee</a>， 在 Gitee 提 issue 开发者也同样会及时回复</p><h2><a id="user-content-使用方法" class="anchor" href="https://gitee.com/wangguanquan/eec#%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95"></a>使用方法</h2><p>pom.xml 添加</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nt">&lt;dependency&gt;</span></span><span id="LC2" class="line"><span class="nt">&lt;groupId&gt;</span>org.ttzero<span class="nt">&lt;/groupId&gt;</span></span><span id="LC3" class="line"><span class="nt">&lt;artifactId&gt;</span>eec<span class="nt">&lt;/artifactId&gt;</span></span><span id="LC4" class="line"><span class="nt">&lt;version&gt;</span>${eec.version}<span class="nt">&lt;/version&gt;</span></span><span id="LC5" class="line"><span class="nt">&lt;/dependency&gt;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-示例" class="anchor" href="https://gitee.com/wangguanquan/eec#%E7%A4%BA%E4%BE%8B"></a>示例</h2><h4><a id="user-content-1-简单导出" class="anchor" href="https://gitee.com/wangguanquan/eec#1-%E7%AE%80%E5%8D%95%E5%AF%BC%E5%87%BA"></a>1. 简单导出</h4><p>对象数组导出时可以在对象上使用注解<code>@ExcelColumn("列名")</code>来设置 excel 头部信息</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"渠道 ID"</span><span class="o">)</span></span><span id="LC2" class="line"><span class="kd">private</span><span class="kt">int</span><span class="n">channelId</span><span class="o">;</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="nd">@ExcelColumn</span></span><span id="LC5" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">account</span><span class="o">;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>默认情况下导出的列顺序与字段在对象中的定义顺序一致，可以通过指定<code>colIndex</code>或指定 Column 数组来重置顺序。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 创建一个名为"test object"的 excel 文件</span></span><span id="LC2" class="line"><span class="k">new</span><span class="nf">Workbook</span><span class="o">(</span><span class="s">"test object"</span><span class="o">)</span></span><span id="LC3" class="line"></span><span id="LC4" class="line"><span class="c1">// 添加"工作表"并指定导出数据，可以通过 addSheet 添加多个 worksheet</span></span><span id="LC5" class="line"><span class="o">.</span><span class="na">addSheet</span><span class="o">(</span><span class="k">new</span><span class="nc">ListSheet</span><span class="o">&lt;&gt;(</span><span class="s">"学生信息"</span><span class="o">,</span><span class="n">students</span><span class="o">))</span></span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="c1">// 指定输出位置，如果做文件导出可以直接输出到`respone.getOutputStream()`</span></span><span id="LC8" class="line"><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="nc">Paths</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"f:/excel"</span><span class="o">));</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-2-动态样式" class="anchor" href="https://gitee.com/wangguanquan/eec#2-%E5%8A%A8%E6%80%81%E6%A0%B7%E5%BC%8F"></a>2. 动态样式</h4><p>动态样式和数据转换都是使用<code>@FunctionalInterface</code>实现，通常用于<strong>突出或高亮</strong>显示一些重要的单元格或行，下面展示如何将低下 60 分的成绩输出为"不合格"并将整行标为橙色</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">new</span><span class="nc">Workbook</span><span class="o">(</span><span class="s">"2021 小五班期未考试成绩"</span><span class="o">)</span></span><span id="LC2" class="line"><span class="o">.</span><span class="na">addSheet</span><span class="o">(</span><span class="k">new</span><span class="nc">ListSheet</span><span class="o">&lt;&gt;(</span><span class="s">"期末成绩"</span><span class="o">,</span><span class="n">students</span></span><span id="LC3" class="line"><span class="o">,</span><span class="k">new</span><span class="nc">Column</span><span class="o">(</span><span class="s">"学号"</span><span class="o">,</span><span class="s">"id"</span><span class="o">,</span><span class="kt">int</span><span class="o">.</span><span class="na">class</span><span class="o">)</span></span><span id="LC4" class="line"><span class="o">,</span><span class="k">new</span><span class="nc">Column</span><span class="o">(</span><span class="s">"姓名"</span><span class="o">,</span><span class="s">"name"</span><span class="o">,</span><span class="nc">String</span><span class="o">.</span><span class="na">class</span><span class="o">)</span></span><span id="LC5" class="line"><span class="o">,</span><span class="k">new</span><span class="nc">Column</span><span class="o">(</span><span class="s">"成绩"</span><span class="o">,</span><span class="s">"score"</span><span class="o">,</span><span class="kt">int</span><span class="o">.</span><span class="na">class</span><span class="o">,</span><span class="n">n</span><span class="o">-&gt;</span><span class="o">(</span><span class="kt">int</span><span class="o">)</span><span class="n">n</span><span class="o">&lt;</span><span class="mi">60</span><span class="o">?</span><span class="s">"不合格"</span><span class="o">:</span><span class="n">n</span><span class="o">)</span></span><span id="LC6" class="line"><span class="o">).</span><span class="na">setStyleProcessor</span><span class="o">((</span><span class="n">o</span><span class="o">,</span><span class="n">style</span><span class="o">,</span><span class="n">sst</span><span class="o">)</span><span class="o">-&gt;</span></span><span id="LC7" class="line"><span class="n">o</span><span class="o">.</span><span class="na">getScore</span><span class="o">()</span><span class="o">&lt;</span><span class="mi">60</span><span class="o">?</span><span class="n">sst</span><span class="o">.</span><span class="na">modifyFill</span><span class="o">(</span><span class="n">style</span><span class="o">,</span><span class="k">new</span><span class="nc">Fill</span><span class="o">(</span><span class="nc">PatternType</span><span class="o">.</span><span class="na">solid</span><span class="o">,</span><span class="nc">Color</span><span class="o">.</span><span class="na">orange</span><span class="o">))</span><span class="o">:</span><span class="n">style</span><span class="o">)</span></span><span id="LC8" class="line"><span class="o">).</span><span class="na">writeTo</span><span class="o">(</span><span class="nc">Paths</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"f:/excel"</span><span class="o">));</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>效果如下图</p><p><img src="https://gitee.com/wangguanquan/eec/raw/master/images/dynamic_style.png" alt="期未成绩" referrerpolicy="no-referrer"></p><h4><a id="user-content-3-自适应列宽更精准" class="anchor" href="https://gitee.com/wangguanquan/eec#3-%E8%87%AA%E9%80%82%E5%BA%94%E5%88%97%E5%AE%BD%E6%9B%B4%E7%B2%BE%E5%87%86"></a>3. 自适应列宽更精准</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 测试类</span></span><span id="LC2" class="line"><span class="kd">public</span><span class="kd">static</span><span class="kd">class</span><span class="nc">WidthTestItem</span><span class="o">{</span></span><span id="LC3" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="n">value</span><span class="o">=</span><span class="s">"整型"</span><span class="o">,</span><span class="n">format</span><span class="o">=</span><span class="s">"#,##0_);[Red]-#,##0_);0_)"</span><span class="o">)</span></span><span id="LC4" class="line"><span class="kd">private</span><span class="nc">Integer</span><span class="n">nv</span><span class="o">;</span></span><span id="LC5" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"字符串 (en)"</span><span class="o">)</span></span><span id="LC6" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">sen</span><span class="o">;</span></span><span id="LC7" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"字符串 (中文)"</span><span class="o">)</span></span><span id="LC8" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">scn</span><span class="o">;</span></span><span id="LC9" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="n">value</span><span class="o">=</span><span class="s">"日期时间"</span><span class="o">,</span><span class="n">format</span><span class="o">=</span><span class="s">"yyyy-mm-dd hh:mm:ss"</span><span class="o">)</span></span><span id="LC10" class="line"><span class="kd">private</span><span class="nc">Timestamp</span><span class="n">iv</span><span class="o">;</span></span><span id="LC11" class="line"><span class="o">}</span></span><span id="LC12" class="line"></span><span id="LC13" class="line"><span class="k">new</span><span class="nf">Workbook</span><span class="o">(</span><span class="s">"Auto Width Test"</span><span class="o">)</span></span><span id="LC14" class="line"><span class="o">.</span><span class="na">setAutoSize</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span><span class="c1">// &lt;- 自适应列宽</span></span><span id="LC15" class="line"><span class="o">.</span><span class="na">addSheet</span><span class="o">(</span><span class="k">new</span><span class="nc">ListSheet</span><span class="o">&lt;&gt;(</span><span class="n">randomTestData</span><span class="o">()))</span></span><span id="LC16" class="line"><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="nc">Paths</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"f:/excel"</span><span class="o">));</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><img src="https://gitee.com/wangguanquan/eec/raw/master/images/auto_width.png" alt="自动列宽" referrerpolicy="no-referrer"></p><h4><a id="user-content-4-支持多行表头" class="anchor" href="https://gitee.com/wangguanquan/eec#4-%E6%94%AF%E6%8C%81%E5%A4%9A%E8%A1%8C%E8%A1%A8%E5%A4%B4"></a>4. 支持多行表头</h4><p>EEC 使用多个 ExcelColumn 注解来实现多级表头，名称一样的行或列将自动合并</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="kd">public</span><span class="kd">static</span><span class="kd">class</span><span class="nc">RepeatableEntry</span><span class="o">{</span></span><span id="LC2" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"运单号"</span><span class="o">)</span></span><span id="LC3" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">orderNo</span><span class="o">;</span></span><span id="LC4" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"收件地址"</span><span class="o">)</span></span><span id="LC5" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"省"</span><span class="o">)</span></span><span id="LC6" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">rProvince</span><span class="o">;</span></span><span id="LC7" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"收件地址"</span><span class="o">)</span></span><span id="LC8" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"市"</span><span class="o">)</span></span><span id="LC9" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">rCity</span><span class="o">;</span></span><span id="LC10" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"收件地址"</span><span class="o">)</span></span><span id="LC11" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"详细地址"</span><span class="o">)</span></span><span id="LC12" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">rDetail</span><span class="o">;</span></span><span id="LC13" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"收件人"</span><span class="o">)</span></span><span id="LC14" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">recipient</span><span class="o">;</span></span><span id="LC15" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"寄件地址"</span><span class="o">)</span></span><span id="LC16" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"省"</span><span class="o">)</span></span><span id="LC17" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">sProvince</span><span class="o">;</span></span><span id="LC18" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"寄件地址"</span><span class="o">)</span></span><span id="LC19" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"市"</span><span class="o">)</span></span><span id="LC20" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">sCity</span><span class="o">;</span></span><span id="LC21" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"寄件地址"</span><span class="o">)</span></span><span id="LC22" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"详细地址"</span><span class="o">)</span></span><span id="LC23" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">sDetail</span><span class="o">;</span></span><span id="LC24" class="line"><span class="nd">@ExcelColumn</span><span class="o">(</span><span class="s">"寄件人"</span><span class="o">)</span></span><span id="LC25" class="line"><span class="kd">private</span><span class="nc">String</span><span class="n">sender</span><span class="o">;</span></span><span id="LC26" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><img src="https://gitee.com/wangguanquan/eec/raw/master/images/multi-headers.png" alt="多行表头" referrerpolicy="no-referrer"></p><h4><a id="user-content-5-报表轻松制作" class="anchor" href="https://gitee.com/wangguanquan/eec#5-%E6%8A%A5%E8%A1%A8%E8%BD%BB%E6%9D%BE%E5%88%B6%E4%BD%9C"></a>5. 报表轻松制作</h4><p>现在使用普通的 ListSheet 就可以导出漂亮的报表。示例请跳转到 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwangguanquan%2Feec%2Fwiki%2F%25E6%258A%25A5%25E8%25A1%25A8%25E7%25B1%25BB%25E5%25AF%25BC%25E5%2587%25BA%25E6%25A0%25B7%25E5%25BC%258F%25E7%25A4%25BA%25E4%25BE%258B">WIKI</a></p><p>记帐类</p><p><img src="https://gitee.com/wangguanquan/eec/raw/master/images/report1.png" alt="报表 1" referrerpolicy="no-referrer"></p><p>统计类</p><p><img src="https://gitee.com/wangguanquan/eec/raw/master/images/report3.png" alt="报表 2" referrerpolicy="no-referrer"></p><h4><a id="user-content-6-支持 28 种预设图片样式" class="anchor" href="https://gitee.com/wangguanquan/eec#6-%E6%94%AF%E6%8C%8128%E7%A7%8D%E9%A2%84%E8%AE%BE%E5%9B%BE%E7%89%87%E6%A0%B7%E5%BC%8F"></a>6. 支持 28 种预设图片样式</h4><p>导出图片时可以设置图片样式使其更美观，关于图片样式请参考<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwangguanquan%2Feec%2Fwiki%2F1-%25E5%25AF%25BC%25E5%2587%25BAExcel%23%25E5%25AF%25BC%25E5%2587%25BA%25E5%259B%25BE%25E7%2589%2587">1-导出 Excel#导出图片</a></p><p><img src="https://gitee.com/wangguanquan/eec/raw/master/images/preset_effect.jpg" alt="effect" referrerpolicy="no-referrer"></p><h3><a id="user-content-读取示例" class="anchor" href="https://gitee.com/wangguanquan/eec#%E8%AF%BB%E5%8F%96%E7%A4%BA%E4%BE%8B"></a>读取示例</h3><p>EEC 使用<code>ExcelReader#read</code>静态方法读文件，因其支持标准 Stream 所以可以直接使用<code>map</code>、<code>filter</code>和<code>collect</code>等 JDK 内置函数，读取 Excel 就像操作集合类一样简单，极大降低学习成本。</p><h4><a id="user-content-1-使用 stream" class="anchor" href="https://gitee.com/wangguanquan/eec#1-%E4%BD%BF%E7%94%A8stream"></a>1. 使用 Stream</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">try</span><span class="o">(</span><span class="nc">ExcelReader</span><span class="n">reader</span><span class="o">=</span><span class="nc">ExcelReader</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="nc">Paths</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"./用户注册.xlsx"</span><span class="o">)))</span><span class="o">{</span></span><span id="LC2" class="line"><span class="c1">// 读取所有 worksheet 并输出</span></span><span id="LC3" class="line"><span class="n">reader</span><span class="o">.</span><span class="na">sheets</span><span class="o">().</span><span class="na">flatMap</span><span class="o">(</span><span class="nl">Sheet:</span><span class="o">:</span><span class="n">rows</span><span class="o">).</span><span class="na">forEach</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">::</span><span class="n">println</span><span class="o">);</span></span><span id="LC4" class="line"><span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">IOException</span><span class="n">e</span><span class="o">)</span><span class="o">{</span></span><span id="LC5" class="line"><span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span></span><span id="LC6" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-2-读入到数组或 list 中" class="anchor" href="https://gitee.com/wangguanquan/eec#2-%E8%AF%BB%E5%85%A5%E5%88%B0%E6%95%B0%E7%BB%84%E6%88%96list%E4%B8%AD"></a>2. 读入到数组或 List 中</h4><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="k">try</span><span class="o">(</span><span class="nc">ExcelReader</span><span class="n">reader</span><span class="o">=</span><span class="nc">ExcelReader</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="nc">Paths</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"./User.xlsx"</span><span class="o">)))</span><span class="o">{</span></span><span id="LC2" class="line"><span class="c1">// 读取第 1 个 Sheet 页</span></span><span id="LC3" class="line"><span class="nc">List</span><span class="o">&lt;</span><span class="nc">User</span><span class="o">&gt;</span><span class="n">users</span><span class="o">=</span><span class="n">reader</span><span class="o">.</span><span class="na">sheet</span><span class="o">(</span><span class="mi">0</span><span class="o">)</span></span><span id="LC4" class="line"><span class="c1">// 指定第 6 行为表头，前 5 行为概要信息</span></span><span id="LC5" class="line"><span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="mi">6</span><span class="o">)</span></span><span id="LC6" class="line"><span class="c1">// 读取数据行</span></span><span id="LC7" class="line"><span class="o">.</span><span class="na">rows</span><span class="o">()</span></span><span id="LC8" class="line"><span class="c1">// 将每行数据转换为 User 象</span></span><span id="LC9" class="line"><span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="n">row</span><span class="o">-&gt;</span><span class="n">row</span><span class="o">.</span><span class="na">to</span><span class="o">(</span><span class="nc">User</span><span class="o">.</span><span class="na">class</span><span class="o">))</span></span><span id="LC10" class="line"><span class="c1">// 收集为 List 或数组进行后续处理</span></span><span id="LC11" class="line"><span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span></span><span id="LC12" class="line"><span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">IOException</span><span class="n">e</span><span class="o">)</span><span class="o">{</span></span><span id="LC13" class="line"><span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span></span><span id="LC14" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-3-过滤和聚合" class="anchor" href="https://gitee.com/wangguanquan/eec#3-%E8%BF%87%E6%BB%A4%E5%92%8C%E8%81%9A%E5%90%88"></a>3. 过滤和聚合</h4><p>EEC 支持 Stream 的大部分功能，以下代码展示过滤平台为"iOS"的注册用户</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">reader</span><span class="o">.</span><span class="na">sheet</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">header</span><span class="o">(</span><span class="mi">6</span><span class="o">)</span></span><span id="LC2" class="line"><span class="o">.</span><span class="na">rows</span><span class="o">()</span></span><span id="LC3" class="line"><span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">row</span><span class="o">-&gt;</span><span class="s">"iOS"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">row</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"platform"</span><span class="o">)))</span><span class="c1">// 过滤平台为"iOS"的用户</span></span><span id="LC4" class="line"><span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="n">row</span><span class="o">-&gt;</span><span class="n">row</span><span class="o">.</span><span class="na">to</span><span class="o">(</span><span class="nc">Regist</span><span class="o">.</span><span class="na">class</span><span class="o">))</span></span><span id="LC5" class="line"><span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="nc">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">());</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h4><a id="user-content-4-多级表头读取" class="anchor" href="https://gitee.com/wangguanquan/eec#4-%E5%A4%9A%E7%BA%A7%E8%A1%A8%E5%A4%B4%E8%AF%BB%E5%8F%96"></a>4. 多级表头读取</h4><p>多级表头可以使用<code>header</code>方法来指定表头所在的多个行号</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="n">reader</span><span class="o">.</span><span class="na">sheet</span><span class="o">(</span><span class="mi">0</span><span class="o">)</span></span><span id="LC2" class="line"><span class="o">.</span><span class="na">header</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">)</span><span class="c1">// &lt;- 指定第 1、2 行均为表头</span></span><span id="LC3" class="line"><span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="nl">Row:</span><span class="o">:</span><span class="n">toMap</span><span class="o">)</span><span class="c1">// &lt;- Row 转 Map</span></span><span id="LC4" class="line"><span class="o">.</span><span class="na">forEach</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">::</span><span class="n">println</span><span class="o">)</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>多级表头将以<code>A1:A2:A3</code>这种格式进行纵向拼接，像上面第 4 个示例中的运单数据读取结果将以<code>运单号</code>，<code>收件地址:省</code>，<code>收件地址:市</code>呈现，这样就可以解决出现两个<code>省</code>、<code>市</code>导致错乱的问题</p><p>更多关于多表头使用方法可以参考 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwangguanquan%2Feec%2Fwiki%2F%25E5%25A6%2582%25E4%25BD%2595%25E8%25AE%25BE%25E7%25BD%25AE%25E5%25A4%259A%25E8%25A1%258C%25E8%25A1%25A8%25E5%25A4%25B4%23%25E8%25AF%25BB%25E5%258F%2596%25E5%25B8%25A6%25E5%25A4%259A%25E8%25A1%258C%25E8%25A1%25A8%25E5%25A4%25B4%25E7%259A%2584%25E6%2596%2587%25E4%25BB%25B6">WIKI</a></p><h3><a id="user-content-xls 格式支持" class="anchor" href="https://gitee.com/wangguanquan/eec#xls%E6%A0%BC%E5%BC%8F%E6%94%AF%E6%8C%81"></a>xls 格式支持</h3><p>pom.xml 添加如下依赖，添加好后即完成了 xls 的兼容，是的！你不需要为 xls 格式添加任何一行代码。</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="nt">&lt;dependency&gt;</span></span><span id="LC2" class="line"><span class="nt">&lt;groupId&gt;</span>org.ttzero<span class="nt">&lt;/groupId&gt;</span></span><span id="LC3" class="line"><span class="nt">&lt;artifactId&gt;</span>eec-e3-support<span class="nt">&lt;/artifactId&gt;</span></span><span id="LC4" class="line"><span class="nt">&lt;version&gt;</span>${eec-e3-support.version}<span class="nt">&lt;/version&gt;</span></span><span id="LC5" class="line"><span class="nt">&lt;/dependency&gt;</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p>读取 xls 的方法与 xlsx 完全一样，外部不需要判断是哪种格式，EEC 为其提供了完全一样的接口，内部会根据文件头去判断具体类型，这种方式比简单判断文件后缀准确得多。</p><p>两个工具的兼容性 <a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwangguanquan%2Feec%2Fwiki%2FEEC%25E4%25B8%258EE3-support%25E5%2585%25BC%25E5%25AE%25B9%25E6%2580%25A7%25E5%25AF%25B9%25E7%2585%25A7%25E8%25A1%25A8">参考此表</a></p><h3><a id="user-content-csv 与 excel 格式互转" class="anchor" href="https://gitee.com/wangguanquan/eec#csv%E4%B8%8Eexcel%E6%A0%BC%E5%BC%8F%E4%BA%92%E8%BD%AC"></a>CSV 与 Excel 格式互转</h3><ul><li>CSV =&gt; Excel：向 Workbook 中添加一个<code>CSVSheet</code>工作表</li><li>Excel =&gt; CSV：读 Excel 时调用<code>saveAsCSV</code>另存为 csv 格式</li></ul><p>代码示例</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"><span class="c1">// 直接保存为 csv 生成测试文件，对于数据量较多的场合也可以使用#more 方法分批获取数据</span></span><span id="LC2" class="line"><span class="k">new</span><span class="nf">Workbook</span><span class="o">()</span></span><span id="LC3" class="line"><span class="o">.</span><span class="na">addSheet</span><span class="o">(</span><span class="n">createTestData</span><span class="o">())</span></span><span id="LC4" class="line"><span class="o">.</span><span class="na">saveAsCSV</span><span class="o">()</span><span class="c1">// 指定输出格式为 csv</span></span><span id="LC5" class="line"><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="nc">Paths</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"d:\\abc.csv"</span><span class="o">));</span></span><span id="LC6" class="line"></span><span id="LC7" class="line"><span class="c1">// CSV 转 Excel</span></span><span id="LC8" class="line"><span class="k">new</span><span class="nf">Workbook</span><span class="o">()</span></span><span id="LC9" class="line"><span class="o">.</span><span class="na">addSheet</span><span class="o">(</span><span class="k">new</span><span class="nc">CSVSheet</span><span class="o">(</span><span class="nc">Paths</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"d:\\abc.csv"</span><span class="o">)))</span><span class="c1">// 添加 CSVSheet 并指定 csv 路径</span></span><span id="LC10" class="line"><span class="o">.</span><span class="na">writeTo</span><span class="o">(</span><span class="nc">Paths</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"d:\\abc.xlsx"</span><span class="o">));</span></span><span id="LC11" class="line"></span><span id="LC12" class="line"><span class="c1">// Excel 转 CSV</span></span><span id="LC13" class="line"><span class="k">try</span><span class="o">(</span><span class="nc">ExcelReader</span><span class="n">reader</span><span class="o">=</span><span class="nc">ExcelReader</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="nc">Paths</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"d:\\abc.xlsx"</span><span class="o">)))</span><span class="o">{</span></span><span id="LC14" class="line"><span class="c1">// 读取 Excel 使用 saveAsCSV 保存为 CSV 格式</span></span><span id="LC15" class="line"><span class="n">reader</span><span class="o">.</span><span class="na">sheet</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="na">saveAsCSV</span><span class="o">(</span><span class="nc">Paths</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">"./"</span><span class="o">));</span></span><span id="LC16" class="line"><span class="o">}</span><span class="k">catch</span><span class="o">(</span><span class="nc">IOException</span><span class="n">e</span><span class="o">)</span><span class="o">{</span></span><span id="LC17" class="line"><span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span></span><span id="LC18" class="line"><span class="o">}</span></span></pre><div class="markdown-code-block-copy-btn"></div></div></div><h2><a id="user-content-changelog" class="anchor" href="https://gitee.com/wangguanquan/eec#changelog"></a>CHANGELOG</h2><h2><a id="user-content-version-0512-2023-11-26" class="anchor" href="https://gitee.com/wangguanquan/eec#version-0512-2023-11-26"></a>Version 0.5.12 (2023-11-26)</h2><ul><li>移除 watch 改用 slf4j 输出日志</li><li>新增进度窗口<code>onProgress</code></li><li>优化自适应列宽算法使其支持更多字体和大小</li><li>数据转换器功能增强，ExcelColumn 增加 converter 属性以支持导出/导入时双向数据转换 (<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwangguanquan%2Feec%2Fissues%2F362">#362</a>)</li><li>支持读取 xlsx 格式 wps 的内嵌图片 (<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwangguanquan%2Feec%2Fissues%2F363">#363</a>)</li><li>部分类的注释改为中文，后续会将全部注释改为中文</li></ul><h2><a id="user-content-version-0511-2023-10-08" class="anchor" href="https://gitee.com/wangguanquan/eec#version-0511-2023-10-08"></a>Version 0.5.11 (2023-10-08)</h2><ul><li>优化 ExcelReader 性能，性能提升 100%~300%</li><li>增加<code>setHeaderColumnReadOption</code>方法提高 ExcelReader 丰富性</li><li>修复读取 16 进制转义字符时出现乱码问题</li><li>修复非法 UTF8 字符导致写文件异常</li><li>无数据且能获取表头信息时正常写表头 (<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwangguanquan%2Feec%2Fissues%2F361">#361</a>)</li><li>屏蔽 JDK17 以上版本使用 ExcelReader 抛异常的问题</li></ul><h2><a id="user-content-version-0510-2023-08-10" class="anchor" href="https://gitee.com/wangguanquan/eec#version-0510-2023-08-10"></a>Version 0.5.10 (2023-08-10)</h2><ul><li>修复单元格长度过长导致内容错位的异常 (<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fwangguanquan%2Feec%2Fissues%2F354">#354</a>)</li><li>支持导出图片</li></ul><h2><a id="user-content-version-059-2023-05-10" class="anchor" href="https://gitee.com/wangguanquan/eec#version-059-2023-05-10"></a>Version 0.5.9 (2023-05-10)</h2><ul><li>修复 dom4j 默认构造器容易造成 XXE 安全漏洞</li></ul><p><a href="https://gitee.com/wangguanquan/eec/blob/master/CHANGELOG">更多...</a></p>]]>
            </description>
            <pubDate>Sun, 18 Feb 2024 02:24:01 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/wangguanquan/eec</guid>
            <link>https://gitee.com/wangguanquan/eec</link>
        </item>
        <item>
            <title>
                <![CDATA[TIOBE 2 月：Go 首次进入前十、「上古语言」 COBOL 和 Fortran 排名飙升]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>TIOBE 编程语言排行榜公布了最新的 2 月榜单：</p><p><img src="https://oscimg.oschina.net/oscnet/up-fd9ae8e26575e48697980ef52fc8c00afe7.png" referrerpolicy="no-referrer"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tiobe.com%2Ftiobe-index%2F" target="_blank">https://www.tiobe.com/tiobe-index/</a></em></u></p><p>2024 年 2 月，Go 进入了 TIOBE 编程语言排行榜前十，<strong>排名第 8 位 —— 这是 Go 有史以来的最高排名</strong>。从其排名趋势变化图来看，Go 排名最低是 2015 年的第 122 位。</p><p><img src="https://oscimg.oschina.net/oscnet/up-27511d1c68e8b6a5da03935da9c217514b2.png" referrerpolicy="no-referrer"></p><p>除了 Go 语言，本月的榜单有两门「上古语言」 罕见地进入了前 20：</p><ul><li>Fortran 从去年同期的第 24 位上升至<strong>第 11 位</strong>，PHP 在其前一位</li><li>COBOL 从去年同期的第 30 位上升至<strong>第 19 位</strong>，紧随大热的 Rust 其后</li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-9f78200777a69c335cc272ad90ad8d5ae73.png" referrerpolicy="no-referrer"></p><p><img src="https://oscimg.oschina.net/oscnet/up-c2f9aba372a28a33707322be8cf57463c95.png" referrerpolicy="no-referrer"></p><p>根据这两门语言排名的趋势变化，它们的排名于去年中旬突然出现爆发式上升，此后虽然稍有下降，但也比前几年靠前。</p><p>去年 8 月，IBM <u><a href="https://www.oschina.net/news/255047/ibm-ai-translate-cobol-code-to-java">推出</a></u>了一款生成式 AI 编程助手&nbsp;watsonx，用于将传统的 COBOL 转换为企业级 Java 代码。据称该工具由 IBM 的 watsonx.ai 代码模型提供支持。该模型从 1.5 万亿个 tokens 中学习了 115 种编码语言的知识；拥有 200 亿个参数，从而实现「更高效的 COBOL 到 Java 转换」。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3ace59bdd3cd97bad8ebebb10969ccc48ed.png" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">COBOL 是最古老的编程语言之一，历史可以追溯到 1959 年左右；但当下仍被大型组织广泛用于处理来自重要中央系统的数据，例如账单、帐户、工资单和客户交易等。2022 年的一项调查指出，92% 的受访者认为 COBOL 具有战略意义，日常使用的 COBOL 代码量显着增加至 775-8500 亿行；大约是先前估计的三倍。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 17 Feb 2024 11:08:46 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278954/tiobe-index-202402</guid>
            <link>https://www.oschina.net/news/278954/tiobe-index-202402</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IDEA 2024.1：Spring 支持增强、GitHub Action 支持增强、更新 HTTP Client 等]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>有段时间没有更新 IDEA 了，早上看到 IntelliJ IDEA 2024.1 EAP 5 发布的邮件提示，瞄了一眼，发现真的是越来越强了，其中不少功能对我来说还是非常有用的。也许这些能力对关注 DD 的小伙伴也有帮助，所以搞篇博客介绍和推荐一下。</p><h2>Spring、Quarkus 等主流框架的支持增强</h2><ol><li>Search Everywhere 功能中增加<code>Endpoints</code>选项卡</li></ol><p>具体如下图所示：</p><p><img src="https://oscimg.oschina.net/oscnet/up-0ee7ce6c03e2286e03386a69dcc60e657fd.png" alt="" referrerpolicy="no-referrer"></p><p>开发者可以在这里直接搜索通过 Spring、Quarkus、Micronaut、Ktor 实现的接口来找到具体的代码实现位置。这个功能非常实用，尤其是对于接手老项目的开发者来说，可以快速的定位接口实现来完成开发任务或问题排查。</p><ol start="2"><li>增强 Spring Bean 的自动补全和自动装配</li></ol><p>IntelliJ IDEA 现在为应用程序上下文中的所有 Bean 提供自动补全功能，并自动连接它们。</p><p>如果 bean 通过构造函数具有自动装配依赖项，则相关字段也会通过构造函数自动装配。</p><p>同样，如果通过字段或 Lombok 的 <code>@RequiredArgsConstructor</code> 注释注入依赖项，则新 bean 会自动通过字段连接。</p><p><img src="https://oscimg.oschina.net/oscnet/up-2b02c90fa6961c0775ece81bee73b6931c0.gif" alt="" referrerpolicy="no-referrer"></p><ol start="3"><li>增强 Spring 模型图</li></ol><p>在该版本中用户访问 Spring 模型图变得更加容易，可以如下图这样点击 Spring 标识的行标记直接跳转：</p><p><img src="https://oscimg.oschina.net/oscnet/up-1df349276ff95704a5a445e8c8433bdf334.png" alt="" referrerpolicy="no-referrer"></p><p>也可以使用快捷键 <code>⌥⏎</code> (MacOS) 或 <code>Alt+Enter</code>（Windows）来生成和跳转。</p><p>同时，该版本还引入了新的图标，增强了 Spring 模型图的可视化内容，如：<code>Components</code>、<code>Controllers</code>、<code>Repositories</code>。此外，您现在可以方便地切换库中 Bean 的可见性（默认情况下是隐藏的）。</p><p><img src="https://oscimg.oschina.net/oscnet/up-94a11e1d5b4fe45c57c7abadcdc29db4a48.png" alt="" referrerpolicy="no-referrer"></p><h2>HTTP Client 的改进</h2><p>HTTP Client 现在提供更多身份验证选项，包括 <code>PKCE</code> 授权代码和设备授予流程。它还支持令牌和身份验证请求的额外参数。</p><p><img src="https://oscimg.oschina.net/oscnet/up-04caeaa12f92b82571732d63b20e17766f7.png" alt="" referrerpolicy="no-referrer"></p><p>现在它可以自动处理 <code>code_challenge</code> 和 <code>passes code_verifier</code> 的生成，以便在 <code>PKCE</code> 请求中检索令牌。</p><p><img src="https://oscimg.oschina.net/oscnet/up-245a2f71b9627fe602eefc5b4dbc5c8232e.png" alt="" referrerpolicy="no-referrer"></p><p>这个版本的 HTTP Client 可以使用 Netty 作为其低级网络库。通过支持 SSL、代理和 HTTP/2，使我们能够在 HTTP 客户端中实现 HTTP/2 的支持。</p><p><img src="https://oscimg.oschina.net/oscnet/up-cbf789d87574df3daf100bb7a57dbbee6eb.png" alt="" referrerpolicy="no-referrer"></p><p>此外，HTTP Client 的工具栏外观，也与新的 UI 风格保持一致，提供更加美观的用户体验。</p><p><img src="https://oscimg.oschina.net/oscnet/up-090f4be8d3bca108783edca87a0148b7643.png" alt="" referrerpolicy="no-referrer"></p><h2>GitHub Action 的支持增强</h2><ol><li>Workflow 上下文的支持</li></ol><p>现在可以为各种 GitHub Action 上下文引入了广泛的自动完成支持，包括<code>github.*</code>、<code>env.*</code>、<code>steps.*</code>和<code>inputs.*</code>。</p><p><img src="https://oscimg.oschina.net/oscnet/up-1481a6bdbd95457c407cb2a94e85503bdea.gif" alt="" referrerpolicy="no-referrer"></p><p>这个优化非常有用，可以有效的降低编写复杂工作流脚本的过程，开发人员不用再去频繁的搜索上下文中涉及的参数了。</p><p>该优化在<code>YAML</code>文件配置中也同样有效：</p><p><img src="https://oscimg.oschina.net/oscnet/up-f7ac4f81dd0f9fdbc03431c0506a1bea7a7.gif" alt="" referrerpolicy="no-referrer"></p><p>在<code>YAML</code>文件中，开发者还可以使用 <code>branding</code> 功能使用特定图标和颜色指示器自定义 GitHub 上操作的外观。</p><p>此功能使操作创建者能够在 GitHub Marketplace 和工作流程中直观地区分他们的操作，使它们更易于识别和用户友好。通过在 <code>action.yml</code> 文件中指定图标和颜色，开发人员可以一目了然地传达其操作的目的，从而增强整体用户体验。这种可视化定制有助于对操作进行分类，并帮助用户快速识别 CI/CD 管道所需的工具。</p><p><img src="https://oscimg.oschina.net/oscnet/up-eddce7b9706dff8a0a99820301742b2d3f8.gif" alt="" referrerpolicy="no-referrer"></p><ol start="2"><li>Docker 镜像自动补全</li></ol><p>此增强功能在 GitHub 工作流程文件中提供 image 和 tag 建议，从而更轻松地将 Docker 容器集成到您的操作中。</p><p><img src="https://oscimg.oschina.net/oscnet/up-c4425bb3fad84e45c548fb87d94f74a7408.gif" alt="" referrerpolicy="no-referrer"></p><ol start="3"><li>JavaScript 文件路径补全</li></ol><p>文件路径完成功能会自动建议文件路径，从而简化 JavaScript 操作的配置并简化工作流程执行。</p><p><img src="https://oscimg.oschina.net/oscnet/up-252eb1074583ebd3dde29ffaf1ed1e4c93f.gif" alt="" referrerpolicy="no-referrer"></p><h2>其他更新</h2><ul><li><p>优化 JSON schema 的处理： 优化了 JSON 模式验证和完成背后的代码。因此，IDE 现在可以更快地处理此任务并减少内存消耗。在使用 Azure Pipelines 的现实文件中，架构检查现在速度提高了 10 倍。</p></li><li><p>现在可以在所有常见场景中轻松完成 HTTP Header，例如使用 Spring WebClient 和 RestAssured 测试。当遇到预期值时，会自动出现完成弹出窗口。</p></li></ul><p><img src="https://oscimg.oschina.net/oscnet/up-fdc206cbcf2cbcd15b7f663e5aea23148bc.gif" alt="" referrerpolicy="no-referrer"></p><p>另外，DD 最近把博客重新增加了板块，正在维护几个有意思的长期连载专栏，其中一个就是<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.didispace.com%2Fidea-tips%2F" target="_blank">《玩转 IDEA》</a>，这次换了工具，直接采用电子文档的形式，阅读体验更好，​对这些内容感兴趣的，可以关注起来！</p><blockquote><p>欢迎关注我的公众号：程序猿 DD。第一时间了解前沿行业消息、分享深度技术干货、获取优质学习资源</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Sat, 17 Feb 2024 08:36:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/didispace/blog/11043860</guid>
            <link>https://my.oschina.net/didispace/blog/11043860</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openEuler 正式加入 LFEU 成为 Associate Member]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">近期，openEuler 以 Associate Member 的身份加入 Linux Foundation Europe。</span></p><p><img height="278" src="https://oscimg.oschina.net/oscnet/up-587f92e98bc0291b3644a3f5524ac9ea83f.png" width="500" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">此次加入 Linux Foundation Europe，意味着 openEuler 在技术及生态影响力方面得到了 LFEU 的认可。</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">未来，openEuler 将与 Linux Foundation 展</span><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">开进一步合作，共同促进 Linux 技术发展。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 17 Feb 2024 08:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278941</guid>
            <link>https://www.oschina.net/news/278941</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[如何正确地理解应用架构并开发]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="rich_media_content js_underline_content
                       autoTypeSetting24psection
            " id="js_content"><section style="margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;visibility: visible;" data-mpa-powered-by="yiban.io"><img class="rich_pages wxw-img __bg_gif" data-backh="96" data-backw="578" data-cropselx1="0" data-cropselx2="578" data-cropsely1="0" data-cropsely2="96" data-imgfileid="503042079" data-ratio="0.16666666666666666" src="https://oscimg.oschina.net/oscnet/0c87b415-37eb-440b-8adc-76f3ca02d100.gif" data-type="gif" data-w="636" style="outline: 0px;letter-spacing: 0.544px;font-size: var(--articleFontsize);border-radius: 8px;text-align: justify;width: 100%;visibility: visible !important;background-size: 16px !important;height: auto;" referrerpolicy="no-referrer"><br style="outline: 0px;visibility: visible;"></section><section data-mpa-template="t" data-mpa-template-id="502" data-mpa-category="模板" style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);visibility: visible;"><section data-mpa-category="模板" data-mid="" style="padding-right: 1px;padding-left: 1px;outline: 0px;width: 677px;display: flex;justify-content: flex-start;align-items: center;flex-direction: column;visibility: visible;"><section data-mid="" style="outline: 0px;letter-spacing: 0.544px;width: 675px;display: grid;grid-template-columns: 26px auto;visibility: visible;"><section data-mid="" style="outline: 0px;width: 26px;height: 14px;display: flex;justify-content: center;align-items: center;align-self: center;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section><section data-mid="" style="padding-left: 7px;outline: 0px;display: flex;justify-content: flex-start;align-items: center;visibility: visible;"><section data-mid="" style="margin-right: 7px;outline: 0px;text-align: left;visibility: visible;"><p data-mid="" style="outline: 0px;width: 0px;font-size: 14px;font-family: PingFangSC-Semibold, &quot;PingFang SC&quot;;font-weight: bold;color: rgb(58, 92, 244);line-height: 20px;visibility: visible;"><br style="outline: 0px;visibility: visible;"></p></section><section data-mid="" style="margin-bottom: 4px;outline: 0px;width: 635px;height: 1px;border-top: 1px solid rgb(58, 92, 244);align-self: flex-end;visibility: visible;"><br style="outline: 0px;visibility: visible;"></section></section></section><section data-mid="" style="padding: 7px 14px 9px 19px;outline: 0px;width: 675px;text-align: left;border-bottom: 1px solid rgb(58, 92, 244);visibility: visible;"><p style="margin-top: 8px;outline: 0px;min-height: 24px;letter-spacing: 0.578px;text-align: justify;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgba(25, 26, 31, 0.9);letter-spacing: 1px;text-align: left;font-size: 15px;">许多同学或多或少都经历过这样的流程：</span></p><ol class="list-paddingleft-1" style="width: 577.422px;letter-spacing: 0.578px;text-wrap: wrap;"><li style="font-size: 15px;"><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgba(25, 26, 31, 0.9);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;">新同学刚来公司，学习了解团队的一些工程代码，并了解其中的代码风格</span></section></li><li style="font-size: 15px;"><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgba(25, 26, 31, 0.9);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;font-size: 15px;">团队新接手了一些其他团队的项目，需要了解工程结构以及概念</span></section></li><li style="font-size: 15px;"><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgba(25, 26, 31, 0.9);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;">如何定义工程项目的工程结构，包目录结构并达成团队共识</span></section></li></ol><p style="margin-top: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;letter-spacing: 1px;color: rgba(25, 26, 31, 0.9);font-size: 15px;">如果你有上述经历，并对工程应用之中的 Module 划分及其背后的意义理解上存在一些困扰， 那本文对你或许会有一些帮助。</span></p></section></section></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><strong><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">理解代码从理解应用架构开始</span></strong></section><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);visibility: visible;line-height: 1.75em;"><br></p><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503042075" data-ratio="0.3161764705882353" data-s="300,640" src="https://oscimg.oschina.net/oscnet/e960db52-4e96-424f-b406-df51c37c742e.png" data-type="png" data-w="408" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 113px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;color: rgb(3, 69, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;">应用架构</span></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;visibility: visible;"><br></section><span id="OSC_h4_1"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">混乱的应用架构</span></strong></span></h4><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;line-height: 1.75em;visibility: visible;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">最近看了一些业务工程的代码，发现业务系统非常混乱，混乱主要体现在：</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="30:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="30:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">应用的层次结构混乱：</span><span data-cangjie-key="30:10" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="30:10" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">不知道应用应该如何分层、应该包含哪些组件、组件之间的关系是什么</span><span data-cangjie-key="30:41" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="30:41" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">；</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="33:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="33:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">缺少规范的指导和约束：</span><span data-cangjie-key="33:11" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="33:11" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">新加一段业务逻辑不知道放在什么地方（哪个类，哪个包）、应该起什么名字比较合适</span><span data-cangjie-key="33:49" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="33:49" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">？</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="36:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="36:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">每个工程的 Module 数量不一样，Module 的命名和定义不一样，不同的 Module 之间的依赖关系混乱（延伸下就是：</span><strong><span data-cangjie-key="36:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="36:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">Module 和 Package 的作用不清晰，不能很好的区分两者之间的区别</span></strong><span data-cangjie-key="36:93" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="36:93" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">）</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><span data-cangjie-key="39:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="39:0" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">但有一个</span><span data-cangjie-key="39:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="39:4" style="box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">共同点就是都很复杂</span><span data-cangjie-key="39:13" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="39:13" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">。导致复杂性的原因有很多，如果从架构的层面看，主要有两点：</span></span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">架构设计过于复杂，层次太多能把人绕晕。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">架构简单，ServiceImpl 作为上帝类包揽一切，一杆捅到 DAO（就简单场景而言，这种 Transaction Script 也还凑合，至少实现上手都快。</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">这种人为的复杂性导致系统越来越臃肿，越来越难维护，新来的同学，往往要捂着鼻子抠几天甚至几个月，才能理清系统和业务脉络，然后又一头扎进各种 bug fix，业务修补的恶性循环中，暗无天日！</span></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><span style="color: rgba(25, 26, 31, 0.9);text-wrap: wrap;">（Transaction Script 地址：</span>https://martinfowler.com/eaaCatalog/transactionScript.html）</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></p><span id="OSC_h4_2"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">有序的应用架构</span></strong></span></h4><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">一个没有架构的应用系统，就像一堆随意堆放、杂乱无章的玩具，只有熵值，没有熵减。而一个有良好架构的应用系统，有章法、有结构，一切都显得井井有条。</span></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;text-align: center;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503041985" data-ratio="0.3731481481481482" src="https://oscimg.oschina.net/oscnet/4a4ae94e-2564-4cb0-a399-fe49a3b0e877.jpg" data-type="other" data-w="1080" referrerpolicy="no-referrer"></span></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;text-align: justify;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></section><p style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">好的组织架构会遵循一定的架构模式，大部分的组织都会按职能和业务来设计自己的架构。如果你反其道而行之，硬要把销售、财务和技术人员放在一个部门，就会显得很奇怪。</span></p><p style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><span data-cangjie-key="72:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="72:0" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">对于应用架构而言，</span><span data-cangjie-key="72:9" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="72:9" style="box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">代码是其核心组成要素，结构就是这些代码该如何被组织</span><span data-cangjie-key="72:34" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="72:34" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">，也就是要如何处理</span></span><span style="box-sizing: inherit;letter-spacing: 1px;font-size: 15px;font-weight: bold;color: rgba(25, 26, 31, 0.9);">模块（Module）</span><span style="box-sizing: inherit;letter-spacing: 1px;font-size: 15px;color: rgba(25, 26, 31, 0.9);">、</span><span style="box-sizing: inherit;letter-spacing: 1px;font-size: 15px;font-weight: bold;color: rgba(25, 26, 31, 0.9);">包（Package）</span><span style="box-sizing: inherit;letter-spacing: 1px;font-size: 15px;color: rgba(25, 26, 31, 0.9);">和</span><span style="box-sizing: inherit;letter-spacing: 1px;font-size: 15px;font-weight: bold;color: rgba(25, 26, 31, 0.9);">类（Class）</span><span style="font-size: 15px;letter-spacing: 1px;"><span data-cangjie-key="72:74" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="72:74" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">之间的关系。简而言之，</span><span data-cangjie-key="72:85" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="72:85" style="box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">应用架构就是要解决代码要如何被组织的问题。</span></span></p><p style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="box-sizing: inherit;letter-spacing: 1px;font-size: 15px;font-weight: bold;color: rgba(25, 26, 31, 0.9);"><br></span></p><span id="OSC_h4_3"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">包和模块之间的区别</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><br></p><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">包和模块这两个概念是比较容易发生混淆的。比如在《实现领域驱动设计》中，作者就说：</span></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><span data-cangjie-key="87:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="87:0" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-style: italic;">If you are using Java or C#, you are already familiar with&nbsp;</span><span data-cangjie-key="87:59" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="87:59" style="box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);font-style: italic;">Modules</span><span data-cangjie-key="87:66" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="87:66" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-style: italic;">, though you know them by another name. Java calls them packages. C# calls them namespaces.</span></span></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">他认为 Module 是 Package，这个定义容易造成混淆。特别是在使用 Maven 的时候，在 Maven 中，Module 是一个 Artifact，通常是一个 Jar 而不是 Package。比如 NBF-Falcon Framework 基础类型的工程就包括如下 3 个 Module：</span></section><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="ruby"><code><span class="code-snippet_outer">&lt;modules&gt;</span></code><code><span class="code-snippet_outer">    &lt;<span class="code-snippet__class"><span class="code-snippet__keyword">module</span>&gt;{应用<span class="code-snippet__title">Code</span>}-<span class="code-snippet__title">api</span>&lt;/<span class="code-snippet__title">module</span>&gt;</span></span></code><code><span class="code-snippet_outer">    &lt;<span class="code-snippet__class"><span class="code-snippet__keyword">module</span>&gt;{应用<span class="code-snippet__title">Code</span>}-<span class="code-snippet__title">service</span>&lt;/<span class="code-snippet__title">module</span>&gt;</span></span></code><code><span class="code-snippet_outer">    &lt;<span class="code-snippet__class"><span class="code-snippet__keyword">module</span>&gt;{应用<span class="code-snippet__title">Code</span>}-<span class="code-snippet__title">start</span>&lt;/<span class="code-snippet__title">module</span>&gt;</span></span></code><code><span class="code-snippet_outer">&lt;<span class="code-snippet__regexp">/modules&gt;</span></span></code></pre></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">的确，Module 和 Component 这两个概念很相近，很容易造成混淆。比如，在</span><span style="box-sizing: inherit;font-weight: bold;text-decoration: underline;text-underline-position: under;font-size: 15px;letter-spacing: 1px;">StackOverflow 上有一个提问</span><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">，就是问 Module 和 Component 之间区别的。获得最高赞的答案是通过 Scope 来区分的。</span></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-style: italic;font-size: 15px;letter-spacing: 1px;">The terms are similar. I generally think of a "module" as being larger than a "component". A component is a single part, usually relatively small in scope.</span></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-style: italic;font-size: 15px;letter-spacing: 1px;">「这两个概念类似，我通常认为「模块」比「组件」更大。组件是一个单独的部分，通常范围相对较小。」</span></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;text-align: left;"><span style="box-sizing: inherit;letter-spacing: 1px;font-size: 15px;color: rgba(25, 26, 31, 0.9);">（StackOverflow 地址：https://softwareengineering.stackexchange.com/questions/178927/is-there-a-difference-between-a-component-and-a-module?spm=ata.21736010.0.0.48807536xgth68）</span></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><span data-cangjie-key="109:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="109:0" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">这个回答和我的直觉反应是一致的，即 Module 比 Package 要大。根据以上信息，我在此对 Module 和 Package 进行一下定义说明，在本文中，都会遵照如下的定义。-&nbsp;</span><span data-cangjie-key="109:86" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="109:86" style="box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">模块（Module）</span><span data-cangjie-key="109:96" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="109:96" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">：和 Maven 中 Module 定义保持一致，简单理解就是 Jar。-&nbsp;</span><span data-cangjie-key="109:131" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="109:131" style="box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">包（Package）</span><span data-cangjie-key="109:141" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="109:141" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">：和 UML 中的定义类似，简单理解就是一个文件夹。</span></span></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="box-sizing: inherit;letter-spacing: 1px;font-size: 15px;color: rgba(25, 26, 31, 0.9);"><br></span></section><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">一个 Moudle 通常是由多个 Package 组成的，其关系如下图所示：</span></section><section style="margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;text-align: center;"><img class="rich_pages wxw-img" data-croporisrc="https://oscimg.oschina.net/oscnet/9c60cd1f-d4bc-498a-b008-b0c947f36489.jpg" data-cropx1="30" data-cropx2="530" data-cropy1="13" data-cropy2="349" data-imgfileid="503042078" data-ratio="0.6686626746506986" src="https://oscimg.oschina.net/oscnet/7bde28db-0d81-4d94-b7a5-48a794f593ed.jpg" data-type="jpeg" data-w="501" style="height: 336px;width: 500px;" referrerpolicy="no-referrer"></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><span id="OSC_h4_4"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">典型的业务系统</span></strong></span></h4><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">典型的业务系统都需要：</span></p><ol class="list-paddingleft-1" style="width: 577.422px;letter-spacing: 0.578px;text-wrap: wrap;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">接收 request，响应 response；</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">做业务逻辑处理，像校验参数，状态流转，业务计算等等；</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">和外部系统有联动，像数据库，微服务，搜索引擎等；</span></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><strong><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">如何正确的组织这些业务代码，让他们处于自身该存在的位置，就是我们今天要聊的话题。</span></strong></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><section style="margin-bottom: 0px;outline: 0px;box-sizing: inherit;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgba(25, 26, 31, 0.9);font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 16px;text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-size: 15px;letter-spacing: 1px;visibility: visible;"><img class="rich_pages wxw-img" data-imgfileid="503042076" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/c2180234-fd18-4cab-aab2-7e9f3070e67c.png" data-type="png" data-w="422" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;visibility: visible;color: rgb(0, 17, 255);">常见的工程结构（理论部分）</span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;visibility: visible;line-height: normal;"><br></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: justify;visibility: visible;line-height: normal;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">同样，好的应用架构，不管是六边形架构、洋葱圈架构、整洁架构等,</span><strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">都提倡以业务为核心，解耦外部依赖，分离业务复杂度和技术复杂度</span></strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">。</span></section><blockquote style="box-sizing: inherit;margin-top: 0px;margin-bottom: 0px;margin-left: 2px;padding-top: 0px;padding-left: 11px;opacity: 0.5;border-left-width: 4px;border-left-color: rgb(217, 219, 221);color: rgb(64, 64, 64);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 14.6667px;letter-spacing: normal;text-align: start;white-space: pre-wrap;background-color: rgb(255, 255, 255);"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">简单理解下业务复杂度和技术复杂度的概念：</span></section></blockquote><blockquote style="box-sizing: inherit;margin-top: 0px;margin-bottom: 0px;margin-left: 2px;padding-top: 0px;padding-left: 11px;opacity: 0.5;border-left-width: 4px;border-left-color: rgb(217, 219, 221);color: rgb(64, 64, 64);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 14.6667px;letter-spacing: normal;text-align: start;white-space: pre-wrap;background-color: rgb(255, 255, 255);"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">对于一个最简单的钱包扣钱的 user case 来说</span></section></blockquote><blockquote style="box-sizing: inherit;margin-top: 0px;margin-bottom: 0px;margin-left: 2px;padding-top: 0px;padding-left: 11px;opacity: 0.5;border-left-width: 4px;border-left-color: rgb(217, 219, 221);color: rgb(64, 64, 64);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 14.6667px;letter-spacing: normal;text-align: start;white-space: pre-wrap;background-color: rgb(255, 255, 255);"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">业务复杂度：钱包扣钱时的规则（eg：不能扣成负值）就是业务复杂度</span></section></blockquote><blockquote style="box-sizing: inherit;margin-top: 0px;margin-bottom: 0px;margin-left: 2px;padding-top: 0px;padding-left: 11px;opacity: 0.5;border-left-width: 4px;border-left-color: rgb(217, 219, 221);color: rgb(64, 64, 64);font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;font-size: 14.6667px;letter-spacing: normal;text-align: start;white-space: pre-wrap;background-color: rgb(255, 255, 255);"><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">技术复杂度：钱包最终是如何存储的，是用 mysql 还是 lindorm</span></section></blockquote><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">应用架构的本质 (核心)</span></strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">，就是要从繁杂的业务系统中提炼出共性，找到解决业务问题的最佳共同模式，为开发人员提供统一的认知，治理混乱。帮助应用系统「从混乱到有序」，</span><strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">物流技术部的工程脚手架</span></strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">就是为此而生，其核心职责就是定义良好的应用结构，提供最佳实践。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);"><br></span></p><span id="OSC_h4_5"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">分层模式</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"></h4><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">分层是一种常见的根据系统中的角色（职责拆分）和组织代码单元的常规实践。常见的分层结构如下图所示：</span></p><p style="margin-top: 8px;line-height: 1.75em;text-align: center;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><img class="rich_pages wxw-img" data-imgfileid="503041970" data-ratio="1.2418952618453865" src="https://oscimg.oschina.net/oscnet/fdc1f6dc-a414-495a-b875-65bdab468d4e.jpg" data-type="other" data-w="401" referrerpolicy="no-referrer"></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><span id="OSC_h4_6"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">CQRS 模式 (命令和查询责任分离)</span></strong></span></h4><h3 data-cangjie-key="172" data-cangjie-leaf-block="true" data-type="heading-3" style="box-sizing: inherit;margin-top: 16px;margin-bottom: 5px;font-weight: 700;color: rgb(34, 35, 40);font-size: 14pt;line-height: 1.7;font-family: &quot;zh quote&quot;, &quot;Helvetica Neue&quot;, -apple-system, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, STHeiti, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;;letter-spacing: normal;white-space: pre-wrap;background-color: rgb(255, 255, 255);text-align: left;"></h3><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"></h4><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">CQRS(Command Query Rsponsibility Segregation，命令查询分离)</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">其基本思想在于，任何一个对象的方法可以分为两大类：* 命令 (Command):不返回任何结果 (void)，但会改变对象的状态。* 查询 (Query):返回结果，但是不会改变对象的状态，对系统没有副作用。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: center;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503041971" data-ratio="0.8719806763285024" src="https://oscimg.oschina.net/oscnet/05ec1d42-e967-428a-88fd-74f9ad2e6c3c.jpg" data-type="other" data-w="828" referrerpolicy="no-referrer"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: justify;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><span id="OSC_h4_7"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">六边形架构</span></strong></span></h4><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">六边形架构是 Alistair Cockburn 在 2005 年提出，解决了传统的分层结构所带来的问题，实际上它也是一种分层架构，只不过不是上下，而是变成了内部和外部（如下图所示）。</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: center;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><img class="rich_pages wxw-img" data-imgfileid="503041978" data-ratio="0.5859613428280773" src="https://oscimg.oschina.net/oscnet/a929931a-4713-46c2-9a7d-5227f819e50c.jpg" data-type="other" data-w="983" referrerpolicy="no-referrer"></span></section><p style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: justify;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">六边形架构又称为端口-适配器架构，这个名字更容器理解。六边形架构将系统分为内部（内部六边形）和外部，内部代表了应用的业务逻辑，外部代表应用的驱动逻辑、基础设施或其他应用。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><section style="margin-bottom: 8px;line-height: 1.75em;margin-top: 8px;"><span style="font-size: 15px;letter-spacing: 1px;"><span data-cangjie-key="203:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="203:0" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">适配器分为两种类型（如下图所示），左侧代表 UI 的适配器被称为</span><span data-cangjie-key="203:32" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="203:32" style="box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">主动适配器（Driving Adapters）</span><span data-cangjie-key="203:55" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="203:55" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">，因为是它们发起了对应用的一些操作。而右侧表示和后端工具链接的适配器，被称为</span><span data-cangjie-key="203:93" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="203:93" style="box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">被动适配器（Driven Adapters）</span><span data-cangjie-key="203:115" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="203:115" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">，因为它们只会对主适配器的操作作出响应。</span></span></section><section style="margin-bottom: 8px;line-height: 1.75em;margin-top: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></section><section style="margin-bottom: 8px;line-height: 1.75em;text-align: center;margin-top: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><img class="rich_pages wxw-img" data-imgfileid="503041979" data-ratio="0.6032863849765259" src="https://oscimg.oschina.net/oscnet/65ea2855-2026-4c61-a8fe-7ed93622262d.jpg" data-type="other" data-w="852" referrerpolicy="no-referrer"></span></section><section style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: justify;margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><span id="OSC_h4_8"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">洋葱圈架构</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">洋葱架构与六边形架构有着相同的思路，它们都通过编写适配器代码将应用核心从对基础设施的关注中解放出来，避免基础设施代码渗透到应用核心之中。这样应用使用的工具和传达机制都可以轻松地替换，可以一定程度地避免技术、工具或者供应商锁定。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">不同的是洋葱架构还告诉我们，企业应用中存在着不止两个层次，它在业务逻辑中加入了一些在领域驱动设计的过程中被识别出来的层次（Application，Domain Service，Domain model，Infrastructure 等）</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">另外，它还有着脱离真实基础设施和传达机制应用仍然可以运行的便利，这样可以使用 mock 代替它们方便测试。</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;line-height: 1.75em;text-align: center;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503041980" data-ratio="0.7367021276595744" src="https://oscimg.oschina.net/oscnet/49021b5e-1817-4714-a414-96acb32c49ff.jpg" data-type="other" data-w="752" referrerpolicy="no-referrer"></span></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">在洋葱架构中，明确规定了依赖的方向：</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">外层依赖内层；</span></p></li><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">内层对外层无感知。</span></p></li></ol><p style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: justify;margin-top: 8px;line-height: 1.75em;"><br></p><section style="margin-bottom: 0px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042077" data-ratio="0.3056872037914692" data-s="300,640" src="https://oscimg.oschina.net/oscnet/f3e8a852-7090-467f-aa4f-7254eb06b14a.png" data-type="png" data-w="422" style="outline: 0px;letter-spacing: 0.544px;font-size: 14px;visibility: visible !important;width: 117px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;font-size: 18px;color: rgb(0, 17, 255);">应用架构的核心</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">纵观上面介绍的所有应用架构，我们可以发现一个共同点，就是「<strong>核心业务逻辑和技术细节分离</strong>」。</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: center;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-croporisrc="https://oscimg.oschina.net/oscnet/459aa1ff-6a4e-4471-aa31-07f2f6966414.jpg" data-cropx1="73.77162629757785" data-cropx2="1016.6089965397924" data-cropy1="39.58477508650519" data-cropy2="662.1453287197232" data-imgfileid="503042080" data-ratio="0.6606574761399788" src="https://oscimg.oschina.net/oscnet/3ebfee95-a24f-47bd-b474-dc96ad4f3a87.jpg" data-type="jpeg" data-w="943" style="width: 524px;height: 346px;" referrerpolicy="no-referrer"></span></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">是的，</span><strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">六边形架构、洋葱圈架构的核心职责就是要做核心业务逻辑和技术细节的分离和解耦</span></strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">试想一下，业务逻辑和技术细节糅杂在一起的情况，所有的代码都写在 ServiceImpl 里面，前几行代码是做 validation 的事，接下来几行是做 convert 的事，然后是几行业务处理逻辑的代码，穿插着，我们需要通过 RPC 或者 DAO 获取更多的数据，拿到数据后，又是几行 convert 的代码，在接上一段业务逻辑代码，然后还要落库，发消息.....等等。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">再简单的业务，按照上面这种写代码的方式，都会变得复杂，难维护。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">因此，我认为应用架构的核心使命就是要</span><strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">分离业务逻辑和技术细节</span></strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">。</span><strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">让核心业务逻辑可以反映领域模型和领域应用</span></strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">，可以复用，可以很容易被看懂。</span><strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">让技术细节在辅助实现业务功能的同时，可以被替换</span></strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">。</span></p><section style="margin-top: 8px;margin-bottom: 8px;letter-spacing: 0.578px;text-wrap: wrap;line-height: 1.75em;"><br></section><section style="margin-bottom: 0px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042084" data-ratio="0.328125" data-s="300,640" data-type="png" data-w="256" src="https://oscimg.oschina.net/oscnet/d423be6a-24b5-4179-bfb2-a4fc1aa1748b.png" style="outline: 0px;letter-spacing: 0.544px;font-size: 16px;visibility: visible !important;width: 122px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);">如何正确的进行工程划分？</span></section><section style="margin-bottom: 0px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);line-height: 1.75em;margin-top: 8px;"><br></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">这些应用架构思想虽然很好，但我们很多同学还是「<strong>不讲 Co 德，明白了很多道理，可还是过不好这一生</strong>」。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">所以我们接下来聊聊这个偏工程实践的话题。</span></p><section style="margin-bottom: 0px;text-wrap: wrap;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);line-height: 1.75em;margin-top: 8px;"><br></section><span id="OSC_h4_9"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">业务工程中最基本的 Module 划分</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><br></span></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">上文提到了 Moudle 和包之间的关系，我们有个基本共识，Module 比 Package（包）要大一些。那我们基本的分层结构又应该是怎么样的呢，这里列两种业务工程中最常见的 Module 之间的依赖关系：</span><br></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_10"></span><h4 data-cangjie-key="273" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);">非依赖倒置下的 Module 分层</span></h4></li></ul><section style="text-align: center;margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><img class="rich_pages wxw-img" data-imgfileid="503041991" data-ratio="1.1523046092184368" src="https://oscimg.oschina.net/oscnet/749413df-dbfc-4d07-b658-1fc03b2dafdd.jpg" data-type="other" data-w="499" referrerpolicy="no-referrer"></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_11"></span><h4 data-cangjie-key="286" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);">依赖倒置（DIP）下的 Module 分层（推荐）</span></h4></li></ul><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: center;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503042001" data-ratio="1.2995594713656389" src="https://oscimg.oschina.net/oscnet/d3163f4a-3913-4082-bc7d-6b28aad6c6e6.jpg" data-type="other" data-w="454" referrerpolicy="no-referrer"></span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">依赖倒置（DIP）:</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">简单说依赖倒置就是你不要直接依赖我，你和我都同时依赖一个接口（所以有时候也叫面向接口的编程），这样我们之间就解耦了，依赖和被依赖方都可以自由改动了。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">依赖倒置下的 Module 分层的好处</span></p></li></ul><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="310:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="310:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);"><br></span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="310:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="310:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">Domain 层会变得更加纯粹，完全摆脱了对技术细节</span><span data-cangjie-key="310:25" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="310:25" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">（以及技术细节带来的复杂度）的依赖，只需要安心处理业务逻辑就好（我们经常说的<strong>核心业务逻辑</strong>稳定其实就是 Domain 层的稳定，上文中的 Domain 层完全依赖于接口和内部的模型，屏蔽了技术细节，如果我们更换技术组件，也只需要更换技术细节的实现即可）</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="316:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="316:0" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">并行开发</span><span data-cangjie-key="316:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="316:4" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">：只要在 Domain 和 Infrastructure 约定好接口，可以有两个同学并行编写 Domain 和 Infrastructure 的代码</span><br></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="319:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="319:0" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">可测试性</span><span data-cangjie-key="319:4" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="319:4" style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">：没有任何依赖的 Domain 里面都是 POJO 的类，单元测试将会变得非常方便，也非常适合 TDD 的开发。</span><br></p></li></ol><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><span id="OSC_h5_12"></span><h5 data-cangjie-key="320" data-cangjie-leaf-block="true" data-type="heading-5" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">分层职责</span></h5><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 11.7656px;line-height: 1.4;font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">1.</span><span data-cangjie-key="325:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="325:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">适配层（Adapter Layer）：负责对前端展示（web，wireless，wap）的路由和适配，对于传统 B/S 系统而言，<strong>adapter 就相当于 MVC 中的 controller</strong>；</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 8px;line-height: 1.4;transform: translateY(-4.5%);font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">○</span><span data-cangjie-key="325:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="325:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><strong>用户展现信息以及解释用户命令</strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 8px;line-height: 1.4;transform: translateY(-4.5%);font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">○</span><span data-cangjie-key="325:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="325:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><strong>大部分工程为 start 模块</strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 11.7656px;line-height: 1.4;font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">2.</span><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">应用层/应用服务层（Application Layer）：主要负责获取输入，组装上下文，参数校验，调用领域层做业务处理，如果需要的话，发送消息通知等。层次是开放的</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 8px;line-height: 1.4;transform: translateY(-4.5%);font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">○</span><span data-cangjie-key="325:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="325:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><strong>应用层也可以绕过领域层，直接访问基础实施层 (CQRS 模式中对于查询的说法就是可以绕过 DomainModel 之间查询数据)</strong>；</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 8px;line-height: 1.4;transform: translateY(-4.5%);font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">○</span><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">很薄的一层，用来协调应用的活动。它不包含业务逻辑</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 8px;line-height: 1.4;transform: translateY(-4.5%);font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">○</span><span data-cangjie-key="325:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="325:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><strong>同样的一个 Service 应可被不同的 Adapter（Web、远程调用、异步消息）复用）</strong>。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 8px;line-height: 1.4;transform: translateY(-4.5%);font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">○</span><span data-cangjie-key="325:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="325:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><strong>适合处理事务、高层次日志 (oplog)、安全（权限）</strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 11.7656px;line-height: 1.4;font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">3.</span><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">领域层（Domain Layer）：主要是封装了核心业务逻辑，并通过领域服务（Domain Service）和领域对象（Domain Entity）的方法对 App 层提供业务实体和业务逻辑计算。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 8px;line-height: 1.4;transform: translateY(-4.5%);font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">○</span><span data-cangjie-key="325:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="325:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><strong>领域是应用的核心，不依赖任何其他层次</strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 8px;line-height: 1.4;transform: translateY(-4.5%);font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">○</span><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">通常每一个聚合（aggregate）一个 package。聚合包含实体（entity），值对象（value object），领域事件（domain event），资源库（repository，仅接口）接口和一些工厂（Factory）。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 11.7656px;line-height: 1.4;font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">4.</span><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">基础实施层（Infrastructure Layer）：主要负责技术细节问题的处理，比如数据库的 CRUD、搜索引擎、文件系统、分布式服务的 RPC 等。此外，领域防腐的重任也落在这里，外部依赖需要通过防腐层（Anti-Corruption） 实现的转义处理，才能被上面的 App 层和 Domain 层使用。</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><span id="OSC_h4_13"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">如果我要提供一个 SDK 对外提供服务怎么办？</span></strong></span></h4><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: center;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503042002" data-ratio="0.9544764795144158" src="https://oscimg.oschina.net/oscnet/78d059c9-4ae5-4089-aca0-5f8422ee37f4.jpg" data-type="other" data-w="659" referrerpolicy="no-referrer"></span></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">Module 的定义应该遵循自身业务需求<strong>（如无必要勿增实体）</strong></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">上文中如果需要一个 api 包则增加一个 API Module 包即可</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><strong><span style="color: rgba(25, 26, 31, 0.9);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;caret-color: transparent;">这里的 client 包不要依赖 Domain,这会引入大量无关依赖，对包的使用者造成困扰</span></strong></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></section><span id="OSC_h4_14"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">包结构的划分</span></strong></span></h4><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">分层是属于大粒度的职责划分，太粗，我们有必要往下再 down 一层，细化到包结构的粒度，才能更好的指导我们的工作。</span></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;"><span data-cangjie-key="386:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="386:0" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">还是拿一堆玩具举例子，分层类似于拿来了一个架子，分包类似于在每一层架子上又放置了多个收纳盒。</span><span data-cangjie-key="386:46" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="386:46" style="box-sizing: inherit;font-weight: bold;color: rgba(25, 26, 31, 0.9);">所谓的内聚，就是把功能类似的玩具放在一个盒子里，这样可以让应用结构清晰，极大的降低系统的认知成本和维护成本</span><span data-cangjie-key="386:99" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="386:99" style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">。</span></span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;line-height: 1.75em;text-align: center;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503042003" data-ratio="0.2898148148148148" src="https://oscimg.oschina.net/oscnet/d538f5d3-154d-43a4-a169-3328b83b9ff5.jpg" data-type="other" data-w="1080" referrerpolicy="no-referrer"></span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">那么，对于一个后端应用来说，应该需要哪些收纳盒。</span></p><p style="margin-top: 8px;line-height: 1.75em;text-align: center;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><img class="rich_pages wxw-img" data-croporisrc="https://oscimg.oschina.net/oscnet/86cfb0f7-2701-4827-ad31-6c79eaf3d889.jpg" data-cropx1="29.420415224913498" data-cropx2="870.2249134948097" data-cropy1="80.51903114186851" data-cropy2="551.2456747404843" data-imgfileid="503042081" data-ratio="0.5600475624256838" src="https://oscimg.oschina.net/oscnet/50319171-c58a-43c5-bd57-181b256d2a91.jpg" data-type="jpeg" data-w="841" style="width: 543px;height: 304px;" referrerpolicy="no-referrer"></span></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">各个包结构的简要功能描述，如下表所示：</span></section><section style="text-align: center;margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><img class="rich_pages wxw-img" data-galleryid="" data-imgfileid="503042083" data-ratio="1.103305785123967" data-s="300,640" src="https://oscimg.oschina.net/oscnet/76aa5bfd-ee6e-4774-8761-982379ec70f0.png" data-type="png" data-w="726" style="" referrerpolicy="no-referrer"></section><section style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_15"></span><h4 data-cangjie-key="874" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgb(0, 17, 255);">你可能会有疑问，为什么 Domain 的 model 是可选的？</span><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"></span></h4></li></ul><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">因为是应用架构，不是 DDD 架构。对于应用架构来说：<strong>无有必要勿增实体</strong>。领域模型对设计能力要求很高，没把握用好，一个错误的抽象还不如不抽象，宁可不要用，也不要滥用，<strong>不要为了 DDD 而 DDD</strong>。</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">问题的关键是要看，新增的模型没有给你带来收益。比如<strong>有没有帮助系统解耦，有没有提升业务语义表达能力的提升，有没有提升系统的可维护性和可测性等等</strong>。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">模型虽然可选，但 DDD 的思想是一定要去学习和贯彻的，特别是统一语言、边界上下文、<strong>防腐层的思想</strong>，值得深入学习，仔细体会。实际上，应用架构里面的很多设计思想都来自于 DDD。其中就包括领域包的设计。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">前面的包定义，都是功能维度的定义。为了兼顾领域维度的内聚性，我们有必要对包结构进行一下微调，即<strong>顶层包结构应该是按照领域划分，让领域内聚</strong>。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">也就是说，我们要综合考虑功能和领域两个维度包结构定义。<strong>按照领域和功能两个维度分包策略</strong>，最后呈现出来的，是如下图所示的顶层包节点是领域名称，领域之下，再按功能划分包</span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><span style="font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);letter-spacing: 1px;"><br></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;text-align: center;"><span style="font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);letter-spacing: 1px;"><img class="rich_pages wxw-img" data-croporisrc="https://oscimg.oschina.net/oscnet/32124086-f1bd-4c9c-9c9c-2bbe4c3b78e7.jpg" data-cropx1="0" data-cropx2="1116" data-cropy1="90.74740484429066" data-cropy2="843.7577854671281" data-imgfileid="503042082" data-ratio="0.6759259259259259" src="https://oscimg.oschina.net/oscnet/73ed6593-5145-4565-a5a4-c747195ebd23.jpg" data-type="jpeg" data-w="1080" style="width: 578px;height: 390px;" referrerpolicy="no-referrer"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">下图是一个例子，按照分包策略，我们在每一个 Module 下面首先按照领域做一个顶层划分，然后在领域内，再按照功能进行分包。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: center;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><img class="rich_pages wxw-img" data-imgfileid="503042009" data-ratio="0.5" src="https://oscimg.oschina.net/oscnet/41867f9b-46b8-49e0-9564-3eb91352c744.jpg" data-type="other" data-w="1080" referrerpolicy="no-referrer"></span></p><p style="margin-bottom: 8px;margin-top: 8px;line-height: 1.75em;"><br></p><p style="margin: 0px;text-wrap: wrap;outline: 0px;background-color: rgb(255, 255, 255);font-size: 11pt;font-family: DengXian;color: rgb(0, 0, 0);letter-spacing: normal;text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042085" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/57d84e5a-add9-4bf6-8b90-09f999aec8bc.png" data-type="png" data-w="256" style="outline: 0px;color: rgb(34, 34, 34);font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 133px !important;" referrerpolicy="no-referrer"></p><p style="line-height: 1.75em;text-align: center;margin: 0px;"><span style="box-sizing: inherit;color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);">如何解决应用架构中的问题</span></p><section style="margin-top: 8px;line-height: 1.75em;text-align: justify;margin-bottom: 8px;"><br></section><span id="OSC_h4_16"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">应用架构中如何处理解耦问题</span></strong></span></h4><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"></h4><section style="margin-top: 8px;line-height: 1.75em;text-align: justify;margin-bottom: 8px;"><br></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">「<strong>高内聚，低耦合</strong>」这句话，你工作的越久，就越会觉得其有道理。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">所谓耦合就是联系的紧密程度，只要有依赖就会有耦合，不管是进程内的依赖，还是跨进程的 RPC 依赖，都会产生耦合。</span></strong><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">依赖不可消除，同样，耦合也不可避免。我们所能做的不是消除耦合，而是把耦合降低到可以接受的程度。在软件设计中，有大量的设计模式，设计原则都是为了解耦这一目的。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">在 DDD 中有一个很棒的解耦设计思想——防腐层（Anti-Corruption），简单说，就是应用不要直接依赖外域的信息，要把外域的信息转换成自己领域上下文（Context）的实体再去使用，从而实现本域和外部依赖的解耦。</span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_17"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgb(0, 17, 255);">防腐层设计在应用架构中的应用</span></h4></li></ul><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">我们把防腐层（Anti-Corruption）这个概念进行泛化，将数据库、搜索引擎等数据存储都列为外部依赖的范畴。利用依赖倒置，统一使用防腐层（Anti-Corruption）/Repository 等接口来实现业务领域和外部依赖的解耦。</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);">其实现方式如下图所示，主要是在 Domain 层定义防腐层（Anti-Corruption）/Repository 等接口，然后在 Infrastructure 提供防腐层（Anti-Corruption） 接口的实现。</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: center;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><img class="rich_pages wxw-img" data-croporisrc="https://oscimg.oschina.net/oscnet/0062cf11-1b19-435b-a846-fc07d501a2ec.jpg" data-cropx1="32.77162629757785" data-cropx2="1683.2698961937717" data-cropy1="32.77162629757785" data-cropy2="723.955017301038" data-imgfileid="503042087" data-ratio="0.41944444444444445" src="https://oscimg.oschina.net/oscnet/dc7e6e5c-a869-4f07-a24a-8693b7e2b068.jpg" data-type="jpeg" data-w="1080" style="width: 554px;height: 232px;" referrerpolicy="no-referrer"></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_18"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">高内聚低耦合在包划分中的体现</span></h4></li></ul><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">刚刚我们提到了在包划分的过程中，推荐先按照领域分包，这其实就是一种高内聚低耦合，这样做的好处有以下几方面：</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">明确这个包下面提供的类和功能应该放在一起考虑</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">通过包的可见性现在自身领域服务 (功能) 对外的可见性（重点）</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">a.写 java 的同学经常会给领域模型 DomainModel 上直接加上 Setter 方法，这样会比较方便构造领域对象，但是这样的做法其实违反了开闭原则，意味着你的领域对象中的所有属性对外都是暴露的，可以直接通过 set 的方式而不是通过领域对象提供的方法来进行变更，这对领域对象的稳定性来说很不友好</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 11.7656px;line-height: 1.4;font-size: 15px;letter-spacing: 1px;font-family: Arial !important;">b.</span><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">通过包的可见性来暴露自身想暴露的能力</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">这里推荐一种比较好的做法:</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">对于 setter 方法以及内部调用的方法设置为</span><strong><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">包可见（package private）</span></strong><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"></span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">通过构造函数/Factory(复杂的聚合根) 创建领域对象</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></section><span id="OSC_h4_19"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">如何对齐文中的概念和实际业务中的 Module?</span></strong></span></h4><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">由于各个团队之间自身规范的问题以及建项目的同学自身对应用架构的理解不同，你可能会发现如下几种情况：</span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;font-weight: bold;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">业务系统中的 Module 层数和文中描述的不同</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">业务复杂度决定了包的层级，对于简单的 web 系统，单 module 其实更能降低架构复杂度</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="972:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="972:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">拆分粒度不同，有些工程可能会拆分出类似 Infrastruct-client(</span><strong><span data-cangjie-key="972:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="972:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">对应上文中的防腐层（Anti-Corruption</span></strong><span data-cangjie-key="972:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="972:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">）Interface) 这样的 Module</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">业务诉求不同：有些业务系统并不需要提供 API，而是通过 DTS/Controller 驱动业务，自然也就不需要 API Module</span></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 11.7656px;line-height: 1.4;font-size: 15px;letter-spacing: 1px;font-family: Arial !important;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">业务系统中的 Module 命名和文中描述不同</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">每个人对 module 的命名问题，实际还是要看这个 module 承载的业务职责</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="984:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="984:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">模块的职责不同，比方说</span><span style="box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">对外提供的富客户端一般以 Client 命名，接口包一般就叫 API</span><span data-cangjie-key="984:42" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="984:42" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;color: rgb(0, 0, 0);">了</span></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;font-weight: bold;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">业务系统中 Module 的依赖关系和文中不同</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">有没有可能是分层太多倒置后来的同学也搞不清楚该怎么依赖了，导致的错误依赖</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">文中也提供了好几种依赖，就像地心说和日心说一样，对于应用结构的认识是有一个过程的</span></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;display: inline-block;margin-right: 11.7656px;line-height: 1.4;font-size: 15px;letter-spacing: 1px;font-family: Arial !important;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;font-weight: bold;color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;">业务系统中的包划分和文中不同</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">很多业务系统直接按照功能分包了，比如 repository 放一起 (我认为对于实现来说是 ok 的，对于领域模型来说还是要有领域的概念)</span></p></li></ol><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h3_20"></span><h3 data-cangjie-key="1000" data-cangjie-leaf-block="true" data-type="heading-3" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;font-size: 15px;letter-spacing: 1px;color: rgb(0, 17, 255);">那么如何找到这个工程目前的工程规范呢？</span></h3></li></ul><h3 data-cangjie-key="1000" data-cangjie-leaf-block="true" data-type="heading-3" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></h3><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><span id="OSC_h3_21"></span><h3 data-cangjie-key="1000" data-cangjie-leaf-block="true" data-type="heading-3" style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;">如果有工程结构的文档，优先阅读（省时间）</h3></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">找一个 Use Case，从入口侧去看文中的业务开发中涉及到的业务逻辑写在了哪个包中</span></p></li></ol><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">注：Use Case 是《架构整洁之道》里面的术语，简单理解就是响应一个 Request 的处理过程</span></section><section style="margin-bottom: 8px;"><span data-cangjie-key="1014:0" data-cangjie-leaf="true" data-testid="1014:0" style="box-sizing: inherit;"><br></span></section><span id="OSC_h4_22"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">如果业务代码中的应用架构不合理，你有自己的想法怎么办？</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-weight: bold;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"><br></span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-weight: bold;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">工程刚开始搭建阶段：</span><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">大家团队内进行讨论，并产出应用架构图，统一领域语言：module 分布、包命名规范、类命名规范等，再进行开发</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-weight: bold;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">工程不复杂，且大家都认可新的应用架构：</span><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">拉分支修改，改造后进行功能的回归测试，组内 review 完没问题将变更合并入主干分支</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="color: rgb(0, 0, 0);font-weight: bold;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">工程比较复杂或者你只是想让你这部分代码符合你的规范：</span><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">并不建议这样做，对于一个应用工程来说，不同代码风格往往比合理的工程架构更致命，会导致工程结构混乱，大家理解困难，一个统一的工程规范远比合理更重要</span></p></li></ol><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042086" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/cb72549b-6a33-43ff-9174-1575cd6b8307.png" data-type="png" data-w="256" style="outline: 0px;color: rgb(51, 51, 51);font-size: 20px;font-weight: bold;letter-spacing: 0.578px;visibility: visible !important;width: 134px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;font-size: 18px;color: rgb(0, 17, 255);">如何编写业务代码？</span></section><p style="margin-top: 8px;outline: 0px;line-height: 1.75em;margin-bottom: 8px;"><br></p><span id="OSC_h4_23"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;outline: 0px;letter-spacing: 0.544px;text-wrap: wrap;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">DDD 下业务代码的组织方式</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_24"></span><h4 data-cangjie-key="1052" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);">「写操作」在 DDD 中的实现 3 种场景，分别是</span></h4></li></ul><section style="margin-bottom: 8px;text-align: justify;"><span style="box-sizing: inherit;color: rgb(51, 51, 51);font-size: 15px;letter-spacing: 1px;"><br></span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><span id="OSC_h4_25"></span><h4 data-cangjie-key="1052" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: justify;"><span style="color: rgb(51, 51, 51);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">通过聚合根完成业务请求，这是 DDD 完成业务请求的典型方式</span></h4></li><li><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: justify;"><span style="color: rgb(51, 51, 51);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">通过 Factory 完成聚合根的创建</span></section></li><li><p style="margin-top: 8px;line-height: 1.75em;text-align: justify;margin-bottom: 8px;"><span style="color: rgb(51, 51, 51);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">通过 DomainService 完成业务请求</span></p></li></ol><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><br></span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><img class="rich_pages wxw-img" data-backh="288" data-backw="578" data-imgfileid="503042088" data-ratio="0.49722222222222223" src="https://oscimg.oschina.net/oscnet/8939ad18-3832-4d6d-a27f-74a94709eb8b.jpg" data-type="other" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h4_26"></span><h4 data-cangjie-key="1071" data-cangjie-leaf-block="true" data-type="heading-4" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);">读操作，同样给出了 3 种方式</span></h4></li></ul><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">基于领域模型的读操作 (读写操作糅合在了一起，不推荐)</span></p></li><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">基于数据模型的读操作 (绕过聚合根和资源库，直接返回数据，推荐)</span></p></li><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">CQRS(读写操作分别使用不同的数据库，比较重)</span></p></li></ol><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">（图中的 ReadModel 可以理解为 DTO）</span></section><p style="margin-top: 8px;line-height: 1.75em;text-align: center;margin-bottom: 8px;"><span style="letter-spacing: 1px;font-size: 15px;box-sizing: inherit;color: rgba(25, 26, 31, 0.9);"><img class="rich_pages wxw-img" data-imgfileid="503042089" data-ratio="0.6407407407407407" src="https://oscimg.oschina.net/oscnet/19fe59c6-305f-47e9-ab18-3b7054b9190f.jpg" data-type="other" data-w="1080" referrerpolicy="no-referrer"></span></p><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><ul class="list-paddingleft-1" style="list-style-type: disc;"><li style="color: rgb(0, 17, 255);"><span id="OSC_h3_27"></span><h3 data-cangjie-key="1093" data-cangjie-leaf-block="true" data-type="heading-3" style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;color: rgb(0, 17, 255);">对于业务代码来说，怎么提炼出业务逻辑和技术细节？</span></h3></li></ul><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">对 Use Case 进行过程分解</span></p></li><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">对象模型建设</span></p></li></ol><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;text-align: center;"><img class="rich_pages wxw-img" data-backh="289" data-backw="578" data-imgfileid="503042090" data-ratio="0.5" src="https://oscimg.oschina.net/oscnet/7e7560a4-ca89-42f8-9c49-bbf2685d179a.jpg" data-type="other" data-w="1080" style="width: 100%;height: auto;" referrerpolicy="no-referrer"></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;">举个例子，在上架过程中，有一个校验是检查库存的，其中对于组合品（CombineBackOffer）其库存的处理会和普通品不一样。原来的代码是这么写的：</span></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="typescript"><code><span class="code-snippet_outer">boolean isCombineProduct = supplierItem.getSign().isCombProductQuote();</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">// supplier.usc warehouse needn't check</span></code><code><span class="code-snippet_outer">if (WarehouseTypeEnum.isAliWarehouse(supplierItem.getWarehouseType())) {</span></code><code><span class="code-snippet_outer">// quote warehosue check</span></code><code><span class="code-snippet_outer">if (CollectionUtil.isEmpty(supplierItem.getWarehouseIdList()) &amp;&amp; !isCombineProduct) {</span></code><code><span class="code-snippet_outer">    throw ExceptionFactory.makeFault(ServiceExceptionCode.SYSTEM_ERROR, "亲，不能发布 Offer，请联系仓配运营人员，建立品仓关系！");</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer">// inventory amount check</span></code><code><span class="code-snippet_outer">Long sellableAmount = 0L;</span></code><code><span class="code-snippet_outer">if (!isCombineProduct) {</span></code><code><span class="code-snippet_outer">    sellableAmount = normalBiz.acquireSellableAmount(supplierItem.getBackOfferId(), supplierItem.getWarehouseIdList());</span></code><code><span class="code-snippet_outer">} else {</span></code><code><span class="code-snippet_outer">    //组套商品</span></code><code><span class="code-snippet_outer">    OfferModel backOffer = backOfferQueryService.getBackOffer(supplierItem.getBackOfferId());</span></code><code><span class="code-snippet_outer">    if (backOffer != null) {</span></code><code><span class="code-snippet_outer">        sellableAmount = backOffer.getOffer().getTradeModel().getTradeCondition().getAmountOnSale();</span></code><code><span class="code-snippet_outer">    }</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer">if (sellableAmount &lt; 1) {</span></code><code><span class="code-snippet_outer">    throw ExceptionFactory.makeFault(ServiceExceptionCode.SYSTEM_ERROR, "亲，实仓库存必须大于 0 才能发布，请确认已补货.\r[id:" + supplierItem.getId() + "]");</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="color: rgb(0, 0, 0);letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;">然而，如果我们在系统中引入领域模型之后，其代码会简化为如下：</span><span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">﻿</span></p><section class="code-snippet__fix code-snippet__js"><pre class="code-snippet__js" data-lang="javascript"><code><span class="code-snippet_outer">if(backOffer.isCloudWarehouse()){</span></code><code><span class="code-snippet_outer">    return;</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">if (backOffer.isNonInWarehouse()){</span></code><code><span class="code-snippet_outer">    throw new BizException("亲，不能发布 Offer，请联系仓配运营人员，建立品仓关系！");</span></code><code><span class="code-snippet_outer">}</span></code><code><span class="code-snippet_outer"><br></span></code><code><span class="code-snippet_outer">if (backOffer.getStockAmount() &lt; 1){</span></code><code><span class="code-snippet_outer">    throw new BizException("亲，实仓库存必须大于 0 才能发布，请确认已补货.\r[id:" + backOffer.getSupplierItem().getCspuCode() + "]");</span></code><code><span class="code-snippet_outer">}</span></code></pre></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;">有没有发现，使用模型的表达要清晰易懂很多，而且也不需要做关于组合品的判断了，因为我们在系统中引入了更加贴近现实的对象模型（CombineBackOffer 继承 BackOffer），通过对象的多态可以消除我们代码中的大部分的 if-else<span style="color: rgb(0, 0, 0);font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">﻿</span></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(34, 34, 34);text-align: center;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042091" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/f5175d58-58b3-4bdb-b562-642dcc9ac95c.png" data-type="png" data-w="256" style="outline: 0px;letter-spacing: 0.544px;visibility: visible !important;width: 136px !important;" referrerpolicy="no-referrer"></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 1px;font-size: 18px;color: rgb(0, 17, 255);">常见问题</span></section><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></p><span id="OSC_h4_28"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">API 层</span></strong></span></h4><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"><br></span></p><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">API 包一般放什么内容？</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">对外暴露接口：直接代理外界需要访问的领域服务。</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">Facade 模式：对 Domain 层的能力，基于易用性的目的，进行一定的重组；比如多个领域服务合一个 API、一个领域服务拆多个 API</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">对于一些通用的判断方法可以放在里面</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">通用的异常类型</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">通用的枚举</span></p></li></ol><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></section><span id="OSC_h4_29"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;margin-bottom: 8px;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Application 层</span></strong></span></h4><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;font-weight: bold;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">Application 层即 API 的设计要划分领域吗？</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">需要划分领域，细节可能和 Domain 层存在一些差异,由于属于顶层服务</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;font-weight: bold;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">API 和 Domain Service 都是接口，它们的区别是什么？</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">API 是暴露给外部系统，希望外部系统感知的能力；领域服务的能力仅暴露在系统内部。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">API 暴露的能力一般比领域服务少，因为领域服务还要给 JobProcessor、MessageListener 或其它领域服务提供服务。</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;font-weight: bold;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">分层原则（也是任何分层分域的一般准则）</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">架构解决的是变化的问题。根据子系统变化的快慢，对子系统进行分层，从而隔离变化。例如上面的基础域变化慢，业务域变化快，分开。</span></section></li></ol><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></section><span id="OSC_h4_30"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Domain</span></strong></span></h4><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-weight: bold;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">为什么 Domain 层和 Infrastructure 层要依赖倒置？</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">通过依赖倒置，消除 Domain 层的外部依赖，完全隔离外部变化，实现自洽。</span></p></li></ol><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></p><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;font-weight: bold;letter-spacing: 1px;">Repository 和防腐层（Anti-Corruption）是什么？</span></p><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">Repository 就是 DDD 里的领域仓库，负责领域实体的生命周期管理（可以简单理解为增删改查）</span></p></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span data-cangjie-key="1204:0" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="1204:0" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;font-weight: bold;">防腐层（Anti-Corruption）</span><span data-cangjie-key="1204:20" data-cangjie-leaf="true" data-cangjie-mark="true" data-testid="1204:20" style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;box-sizing: inherit;">是为了隔离变化而抽象出来的概念，负责和外部系统打交道。</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">﻿</span><br></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;font-weight: bold;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">Repository 和防腐层（Anti-Corruption）的区别是什么？</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">从代码结构上来看是一样的。如果按设计模式来解读，本质上都是 Adaptor。其中，本领域充当 Adaptor 中的 client 角色。即 Repository 和防腐层（Anti-Corruption）的接口签名是基于本领域的需求而设计（而不是基于外部系统的签名来设计）。这也是为什么 Repository 和防腐层（Anti-Corruption）要按域来组织，而不是按外部系统来组织。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">从语义上来讲，Repository 偏数据，防腐层（Anti-Corruption）偏功能。这种语义区分能提升系统可维护性。</span></section></li></ol><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><span id="OSC_h4_31"></span><h4 data-lake-id="ca6fa186228ff7efaa653334195896c8" data-wording="true" style="margin-top: 0.5em;margin-bottom: 8px;text-wrap: wrap;outline: 0px;letter-spacing: 0.544px;color: rgb(34, 34, 34);background-color: rgb(255, 255, 255);font-family: -apple-system-font, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;visibility: visible;line-height: 1.75em;"><span style="outline: 0px;visibility: visible;letter-spacing: 1px;color: rgb(0, 17, 255);"><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">▐</span></strong><strong style="outline: 0px;visibility: visible;"><span style="outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">&nbsp;&nbsp;</span></strong><strong style="outline: 0px;visibility: visible;"><span style="color: rgb(0, 17, 255);outline: 0px;font-family: Optima-Regular, PingFangTC-light;visibility: visible;">Infrastructure</span></strong></span></h4><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-weight: bold;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-weight: bold;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">什么决定了是放 Domain 层还是 Infrastructure 层？</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">约定：</span><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">访问中间件/外部系统的，放基础设施层。</span><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">领域层只放领域逻辑，从而隔离变化。</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;font-weight: bold;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;font-weight: bold;letter-spacing: 1px;">基础设施从字面上看偏基础，为什么把中间件、外部系统放这里？</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">按照洋葱圈架构的说法，这些其实都是适配器，都应该属于外部依赖的范畴</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;font-weight: bold;letter-spacing: 1px;"><br></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;font-weight: bold;letter-spacing: 1px;">Utils 放哪里，是不是基础设施的一部分？</span></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">不建议：</span><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;">如果认为工具是基础设施的一部分，则 Domain 层甚至 API 层将感知 Infrastructure 层，破坏了依赖单向性。</span></section></li><li><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;"><span style="font-family:Arial;">建议</span></span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">基础工具抽到单独的二方包；</span><span style="font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;">业务工具放到对应的 Module。</span></section></li></ol><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="font-size: 15px;letter-spacing: 1px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;"></span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;font-size: 15px;letter-spacing: 1px;">﻿</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">回顾下整篇文章，咱们对于应用架构的混乱问题进行了总结与归纳，并给出了一些重点需要理解的内容，希望能对大家的日常开发有一些帮助。</span></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"><br></span></p><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);text-align: center;line-height: normal;"><span style="outline: 0px;font-family: mp-quote, -apple-system-font, BlinkMacSystemFont, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 1px;"><img class="rich_pages wxw-img" data-imgfileid="503042092" data-ratio="0.328125" data-s="300,640" src="https://oscimg.oschina.net/oscnet/ae8026bc-c1cd-4833-a97a-d6baf9d29317.png" data-type="png" data-w="256" style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;visibility: visible !important;width: 140px !important;" referrerpolicy="no-referrer"></span></section><section style="margin-bottom: 0px;outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);color: rgb(100, 99, 99);font-size: 15px;text-align: center;line-height: normal;"><span style="outline: 0px;font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;color: rgb(0, 17, 255);letter-spacing: 1px;">附录</span></section><section style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;"><br></section><ol class="list-paddingleft-1" style="list-style-type: decimal;"><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: left;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">﻿后端开发实践系列——领域驱动设计 (DDD) 编码实践 - Thoughtworks 洞见（地址：https://insights.thoughtworks.cn/backend-development-ddd/）﻿</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: left;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">﻿实现领域驱动设计（地址：https://book.douban.com/subject/25844633//）﻿</span></p></li><li><p style="margin-top: 8px;margin-bottom: 8px;line-height: 1.75em;text-align: left;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">﻿Cola-阿里巴巴开源应用架构（地址：https://github.com/alibaba/COLA）</span></p></li></ol><p style="line-height: 1.75em;text-align: justify;margin-bottom: 0px;margin-top: 0px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;"></span></p><section style="text-align: center;margin-top: 0px;margin-bottom: 0px;line-height: normal;"><img class="rich_pages wxw-img" data-imgfileid="503042093" data-ratio="0.3425196850393701" data-s="300,640" src="https://oscimg.oschina.net/oscnet/346aecb5-6194-4248-960e-bc26e019a878.png" data-type="png" data-w="254" style="outline: 0px;font-family: system-ui, -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;letter-spacing: 0.544px;text-wrap: wrap;background-color: rgb(255, 255, 255);width: 134px;visibility: visible !important;height: 46px;" referrerpolicy="no-referrer"></section><section style="text-align: center;margin-top: 0px;margin-bottom: 0px;line-height: normal;"><span style="color: rgb(0, 17, 255);font-family: -apple-system, system-ui, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 18px;letter-spacing: 1px;text-align: center;text-wrap: wrap;background-color: rgb(255, 255, 255);">团队介绍</span></section><section style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><br></section><p style="margin-top: 8px;line-height: 1.75em;margin-bottom: 8px;"><span style="box-sizing: inherit;color: rgba(25, 26, 31, 0.9);font-size: 15px;letter-spacing: 1px;">我们是淘天集团物流技术团队，服务淘天物流部及零售行业的产技团队，一直深耕在物流及供应链的数字化协同与运营领域：为零售业务提供灵活多样的经营模式管理方案及可以快速适配市场变化的经营策略数宇化管理工具；为商家提供高效低成本的物流及供应链解决方案，加快资金效率，提升协同效率；为消费者提供即时便捷的购物体验。</span></p><section style="margin-bottom: 8px;"><br></section><section data-role="outer" label="Powered by 135editor.com" style="margin-bottom: 0px;outline: 0px;letter-spacing: 0.544px;visibility: visible;"><section style="margin-top: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;margin-bottom: 8px;"><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span><span style="outline: 0px;"><strong style="outline: 0px;">&nbsp;拓展阅读&nbsp;</strong></span><span style="outline: 0px;color: rgb(0, 17, 255);"><strong style="outline: 0px;">¤</strong></span></section><section style="margin-top: 5px;margin-bottom: 5px;outline: 0px;letter-spacing: 0.544px;font-size: 16px;word-break: break-all;color: rgb(0, 0, 0);font-family: Optima-Regular, Optima, PingFangSC-light, PingFangTC-light, &quot;PingFang SC&quot;, Cambria, Cochin, Georgia, Times, &quot;Times New Roman&quot;, serif;text-align: center;line-height: 1.75em;"><br style="outline: 0px;"></section><section style="margin-top: 8px;margin-bottom: 8px;outline: 0px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;min-height: 24px;clear: both;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565944923443904512%23wechat_redirect" textvalue="3DXR 技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">3DXR 技术</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1533906991218294785%23wechat_redirect" textvalue="终端技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">终端技术</a>&nbsp;|&nbsp; 
   <a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1592015847500414978%23wechat_redirect" textvalue="音视频技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">音视频技术</a></section><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1539610690070642689%23wechat_redirect" textvalue="服务端技术" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">服务端技术</a><span style="outline: 0px;letter-spacing: 0.544px;">&nbsp;|&nbsp;</span><a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D2565883875634397185%23wechat_redirect" textvalue="技术质量" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">技术质量</a>&nbsp;|&nbsp;<a target="_blank" href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fmp%2Fappmsgalbum%3F__biz%3DMzAxNDEwNjk5OQ%3D%3D%26action%3Dgetalbum%26album_id%3D1522425612282494977%23wechat_redirect" textvalue="数据算法" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2" style="outline: 0px;color: var(--weui-LINK);-webkit-user-drag: none;cursor: pointer;">数据算法</a></p><p style="margin-top: 8px;margin-bottom: 8px;outline: 0px;min-height: 24px;font-family: -apple-system, &quot;system-ui&quot;, &quot;Helvetica Neue&quot;, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei UI&quot;, &quot;Microsoft YaHei&quot;, Arial, sans-serif;font-size: 15px;letter-spacing: 0.544px;text-indent: 0em;text-align: center;line-height: 1.75em;visibility: visible;"><br style="outline: 0px;"></p><section class="mp_profile_iframe_wrp" style="margin-bottom: 24px;outline: 0px;"><mp-common-profile class="custom_select_card mp_profile_iframe js_wx_tap_highlight" data-pluginname="mpprofile" data-id="MzAxNDEwNjk5OQ==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/33P2FdAnju8t5nZGhAatCrc4e2iaDfAaoInribRKxc7MOqdTGygfcLqSDxhj0trCHVEh94Sjl7zuWYzwouYtJ0VQ/300?wx_fmt=png&amp;wxfrom=19" data-nickname="大淘宝技术" data-alias="AlibabaMTT" data-signature="大淘宝技术官方账号" data-from="2" data-index="0" data-origin_num="689" data-isban="0" data-biz_account_status="0" data-weui-theme="light" data-is_biz_ban="0"></mp-common-profile></section></section><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p></div><p style="color: #858585; font-size: 13px;">本文分享自微信公众号 - 大淘宝技术（AlibabaMTT）。<br>如有侵权，请联系 support@oschina.cn 删除。<br>本文参与「<a href="https://www.oschina.net/sharing-plan" target="_blank">OSC 源创计划</a>」，欢迎正在阅读的你也加入，一起分享。</p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 17 Feb 2024 08:15:41 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4662964/blog/10751229</guid>
            <link>https://my.oschina.net/u/4662964/blog/10751229</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌建议旧版 Windows 10 PC 用户迁移到 ChromeOS Flex]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>微软将于 2025 年 10 月 14 日停止为 Windows 10 提供官方支持，由于缺乏免费的安全更新和技术支持，这可能导致消费者和企业的 2.4 亿台 PC 被淘汰。</p><p>此外，由于许多运行 Windows 10 系统的设备过于老旧，不满足运行 Windows 11 的要求，许多用户将不得不向微软支付延期支持费用或购买新电脑。有些人可能想保留现有机器而不向微软付费，但这样做会因缺乏安全更新而带来危险。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-316aa08dcd289eb3c3a832b2e231a7bd87b.png" referrerpolicy="no-referrer"></p><p>谷歌为这些用户<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.tomshardware.com%2Fsoftware%2Foperating-systems%2Fgoogle-proposes-users-of-older-windows-10-pcs-to-migrate-to-chromeos-flex-600-devices-certified" target="_blank">提出</a>了解决方案 —— 通过 ChromeOS Flex 提供"自动更新"硬件兼容性。</p><p>ChromeOS 商业产品主管写道：「微软 Windows 10 即将进入报废状态，这可能会对环境产生重大影响。数百万台完全能够运行 Windows 10 但与 Windows 11 不兼容的电脑可能最终被填埋。」</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-e30c3cdf91fd4c11ad29cb8337d074e8ef2.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.google.com%2Fblog%2Fproducts%2Fchrome-enterprise%2F11-ways-you-win-with-chromeos-flex" target="_blank">https://cloud.google.com/blog/products/chrome-enterprise/11-ways-you-win-with-chromeos-flex</a></u></em></p></blockquote><p>因此谷歌建议为搭载 Windows 10 的旧电脑安装 ChromeOS Flex，从而转换为云电脑，以延长其使用寿命。有了 ChromeOS Flex，公司和消费者就可以安装一个新的操作系统，即使在 Windows 10 于明年年底停止提供安全补丁后，该系统仍会自动更新，提供未来数年的安全补丁。</p><p>谷歌表示 Flex 是专为传统 PC 硬件设计的 ChromeOS 分支，是 Windows 或 macOS 等传统操作系统的理想替代品，并列举了其基于云的现代操作系统成为 Windows 10 优秀替代品的 11 种方式。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-770d2dc5bed7dfe03e07f3f19937d88ec0d.png" referrerpolicy="no-referrer"></p><p>ChromeOS Flex 非常安全，它具有数据加密、自动更新和应用程序沙箱等功能，可以保护用户免受恶意软件和其他网络威胁的侵害。谷歌声称，勒索软件攻击者从未入侵过这款轻量级操作系统。</p><p>ChromeOS Flex 易于使用，特别是对于熟悉 Chrome 浏览器或 Google 工作空间的人来说。该操作系统启动速度快，不会出现一直困扰 Windows 的运行速度变慢（臃肿）问题，从而提高了工作效率。借助 Google 管理控制枱，该系统还易于远程管理。</p><p>ChromeOS Flex 非常"灵活"，经认证可在近 600 种 OEM 品牌设备上运行，这意味着该云操作系统几乎可以在企业组织部署的任何设备上运行。</p><p>ChromeOS Flex 可降低 IT 支持和硬件成本，防止 Windows 10 机器成为电子垃圾，而且高效节能。该操作系统适用于大型或小型企业。</p><p>ChromeOS Flex 还支持第三方业务应用程序，至少在基于网络的服务方面是如此。得益于虚拟应用交付技术，"传统"Windows 应用程序和微软 Office 等生产力套件可以从互联网流式传输，实现"无缝"集成。</p><p>然而 ChromeOS 并不是一个特别受欢迎的替代操作系统。根据 StatCounter.com 的数据，截至 2024 年 1 月，ChromeOS 在全球 PC 操作系统市场中仅占据 1.78% 的份额，远远落后于 Windows 占主导地位的 73% 和 macOS 的 16.11% 市场份额。</p><p>延伸阅读：<strong><em><u><a href="https://www.oschina.net/news/238374/pirg-chromebook-churn" target="news">电子垃圾 Chromebook</a></u></em></strong></p></div>
                                    ]]>
            </description>
            <pubDate>Sat, 17 Feb 2024 04:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278904</guid>
            <link>https://www.oschina.net/news/278904</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌发布 Gemini 1.5，最高支持百万级 token 上下文]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>在推出号称最强大的<a href="https://www.oschina.net/news/278397/bard-gemini-advanced-app"> Gemini Ultra </a>模型一周后，谷歌今天发布了拥有最长上下文窗口的下一代大模型<strong>&nbsp;Gemini 1.5&nbsp;</strong>—— 最高支持&nbsp;<span>100 万 token 的上下文长度。</span></p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a51e6f59a5c0b7d4a14179ec0b37415c657.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.google%2Ftechnology%2Fai%2Fgoogle-gemini-next-generation-model-february-2024" target="_blank">https://blog.google/technology/ai/google-gemini-next-generation-model-february-2024</a></u></em></p></blockquote><p>谷歌首席科学家 Jeff Dean <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2FJeffDean%2Fstatus%2F1758146022726041615" target="_blank">表示</a>，Gemini 1.5 的上下文理解能力可支持百万级 token 的多模态输入，让用户能够使用该模型与数十万字的超长文档、拥有数百个文件的数十万行代码库、一部完整的电影等进行交互。</p><p><img src="https://oscimg.oschina.net/oscnet/up-8a4bdc73436da787fcfab9be022109f6e7d.gif" referrerpolicy="no-referrer"></p><p>Gemini 1.5 介绍</p><ol><li>性能提升：Gemini 1.5 在多个维度上展现出显著的性能提升，特别是在处理长上下文信息的能力上实现了重大突破，可以连续处理高达 100 万个标记（tokens），拥有迄今为止所有大型基础模型中最长的上下文窗口。</li><li>高效架构：Gemini 1.5 采用了新的 Mixture-of-Experts（MoE）架构，使模型更高效地进行训练和服务，同时在维持类似于 1.0 Ultra 模型的质量的同时，减少了计算需求。</li><li>长上下文窗口：这一特点允许 Gemini 1.5 处理并分析大量信息，比如 1 小时的视频、11 小时的音频、超过 30,000 行代码的代码库或超过 700,000 字的文本。</li><li>跨模态理解和推理：Gemini 1.5 能够对不同模态的内容（包括文本、代码、图像、音频和视频）进行高度复杂的理解和推理，例如，分析 44 分钟的默片并准确捕捉情节要点和细节。</li><li>增强性能：在文本、代码、图像、音频和视频评估的综合面板上测试时，Gemini 1.5 Pro 在用于开发我们的大型语言模型（LLMs）的 87% 的基准测试中表现优于 1.0 Pro，并且与 1.0 Ultra 在同样的基准测试中表现大致相当。</li></ol><p>Gemini 1.5 技术报告：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fstorage.googleapis.com%2Fdeepmind-media%2Fgemini%2Fgemini_v1_5_report.pdf" target="_blank">https://storage.googleapis.com/deepmind-media/gemini/gemini_v1_5_report.pdf</a></u></em></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 16 Feb 2024 08:00:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278829/google-gemini-1-5-next-generation-model</guid>
            <link>https://www.oschina.net/news/278829/google-gemini-1-5-next-generation-model</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI 发布文本生成视频模型 Sora]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>OpenAI 今天凌晨发布了其首个视频生成模型 Sora。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-80cdbef18c0af0f443e5c577f0b8b7d9f0d.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fsora" target="_blank">https://openai.com/sora</a></u></em></p></blockquote><p>Sora 可根据文本描述生成长达 60 秒的视频，其中包含精细复杂的场景、生动的角色表情以及复杂的镜头运动。</p><p><img src="https://oscimg.oschina.net/oscnet/up-76a85f538720e72217484164ce80b7b5532.png" referrerpolicy="no-referrer"></p><p>目前，Sora 已对网络安全的红队成员开放，以评估其可能存在的风险或潜在伤害。同时，OpenAI 也邀请了视觉艺术家、设计师和电影制作人使用 Sora，收集他们的反馈，以使模型更好地服务于创意行业。</p><p>OpenAI 在技术报告介绍道，<strong>他们将 Sora 视频生成模型视作世界模拟器</strong>。具体来说就是通过跨越不同持续时间、宽高比和分辨率的视频和图像，从而生成最高可达一分钟的高清视频。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-0710069f6fe95eaeadb0508d60ddd79f7b4.png" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fresearch%2Fvideo-generation-models-as-world-simulators" target="_blank">https://openai.com/research/video-generation-models-as-world-simulators</a></p></blockquote><p>Sora 使用了一种特殊的深度学习模型（即 Transformer）来处理视频和图像数据。这种处理方式首先将视频和图像编码成潜在代码，然后将这些代码分解成包含时间和空间信息的小块（即时空补丁），最后利用 Transformer 模型在这些补丁上进行操作。</p><p>这样的处理方法能够有效地捕捉和生成视频和图像数据中的复杂时空动态，为生成高质量的视频和图像提供了一种强大的方法。</p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 16 Feb 2024 04:47:35 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278821/openai-text-to-video-sora</guid>
            <link>https://www.oschina.net/news/278821/openai-text-to-video-sora</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[与 F5 产生分歧，核心 Nginx 开发者创建新分支 Freenginx]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>作为 Nginx Web 服务器的长期核心开发人员之一，Maxim Dounin&nbsp;宣布创建该项目的一个新分支，名为 Freenginx。</p><p><img height="203" src="https://oscimg.oschina.net/oscnet/up-000ebc1841ce52b742123227a39fe25f18d.png" width="500" referrerpolicy="no-referrer"></p><p>Maxim Dounin 决定分叉 Nginx 是因为与 F5 发生了分歧，F5 于 2019 年收购了 Nginx 公司。Dounin 在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmailman.nginx.org%2Fpipermail%2Fnginx-devel%2F2024-February%2FK5IC6VYO2PB7N4HRP2FUQIBIBCGP4WAU.html" target="_blank">宣布 Freenginx</a>&nbsp;时解释道：</p><blockquote>
 大家可能都知道，F5 于 2022 年关闭了莫斯科办事处，从那时起我就不再为 F5 工作了。不过，我们已经达成协议，我将继续作为志愿者参与 nginx 开发。近两年来，我一直致力于改进 nginx，免费为大家提供更好的服务。
 <br><br> 不幸的是，F5 的一些新的非技术管理层最近认为，他们要更了解如何运行开源项目。特别是，他们决定干涉 nginx 多年来使用的安全策略，无视策略和开发人员的立场。
 <br><br> 这是可以理解的：他们拥有该项目，并且可以用它做任何事情，包括以营销为目的，无视开发者的立场和社区。尽管如此，这还是违背了我们的协议。更重要的是，我再也无法控制 F5 内部对 nginx 的修改，也不再将 nginx 视为一个为公众利益而开发和维护的免费开源项目。
 <br><br> 因此，从今天起，我将不再参与由 F5 负责的 nginx 开发。取而代之的是，我将启动另一个项目，由开发人员而非公司实体来运行：
 <br><br><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Ffreenginx.org%2F" target="_blank">http://freenginx.org/</a><br><br> 我们的目标是使 nginx 开发免受任意公司行为的影响。欢迎提供帮助和贡献。希望大家都能从中受益。&nbsp;
</blockquote></div>
                                    ]]>
            </description>
            <pubDate>Fri, 16 Feb 2024 04:33:35 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278819/nginx-forked-freenginx</guid>
            <link>https://www.oschina.net/news/278819/nginx-forked-freenginx</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Altman 称 AI 潜在风险会让人「彻夜难眠」，呼吁建立国际机构监督 AI 发展]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#252a2d; margin-left:0; margin-right:0; text-align:justify">2 月 14 日消息，当地时间周二，OpenAI CEO 阿尔特曼在迪拜举行的世界政府峰会上通过视频电话致辞，其呼吁建立一个国际性的机构（类似国际原子能机构）来监督 AI 发展。</p><p style="color:#252a2d; margin-left:0; margin-right:0; text-align:justify">「我经常以国际原子能机构为例，将其作为处理最强大人工智能系统影响的典范。在部署超级智能或通用人工智能（注：AGI）之前，建立审计和安全措施至关重要。」</p><p style="color:#252a2d; margin-left:0; margin-right:0; text-align:justify">阿尔特曼还提到，一个非常微妙的「社会失衡」就能给 AI 系统带来严重破坏，自己曾为此彻夜难眠。「我对机器人在街上行走的想法不太感兴趣，我更关心非常微妙的社会失衡，即在社会中拥有这些系统，没有特别的邪恶意图，事情却出了大问题。」</p><p style="color:#252a2d; margin-left:0; margin-right:0; text-align:justify">然而他还强调，OpenAI 公司这样的人工智能行业不应在制定管理涉及 AI 行业的法规时处于领先地位。「我认为我们仍处于需要进行健康辩论的阶段。」</p><p style="color:#252a2d; margin-left:0; margin-right:0; text-align:justify">他认为，AI 将会广泛普及，且价格低廉，成为人类「创造未来的工具」。但与此同时，AI 的全面进步和发展仍需要时间与耐心，「就像手机从原始的移动电话发展到如今的 iPhone 一样。」</p><p style="color:#252a2d; margin-left:0; margin-right:0; text-align:justify">此外，阿尔特曼还称当前的世界仍处于 AI 早期阶段，「我们从未见过世界发生很大的变化，我认为原因在于我们目前拥有的技术就像黑白电视一样，还有很长的路要走。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 15 Feb 2024 12:25:31 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278781</guid>
            <link>https://www.oschina.net/news/278781</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[云计算 - 负载均衡 SLB 方案全解与实战]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>云计算 - 负载均衡 SLB 方案全解与实战，介绍 SLB 的核心技术、用户最佳实践、阿里云 SLB 产品举例、应用场景。</p></blockquote><blockquote><p>关注【TechLeadCloud】，分享互联网架构、云服务技术的全维度知识。作者拥有 10+年互联网服务架构、AI 产品研发经验、团队管理经验，同济本复旦硕，复旦机器人智能实验室成员，阿里云认证的资深架构师，项目管理专业人士，上亿营收 AI 产品研发负责人。</p></blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-5da5d794e329cfd040f4842da9b8aae7da2.png" alt="file" referrerpolicy="no-referrer"></p><h1>一、引言</h1><p>云计算作为现代信息技术的基石，正在以前所未有的速度推动着各行各业的数字化进程。其中，负载均衡（Server Load Balancer, SLB）技术是保证云服务高效、稳定运行的重要组成部分。它通过分配网络或应用流量到多个服务器，确保了服务的高可用性和高性能。在本篇引言中，我们将探讨云计算与负载均衡的关系以及 SLB 的重要性，并通过实际的例子来揭示其背后的技术原理。</p><h2>云计算与负载均衡的关系</h2><p>云计算提供了一种灵活、可扩展的服务运行环境，使得企业和开发者能够快速响应市场变化，优化资源配置。而负载均衡技术在其中起到了至关重要的作用。</p><p>例如，假设一个电子商务网站在黑色星期五这一天迎来了巨大的流量激增。如果没有负载均衡技术，单一的服务器可能会因为超负荷而崩溃，导致用户无法访问网站，从而造成严重的经济损失。而有了负载均衡技术，网络流量会被均匀分配到多个服务器上，确保每个服务器的负载都保持在一个可接受的范围内，从而保证了网站的正常运行和用户的访问体验。</p><h2>SLB 的重要性</h2><p>SLB 作为负载均衡技术在云计算环境中的具体实现，它不仅能够保证服务的高可用性，还能通过优化资源分配，提升服务的响应速度和处理能力。</p><p>以一个在线视频平台为例，平台需要保证无论用户数量多少，视频的播放都要流畅无卡顿。通过 SLB，平台可以将用户的请求分配到不同的服务器上，确保每个服务器的负载都在可控范围内，从而为用户提供高质量的观看体验。同时，当某个服务器发生故障时，SLB 能够自动将流量重新分配到其他健康的服务器上，保证了服务的持续可用。</p><p>通过以上两个实际的例子，我们可以看到负载均衡技术和 SLB 在云计算环境中的重要作用。它们为企业和开发者提供了强大的工具，以应对网络流量的波动和系统负载的变化，是实现高效、稳定云服务的关键。</p><hr><h1>二、SLB 核心技术解析</h1><p>Server Load Balancer (SLB) 是一种负载均衡技术，它在云计算环境中扮演着至关重要的角色。通过 SLB，可以将网络流量和请求有效地分配到多个服务器上，从而保证了应用的高可用性和高性能。在本节中，我们将深入解析 SLB 的核心技术，包括负载均衡算法、会话保持技术以及健康检查。</p><h2>2.1 负载均衡算法</h2><p>负载均衡算法是 SLB 的核心，它决定了如何将流量分配到不同的服务器上。常见的负载均衡算法有轮询法、最少连接法和 IP Hash 法。</p><h3>2.1.1 轮询法</h3><p>轮询法是最简单也最直接的负载均衡算法，它将每个新的请求按照顺序分配到服务器列表中的服务器上。</p><p>例如，假设有三个服务器 A、B 和 C，轮询法会依次将请求分配给 A、B、C、A、B、C，如此循环。这种方法简单公平，但可能不适用于服务器性能不均的场景。</p><h3>2.1.2 最少连接法</h3><p>最少连接法是一种动态的负载均衡算法，它会将新的请求分配给当前连接数最少的服务器。</p><p>举例来说，假设在一个购物网站的高峰期，服务器 A 已经有 30 个连接，而服务器 B 只有 10 个连接，最少连接法会将新的请求分配给服务器 B，从而尽量保持服务器之间的负载均衡。</p><h3>2.1.3 IP Hash 法</h3><p>IP Hash 法根据客户端的 IP 地址计算一个哈希值，然后根据哈希值将请求分配给特定的服务器。</p><p>这种方法能够保证来自同一 IP 的请求总是被分配到同一个服务器，有助于保持会话的一致性。例如，在一个在线游戏场景中，玩家的所有请求需要被发送到同一个服务器以保证游戏状态的一致。</p><h2>2.2 会话保持技术</h2><p>会话保持是负载均衡中的另一个重要概念，它能保证一个用户的多个请求被发送到同一个服务器。</p><h3>2.2.1 Cookie 保持</h3><p>通过在 HTTP 响应中设置特定的 Cookie，SLB 可以识别来自同一用户的请求，并将它们路由到同一服务器。这对于保持用户登录状态和购物车信息等非常重要。</p><h3>2.2.2 IP 绑定</h3><p>IP 绑定是另一种会话保持技术，它根据用户的 IP 地址将所有请求路由到同一服务器。与 IP Hash 法类似，这种方法适用于需要保持会话状态的应用。</p><h2>2.3 健康检查</h2><p>健康检查是 SLB 中用于监控服务器状态的机制。通过定期检查服务器的响应，SLB 能够判断服务器是否健康，从而确保流量只被路由到健康的服务器。</p><h3>2.3.1 TCP 健康检查</h3><p>通过发送 TCP 探测包来检查服务器的可达性和响应时间，是判断服务器健康状态的一种简单有效的方法。</p><h3>2.3.2 HTTP 健康检查</h3><p>HTTP 健康检查则通过发送 HTTP 请求，并检查 HTTP 响应的状态码和内容，来判断服务器的健康状态。</p><p>例如，在一个在线订餐平台中，通过 HTTP 健康检查，SLB 能够实时监控每个服务器的状态，一旦发现某个服务器的响应时间超过预设的阈值或返回错误码，SLB 会将该服务器标记为不健康，从而避免用户请求被路由到出现问题的服务器，保证了服务的高可用性和用户体验。</p><p>通过以上深入的技术解析和实际例子，我们可以更清晰地理解 SLB 的核心技术和其在云计算环境中的重要作用。</p><hr><h1>三、SLB 用户最佳实践</h1><p>在实际的云计算环境中，有效地使用 Server Load Balancer (SLB) 是确保应用高可用性和高性能的关键。本节将为读者展示一些 SLB 的用户最佳实践，包括 SLB 的配置和优化，以及如何应对常见的问题和挑战。</p><h2>3.1 部署与配置 SLB</h2><p>部署和配置 SLB 是最基本也是最重要的步骤。正确的配置能确保流量得到有效分配，同时保证应用的稳定运行。</p><h3>3.1.1 选择合适的负载均衡算法</h3><p>不同的负载均衡算法适用于不同的场景。例如，对于请求处理时间相对固定的应用，轮询法可能是一个合适的选择。而对于处理时间波动较大的应用，最少连接法可能更为合适。</p><p>举例来说，在一个在线视频处理服务中，由于视频文件大小和编码复杂度的不同，处理时间可能会有很大的波动。在这种情况下，最少连接法能够保证新的请求更可能被分配到当前负载较低的服务器，从而实现更好的负载均衡。</p><h3>3.1.2 设置合理的会话保持</h3><p>会话保持对于需要保持用户状态的应用非常重要。通过配置合理的会话保持，可以确保用户的连续请求被发送到同一服务器，从而保持应用的状态一致。</p><p>例如，在一个在线购物平台中，用户的购物车信息需要在多个请求之间保持一致。通过使用 Cookie 保持或 IP 绑定，可以保证用户的所有请求都被路由到同一服务器，从而保持购物车状态的一致。</p><h2>3.2 优化 SLB 性能</h2><p>SLB 的性能直接影响到应用的响应时间和用户体验。通过一些优化措施，可以进一步提升 SLB 的性能。</p><h3>3.2.1 调优负载均衡算法</h3><p>根据应用的实际负载和服务器性能，调整负载均衡算法的参数，以实现更好的负载均衡效果。</p><h3>3.2.2 优化健康检查配置</h3><p>合理的健康检查配置能够及时发现服务器的故障，同时避免对服务器造成额外的负担。例如，可以通过调整健康检查的间隔和超时时间，来平衡健康检查的准确性和资源消耗。</p><h3>3.2.3 使用高效的会话保持机制</h3><p>选择高效的会话保持机制，如使用 Cookie 保持而非 IP 绑定，可以减少服务器的负担，同时保证应用的状态一致。</p><h2>3.3 处理常见问题</h2><p>在实际使用 SLB 时，可能会遇到一些常见的问题和挑战，如服务器故障、流量激增等。通过一些预防和应对措施，可以减少这些问题对应用的影响。</p><p>例如，在遭遇流量激增时，可以通过预先扩展服务器资源，或使用自动扩展功能，来应对可能的服务器超负荷问题。同时，通过合理的流量控制和优先级设置，可以保证关键服务的可用性和性能。</p><p>通过以上的最佳实践，用户可以更有效地利用 SLB，提升云应用的可用性和性能，同时应对实际运营中可能遇到的各种问题和挑战。</p><hr><h1>四、阿里云 SLB 多种规格举例</h1><p><img src="https://oscimg.oschina.net/oscnet/up-135c5f9e2fa4270648b02351e71d04ee5c3.png" alt="file" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-c06ba677661c1157b2788ebccc51ee7db6a.png" alt="file" referrerpolicy="no-referrer"></p><hr><h1>五、应用场景</h1><p><img src="https://oscimg.oschina.net/oscnet/up-0d9060a5c0eb4b3aee77921b3593c4ea83a.png" alt="file" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-dfbf500e869785bf734a386e1c86320519a.png" alt="file" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-0ed01d7e27b70bcbab145e0edc7289156e0.png" alt="file" referrerpolicy="no-referrer"><img src="https://oscimg.oschina.net/oscnet/up-de11d78c80025ba2523ce4fd2201169dfbb.png" alt="file" referrerpolicy="no-referrer"></p><blockquote><p>关注【TechLeadCloud】，分享互联网架构、云服务技术的全维度知识。作者拥有 10+年互联网服务架构、AI 产品研发经验、团队管理经验，同济本复旦硕，复旦机器人智能实验室成员，阿里云认证的资深架构师，项目管理专业人士，上亿营收 AI 产品研发负责人。 如有帮助，请多关注 TeahLead KrisChang，10+年的互联网和人工智能从业经验，10 年+技术和业务团队管理经验，同济软件工程本科，复旦工程管理硕士，阿里云认证云服务资深架构师，上亿营收 AI 产品业务负责人。</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Thu, 15 Feb 2024 12:22:31 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6723965/blog/11043804</guid>
            <link>https://my.oschina.net/u/6723965/blog/11043804</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[华为工程师提交 Linux 内核补丁——添加「沙盒模式」 (SBM)]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>华为工程师 Petr Tesarik 向 Linux 内核提交了添加「沙盒模式」(SandBox Mode, SBM) 的新补丁——用于提升内存安全性。</p><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-69b0075c015343103fb4626bc5e726f044c.png" referrerpolicy="no-referrer"><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2F20240214113035.2117-1-petrtesarik%40huaweicloud.com%2F" target="_blank">https://lore.kernel.org/lkml/20240214113035.2117-1-petrtesarik@huaweicloud.com/</a></u></em></p></blockquote><p>Petr Tesarik 在邮件写道：</p><blockquote><p>沙盒模式的最终目标是<strong>在只允许访问预定义地址内存的环境中执行本地内核代码</strong>，因此潜在漏洞无法被利用，或不会对内核的其他部分产生影响。</p><p>该补丁为内核添加了沙盒模式的 API 和独立于操作系统的基础架构。它在所有输入和输出数据的 vmalloc() 副本上运行目标函数。由于有了保护页，仅此一项就能防止一些越界访问。</p></blockquote><p><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flore.kernel.org%2Flkml%2F20240214113035.2117-6-petrtesarik%40huaweicloud.com%2F" target="_blank">根据文档的描述</a></u>，沙盒模式的主要目标是通过分解内核来减少内核代码中潜在内存安全错误的影响。SBM API 支持在隔离的执行环境中运行每个组件，特别是用作输入的内存区域和 / 或输出与内核的其余部分隔离，并被保护页包围。</p><p>在实现必要的 arch hook 的架构上，沙盒模式利用硬件分页设施和 CPU 特权级别来强制仅使用这些预定义的内存区域。有了 arch 的支持，SBM 还可以从 protection violation 进行恢复。这意味着 SBM 可强制终止沙盒，并向调用者返回错误代码（例如<code>-EFAULT</code>），以便执行可以继续。这种实现提供了强隔离机制。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 15 Feb 2024 11:29:58 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278775</guid>
            <link>https://www.oschina.net/news/278775</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[更稳定、更便捷、更 AI 的编程语言 — 洛书 24.1.4 阶段版本发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>更稳定、更便捷、更 AI 的编程语言 — 洛书 24.1.4 阶段版本发布</h1><p><span style="background-color:#fdfdfe; color:#05073b">洛书开发团队很高兴地宣布，最新的 24.1.4 阶段版本正式发布。本次更新汇集了上一阶段版本以来近 4 个月的开发成果，致力于提升语言效率、优化用户体验，并引入了一系列新功能与改进。</span></p><h2>问题与修复&nbsp;</h2><ol><li><p style="margin-left:0; margin-right:0">修复了一些偶发性的编译错误和运行时异常。</p></li><li><p style="margin-left:0; margin-right:0">修复了 class 构造函数的行为异常问题。</p></li><li><p style="margin-left:0; margin-right:0">修复 API 中部分函数行为异常问题。</p></li><li><p style="margin-left:0; margin-right:0">修复 GC 在 Windows 下内存泄漏的异常</p></li></ol><h2>更新与优化</h2><h3>速度与稳定性优化</h3><ol><li>字符串储存结构更新，统一 byte 与 string 数据类型的储存模式&nbsp;</li><li>取消 32 位字节码模式下的内存保护运算，该功能在 16 位模式下得到保留</li><li>更新多线程模型，放弃常见的 GIL 解决方案，初步支持 Actor 模型</li></ol><h3>模块与拓展优化</h3><ol><li>模块管理器第一阶段所有功能开发基本完成，这包括：安装、卸载、查找、升级、搜索、获取文档、获取源代码、模块配置、胶水代码生成、批量更新、批量卸载、版本更新等多种功能</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flosu.tech%2Fstudio" target="_blank">在线服务站点</a>初步搭建完成，可视化的模块管理操作。</li><li>自动集成部署工具上线，自动化构建与打包。正式改用，时间关联的版本号规则</li></ol><h3>AI 编码体验优化</h3><p><span style="background-color:#fdfdfe; color:#05073b">AI 代码助手作为一种智能化的编程辅助工具，可以极大地提升编程效率和代码质量，降低编程门槛。这种工具的出现，为国产编程语言的发展提供了有力的支持。AI 编码体验已经被洛书开发团队视作编程语言使用体验的重要一环。</span></p><p><span style="background-color:#fdfdfe; color:#05073b">洛书已经可以与现有的部分代码助手结合使用，为用户提供便捷、高效、多选择的 AI 编码体验。包括，自动补全、代码注释、代码解释、跨语言翻译等多种功能。</span></p><p><span style="background-color:#fdfdfe; color:#05073b">同时，AI 编程助手则的智能化辅助与洛书的中文代码拓展结合，提供更加贴近中文用户的思维方式和表达习惯的编程体验，新手可以</span><span style="background-color:#fdfdfe; color:#05073b">更轻松地学习和掌握洛书。</span></p><p><u><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1kZ421U78U%2F%3Fvd_source%3D3551aa6dd84c8edd774341fc07a29cdc" target="_blank">演示视频</a></strong></u></p><p><img height="1056" src="https://oscimg.oschina.net/oscnet/up-e1fbe8c5ae780d427aff8987b64127e2b93.png" width="1259" referrerpolicy="no-referrer"></p><pre><code>针对部分反馈信息，我们采取了相应的优化方案。
1. 保持 23.10 版本以来的类 python 关键词设计。
2. 新增数个中文关键词，增加中文关键词拓展与编译器核心间的解耦机制。
3. 新增等效关键词概念（仅限中文拓展）</code></pre><ol></ol><h2>兼容性说明</h2><p>我们提供了适用于 amd64 架构下的 Windows 与 Linux 的二进制文件，包括： Windows 10、Windows 11、Ubuntu 18.04.6 LTS + 、UOS/Deepin、Openkylin 等操作系统</p><p>Ubuntu amd64 版本构建环境</p><pre><code>Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 7.5.0-3ubuntu1~18.04' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-bootstrap --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~18.04)

ldd (Ubuntu GLIBC 2.27-3ubuntu1.6) 2.27
Copyright (C) 2018 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
Written by Roland McGrath and Ulrich Drepper.</code></pre><p>Windows x64 版本构建环境</p><pre><code>Using built-in specs.
COLLECT_GCC=x86_64-w64-mingw32-gcc
COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-w64-mingw32/7.3-win32/lto-wrapper
Target: x86_64-w64-mingw32
Configured with: ../../src/configure --build=x86_64-linux-gnu --prefix=/usr --includedir='/usr/include' --mandir='/usr/share/man' --infodir='/usr/share/info' --sysconfdir=/etc --localstatedir=/var --disable-silent-rules --libdir='/usr/lib/x86_64-linux-gnu' --libexecdir='/usr/lib/x86_64-linux-gnu' --disable-maintainer-mode --disable-dependency-tracking --prefix=/usr --enable-shared --enable-static --disable-multilib --with-system-zlib --libexecdir=/usr/lib --without-included-gettext --libdir=/usr/lib --enable-libstdcxx-time=yes --with-tune=generic --with-headers=/usr/x86_64-w64-mingw32/include --enable-version-specific-runtime-libs --enable-fully-dynamic-string --enable-libgomp --enable-languages=c,c++,fortran,objc,obj-c++,ada --enable-lto --with-plugin-ld --enable-threads=win32 --program-suffix=-win32 --program-prefix=x86_64-w64-mingw32- --target=x86_64-w64-mingw32 --with-as=/usr/bin/x86_64-w64-mingw32-as --with-ld=/usr/bin/x86_64-w64-mingw32-ld --enable-libatomic --enable-libstdcxx-filesystem-ts=yes
Thread model: win32
gcc version 7.3-win32 20180312 (GCC)</code></pre><p>如果您有高版本工具链的构建需求，可以参考<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flosu.tech%2Fwiki" target="_blank">相关文档</a>自行编译</p><p><img height="1349" src="https://oscimg.oschina.net/oscnet/up-e7d0f47712f7374ea8524067a5ef39bd491.png" width="2466" referrerpolicy="no-referrer"></p><h2>致谢</h2><p style="color:#05073b; margin-left:0; margin-right:0; text-align:start">感谢所有洛书的关注者一直以来的支持和反馈。我们珍视每一条用户意见，并将其作为改进的动力。如果您在使用洛书过程中遇到任何问题或有任何建议，请随时与我们联系。</p><p style="color:#05073b; margin-left:0; margin-right:0; text-align:start">期待与您共同见证洛书的成长与进步！</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 15 Feb 2024 07:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278754/luoshu-24-1-4-released</guid>
            <link>https://www.oschina.net/news/278754/luoshu-24-1-4-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Mozilla 裁员 60 人，提升 Firefox Mobile 优先级]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#000000; text-align:start">在任命 Laura Chambers 担任临时 CEO 不到一周后，Mozilla 宣布裁员约 60 人并缩减多项产品的投资。</p><p style="color:#000000; text-align:start">Mozilla 将缩减 VPN、Relay 和 Online Footprint Scrubber 等的投资，关闭 2018 年推出的 3D 虚拟世界 Hubs，缩减对 Mastodon 实例 mozilla.social 的投资。和今天的很多科技公司类似，Mozilla 将专注于将可信赖的 AI 引入到 Firefox。</p><p style="color:#000000; text-align:start">Mozilla 在一份声明中写道：「我们正在缩减对某些产品的投资，以便将重点放在我们认为最有可能取得成功的领域。我们打算将资源重新优先用于 Firefox Mobile 等产品，因为这些产品有很大的发展机会，并能为业界建立更好的模式。」</p><p style="color:#000000; text-align:start">相关链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2024%2F02%2F13%2Fmozilla-downsizes-as-it-refocuses-on-firefox-and-ai-read-the-memo%2F" target="_blank">https://techcrunch.com/2024/02/13/mozilla-downsizes-as-it-refocuses-on-firefox-and-ai-read-the-memo</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 15 Feb 2024 02:24:18 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278738/firefox-maker-mozilla-cutting-60</guid>
            <link>https://www.oschina.net/news/278738/firefox-maker-mozilla-cutting-60</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[凹语言发布 v0.9.1，支持 P5 儿童编程]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><hr><p style="margin-left:0; margin-right:0">凹语言设计的目标之一是简单易用。但是对于新接触编程的儿童教学来说依然有一定的门槛。为此开发组尝试将面向创意编程的<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fprocessing.org%2F" target="_blank">Processing</a><span>&nbsp;</span>理念引入凹语言，通过<span>&nbsp;</span><code>js/p5</code><span>&nbsp;</span>包可以轻松实现一些简单的互动创意设计。</p><p style="margin-left:0; margin-right:0">下面是来自杭州一小学三年级小学生的第一个凹语言程序：</p><p style="margin-left:0; margin-right:0"><img alt="" src="https://wa-lang.org/st0037-01.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">通过 VS Code 将以上的程序输入电脑，编译并执行的效果如下：</p><p style="margin-left:0; margin-right:0"><img alt="" src="https://wa-lang.org/st0037-02.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">程序本身也非常简单：首先通过<span>&nbsp;</span><code>import</code><span>&nbsp;</span>引入 P5 包；然后在<span>&nbsp;</span><code>init</code><span>&nbsp;</span>初始化一个长宽都是 400 的画布并设置一个灰色背景色；<code>Draw</code><span>&nbsp;</span>函数负责每一帧的绘制，根据鼠标是否按下绘制不同大小的圆形。</p><p style="margin-left:0; margin-right:0">下面是杭州一小学二年级的小学生通过一个绘制线段的程序互动的效果：</p><p style="margin-left:0; margin-right:0"><img alt="" src="https://wa-lang.org/st0037-03.png" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">目前<span>&nbsp;</span><code>js/p5</code><span>&nbsp;</span>包的功能还有限，我们会在小朋友学习的过程中逐步完善。希望未来每个中国的小学生都能通过我国的编程语言入门并进行日常开发。</p></div></div><div><div>
  &nbsp;
 </div></div></div>
                                    ]]>
            </description>
            <pubDate>Wed, 14 Feb 2024 09:21:14 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278688/walang-0-9-1-released</guid>
            <link>https://www.oschina.net/news/278688/walang-0-9-1-released</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[.NET 9 首个预览版发布 —— 打造面向云原生 & AI 的开发平台]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>微软 .NET 团队今天重磅推出 .NET 9 首个预览版，并强调称该版本重点关注<strong>针对云原生和人工智能领域的应用程序开发</strong>。当然也会在<strong>性能、生产力和安全性</strong>方面投入大量资源。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fa16ed25472b80c577b0fd4589fe48a2320.png" referrerpolicy="no-referrer"></p><p>微软称他们希望<strong>将 .NET 9 打造成云原生开发平台和工具</strong>。在过去的几年里，.NET 一直在构建强大的云原生基础设施，例如运行时性能和应用程序监控。</p><p>新版本继续往该方向前进，并将重点转向<strong>为流行的生产基础设施和服务提供便捷的使用方式</strong>，例如在 Kubernetes 中运行 .NET，以及使用托管的数据库和缓存服务（如 Redis）。微软将在 .NET 技术栈的多个层面提供这些改进。所有这些功能都会与 .NET Aspire 结合，从而降低构建云应用程序的成本和复杂性，缩短从开发到上线至生产环境的时间。</p><p>在 .NET 8 中，微软针对修剪和 AOT 优化了 Web API 应用程序（使用<code>webapiaot</code>模板）。在 .NET 9 中，他们正在积极对其他应用程序类型执行相同的操作，并改进所有 ASP.NET Core 应用程序的 DATAS GC。</p><p>除了云原生，.NET 9 的另一个重点是让 .NET 开发者更轻松地将人工智能集成到他们现有的和新的应用程序中。因此开发者可在 .NET 9 便捷地访问用于使用 OpenAI 和 OSS 模型的优秀库和文档。微软会继续在 Semantic Kernel、OpenAI 和 Azure SDK 上开展合作，以确保 .NET 开发者在构建 AI 应用程序时获得优秀的开发体验。</p><p>详情查看：</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fcore%2Fdiscussions%2F9167" target="_blank">https://github.com/dotnet/core/discussions/9167</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevblogs.microsoft.com%2Fdotnet%2Four-vision-for-dotnet-9%2F" target="_blank">https://devblogs.microsoft.com/dotnet/our-vision-for-dotnet-9/</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 14 Feb 2024 07:04:41 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278672/dotnet-9-preview1</guid>
            <link>https://www.oschina.net/news/278672/dotnet-9-preview1</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[FreeBSD 计划停止支持 32 位架构]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>FreeBSD 宣布了停止支持 32 位架构的未来计划：</p><ul><li><strong>FreeBSD 15.0 将不包含 armv6、i386 和 powerpc 架构</strong></li><li><strong>FreeBSD 16.0 将不包含 armv7 架构</strong></li><li><strong>v16 分支至少会一直支持在 64 位内核执行 32 位二进制文件</strong></li></ul><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-b964dcee9fc7b5c4fb099529ab79248effc.png" referrerpolicy="no-referrer"></p><p><em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.freebsd.org%2Farchives%2Ffreebsd-announce%2F2024-February%2F000117.html" target="_blank">https://lists.freebsd.org/archives/freebsd-announce/2024-February/000117.html</a></u></em></p></blockquote><p>FreeBSD 开发者&nbsp;<span>John Baldwin 称</span>此举是为了整合资源，他认为 32 位硬件平台正处于「市场衰退期」，而且积极支持 32 位硬件平台的开发人员也越来越少。只有在有需求并承诺增加开发者资源的情况下，FreeBSD 才会考虑延长对 32 位架构的支持。</p><p>除了逐渐停止支持现有的 32 位架构，FreeBSD 不会引入新的 32 位架构如 32 位 RISC-V。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 14 Feb 2024 05:49:06 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/278661</guid>
            <link>https://www.oschina.net/news/278661</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[安卓动态链接库文件体积优化探索实践]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h1>背景介绍</h1><p>应用安装包的体积影响着用户下载量、安装时长、用户磁盘占用量等多个方面，据<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2Fgoogleplaydev%2Fshrinking-apks-growing-installs-5d3fcba23ce2" target="_blank">Google Play 统计</a>，应用体积每增加 6MB，安装的转化率将下降 1%。</p><p><img src="https://static001.geekbang.org/resource/image/f8/68/f8a5e264dee4ee6879cd6c30d4bbf368.png?wh=1838*1002" alt="" referrerpolicy="no-referrer"></p><p>安装包的体积受诸多方面影响，针对 dex、资源文件、so 文件都有不同的优化策略，在此不做一一展开，本文主要记录了在研发时针对动态链接库的文件体积裁剪优化方案。</p><p>我开发的链接库使用 rust 语言开发，通过安卓 jni 接口实现 java 层和 native 层之间的相互调用。为什么使用 rust 主要有以下几个方面的考虑：</p><p>1.稳。安卓的 JNI 接口调用复杂，又涉及到 native 层的内存管理，随着代码量的增加，代码的安全稳定性会受到很大的挑战。使用 rust 开发，开发者几乎不需要考虑 GC 的问题，只要开发的时候按照规范老老实实写代码并且通过了编译器的检查，基本上就很难把程序写崩，这一点在代码上线后也确实得到了验证。</p><p>2.安全。传统使用 C、C++开发的代码编译完成以后，如果不加保护，很容易使用反汇编工具破解，市面上比较成熟的工具如 IDA、ghidra 等都可以将汇编代码还原到高级语言。使用 rust 编译的产物，内部函数间的调用规约和传统都不一样，目前市面上还没有相对完善的反编译工具，软件的防破解能力直接上升一个数量级。</p><p>但是使用 rust 有一个非常明显的缺点就是编译产物<strong>体积过大</strong>。在不修改默认的 rust 编译选项的情况下，仅开启 strip 的情况下，我的动态库体积达到了<strong>495k</strong>。</p><h1>优化方案</h1><p>参考网上前人的经验，依次进行了以下优化方式。</p><h2>调整优化等级</h2><p>默认的编译优化等级是 O3，该优化的目的提高代码的运行速度，但是与此同时会对部分循环进行展开，体积造成膨胀。在此我们以缩减体积为目标，将优化选项改为 z，表示生成最小二进制体积：</p><pre><code>[profile.release]
opt-level = 'z'
</code></pre><p>优化后前后体积变化</p><p>| 编译选项 | 体积 | | strip | 495k | | strip + opt-level = 'z' | 437k |</p><h2>开启 LTO</h2><p>LTO（Link Time Optimization）可以在链接时消除冗余代码，减小二进制体积——代价是更长的链接时间。</p><pre><code>Cargo.toml
[profile.release]
opt-level = 'z'
lto = true
</code></pre><p>优化后前后体积变化</p><p>| 编译选项 | 体积 | | strip | 495k | | strip + opt-level = 'z' | 437k | | strip + opt-level = 'z' + lto | 436k |</p><p>优化效果非常不明显，聊胜于无。</p><h2>Panic 立刻终止</h2><p>rust 默认的 panic 会在崩溃时进行栈回溯，方便定位问题。然而会带来额外的体积增加，将这一功能使用 abort 替代。</p><pre><code>[profile.release]
opt-level = 'z'
lto = true
panic = 'abort'
</code></pre><p>优化后前后体积变化</p><p>| 编译选项 | 体积 | | strip | 495k | | strip + opt-level = 'z' | 437k | | strip + opt-level = 'z' + lto | 436k | | strip + opt-level = 'z' + lto + panic = 'abort' | 366K |</p><p>到目前为止，常规的优化手段已经用完了，后续优化需要配合一些代码的额外变动。</p><p>使用 rust 分析工具 bloat 对产物进行分析，结果如下：</p><pre><code>File  .text     Size Crate
4.1%  69.0% 192.7KiB std
1.0%  16.8%  46.9KiB jdmp
0.5%   8.1%  22.7KiB [Unknown]
0.2%   3.8%  10.5KiB jni
0.0%   0.5%   1.5KiB cesu8
0.0%   0.4%   1.1KiB adler32
0.0%   0.3%     904B bytes
0.0%   0.2%     640B aho_corasick
0.0%   0.2%     588B regex_syntax
0.0%   0.2%     572B regex_automata
0.0%   0.2%     440B log
0.0%   0.1%     304B memchr
0.0%   0.0%      52B combine
0.0%   0.0%       8B jni_sys
</code></pre><p>让我感到惊讶的是我的核心代码 jdmp 模块只占了 46.9k，为此要额外引入几百 k 的额外开销！</p><h2>移除一些无用字符串</h2><p>在引入的第三方依赖里，开发者自己添加了很多字符串信息，大部分是用来完善提供运行时报错信息。通过修改、精简这些依赖库，删除无用代码，又可以省出一部分空间来。</p><p>同时，上面的优化尽管使用 abort 替代了 panic，rust 编译器仍然会生出一些格式化的字符串，使用 panic_immediate_abort 这个编译选项禁用这个行为。</p><pre><code>.cargo/config.toml
[unstable]
build-std-features = ["panic_immediate_abort"]
build-std = ["std","panic_abort"]
</code></pre><p>优化后前后体积变化</p><p>| 编译选项 | 体积 | | strip | 495k | | strip + opt-level = 'z' | 437k | | strip + opt-level = 'z' + lto | 436k | | strip + opt-level = 'z' + lto + panic = 'abort' + 代码裁减 + panic_immediate_abort | 135k |</p><p>再次分析，整个文件的体积已经降到了 135k，自己开发的核心代码占总代码量的 52%，基本符合预期。</p><pre><code> File  .text    Size Crate
14.2%  52.0% 41.3KiB jdmp
 3.2%  11.7%  9.3KiB core
 3.1%  11.4%  9.1KiB jni
 3.0%  11.0%  8.8KiB [Unknown]
 1.9%   6.8%  5.4KiB std
 0.9%   3.3%  2.6KiB alloc
 0.3%   1.1%    936B cesu8
 0.3%   1.0%    792B adler32
 0.1%   0.5%    372B aho_corasick
 0.1%   0.4%    316B regex_automata
 0.1%   0.3%    220B log
 0.1%   0.3%    216B hashbrown
 0.0%   0.1%    108B bytes
 0.0%   0.1%     44B combine
 0.0%   0.1%     44B rustc_demangle
 0.0%   0.0%      8B compiler_builtins
 0.0%   0.0%      8B jni_sys
</code></pre><h2>优化 linker script</h2><p>尽管目前文件体积已经相比一开始优化了不少，但是还没有达到接入要求。通过 readelf 进一步分析 ELF 文件的各个 section，我找到了一些额外的优化空间。</p><pre><code>$ aarch64-linux-gnu-readelf -S target/aarch64-linux-android/release/libjdmp.so
There are 24 section headers, starting at offset 0x21738:

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .note.android.ide NOTE             0000000000000270  00000270
       0000000000000098  0000000000000000   A       0     0     4
  [ 2] .dynsym           DYNSYM           0000000000000308  00000308
       00000000000002e8  0000000000000018   A       7     1     8
  [ 3] .gnu.version      VERSYM           00000000000005f0  000005f0
       000000000000003e  0000000000000002   A       2     0     2
  [ 4] .gnu.version_r    VERNEED          0000000000000630  00000630
       0000000000000040  0000000000000000   A       7     2     4
  [ 5] .gnu.hash         GNU_HASH         0000000000000670  00000670
       0000000000000024  0000000000000000   A       2     0     8
  [ 6] .hash             HASH             0000000000000694  00000694
       0000000000000100  0000000000000004   A       2     0     4
  [ 7] .dynstr           STRTAB           0000000000000794  00000794
       000000000000014d  0000000000000000   A       0     0     1
  [ 8] .rela.dyn         RELA             00000000000008e8  000008e8
       00000000000007f8  0000000000000018   A       2     0     8
  [ 9] .rela.plt         RELA             00000000000010e0  000010e0
       00000000000002a0  0000000000000018  AI       2    19     8
  [10] .rodata           PROGBITS         0000000000001380  00001380
       0000000000001d83  0000000000000000  AM       0     0     8
  [11] .eh_frame_hdr     PROGBITS         0000000000003104  00003104
       0000000000002494  0000000000000000   A       0     0     4
  [12] .eh_frame         PROGBITS         0000000000005598  00005598
       00000000000078cc  0000000000000000   A       0     0     8
  [13] .text             PROGBITS         000000000000de64  0000ce64
       0000000000013e0c  0000000000000000  AX       0     0     4
  [14] .plt              PROGBITS         0000000000021c70  00020c70
       00000000000001e0  0000000000000000  AX       0     0     16
  [15] .data.rel.ro      PROGBITS         0000000000022e50  00020e50
       0000000000000430  0000000000000000  WA       0     0     8
  [16] .fini_array       FINI_ARRAY       0000000000023280  00021280
       0000000000000010  0000000000000008  WA       0     0     8
  [17] .dynamic          DYNAMIC          0000000000023290  00021290
       0000000000000180  0000000000000010  WA       7     0     8
  [18] .got              PROGBITS         0000000000023410  00021410
       0000000000000048  0000000000000000  WA       0     0     8
  [19] .got.plt          PROGBITS         0000000000023458  00021458
       00000000000000f8  0000000000000000  WA       0     0     8
  [20] .data             PROGBITS         0000000000024550  00021550
       0000000000000060  0000000000000000  WA       0     0     8
  [21] .bss              NOBITS           00000000000245b0  000215b0
       0000000000000101  0000000000000000  WA       0     0     8
  [22] .comment          PROGBITS         0000000000000000  000215b0
       00000000000000b2  0000000000000001  MS       0     0     1
  [23] .shstrtab         STRTAB           0000000000000000  00021662
       00000000000000d3  0000000000000000           0     0     1
</code></pre><p>在对这些 section 进行优化时，有必要搞清楚每个 section 在程序运行的作用。</p><p>| section | 作用 | | .text | 代码段 | | .data .rodata .bss | 数据段 | | .plt .got .dynamic .dynsym .rela.dyn .rela.plt .shstrtab | 运行时被动态链接库解析，用于动态链接。 | | .eh_frame .eh_frame_hdr | 用于保存函数的栈帧偏移，方便栈回溯 | | .gnu.hash .gnu.version .gnu.version_r .hash | 保存编译文件元信息 |</p><p>程序在正常运行时，代码段、数据段必不可少，同时需要保留动态链接需要的 section。剩余的 section 可以移除，可以进一步优化文件体积。值得注意到是，删除.eh_frame .eh_frame_hdr 后，在程序崩溃时只能得到一个崩溃地址，无法进行栈回溯。</p><p>创建一个 linker script，只保留程序运行最小依赖的 section。</p><pre><code>PHDRS
{
  headers PT_PHDR PHDRS ;
  text PT_LOAD FILEHDR PHDRS ;
  data PT_LOAD ;
  dynamic PT_DYNAMIC ;
}
ENTRY(Reset);
EXTERN(RESET_VECTOR); 
SECTIONS
{
  . = SIZEOF_HEADERS;
  .text : { *(.text .text.*) } :text
  .rodata : { *(.rodata .rodata.*) } :text

  . = . + 0x1000;
  .data : { *(.data .data.*) *(.fini_array .fini_array.*) *(.got .got.*) *(.got.plt .got.plt.*) } : data
  .bss : {*(.bss .bss.*)} : data
  .dynamic : { *(.dynamic .dynamic.*)  } :data :dynamic

  /DISCARD/ :
  {
    *(.ARM.exidx .ARM.exidx.*);
    *(.gnu.version .gnu.version.*);
    *(.gnu.version_r .gnu.version_r.*);
    *(.eh_frame_hdr .eh_frame .eh_frame_hdr.* .eh_frame.* );
    *(.note.android.ident .note.android.ident.*);
    *(.comment .comment.*);
  }
}
</code></pre><p>修改编译参数，替换默认的 linker script</p><pre><code>.cargo/config.toml

[build]
target = ["aarch64-linux-android","armv7-linux-androideabi"]

[unstable]
build-std-features = ["panic_immediate_abort"]
build-std = ["std","panic_abort"]

[target.aarch64-linux-android]
rustflags = ["-C", "link-arg=-Tlinker.lds"]

[target.armv7-linux-androideabi]
rustflags = ["-C", "link-arg=-Tlinker.lds"]
</code></pre><p>经过一番操作，程序的体积最终裁减到了 95k！完美符合要求。</p><h1>总结</h1><p>| 编译选项 | 体积 | | strip | 495k | | strip + opt-level = 'z' | 437k | | strip + opt-level = 'z' + lto | 436k | | strip + opt-level = 'z' + lto + panic = 'abort' + 代码裁减 + panic_immediate_abort | 135k | | strip + opt-level = 'z' + lto + panic = 'abort' + 代码裁减 + panic_immediate_abort + 移除 section | 95k |</p><p>本文记录了我进行编译体积优化的各种操作，其中的一些策略在使用 C、C++语言开发中仍具有一定的通用性。</p><p>作者：尚红泽</p><p>来源：京东云开发者社区，转载请注明来源</p></div>
                                    ]]>
            </description>
            <pubDate>Mon, 05 Feb 2024 02:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/11030168</guid>
            <link>https://my.oschina.net/u/4090830/blog/11030168</link>
            <author>
                <![CDATA[京东云开发者]]>
            </author>
        </item>
    </channel>
</rss>
