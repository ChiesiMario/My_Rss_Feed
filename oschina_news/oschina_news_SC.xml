<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Wed, 20 Sep 2023 13:14:03 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[Linux 基金会分叉 Terraform，正式推出 OpenTofu]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>Linux 基金会宣布<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.linuxfoundation.org%2Fpress%2Fannouncing-opentofu" target="_blank">推出 OpenTofu</a>，这是一个 Terraform 的开源替代方案，并且分叉自 Terraform。OpenTofu 原名 OpenTF，为所有人提供了一个在中立治理模式下的可靠的开源替代方案。</p><p><img height="946" src="https://static.oschina.net/uploads/space/2023/0920/193044_nQSk_3820517.png" width="1716" referrerpolicy="no-referrer"></p><p>Terraform 是 HashiCorp 开源的一个安全和高效的用来构建、更改和合并基础设施的工具。Terraform 可管理已有的流行的服务，并提供自定义解决方案。它在简化云环境的基础设施管理方面起到了关键作用，但近期 Terraform 将许可证从 MPLv2.0 更改为「非开源许可」 BSLv1.1（商业源许可证），引发了开源社区反弹。这一变化威胁到了过去 9 年围绕 Terraform 建立的整个社区和生态。</p><p>当时 OpenTF 社区发起宣言，呼吁 HashiCorp 让 Terraform 重返社区，将开源协议恢复，如果拒绝，社区将分叉 Terraform。这个宣言获得了 35k+ star。</p><ul><li>详情可以查看往期报导：<a href="https://www.oschina.net/news/255700/opentf-fork-terraform">https://www.oschina.net/news/255700/opentf-fork-terraform</a></li></ul><p><img height="976" src="https://static.oschina.net/uploads/space/2023/0920/192923_Hhsl_3820517.png" width="1832" referrerpolicy="no-referrer"></p><p>如今正式推出 OpenTofu，并得到了「<span style="color:#000000">Harness、Gruntwork、Spacelift、env0、Scalr、Digger、Terrateam、Massdriver、Terramate 等行业领导者的广泛支持，OpenTofu 已经收到了来自 140 多个组织和 600 多个个人的正式支持。</span>」</p><p><span style="color:#000000">「我们相信，现代互联网的基本构建模块——如 Linux、Kubernetes 和 Terraform 等工具——必须是真正开源的，" Gruntwork 的联合创始人兼首席执行官，以及 OpenTofu 创始团队成员 Yevgeniy (Jim) Brikman 说。"这是确保我们的行业建立在坚实且可预测的基础之上的唯一方式。这就是为什么我们非常高兴 OpenTofu 现在是 Linux Foundation 的一部分：将这个项目交给一个基金会，而不是一家公司，意味着 OpenTofu 将由社区驱动并且始终是真正开源的。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 11:31:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258846/linux-foundation-announcing-opentofu</guid>
            <link>https://www.oschina.net/news/258846/linux-foundation-announcing-opentofu</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 仿生六足机器人制作全教程]]>
            </title>
            <description>
                <![CDATA[<h1><a id="user-content-六足机器人" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E5%85%AD%E8%B6%B3%E6%9C%BA%E5%99%A8%E4%BA%BA"></a>六足机器人</h1><h4><a id="user-content-介绍" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E4%BB%8B%E7%BB%8D"></a>介绍。</h4><p>制作仿生六足机器人的完整制作教程，该教程包含 3D 打印文件和制作全流程。</p><p>欢迎关注 Star <img class="emoji" alt=":kissing_heart:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/kissing_heart-fbb898728891eaf18c3bffa8f1f2f821.png" width="14" height="14" referrerpolicy="no-referrer"><img class="emoji" alt=":kissing_heart:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/kissing_heart-fbb898728891eaf18c3bffa8f1f2f821.png" width="14" height="14" referrerpolicy="no-referrer"><img class="emoji" alt=":kissing_heart:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/kissing_heart-fbb898728891eaf18c3bffa8f1f2f821.png" width="14" height="14" referrerpolicy="no-referrer"></p><p><img src="https://gitee.com/Brend0/hexapod-robot/raw/master/.gitee/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20230709205151.jpg" alt="输入图片说明" referrerpolicy="no-referrer"></p><p>B 站视频：<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV15x4y1N7id%2F%3Fpop_share%3D1%26vd_source%3D1608f0247af63a025b4aed15bc542838">https://www.bilibili.com/video/BV15x4y1N7id/?pop_share=1&amp;vd_source=1608f0247af63a025b4aed15bc542838</a></p><p>六足机器人是一种用六条腿行走的机械人。由于机器人可以在三条或更多条腿上保持静态稳定，因此六足机器人机器人在移动方式方面具有很大的灵活性。</p><p>许多六足机器人机器人的生物学灵感来自六足机器人运动。六足机器人可用于测试有关昆虫运动、运动控制和神经生物学的生物学理论。</p><h4><a id="user-content-硬件架构" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E7%A1%AC%E4%BB%B6%E6%9E%B6%E6%9E%84"></a>硬件架构</h4><p>硬件件架构说明</p><p>需要用到的电子元器件 (图片在电子元器件文件夹）</p><p>1.32 路舵机控制板</p><p>2.mini D1 wifi ESP8266 开发板 ModeMcu</p><p>3.SG90 9g 舵机</p><p>4.HENGE 恒吉 4A UBEC</p><p>5.电源降压模块</p><p>6.杜邦线若干+电源</p><h4><a id="user-content-安装教程" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B"></a>安装教程</h4><ol><li><p>3D 打印清单 (文件存放于 3D 打印文件夹中）：</p><p>3xcoxa-a.SLDPRT</p><p>3xcoxa-b.SLDPRT</p><p>3xfemur-a.SLDPRT</p><p>3xfemur-b.SLDPRT</p><p>1xhex-body-short.SLDPRT</p><p>1xhex-cover-short.SLDPRT</p><p>6xshield.SLDPRT</p><p>3xtibia-a.SLDPRT</p><p>3xtibia-b.SLDPRT</p></li><li><p>六足机器人的组装教程</p><p>整体组装示意图</p></li></ol><p><img src="https://gitee.com/Brend0/hexapod-robot/raw/master/.gitee/%E6%95%B4%E4%BD%93%E7%BB%84%E8%A3%85%E7%A4%BA%E6%84%8F.jpg" alt="输入图片说明" referrerpolicy="no-referrer"></p><p>具体组装流程:(因涉及图片较多 <strong>具体流程图片放在零件到整体文件夹</strong> 里 <img class="emoji" alt=":blush:" style="vertical-align: middle" src="https://cn-assets.gitee.com/assets/emoji/blush-85d11d8b7459d18f70eab0659c19a266.png" width="14" height="14" referrerpolicy="no-referrer"> ）</p><p>搭建视频教程：<a href="https://gitee.com/link?target=https%3A%2F%2Fwww.bilibili.com%2Fvideo%2FBV1oY4y1X7rZ%2F%3Fspm_id_from%3D333.1007.top_right_bar_window_dynamic.content.click%26vd_source%3D1608f0247af63a025b4aed15bc542838">https://www.bilibili.com/video/BV1oY4y1X7rZ/?spm_id_from=333.1007.top_right_bar_window_dynamic.content.click&amp;vd_source=1608f0247af63a025b4aed15bc542838</a></p><ol start="3"><li><p>线路组装教程</p><p>整体线路连接示意图</p></li></ol><p><img src="https://gitee.com/Brend0/hexapod-robot/raw/master/%E7%BA%BF%E8%B7%AF%E7%BB%84%E8%A3%85%E5%9B%BE/%E9%93%BE%E6%8E%A5%E7%94%B5%E8%B7%AF%E5%9B%BE.jpg" alt="输入图片说明" referrerpolicy="no-referrer"></p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line">舵机连接说明</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><p><img src="https://gitee.com/Brend0/hexapod-robot/raw/master/%E7%BA%BF%E8%B7%AF%E7%BB%84%E8%A3%85%E5%9B%BE/%E8%88%B5%E6%9C%BA%E9%93%BE%E6%8E%A5%E7%A4%BA%E6%84%8F%E5%9B%BE.jpg" alt="输入图片说明" referrerpolicy="no-referrer"></p><p>1.来自 UBEC 的 5v 电源输出 （+）</p><p>2.来自 UBEC 和迷你降压的地面</p><p>3.5V 电源输出 （+） 从迷你降压</p><p>4.至 Wemos D1 迷你 G 引脚</p><p>5.至 Wemos D1 迷你 5v 引脚</p><p>6.至 Wemos 迷你 RX 引脚</p><p>7.至 Wemos 迷你 TX 引脚</p><p>关节说明</p><p><img src="https://gitee.com/Brend0/hexapod-robot/raw/master/%E7%BA%BF%E8%B7%AF%E7%BB%84%E8%A3%85%E5%9B%BE/%E5%9B%BE%E7%89%871.png" alt="输入图片说明" referrerpolicy="no-referrer"></p><p>8.（将引脚颜色与舵机电缆颜色匹配）到右前腿（引脚 1 到髋关节，引脚 2 到膝关节，引脚 3 踝关节舵机）</p><p>9.（引脚颜色与伺服电缆颜色匹配）到左前腿（引脚 5 到髋关节，引脚 6 到膝关节，引脚 7 踝关节舵机）</p><p>11.（引脚颜色与伺服电缆颜色匹配）到左中腿（引脚 13 连接到髋关节，引脚 14 连接到膝关节，引脚 15 踝关节舵机）</p><p>12.（引脚颜色与伺服电缆颜色匹配）到右中间腿（引脚 17 连接到髋关节，引脚 18 连接到膝关节，引脚 19 踝关节舵机）</p><p>13.（引脚颜色与伺服电缆颜色匹配）到左后腿（引脚 25 连接到髋关节，引脚 26 到膝关节，引脚 27 踝关节舵机）</p><p>14.（引脚颜色与伺服电缆颜色匹配）到右后腿（引脚 29 连接到髋关节，引脚 30 连接到膝关节，引脚 31 踝关节舵机）</p><h4><a id="user-content-使用说明" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E"></a>使用说明</h4><ol><li>mini D1 ESP8266 WiFi 板电路连接示意图</li></ol><p><img src="https://gitee.com/Brend0/hexapod-robot/raw/master/%E7%BA%BF%E8%B7%AF%E7%BB%84%E8%A3%85%E5%9B%BE/mini%20D1%20%E9%93%BE%E6%8E%A5%E5%9B%BE.jpg" alt="输入图片说明" referrerpolicy="no-referrer"></p><p>电路连接说明：</p><p>WeMos D1 mini 是最小的 ESP8266 wifi 板</p><p>使用 wemos D1 mini 作为 WIFI AP，我们可以向 32 路舵机控制器发送串行命令，</p><p>并独立成为 Web 服务器 AP 来控制机器人。</p><p>引脚连接说明：</p><div class="white"><div class="highlight markdown-code-block"><pre><span id="LC1" class="line"> 1.到 32 路舵机控制器 RX 引脚</span><span id="LC2" class="line"></span><span id="LC3" class="line"> 2.到 32 路舵机控制器 TX 引脚 (注意不要把 RX、RT 引脚接反了，在开发板下载程序时，不要连接引脚）</span><span id="LC4" class="line"></span><span id="LC5" class="line"> 3.来自 32 路舵机控制器 G 针</span><span id="LC6" class="line"></span><span id="LC7" class="line"> 4.来自 32 路舵机控制器 5v 引脚</span></pre><div class="markdown-code-block-copy-btn"></div></div></div><ol start="2"><li><p>程序 (文件储存在程序文件夹)</p></li><li><p>开始使用</p></li></ol><p>我们可以将智能手机连接到 nodeMCU AP，并使用网络浏览器打开<a href="https://gitee.com/link?target=http%3A%2F%2F192.168.4.1%25EF%25BC%258C%25E6%2588%2591%25E4%25BB%25AC%25E5%258F%25AF%25E4%25BB%25A5%25E7%259C%258B%25E5%2588%25B0%25E6%2589%2580%25E6%259C%2589%25E7%259A%2584%25E5%2591%25BD%25E4%25BB%25A4%25E3%2580%2582%28%25E7%25BD%2591%25E5%259D%2580%25E4%25B8%2580%25E5%25AE%259A%25E8%25A6%2581%25E4%25BD%25BF%25E7%2594%25A8%25E6%2589%258B%25E6%259C%25BA%25E6%2589%2593%25E5%25BC%2580%25EF%25BC%2589">http://192.168.4.1，我们可以看到所有的命令。(网址一定要使用手机打开）</a></p><h4><a id="user-content-特别说明" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E7%89%B9%E5%88%AB%E8%AF%B4%E6%98%8E"></a>特别说明</h4><ol><li>本项目有参考网上的一些开源项目</li></ol><p><a href="https://gitee.com/link?target=https%3A%2F%2Facktomas.blog.csdn.net%2Farticle%2Fdetails%2F125620291%3Fspm%3D1001.2101.3001.6650.18">https://acktomas.blog.csdn.net/article/details/125620291?spm=1001.2101.3001.6650.18</a></p><p><a href="https://gitee.com/link?target=https%3A%2F%2Fblog.csdn.net%2Fzyc121561%2Farticle%2Fdetails%2F77679278%3Fops_request_misc%3D%25257B%252522request%25255Fid%252522%25253A%252522166873748816782414912961%252522%25252C%252522scm%252522%25253A%25252220140713.130102334..%252522%25257D%26request_id%3D166873748816782414912961%26biz_id%3D0%26spm%3D1018.2226.3001.4187">https://blog.csdn.net/zyc121561/article/details/77679278?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522166873748816782414912961%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=166873748816782414912961&amp;biz_id=0&amp;spm=1018.2226.3001.4187</a></p><ol start="2"><li>编程软件为 Arduino IDE ，舵机调试软件为 ServoController。</li></ol><h4><a id="user-content-特技" class="anchor" href="https://gitee.com/Brend0/hexapod-robot#%E7%89%B9%E6%8A%80"></a>特技</h4><ol><li>提供关于六足机器人的电路、3D 打印、程序的一切支持</li></ol>]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 10:42:14 GMT</pubDate>
            <guid isPermaLink="false">https://gitee.com/Brend0/hexapod-robot</guid>
            <link>https://gitee.com/Brend0/hexapod-robot</link>
        </item>
        <item>
            <title>
                <![CDATA[JumpServer 漏洞通知及修复方案（JS-2023.09.15）]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">尊嘟假嘟，成都程序员也 996 吗？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p style="margin-left:0; margin-right:0">2023 年 9 月 11 日，有用户反馈发现 JumpServer 开源堡垒机存在安全漏洞，并向 JumpServer 开源项目组进行上报。</p><p style="margin-left:0; margin-right:0">此次发现的漏洞为：</p><p style="margin-left:0; margin-right:0"><span style="color:#28937c">■</span><span>&nbsp;</span>JumpServer 的权限管理存在「未授权情况下可以访问录像文件」的漏洞，漏洞编号为 CVE-2023-42442。漏洞详情请查看：<em>https://github.com/jumpserver/jumpserver/security/advisories/GHSA-633x-3f4f-v9rw</em>。</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#28937c">以上漏洞影响版本为：</span></strong></p><p style="margin-left:0; margin-right:0">JumpServer v3.0.0-v3.5.4 版本</p><p style="margin-left:0; margin-right:0">JumpServer v3.6.0-v3.6.3 版本</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#28937c">安全版本为：</span></strong></p><p style="margin-left:0; margin-right:0">JumpServer 版本= v3.5.5 版本</p><p style="margin-left:0; margin-right:0">JumpServer 版本&gt;= v3.6.4 版本</p><span id="OSC_h2_1"></span><h2>修复方案</h2><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify">升级 JumpServer 软件至上述安全版本。</p><p>&nbsp;</p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 10:37:42 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4736111/blog/10112298</guid>
            <link>https://my.oschina.net/u/4736111/blog/10112298</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[书生·浦语 200 亿参数模型 InternLM-20B 开源]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>9 月 20 日，上海人工智能实验室（上海 AI 实验室）与商汤科技联合香港中文大学和复旦大学正式<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fy2THvSr5LqrLVO17BmmUBA" target="_blank">推出</a>书生·浦语大模型（InternLM）200 亿参数版本 InternLM-20B，并在阿里云魔搭社区（ModelScope）开源首发。同时，书生·浦语面向大模型研发与应用的全链条工具链全线升级，与 InternLM-20B 一同继续全面开放，向企业和开发者提供免费商用授权。</p><p>根据介绍，中量级参数的 InternLM-20B 大模型性能先进且应用便捷，以不足三分之一的参数量，达到了当前被视为开源模型标杆的 Llama2-70B 的能力水平。</p><blockquote><p>代码库链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FInternLM%2FInternLM" target="_blank">https://github.com/InternLM/InternLM</a></p><p>魔搭社区链接：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmodelscope.cn%2Forganization%2FShanghai_AI_Laboratory" target="_blank">https://modelscope.cn/organization/Shanghai_AI_Laboratory</a></p></blockquote><p><img alt="" height="593" src="https://oscimg.oschina.net/oscnet/up-b7759649dff3f210dcf42d8cc0f3c5f5e4c.png" width="500" referrerpolicy="no-referrer"></p><p>相比于国内社区之前陆续开源的 7B 和 13B 规格的模型，20B 量级模型具备更为强大的综合能力，在复杂推理和反思能力上尤为突出，因此可为实际应用带来更有力的性能支持；同时，20B 量级模型可在单卡上进行推理，经过低比特量化后，可运行在单块消费级 GPU 上，因而在实际应用中更为便捷。</p><p>InternLM-20B 是基于 2.3T token 预训练语料从头训练的中量级语言大模型。相较于 InternLM-7B，训练语料经过了更高水平的多层次清洗，补充了高知识密度和用于强化理解及推理能力的训练数据。因此，在考验语言模型技术水平的理解能力、推理能力、数学能力、编程能力等方面，InternLM-20B 都有显著提升。</p><p>相比于此前的开源模型，InternLM-20B 的能力优势主要体现在：</p><ul><li><strong>优异的综合性能。</strong>InternLM-20B 具备优异的综合性能，不仅全面领先相近量级的开源模型（包括 Llama-33B、Llama2-13B 以及国内主流的 7B、13B 开源模型），并且以不足三分之一的参数量，测评成绩达到了 Llama2-70B 的水平。</li><li><strong>强大的工具调用能力。</strong>InternLM-20B 拓展了模型的能力边界，实现了大模型与现实场景的有效连接。InternLM-20B 支持数十类插件，上万个 API 功能，在 ToolBench 评测集上获得了最佳结果，在与 ChatGPT 的竞赛中，胜率达到 63.5%。InternLM-20B 还具备代码解释和反思修正能力，为智能体（Agent）的构建提供了良好的技术基础。</li><li><strong>更长的语境。</strong>通过多阶段训练拓展，InternLM-20B 支持 16K 语境长度，从而更有效地支撑长文理解、长文生成和超长对话。 更安全的价值对齐。相比于之前版本，InternLM-20B 在价值对齐上更加安全可靠。在研发训练的过程中，研究团队通过基于 SFT（监督微调）和 RLHF（基于人类反馈的强化学习方式）两阶段价值对齐，以及专家红队的对抗训练，大幅提高其安全性。当用户带着偏见提问时，模型能够给出正面引导。</li><li><strong>全线升级的开源工具、数据体系。</strong>书生·浦语开源工具链全线升级，形成了更为完善的工具体系，其中包括预训练框架 InternLM-Train、低成本微调框架 XTuner、部署推理框架 LMDeploy、评测框架 OpenCompass 以及面向场景应用的智能体框架 Lagent。书生·浦语工具链将和开源数据平台 OpenDataLab 构成强大的开源工具及数据体系，共同为学术界和产业界提供全链条的研发与应用支持。</li></ul><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">基于 OpenCompass 大模型评测平台，研究人员在涵盖语言、知识、理解、推理和学科能力等五大维度的 50 个主流评测集上，对 InternLM-20B 及相近量级的开源模型进行了全面测试比较。评测结果显示，InternLM-20B 在全维度上领先于开源 13B 量级模型，平均成绩不仅明显超越 Llama-33B，甚至优于被称为开源模型的标杆 Llama2-70B。</span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"><img alt="" height="428" src="https://oscimg.oschina.net/oscnet/up-31e53adac9f6d53f50a359e1d2e23f16203.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"><img alt="" height="237" src="https://oscimg.oschina.net/oscnet/up-98e65baee57fd9e3b3785bf54bba664095a.png" width="300" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)"><img alt="" height="550" src="https://oscimg.oschina.net/oscnet/up-de0a30d7d3375416e6f622754745d6a35e0.jpg" width="300" referrerpolicy="no-referrer"></span></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">在清华大学等机构联合发布的大模型工具调用评测集 ToolBench 中，InternLM-20B 和 ChatGPT 相比,达到了 63.5% 的胜率，在该榜单上取得了最优结果，表现出强大的工具调用能力。</span></p><p><img height="369" src="https://oscimg.oschina.net/oscnet/up-caee1efd2bde156527d8d5d1f8296d946ac.png" width="500" referrerpolicy="no-referrer">&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 10:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258840</guid>
            <link>https://www.oschina.net/news/258840</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[华为推出全新架构升腾 AI 计算集群，可支持超万亿参数大模型训练]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>在华为全联接大会 2023 期间，华为常务董事、ICT 基础设施业务管理委员会主任、企业 BG 总裁汪涛正式发布全新架构的升腾 AI 计算集群 —— Atlas 900 SuperCluster，可支持超万亿参数的大模型训练。</p><p>据介绍，新集群采用全新的华为星河 AI 智算交换机 CloudEngine XH16800，借助其高密的 800GE 端口能力，两层交换网络即可实现 2250 节点（等效于 18000 张卡）超大规模无收敛集群组网。同时使用了创新的超节点架构，大大提升了大模型训练能力。并从器件级、节点级、集群级和业务级全面提升系统可靠性，将大模型训练稳定性从天级提升到月级。</p><p>与此外，华为还发布了更开放、更易用的 CANN7.0，不仅全面兼容业界的 AI 框架、加速库和主流大模型，还深度开放底层能力，让 AI 框架和加速库可以更直接地调用和管理计算资源，使能开发者自定义高性能算子，让大模型具备差异化的竞争力。</p><p>以及升级了 Ascend C 编程语言，以更高效的编程方式，简化算子实现逻辑，大幅缩短融合算子的开发周期，为 AI 模型与应用的快速开发赋能。</p><p>汪涛表示，随着人工智能进入大模型时代，大算力正在成为人工智能发展的核心引擎。华为改变传统的服务器堆叠模式，以系统架构创新打造 AI 集群，实现算力、运力、存力的一体化设计，突破大算力瓶颈。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 09:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258823</guid>
            <link>https://www.oschina.net/news/258823</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[浏览器可直接访问 Dubbo、gRPC 后端微服务，Dubbo-js 首个 alpha 版本来了！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">尊嘟假嘟，成都程序员也 996 吗？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p style="text-align:justify">基于 Dubbo3 定义的 Triple 协议，你可以轻松编写浏览器、gRPC 兼容的 RPC 服务，并让这些服务同时运行在 HTTP/1 和 HTTP/2 上。Dubbo TypeScript SDK<strong>[1]</strong>支持使用 IDL 或编程语言特有的方式定义服务，并提供一套轻量的 APl 来发布或调用这些服务。</p><p style="text-align:justify">Dubbo-js 已于 9 月份发布支持 Dubbo3 协议的首个 alpha 版本，它的发布将有机会彻底改变微服务前后端的架构与通信模式，让你能直接在浏览器页面或 web 服务器中访问后端 Dubbo、gRPC 服务。</p><p style="text-align:center"><img src="https://pic2.zhimg.com/80/v2-0ca9d9a8797a894e713b1802de9fd6b1_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_1"></span><h3>浏览器 Web 应用示例</h3><p style="text-align:justify">本示例演示了如何使用 dubbo-js 开发运行在浏览器上的 web 应用程序，web 页面将调用 dubbo node.js 开发的后端服务并生成页面内容。<strong>本示例演示基于 IDL 和非 IDL 两种编码模式。</strong></p><p style="text-align:center"><img src="https://pic4.zhimg.com/80/v2-a7e252462c1075a00b8df18dd7c2c097_720w.webp" referrerpolicy="no-referrer"></p><span id="OSC_h3_2"></span><h3>IDL 模式</h3><span id="OSC_h4_3"></span><h4>前置条件</h4><p style="text-align:justify">首先，我们将使用 Vite 来生成我们的前端项目模板，它内置了我们稍后需要的所有功能支持。</p><pre><code>npm create vite@latest -- dubbo-web-example --template react-ts
cd dubbo-web-example
npm install</code></pre><p style="text-align:justify">因为使用 Protocol Buffer 的原因，我们首先需要安装相关的代码生成工具，这包括 @bufbuild/protoc-gen-es、@bufbuild/protobuf、@apachedubbo/protoc-gen-apache-dubbo-es、@apachedubbo/dubbo。</p><pre><code>npm install @bufbuild/protoc-gen-es @bufbuild/protobuf @apachedubbo/protoc-gen-apache-dubbo-es @apachedubbo/dubbo</code></pre><span id="OSC_h4_4"></span><h4>使用 Proto 定义服务</h4><p style="text-align:justify">现在，使用 Protocol Buffer (IDL) 来定义一个 Dubbo 服务。</p><p style="text-align:justify">src 下创建 util/proto 目录，并生成文件。</p><pre><code>mkdir -p src/util/proto &amp;&amp; touch src/util/proto/example.proto</code></pre><p style="text-align:justify">写入内容：</p><pre><code>syntax = "proto3";

package apache.dubbo.demo.example.v1;

message SayRequest {
  string sentence = 1;
}

message SayResponse {
  string sentence = 1;
}

service ExampleService {
  rpc Say(SayRequest) returns (SayResponse) {}
}</code></pre><p style="text-align:justify">这个文件声明了一个叫做 ExampleService 的服务，为这个服务定义了 Say 方法以及它的请求参数 SayRequest 和返回值 SayResponse。</p><span id="OSC_h4_5"></span><h4>生成代码</h4><p style="text-align:justify">创建 gen 目录，作为生成文件放置的目标目录。</p><pre><code>mkdir -p src/util/gen</code></pre><p style="text-align:justify">运行以下命令，利用 protoc-gen-es、protoc-gen-apache-dubbo-es 等插件在 gen 目录下生成代码文件：</p><pre><code>PATH=$PATH:$(pwd)/node_modules/.bin \
  protoc -I src/util/proto \
  --es_out src/util/gen \
  --es_opt target=ts \
  --apache-dubbo-es_out src/util/gen \
  --apache-dubbo-es_opt target=ts \
  example.proto</code></pre><p style="text-align:justify">运行命令后，应该可以在目标目录中看到以下生成的文件:</p><pre><code>├── src
│   ├── util
│   │   ├── gen
│   │   │   ├── example_dubbo.ts
│   │   │   └── example_pb.ts
│   │   └── proto
│   │       └── example.proto</code></pre><span id="OSC_h4_6"></span><h4>创建 App</h4><p style="text-align:justify">需要先下载 @apachedubbo/dubbo-web。</p><pre><code>npm install @apachedubbo/dubbo-web</code></pre><p style="text-align:justify">现在我们可以从包中导入服务并设置一个客户端。在 App.tsx 中添加以下内容：</p><pre><code>import { useState } from "react";
import "./App.css";

import { createPromiseClient } from "@apachedubbo/dubbo";
import { createDubboTransport } from "@apachedubbo/dubbo-web";

// Import service definition that you want to connect to.
import { ExampleService } from "./util/gen/example_dubbo";

// The transport defines what type of endpoint we're hitting.
// In our example we'll be communicating with a Dubbo endpoint.
const transport = createDubboTransport({
  baseUrl: "http://localhost:8080",
});

// Here we make the client itself, combining the service
// definition with the transport.
const client = createPromiseClient(ExampleService, transport, { serviceGroup: 'dubbo', serviceVersion: '1.0.0' });

function App() {
  const [inputValue, setInputValue] = useState("");
  const [messages, setMessages] = useState&lt;
    {
      fromMe: boolean;
      message: string;
    }[]
  &gt;([]);
  return (
    &lt;&gt;
      &lt;ol&gt;
        {messages.map((msg, index) =&gt; (
          &lt;li key={index}&gt;{`${msg.fromMe ? "ME:" : "Dubbo Server:"} ${msg.message}`}&lt;/li&gt;
        ))}
      &lt;/ol&gt;
      &lt;form
        onSubmit={async (e) =&gt; {
          e.preventDefault();
          // Clear inputValue since the user has submitted.
          setInputValue("");
          // Store the inputValue in the chain of messages and
          // mark this message as coming from "me"
          setMessages((prev) =&gt; [
            ...prev,
            {
              fromMe: true,
              message: inputValue,
            },
          ]);
          const response = await client.say({
            sentence: inputValue,
          });
          setMessages((prev) =&gt; [
            ...prev,
            {
              fromMe: false,
              message: response.sentence,
            },
          ]);
        }}
      &gt;
        &lt;input value={inputValue} onChange={(e) =&gt; setInputValue(e.target.value)} /&gt;
        &lt;button type="submit"&gt;Send&lt;/button&gt;
      &lt;/form&gt;
    &lt;/&gt;
  );
}

export default App;</code></pre><p style="text-align:justify">执行以下命令，即可得到样例页面。</p><pre><code>npm run dev</code></pre><span id="OSC_h4_7"></span><h4>启动 Server</h4><p style="text-align:justify">接下来我们需要启动 Server，可以使用 Java、Go、Node.js 等 Dubbo 支持的任一语言开发 Server。这里我们采用 Dubbo 服务嵌入的 Node.js 服务器，具体可参考 Node.js 开发 Dubbo 后端服务<strong>[2]</strong>中的操作步骤。</p><p style="text-align:justify">不过需要注意，我们额外需要修改 Node.js 示例：引入 @fastify/cors 来解决前端请求的跨域问题。</p><pre><code>npm install @fastify/cors</code></pre><p style="text-align:justify">需要在 server.ts 文件下修改。</p><pre><code>...
import cors from "@fastify/cors";

...
async function main() {
  const server = fastify();
  ...
  await server.register(cors, {
    origin: true,
  });
  ...
  await server.listen({ host: "localhost", port: 8080 });
  ...
}

void main();</code></pre><p style="text-align:justify">最后，运行代码启动服务。</p><pre><code>npx tsx server.ts</code></pre><span id="OSC_h3_8"></span><h3>无 IDL 模式</h3><p style="text-align:justify">在接下来的版本中，我们将继续提供无 IDL 模式的通信支持，这样就可以更方便的访问无 IDL 的后端服务。在这里，我们先快速的看一下无 IDL 模式的使用方式。</p><p style="text-align:justify">同样需要先安装 @apachedubbo/dubbo、@apachedubbo/dubbo-web。</p><pre><code>npm install @apachedubbo/dubbo @apachedubbo/dubbo-web</code></pre><p style="text-align:justify">现在就可以一个启动一个客户端，并发起调用了。App.tsx 中的代码与 IDL 模式基本一致，区别点在于以下内容：</p><pre><code>// ...
// set backend server to connect
const transport = createDubboTransport({
  baseUrl: "http://localhost:8080",
});
// init client
const client = createPromiseClient(transport);

function App() {
  // ...
  // call remote Dubbo service
  const response = await client.call(
    "apache.dubbo.demo.example.v1.ExampleService", 
    "say", 
    {
      sentence: inputValue,
    });
}</code></pre><p style="text-align:justify">执行以下命令，即可得到样例页面。</p><pre><code>npm run dev</code></pre><span id="OSC_h3_9"></span><h3>总结</h3><p style="text-align:justify">直接在浏览器页面或 web 服务器中访问后端 Dubbo RPC 服务！Dubbo Triple 协议升级以及 Dubbo javascript sdk 的发布，对整个微服务体系是一个非常有力的补充，期待看到它能改变未来整个微服务架构以及前后端通信模式。</p><p style="text-align:justify"><strong>相关链接：</strong></p><p style="text-align:justify">[1] Dubbo TypeScript SDK</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fapache%2Fdubbo-js%2F%253Fspm%253Da2c6h.13046898.publish-article.9.15696ffaXgyemr" target="_blank">https://github.com/apache/dubbo-js/</a></em></u></p><p style="text-align:justify">[2] Node.js 开发 Dubbo 后端服务</p><p style="text-align:justify"><u><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flink.zhihu.com%2F%3Ftarget%3Dhttps%253A%2F%2Fgithub.com%2Fapache%2Fdubbo-js%2Ftree%2Fdubbo3%2Fexample%2Fdubbo-node-example%253Fspm%253Da2c6h.13046898.publish-article.10.15696ffaXgyemr" target="_blank">https://github.com/apache/dubbo-js/tree/dubbo3/example/dubbo-node-example</a></em></u></p><p style="text-align:justify"><em>作者：蔡建怿</em></p><blockquote><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fclick.aliyun.com%2Fm%2F1000373503%2F" target="_blank"><span style="color:#ff9900">点击立即免费试用云产品，开启云上实践之旅！</span></a></strong></blockquote><p style="text-align:justify"><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fclick.aliyun.com%2Fm%2F1000380504%2F" target="_blank">原文链接</a></strong></p><p style="text-align:justify"><strong>本文为阿里云原创内容，未经允许不得转载。</strong></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 08:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/yunqi/blog/10112234</guid>
            <link>https://my.oschina.net/yunqi/blog/10112234</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 共建会员沙龙（第六期）杭州站成功举办]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">9 月 19 日，由</span><strong><span style="color:#000000">openKylin 社区主办、平头哥半导体有限公司承办</span></strong><span style="color:#000000">的</span><strong><span style="color:#000000">第六期共建会员沙龙</span></strong><span style="color:#000000">在杭州顺利举行。立足新时期，我国数字产业发展根基愈牢，关键技术领域自主创新能力持续增强，以开源带动软件生产模式创新、补足软件供应链短板的理念已得到业界足够重视。</span></span></p><p style="margin-left:0px; margin-right:0px; text-align:justify">openKylin 社区共建会员沙龙旨在邀请社区单位会员及致力于开源产业的各界伙伴共同探讨数字化转型期的开源机遇及优势，搭建开源领域的交流合作平台，推动 Linux 开源技术及其软硬件生态繁荣发展。</p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-e144d333729a88d30571c1e703f03b7aa45.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">此次活动中，平头哥半导体有限公司软件研发总监李春强、openKylin 社区技术委员会委员王文竹为活动致辞。openKylin 社区生态合作负责人马发俊，PLCT Lab 项目总监吴伟，平头哥半导体有限公司生态总监陈炜，杭州瑞成信息技术股份有限公司基础研发部经理侯海宾，Avalonia 中文社区发起人董彬进行主题分享。最后，各与会代表就开源治理及社区共建等相关问题展开交流讨论，openKylin 社区秘书长余杰作会议总结。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#fdd105">PART 1</span></span></strong></span><strong><span style="color:#333333">会议致辞</span></strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">平头哥半导体有限公司软件研发总监李春强为此次沙龙致辞</span></strong><span style="color:#000000">并表示，欢迎大家来到位于杭州的美丽的阿里园区参加由 openKylin 社区主办，平头哥承办的共建会员沙龙，平头哥作为 openKylin 社区合作伙伴，将共同推动社区 RISC-V 生态繁荣发展。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-729eb7a4821dd713c77a830bb7832dae0c8.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">openKylin 社区技术委员会委员王文竹为此次沙龙致辞，</span></strong><span style="color:#000000">他表示，各位伙伴的加入为 openKylin 社区的持续发展注入了创新力量。未来，我们将以开源为抓手，与业界同仁共同努力，着力于技术创新和生态共建，共同打造桌面操作系统顶级根社区。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-343d13afa490031a1b9405374b5643cd636.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#fdd105">PART 2</span></span></strong></span><strong><span style="color:#333333">主题分享</span></strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">openKylin 社区生态合作负责人马发俊</span></strong><span style="color:#000000">，向与会伙伴介绍了社区的基本情况、治理模式、开源趋势及社区取得的相关成果。openKylin 社区将联合共建会员进行生态协同和技术创新，让更多伙伴能够在社区平台共享、共赢，目前，已有 40 多家合作伙伴参与和创建了 30 多个 SIG 组，为社区贡献技术创新力量，在大家的共同努力下，最终将社区建设成为具有国际影响力的开源社区。未来，openKylin 社区期待有更多伙伴加入、携手共建下一代操作系统创新生态。</span></span></p><div><p style="text-align:center"><img alt="" height="1280" src="https://oscimg.oschina.net/oscnet/up-bec1a47f714f2a027dd1799709db1b0cb59.jpg" width="1706" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">PLCT Lab 项目总监吴伟</span></strong><span style="color:#000000">发表</span><strong><span style="color:#000000">《RISC-V &amp; openKylin: Get ready for the 1 million developers》</span></strong><span style="color:#000000">主题分享。PLCT Lab 致力于成为编译技术领域的开源领导者，推进工具链及运行时系统等软件基础设施的技术革新，并致力于培养一万名编译领域尖端人才，推动先进编译技术在国内的普及和发展。PLCT Lab 将携手 openKylin 社区共同为推动 RISC-V 产业生态献策、献力，并协助和加速 openKylin 在 RISC-V 架构上的国际化脚步。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-3ee4f9b38a6bfc32d0c767024eece285136.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">平头哥半导体有限公司生态总监陈炜</span></strong><span style="color:#000000">发表</span><strong><span style="color:#000000">《玄铁软硬件全栈技术，助力 RISC-V 生态发展》</span></strong><span style="color:#000000">主题分享。平头哥成立于 2018 年，目前已拥有端云一体的全栈产品系列，涵盖了数据中心芯片、IoT 芯片、处理器 IP 等产品及解决方案，实现了芯片端到端设计链路全覆盖。在加入 openKylin 社区后，携手社区完成了平头哥 TH1520 与 openKylin 操作系统的适配工作，并在 openKylin 操作系统上实现首个 RV 商业 IM 工具。未来双方将持续深化合作，共同致力于 RISC-V 生态的发展与探索。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-6adb25ab0e0bdbf677146ebcaecad090086.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">杭州瑞成信息技术股份有限公司基础研发部经理侯海宾</span></strong><span style="color:#000000">发表</span><strong><span style="color:#000000">《瑞成科技携手开放麒麟，共建开放应用生态》</span></strong><span style="color:#000000">主题分享。瑞成科技成立于 2006 年，是一家专注于协同、数据、智能、安全等核心技术，以整合行业软硬件产业链、提供行业整体解决方案的高科技企业。加入 openKylin 社区后，申请成立了 Notification SIG 组和 RPA SIG，持续谋划并推进 SIG 组工作，为社区贡献瑞成力量。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-48e8242675b8659c06e7c9e76fa3c690a5d.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#000000">Avalonia 中文社区发起人董彬</span></strong><span style="color:#000000">发表</span><strong><span style="color:#000000">《Avalonia 与 openKylin 开源社区共建及生态展望》</span></strong><span style="color:#000000">主题分享。在加入 openKylin 社区后，Avalonia 中文社区成立了 Avalonia SIG，致力于推进 Avalonia UI 对 openKylin 生态的支持，及 Avalonia UI 的相关生态建设。未来，双方也将持续展开合作，将 Avalonia UI 的强大功能与 openKylin 操作系统的优势相结合，为用户带来更加出色的使用体验，促进操作系统桌面软件生态蓬勃发展。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-cf39bee522a23ec8d256402d533434e9091.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong><span style="color:#ffffff"><span style="background-color:#fdd105">PART 3</span></span></strong></span><strong><span style="color:#333333">交流讨论</span></strong></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">在共建根社区建设交流研讨中，参与此次沙龙的各企业代表积极参与，围绕社区各个产品领域的标准制定，操作系统创新生态打造等话题，探讨未来伙伴间更多维度、更深层次合作方向。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-4f1a35ce0272610502f3c8750bd650a0f4b.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">最后，</span><strong><span style="color:#000000">openKylin 秘书长余杰就本次会议进行总结发言</span></strong><span style="color:#000000">。他表示，感谢大家参加 openKylin 社区杭州站沙龙，openKylin 社区联合生态厂商协同创新，通过建立完善社区组织架构和运营机制，建立社区同单位会员间平等、开放的沟通交流机制，让更多伙伴能够在社区平台共享、共赢，最终建成具有国际影响力的开源社区。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-66197ddbcf4ba81c8fd73ac5aa3d341211e.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">openKylin 作为国内桌面操作系统根社区，以聚焦桌面操作系统根技术为核心、以打造创新生态为途径、以孵化相关领域关键项目为目标、以布道开源文化为抓手、以聚合开源优秀人才为根基，愿携手更多伙伴共同推动，致力于推动 Linux 开源技术及其软硬件生态繁荣发展。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 07:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258810</guid>
            <link>https://www.oschina.net/news/258810</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Jakarta EE 开发者调查 2023：中国社区参与度尤其高]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">Eclipse 基金会推出了 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnewsroom.eclipse.org%2Fnews%2Fannouncements%2Feclipse-foundation-releases-2023-jakarta-ee-developer-survey-report" target="_blank">2023 年 Jakarta EE 开发人员调查报告</a>。结果表明，Jakarta EE 的使用量显着增长，并且总体上对云原生 Java 的兴趣日益增长。</span></p><p><span style="color:#000000">Jakarta EE 开发人员调查旨在深入了解 Java 生态系统中开发人员的需求、偏好和观点；帮助 Java 生态系统更好地了解云原生企业 Java 的不断发展的前景，以及这对各自的战略和业务意味着什么。今年的调查从 2025 年 3 月 14 日到 5 月 23 日，共有 2,203 名参与者，相较去年增加了 53%。</span></p><p><span style="color:#000000">今年的调查还提供中文、日语、西班牙语和葡萄牙语版本。官方表示，今年中国 Jakarta EE 社区的参与度尤其高，有超过 27% 的回复来自中国。</span></p><p><span style="color:#000000"><img alt="" height="311" src="https://oscimg.oschina.net/oscnet/up-e44a13ee50350f053dc304f7c2e8ac81120.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">以下是今年调查的一些主要发现：</span></p><ul><li><span style="color:#000000">融合了 Jakarta EE 元素的 Spring/Spring Boot 仍然是云原生应用的主要 Java 框架，占比 66%（高于 2022 年的 57%）。Jakarta EE 使用率稳定在 53%；而 MicroProfile 使用率略有下降，从 2022 年的 30% 下降到 2023 年的 26%。需要注意的是，Spring/SpringBoot 的运行依赖于 Jakarta EE 开发，并不一定与 Jakarta EE 竞争。两者都是企业 Java 生态系统健康发展的关键因素。</span></li><li><span style="color:#000000">28%（2022 年为 25%）的受访者将开发云原生应用程序来替换部分或全部现有服务，而 24% 的受访者将修改现有 Java 应用程序以迁移到云中（2022 年为 28%）。22% 的受访者目前在云中运行 Java 应用程序（2022 年这一比例为 18%）</span></li><li><span style="color:#000000">尽管 2022 年 9 月才发布，但 Jakarta EE 10 的使用率已增长至 17%。</span></li><li><span style="color:#000000">超过 60% 的受访者（2022 年为 59%）表示已经或计划在未来 6-24 个月内迁移到&nbsp;Jakarta EE。</span></li><li><span style="color:#000000">17% 的受访者在生产中运行 Jakarta EE 9/9.1（高于 2022 年的 14%），28% 的受访者目前在生产中运行 Jakarta EE 8（2022 年为 24%）</span></li><li><span style="color:#000000">Jakarta EE 社区对于将 Java SE 中实现的创新应用到 Jakarta EE 中非常感兴趣 (30%)。报告指出，这是一个很好的迹象，表明 Jakarta EE 11 发布计划采用 Java SE 21 新功能的方向是正确的。</span></li><li><span style="color:#000000">受访者中排名前五的云平台供应商是 Amazon Web Services、Microsoft Azure、Google Cloud Platform、阿里云和 IBM Cloud。</span></li><li><span style="color:#000000">Jakarta EE 的五个首要社区优先事项是：</span><ul><li><span style="color:#000000">对 Kubernetes 更好的支持 50%（2022 年为 51%）</span></li><li><span style="color:#000000">更好地支持微服务 (48%)</span></li><li><span style="color:#000000">适应 Java SE 创新（例如记录和虚拟线程）(30%)</span></li><li><span style="color:#000000">改进对 serverless 的支持 (25%)</span></li><li><span style="color:#000000">现有 Java EE / Jakarta EE 或云供应商提供更快的支持，改善对测试的支持并加快创新步伐 (23%)</span></li></ul></li></ul><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">Eclipse 基金会执行董事 Mike Milinkovich 发言称：「2023 年，云原生 Java 将持续增长，开源将引领潮流。Jakarta EE 10 的发布真正为这一转变打开了大门，当我们将目光投向 Jakarta EE 11 时，我们的社区希望通过提供新的和增强的 API 以及采用 Java 语言和平台。」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 07:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258807/2023-jakarta-ee-developer-survey-report</guid>
            <link>https://www.oschina.net/news/258807/2023-jakarta-ee-developer-survey-report</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[程序员空闲时间应该继续卷技术，还是找其他副业？]]>
            </title>
            <description>
                <![CDATA[<h1 class="header article-title"><a href="https://www.oschina.net/question/2720166_2331049">程序员空闲时间应该继续卷技术，还是找其他副业？</a></h1><div class="extra ui horizontal list meta-wrap"><div class="item"><a href="https://my.oschina.net/hardbone" class="__user"><span>局</span></a> 发布于 42 分钟前
                    </div><div class="item">阅读 138</div><div class="item collect-btn " data-id="2331049" data-user-id="2720166" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i> 收藏 <span data-collect-count="" data-id="2331049" data-obj-type="2">0</span></div><div class="item comment-count"><a href="https://www.oschina.net/question/2720166_2331049#comments" class="normal"><i class="comment outline icon"></i> 评论 <span data-article-reply-count="">0</span></a></div></div><div class="content" id="articleContent"><p class="ad-wrap"><a data-traceid="question_detail_above_text_link_ad" data-tracepid="question_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">尊嘟假嘟，成都程序员也 996 吗？&gt;&gt;&gt; <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></p><p>最近几年经济下行，企业数量锐减，资本保守的情况下，互联网行业人才饱和，就业难度越来越大。对于普通的程序员来说，应该利用有限时间继续卷技术还是去找其他可能的副业。</p></div><div class="poll-wrap"></div><div class="additional-remarks"></div><div class="ui basic center aligned segment action"><div class="ui big buttons"><a class="ui basic button collect-btn hover" data-id="2331049" data-user-id="2720166" data-obj-type="2" data-max="99" data-tag-required="" data-current-user-id="" data-recommend-tags=""><i class="star outline icon"></i>收藏 (<span data-collect-count="" data-id="2331049" data-obj-type="2">0</span>)</a><div class="ui basic dropdown share button osc-share dropdown-share" data-tag="share-question"><i class="share icon"></i><span>分享</span><div class="menu"><a class="item" data-platform="weibo" data-value="weibo"><i class="weibo icon"></i>微博</a><a class="item" data-platform="qq" data-value="qq"><i class="qq icon"></i>QQ</a><a class="item" data-platform="wechat" data-value="wechat"><i class="weixin icon"></i>微信</a></div></div></div><div class="ui basic segment"><a class="ban" ban-report="" data-id="2331049" data-obj-type="2" data-url="https://www.oschina.net/question/2720166_2331049"><i class="flag red icon"></i>举报</a></div></div>
            ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 07:35:18 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/question/2720166_2331049</guid>
            <link>https://www.oschina.net/question/2720166_2331049</link>
        </item>
        <item>
            <title>
                <![CDATA[Bard 更新：迄今为止最强大的模型、集成谷歌全家桶]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>谷歌对话式 AI 产品 Bard 近日发布了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbard.google.com%2Fupdates" target="_blank">更新</a>。</p><p>从现在开始，Bard 开始提供插件生态。它可以调用丰富的谷歌应用 API，从而执行复杂的操作。你每天使用的谷歌工具，比如 Gmail、Docs、Drive、谷歌地图、Youtube、谷歌航班等应用，Bard 都能打开，然后从中为你找到需要的信息。</p><p>即使需要的信息分散在多个应用和服务中，有了 Bard 也能快速集成。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0973ea2474b81e52114278b1be524b91198.png" referrerpolicy="no-referrer"></p><hr><p>下文是更新说明。</p><p><strong>全新推出：Bard 迄今为止最强大的模型</strong></p><ul><li>具体变化：得益于你的反馈，Bard 现在更直观明了、更富于想象力、响应速度更快。无论你是想要让 Bard 帮你撰写富有趣味和创意的内容，随心使用 40 多种语言中的任意一种与 Bard 对话，还是要寻求深度编程协助，或是从不同角度了解新主题，Bard 都能以更出色的质量和准确度帮助你探索各种可能性。</li><li>原因：我们秉承快速迭代原则，努力将 Bard 最先进的「黑科技」带给全世界。你的反馈帮助我们构建出了迄今为止最强大的 Bard 版本，让用户能够在世界各地使用多种语言与 Bard 协作。</li></ul><p><img src="https://static.oschina.net/uploads/space/2023/0920/153052_NulT_2720166.gif" referrerpolicy="no-referrer"></p><p><strong>借助改版后的「用 Google 搜索」功能核查 Bard 的回答</strong></p><ul><li><p>具体变化：利用 Google 搜索的强大功能，[G] 按钮可帮助你核查 Bard 使用 AI 生成的回答。此功能目前只支持英语。当我们能够评估某项陈述时，相应陈述会在 Bard 的回答中突出显示，点击一下即可了解详情。</p><p>注意：所提供的链接是 Google 搜索找到的内容，并不代表 Bard 原来给出的回答是根据这个来源生成的。</p></li><li><p>原因：如今，人们使用 AI 工具以新的方式更轻松地了解复杂的主题。随着你在 Bard 的帮助下学习新知，很重要的一点是让你对 AI 生成的信息更有信心。</p></li></ul><p><strong>接着与你分享的对话继续聊</strong></p><ul><li>具体变化：有人通过 Bard 的公共链接功能与你分享 Bard 对话时，你可以使用自己的账号接着这些对话继续聊。</li><li>原因：我们经常从其他人那里得到灵感启发，接触到的想法越多，就越有可能提出真正创新的想法。因此，我们希望你能够更轻松地将他人分享的对话作为切入点，展开自己的创意探索。</li></ul><p><strong>所有支持的语言都可使用更多功能</strong></p><ul><li>具体变化：在所有受支持的语言中，你现在可以使用 Google 智能镜头上传图片、在回答中看到来自 Google 搜索的图片，并让 Bard 将回答修改得更简单、更详尽、更简短、更专业或更随意一点。</li><li>原因：通过让 Bard 将回答修改得更符合你的需求，你将能够更好地控制自己的创意流程。在问题中加入图片可以激发新的创意，而回答中的图片将有助于你将创意变为现实。</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 07:29:18 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258800/bard-update-sep-2023</guid>
            <link>https://www.oschina.net/news/258800/bard-update-sep-2023</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Java/JDK 21 正式发布！15 个特性一览]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" target="_blank">尊嘟假嘟，成都程序员也 996 吗？ <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p>JDK 21 已经于 2023 年 9 月 19 日正式发布。本文总结了 JDK 21 发布的新特性。</p><h2>发布版本说明</h2><p>根据发布的规划，这次发布的 JDK 21 将是一个长期支持版（LTS 版）。LTS 版每 2 年发布一个，上一次长期支持版是 21 年 9 月发布的 JDK 17。</p><p>本版本是 Java SE 平台 21 版的参考实现，由 Java 社区流程中的<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenjdk.org%2Fprojects%2Fjdk%2F21%2Fspec" target="_blank">JSR 396</a>指定。</p><h2>安装包下载</h2><p>主要分为 OpenJDK 版本和 Oracle 版本，下载地址如下：</p><ul><li>OpenJDK 版本：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjdk.java.net%2F21%2F" target="_blank">https://jdk.java.net/21/</a></li><li>Oracle 版本：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oracle.com%2Fjava%2Ftechnologies%2Fdownloads%2F" target="_blank">https://www.oracle.com/java/technologies/downloads/</a></li></ul><p>上述版本，如果是个人学习用途，则差异不大。但如果是用于商业用途，则需要仔细看好相关的授权。Oracle JDK 商用需要遵循 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.oracle.com%2Fdownloads%2Flicenses%2Fjavase-license1.html" target="_blank">Oracle No-Fee Terms and Conditions (NFTC)</a>协议，而 OpenJDK 根据 GPL v2 许可获得许可。</p><p>更多有关 Java 的基本知识，可以参阅《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fitem.jd.com%2F12868796.html" target="_blank">Java 核心编程</a>》这本书，描述的非常详细。</p><h2>JDK 21 新特性说明</h2><h3>正式稳定功能</h3><h4>JEP 431：序列集合</h4><p>序列集合（Sequenced Collections）在 <code>core-libs/java.util:collections</code> 包中。</p><p>该 JEP 提议引入「一个新的接口族，用于表示集合的概念，这些集合的元素按照预定义的序列或顺序排列，它们是作为集合的结构属性。」这一提案的动机是由于集合框架中缺乏预定义的顺序和统一的操作集。</p><h4>JEP 439：分代 ZGC</h4><p>分代 ZGC（Generational ZGC）在 <code>hotspot/gc</code> 包中。</p><p>通过扩展 Z 垃圾回收器（ZGC）来维护年轻对象和年老对象的独立生成，从而提高应用程序性能。这将使 ZGC 能够更频繁地收集年轻对象——这些对象往往英年早逝。</p><h4>JEP 440：记录模式</h4><p>使用记录模式（Record Patterns）增强 Java 编程语言，以解构记录值。可以嵌套记录模式和类型模式，以实现功能强大、声明性和可组合形式的数据导航和处理。</p><h4>JEP 441：switch 模式匹配</h4><p>通过 switch 表达式和语句的模式匹配来增强 Java 编程语言。通过将模式匹配扩展到 switch，可以针对多个模式测试表达式，每个模式都有一个特定的操作，从而可以简洁、安全地表达复杂的面向数据的查询。</p><h4>JEP 444：虚拟线程</h4><p>将虚拟线程（Virtual Threads）引入 Java 平台。虚拟线程是轻量级线程，可以显著减少编写、维护和观察高吞吐量并发应用程序的工作量。</p><p>详见<a href="https://my.oschina.net/u/853151/blog/5513698">《Java 下一代高并发技术——虚拟线程（Virtual Threads）》</a>。</p><h4>JEP 449：弃用 Windows 32 位 x86 移植</h4><p>弃用 Windows 32 位 x86 移植，并打算在将来的版本中将其删除。</p><h4>JEP 451：准备禁止动态加载代理</h4><p>将代理动态加载到正在运行的 JVM 中时发出警告。这些警告旨在让用户为将来的版本做好准备，该版本默认情况下不允许动态加载代理，以提高默认情况下的完整性。在启动时加载代理的可服务性工具不会导致在任何版本中发出警告。</p><h4>JEP 452：密钥封装机制 API</h4><p>介绍一种用于密钥封装机制（Key Encapsulation Mechanism，简称 KEM）的 API，这是一种使用公钥加密来保护对称密钥的加密技术。</p><h3>预览阶段功能</h3><h4>JEP 430：字符串模板（预览）</h4><p>使用字符串模板（String Templates）增强 Java 编程语言。字符串模板通过将文本与嵌入的表达式和模板处理器耦合来生成专门的结果，从而补充 Java 现有的字符串文本和文本块。这是一个预览语言功能和 API。</p><h4>JEP 442：外部函数和内存 API（第三次预览）</h4><p>引入 API，Java 程序可以通过该 API 与 Java 运行时之外的代码和数据进行互操作。通过有效地调用外部函数（即 JVM 外部的代码），并通过安全地访问外部内存（即不受 JVM 管理的内存），API 使 Java 程序能够调用本机库并处理本机数据，而不会出现 JNI 的脆弱性和危险性。这是一个预览 API。</p><h4>JEP 443：未命名模式和变量（预览）</h4><p>使用未命名模式和未命名变量来增强 Java 语言，未命名模式匹配记录组件而不说明组件的名称或类型，未命名变量可以初始化但不使用。两者都用下划线字符<code>_</code>表示。这是一个预览语言功能。</p><h4>JEP 445：未命名类和实例主方法（预览）</h4><p>发展 Java 语言，使学生无需理解为大型程序设计的语言功能即可编写第一个程序。学生们不用使用单独的 Java 方言，就可以为单类程序编写精简的声明，然后随着技能的发展，无缝地扩展程序，使用更高级的功能。这是一个预览语言功能。</p><h4>JEP 446：作用域值（预览）</h4><p>引入作用域值，这些值可以在不使用方法参数的情况下安全有效地共享给方法。它们优先于线程化局部变量，尤其是在使用大量虚拟线程时。这是一个预览 API。</p><p>实际上，作用域值是一个隐式方法参数。这「就好像」一系列调用中的每个方法都有一个额外的、不可见的参数。没有任何方法声明此参数，只有能够访问作用域值对象的方法才能访问其值（数据）。通过作用域值，可以通过一系列中间方法将数据从调用者安全地传递给遥远的被调用者，这些中间方法不声明数据的参数，也无法访问数据。</p><h4>JEP 453：结构化并发（预览）</h4><p>通过引入用于结构化并发（Structured Concurrency）的 API 来简化并发编程。结构化并发将在不同线程中运行的相关任务组视为单个工作单元，从而简化错误处理和消除，提高可靠性，并增强可观察性。这是一个预览 API。</p><h3>孵化阶段功能</h3><h4>JEP 448：Vector API（孵化器第六阶段）</h4><p>引入 API 来表示向量计算，这些向量计算在运行时可靠地编译为支持的 CPU 架构上的最佳向量指令，从而实现优于等效标量计算的性能。</p><h2>参考引用</h2><ul><li>本文同步至: <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwaylau.com%2Fjdk-21-released%2F" target="_blank">https://waylau.com/jdk-21-released/</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwaylau.com%2Fjdk-17-released%2F" target="_blank">https://waylau.com/jdk-17-released/</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwaylau.com%2Fjdk-16-released%2F" target="_blank">https://waylau.com/jdk-16-released/</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwaylau.com%2Fjdk-15-released%2F" target="_blank">https://waylau.com/jdk-15-released/</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwaylau.com%2Fjdk-14-released%2F" target="_blank">https://waylau.com/jdk-14-released/</a></li><li>《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fitem.jd.com%2F12868796.html" target="_blank">Java 核心编程</a>》</li><li>开源项目「现代 Java 案例大全」 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fwaylau%2Fmodern-java-demos" target="_blank">https://github.com/waylau/modern-java-demos</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 07:09:08 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/waylau/blog/10112170</guid>
            <link>https://my.oschina.net/waylau/blog/10112170</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[英伟达开源内核驱动 Nouveau 维护者 Ben Skeggs 辞职]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>英伟达 GPU 内核开源驱动 Nouveau 维护者 Ben Skeggs 在邮件列表宣布已从 Red Hat <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.freedesktop.org%2Farchives%2Fnouveau%2F2023-September%2F043241.html" target="_blank">辞职</a>，以及<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flists.freedesktop.org%2Farchives%2Fnouveau%2F2023-September%2F043239.html" target="_blank">退出</a> Nouveau 开发。</p><p><img src="https://static.oschina.net/uploads/space/2023/0920/144359_Q9l6_2720166.png" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/0920/142748_HwYo_2720166.png" referrerpolicy="no-referrer"></p><p>Ben Skeggs 此前一直为 Red Hat 工作，他从 2008 年起就担任 Nouveau 的维护者。他最后递交的补丁为内核驱动加入了利用英伟达 GPU 系统处理器 GSP 固件改进 RTX 20/30 系列显卡的硬件支持，加入对 RTX 40 Ada Lovelace GPU 的初步支持。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.phoronix.com%2Fnews%2FNouveau-Maintainer-Resigns" target="_blank">据介绍</a>，Ben Skeggs 在很大程度上主导了内核驱动程序部分，他在 Red Hat 工作期间一直是 Nouveau 内核驱动程序的第一贡献者。</p><p>Ben Skeggs 表示，选择辞去维护者职务是他多年来一直在考虑的个人决定。随着 GSP-RM 极大地简化了对未来硬件的支持，以及围绕 NVK 建立的社区，目前一切都掌握在良好的环境中，所以自己时候去探索其他新事物了。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 06:51:51 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258796/nouveau-maintainer-resigns</guid>
            <link>https://www.oschina.net/news/258796/nouveau-maintainer-resigns</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[喜报！CNCF 基金会宣布 KCL 成为沙盒项目！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p style="text-align:center"><img height="238" src="https://oscimg.oschina.net/oscnet/up-a41a03375ca9d8dded0e62d6f4d2c1e9398.png" width="424" referrerpolicy="no-referrer"></p><p><strong>2023 年 9 月 20&nbsp;日，KCL 项目通过了全球顶级开源基金会云原生计算基金会（CNCF）技术监督委员会评定，正式成为 CNCF 沙箱项目。</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">这意味着 KCL 得到了云原生开源社区的认可，保障了项目的中立性，有利于开发者、合作伙伴等共同参与项目建设，协作共赢，并为云原生应用交付带来动态配置管理和自动化能力迈出了重要一步！</p><ul><li><p><em><span style="color:#00c9ff">项目地址：https://github.com/kcl-lang/kcl</span></em></p></li><li><p><span style="color:#00c9ff"><em>项目官网：https://kcl-lang.io</em></span></p></li></ul><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">通过进入 CNCF 沙箱，KCL 社区将更多吸引更多开发者和用户参与共建，进一步推动项目在云原生业务场景的成熟应用，此外加入 CNCF 将为 KCL 提供一个增强的协作和创新平台。它提供了与处于云原生技术前沿的多元化开发者、组织和行业专家社区进行交流的机会。我们期待与其他 CNCF 项目进行更多合作，贡献我们的技术专业知识，并探索更多 CNCF 项目集成的可能性。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center"><span style="color:#149fe3"><strong><span style="color:#000000"><span style="background-color:#ffffff; color:#149fe3"><strong>｜什么是 CNCF｜</strong></span></span></strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">CNCF，全称 Cloud Native Computing Foundation（云原生计算基金会），是 Linux 基金会旗下的子基金会。CNCF 致力于为云原生软件构建可持续生态系统，涉及领域包括存储、计算、编排、调度、CI/CD、DevOps、服务治理、服务网关等。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><em>比如 Kubernetes 便是 CNCF 最具代表性的项目之一。</em></p><p style="color:#000000; margin-left:0px; margin-right:0px; text-align:center"><strong><span style="color:#000000"><span style="color:#149fe3"><strong>｜什么是 CNCF 沙盒项目｜</strong></span></span></strong></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="cncf-sandbox-logo" src="https://kcl-lang.io/zh-CN/assets/images/cncf-sandbox-logo-b53944d3e90e9c2789be2eebcbd36e82.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="243" src="https://oscimg.oschina.net/oscnet/up-6af37f09c1071fb9cf6ac833c05da223186.png" width="1080" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">CNCF 社区将项目分为沙箱项目（Sandbox）、孵化项目（Incubating）、毕业项目（Graduated）。著名的毕业项目有：Kubernetes、Prometheus、Istio、ETCD、Containerd、ArgoCD 和 Helm 等。完整的毕业和孵化项目列表查看地址：</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><em><span style="color:#00c9ff">https://www.cncf.io/projects/</span></em></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">Sandbox 是 CNCF 创建的，旨在为开源项目提供一个有益的、中立的家园，以促进开源项目的合作与开发。入选沙箱的项目，是被 CNCF TOC 认可的，并值得进行实验和开发的潜力项目。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">Sandbox 对应的是 CNCF 社区早期项目，列表为：<span style="color:#00c9ff"><em>https://www.cncf.io/sandbox-projects/</em></span>。进入 Sandbox 需要 66% 以上的 TOC（技术委员会）成员赞成，即全部 11 人<span>&nbsp;</span><span style="color:#00c9ff"><em>https://github.com/cncf/toc#members</em></span><span>&nbsp;</span>中的 8 人投赞成票。</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center"><strong>｜什么是 KCL｜</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">KCL 是一个开源的基于约束的记录及函数语言，期望通过成熟的编程语言技术和实践来改进对大量繁杂配置比如云原生 Kubernetes 配置场景的编写，致力于围绕配置的模块化、扩展性和稳定性，打造更简单的逻辑编写体验，构建更简单的自动化和生态集成路径。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">项目主要里程碑如下：</p><ul><li><p>2022 年 5 月，KCL 正式开源</p></li><li><p>2023 年 6 月，KCL 正式成为 CNCF Landscape 项目</p></li><li><p>2023 年 9 月，KCL 由 CNCF 应用交付 TAG 进行审核并通过 TOC 投票，顺利成为 CNCF Sandbox 项目 -&nbsp;<span style="color:#00c9ff"><em>https://github.com/cncf/sandbox/issues/48</em></span></p><p style="margin-left:0; margin-right:0">&nbsp;</p></li></ul><p style="text-align:center"><span style="color:#149fe3"><strong>｜为什么需要 KCL｜</strong></span></p><p><span style="color:#149fe3"><span style="background-color:#ffffff; color:#000000">正如记录音乐有五线谱，存储时间序列数据有时序数据库一样，在云原生配置和自动化的特定问题域内，我们使用专用配置和策略语言用于编写和管理规模化复杂配置及策略。不同于混合编写范式、混合工程能力的高级通用语言，专用语言的核心逻辑是以收敛的有限的语法、语义集合解决领域问题近乎无限的变化和复杂性，将复杂配置和策略编写思路和方式沉淀到语言特性中。</span></span></p><p>&nbsp;</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">此外，KCL 期望通过更现代化的声明式配置语言和工具，<strong>在轻量级客户端<strong>云原生</strong>动态配置领域</strong>填补配置语言及工具的空白并解决如下问题：</p><ul><li><p><strong>维度爆炸</strong>: 大多数静态配置如云原生领域的 Kubernetes YAML 配置需要为每个环境单独进行配置；在最糟糕的情况下，它可能引入涉及环境交叉链接的难以调试的错误，稳定性和扩展性都较差。</p></li><li><p><strong>配置漂移</strong>: 对于不同环境的静态管理应用程序和基础设施配置的方式，往往没有标准的方式去管理这些动态的不同环境的配置，采用非标准化的方法比如脚本和胶水代码的拼盘，会导致复杂度呈指数增长，并导致配置漂移。</p></li><li><p><strong>认知负担:&nbsp;</strong><span style="background-color:#ffffff; color:#010101">Kubernetes 等作为构建</span><span style="background-color:#ffffff; color:#010101">平台的平台技术手段在底层统一基础架构细节方面出色，但是缺乏更上层的应用软件交付抽象，对于普通开发者认知负担较高，影响了更上层应用开发者的软件交付体验。</span></p><p>&nbsp;</p></li></ul><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">针对如上问题，KCL 期望提供如下能力:</p><ul><li><p>通过<strong>代码抽象</strong>等手段屏蔽基础设施和平台的细节和复杂性，降低研发者<strong>认知负担</strong></p></li><li><p><strong>编辑</strong>和<strong>校验</strong>已有的存量配置或模版，直接解决云原生小配置场景问题如 Helm Chart 配置硬编码问题，但远不止如此</p></li><li><p>通过配置语言无副作用地<strong>管理跨团队的大规模配置数据</strong>，提升团队协作效率</p><p>&nbsp;</p></li></ul><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">具体来说，KCL 可以</p><ul><li><p>在代码层面提升<strong>配置语义验证</strong>的能力，比如 Schema 定义、字段可选/必选、类型、范围等配置检查校验能力</p></li><li><p><span style="background-color:#ffffff; color:#010101">提供</span><strong>配置分块编写、组合和抽象的能力</strong><span style="background-color:#ffffff; color:#010101">，比如结构定义、结构继承、约束定义和配置策略合并等能力</span></p></li><li><p>用<strong>现代编程语言的方式</strong>以<strong>编写代码</strong>的方式提升配置的灵活度，比如条件语句、循环、函数、包管理等特性提升配置重用的能力</p></li><li><p>提供<strong>完备的工具链支持</strong>，丰富的 IDE 插件、语言和生态工具链支持用以降低上手门槛，提升使用体验</p></li><li><p>通过<strong>包管理工具</strong>&nbsp;和&nbsp;<strong>OCI Registry</strong>&nbsp;使得配置以更简单的方式在不同团队/角色之间分享，传播和交付</p></li><li><p>提供<strong>高性能</strong>的编译器满足规模化配置场景诉求，比如满足<span style="color:#000000">由一份基线配置根据部署上下文生成不同环境不同拓扑的配置的渲染性能以及配置自动化修改性能诉求</span></p></li><li><p>通过<strong>多语言 SDK</strong>，<strong>KCL 语言插件</strong>等手段提升其<strong>自动化</strong>集成能力，在发挥配置及策略编写价值的同时显著降低 KCL 的学习成本<img src="https://kcl-lang.io/zh-CN/assets/images/kcl-overview-315e5b285928477465eb35cd948465b8.png" referrerpolicy="no-referrer"></p></li></ul><p style="text-align:center"><img height="419" src="https://oscimg.oschina.net/oscnet/up-14f88d56dc509bac9692814321dfe59bc98.png" width="702" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">除了语言自身，KCL 还提供了许多额外的工具如格式化，测试、文档等工具帮助您使用、理解和检查编写的配置或策略；通过 VS Code 等 IDE 插件，包管理工具和 Playground 降低配置编写和分享的成本；通过 Rust, Go, 和 Python 多语言 SDK 自动化地管理和执行配置。</p><p>&nbsp;</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:center"><strong>｜KCL 能做什么｜</strong></p><h3>动态配置管理<img alt="standalone-kcl-form" src="https://kcl-lang.io/zh-CN/assets/images/standalone-kcl-form-499fd62a1d02c6c23b7ed8d4914c455b.png" referrerpolicy="no-referrer"></h3><p style="text-align:center"><img height="1194" src="https://oscimg.oschina.net/oscnet/up-aed023a32ce859b08a2a646d966823394de.png" width="2252" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">作为一种配置语言，KCL 为应用程序和平台开发人员/SRE 提供的最重要的功能是动态配置管理。通过代码抽象，我们可以构建以应用为中心的模型屏蔽复杂的基础设施和平台概念，为开发人员提供一个以应用程序为中心且易于理解的界面。此外，KCL 还允许平台人员快速扩展和定义自己的模型，并且这些模型可以通过 OCI 注册表进行分享和复用。</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:center"><img alt="krm-kcl-form" src="https://kcl-lang.io/zh-CN/assets/images/krm-kcl-form-3e0ac516e88e65ac80c211f625bc1f34.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="1076" src="https://oscimg.oschina.net/oscnet/up-b807f87f96d5eaddb0d1e2143b8f6c2ddae.png" width="2166" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">此外，KCL 还支持与 Kubernetes Resource Model (KRM) 规范直接集成，KRM KCL 是一个通用的配置模型规范，用于描述和管理各种云原生资源，如容器、Pod、服务的配置操作和抽象等。KRM KCL 规范提供了一种统一的方式来定义和管理这些资源，使得它们可以在不同的环境中进行移植和复用。它建立在一个完全开放的 Kubernetes 世界当中，几乎不与任何编排/引擎工具或者 Kubernetes 控制器绑定，它在关注点分离的基础上允许平台人员扩展自己的抽象，配置编辑和验证逻辑，并提供一个开发者友好的配置管理界面。</span></p><h3>GitOps 集成</h3><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify"><img alt="gitops" src="https://kcl-lang.io/zh-CN/assets/images/gitops-bbba7c639b8c999d6cbc87d8f1c2cc15.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="1018" src="https://oscimg.oschina.net/oscnet/up-3d1eee757adb63965049e779673d57f60e2.png" width="2182" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">无论是使用独立的 KCL 还是 KRM KCL 配置形式，我们都支持 KCL 与各种以及 CI/CD 和 GitOps 工具的集成，KCL 允许开发人员以声明式的方式定义应用程序所需的资源，通过将 KCL 和 GitOps 工具相结合可以帮助我们更好地实现基础设施即代码（IaC），提高部署效率，简化应用程序的配置管理。</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">使用 GitOps，开发人员和运维团队可以通过分别修改应用和配置代码来管理应用程序的部署，GitOps 工具链可以基于 KCL 的自动化能力实现对配置的自动更改，从而实现持续部署并确保一致性。如果出现问题，可以使用 GitOps 工具链快速回滚。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><span style="color:#1c1e21"><strong>｜生态集成｜</strong></span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="integration" src="https://kcl-lang.io/zh-CN/assets/images/integration-e4e36aeb48fcc6de8aae0c00e5070723.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="1048" src="https://oscimg.oschina.net/oscnet/up-0fc196549ec403da19cd3616f384311b5c4.png" width="2192" referrerpolicy="no-referrer"></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">除了与 ArgoCD 等 GitOps 自动化工具进行集成，作为 CNCF 的项目，KCL 还与 CNCF 其他众多生态项目进行了集成，比如<span style="background-color:#ffffff; color:#010101">为现有的 CNCF 生态配置管理工具项目如 Helm、Kustomize、kpt 等提供 KCL 插件，在运行时提供 KCL Kubernetes Operator，以满足不同场景的配置管理需求等。此外我们还提供如下集成支持：</span></p><ul><li><p><strong>多语言支持</strong>：我们提供了多语言 SDK，帮助用户以不同的语言操作 KCL，并将其集成到自己的应用程序中。</p></li><li><p><strong>包管理支持</strong>：我们提供了 KPM 包管理工具可以将 KCL 配置通过 docker hub, GitHub 容器注册表进行分发和复用。</p></li><li><p><strong>Schema 生态支持</strong>：我们支持其他生态系统的 Schema 一键迁移到 KCL Schema，如 Go/Rust 结构定义、JsonSchema、Protobuf、OpenAPI、Terraform Provider Schema 等。</p><p>&nbsp;</p></li></ul><p style="margin-left:0; margin-right:0; text-align:center"><strong>｜落地实践｜</strong><img alt="practice-krm-kcl" src="https://kcl-lang.io/zh-CN/assets/images/practice-krm-kcl-1ee09831b8dc50884175002184e44063.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="1040" src="https://oscimg.oschina.net/oscnet/up-7d596c604743a5db35c79b956f46e24de48.png" width="3538" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">首先，KCL 作为云原生领域内的一个小语言，它可以直接被用于解决场景中简单的小问题，如通过 KCL 模型直接为 Kubernetes 资源注入环境变量等配置而不是编写脚本，通过 KCL 模型和 Helm KCL 插件无侵入处理 Helm Chart 的硬编码配置而不是 Fork Helm Chart 直接修改等。</span></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="practice-konfig-gitops" src="https://kcl-lang.io/zh-CN/assets/images/practice-konfig-gitops-32092b98b555d3597ce893c7a74eca5b.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="892" src="https://oscimg.oschina.net/oscnet/up-3d8b4753e0110a53091fd663052e661618c.png" width="1812" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">其次，KCL 也可以被用于企业内部与各种 CI/CD 和应用配置交付引擎比如 KusionStack 相配合，实现关注点分离、以应用为中心的可编程模型界面和 GitOps 流程，以简化当今混合多云环境中规模化应用的部署和运维操作，提升发布运维效率和开发者体验。</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">当然，KCL 能够解决的问题和实践的场景远不止如此，我们会陆续分享社区中采用者的最佳实践，也欢迎大家加入我们的社区进行进一步交流和讨论 ❤️。<em>https://github.com/kcl-lang/community</em></span></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center"><strong>｜社区动态｜</strong></p><p style="margin-left:0; margin-right:0; text-align:center"><img alt="community" src="https://kcl-lang.io/zh-CN/assets/images/community-07fc26fccb17f189e8cbf91ef011486a.png" referrerpolicy="no-referrer"></p><p style="text-align:center"><img height="1092" src="https://oscimg.oschina.net/oscnet/up-18bb238df61c66725265bdbb393c4b67918.png" width="2166" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#000000">在 KCL 开源短短的这一年里，我们发布了许多版本，并与全世界许多贡献者和维护者合作构建了 KCL 社区，并得到了一些采用者比如有赞和华为等公司的认可，通过加入 CNCF，我们的目标是提高项目的知名度并促进社区采用和参与，因为强大且知名的基金会组织对于推动语言生态系统的发展至关重要。</span></p><p style="margin-left:0; margin-right:0"><span style="background-color:#ffffff; color:#000000">此外，我们在开源社区也收获了来自全世界包括北美、欧洲、澳大利亚和台湾各地小伙伴的认可，感谢一路陪伴 KCL 走来的各位用户和社区研发者，同时也欢迎更多的小伙伴加入到我们的社区一起共建 ❤️</span></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="text-align:center"><img height="467" src="https://oscimg.oschina.net/oscnet/up-1fc2d01dcb1f21fb82ecdfa27de411b1019.png" width="1080" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0; text-align:center">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center"><strong>｜结语｜</strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="background-color:#ffffff; color:#000000">对 KCL 来说，加入 CNCF 并不代表成功，它意味着一个新的开始，我们将和社区的小伙伴们一起努力打造更好的 KCL 语言、工具链和 IDE 体验！最后，也欢迎大家加入我们的社区进行交流和贡献 👏👏👏</span></p><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:center"><span style="background-color:#ffffff; color:#000000"><strong>｜其他资源｜</strong></span></p><ul><li><p><span style="color:#149fe3"><em><span>KCL 网站</span></em></span><span style="color:#149fe3"><em><span style="color:#149fe3">:</span></em><em><span style="color:#149fe3">&nbsp;<span style="color:#149fe3">https://kcl-lang.io/</span></span></em></span></p></li><li><p><span style="color:#149fe3"><em><span>KusionStack 网站:&nbsp;</span></em></span><span style="color:#149fe3"><em><span style="color:#149fe3">https://kusionstack.io/</span></em></span></p><p>&nbsp;</p></li><li><p><span style="color:#3498db"><em>KCL 社区: https://github.com/kcl-lang/community</em></span></p></li><li><p><span style="color:#149fe3"><em>KCL 2023 路线规划: https://kcl-lang.io/docs/community/release-policy/roadmap</em></span></p></li><li><p><span style="color:#149fe3"><em>KCL GitHub Issues: https://github.com/kcl-lang/kcl/issues</em></span></p></li><li><p><span style="color:#149fe3"><em>KCL GitHub Discussion: https://github.com/orgs/kcl-lang/discussions</em></span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 05:53:21 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258784/kcl-cncf-sanbox</guid>
            <link>https://www.oschina.net/news/258784/kcl-cncf-sanbox</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[IntelliJ IDEA 2023.2.2 发布，支持 Java 21]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="background-color:#ffffff; color:#333333">IntelliJ IDEA 2023.2.2 现已发布，这是&nbsp;</span><span style="background-color:#ffffff; color:#19191c">v2023.2 的第二个错误修复更新。 一些更新亮点如下：</span></p><ul style="margin-left:0; margin-right:0"><li>在「Branches」弹出窗口中，现在可以通过「Show Recent Branches」设置禁用「Recent&nbsp;」部分。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-326901%2FAllow-disabling-Recent-branches-view" target="_blank">IDEA-326901</a>&nbsp;]</li><li>Shift&nbsp;+Enter 快捷键按预期工作，从分屏右侧的「Search Everywhere」选项卡中打开文件。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-326670%2F" target="_blank">IDEA-326670</a>&nbsp;]</li><li>项目工具窗口再次显示目录列表。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-326394" target="_blank">IDEA-326394</a>&nbsp;]</li><li>使用包含表格的 Markdown 文件时导致性能下降的问题已得到解决。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-326905%2F" target="_blank">IDEA-326905</a>&nbsp;]</li><li>IDE 不再因线程「AWT-EventQueue-1」错误中的异常而挂起在 splash screen 上。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-314813" target="_blank">IDEA-314813</a>&nbsp;]</li><li>IDE 再次正确保留 EditorConfig 格式。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-326450" target="_blank">IDEA-326450</a>&nbsp;]</li><li>IDE 不再显示 GitLab 合并请求的不相关管道。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-326509" target="_blank">IDEA-326509</a>&nbsp;]</li><li>IDE 不再错误地报告 build.gradle 脚本中版本目录别名无法识别的依赖符号。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-316687" target="_blank">IDEA-316687</a>&nbsp;]</li><li>之前添加到项目中的 Facet 不再在 IDE 重新启动时消失。[&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyoutrack.jetbrains.com%2Fissue%2FIDEA-321822" target="_blank">IDEA-321822</a>&nbsp;]</li></ul><p style="margin-left:0; margin-right:0; text-align:start"><span><span><span><span><span style="color:#19191c"><span><span><span><span><span><span><span><span><span><span><span><span style="background-color:#ffffff"><span><span><span>IntelliJ IDEA 2023.2.2 支持最新的&nbsp;Java 21&nbsp;更新。</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="background-color:#ffffff; color:#19191c">更多详情可</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.jetbrains.com%2Fidea%2F2023%2F09%2Fintellij-idea-2023-2-2%2F" target="_blank">查看官方博客</a><span style="background-color:#ffffff; color:#19191c">。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 03:34:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258766/intellij-idea-2023-2-2-released</guid>
            <link>https://www.oschina.net/news/258766/intellij-idea-2023-2-2-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Windows 「画图」应用支持图层和透明度]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>微软于 9 月 19 日向 Windows 预览体验通道的部分用户 (Dev &amp; Canary) 推送新版画图应用，版本号为 v11.2308.18.0。</p><p>该版本画图支持图层功能，用户可以在画布上添加、删除和管理图层，借助图层实现形状、文本和其他图像元素堆叠，创造出更为复杂的图像内容。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8ebce4495505d89a69e4bf953ca061713f3.png" referrerpolicy="no-referrer"></p><p><em>▲ 通过工具栏中的新图层按钮打开侧面板，给画布添加图层，或更改图层顺序</em></p><p>此外新版画图应用还引入了图像透明度支持，允许用户打开、保存透明背景的 PNG 文件，在编辑 PNG 文件时画布也会让透明背景突出显示。</p><p>微软称用户可以打开和保存透明 PNG，在画布上擦除内容将是真的删除掉内容，而不是涂成白色。透明度支持也可以和图层功能配合使用。如果有多个图层，擦除上一个图层中的内容将会显示下一个图层中的内容。</p><p><img height="1403" src="https://static.oschina.net/uploads/space/2023/0920/112535_rsxa_2720166.gif" width="2063" referrerpolicy="no-referrer"></p><p>来源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.windows.com%2Fwindows-insider%2F2023%2F09%2F18%2Fpaint-app-update-adding-support-for-layers-and-transparency-begins-rolling-out-to-windows-insiders%2F" target="_blank">Windows Blog</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 03:29:09 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258765/paint-app-adding-support-for-layers-and-transparency</guid>
            <link>https://www.oschina.net/news/258765/paint-app-adding-support-for-layers-and-transparency</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[GraalVM for JDK 21]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>GraalVM for <a href="https://www.oschina.net/news/258730/jdk-21-lts-ga" target="_blank">JDK 21</a> 已正式发布。</p><p>此版本新增了许多 GraalVM 特性以及 Java 21 特性。例如，GraalVM 现在完全支持虚拟线程，包括原生镜像 (Native Image) —— 不再需要将它们作为预览功能启用。</p><p>下载地址：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.graalvm.org%2Fdownloads%2F" target="_blank">https://www.graalvm.org/downloads/</a></u></p><blockquote><p>GraalVM 是一个高性能的 JDK 发行版。它旨在加速用 Java 和其他 JVM 语言编写的应用程序的执行，同时还为 JavaScript、Python、基于 LLVM 的语言（如 C 和 C++）以及许多其他流行编程语言提供运行时。</p><p>此外，GraalVM 为编程语言之间提供了高效互操作性，并将 Java 应用程序提前编译为本机可执行文件，从而加快启动时间并降低内存开销。</p></blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-86c0f057e1251e80b7794bdf9b2c63f1b3d.png" referrerpolicy="no-referrer"></p><p>下面是 GraalVM 原生镜像 (Native Image) 的部分性能表现：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-8079846a58983f1f61ea7c284a89154e25d.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0d97fd8afba7362cc3d9bd7775a8aaf1cf6.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-23b77027593796f8c1c0d2fc95d7d57b30e.png" referrerpolicy="no-referrer"></p><p>总而言之，使用 Native Image 可以最大限度地提高所有方面性能，包括峰值吞吐量、延迟、内存使用、启动和打包大小。</p><p>此外，此版本实现了 Java Vector API (JEP 338) 操作的初步优化。 JVM 上的多个操作现在尽可能转换为高效的机器指令。此优化默认启用（可以使用<code>-Dgraal.OptimizeVectorAPI=false</code>禁用它）。</p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmedium.com%2Fgraalvm%2Fgraalvm-for-jdk-21-is-here-ee01177dd12d" target="_blank">详情查看发布公告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 03:03:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258762/graalvm-for-jdk-21</guid>
            <link>https://www.oschina.net/news/258762/graalvm-for-jdk-21</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[百度发布国内首个「产业级」医疗大模型灵医大模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>百度<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FFaCGdrPvxTowa_MojEALkQ" target="_blank">宣布</a>发布国内首个「产业级」医疗大模型 —— 灵医大模型，并面向大健康上下游产业开放灵医大模型测评、试用，推动医疗行业的数字化和智能化进程。</p><p>根据介绍，灵医大模型以文心大模型为技术底座；是国内首个「产业级」医疗大模型，也是国内首个实现商业化落地的医疗大模型。其目前已与固生堂、零假设等达成合作，并定向向公立医院、药械企业、互联网医院平台、连锁药房等 200 多家医疗机构开放。</p><p><img height="272" src="https://oscimg.oschina.net/oscnet/up-4964fbe060242e73d7f92ad8915976ad85b.png" width="500" referrerpolicy="no-referrer"></p><p><img height="183" src="https://oscimg.oschina.net/oscnet/up-ba7bce464af89384b6be76746f174685c17.png" width="500" referrerpolicy="no-referrer"></p><p>灵医大模型能够结合自由文本秒级生成结构化病历，根据医患对话精准分析生成主诉、现病史等内容。此外，灵医大模型也是业内唯一支持多篇中英文文献同时解析的大模型，基于文献解析内容实现智能问答。</p><p>在辅助诊疗方面，灵医大模型可实现通过多轮对话了解病人病情，实时辅助医生确诊疾病，推荐治疗方案，提升就诊全流程的效率和体验，并成为患者的 24 小时「健康管家」，提供智能客服服务。此外，灵医大模型还能为药企提供多项赋能，包括专业培训、医药信息支持等等。</p><p>百度大健康事业群 AI 产业部总经理刘军伟表示，「模型即服务，灵医大模型希望打造 AI 原生的多层次产品体系。基于数据预训练、微调的灵医大模型具备强大的开放能力，支持生态伙伴进行 API 调用、插件集成，为终端用户提供完整服务。」</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 03:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258761</guid>
            <link>https://www.oschina.net/news/258761</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国家安全部：美国 2009 年开始入侵华为总部服务器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>「国家安全部」微信公众号 20 日发布文章《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FFNOb9IAnMe7-wiDTA6HlxQ" target="_blank">起底美国情报机关网攻窃密的主要卑劣手段</a>》，其中指出：近日，中国国家计算机病毒应急处理中心通报，在处置西北工业大学遭受网络攻击时，成功提取了名为「二次约会」的间谍软件样本。该软件为美国国家安全局开发的网络「间谍」武器，在遍布全球多国的上千台网络设备中潜藏隐秘运行。</p><p>美国国家安全局，通过其下属的特定入侵行动办公室（TAO）以及先进的武器库，多次对我国进行体系化、平台化攻击，试图窃取我国重要数据资源。</p><p><strong>2009 年，特定入侵行动办公室就开始入侵华为总部的服务器并持续开展监控</strong>。2022 年 9 月，又被发现长期持续地对包括西北工业大学在内的国内网络目标实施了上万次恶意网络攻击，控制了数以万计的网络设备，窃取大量高价值数据。</p><p>以下为全文</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-556538ddac19db2e1421a400d3f849bb7e3.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 02:38:29 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258755</guid>
            <link>https://www.oschina.net/news/258755</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[腾讯开源 SD 工作流保存插件 LightDiffusionFlow]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>腾讯<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F_Jpzl0ZXvQ7t5LZquEipVA" target="_blank">宣布</a>开源 SD 工作流保存插件 LightDiffusionFlow。这是一个基于 AI 绘画开源平台 StableDiffusion webUI（简称 SD）的开源插件，它可以帮助你一键保存所有工作流数据，下次使用只需拖入 Flow 文件，就能快速复现整个工作流，就像使用 Photoshop 的 PSD 样机文件那样方便。</p><p><img alt="" height="281" src="https://oscimg.oschina.net/oscnet/up-761ae50dada20a421f4f5a91e5852c6d720.png" width="500" referrerpolicy="no-referrer"></p><h4>功能</h4><ul><li><strong>保存与复现工作流</strong></li></ul><p>一键保存或复现 SD 绘画工作流，包括模型、提示词、垫图和其他第三方插件的参数设置。</p><ul><li><strong>支持读取 PNG Info</strong></li></ul><p>兼容读取图片内置的 PNG Info，并自动还原到 UI 界面上，并且支持解析和还原 ControlNet 设置。</p><ul><li><strong>自动搜索模型</strong></li></ul><p>导入 Flow 文件时，会自动在 Civitai 搜索相关模型，匹配对应模型并提供下载链接。</p><ul><li><strong>支持第三方插件</strong></li></ul><p>理论上支持保存所有第三方插件的参数。</p><ul><li><strong>SD 初学者友好</strong></li></ul><p>针对 SD 初学者，提供一些可靠的工作流文件，一键载入，支持自定义调参。</p><h4><strong>价值</strong></h4><ul><li><strong>针对 SD 初学者</strong></li></ul><p>通过 Flow 文件，可以快速上手 SD，极大的降低 SD 的学习和使用门槛，快速提升 AI 绘画能力。</p><ul><li><strong>针对 SD 进阶者</strong></li></ul><p>通过 LightDiffusionFlow，可以快速保存优质的工作流，快速复用一键复现，减少繁琐的操作成本，并可以更好得传播 AI 绘画能力。</p><ul><li><strong>针对企业团队</strong></li></ul><p>通过 LightDiffusionFlow，可以针对行业和业务属性，建立一系列可复用的 AI 绘画工作流，快速建立团队的 AI 绘画能力，实现降本增效。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 02:23:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258751</guid>
            <link>https://www.oschina.net/news/258751</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[终极 PK ！第十二届「麒麟杯」决赛入围名单公布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/question/4489239_2331019" _blank"="">
尊嘟假嘟，成都程序员也 996 吗？ 
<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">第十二届「麒麟杯」全国开源应用软件开发大赛在中国软件行业协会、开放原子开源基金会、中国计算机学会开源发展委员会、中国开源软件推进联盟的指导下，由 openKylin 开源社区、麒麟软件有限公司、国防科技大学、信创海河实验室联合主办。</span></span></p><div>
 &nbsp; 
 <p style="margin-left:0px; margin-right:0px; text-align:center"><img alt="" height="410" src="https://oscimg.oschina.net/oscnet/up-fb56d4a3b66cf3f3f0e70ee928fb7072945.png" width="940" referrerpolicy="no-referrer"></p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">大赛自报名开启以来，受到了全国各地高校学子的广泛关注，为了让学生深入了解并加入到开源应用软件的开发中，大赛组委会在报名阶段先后于全国不同高校举办</span><strong><span style="color:#0052ff">11 场高校沙龙</span></strong><span style="color:#000000">，帮助大家进一步了解大赛；并推出</span><strong><span style="color:#0052ff">1v1 辅导机制</span></strong><span style="color:#000000">，给每个赛队都配备一个辅导群，进行一对一沟通辅导。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">截止 2023 年 9 月 17 日，第十二届「麒麟杯」软件开发大赛初赛评审工作正式结束，经过为期两天的专家评选，最终有</span><strong><span style="color:#0052ff">20</span></strong><span style="color:#000000">支队伍从来自全国的 60+高校、345 组参赛队伍中脱颖而出，晋级决赛，现对入围名单及作品进行公示。</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">如有疑问，请及时与组委会联系。</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-98bf1bbd14ecfd07210eee08f740e2acbeb.png" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">当前，初赛阶段已结束，恭喜以上</span><strong><span style="color:#0052ff">20</span></strong><span style="color:#000000">组队伍进入决赛【2023.9.19-2023.10.19】，请相关同学继续完善参赛作品，决赛期间专家们也会针对作品进行进一步的指导，辅助同学们完善作品。</span></span></p><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">希望入围决赛的同学们能够再接再厉，精益求精，完善作品的同时也可以收获不一样的自己！没有晋级的队伍也不要气馁，期待下一届「麒麟杯」再相遇~有关大赛更多详情可进入 openKylin 官网查看。</span></span></p><p>&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Sep 2023 01:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/258744</guid>
            <link>https://www.oschina.net/news/258744</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
