<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 21 Dec 2023 19:13:01 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[使用开源项目，为你的老板快速创建一个个性化的数据面板]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>每家公司都有属于自己公司的专属线上业务，随着业务的不断更新和迭代，业务的复杂度也会随着时间的积累不断的提高。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>当业务复杂度很高之后，随之而来团队内部需要查看各种各样的数据，来为未来的战略做决策。所以我们需要一个灵活的工具来制作个性化的数据面板来满足团队内部不同成员（尤其是老板）的各种定制化需求，从而帮助团队快速迭代。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>使用高效工具，每天提前下班。</span></p><h2><span>构建中的一些问题</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>每家公司的业务都分布在了不同的系统里面，各个系统之间还存在一些关联。有些数据需要使用数据库来进行查询</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>Postgresql</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Mysql</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>MongoDB</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>。。。</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>有些数据来自于不同类型的微服务，可能是从某一个 API 来进行获取的。</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>User Detail API</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Product Detail API</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>。。。</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>最可怕的事情是有些数据需要使用数据库 + API 的数据进行合并并且二次处理之后才能获取。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>这些问题对构建一个个性化的数据面板来说是一个非常麻烦的事情。如果从零到一开始开发，我们需要针对不同的数据源进行适配，这随之而来的工程成本会直线上升。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>所以我们需要一个灵活的工具来进行数据面板的展示，毕竟「开发」不是最重要的，「展示」才是。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>这个工具需要一些客观的优势：</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>图表丰富，能展示不同纬度的数据。</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>支持各种主流的数据源查询</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>安装使用简单</span></p></li></ul><h2><span>如何解决</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>这里推荐一个好用的开源项目，叫做 ILLA Cloud，ILLA Cloud 是一个开源的低代码工具，专门用来解决构建个性化需求的场景。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>📙 官网地址：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Filla.cloud%3Futm_source%3Djuejin" target="_blank"><span>https://illa.cloud</span></a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>⏬ Github 地址：</span><span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fillacloud%2Filla-builder" target="_blank">https://github.com/illacloud/illa-builder</a></span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>⭐ Github Stars: 9k</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>下面显示一个 Demo，使用的是 Fake 数据。这个 Demo 描述的是一家公司的某一个产品的销售额情况，包括</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>每个月的销售新增趋势</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>每个月的收入</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>总共获取到的收入</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>一共有多少人购买</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>每个购买的用户的详细信息</span></p></li></ul><p><img height="1395" src="https://oscimg.oschina.net/oscnet/up-76454ebcd3a08b8584294182cd03a2624d4.png" width="2263" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>这个图表使用了下面几个组件</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>Data Grid</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Chart</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Statistic</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Menu</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>通过拖拉拽的方式很快的就构建了出来。数据源来自于</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>Supabase：一个 Serverless 的 Postgresql</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>API</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ILLA 支持多种数据源，可以快速从大量主流的数据源里面获取数据。</span></p><p><img height="1520" src="https://oscimg.oschina.net/oscnet/up-ad6f5088cce846c5dd20e25a4f485585937.png" width="2540" referrerpolicy="no-referrer"></p><h2><span>AI 驱动</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ILLA 不仅仅可以获取一个面板，查询到的数据可以使用 LLM 来进行二次处理。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>比如：将一组格式很乱的数据根据要求处理成另外一种格式的数据。从而让多个数据源的数据可以进行对齐。</span></p><h2><span>优势</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>使用拖拉拽的方式进行构建，几分钟就可以快速构建一个精美的面板。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>并且，ILLA Cloud 相对于传统的各种 BI</span></p><ul><li><p style="margin-left:.5rem; margin-right:0"><span>不仅支持数据库的数据查询，还支持从 API 获取数据</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>安装简单，Web 页面上直接使用，无需任何下载</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>对于数据的二次处理，使用 Javascript 即可直接进行处理，简单快捷</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>支持各种主流的图表，满足大多数需求</span></p></li><li><p style="margin-left:.5rem; margin-right:0"><span>Transformer 功能有效的解决了多个数据之间合并处理的问题，再也不为数据格式问题困扰</span></p></li></ul><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>ILLA Cloud 作为一个开源项目也支持二次开发，社区也比较活跃，可以同其他开发者建设。不用担心维护的问题。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>而且 ILLA Cloud 不仅可以构建数据面板，也可以快速构建专属的管理面板，让你的业务迭代从此快速起来。</span></p><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>作为一个低代码工具，ILLA Cloud 还支持多人协作，可以多个人一起构建面板。</span></p><p><img height="1520" src="https://oscimg.oschina.net/oscnet/up-82d0689167a45f55f755c8786e6fa2b5400.png" width="2540" referrerpolicy="no-referrer"></p><h2><span>总结</span></h2><p style="color:#333333; margin-left:.8em; margin-right:.8em; text-align:start"><span>使用 ILLA Cloud 之后，再也不怕老板的个性化需求困扰了，几分钟之后就可以构建一个老板专属的数据面板，从此成为一个高效率的员工。还不快试试！</span></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 11:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272062</guid>
            <link>https://www.oschina.net/news/272062</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[大模型微调方法总结：LoRA、Adapter、Prefix-tuning、P-tuning、Prompt-tuning]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>随着深度学习技术的不断发展，大型预训练模型已成为许多任务的重要工具。然而，微调（finetuning）这些大<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcloud.baidu.com%2Fproduct%2Fwenxinworkshop%3Ftrack%3Dzwdl" title="模型" target="_blank">模型</a>以适应特定任务是一个复杂且计算密集型的过程。本文将重点介绍五种不同的微调方法：LoRA、Adapter、Prefix-tuning、P-tuning 和 Prompt-tuning，并对它们进行总结。</p><p>LoRA (Learned Representations for Finetuning) LoRA 是一种新型的微调方法，旨在解决预训练模型微调过程中存在的两大问题：模型调整过程中对初始模型过度依赖以及微调过程中存在的过拟合问题。LoRA 通过在预训练模型中引入一个额外的线性层，并使用特定任务的训练数据来微调这个线性层。这种方法使模型能够更好地适应特定任务，同时减少了对初始模型的过度依赖。</p><p>Adapter Adapter 是一种简单而有效的微调方法，它通过在预训练模型的特定层上添加一个可学习的附加层来适应特定任务。这个附加层可以是线性层、非线性层或其他类型的层，其目的是对预训练模型的输出进行微调，使其更好地适应特定任务。Adapter 具有较低的计算成本和较好的性能，使其成为处理小数据集的理想选择。</p><p>Prefix-tuning Prefix-tuning 方法通过微调预训练模型的特定部分（称为「前缀」）以适应特定任务。这种方法只微调前缀，而不是整个模型，从而减少了计算成本和过拟合的风险。Prefix-tuning 的性能通常优于传统的微调方法，但不及完整的模型微调。</p><p>P-tuning P-tuning 是一种改进的微调方法，通过引入一个参数化转换矩阵来调整预训练模型的权重。这个矩阵可以学习地改变预训练模型的权重分布，使其更好地适应特定任务。P-tuning 在保持良好性能的同时，减少了微调过程中对初始模型的过度依赖。</p><p>Prompt-tuning Prompt-tuning 是一种新颖的微调方法，利用了近年来自然语言处理领域的 prompting 技术。该方法通过修改预训练模型的输入来适应特定任务，使其在输入阶段就考虑到任务的特定需求。Prompt-tuning 可以显著提高模型的性能，同时减少了对初始模型的过度依赖和过拟合的风险。</p><p>总结： 这五种微调方法在处理大型预训练模型以适应特定任务方面都具有各自的优点和适用场景。LoRA 通过引入额外的线性层来减少对初始模型的过度依赖和过拟合问题；Adapter 具有较低的计算成本和较好的性能，适用于小数据集；Prefix-tuning 只微调预训练模型的前缀，减少了计算成本和过拟合的风险；P-tuning 通过引入参数化转换矩阵来调整预训练模型的权重，减少了过度依赖；Prompt-tuning 利用 prompting 技术修改预训练模型的输入，显著提高性能并减少过度依赖和过拟合的风险。在实际应用中，应根据具体任务和数据集选择合适的微调方法。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 07:45:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4299156/blog/10323822</guid>
            <link>https://my.oschina.net/u/4299156/blog/10323822</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Zadig 支持 Android、iOS App 自动化发布了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><span><img alt="Zadig 支持 Android、iOS App 自动化发布了" height="0" src="https://picx.zhimg.com/70/v2-534853454b2165556c59a9e971996fc1_1440w.image?source=172ae18b&amp;biz_tag=Post" width="100%" referrerpolicy="no-referrer"></span></div></div></div><div><div><div><div><p style="margin-left:0; margin-right:0">在不断演进的移动应用开发领域，构建高效的发布流程成为取得成功的关键之一。Zadig 为发布流程提供了更多选择，不仅支持容器构建，还全面支持主机构建，涵盖多种操作系统，包括 Linux、MacOS 等，同时支持 AMD 和 ARM 架构。</p><p style="margin-left:0; margin-right:0">本文将深入探讨 Zadig 支持容器和主机构建的原因，并结合 Android 和 iOS App 的实例，详细介绍如何在 Zadig 上灵活地利用主机资源进行客户端应用的编译和发布。</p><span id="OSC_h1_1"></span><h1><strong>01-为什么 Zadig 同时支持容器和主机构建？</strong></h1><span id="OSC_h3_2"></span><h3><strong>1.灵活性与选择权：</strong></h3><p style="margin-left:0; margin-right:0">容器构建具有轻量级和可移植性的优势，适用于多种场景。然而，主机构建提供更大的灵活性，允许根据项目需求和企业网络约束进行定制和配置。Zadig 深知不同项目和基础设施的差异性，因此支持两种构建方式，让用户能够根据实际情况做出最佳选择。</p><span id="OSC_h3_3"></span><h3><strong>2.异构生态整合：</strong></h3><p style="margin-left:0; margin-right:0">众多企业涉足各类项目和基础架构，其中一些项目积极采用容器技术，而传统业务往往依赖主机基础设施。Zadig 的双重支持确保在异构场景中，能一站式搭建开发和发布流程，降低不必要的过渡成本。</p><span id="OSC_h1_4"></span><h1><strong>02-前置操作 - 在 Zadig 集成主机作为构建节点</strong></h1><p style="margin-left:0; margin-right:0">需要先在 Zadig 上集成主机资源，Zadig 工作流任务才可以使用主机作为构建节点，具体集成过程如下：</p><p style="margin-left:0; margin-right:0"><em><strong>第一步：</strong></em>在 Zadig 上「资源配置」&gt; 「主机管理」&gt; 添加主机，填写以下必要的信息。</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>主机名称：用于标识主机的名称</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>标签：工作流可以通过标签来限制任务执行的主机</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>调度工作流任务：选择<span>&nbsp;</span><strong><em>是</em></strong>，允许工作流任务调度到该主机上</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>任务根目录：工作流任务的工作目录</p><div><img src="https://pic3.zhimg.com/80/v2-c7411c7b7a1390d7e7929f74921690f6_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0"><em><strong>第二步：</strong></em>在主机上安装 Zadig Agent。根据主机的实际系统和架构选择对应命令在主机上执行。此处我们集成了两台主机（标签分别为<span>&nbsp;</span><em><strong>linux</strong></em><span>&nbsp;</span>和<span>&nbsp;</span><em><strong>mac</strong></em><span>&nbsp;</span>）分别用于后续 Android App 和 iOS App 的构建发布。</p><div><img src="https://pic2.zhimg.com/80/v2-c8f3ffa13e3e238e76c66917b6164791_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic4.zhimg.com/80/v2-cfffef86ff4e6905bd86a6a7eeb4b243_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h1_5"></span><h1><strong>03-Android App 自动化发布</strong></h1><span id="OSC_h3_6"></span><h3><em><strong>配置工作流</strong></em></h3><p style="margin-left:0; margin-right:0"><em><strong>第一步：</strong></em>新建自定义工作流 &gt; 添加「阶段」&gt; 添加「任务」，选择「通用任务」</p><div><img src="https://pic3.zhimg.com/80/v2-20553da6e9860a2b0f77ff26d8068d8a_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic4.zhimg.com/80/v2-700c240a8aedde78d0723a7cfe827c13_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0"><em><strong>第一步：</strong></em>配置「通用任务」</p><div><img src="https://pic1.zhimg.com/80/v2-1baea1c786a53cb1bee95ccc35fd8ea4_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic3.zhimg.com/80/v2-ebd9fef1fdc8a1e87c7333bfd0613206_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic4.zhimg.com/80/v2-f0e2d4f0f16a7954e81eec3fe1c117ef_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>基础设施：选择<span>&nbsp;</span><strong><em>主机</em></strong></p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>执行主机：选择预先配置的<span>&nbsp;</span><strong><em>linux</em></strong><span>&nbsp;</span>主机标签</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>代码信息：选择 Android App 所在的代码库</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>执行脚本：测试和发布阶段编写不同脚本实现交付过程自动化</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>测试阶段：包括编译打包 Android App 和推送 App 到应用分发平台步骤</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>发布阶段：包括编译打包 Android App 和上架 App 到应用商店步骤</p><span id="OSC_h3_7"></span><h3><em><strong>执行工作流</strong></em></h3><p style="margin-left:0; margin-right:0">执行工作流选择代码信息，完成 Android App 自动化发布过程。</p><div><img src="https://pic2.zhimg.com/80/v2-02cfcc02d21553d5b3a994b318d82e61_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic2.zhimg.com/80/v2-883f061f980bfa61843fedac96e26d91_1440w.webp" width="690" referrerpolicy="no-referrer"></div><span id="OSC_h1_8"></span><h1><strong>04-iOS App 自动化发布</strong></h1><span id="OSC_h3_9"></span><h3><em><strong>配置工作流</strong></em></h3><p style="margin-left:0; margin-right:0"><em><strong>第一步：</strong></em>新建自定义工作流 &gt; 添加「阶段」&gt; 添加「任务」，选择「通用任务」</p><div><img src="https://pic3.zhimg.com/80/v2-20553da6e9860a2b0f77ff26d8068d8a_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic4.zhimg.com/80/v2-5c0b472a3f43690fe8687cc37633cf2b_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0"><em><strong>第二步：</strong></em>配置「通用任务」</p><div><img src="https://pic4.zhimg.com/80/v2-d0680eba2dd8fb09236177e1c5ec4d7f_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic1.zhimg.com/80/v2-596d3d4f4227c993982c18d4edfed5c0_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic2.zhimg.com/80/v2-ae16c55a7695cb25e4dbfee55c770bb1_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>基础设施：选择<span>&nbsp;</span><strong><em>主机</em></strong></p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>执行主机：选择预先配置的<span>&nbsp;</span><strong><em>mac</em></strong><span>&nbsp;</span>主机标签</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>代码信息：选择 iOS App 所在的代码库</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>执行脚本：测试和发布阶段编写不同脚本实现交付过程自动化</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>测试阶段：包括编译打包 iOS App 和推送 App 到应用分发平台步骤</p><p style="margin-left:0; margin-right:0"><strong>·<span>&nbsp;</span></strong>发布阶段：包括编译打包 iOS App 和上架 App 到应用商店步骤</p><span id="OSC_h3_10"></span><h3><em><strong>执行工作流</strong></em></h3><p style="margin-left:0; margin-right:0">执行工作流选择代码信息，完成 iOS App 自动化发布过程。</p><div><img src="https://pic1.zhimg.com/80/v2-c8fcacb94793e3d76040e8483db839f0_1440w.webp" width="690" referrerpolicy="no-referrer"></div><div><img src="https://pic1.zhimg.com/80/v2-278d668ca6613f58e8f8932b47c7ae64_1440w.webp" width="690" referrerpolicy="no-referrer"></div><p style="margin-left:0; margin-right:0">Zadig 后续版本将支持 Windows 主机作为构建节点，满足 Windows 应用的构建发布，敬请期待……</p><p style="margin-left:0; margin-right:0">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.9)">立即体验 Zadig V2.0 新架构，开启高效交付之旅！🚀&nbsp;</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968">Zadig 开放，链接，专业</span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><strong><span style="color:#ff2968"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ed2906cceb629103785658ca6748d6cd8ea.png" referrerpolicy="no-referrer"></span></strong></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:center"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491363%26idx%3D1%26sn%3Dd6ccb8938f4702f560f28d5b79324cf3%26chksm%3Dcfb45383f8c3da9540c0c3eb1080f729fa2545db2063159b5fb05ddeb818f082e21adb2f9189%26token%3D1376697300%26lang%3Dzh_CN%23rd" target="_blank" rel="nofollow">阅读原文</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkoderover%2Fzadig" target="_blank" rel="nofollow">Zadig 在 Github</a>&nbsp;/&nbsp;<a href="https://gitee.com/koderover/zadig" rel="nofollow">Zadig 在 Gitee</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start"><strong>推荐阅读 :&nbsp;</strong><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490415%26idx%3D1%26sn%3D1914c7fd25aac5d33b98663571bbb744%26chksm%3Dcfb457cff8c3ded9c02809aad88012fa802eac55222eebe70b8c637ca2c86a101045aa81e73a%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">是时候和 Jenkins 说再见了</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491329%26idx%3D1%26sn%3D1a729186b2b5ca733c578ee8b288e823%26chksm%3Dcfb453a1f8c3dab74fb1118ac1c95aa898437a8f786385b21e0b0799d6da4eda9101acb626c0%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">Zadig 深度集成 Apollo 实现跨环境配置的一致性传递</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247490637%26idx%3D1%26sn%3D6e0498b37fb15f8b8903c4997e5611d8%26chksm%3Dcfb450edf8c3d9fb758d691081f09fd85d91dbb17534ba9c18c2300725462d3806581efbd237%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">Zadig vs. Jenkins 详细比对：时代的选择与开发者之选</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491301%26idx%3D1%26sn%3Db6fb856b449dbab1e0959996dd218b4d%26chksm%3Dcfb45245f8c3db53add8e70502f98be8dc237b9f2d3462b48e603f5eb6acef05e5ff7b42b029%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">Zadig 突破 Nacos 跨环境配置变更挑战：自动化实现一致性变更</a>&nbsp;/&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzg4NDY0NTMyNw%3D%3D%26mid%3D2247491336%26idx%3D1%26sn%3D805f7d2c44c96cab529ffef120d84ca0%26chksm%3Dcfb453a8f8c3dabe83163a873135f2a72cdddcb9faeecefe5e40f20a358681304484c56cce51%26scene%3D21%23wechat_redirect" target="_blank" rel="nofollow">ZADIG 专家版倾情上线：一键高效发布，119 元/人月起，社区老友享年终福利！</a></p><p style="color:#191b1f; margin-left:0; margin-right:0; text-align:start">&nbsp;</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">&nbsp;</p></div></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 05:44:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/koderover/blog/10322989</guid>
            <link>https://my.oschina.net/koderover/blog/10322989</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[特斯拉因自动驾驶隐患召回 200 万辆车，但被指修复措施不够]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>特斯拉正在召回<strong>几乎所有在美国销售的车辆（超过 200 万）</strong>，以更新软件并修复有缺陷的自动驾驶系统，该系统旨在确保驾驶员在使用 Autopilot 时集中注意力。</p><p>根据美国国家公路交通安全管理局 (NHTSA) 的调查，特斯拉的自动驾驶系统启动之后，如果驾驶员没有保持对车辆的操控，或在必要时没有做好操控车辆的准备，发生碰撞的风险可能会升高。如果驾驶员未能识别自动驾驶已经关闭或未启动，行车风险也会增加。</p><p>同时，NHTSA 调查数据表明，在实际使用过程中，多数特斯拉车主将"自动辅助驾驶"视为"自动驾驶"，从而导致事故发生。</p><p>根据 NHTSA 的说法，特斯拉不同意该机构的分析，但同意自愿实施召回并提供软件更新，以解决调查问题。</p><p>美国《消费者报告》的专家则表示，根据他们的初步评估，<strong>特斯拉针对 Autopilot 提供的修复措施「仍不足够」</strong>。因为该功能仍然容易被驾驶员滥用。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1221/121705_Yfk8_2720166.png" referrerpolicy="no-referrer"></p><p>来源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.consumerreports.org%2Fcars%2Fcar-recalls-defects%2Ftesla-recalls-cars-due-to-autopilot-concerns-a6186663858%2F" target="_blank">https://www.consumerreports.org/</a></u></em></p></blockquote><p>《消费者报告》汽车测试中心汽车技术副总监 Kelly Funkhouser 表示，尽管对特斯拉在最新 OTA 中做出的一些改变感到欣喜，<strong>但它在防止误操作或解决驾驶员注意力不集中等「根本因素」上做得还不够</strong>。</p><p>例如，当研究人员遮住了用于监控车主的摄像头之后，Autopilot 仍然能被打开。「如果驾驶员偏离视线、使用手机或分心，他们仍可以使用 Autopilot。」</p><p>此外，当驾驶员选择自己操作车辆时，Autopilot 还是会像以前一样断开 —— 而作为对比，宝马、福特、奔驰等「传统品牌」的辅助驾驶都支持「协同转向」功能，车主可在不断开变道辅助系统的情况下进行转向。</p><p>「当 Autopilot 处于激活状态下，它就不存在协同转向。这意味着要么是汽车自己在驾驶，要么是人类驾驶员在开车，只有这两种选择。」Kelly Funkhouser 表示：「驾驶员应该（通过操控）绕过坑洞或转向的骑车人，再或者为相邻车辆留出额外空间，而不是每次都要重启一遍 Autopilot。」</p><hr><p>延伸阅读</p><ul><li><a href="https://www.oschina.net/news/260260" target="_blank">特斯拉：FSD 不使用高清地图，只依赖神经网络和海量数据</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 04:27:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272005</guid>
            <link>https://www.oschina.net/news/272005</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Anthropic 洽谈 7.5 亿美元融资 ，估值已达 150 亿美元]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theinformation.com%2Farticles%2Fanthropic-to-raise-750-million-in-menlo-ventures-led-deal" target="_blank">The Information</a> 援引知情人士消息称，亚马逊公司和谷歌所支持的人工智能初创公司 Anthropic，正在洽谈由一轮 Menlo Ventures 领投的 7.5 亿美元风险投资。</p><p>目前，Anthropic 公司的估值已经达到了 150 亿美元，是其今年春季估值（41 亿美元）的三倍多。本轮投资尚未最终敲定，但消息人士指出，其估值最终或可高达 180 亿美元。</p><p>Anthropic 成立于 2021 年，是一家由前 OpenAI 团队成员创立的人工智能初创公司。其在 ChatGPT 发布两个月后，就推出了 GPT-4 的重要竞品 Claude，并在 7 月初推出了升级版的 Claude 2。</p><p><img alt="" height="300" src="https://oscimg.oschina.net/oscnet/up-3991acf71bbd4858713200b565c8626207b.webp" width="300" referrerpolicy="no-referrer"></p><p>该公司的融资历程有：</p><ul><li>2022 年 4 月，由即将入狱的 FTX Trading Ltd. 前负责人 Sam Bankman-Fried 领投，新兴风险研究中心（Center for Emerging Risk Research）和几位个人投资者参投的 5.8 亿美元 B 轮融资。</li><li>2023 年 2 月，谷歌向其投资 3 亿美元。</li><li>3 月，Spark Capital 领投了一轮<span style="background-color:#ffffff; color:#4a4a4a">价值 3 亿美元的融资；Anthropic 的估值达到 41 亿美元。5 月，</span>Spark Capital 又领投了 4.5 亿美元的 C 轮融资，参投方包括&nbsp;<span style="background-color:#ffffff; color:#4a4a4a">Google LLC、Salesforce Ventures 和 Zoom Ventures<span>&nbsp;</span></span>等。</li><li>7 月，风投公司 Sapphire 承诺投资 10 亿美元以上。</li><li>8 月，韩国电信巨头 SKT 宣布追加 1 亿美元投资。</li><li>9 月，亚马逊承诺投资高达 40 亿美元。</li><li>10 月，<a href="https://www.oschina.net/news/264126/google-invest-2-billion-anthropic">谷歌承诺提供高达 20 亿美元的资金</a>。</li></ul><p>「Claude 聊天机器人制造商的这笔交易表明，只要初创公司能创收，风险投资人对最大的人工智能交易的胃口依然很大。」&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 03:54:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272001/anthropic-to-raise-750-million</guid>
            <link>https://www.oschina.net/news/272001/anthropic-to-raise-750-million</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[支持苹果芯片的 Fedora 发行版 —— Linus 看了会狂喜]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Asahi Linux 是由资深操作系统移植专家 Hector Martin（网名 Marcan）<u><a href="https://www.oschina.net/news/122218/developer-crowdfunding-linux-port-for-m1">众筹发起</a></u>的项目，<strong>目标是将 Linux 移植到搭载 Apple Silicon 芯片的 Mac 设备</strong>。Marcan 表示，Asahi Linux 的目标不仅仅是让 Linux 能在这些设备上运行，最终还要将其打磨至可以用作日常操作系统的程度。</p><p>近日，Asahi Linux 和 Fedora 共同<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Ffedora%2Fstatus%2F1737190559402365346" target="_blank">发布</a></u>了 <strong>Fedora Asahi Remix</strong>，据称这是双方多年密切合作的成果——集成完整功能的发行版，<strong>所有面向 Asahi Linux 平台的软件包都已合并到 Fedora 上游</strong>，并在 Fedora Linux 39 中得到全面支持。</p><p>因此 Mac 用户安装 Fedora Asahi Remix 39 Linux 后，可以正常使用包括蓝牙、Wi-Fi 在内的大多数组件。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1221/112942_FuxH_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>Fedora Asahi Linux 已在所有支持 M1/M2 的 MacBook、Mac Mini、Mac Studio 和 iMac 设备上进行了测试。与默认使用 GNOME Shell 的 Fedora Workstation 不同，Fedora Asahi Remix 默认使用 KDE Plasma 桌面——「100% 的纯正 Wayland 体验」。</p><p>Asahi Linux 团队称「Fedora Asahi Remix」是「<strong>Apple Silicon Mac 上最精致的 Linux</strong>」。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b18c383579a47b5fb8466cb11144d34653d.png" referrerpolicy="no-referrer"></p><p>两年多前，Linus <u><a href="https://www.oschina.net/news/210613/linus-torvalds-rust-on-linux-m2-macbook-air">曾透露</a></u>自己一直在使用配备 M2 处理器的苹果 MacBook Air，并在该设备上运行了 Fedora Workstation 36。<strong>由于当时没有针对 ARM-64 M2 处理器的 Fedora 移植，所以他自己手搓了一个</strong>。当时在 M2 上运行 Linux 主要也是通过 Asahi Linux for Mac，使用了晦涩的 Pacman 软件包管理器。但 Linus 本人不是很喜欢："Pacman!? What the hell!"</p><p><img src="https://oscimg.oschina.net/oscnet/up-f7152e3c871f61b0e32daedcbcea1b62c8a.JPEG" referrerpolicy="no-referrer"></p><p>2020 年苹果初次发布搭载 M1 处理器的 MacBook 时，他曾<u><a href="https://www.oschina.net/news/121556/linus-torvalds-linux-on-apple-silicon">说过</a></u>：</p><blockquote><p>「我一直期待着有一款能够同时运行 Linux 操作系统的 ARM 笔记本电脑。除了操作系统的支持层面，新款 M1 MacBook Air 几乎很是完美。<strong>然而我实在没时间去搞破解，也不想费力去和这些不愿提供帮助的企业抗争。</strong>」</p></blockquote><p>现在 Fedora Asahi Remix 的发布，Linus 该心满意足了吧？</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-4f2ef5190dc5c8724644a5192cfffe4598f.png" referrerpolicy="no-referrer"></p><hr><ul><li><strong>Fedora Asahi Remix 主页：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fasahilinux.org%2Ffedora%2F" target="_blank">https://asahilinux.org/fedora/</a></u></strong></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 03:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271994/fedora-asahi-remix-39</guid>
            <link>https://www.oschina.net/news/271994/fedora-asahi-remix-39</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[CloudNative SIG 成立，助推云原生技术发展与应用]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">2023 年 12 月，经 openKylin 社区技术委员会审议通过，<strong>CloudNative SIG</strong>正式成立。CloudNative SIG 由麒麟软件发起成立，主要职责包括推动云原生技术在 openKylin 社区中的应用与发展，促进各类云原生项目在 openKylin 平台上的整合和创新，以及推动云原生技术生态系统的发展。</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">CloudNative SIG 的成立，将充分利用 openKylin 提供的平台，整合最新的云原生技术基础软件栈，促进共同开发云原生项目，推动云原生技术的发展与应用。</span></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><strong>01 SIG 目标</strong></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">制定并推动云原生技术栈相关项目的发展规划，确保项目符合行业标准和最佳实践；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">参与或组织开发云原生技术栈相关项目，推动项目的不断演进和升级，以适应新的技术趋势和用户需求。</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><strong>02 SIG 职责</strong></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">负责云原生技术栈相关项目的规划、开发、升级与维护；</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">编写和维护相关文档，为开发者提供资源，以便更好地理解和使用云原生技术。</span></p></li></ul><p style="margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p><strong>03 相关项目</strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff"><strong><span style="color:#0052ff">1.kse-rescheduler</span></strong></span></p><p><span style="color:#000000">错误 Pod 的自动重调度引擎，Kubernetes 默认的异常 Pod 重启恢复机制存在局限，例如，在资源不足或节点硬件故障导致 Pod 异常退出的情况下，原地重启策略将无法修复问题，需要人工介入重调度将 Pod 迁移到其他节点。这将限制系统的自动容错能力，从而降低服务的可靠性和高可用性。为了解决上述问题，提出了一种优化调度策略，通过实现错误 Pod 的自动重调度机制，来提升 Kubernetes 的自动容错能力。</span></p><p><span style="color:#000000">参见：</span><span style="color:#0052ff">https://gitee.com/openkylin/kse-rescheduler</span></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff"><strong><span style="color:#0052ff">2.cilium-openkylin</span></strong></span></p><p><span style="color:#000000">cilium-openkylin 项目基于 Cilium 1.13 版本进行二次开发，计划长期基于 1.13 进行功能开发和必要特性的回合。Cilium（https://github.com/cilium/cilium.git）是 k8s 生态中的一个网络插件, 实现了基于 eBPF 的高性能网络互联互通，以及无应用侵入的网络观测、网络隔离、网络追踪、网络安全等能力。</span></p><p><span style="color:#000000"><span><span>目前本项目主要完成的工作包括：基于 eBPF 数据链路的</span>underlay<span>网络组播传输和控制支持，多 IP 池特性（上游 1.15 版本功能）回合，双栈模式下的多 IP 池支持（已合入上游）；</span></span></span></p><p><span style="color:#000000">近期工作计划包括：BGPCP 特性回合，多 IP 池对 BGP 支持特性回合，多 IP 池模式下固定 IP 支持，cluster-pool 模式下固定 IP 支持等。</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">参见:&nbsp;&nbsp;</span><span style="color:#0052ff">https://gitee.com/openkylin/cilium-openkylin/</span></p><p style="margin-left:0; margin-right:0; text-align:left">&nbsp;</p><p><strong>04 欢迎加入 SIG</strong></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">欢迎所有对 openKylin 社区云原生技术栈感兴趣的社区爱好者加入我们！</span></p><ul><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">邮件列表：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff">cloudnative@lists.openkylin.top</span></p></li><li><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#000000">SIG 主页：</span></p><p style="margin-left:0; margin-right:0; text-align:justify"><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/CloudNative</span></p></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Thu, 21 Dec 2023 02:12:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271974/cloudnative-sig</guid>
            <link>https://www.oschina.net/news/271974/cloudnative-sig</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[英国最高法院：专利发明人必须是自然人，不能是 AI]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>路透社报道称，英国最高法院在具有里程碑意义的案件中裁定<strong> AI 不能成为专利「发明人」</strong>。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1221/191630_wLCJ_2720166.png" referrerpolicy="no-referrer"></p><p>来源：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reuters.com%2Ftechnology%2Fai-cannot-be-patent-inventor-uk-supreme-court-rules-landmark-case-2023-12-20%2F" target="_blank">https://www.reuters.com/</a></u></p></blockquote><p>美国科学家 Stephen Thaler 2018 年在英国提交了两项专利申请，分别为食品包装形状和闪光灯。他表示这些发明是由他创造的 AI——DABUS 完成设计。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ffc49345e29ab3de2793fe60d235f70be1d.png" referrerpolicy="no-referrer"></p><p>英国知识产权局当时拒绝了他的专利注册申请，理由是发明人必须是人类或公司，而不是机器。为此，Stephen Thaler 向英国最高法院提出上诉。</p><p>英国最高法院近日驳回了他的上诉，<strong>因为根据英国专利法，专利的发明人必须是自然人</strong>。</p><p><img alt="" src="https://img.ithome.com/newsuploadfiles/2023/12/a7508bb0-8052-4627-90be-e463470e5fc4.jpg?x-bce-process=image/format,f_avif" referrerpolicy="no-referrer">英国最高法官 David Kitchin 在书面裁决中指出，本案不涉及这项「更广泛」的问题 —— 由 AI 驱动的机器自主行动所产生的技术进步是否应当获得专利。</p><p>Stephen Thaler 的律师则在声明中表示，这项裁决确定了英国《专利法》目前「完全不适合」保护 AI 自主产生的发明，<strong>因此「完全不足以支持」任何依赖 AI 开发新技术的行业</strong>。</p><p>当地另一名律师 Giles Parsons 称，英国最高法院的裁决「并不令人意外」。同时，他还认为这项决定目前不会对专利制度产生重大影响。「这是因为就目前而言，AI 只是一种工具而非代理人。预计这种情况在后期可能有所改变，但我们可以在问题出现时加以解决。」</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 11:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272063</guid>
            <link>https://www.oschina.net/news/272063</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[TiDB 7.5 LTS 发版丨提升规模化场景下关键应用的稳定性和成本的灵活性]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>作者： TiDB 社区小助手，原文来源：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftidb.net%2Fblog%2F1cffec89%3Futm_source%3Dtidb-community%26utm_medium%3Dreferral%26utm_campaign%3Drepost" rel="nofollow" target="_blank">https://tidb.net/blog/1cffec89</a></p></blockquote><p><img src="https://static.oschina.net/uploads/img/202312/08230007_royt.jpeg" alt="no-alt" referrerpolicy="no-referrer"></p><p>互联网时代，数据的迅猛增长给数据库带来了可扩展性的挑战，Gen AI 带来的数据暴增更加剧了这种挑战。传统的数据分片已经不能承载新时代数据暴增的需求，更简单且具有前瞻性的方法则是采用原生分布式数据库来解决扩展性问题。在这种规模化场景的背景下，TiDB 的研发团队和开源贡献者们始终致力于解决事务一致性、数据持久性以及大规模扩展所带来的新挑战，以及保障关键应用的稳定性。</p><p>**作为 TiDB 7 系列的第二个长期支持版本 (LTS) ，TiDB 7.5 着眼于提升规模化场景下关键应用的稳定性。**新版本中，TiDB 在可扩展性与性能、稳定性与高可用、SQL 以及可观测性等方面获得了持续的提升。TiDB 7.5 LTS 包含了已发布的 7.2.0-DMR、7.3.0-DMR 和 7.4.0-DMR 版本中的新功能、提升改进和错误修复，累计优化和修复功能 70 余项。</p><p>本文将探讨 TiDB 7.5 如何在规模化场景下实现关键应用整体稳定性的提升，探讨资源管控支持后端任务和管理资源消耗超出预期的查询（Runaway Queries）等重要特性，这些特性让用户可以在灵活调度资源降低总体成本的情况下可以保持关键应用的稳定性。</p><span id="OSC_h1_1"></span><h1>资源管控支持后端任务管理，提升执行关键业务的稳定性</h1><p>TiDB 7.1 引入的资源管控（Resource Control）特性，多个业务可共享同一个 TiDB 集群，DBA 可为不同的工作负载设置资源配额和优先级，例如为关键业务分配更高的优先级，确保其能够优先获得资源，避免受到其他工作负载的干扰。此前，资源管控无法对 DDL、analyze、import 等后端任务进行控制，这些任务通常定期或不定期触发，在执行的时候会消耗资源，从而对关键业务的运行产生影响。</p><p>自 TiDB 7.4 开始，资源管控支持后端任务管理。当一种任务被标记为后端任务时，TiKV 会动态地限制该任务的资源使用，以尽量避免此类任务在执行时对前台任务产生影响。TiKV 通过实时地监测所有前台任务所消耗的 CPU 和 IO 等资源，并根据实例的总体资源上限计算出后端任务可使用的资源阈值，所有后端任务在执行时会受此阈值的限制。当后端任务被识别匹配后，资源管控会自动进行，即当系统资源紧张时，后端任务会自动降为最低优先级，以确保前台任务的执行效率。**这个功能的增强允许 DBA 通过设置自动识别后端任务，并降低其资源消耗。**未来，这个功能将进一步扩展，提供给用户更丰富的配置选择，从而赋予用户对集群中后端任务更多的控制权。</p><p>下表展示了当「analyze」后端任务以默认优先级和低优先级运行时对前台工作负载的影响对比：</p><p><img src="https://static.oschina.net/uploads/img/202312/08230007_xCiO.png" alt="no-alt" referrerpolicy="no-referrer"></p><p>在上表的示例中，第一行展示了当所有集群资源均可供前台工作负载使用时的性能。第二行展示了在后台添加 「analyze」 任务时发生的情况。第三行则展示了利用新特性自动对 「analyze」 任务进行管控时的效果。</p><span id="OSC_h1_2"></span><h1>将后端任务 (Addindex,Importinto 任务）调度到指定的 TiDB 节点执行</h1><p>TiDB 7.2 开始，引入了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.pingcap.com%2Fzh%2Ftidb%2Fstable%2Ftidb-distributed-execution-framework" rel="nofollow" target="_blank">分布式框架</a> ，该框架的目标是实现对所有后端任务的统一调度与分布式执行，并为接入的后端任务提供统一的资源管理能力。分布式框架支持后端任务（特指 Add index 和 Import into 任务）在 TiDB 集群的所有 TiDB 节点上执行，以提升此类任务的性能。而 <strong>TiDB</strong><strong>7.5 允许 DBA 将 Add index，Import into 这类消耗资源较多的后端任务调度到指定的 TiDB 节点上执行，从而和存量 TiDB 节点上的负载进行隔离，避免对业务产生影响</strong>。当在想要运行后端任务的节点上设置 tidb_service_scope 为 background 时，后端任务分布式框架将调度该节点执行后端任务。但未经这样设置，则该节点将不会被用于执行后端任务。</p><p>这一改进真正的突破在于能够动态地添加 TiDB 节点来处理突发的这类后端任务。如果需要导入一个庞大的表，只需向集群中添加若干个 TiDB 节点来完成，而不会对现有 TiDB 节点造成任何额外压力，添加索引的方式也是如此。完成任务后，这些节点可以被撤销。这一功能为在生产集群上轻松处理大型任务（Add index ，Import 大量数据）提供了更加无缝的方式。</p><span id="OSC_h1_3"></span><h1>暂停和恢复执行 DDL 任务</h1><p>在 v7.1 版本之前，用户在某些场景下会遇到 DDL 执行的痛点，具体表现为：</p><ul><li><p>集群版本升级时，若有正在执行的 DDL 未被取消，可能导致升级后的数据异常。</p></li><li><p>对于拥有数十亿行数据的大表，为其添加索引可能需要相当长的时间，对在线业务造成不可忽视的影响。</p></li></ul><p>为了解决这些问题，我们在 v7.1.0 中引入了一项新功能：DDL 任务的暂停和恢复。这一功能在 v7.5.0 中正式发布，为用户带来了更加灵活和高效的 DDL 执行体验。</p><p>具体而言，该功能巧妙地解决了上述痛点：</p><ul><li><p>在使用 TiUP 对集群升级的过程中，系统将自动暂停正在执行的 DDL 任务，并在升级完成后自动恢复执行该 DDL 任务。全程无需人为干预，有效避免由于人员疏忽导致未暂停 DDL 而引起集群升级后数据不一致的问题。</p></li><li><p>针对执行耗时较长的 DDL，比如给大表添加索引，用户可以在业务高峰期来临前手动暂停该 DDL，并在业务低谷期恢复该 DDL 任务，从而有效避免对在线业务的影响。</p></li></ul><p>DDL 任务的暂停和恢复机制支持断点续传，不仅保障了 DDL 任务的安全性和稳定性，同时最大化地保证了用户数据一致性和业务的稳定性。</p><span id="OSC_h1_4"></span><h1>监控和管理资源消耗超出预期的查询</h1><p>突发的查询性能下降，是影响数据库整体性能最常见的问题，很难完全规避。 即使设置了资源组限额，也只能消除资源组间的相互影响，而个别 SQL 的过渡消耗仍会对降低资源组内的其他操作的性能。为解决此问题，TiDB 7.2 资源管控引入了对 Runaway Queries 的管理，自动识别并处理消耗超出预期的查询，在 TiDB 7.3 引入了手动管理 Runaway Queries 监控列表的功能，将 SQL 特征添加到隔离监控列表，从而实现快速隔离 Runaway Queries。 无论用户是否使用了资源组，都可以借助 Runaway Queries 管理来缓和突发的 SQL 性能问题。</p><p><strong>DBA 现在可以为每个资源组设置「查询限制 (Query Limit)」，并配备几个关键参数</strong>。EXEC_ELAPSED 用于设定查询持续时间的阈值，任何超出这一阈值的查询都会被识别为 Runaway Query。ACTION 决定当识别到 Runaway Query 时进行的动作，可以把执行优先级降到最低也可以终止该查询。WATCH 用于快速匹配已经识别到的 Runaway Query，即在一定时间内再碰到相同或相似的查询，可以直接按照配置的措施进行处理，避免其在被识别的过程中对资源进行消耗。</p><p>如果一些 Runaway Queries 并没有被自动识别，DBA 也可以通过 SQL 命令 "QUERY WATCH"手动将查询的特征加入「监视列表」，类似于设置数据库级别的 SQL 黑名单，特别适合那些对数据库响应时间要求很高的客户，为突发的 SQL 性能问题提供了一种有效的防范措施。这项功能和资源管控结合使用，意味着在业务系统之间以及业务系统内部都能实现更高的稳定性，从而最大限度地减少多业务合并过程中可能出现的潜在风险。</p><span id="OSC_h1_5"></span><h1>立即体验 TiDB 7.5</h1><p>从 TiDB 7.0 开始，TiDB 在数据库整合的技术方向上持续演进，致力于在多业务融合的场景下同时提升关键业务的稳定性和降低总体成本，7.5 LTS 将资源管控、分布式框架、可观测性理念的组合推升到更为成熟的阶段，可以为当前追求业务连续性同时也希望降低总体成本的客户带来创新的部署和运维方式。</p><blockquote><p>7.5.0 关键特性&amp;功能详情请见：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdocs.pingcap.com%2Fzh%2Ftidb%2Fstable%2Frelease-7.5.0" rel="nofollow" target="_blank">https://docs.pingcap.com/zh/tidb/stable/release-7.5.0</a></p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 09:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5674736/blog/10320255</guid>
            <link>https://my.oschina.net/u/5674736/blog/10320255</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[BCS 报告：IT 界女性的「平权之路」还需 283 年]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">英国计算机协会（BCS）最新发布的一份多元化<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.bcs.org%2Fpolicy-and-influence%2Fequality-diversity-and-inclusion%2Fbcs-diversity-report-2023-women-in-it%2F" target="_blank">报告</a>指出，女性在 IT 领域的占比需要 283 年才能与男性持平。</span></p><p style="text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">在过去的八年里，BCS 一直在跟踪和报告 IT 劳动力市场中的女性代表性水平；旨在探索市场上的一些不平等现象，推动措施以改善行业内性别不平衡问题。</span></span></p><p style="text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">「</span>BCS diversity report 2023: Women in IT<span style="background-color:#ffffff">」报告的一些主要发现包括：</span></span></p><ul style="margin-left:0; margin-right:0"><li><span style="color:#000000">到 2022 年，女性占劳动年龄人口（16-64 岁）的 50%，占工作人口的 48%，占失业人口的 46%。</span></li><li><span style="color:#000000">2022 年，英国有 380,000 名女性 IT 专家，占 IT 专家总数的 20%；如果 IT 领域的性别比例与劳动力「标准」相同，英国就会额外增加 527,000 名 IT 专家。</span></li><li><span style="color:#000000">按照近些年的趋势推断，在 IT 从业人员中，女性所占比例想要与男性持平所需的时间为 283 年。</span></li></ul><p><span style="color:#000000"><img alt="" height="134" src="https://oscimg.oschina.net/oscnet/up-db871d1804a2c2f78de283e0a8793307494.png" width="500" referrerpolicy="no-referrer"></span></p><ul style="margin-left:0; margin-right:0"><li><span style="color:#000000">IT 领域的女性比例因工作类型而异，从大约二十分之一的 IT 工程师（占 2018-22 年期间总数的 6%）<span style="background-color:#ffffff">到约三分之一的 IT 项目/项目经理和网页设计师/开发人员和 IT 用户支持技术人员（即分别占 30% 和 28%）。除了 IT 工程之外，女性在程序员/软件开发职位中所占比例非常低 (15%)。</span></span></li></ul><p><span style="color:#000000"><img height="202" src="https://oscimg.oschina.net/oscnet/up-13fc9ea928423101c1d8af59e2430a5234b.png" width="500" referrerpolicy="no-referrer"></span></p><ul style="margin-left:0; margin-right:0"><li><span style="color:#000000">2022 年，女性 IT 专家的失业率为 1.4%，低于男性 (1.7%)，但不到英国劳动力市场女性整体失业率 (3.6%) 的一半。</span></li><li><span style="color:#000000">按行业划分，2022 年建筑公司中 IT 专家的性别比例最差，女性仅占 IT 岗位人员的 12%。</span></li><li><span style="color:#000000">2022 年，女性 IT 专家从事兼职工作的可能性是男性的四倍多（即 13% 对 3%）——最常见的原因是她们不想从事全职工作。</span></li><li><span style="color:#000000"><span style="background-color:#ffffff">2022 年，女性 IT 专家作为雇员和全职员工的时薪中位数为 22 英镑，比男性低 8%。</span>女性 IT 员工担任「有责任的职位」的可能性似乎低于男性（对比数字分别为 36% 和 41%）。</span></li><li><span style="color:#000000">大约十分之七的 IT 专家拥有某种形式的高等教育学历（71%），并且女性的比例高于男性（女性为 74%，男性为 70%）。</span></li><li><span style="color:#000000">2018-22 年期间，IT 专家（男性/女性）最常见的找工作方式是「回复广告」（分别为 39% 和 31%）。</span></li></ul><p><span style="color:#000000">BCS 教育与公益常务董事 Julia Adamson 在一份声明中表示： 「更多的女性和女孩需要有机会在塑造世界的科技行业中从事出色的职业。大量的人才和创造力正被忽视，而这本可为雇主和经济带来益处。我们必须从根本上重新思考如何让更多的女性和女孩从事科技行业，从伦理道德上讲，建立更具包容性的科技文化是正确的做法。」</span></p><p>另一方面，<span style="color:#000000">美国的</span>情况与英国也没有太大的不同。<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.statista.com%2Fchart%2F4467%2Ffemale-employees-at-tech-companies%2F" target="_blank">Statista</a><span style="color:#000000">&nbsp;数据显示，</span><span style="color:#000000">在美国，女性仅占科技相关职位的 27%；在员工超过 10,000 人的科技公司中，女性的比例为 26%。在过去两年中，女性在所有科技相关职业中的比例都有所下降。</span></p><p><span style="color:#000000">总体而言，美国劳动力中的女性比例与英国大致相同，为 47.7%。在美国 329,559 名软件工程师中，女性约占 25%，女性软件工程职位的薪资比男性低约 7%。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 07:58:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272034/bcs-diversity-report-2023-women-in-it</guid>
            <link>https://www.oschina.net/news/272034/bcs-diversity-report-2023-women-in-it</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[X （推特）突发全球范围访问故障]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>路透社报道称，X 平台（推特）在北京时间 12 点 47 分左右突发全球性崩溃。&nbsp;</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-bf591b965e9b852eeaf4bb7b7f486f5db4a.png" referrerpolicy="no-referrer"></p><p>来源：<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.reuters.com%2Ftechnology%2Fsocial-media-platform-x-down-users-globally-downdetector-2023-12-21%2F" target="_blank">https://www.reuters.com</a></u></em></p></blockquote><p>此次崩溃事件波及 X 平台全球范围内用户，包含 PC Web 端及移动平台客户端在内，所有用户均无法查看时间线、访问个人资料卡、发布内容。</p><hr><p>从平台的讨论来看，推特此次访问故障大约持续了两个小时，目前已恢复服务。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 06:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272020/media-platform-x-down-users-globally-downdetector</guid>
            <link>https://www.oschina.net/news/272020/media-platform-x-down-users-globally-downdetector</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[上 GitHub 热榜，星星暴涨，这个项目相继超越了 Archery, Flyway 和 Yearning]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>「 登上 GitHub Trending 星星超越 Yearning 键盘的敲击不停，传播开发的福音 」⚡️</p><p>Bytebase 是一款面向开发和 DBA 的一站式数据库 CI/CD 工具。它的所有代码都开源在 GitHub 上。GitHub 也是我们触达全球用户的核心阵地。虽然 GitHub Star 数一直是一个饱受争议的指标，以致于被定性成了虚荣指标 (Vanity Metric)。但它依然是当前开源世界里最流行的指标。由此还衍生出了一种新的开发范式 - <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkzMjI2MDY5OQ%3D%3D%26mid%3D2247503486%26idx%3D1%26sn%3Dcb2ee8b55040b2e256952c2935018209%26scene%3D21%23wechat_redirect" target="_blank">星星驱动开发 Star-Driven Development (SDD)</a>。而所谓的 SDD 就是开发者在调研同领域内的开源项目时，会根据项目的星星数来选型。</p><p><img src="https://oscimg.oschina.net/oscnet/up-bfe97e000091a53cc9079f6d34d45a81596.png" alt="file" referrerpolicy="no-referrer"></p><p>海外数据库变更管理这个领域，和 Bytebase 处在同一个赛道的主要是 Liquibase 和 Flyway 两大老牌开源项目。前段时间，Bytebase <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkzMjI2MDY5OQ%3D%3D%26mid%3D2247506610%26idx%3D1%26sn%3D54064d986e681cf13dc72c5f45e585a2%26scene%3D21%23wechat_redirect" target="_blank">刚刚飞跃 Flyway</a>，成为了三者里 Star 数最多的。</p><p><img src="https://oscimg.oschina.net/oscnet/up-b779ac5e2e1fcc7e6eda8afa2e0b7671cd6.png" alt="file" referrerpolicy="no-referrer"></p><p>而在国内，这块的产品更偏可视化 SQL 审核方向，这个赛道上另外两款流行的开源项目是 Yearning 和 Archery。Bytebase Star 涨势更快，但整体离 Yearning 还有一段距离，按照正常趋势本来超越要到明年。不过前两天应该是托了一位网友的助攻</p><p><img src="https://oscimg.oschina.net/oscnet/up-00082483185f0fe007687b570ede44e2de0.png" alt="file" referrerpolicy="no-referrer"></p><p>会画图是字节系的专属技能了，哦，我指的是 ByteByteGo</p><p><img src="https://oscimg.oschina.net/oscnet/up-50fa61dd623a746f9a241a2edfd3571b595.png" alt="file" referrerpolicy="no-referrer"></p><p>直接把 Bytebase 送上了 GitHub Trending</p><p><img src="https://oscimg.oschina.net/oscnet/up-ce9ebbdb50b420edfe33eab480d8b7057db.png" alt="file" referrerpolicy="no-referrer"></p><p>然后星星数就一下子超过了 Yearning</p><p><img src="https://oscimg.oschina.net/oscnet/up-6d1127610fafbff6f2f700f36460f5e6a01.png" alt="file" referrerpolicy="no-referrer"></p><p>回到肇事原图，Liquibase / Flyway，Archery / Yearning 先后挑战成功</p><p><img src="https://oscimg.oschina.net/oscnet/up-d16cf3c8782bfb8cf8f177b1e797e9c0c28.png" alt="file" referrerpolicy="no-referrer"></p><p>当然这也还没完，因为图上星星最多的其实是 DBeaver</p><p><img src="https://oscimg.oschina.net/oscnet/up-65dd00389f5dd94af71e07da13156190b8b.png" alt="file" referrerpolicy="no-referrer"></p><p>单独留下 Bytebase 和 DBeaver 对比一下</p><p><img src="https://oscimg.oschina.net/oscnet/up-de6d14255367d2d0e25d0d2dfb9e6963e6b.png" alt="file" referrerpolicy="no-referrer"></p><p>再来张按照时间线的</p><p><img src="https://oscimg.oschina.net/oscnet/up-512fe9828fbbe24151aaf648edb21a96ea0.png" alt="file" referrerpolicy="no-referrer"></p><p>超越 DBeaver 还需时日了。产品形态上，Bytebase 和 DBeaver 还是有不小差异。Bytebase 是基于服务端，面向团队的数据库协同管理工具，强调的是数据库操作的流程规范，安全管控。而 DBeaver 则是纯客户端，面向个人，强在丰富的数据库交互能力。</p><p>另外 Yearning 和 Archery 也都是优秀的开源项目。和 Bytebase 以商业化运作的模式不同，他们是完全依靠社区推动。Bytebase 之前也写过一篇 &lt;&lt;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%3F__biz%3DMzkzMjI2MDY5OQ%3D%3D%26mid%3D2247506315%26idx%3D1%26sn%3Dff7d09c6db6d4523a1391c578c8f9f1f%26scene%3D21%23wechat_redirect" target="_blank">对比国内主流开源 SQL 审核平台 Yearning vs Archery</a>&gt;&gt;。</p><p>总之在开源数据库工具领域，选择丰富，总有一款适合你。</p><p>巧合的是，在星星数超过 Yearning 的同时，Bytebase 还被有 300,000 订阅的 TLDR newsletter 摘录了。</p><p><img src="https://oscimg.oschina.net/oscnet/up-526ae8c6bff1498af858343e494f3f571bb.png" alt="file" referrerpolicy="no-referrer"></p><p>小编的摘要写的不错「Bytebase provides advanced database DevOps and CI/CD for engineering teams. It provides a unified process to manage, query, secure, and govern all of a team's databases from one place」。</p><p>对，就是在一个地方，用统一的流程，管理团队里所有数据库的操作。</p><hr><p>💡 更多资讯，请关注 Bytebase 公号：Bytebase</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 06:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/6148470/blog/10322904</guid>
            <link>https://my.oschina.net/u/6148470/blog/10322904</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[PuTTY 0.80 发布，修复 Terrapin 漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><span style="background-color:#ffffff">PuTTY 0.80 现已发布。PuTTY 是一款集成虚拟终端、系统控制枱和网络文件传输为一体的自由开源程序。它支持多种网络协议，包括&nbsp;SCP，SSH，Telnet，rlogin 和原始的套接字连接，它也可以连接到串行端口。其软件名字 「PuTTY」 并没有特殊含义。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">0.80 版本包含了对某些 SSH 协议扩展中 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fterrapin-attack.com%2F" target="_blank">Terrapin</a> 漏洞（又名 CVE-2023-48795）的修复。该问题还需要在服务器中打补丁。</span></span></p><p><span style="color:#000000"><strong><span style="background-color:#ffffff"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.chiark.greenend.org.uk%2F%7Esgtatham%2Fputty%2Flatest.html" target="_blank">下载地址</a> | <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.chiark.greenend.org.uk%2F%7Esgtatham%2Fputty%2F" target="_blank">发布公告</a></span></strong></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">Terrapin 是一种针对 SSH 协议的前缀截断攻击。更确切地说，Terrapin 破坏了 SSH 安全通道的完整性。通过在 handshake 过程中仔细调整序列号，攻击者可以在安全通道开始时删除客户端或服务器发送的任意数量的信息，而客户端或服务器却不会察觉。</span></span></p><p><img height="233" src="https://oscimg.oschina.net/oscnet/up-81e37599f65f6bde439d35e0bc805580ed1.png" width="300" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 04:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/272004/putty-0-80-released</guid>
            <link>https://www.oschina.net/news/272004/putty-0-80-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[技术揭秘第一回：看 BifroMQ 如何构建高效可用集群]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="margin-left:0; margin-right:0"><strong>引言</strong></p><p style="margin-left:0; margin-right:0">自今年 7 月份 BifroMQ 正式开源以来，在社群内获取了一定关注，也有许多用户也表达了对产品背后技术的兴趣。因此 BifroMQ 团队决定推送技术解读系列文章，深入剖析 BifroMQ 的各组件及其设计原则，给对该项目感兴趣的同学带来更深入的产品解析。本篇文章作为 BifroMQ 技术揭秘专题系列开篇文章，将详细介绍 BifroMQ 如何通过各种机制确保集群的高可用性，包括分布式集群架构、故障检测与自动逐出机制，以及各类负载均衡策略。后续将会有更多文章全方位、多维度详细剖析 BifroMQ 更多技术内容，敬请关注。</p><p style="margin-left:0; margin-right:0"><strong>去中心化集群</strong></p><p style="margin-left:0; margin-right:0">在 BifroMQ 架构中，配备 MQTT 协议工作负载的拆分方案，使每类工作负载均可在独立的子集群中运作。这些功能性子集群构建于去中心化底层集群构建框架（base-cluster）上。BifroMQ 集群框架包含两个逻辑层级：Underlay Cluster 和 Overlay Cluster，此种构建使得架构更加清晰和解耦。有关此设计更多细节，请参见（《BifroMQ 技术架构概览》，详见：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbifromq.io%2Fzh-Hans%2Fblog%2Fbifromq-tech-architecture%2F" target="_blank">https://bifromq.io/zh-Hans/blog/bifromq-tech-architecture/</a>）。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌Underlay Cluster</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0">Underlay Cluster 作为 BifroMQ 集群体系核心，该层成员代表一个运行中的 BifroMQ 进程，成员之间可直接利用进程绑定的主机网络地址 (HostAddress) 进行通信。BifroMQ 采用 Gossip 类的 Membership 协议（SWIM Protocol</p><p style="color:#000000; margin-left:0; margin-right:0">，详见：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fieeexplore.ieee.org%2Fdocument%2F1028914" target="_blank">https://ieeexplore.ieee.org/document/1028914</a><span style="color:#000000">）</span>实现集群成员失败检测（FailureDetection），并且对 Membership 信息的同步机制做进一步优化，使得整体上具有的以下技术特性：</p><p style="color:#000000; margin-left:0; margin-right:0">集群构建无需依赖传统的注册中心或命名服务，有效消除单点故障的运维风险，显著提升集群的高可用性。</p><p style="color:#000000; margin-left:0; margin-right:0">通过采用 SWIM 协议，Underlay Cluster 可确保节点间探活机制的准确性，保障集群拓扑的最终一致性。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">使用 CRDT 技术实现集群 Membership 信息在节点间同步，可以同步时效的同时做到极低的带宽占用。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>集群构建过程</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在去中心化的集群架构中，集群成员地位均平等，不存在专门负责管理集群拓扑信息的管控角色节点。从更高的视角来观察，运行 BifroMQ StandardCluster 服务进程的任何节点，实际上都可以视为一个拥有「单个节点」的独立集群。因此，集群的构建实质上是各独立集群的融合过程。为了实现这一过程，base-cluster 框架提供「join」操作，以便有效合并这些独立集群。</p><p style="text-align:center"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-5a3272260e17476852e4659bc5d8395be09.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center"><span>▲独立集群融合</span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">如图所示，集群的 join 操作可以由任一节点向目标集群的任一节点发起。为简化讨论，我们将作为 join 操作目标的节点称为「seeds」。在部署过程中，这些 seed 节点的地址通常会被配置在新加入集群节点的配置文件（seedEndpoints，详见：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbifromq.io%2Fzh-Hans%2Fdocs%2Fconfiguration%2Ffile_configs_manual%2F" target="_blank">https://bifromq.io/zh-Hans/docs/configuration/file_configs_manual/</a><span style="color:#000000">）</span>中。集群成功合并后，BifroMQ 集群中的每个节点都可以在本地获取到完整的集群 Membership 信息。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在节点配置中直接指定 seed 地址的方式，在容器化环境下可能存在一定的局限性。为解决这一问题，base-cluster 框架内置 DNS 解析功能。在容器环境中，可通过将所有节点纳入固定网络 Domain（例如 External DNS 或 Kubernetes Service），简化集群部署过程。这样，新加入的节点可以使用由该 Domain 解析出的任意 Remote 地址作为 seed，以完成 join 过程。</p><p style="text-align:center"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-5f32066006c71ba9c8a5b8b1b31283c58ff.png" width="650" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲集群 join 过程</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>失败检测与自动驱逐</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 BifroMQ 中，当节点正常退出时，会主动清理自身在集群中的注册身份，并与集群中的其他节点同步此变化。每个节点持续对其他节点进行失败检测（Failure Detection）。一旦检测到异常，会立即将该节点的相关信息从本地的集群 Membership 中移除，并迅速完成集群间 Membership 同步，防止不再活跃的节点对集群正常功能产生影响。</p><p style="text-align:center"><img alt="" height="193" src="https://oscimg.oschina.net/oscnet/up-83b9d6156b5aaa50edd1b2c784460d4065c.png" width="500" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲失败检测与自动驱逐过程</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">与自动驱逐机制相配合的是 BifroMQ 自愈机制，可以有效防止由于网络抖动或误判导致健康节点的注册信息被错误移除。每个节点会在观察到集群信息发生变化时，重新检查自身注册信息。如信息缺失，节点将主动进行补充，从而确保集群信息的完整性和最终一致性。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>脑裂恢复</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">对于去中心化的集群服务来说，网络分区 (Network Partition) 导致的集群脑裂，即单个集群分裂为多个互相隔离的集群，此种情况无法避免。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">base-cluster 对可能出现的脑裂故障做出一定保障，提高集群部署的高可用性，具体过程如下：当网络发生分区时，分裂被隔离的集群双方均会检测到对方节点的失败，这些失败被移除的节点会加入至本地的"愈合列表"，列表中的成员会被定时尝试 join，直到超过部署时设定的 MTTR（Mean Time To Repair，详见：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FMean_time_to_repair" target="_blank">https://en.wikipedia.org/wiki/Mean_time_to_repair</a><span style="color:#000000">）</span>。不难发现，脑裂恢复的过程实际上与集群构建过程一致。</p><p style="text-align:center"><img alt="" height="250" src="https://oscimg.oschina.net/oscnet/up-58ab5b0ad10b5673589d4b88dccd37f885d.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲脑裂恢复</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌</strong></span><span style="color:#3498db"><strong>Overlay Cluster</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">Overlay Cluster 又称为 Agent Cluster，构建于 Underlay Cluster 之上，利用 Underlay Cluster 的能力实现 Membership 管理和成员间通信，主要用于实现由不同逻辑服务单元组成的代理集群。借助 Underlay Cluster 的高效构建机制，Agent Cluster 能够自动实现集群构建，大幅简化部署和运维过程。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 BifroMQ 中，由 Agent Cluster 实现的子服务集群，可被分类为无状态集群和有状态集群两类：无状态集群以 RPC 服务为主；有状态集群通常基于 base-kv 构建内置分布式 KV 存储引擎。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>RPC 服务集群</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">RPC 服务集群成员通常被定义为客户端和服务端两种角色。利用 Agent Cluster 特性，RPC 客户端与服务端无需依赖外部注册中心，即可实现高效服务端发现与多样化客户端请求路由逻辑。</p><p style="text-align:center"><img alt="" height="220" src="https://oscimg.oschina.net/oscnet/up-7d5ffe56c861e499bc1fcc5037b471cd0dd.png" width="600" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲RPC 服务集群架构</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>BifroMQ 有状态子服务集群与分布式 KV 存储引擎</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 BifroMQ 有状态子服务集群中，内置强一致性的分布式 KV 存储引擎（base-kv）。此引擎具备基于 Multi-Raft 的 sharding 功能，为 BifroMQ 高度可靠性的关键组成部分。集群 Membership 成员服务信息由 Agent Cluster 维护，而每个 Range 分片内副本则通过 Raft 协议来实现强一致性同步。因此，要确保有状态服务高可靠性，则必须充分利用并符合 Raft 协议的特性要求。</p><p style="margin-left:0; margin-right:0"><strong>KVRange Balancer</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">base-kv 使用内置 Range Balancer 框架实现高效 Range 副本管理。该框架综合考虑当前集群拓扑结构和实时负载数据，生成用于均衡 Range 副本集的指令。这些指令包括 Leader 转移（LeaderTransfer）、成员配置变更（ConfigChange）、Range 拆分（Split）和 Range 合并（Merge）。通过此系列操作，base-kv 能够有效地实现集群负载平衡，优化吞吐性能，同时达成高可用性的目标。 值得一提的是，Range Balancer 同样采用去中心化的设计理念，在 base-kv 的每个节点中，Balancer 只负责管理本地的 Leader Range。此种设计使多个节点上的 Balancer 能够并行运作，最终达成全局一致的均衡目标。</p><p style="text-align:center"><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-9420a1b7a3b3136eab9d705e324df0863c7.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲KVRange Balancer</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">为确保用户可享受即插即用的便利性，BifroMQ 已预先内置系列常用的均衡策略实现。然而，对于那些有特定需求的高级用户，BifroMQ 还提供定制化均衡策略的能力（Balancer SPI），以便根据特定的应用场景进行优化。以下是内置均衡策略的简要介绍，用户可以根据个性化需求，通过配置来启用这些策略。</p><p style="margin-left:0; margin-right:0"><strong>ReplicaCntBalancer</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">ReplicaCntBalancer 主要作用为调节和平衡 Range 的副本数量。一旦启用，此功能将允许 Range 的副本数根据 BifroMQ StandardCluster 集群中部署节点的数量灵活调整。这意味着，ReplicaCntBalancer 能够根据集群当前规模，自动优化并实现最佳可用性配置，从而确保高效运行。</p><p style="text-align:center"><img alt="" height="200" src="https://oscimg.oschina.net/oscnet/up-517e5b81f336b51f3972596c3444ced9908.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲ReplicaCntBalancer</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">如图所示，工作过程如下：</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">集群扩容情况：假设最初 BifroMQ 集群中有 3 个节点，此时 KVRange 的副本数也是 3，使得集群能够容忍 1 个节点的故障。当新增 2 个节点后，ReplicaCntBalancer 自动将这些新节点纳入副本配置，并通过数据同步将副本数增加至 5。这样，即可容忍 2 个节点的不可用状态，从而提升容错能力。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">集群缩容情况：在另一种场景中，当 BifroMQ 集群包含 5 个节点且 KVRange 副本数同样为 5 时，若发生两个节点的宕机，依照 Raft 算法，仍能保持正常运作。然而，如果副本配置不变，再有一个节点宕机将导致整个 Raft 集群无法运作。此时，ReplicaCntBalancer 会调整副本配置，调整 VoterSet 仅包含剩余的 3 个可用节点。这样调整使集群在容忍 1 个节点不可用的情况下依然保持高可用性。</p><p style="margin-left:0; margin-right:0"><strong>RangeSplitBalancer</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 BifroMQ 中，单个 Range 的副本集将通过 Raft 协议进行管理，其负载能力受 WAL 复制机制限制，因此存在一定性能上限。特别是当业务工作负载高度集中於单个 Range 时，这种限制会变得尤为明显。在这种情况下，为提高系统整体性能，将一个 Range 拆分成多个部分是提升系统并行任务处理能力的有效手段。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">RangeSplitBalancer 正是 base-kv 内置并用于实现这一功能的负载策略。它通过分析实际业务负载情况，及时生成 Range 拆分指令，从而优化系统处理能力并提高性能表现。</p><p style="text-align:center"><img alt="" height="350" src="https://oscimg.oschina.net/oscnet/up-a01859f9e649144faa1f234b7e32b8fed5d.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲RangeSplitBalancer</p><p style="margin-left:0; margin-right:0"><strong>RangeLeaderBalancer</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 Raft 协议中，Leader 节点承担所有写请求和部分读请求的工作负载，因此，当多个 RangeLeader 副本集中在同一节点时，易产生负载热点，从而影响系统性能。为解决这一问题，base-kv 集群在发生多个 Range 分裂的情况下，可开启 RangeLeaderBalancer。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">RangeLeaderBalancer 专门负责监控和调整 Range 副本在各节点上的分布，并通过在节点间迁移 Range，确保每个 base-kv 节点上的 Leader 副本数量均衡，避免过度集中的负载热点。这种均衡提高整体负载处理的效率的同时，还可降低单个节点出现故障时对集群瞬时可用性的影响。</p><p style="text-align:center"><img alt="" height="300" src="https://oscimg.oschina.net/oscnet/up-4e23feaa789761cb46003c2f028a5856e9d.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲RangeLeaderBalancer</p><p style="margin-left:0; margin-right:0"><strong>RecoveryBalancer</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 Non-Byzantine 容错的强一致性协议中，正常工作节点数量 n 必须满足 n≥2f+1 的条件，其中 f 代表可容忍的失败节点数。基于这一原则，任何 Range 副本都必须位于超过半数的正常集群节点中，才能保证正常运作。然而，在实际部署中，当集群中 Range 的数量较多，且单个 base-kv 节点可能承载多个不同 Range 的副本时，多个 base-kv 节点的同时故障可能导致 n &lt; 2f+1 的情况发生，这被称为 Lost Majority。在 Lost Majority 的情况下，受影响的 Range 将无法正常工作。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">为应对这种情况，RecoveryBalancer 提供了一项关键能力。即允许节点检测自身是否处于 Lost Majority 的状态，并在必要时主动缩减副本列表配置，以确保至少有半数节点处于存活状态，从而使 Range 能够继续正常运作。然而，需要特别注意的是，在使用 RecoveryBalancer 自动恢复处于 Lost Majority 状态的 Range 时，如果之前失败的节点未经人工干预重新加入集群，可能会引起数据丢失和不一致等问题。这种情况下，用户需要慎重考虑并结合实际运维策略来决定是否启用 RecoveryBalancer 功能。</p><p style="text-align:center"><img alt="" height="130" src="https://oscimg.oschina.net/oscnet/up-19f3c8b67c40ccd70e6c7e3f3e600c3993a.png" width="400" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲RecoveryBalancer 功能</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>▌应用场景</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">BifroMQ 有状态子服务有三种：MQTT 订阅路由、离线消息队列、Retain 消息。分别由对应模块：dist-worker、inbox-store 和 retain-store 来实现。每一模块部署后均构成一个独立的 base-kv 集群。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">为适应不同使用场景和负载需求，BifroMQ 允许各集群根据其特定情况选择并启动相应的 Balancer 策略，用以使各集群都能在保持高可用性的同时，实现最优数据处理吞吐性能。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>dist-worker</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 BifroMQ 架构中，dist-worker 模块承担着管理订阅信息 (Sub) 和消息分发 (Pub) 的职责。在正常使用场景下，这通常是一个以读操作为主、写操作较少的场景。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">考虑到这一使用场景和 base-kv 的负载处理能力，dist-worker 采用了以下默认 Balancer 策略：</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">启用 ReplicaCntBalancer：这一策略确保 KVRange 副本数与集群节点数保持一致，最大化查询吞吐效率。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">控制 Voter 副本数：在保证高可用性的同时，将 Raft Voter 的数量限制在最多 3 个，其他副本则作为 Learner 角色，以此降低写操作的响应延迟。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在大多数常见的使用场景中，一条 Publish 消息匹配到的订阅者数量通常并不多，且匹配过程也较为迅速。结合标准的操作环境中，当前设置已能满足大部分性能要求，dist-worker 模块在其默认配置下并没有激活 Range 拆分策略。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">然而，当面对大规模 Fanout 场景，特别是那些对低延迟有更高需求的情况时，单个 Range 查询效率可能会变成制约整体性能的瓶颈。为了应对这类挑战，未来 BifroMQ 中将增强这一方面的处理能力，以优化大规模 Fanout 场景下的性能表现。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>retain-store</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">Retain 消息的工作负载与订阅信息和消息发送的处理相似，正常使用下主要表现为读操作多于写操作。基于这一特点，retain-store 的默认 Balancer 策略被设置为与 dist-worker 模块一致，在此不做重复说明。</p><p style="margin-left:0; margin-right:0"><span style="color:#3498db"><strong>inbox-store</strong></span></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">在 BifroMQ 中，inbox-store 模块承担着管理每个 cleanSession=false 连接离线消息的角色。对于这类连接，inbox-store 会创建一个专属持久化离线消息队列。归属于这些连接的 Publish 消息首先被写入这些队列中。当连接恢复在线状态时，消息将从队列中取出进行推送并随即删除。构成一个典型的高频读写场景，其中工作负载主要集中在 Leader Range 副本上，且 KV 存储操作的 IO 时延对整个系统的消息处理能力有着不可忽视的影响。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">考虑到这种特定使用场景和 base-kv 的负载处理特性，inbox-store 采取以下默认的 Balancer 策略：</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">默认限制 Voter 为 1：由于副本数量越多可能导致写入响应时延增长，因此默认设置中将 Range 副本数限制为 1，以优先保障消息的快速处理，但会有一定可靠性损失，用户可以根据情况增加副本数量。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">启用 RangeSplitBalancer 和 RangeLeaderBalancer：这一策略使得 inbox-store 能够随着工作负载的增长动态进行分片扩容，最终实现更加均衡的负载分布，提升系统整体性能。</p><p style="margin-left:0; margin-right:0"><strong>StandardCluster 的部署策略与灵活性评估</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">BifroMQ StandardCluster 采纳集所有功能模块於单一进程的部署策略。这种策略使得配置和部署过程相对简化，类似于业界普遍采用的"SharedNothing"集群架构。尽管如此，多个模块共享同一进程内的系统资源，难免限制基于实际业务需求的动态配置能力。所有模块需统一进行扩缩容，这在某些情况下可能导致灵活性不足。这一点在云业务场景中尤为明显，因为不同类别的负载波动与时间相关，需要更加细致和灵活的资源管理。</p><p style="margin-left:0; margin-right:0"><strong>单个模块独立进程的实施与过渡</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">BifroMQ 的独特架构设计使其能够轻松实现"单个模块独立进程"的部署模式，我们称之为 IndependentWorkload Cluster(未来版本中推出)。这种模式不仅提供更高的灵活性和精细的资源管理能力，还能够帮助用户根据业务的发展逐步从 StandardCluster 模式过渡到 IndependentWorkload Cluster 模式。这种渐进式的部署变化可在保持业务连续性的同时，优化资源配置和应对业务需求的波动。</p><p style="text-align:center"><img alt="" height="120" src="https://oscimg.oschina.net/oscnet/up-70971f2bef6bf706707b7e3b95e1730fe75.png" width="369" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px; text-align:center">▲IndependentWorkload Cluster 过渡</p><p style="margin-left:0; margin-right:0"><strong>总结</strong></p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">以上内容为 BifroMQ 利用多种机制确保集群整体高可用性的全面介绍。本专题下期文章，我们将从 BifroMQ Topic 订阅匹配方案的设计和实现思路出发，为您带来全新视角深入解读。</p><p style="color:#000000; margin-left:0; margin-right:0; text-align:justify">本次系列文章围绕 BifroMQ 在 MQTT 上的设计实现做全面解读，欢迎对 MQTT 技术感兴趣的同学关注。也期待大家更多的参与<span style="color:#000000">（</span>BifroMQ 社区，详见：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fbaidu%2Fbifromq" target="_blank">﻿https://github.com/baidu/bifromq</a>﻿ ），提供宝贵的深入使用反馈意见，共同推动这一技术的成熟。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 03:05:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271988</guid>
            <link>https://www.oschina.net/news/271988</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[统信 UOS 桌面版装机量超 600 万套，市占率第一]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>统信昨日举行 2023 统信 UOS 生态大会。在大会上，官方公布了统信 UOS 装机量、UOS AI 最新进展等信息。</p><p>《2023 中国信创产业洞察研究》数据显示，统信 UOS 独家中标中国邮政 30 万套国产操作系统，这是行业目前最大采购订单；统信 UOS 独家中标北京市丰台区教委 2 万套操作系统，更是目前中国教育领域最大的单项中标。</p><p><strong>截至目前，统信 UOS 桌面版发货量累计超过 600 万，市占率持续保持第一；服务器版发货量增速为行业第一</strong>。</p><blockquote><p>统信 UOS 是由统信，深之度科技等联合开发的一款国产 Linux 操作系统，提供了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.uniontech.com%2Fnext%2Fproduct%2Fdesktop-system%3Fedition%3DPersonal" target="_blank">桌面版</a>和<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.uniontech.com%2Fnext%2Fproduct%2Fserver-system%3Fedition%3DEnterprise" target="_blank">服务器版</a>。其中桌面版包括：专业版、教育版、家庭版和社区版。服务器版包括企业版、行业版等。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="768" src="https://static.oschina.net/uploads/space/2023/0911/112651_9lsK_2720166.png" width="1515" referrerpolicy="no-referrer"></p></blockquote><p>统信软件总经理刘闻欢<span>介绍称，</span>中国 70% 党政、80% 央国企、65% 部委、90% 金融、90% 教育的核心与一般业务系统都运行在统信 UOS 之上。</p><p>生态方面，<strong>统信 UOS 软硬件生态适配数已经突破 500 万，原生应用激增 300%</strong>。</p><p><img src="https://static.oschina.net/uploads/space/2023/1221/101820_80wj_2720166.png" referrerpolicy="no-referrer"></p><p>据称，统信 UOS 在通用市场呈现领先态势，服务器操作系统市场规模逐年提高，<strong>统信 UOS 营收增速达 170%</strong>。</p><p>官方表示，统信软件已与龙芯、飞腾、海光、兆芯、申威及英特尔等主流芯片厂商建立联合生态实验室，与鲲鹏计算达成深度合作，<strong>支持重点整机厂商主力机型 100 + 款，实现所有整机机型 100% 兼容性适配及互认证</strong>。</p><p>目前统信 UOS 应用商店中已有多款常用、实用的软件，包括 QQ、微信、搜狗输入法等，也有中望 CAD 等专业生产力软件。</p><hr><p><span>延伸阅读</span></p><ul><li><a href="https://www.oschina.net/news/257631">统信 UOS 软硬件适配数正式超过 300 万</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 02:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271975</guid>
            <link>https://www.oschina.net/news/271975</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[QEMU 8.2 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qemu.org%2F2023%2F12%2F20%2Fqemu-8-2-0%2F" target="_blank">QEMU 8.2.0 </a>版本现已推出，此版本包含来自 238 位作者的 3200 多项 <span style="background-color:#ffffff">commit</span>。</span></p><p><span style="color:#000000">一些更新<span style="background-color:#ffffff">亮点包括：</span></span></p><ul><li><span style="color:#000000">新的 virtio-sound 设备模拟</span></li><li><span style="color:#000000">Android 模拟器使用新的 virtio-gpu rutabaga 设备模拟</span></li><li><span style="color:#000000">新增用于 Hyper-V guests 的动态内存协议设备 hv-balloon</span></li><li><span style="color:#000000">新的通用闪存设备模拟</span></li><li><span style="color:#000000">网络块设备 (NBD) 64 位偏移可提高性能</span></li><li><span style="color:#000000">dump-guest-memory 现在支持标准 kdump 格式</span></li><li><span style="color:#000000">ARM：对 cortex-a710 和 neoverse-n2 的 CPU 仿真支持</span></li><li><span style="color:#000000">ARM：对 PACQARMA3、EPAC、Pauth2、FPAC、FPACCOMBINE、TIDCP1、MOPS、HBC 和 HPMN0 的架构功能支持</span></li><li><span style="color:#000000">HPPA：64 位 PA-RISC 2.0 的 CPU 仿真支持</span></li><li><span style="color:#000000">HPPA：C3700 的机器仿真支持，包括 Astro 内存控制器和四个 Elroy PCI&nbsp;bridges</span></li><li><span style="color:#000000">LoongArch：ISA 对 LASX 扩展和 PRELDX 指令的支持</span></li><li><span style="color:#000000">LoongArch：对 la132 的 CPU emulation 支持</span></li><li><span style="color:#000000">RISC-V：通过 KVM 和矢量加密指令支持 AIA 虚拟化的 ISA/扩展支持</span></li><li><span style="color:#000000">RISC-V：大量扩展/指令清理、修复和重做</span></li><li><span style="color:#000000">s390x：支持加密适配器的 vfio-ap passthrough，以保护受保护的虚拟化&nbsp;guests</span></li><li><span style="color:#000000">Tricore：支持实现 ISA v1.6.2 的 TC37x CPU</span></li><li><span style="color:#000000">Tricore：支持 CRCN、FTOU、FTOHP 和 HPTOF 指令</span></li><li><span style="color:#000000">x86：对 PV 控制枱和网络设备的 Zen 支持</span></li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qemu.org%2Fdownload%2F%23source" target="_blank">下载地址</a><span style="background-color:#ffffff; color:#333333">&nbsp;|<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwiki.qemu.org%2FChangeLog%2F8.2" target="_blank">Changelog</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 20 Dec 2023 02:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271972/qemu-8-2-released</guid>
            <link>https://www.oschina.net/news/271972/qemu-8-2-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每个故障都是一次涅槃]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>2023 年 12 月 19 日，今天 sealos 的公有云一个小时内被攻击 3 次，每次，几 G 到，十几 G 的流量，都是 CC 攻击（七层多 IP 地址模拟用户请求），这种比 DDos 还难防，现在凌晨一点，刚处理完所有临时方案，以及咨询一些外部的安全专家，后续会有一系列的加强防控来保障稳定性。有些感想，怕睡一觉忘了，赶紧写下来。</p><h2>致歉</h2><p>首先要给所有喜欢 sealos 的同学道歉，这几天的连续攻击让平台出现几次几分钟的不可用，比如今天每次大概会 3～5 min, 流量是瞬间过来把 15 台 nginx 全部打爆的，然后 k8s 会自动拉起恢复，我们停止掉了被攻击应用，并把资源扩大了一倍来硬抗，这是临时方案。</p><p>被攻击之后我们的稳定性数据是 99.9%，对于稳定性要求高于这个数字的业务可以考虑缓一缓使用我们的公有云，先可以跑一些开发测试或者周边应用，核心业务可以考虑独立部署方案。</p><p>后面平台会按照 SLA 承诺给收到损失的用户相应赔偿，有迁移走的用户可以联系我们对未消费余额全部退款，再次表示深深的歉意。</p><h2>这一天迟早要来</h2><p>在大概一个月前还没被攻击的时候，laf 作者老根吃饭时就在讲，为什么 sealos 还没受到攻击，这不合理，没被攻击反而让人感到不安。现在头顶的剑是落下了，这是成为一朵成熟的云的必经之路。没想到来的这么快。</p><h2>创业一年中遇到前所未有的挑战</h2><p>创业我们选择了一条极难，极让人兴奋的路，做公有云，这怎么看都不应该是一个小团队能做的了的事，我嫌难度不够再增加一点：做一个多租户的容器公有云。还可以把难度再加一点：先做国内。最终想做成一个优雅的牛逼的公有云，然后任何人都可以直接拥有这个云操作系统，一键装起来一个对标公有云能力的云，磨平公有云私有云的边界。</p><p>创业前虽然也做过非常多有挑战的事，比如容器云支撑整个讯飞核心研发平台，深度学习平台的 GPU 批任务，碎片化，当时做了一个亚洲最大的 GPU 集群，后面在 k8s 上完全取代 openstack 的创世系统，在阿里云的时候应用交付平台和开源 sealer 等，但这些大多都是私有云，和公有云不是一个挑战级别。</p><p>创业时我们在技术上是激进的，现金流上是保守的，因为我认为前沿的不太成熟的技术别人不敢用，我敢，这就是创业公司的竞争优势，不成熟的技术你让他成熟了这就成为你建立壁垒的砖块。当有长期的积累，这朵云稳定运行超过 2 年时，我们就会达到原子弹爆炸的临界值，没人能拒绝这样优秀的东西了。</p><p>第一次大的故障是 2023.3.17 号，记的这么清楚是因为公司一周年庆祝，我们买了蛋糕水果，结果 laf 刚上线没几天就挂了，全公司核心人员修复了 15 个小时，蛋糕摆在那儿就没时间切了。最终原因是因为用了某平台的轻量服务器，网络包紊乱，后来全部切走，低成本是要付出代价的。</p><p>后面几次故障是 laf 的用户迅速暴涨，导致 mongo 的租户迅速突破上限，很少有这种多租户共享一个实例的场景，影响到了我们的用户，其中有一个用户在北京，我就过去给他们道歉了，并承诺无论花多大代价都必须把他们的稳定性做好，后面几乎整个 laf 团队都铺在这个事情上，中间过程故事很多，已经到了我们帮助用户去调优代码的程度了，当然稳定性问题是没有那么好解决的，但是最终还是收敛下来了，现在这个客户今年已经从 0 开始有大几百万用户了，这种背靠背作战让我们很有成就感，就像在爬一座又一座山，中间我们可能被划伤，摔倒，但是没死，变秃了也变强了。</p><p>然后就是网关，我们确实几乎市面上所有的网关都尝试用了一遍，测试了一遍，都有不同程度各种各样的问题。 我自己遇到这些问题是兴奋的，这就意味着机会，意味着我们解决了这些问题就会变成竞争力，所以我们不断死磕难点。比如我们正在用的 k8s 刚刚 GA 的 Gateway API，我们会充分的压力测试与解决其中还不太成熟的问题，又比如我们一定要把数据库稳定的跑容器里。</p><p>最近遇到的就是被攻击，原因是因为 sealos 上跑了大量的 GPT 相关的应用，某些应用的流量又特别大，而这些应用的竞争对手就会恶意攻击。我们做过充分的性能测试，比如几十万 QPS 都可以轻松扛住，但是攻击者是下血本了，流量打的非常之大，隔三差五就来两下。我们后续会通过 tls 特征分析，http2 以及 ip2local 几个层面来综合解决 cc 攻击的问题。这次之后我们又将一次脱胎换骨，真的我现确切的感受就是这样，一个产品的强大是要经过苛刻的场景千锤百炼的，高手的身上都是伤疤。</p><p>这次故障用户里面就会出现两种人，一种是谩骂声，说稳定性差，体验差，服务差，我十分理解，也多少有些失落，确实我们不完美，我们在努力改进，也尽自己所能去做一些弥补，当我们足够强大的时候，欢迎回来。 另外一种是支持和鼓励，让我非常感动，群里很多做网络安全的同学主动联系我，给我们提供非常靠谱的方案，甚至共享一些付费数据来为我们提供更好的防护能力，以前 laf 故障的时候也是，有些客户给我们发红包，说修复故障辛苦了，是个好项目，无论遇到什么困难一定要做下去，这些用户真的是我们的前进动力。</p><h2>稳定性与成本</h2><p>很难的一件事就是用户不接受你不稳定这合情合理，同样不接受成本高，而往往有时候就是需要投入更大成本来解决稳定性问题，比如我们这些遇到的，一种解决方式就是把流量抗下来，那就需要耗费大量服务器，这就是成本，或者加 waf ddos 防护这也是成本，这些隐性成本挺多用户要么不认，要么用不起（也有原意用的）。所以成本和稳定性之间就形成了一种矛盾。而且这种 CC 攻击如果攻击者足够专业的话让你没法做特征分析，那么理论上可能真的只有硬抗下来，抗的这个成本算谁的。</p><p>所以我现在能理解为什么公有云贵了，就是为了解决那剩下的 10% 问题，需要花 200% 300% 的成本去解决，比如多副本，比如机房灌水，等等。</p><p>这次被攻击之后让我更加坚定拥抱公有云，确实云在底层解决掉了很多问题，如果是托管服务器迟早都会遇到这些问题，然后花数倍的成本云解决。 反而通过高效充分的云上调度手段能在公有云上把成本进一步降低。</p><p>总之，不稳定，用户骂你，贵，用户亦骂你。 我是觉得骂的对，不骂不进步。技术有意思的点也在这，解决矛盾问题，比如稳定性与成本的矛盾，比如功能强大与复杂度的矛盾，这些新的牛逼的技术就是为了能找到一个优雅的方式能兼顾。</p><h2>涅槃重生</h2><p>我们还是一如既往的走技术激进路线，稳定性的问题是一定会被收敛的，sealos 的核心组件就那么多，一块一块硬啃也能啃下来，今天暴露的问题是为了明天的高鲁棒性，要想涅槃重生得把自己架在火上烤，公有云就是我们的试金石，预计半年到一年的时间我们可以解决掉绝大多数核心问题，倒时一个稳如老狗，便宜，简单，开放的云会绽放在大家面前。 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ffanux%2Fsealos" target="_blank">sealos 以 kubernetes 为内核的云操作系统发行版，让云原生简单普及</a></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Flafjs%2Flaf" target="_blank">laf 写代码像写博客一样简单，什么 docker kubernetes 统统不关心，我只关心写业务！</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 09:26:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5254806/blog/10322777</guid>
            <link>https://my.oschina.net/u/5254806/blog/10322777</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[大多数严重网络攻击都源于不到 1% 的漏洞]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">网络安全软件提供商 Qualys 发布了一份「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.qualys.com%2Fvulnerabilities-threat-research%2F2023%2F12%2F19%2F2023-threat-landscape-year-in-review-part-one" target="_blank">2023 年威胁态势回顾</a>」的研究报告。详细介绍了漏洞威胁态势、主要漏洞类型和其他相关数据的关键见解，包括平均利用时间、MITRE ATT&amp;CK 策略和技术，以及 2023 年最活跃的勒索软件和威胁行为者。</span></p><p><span style="color:#000000">截至报告成文时，2023 年共披露了 26,447 个漏洞，比 2022 年披露的漏洞总数多了 1,500 多个，是有史以来披露的最高数量。但并非所有漏洞都具有高风险，事实上，只有不到 1% 的漏洞会导致最高风险，并且经常被广泛利用。</span></p><p><span style="color:#000000"><img alt="" height="267" src="https://oscimg.oschina.net/oscnet/up-6c4543e7ec1ce3b06a0a8d7e071286489ad.webp" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000"><img alt="" height="253" src="https://oscimg.oschina.net/oscnet/up-33ab1f11fb9bec4cecc7e8181bba654c281.webp" width="500" referrerpolicy="no-referrer"></span></p><ul><li><span style="color:#000000">在已披露的漏洞中，超过 7,000 个漏洞具有概念验证漏洞利用代码，可能会导致成功利用漏洞。但漏洞利用代码的质量通常较低，这可能会降低攻击成功的可能性。</span></li><li><span style="color:#000000">大约 206 个漏洞具有可用的武器化利用代码，这意味着<span style="background-color:#ffffff">如果利用这些漏洞</span>，很可能会危害目标系统。</span></li><li><span style="color:#000000">有 115 个漏洞经常被威胁者、恶意软件和勒索软件组织（例如 Clop）利用。</span></li><li><span style="color:#000000">在观察到的漏洞中，109 个有被利用的已知证据，并被列入 CISA 已知被利用漏洞 (KEV) 清单。</span></li><li><span style="color:#000000">97 个漏洞已被利用，但未包含在 CISA KEV 列表中。</span></li><li><span style="color:#000000">LockBit 和 Cerber 等勒索软件集团利用了 20 个漏洞。此外，恶意软件和僵尸网络组织利用了 15 个漏洞。</span></li></ul><p><span style="color:#000000">超过三分之一的已识别高风险漏洞可以被远程利用。五种最常见的漏洞类型占已发现漏洞总数的 70% 以上。</span></p><p><span style="color:#000000"><img alt="" height="253" src="https://oscimg.oschina.net/oscnet/up-c379630bd2ad0f2b2de66be6226cedb00f8.webp" width="500" referrerpolicy="no-referrer">&nbsp;</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">2023 年高危漏洞的平均利用时间约为 44 天。但报告指出，在许多情况下，</span><span style="background-color:#ffffff">漏洞在发布当天就可以被利用。「这一立即行动代表了攻击者作案方式的转变，凸显了攻击者效率的不断提高和防御者响应窗口的不断缩小。」</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><strong>25% 的高风险 CVE 在发布当天就已被利用，</strong><span style="color:#000000"><span style="background-color:#ffffff">75% 的漏洞在发布后 19 天（大约三周）内被利用。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">全年被利用的主要漏洞包括针对 PaperCut NG、MOVEit Transfer、各种 Windows 操作系统、Google Chrome、Atlassian Confluence 和 Apache ActiveMQ 的漏洞。许多漏洞可以远程利用，无需物理访问目标系统。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">在已发现的 206 个漏洞中，有 32.5% 的漏洞位于网络基础设施或 Web 应用程序领域，而这些领域传统上很难通过常规手段进行防护。</span></p><p><span style="color:#000000"><strong>远程服务利用（T1210 和 T0866）、面向公众的应用程序的利用（T1190 和 T0819）</strong>和<strong>特权升级利用 (T1068)​​​​​​​<strong style="color:#6a778b">&nbsp;</strong></strong>是 MITRE ATT&amp;CK 的三大策略。其中最常用的远程服务利用，在企业中出现了 72 次，在工业控制系统中出现了 24 次。面向公众的应用程序的利用在企业中出现了 53 次，在工业控制系统中出现了 19 次；特权升级利用排在第三位，记录了 20 次。</span></p><p><span style="color:#000000">为了降低风险，报告建议企业应采用多层次方法，利用各种传感器清查面向公众的应用程序和远程服务的漏洞。并建议根据列入 CISA KEV 列表、高利用概率分数和武器化利用代码的可用性等因素，确定修复工作的优先顺序。</span></p><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.qualys.com%2Fvulnerabilities-threat-research%2F2023%2F12%2F19%2F2023-threat-landscape-year-in-review-part-one" target="_blank">查看完整报告</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 09:22:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271898/2023-threat-landscape-year</guid>
            <link>https://www.oschina.net/news/271898/2023-threat-landscape-year</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[倪光南院士：希望国产 SSD 替代进口 HDD]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>「2023 探索大会」今日在北京举办，中国工程院院士倪光南在会上表示：「我们希望在存储界迅速地推进以半导体存储取代机械存储这样一个科技革命的趋势，<strong>推动国产 SSD 产品替代进口的 HDD 产品</strong>。」</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-e03cbbc2dbb4d357d48b52d863fe3d1c73a.png" referrerpolicy="no-referrer"></p><p>倪光南院士称，半导体存储以其高性能、低功耗等优势，正在逐渐取代传统的机械存储。这次科技革命将带来巨大的产业变革，对于推动国产 SSD 产品替代进口的 HDD 产品，以及提升我国在全球半导体存储领域的地位具有重大意义。然而，要实现这个目标，我国还需要在人才储备等方面得到大力支持。与发达国家相比，我国在半导体存储领域的人才储备还有一些差距。因此，倪光南院士呼吁相关部门和企业能够在这方面给予更多的支持和关注。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-24efc7c284d1c70c6dca31b2f9c63c3bdb1.png" referrerpolicy="no-referrer"></p><p>倪光南在今年 6 月的第十三届电子信息产业标准推动会上指出，目前 HDD 市场均被外企垄断，在 HDD 领域寻求突破异常困难。倪光南提到，闪存和 SSD 均属于半导体存储范畴，闪存指的是存储介质，即闪存颗粒，SSD 指的是存储设备。</p><p>目前我国算力中心中采用 SSD 的占比较低，在我国存储市场中，闪存所占比例还较低，未来发展空间巨大。他表示，随着我国国产存储整机和闪存生产能力逐步提升，SSD 取代 HDD 时机已经到来。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 08:09:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271880</guid>
            <link>https://www.oschina.net/news/271880</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[知名开源项目作者因躁狂症失业——「在线求打钱」]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Requests 是知名的 Python HTTP 库（项目已捐赠给 Python 软件基金会）。</p><blockquote><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-572c04dd97a41d6c7e7474bfd845177323f.png" referrerpolicy="no-referrer"></p></blockquote><p>最近 Requests 作者 Kenneth Reitz 在社交媒体表示自己目前的财务情况出现问题，所以需要<strong>寻求资金来维持基本生存</strong>。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1220/122429_Vhez_2720166.png" referrerpolicy="no-referrer"></p><p><strong>我目前正在寻求资金，以维持我们的生计。到目前为止，我所担任的职位在经济上并不宽裕。虽然我正在努力，但我们现在的生活还是捉襟见肘。有人愿意帮忙吗？<br> 我已经安装了 CashApp。</strong></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fkennethreitz42%2Fstatus%2F1734713908735230191" target="_blank">https://twitter.com</a></u></em></p></blockquote><p>Kenneth Reitz 最近的推文<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fkennethreitz42%2Fstatus%2F1734575827545723236" target="_blank">显示</a></u>，其本人正在寻找新的工作机会——缺少稳定的收入来源，也难怪 Kenneth Reitz 需要「在线求打钱」。</p><blockquote><p><img height="330" src="https://static.oschina.net/uploads/space/2023/1220/120541_XEHC_2720166.png" width="1280" referrerpolicy="no-referrer"></p><p><img src="https://static.oschina.net/uploads/space/2023/1220/121110_Kh2A_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>Kenneth Reitz 还<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fkennethreitz42%2Fstatus%2F1734731803858968577" target="_blank">坦言</a></u>几周前自己<strong>因躁狂症而失业</strong>。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1220/121840_F9TY_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>下面是 Kenneth Reitz 的作品和简介：</p><p><img src="https://oscimg.oschina.net/oscnet/up-f59b6ee0dd1750cca83570ae8cdeae8e246.png" referrerpolicy="no-referrer"></p><p>via&nbsp;<em><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fkennethreitz" target="_blank">https://github.com/kennethreitz</a></u></em></p><hr><p>延伸阅读</p><ul><li><a href="https://www.oschina.net/news/106470/why-im-not-collaborating-with-kenneth-reitz" target="_blank">知名 Python 库 Requests 作者&nbsp;Kenneth Reitz 被指骗捐</a></li><li><a href="https://www.oschina.net/news/197320/python-requests-library-domain-expired" target="_blank">Python HTTP 库 Requests 官网域名已过期</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 19 Dec 2023 04:14:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/271855</guid>
            <link>https://www.oschina.net/news/271855</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
    </channel>
</rss>
