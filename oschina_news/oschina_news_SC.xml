<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="http://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 03 Nov 2023 07:22:23 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[【SIG 月报】10 月 openKylin 社区 SIG 组最新进展分享]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">为推动社区繁荣发展，打造开源操作系统创新生态，openKylin 社区围绕创新硬件、人机交互、智能支撑、终端安全、互联协同、云端融合等多个技术领域，以技术小组的形式开展深入研究和技术创新。接下来，让我们一起盘点 10 月份 openKylin 社区 SIG 组的最新进展：</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">10 月社区新增 SIG</span></span></strong></span></p><p>10 月社区新增 4 个 SIG 组，目前已累计成立 90 个 SIG 组，新增 SIG 组信息如下：</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong><span style="color:#ff9b0e"><span style="background-color:#f5faff">01</span></span><span style="color:#1c9cee"><span style="background-color:#f5faff">H2CHAIN SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000"><span style="background-color:#f5faff">H2CHAIN 由华夏好瑞（天津）科技有限公司发起成立。H2CHAIN（海河信创链）致力于搭建大规模异构区块链互通互联的高性能平台，丰富 openKylin 区块链应用场景。</span></span></span></p><ul><li><span><span style="color:#000000">SIG 主页：</span></span></li><li><span><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/H2CHAIN</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong><span style="color:#ff9b0e"><span style="background-color:#f5faff">02</span></span><span style="color:#1c9cee"><span style="background-color:#f5faff">Cinnamon SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000"><span style="background-color:#f5faff">Cinnamon 是一个易上手的，高度可定制的桌面环境，深受 Linux 爱好者喜爱。Cinnamon SIG 组由社区爱好者发起成立，负责移植 Cinnamon 桌面环境，让其在 openKylin 拥有完美的体验。</span></span></span></p><ul><li><span><span style="color:#000000">SIG 主页：</span></span></li><li><span><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/Cinnamon</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong><span style="color:#ff9b0e"><span style="background-color:#f5faff">03</span></span><span style="color:#1c9cee"><span style="background-color:#f5faff">LXQt SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000"><span style="background-color:#f5faff">LXQt 是一个轻量级的桌面环境，使用 Qt 作为图形界面库，支持多种窗口管理器，如 Openbox、Xfwm4 或 KWin 等。LXQt SIG 组由社区爱好者发起成立，负责移植 LXQt 桌面环境，为 openKylin 提供一个快速、美观、易用的桌面环境，同时保持低资源占用和高可定制性。</span></span></span></p><ul><li><span><span style="color:#000000">SIG 主页：</span></span></li><li><span><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/LXQt</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong><span style="color:#ff9b0e"><span style="background-color:#f5faff">04</span></span><span style="color:#1c9cee"><span style="background-color:#f5faff">MakerFrame SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000"><span style="background-color:#f5faff">MakerFrame SIG 组由社区爱好者发起成立，负责为 openKylin 开发简单高效的游戏框架引擎，致力于让专业人士和非专业人士都来开发跨平台的游戏和应用，大力促进 openKylin 游戏生态推广。</span></span></span></p><ul><li><span><span style="color:#000000">SIG 主页：</span></span></li><li><span><span style="color:#0052ff">https://gitee.com/openkylin/community/tree/master/sig/MakerFrame</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">10 月社区 SIG 活跃度汇总</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">10 月社区新增有效 PR 数 411 个、仓库 Fork 数新增 550 个，SIG 组公开例会召开 10 次。截至目前，社区累计有效 PR 数 11517 个、仓库 Fork 数 4452 个、SIG 组公开例会召开 102 次，其中：</p><ul><li><span><span style="color:#000000">10 月社区 SIG 组 PR 贡献 top15 如下：</span></span></li></ul><div><p style="text-align:center"><img height="537" src="https://oscimg.oschina.net/oscnet/up-52c4cf042b90758cb944f6bb2cdd076db70.png" width="794" referrerpolicy="no-referrer"></p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">10 月社区 SIG 组活跃地图分布情况（颜色越深代表越活跃，参考维度：PR、issue、SIG 会议）如下：</span></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-0aa7f9b3b5d67f3ce0208dec81b09816e3a.png" referrerpolicy="no-referrer"></p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">10 月社区技术进展与成果</span></span></strong></span></p><h1>一、UKUI SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">UKUI（Ultimate Kylin User Interface）SIG 小组致力于桌面环境相关软件包的规划、维护和升级工作，满足各种设备和用户需求的桌面环境程序，主要包含程序启动器（开始菜单）、用户配置、文件管理、登录锁屏、桌面、网络工具、快捷配置等，为用户提供基本的图形化操作平台。桌面核心组件开发工具以 Qt、C++为主，宗旨是始终如一地提升系统的操作体验，提供集稳定性、美观性、流畅性和便捷性为一体的桌面环境。10 月进展如下：</span></span></p><ul><li><span><span style="color:#000000">【任务栏 4.X】托盘区分类、非合并状态图标拖拽及动画功能实现；</span></span></li><li><span><span style="color:#000000">【任务栏 4.X】全局配置加载逻辑优化；</span></span></li><li><span><span style="color:#000000">【USD】新增多媒体控制协议实现及接口；</span></span></li><li><span><span style="color:#000000">【小插件框架】新增对配置文件目录的文件监听功能；</span></span></li><li><span><span style="color:#000000">【元数据】新增 png 格式元数据解析，新增 ocr 解析异常处理；</span></span></li><li><span><span style="color:#000000">【quick-items】新增调整访问系统调色板和字体的方式，添加适配 UKUI 风格的窗口；</span></span></li><li><span><span style="color:#000000">【托盘网络】单网卡场景显示策略优化 ；</span></span></li><li><span><span style="color:#000000">【主题框架】主题框架优化部分控件背景和样式；</span></span></li><li><span><span style="color:#000000">【侧边栏】优化侧边栏快捷配置面板进出动；</span></span></li><li><span><span style="color:#000000">【搜索】新增命令行查询索引状态&amp;进度功能、托盘右键功能和 OCR 开关和内容索引开关询问弹窗；</span></span></li><li><span><span style="color:#000000">修复系统监视器、控制面板电源搜索、侧边栏唤出和隐藏异常等相关问题；</span></span></li><li><span><span style="color:#000000">完成与 openEuler FT 团队线下 meetup 技术分享会。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎各位感兴趣的社区开发者加入我们，一起打造 openKylin 桌面系统稳定易用的桌面环境！</span></span></p><h1>二、RISC-V SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#333333">本</span>SIG 组主要负责 RISC-V 架构开源软件包的维护，发布 openKylin 的 RISC-V 版本，进行软件包构建、系统构建等工作。10 月 RISC-V SIG 组进展如下：</span></p><ul><li><span><span style="color:#000000">解决鉴释平板触屏问题，制作平板的新镜像；</span></span></li><li><span><span style="color:#000000">编译荔枝派 1.2.1 版本 sdk，解决 GPU 适配问题，完成了镜像内核 moudle，GPU 驱动，mesa 库等移植工作，构建新版本荔枝派镜像；</span></span></li><li><span><span style="color:#000000">构建 RISC-V 专属 PPA，用于后续 RISC-V 定制包版本编译及镜像发行；</span></span></li><li><span><span style="color:#000000">解决算能新开发板的启动问题，制作新镜像；</span></span></li><li><span><span style="color:#000000">开始编写根据 RISC-V 硬件类型修改镜像中配置的包 kylin-riscv-hardware-config，后续可以通过装包的方式实现各硬件镜像的快速配置；</span></span></li><li><span><span style="color:#000000">成功集成 RISC-V 版本 nim 语言开发编译环境到 RISC-V 专属 PPA；</span></span></li><li><span><span style="color:#000000">调研从上游源代码编译包至镜像制作的全流程，初步具备 RISC-V 版本镜像独立发行的能力；</span></span></li><li><span><span style="color:#000000">二进制翻译针对 Wine 与 steam 添加对应的包装函数，如 vulkan 插件集，OpenCL 及其内存操作相关函数。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify">&nbsp;</p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 RISC-V 开发平台技术方向感兴趣的爱好者加入到 RISC-V SIG！</span></span></p><h1>三、Release SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Release SIG 主要负责协调各个 SIG 组，把控版本开发进度和风险，制定版本发布计划，完成版本发布工作等。Release SIG 10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">推动 openKylin 2.0 基础库组件选型、新特性需求开发进展，新需求评审等；</span></span></li><li><span><span style="color:#000000">完成 openKylin 2.0 pre-alpha1 构建，处理版本构建问题；</span></span></li><li><span><span style="color:#000000">推动 openKylin 遗留缺陷 issue 修复，集成 1023 版本提测。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区版本集成、版本管理、版本发行等工作感兴趣的爱好者加入到 Release SIG！</span></span></p><h1>四、Packaging SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Packaging SIG 负责维护 openKylin 社区的软件包打包规范，维护公共软件包，以及协调和决策社区版本发布过程中的包依赖问题。10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">Sogou-ime-ng 闭源组件包上传；</span></span></li><li><span><span style="color:#000000">openKylin 中科睿芯 rv64g 非压缩指令集架构仓库创建，chroot 制作调试；</span></span></li><li><span><span style="color:#000000">openKylin 2.0 AI 软件包选型分析，编译部署方式调研；</span></span></li><li><span><span style="color:#000000">测试评审任务发布平台-生态软件适配任务提交的构建成果；</span></span></li><li><span><span style="color:#000000">2.0 基础库软件 systemd 依赖包选型构建：[nile] json-c(0.15-ok1), cryptsetup(2:2.4.3-ok1); 构建 2.0 基础库软件 network-manager 的依赖包 netplan.io，并解决编译问题；</span></span></li><li><span><span style="color:#000000">nvidia-driver-510 安装问题分析解决；</span></span></li><li><span><span style="color:#000000">openkylin-2.0-pre-alpha1 预编译版本报错，缺少"dhcpcd-base、dracut-install"，新构建软件包 dhcpcd，dracut。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区软件自主选型、编译打包工作感兴趣的社区爱好者加入我们！</span></span></p><h1>五、QA SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">QA SIG 组致力于提升 openKylin 社区版本质量，包括社区版本测试、质量保障等。10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">审核 1.0.1 发布版本用户反馈 issue 50+条；</span></span></li><li><span><span style="color:#000000">openKylin 2.0 版本测试：</span></span></li><li><span><span style="color:#000000">1）UKUI4.10 需求测试用例编写：共 120 个需求需要进行用例编写，已完成 14 个，整体进度：18.3%；</span></span></li><li><span><span style="color:#000000">2）输出 2.0 版本测试计划；</span></span></li><li><span><span style="color:#000000">3）openKylin-1.0.1-1023 周版本测试，截止目前回归 bug25 个，通过 18 个，失败 3 个，阻塞 4 个，整体进度 40%。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区版本测试、质量管理感兴趣的社区爱好者加入我们！</span></span></p><h1>六、SecurityGovernance SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin SecurityGovernance SIG 通过接收和响应 openKylin 社区的产品安全问题报告、提供社区安全指导，开展安全治理等活动提升社区产品的安全性。10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">Genmai 项目：完成 C/S 架构开发，实现根据服务器版本自动更新功能，解决传输数据耗费时长过程而导致失败的问题；</span></span></li><li><span><span style="color:#000000">Genmai 项目：完善 PDF 报告格式优化功能；</span></span></li><li><span><span style="color:#000000">Genmai 项目：编制项目技术白皮书，发布 TS 版的技术白皮书；</span></span></li><li><span><span style="color:#000000">Genmai 项目：新增安全基线检测项 100+；</span></span></li><li><span><span style="color:#000000">Genmai 项目：优化 106 个 POC 检测的输出内容；</span></span></li><li><span><span style="color:#000000">Genmai 项目：新增集成 POC 测试用例 14 个；</span></span></li><li><span><span style="color:#000000">Genmai 项目：研发了 CVE-2023-4911、CVE-2023-38545、CVE-2022-2602 POC 三个；</span></span></li><li><span><span style="color:#000000">Genmai 项目：验证使用了 docker 容器运行内核 POC 的破坏性，调研内核漏洞检测的可行性；</span></span></li><li><span><span style="color:#000000">解决 C/S 架构数据返回接口异步故障的问题。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 版本安全全漏洞挖掘/验证、安全漏洞修复等安全方面工作感兴趣的社区爱好者加入我们！</span></span></p><h1>七、OpenSDK SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">OpenSDK SIG 组负责开发者套件（base、system、applications）规划、开发、维护等工作，致力于解决应用在多操作系统中的兼容性问题。10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">扩展了处理器、内存、网络等详细信息获取接口；</span></span></li><li><span><span style="color:#000000">新增账户管理模块，包含创建用户、修改密码、用户名校验等功能；</span></span></li><li><span><span style="color:#000000">新增 sdk release note；</span></span></li><li><span><span style="color:#000000">规范了 SDK 的动态库存放路径。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对开发者套件感兴趣的社区爱好者们加入 OpenSDK SIG 组！</span></span></p><h1>八、CompatWinApp SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">CompatWinApp SIG 组致力于将大量的 Windows 系统应用程序引入到 openKylin 系统。SIG 组将通过研究应用兼容技术和指令翻译技术，研制完善的 Windows 应用兼容方案，让更多的 Windows 应用能兼容运行于 openKylin 系统，不断繁荣 openKylin 软件生态。10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">修复 Wine 助手下载程序页面无法点击其他链接的问题，改为弹出提示框，提示用户点击其他链接可能出错；</span></span></li><li><span><span style="color:#000000">修复当应用下载链接更新时无法下载的问题，改提示用户下载新版本软件还是旧版本软件；</span></span></li><li><span><span style="color:#000000">修复 wine riched20 中导致微信输入框光标异常，滚轮失效的问题；</span></span></li><li><span><span style="color:#000000">为 win-program 仓库开发分支上 1000 多个应用配置文件增加下载详情页参数；</span></span></li><li><span><span style="color:#000000">Wine 助手在 openKylin 社区开源事项通过内部审核，代码已上传 wine-assistant 仓库，累计有效代码约 8000 行；</span></span></li><li><span><span style="color:#000000">开发 Wine 助手帮助文档功能；</span></span></li><li><span><span style="color:#000000">openKylin Wine 助手发布公测。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对应用兼容技术和指令翻译技术感兴趣的爱好者加入到 CompatWinApp SIG！</span></span></p><h1>九、Infrastructure SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Infrastructure SIG 负责 openKylin 社区的基础平台系统功能的开发、维护。10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">openKylin 看板功能增强，增加仓库大小、代码总行数统计；</span></span></li><li><span><span style="color:#000000">openKylin 看板相关问题修复，贡献者数据、PR 数据统计等；</span></span></li><li><span><span style="color:#000000">openKylin 看板修复当仓库默认分支为 null 时新增仓库数据到数据库报错问题；</span></span></li><li><span><span style="color:#000000">门禁检查增加合规性检查。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区基础设施平台开发维护感兴趣的爱好者加入到 Infrastructure SIG！</span></span></p><h1>十、Security SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Security SIG 负责研制操作系统安全防护技术和功能，提供并维护操作系统安全防御机制。针对目前 openKylin 开源版本中的安全功能、安全组件等软件包进行维护和 cve 修复；并结合目前 Linux 平台上的一些安全技术进行研究、开源安全软件进行维护和研制、Linux 系统中的安全加固方案进行工具化设计和研制。10 月份 SIG 组进展如下：</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">openKylin 2.0 需求研制：</span></span></p><ul><li><span><span style="color:#000000">【身份认证】国密支持、账户安全：</span></span></li><li><span><span style="color:#000000">1）openKylin 社区身份认证添加国密支持，本地编包功能验证通过，待提交 gitee；</span></span></li><li><span><span style="color:#000000">2）libxcrypt 添加 sm3 支持，已提交代码，已合入；</span></span></li><li><span><span style="color:#000000">3）pam 添加 sm3 支持，pam 修改正在调试中；</span></span></li><li><span><span style="color:#000000">【强访】添加 RISC-V 系统调用审计支持：调试 audit 包 riscv64 架构编译问题。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对安全技术感兴趣的社区爱好者加入 Security SIG 组！</span></span></p><h1>十一、GPU SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">openKylin GPU SIG 组致力于 GPU 驱动相关技术研究，包括 OpenGL、OpenCL、Vulkan、VDPAU 和 VAAPI 等，提供 GPU 相关软件包的技术规划、设计、开发、维护和升级服务，共同推动国产 GPU 技术发展。GPU SIG 组 10 月份进展如下：</span></span></p><ul><li><span><span style="color:#000000">完成景美 JM9100 显卡驱动适配 openKylin 系统，完成 patch 提交、评审、合并等工作。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 CPU 驱动、国产 GPU 技术、显示等相关领域感兴趣的社区小伙伴加入 GPU SIG 组！</span></span></p><h1>十二、TrustedComputing SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">可信计算兴趣组（Trusted Computing SIG）主要目标是致力可信计算基础软件开源与优化，并提供可信计算相关的应用规范与接口，探索国内外可信计算技术的应用实践。10 月份 SIG 组进展如下：</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">openKylin 2.0 需求研制：</span></span></p><ul><li><span><span style="color:#000000">可信软件栈：本地进行 tpm2-tss、tpm2-abrmd 的验证打包。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">欢迎所有对可信计算技术感兴趣的社区爱好者和开发者加入 TrustedComputing SIG 组！</span></span></p><h1>十三、I18n SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">I18N SIG 组负责 openKylin 社区国际化和本地化相关工作，包括多语言开发框架、多语言平台开发和维护，以及社区、版本内文档的翻译管理相关工作。10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">翻译官网新闻 7 篇。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对操作系统、网站网页、文档等翻译工作感兴趣的社区爱好者们加入 I18n SIG 组！</span></span></p><h1>十四、InputMethod SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">本 SIG 组致力于组建输入法开源社区，推进开源输入法框架及开源输入法在社区维护。10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">评审 OK 输入法设计文档，包括引擎设计文档和 UI 设计文档；</span></span></li><li><span><span style="color:#000000">讨论输入法通用插件 SDK，以减少输入法厂商适配难度；</span></span></li><li><span><span style="color:#000000">解决优麒麟系统默认集成搜狗输入法问题，提升使用优麒麟系统的用户输入体验；</span></span></li><li><span><span style="color:#000000">向 fcitx 社区贡献关于虚拟键盘 Callback 的 pr，支持第三方开发虚拟键盘；</span></span></li><li><span><span style="color:#000000">向 fcitx 社区贡献关于 UKUI 环境判断的 pr，支持 fcitx 诊断工具识别 UKUI 桌面环境。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区 fcitx 输入法框架、桌面虚拟键盘开发工作感兴趣的社区爱好者加入我们！</span></span></p><h1>十五、Kernel SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Kernel SIG 组致力于新硬件适配、新功能、新特性开发。不断提升内核健壮性、稳定性，能更好的为 openKylin 系统和应用程序提供底层技术支持。10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">6.1 内核从 6.1.55 更新到 6.1.59。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对内核感兴趣的社区小伙伴加入 openKylin 社区 Kernel SIG 组！</span></span></p><h1>十六、Virtualization SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">Virtualization SIG 组致力于构建 openKylin 社区系统虚拟化技术，打造面向端、边、云的全场景虚拟化解决方案。10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">qemu:修复丢失的 cq eventidx 更新。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对虚拟化组件或软件包技术感兴趣的社区小伙伴加入 openKylin 社区 Virtualization SIG 组！</span></span></p><h1>十七、Framework SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">本 SIG 组致力于为 openKylin 社区提供集程序编辑、编译、调试、发布、分析等全套开发功能的编程环境，涵盖通用集成开发环境、编译工具链、运行时环境、类库等，10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">maven 插件，gradle 插件， clangd 插件，死锁检测插件，cmake 插件，java 插件等完善中英文 readme；</span></span></li><li><span><span style="color:#000000">离线插件管理器增加刷新插件列表，以及主动关闭插件预览信息的按钮；</span></span></li><li><span><span style="color:#000000">clangd 插件修复 shift-f1 跳转到文档功能提示安装插件的问题；</span></span></li><li><span><span style="color:#000000">java 依赖管理添加远程开发模式下，导出 jar 包成功，屏蔽打开 Jar 包按钮；</span></span></li><li><span><span style="color:#000000">ide-gitlens 插件修复同时安装上游 gitlens 插件和本插件的情况下报错问题；</span></span></li><li><span><span style="color:#000000">项目管理插件：添加 deb 源码打包功能；修复 war 打包，针对带有括号的特殊工程打包失败的错误；修复创建项目、deb、rpm 打包字段检查逻辑和输出问题；优化界面输入框行高与对齐问题；修复创建项目默认路径问题；完善 depends.json。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎对集成开发环境研发感兴趣的社区开发者和爱好者加入 Framework SIG！</span></span></p><h1>十八、RTHypervisor SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">RTHypervisor SIG 小组致力于实时虚拟化技术的研究，目前主要包括 Jailhouse，提供工控、车载等领域实时控制的虚拟化解决方案，Jailhouse 项目 10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">新增 arm64 平台上基于 INTx 中断的 pci 设备隔离，实现了 pci 设备在 jailhouse 下的透传功能。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎所有对 openKylin 社区实时虚拟化技术感兴趣的社区爱好者加入我们！</span></span></p><h1>十九、SystemService SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">系统服务小组致力于服务管理的技术研究，提供系统基础组件的集合和服务管理，提供稳定的系统底层环境。10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">openKylin-2.0 systemd 编包工作，完成 upstream、pristine-tar、openkylin/nile 以及 packaging/openkylin/nile 分支代码整理工作；</span></span></li><li><span><span style="color:#000000">修复编译错误，完成 amd64、arm64、riscv64 架构的编译。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><span style="color:#000000">欢迎社区对基础能力搭建感兴趣的开发者或爱好者加入我们！</span></span></p><h1>二十、FAQ SIG</h1><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">FAQ SIG 小组致力于收集各渠道社区开发者、爱好者等用户反馈的问题，并建立相关标准化流程推动问题解答或解决同时，在这一过程中不断为 openKylin 社区积累 FAQ 知识库。10 月主要进展如下：</span></span></p><ul><li><span><span style="color:#000000">收集论坛、社群高频问题并提交 issue 指派给开发；</span></span></li><li><span><span style="color:#000000">调查部分用户硬件驱动适配情况，提交 issue 指派解决网卡驱动适配问题；</span></span></li><li><span><span style="color:#000000">收集用户针对桌面环境的建议并反馈给 UKUI SIG。</span></span></li></ul><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><span style="color:#000000">欢迎社区热心、善于解答问题的小伙伴加入 FAQ SIG 组！</span></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">关于 openKylin 社区 SIG</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span>openKylin（开放麒麟）社区是一个自由开放的社区，社区中所有的 SIG 小组都是开放的，任何人和组织都可以参与。你可以选择加入已有 SIG，也可以选择创建新的 SIG。截至目前，openKylin 社区已有<strong>90</strong>个 SIG 在运行，包括 Architecture、Infrastructure、Release、Kernel、Security、Compatibility 等。</span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:center"><span><strong><span style="color:#ffffff"><span style="background-color:#4f9eff">关于 openKylin 社区</span></span></strong></span></p><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span>openKylin（开放麒麟）社区旨在以「共创」为核心，在开源、自愿、平等、协作的基础上，通过开源、开放的方式与企业构建合作伙伴生态体系，共同打造桌面操作系统顶级社区，推动 Linux 开源技术及其软硬件生态繁荣发展。</span></p><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span><span style="color:#000000">社区理事成员单位包括麒麟软件、普华基础软件、中科方德、麒麟信安、凝思软件、一铭软件、中兴新支点、元心科技、中国电科 32 所、技德系统、北京麟卓、先进操作系统创新中心、飞腾、兆芯、龙芯中科、景美、京东科技、平头哥、申泰信息、海光等 21 家产业同仁和行业机构。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 03 Nov 2023 06:35:18 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264771</guid>
            <link>https://www.oschina.net/news/264771</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[等了 7 年，vscode 史上呼声最高的「浮动窗口」 特性，终于实现了]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>7 年，你知道我这 7 年怎么过来的吗？</p></blockquote><p><img alt="张家辉表情包 gif，抖音张家辉表情包合集_手机搜狐网" src="https://static.oschina.net/uploads/img/202311/03121335_cc2C.gif" referrerpolicy="no-referrer"></p><p>等了 7 年，开发者呼声极高的 vscode 「浮动窗口」 特性，终于实现了。</p><p><img height="1400" src="https://static.oschina.net/uploads/space/2023/1103/120112_40ZK_3820517.png" width="2174" referrerpolicy="no-referrer"></p><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fmicrosoft%2Fvscode%2Fissues%2F10121" target="_blank">https://github.com/microsoft/vscode/issues/10121</a></p><p>该提案是 2016 年就有人提出，数千人赞同，期间帖子也增长到 300 多条，可见这一特性的呼声之高。</p><p><img height="1536" src="https://static.oschina.net/uploads/space/2023/1103/121308_KoQP_3820517.png" width="2660" referrerpolicy="no-referrer"></p><p>就在近期发布的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_floating-editor-windows" target="_blank">vscode October 2023 (version 1.84) </a>更新中，终于实现了对浮动窗口的支持（预览特性）：</p><div class="ckeditor-html5-video" style="text-align:center"><video controls="controls" controlslist="nodownload" src="https://code.visualstudio.com/assets/updates/1_84/floating-windows.mp4">
  &nbsp;
 </video></div><p>vscode 团队也开心地在 issue 最后「结帖」。</p><p><img height="1540" src="https://static.oschina.net/uploads/space/2023/1103/120113_i7Zd_3820517.png" width="1872" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Fri, 03 Nov 2023 04:04:47 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264749/vscode-floating-editor-windows</guid>
            <link>https://www.oschina.net/news/264749/vscode-floating-editor-windows</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Arm 投资树莓派]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Arm <u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnewsroom.arm.com%2Fnews%2Fraspberry-pi-investment" target="_blank">宣布</a></u>已对树莓派 (Raspberry Pi) 进行战略投资，并收购了后者的少部分股权，进一步扩大两家公司之间的长期合作伙伴关系，携手为物联网开发者社区提供关键解决方案。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1103/103538_1Bm3_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>Arm 表示，这项投资进一步巩固了自 2008 年开始的合作伙伴关系，并见证了许多基于 Arm 的热门树莓派产品的发布，而树莓派最新一代旗舰产品 <a href="https://www.oschina.net/news/259858/introducing-raspberry-pi-5">Raspberry Pi 5 已于 10 月底上市</a>。</p><p>Arm 物联网业务线高级副总裁兼总经理 Paul Williamson 表示：「随着边缘和端点人工智能应用的快速增长，基于 Arm 的平台（如树莓派）对于推动全球高性能物联网设备的采用至关重要，因为它们使开发人员能够更快、更轻松地进行创新。这项战略投资进一步证明了我们对开发者社区的持续承诺，以及我们与树莓派的合作关系。」</p><p>树莓派首席执行官 Eben Upton 表示：Arm 技术一直是我们创建的平台的核心，而这项投资是我们长期合作关系的重要里程碑。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 02 Nov 2023 02:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264730/arm-raspberry-pi-investment</guid>
            <link>https://www.oschina.net/news/264730/arm-raspberry-pi-investment</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[深言科技联合清华大学 NLP 实验室开源 LingoWhale-8B 模型]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">深言科技与清华大学 NLP 实验室共同研发的语鲸 LingoWhale-8B 模型已面向社会开源。</span></p><p style="margin-left:0; margin-right:0"><span style="color:#000000">深言科技（DeepLang AI）由清华大学计算机系自然语言处理实验室（THUNLP）与北京智源人工智能研究院（BAAI）共同孵化，是国内最早开展大模型研发与探索大模型落地的创业公司之一。公司创始团队曾深度参与智源·悟道大模型的研发，目前已发布产品包括世界首个中文及跨语言反向词典 WantWords、名句语义检索系统 WantQuotes、智能写作工具深言达意等。</span></p><p><span style="color:#000000">根据<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FDJ8saXn9wOhuK2v_x-lVSQ" target="_blank">介绍</a>，LingoWhale-8B 模型是拥有约 80 亿参数的中英双语大语言模型，在 C-Eval、MMLU、CMMLU 等多个权威的公开评测基准上，在 10B 以下开源模型中达到领先效果。</span></p><p>LingoWhale-8B 是深言科技与清华大学 NLP 实验室共同推出的语鲸系列大模型中首个开源的中英双语大语言模型。</p><p>LingoWhale-8B 模型在数万亿 token 的高质量中英数据上进行预训练，具有强大的基础能力，在多个公开评测基准上均达到领先效果。在预训练阶段，模型使用 8K 的上下文长度进行训练，能够完成更长上下文的理解和生成任务。LingoWhale-8B 模型对学术研究<strong>完全开放</strong>，开发者通过邮件申请并获得官方商用许可后，即可<strong>免费商用</strong>。</p><p>在开源模型权重的同时，项目团队也提供了符合用户习惯的 Huggingface 推理接口以及 LoRA 等参数高效微调示例，便于开发者快速使用 LingoWhale-8B 模型。</p><p>受模型参数量影响，大模型固有的幻觉问题、数学计算能力相对较弱、生成内容有无法预见性等问题在 LingoWhale-8B 模型中仍然存在。因此建议在使用前了解这些问题，评估可能存在的风险。后续版本的语鲸大模型将会针对此类问题进行持续优化。</p><h4><strong>测评分析</strong></h4><p><span style="background-color:#ffffff"><span style="color:#3f3f3f">截至 10 月 24 日，在中文领域权威评测 C-Eval 中，</span></span><strong>LingoWhale-8B 模型的性能仅次于 GPT-4</strong><span style="background-color:#ffffff"><span style="color:#3f3f3f">。在 C-Eval、CMMLU、GAOKAO 测评中，性能超过 GPT-3.5Turbo，在 10B 以下尺寸模型中性能处于领先位置。</span></span></p><p><span style="background-color:#ffffff"><span style="color:#3f3f3f"><img alt="" height="122" src="https://oscimg.oschina.net/oscnet/up-61dd8a402d70f3fb6aec85b2fed702eeeb7.png" width="500" referrerpolicy="no-referrer"></span></span></p><p><strong><span style="color:#3f3f3f">一些示例：</span></strong></p><p><img alt="" height="500" src="https://oscimg.oschina.net/oscnet/up-333f791c81206afba4f06c2312f9341df88.png" width="269" referrerpolicy="no-referrer">&nbsp;<img alt="" height="501" src="https://oscimg.oschina.net/oscnet/up-9749d978fa111b77c07bdf07348dec30ef5.png" width="299" referrerpolicy="no-referrer"></p><p><img alt="" height="289" src="https://oscimg.oschina.net/oscnet/up-1ad6a289253e964f8715f8610900e858395.png" width="269" referrerpolicy="no-referrer">&nbsp;<img alt="" height="354" src="https://oscimg.oschina.net/oscnet/up-082b16c3e8e0198200f7aa32d91bcfda558.png" width="299" referrerpolicy="no-referrer"></p><p><img alt="" height="1087" src="https://oscimg.oschina.net/oscnet/up-c1b525b15cc376c23f24cd7500bd6fd3fa8.png" width="270" referrerpolicy="no-referrer">&nbsp;<img alt="" height="1087" src="https://oscimg.oschina.net/oscnet/up-5c686d13e35bbfc670e1c3fbad8b9824689.png" width="188" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 06:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264763</guid>
            <link>https://www.oschina.net/news/264763</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[国外 HR：如果看到简历有参与开源贡献的内容，直接扔掉]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>自称曾负责 FAANG（美国科技巨头）招聘工作的「猎头」在推特<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftwitter.com%2Fallgarbled%2Fstatus%2F1719266732869886325" target="_blank">发表了如内容</a></u>：</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1103/120614_vhOu_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>他表示自己在招人的时候，<strong>如果看到开发者的简历出现参与开源贡献的内容</strong>，会直接把简历扔掉。他认为，开发者有这么多的空闲时间来不求回报地写代码，对工作的投入程度能有多高？</p><p>他继续补充道：「对于初级开发者来说，他们参与开源可以理解。但对于高级开发者来说，这表明他们缺乏成熟度。」</p><p>最后他附上了自己拒绝别人求内推的截图：</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fb3a53178796db604e1b3319b0bf7346147.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 04:19:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264751</guid>
            <link>https://www.oschina.net/news/264751</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[工信部印发《人形机器人创新发展指导意见》]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">工信部印发《<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fzwgk%2Fzcwj%2Fwjfb%2Ftz%2Fart%2F2023%2Fart_48fe01d562644aedb7ea3f4256df8190.html" target="_blank">人形机器人创新发展指导意见</a>》（以下简称《意见》），称人形机器人集成人工智能、高端制造、新材料等先进技术，有望成为继计算机、智能手机、新能源汽车后的颠覆性产品，深刻变革人类生产生活方式，重塑全球产业发展格局。</span></p><p><span style="color:#000000"><img alt="" height="235" src="https://oscimg.oschina.net/oscnet/up-e0dd1b4474430fc2cabd5233ea56d86217a.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">《意见》制定了「<strong>发展目标</strong>」，提出到 2025 年，人形机器人创新体系初步建立，「大脑、小脑、肢体」等一批关键技术取得突破，确保核心部组件安全有效供给。整机产品达到国际先进水平，并实现批量生产，在特种、制造、民生服务等场景得到示范应用，探索形成有效的治理机制和手段。培育 2-3 家有全球影响力的生态型企业和一批专精特新中小企业，打造 2-3 个产业发展集聚区，孕育开拓一批新业务、新模式、新业态。</span></p><p><span style="color:#000000">到 2027 年，人形机器人技术创新能力显著提升，形成安全可靠的产业链供应链体系，构建具有国际竞争力的产业生态，综合实力达到世界先进水平。产业加速实现规模化发展，应用场景更加丰富，相关产品深度融入实体经济，成为重要的经济增长新引擎。</span></p><p><span style="color:#000000">在人形机器人「<strong>关键技术</strong>」方面，实现「大脑、小脑、肢体」等一批关键技术的突破，构建完善人形机器人制造业技术创新体系。</span></p><p><span style="color:#000000"><img alt="" height="324" src="https://oscimg.oschina.net/oscnet/up-33f7aa057684c9a6e96f4feafd4136da564.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">《意见》还提出要培育重点产品，包括打造整机产品、夯实基础部组件以及推动软件创新。</span></p><p><span style="color:#000000"><img alt="" height="76" src="https://oscimg.oschina.net/oscnet/up-6c4003a2566dddbba0b4f95f929adc9dea1.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000"><img alt="" height="388" src="https://oscimg.oschina.net/oscnet/up-3b2fde75892e62a9b44b6a627ae12e14c24.png" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">在人形机器人的<strong>场景应用</strong>方面，特种环境和制造业是有望最先应用的领域。除此之外，《意见》还提出要加快民生及重点行业推广，拓展人形机器人在医疗、家政等民生领域服务应用，重点提升人机交互可靠性和安全性，开发具有复杂区域引导、灵活操作、鲁棒行走、多模态人机交互的解决方案，满足生命健康、陪伴护理等高品质生活需求。推动人形机器人在农业、物流等重点行业应用落地，提升人机交互、灵巧抓取、分拣搬运、智能配送等作业能力。</span></p><p><span style="color:#000000">《意见》的最后部分，提出了营造产业生态、健全产业标准体系、加强安全治理能力等举措。其中在「营造产业生态」部分，提到了要「<strong>完善创新载体和开源环境</strong>」。</span></p><p><span style="color:#000000">包括支持建设人形机器人重点实验室、制造业创新中心，凝聚产学研各界优势力量，提升关键共性技术供给能力。成立人形机器人百人会等行业组织，促进技术交流、供需对接、国际合作，深化创新链产业链资金链人才链融合。以及建设人形机器人开源社区，推进开源基金会能力建设，加强对重点企业开源项目的支持力度，汇聚全球开发者协同创新。</span></p><p><span style="color:#000000">完整内容可<strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.miit.gov.cn%2Fzwgk%2Fzcwj%2Fwjfb%2Ftz%2Fart%2F2023%2Fart_48fe01d562644aedb7ea3f4256df8190.html" target="_blank">查看官方公告</a></strong>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 04:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264748</guid>
            <link>https://www.oschina.net/news/264748</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[LAMMPS —— 分子动力学模拟工具包]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>LAMMPS （"Large-scale Atomic/Molecular Massively Parallel Simulator"，大尺度原子/分子并行模拟工具）是由桑迪亚国家实验室开发的一套分子动力学模拟的开源程序包。LAMMPS 当前使用 C++编写，早期版本使用 Fortran77 以及 Fortran90。</p><p>LAMMPS 使用 MPI 实现多机器并行计算，在新的版本中，支持基于 CUDA 和 OpenCL 的 GPU 计算。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-fa7cce2ba0e5a4796cb2d6eb8a1e3dccd07.png" referrerpolicy="no-referrer"></p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-323a95d8c05b97b23b41450fa6c6867b9f0.png" referrerpolicy="no-referrer"></p><p>&nbsp;</p><p>LAMMPS 提供了元素周期表中原子对应的经验势函数，可进行与实际体系对应的分子动力学模拟，例如计算金属铝的晶格常数，或水的密度，得到与实验吻合的结果。另一方面也提供了多种模型势函数，可用于进行粗粒化模拟，例如模拟基于粒子-弹簧模型的高分子链的性质。</p><p>LAMMPS 作为实用程序包，采取了很多成熟的优化算法。例如在短程相互作用的计算中运用韦尔莱表和元胞列表优化临近粒子的扫描。</p><p>用户可在下至个人电脑，上至计算机集群上运行 LAMMPS。在并行环境下，LAMMPS 使用空间分解技术，将整个模拟体系分解成若干个更小的体系传递给不同处理器执行，边界的处理则使用「幽灵原子」保证整体的连续。LAMMPS 对粒子密度均匀的立方体盒子体系的效率最高。</p><p>LAMMPS 具有广泛的硬件加速支持，例如 GPU (CUDA, OpenCL, HIP, SYCL), Intel Xeon Phi, 以及基于 OpenMP 多线程支持。</p><p>LAMMPS 最初为一美国政府与私人机构合作项目，由美国能源部与另外三所私有企业实验室合作开发。目前由桑迪亚国家实验室负责维护和发布。</p></div>
                                                                ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 03:20:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/lammps</guid>
            <link>https://www.oschina.net/p/lammps</link>
        </item>
        <item>
            <title>
                <![CDATA[Deno 1.38：新增 HTML 文档生成器、支持 HMR]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Deno 1.38 已正式<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38" target="_blank">发布</a></u>。</p><p>公告写道，此版本为<code>deno doc</code>命令引入了重大改进，其中包括使用<code>deno doc --html</code>生成静态站点文档的能力。另外改进了 Node.js 兼容性、支持 HMR（模块热更新）。</p><p><strong>主要变化</strong></p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-doc-updates" target="_blank">改进<code>deno doc</code></a>：新的&nbsp;<code>deno doc --html</code>&nbsp;命令可生成包含项目文档的静态站点。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23hot-module-replacement" target="_blank">模块热更新</a>：新的&nbsp;<code>--unstable-hmr</code>&nbsp;flag 将检测变更，重新加载服务器，同时保留状态。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23nodejs-compatibility-improvements" target="_blank">改进 Node.js 兼容性</a>：现在从 Node 迁移时，使用 Deno 会更加容易。因为可以使用所选择的 npm 包管理器。通过&nbsp;<code>npm</code>&nbsp;安装 npm 模块并使用 Deno 运行它。</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23fastest-jsx-transform" target="_blank">快速的 JSX 转换</a>：通过字符串连接而不是对象分配将 JSX 转换速度提高约 7-20 倍</li><li><code>deno run --env</code>&nbsp;：对&nbsp;<code>.env</code>&nbsp;文件的内置支持</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23websockets-improvements" target="_blank">改进 WebSockets</a>：支持 HTTP/2 上的 RFC8841 Websocket 以及修复错误</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-task-supports-head-command" target="_blank"><code>deno task</code>&nbsp;支持&nbsp;<code>head</code>&nbsp;命令</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23vscode-extension-and-language-server" target="_blank">针对 VSCode 扩展和语言服务器的稳定性改进</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=http%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23denotest-support-in-the-repl" target="_blank">REPL 中的&nbsp;<code>Deno.test</code>&nbsp;支持</a>：与 Jupyter 运行良好</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23jupyter-notebook-updates" target="_blank">Jupyter Notebook 更新</a>：支持富文本 HTML 输出</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23deno-api-changes" target="_blank"><code>Deno</code>&nbsp;API 变更</a>：&nbsp;<code>Deno.serve</code>&nbsp;现在支持 unix 套接字</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23web-api-changes" target="_blank">Web API 变更</a>：添加了&nbsp;<code>window.name</code>&nbsp;和&nbsp;<code>EventSource</code>&nbsp;</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23standard-library-updates" target="_blank">标准库更新</a>：弃用<code>std/http/server.ts</code></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23granular---unstable--flags" target="_blank">细粒度&nbsp;<code>--unstable-*</code>&nbsp;flags</a>：更好地对内部功能进行标记</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23performance-improvements" target="_blank">改进性能</a>：当不使用可转移项时，&nbsp;<code>structuredClone</code>&nbsp;现在速度要快得多</li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38%23v8-120" target="_blank">V8 升级到 12.0</a>：引入&nbsp;<code>Array.fromAsync</code>&nbsp;和&nbsp;<code>Promise.withResolvers</code>&nbsp;</li></ul><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeno.com%2Fblog%2Fv1.38" target="_blank">详情</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 03:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264739/deno-1-38</guid>
            <link>https://www.oschina.net/news/264739/deno-1-38</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Gitee 推荐 | 开源的知识图谱抽取与构建工具 DeepKE]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p style="color:#40485b; margin-left:0; margin-right:0; text-align:left"><a href="https://gitee.com/link?target=https%3A%2F%2Farxiv.org%2Fpdf%2F2201.03335.pdf">DeepKE</a><span>&nbsp;</span>是一个开源的知识图谱抽取与构建工具，支持<strong>cnSchema、低资源、长篇章、多模态</strong>的知识抽取工具，可以基于<strong>PyTorch</strong>实现<strong>命名实体识别</strong>、<strong>关系抽取</strong>和<strong>属性抽取</strong>功能。同时为初学者提供了<a href="https://gitee.com/ZJU_NLP/DeepKE">用户手册</a>,<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fzjunlp.github.io%2FDeepKE%2F">文档</a>，<a href="https://gitee.com/link?target=https%3A%2F%2Fcolab.research.google.com%2Fdrive%2F1vS8YJhJltzw3hpJczPt24O0Azcs3ZpRi%3Fusp%3Dsharing">Google Colab 教程</a>,<span>&nbsp;</span><a href="https://gitee.com/link?target=http%3A%2F%2Fdeepke.zjukg.cn%2FCN%2Findex.html">在线演示</a>,<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Farxiv.org%2Fpdf%2F2201.03335.pdf">论文</a>和<a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fzjunlp%2FDeepKE%2Fblob%2Fmain%2Fdocs%2Fslides%2FSlides-DeepKE-cn.pdf">演示文稿</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 03:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264738</guid>
            <link>https://www.oschina.net/news/264738</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | 同城售后系统退款业务重构心得]]>
            </title>
            <description>
                <![CDATA[<div class="content"><span id="OSC_h1_1"></span><h1><span><span><span>一、重构背景</span></span></span></h1><span id="OSC_h3_2"></span><h3><span><span><span>1.1、退款</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>到家、小时购、天选退款有</span></span></span><span><span><strong><span>2 套</span></strong></span></span><span><span><span>结构，代码逻辑混乱；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>其中小时购、天选部分售后单是和平生 pop 交互退款，部分是和售后中台交互退款；并且</span></span></span><span><span><strong><span>兼容 3 套</span></strong></span></span><span><span><span>逻辑；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>痛点</span></strong></span></span><span><span><span>：代码繁重，缺乏合理性的设计，后续迭代</span></span></span><span><span><strong><span>开发</span></strong></span></span><span><span><span>以及</span></span></span><span><span><strong><span>维护成本高</span></strong></span></span><span><span><span>，同时增加了系统的</span></span></span><span><span><strong><span>风险和不稳定性</span></strong></span></span></p><span id="OSC_h3_3"></span><h3><span><span><span>1.2、金额计算</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>到家、小时购两套独立的逻辑结构计算，在此基础上针对退差和非退差又实现了</span></span></span><span><span><strong><span>2 套</span></strong></span></span><span><span><span>逻辑；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>针对商品件维度、商品行维度、售后单维度计算金额混乱，</span></span></span><span><span><strong><span>缺乏领域边界</span></strong></span></span><span><span><span>和</span></span></span><span><span><strong><span>分层设计</span></strong></span></span><span><span><span>；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>痛点</span></strong></span></span><span><span><span>：售后单维度、商品行维度、拆分件维度金额</span></span></span><span><span><strong><span>计算混乱</span></strong></span></span><span><span><span>，代码</span></span></span><span><span><strong><span>缺乏层次结构</span></strong></span></span><span><span><span>；代码</span></span></span><span><span><strong><span>易读性</span></strong></span></span><span><span><span>、</span></span></span><span><span><strong><span>维护成本</span></strong></span></span><span><span><span>、后续</span></span></span><span><span><strong><span>扩展性</span></strong></span></span><span><span><span>存在问题</span></span></span></p><span id="OSC_h3_4"></span><h3><span><span><span>1.3、售后逆向账</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>售后单详情接口、申诉单详情接口，针对到家和小时购做了</span></span></span><span><span><strong><span>两套</span></strong></span></span><span><span><span>逻辑；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>其中售后单详情接口针对小时购黑名单、小时购白名单、天选、到家退差、到家非退差做了</span></span></span><span><span><strong><span>5 套</span></strong></span></span><span><span><span>逻辑处理；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>并且这两个接口都是实时从拆分获取金额进行售后逆向拆分计算，可以直接从数据库中进行取值赋值，不需要进行售后单维度的拆分计算；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>痛点</span></strong></span></span><span><span><span>：代码大量</span></span></span><span><span><strong><span>冗余</span></strong></span></span><span><span><span>、改动</span></span></span><span><span><strong><span>成本高</span></strong></span></span><span><span><strong><span>、</span></strong></span></span><span><span><span>增加了系统的</span></span></span><span><span><strong><span>风险</span></strong></span></span><span><span><span>和</span></span></span><span><span><strong><span>不稳定性</span></strong></span></span></p><span id="OSC_h1_5"></span><h1><span><span><span>二、重构思路和方案</span></span></span></h1><span id="OSC_h3_6"></span><h3><span><span><span>2.1、重构思路</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>什么是重构呢？</span></strong></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>名词</span></strong></span></span><span><span><span>：对软件内部结构的一种调整，目的是在不改变软件观察行为的的前提下提高其可理解性、降低其修改成本；</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>动词</span></strong></span></span><span><span><span>：使用一系列手法，在不改变软件可观察行为的前提下，调整其结构</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>重构的目的是使系统或代码更容易被理解、修改、迭代</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>重构秘诀：胆大心细</span></strong></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>胆大</span></strong></span></span><span><span><span>（意味着有勇气和决心去改变和改进现有的代码。重构可能涉及对复杂的代码结构进行修改，甚至可能需要重写部分代码。胆大的开发者愿意面对这些挑战，相信通过改变可以带来更好的结果）</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><strong><span>心细</span></strong></span></span><span><span><span>（指的是在进行重构时保持细致入微的思考和行动。这包括仔细分析代码的结构和逻辑，理解代码的功能和依赖关系，以及考虑每个重构步骤可能带来的潜在影响。心细的开发者会在重构过程中小心翼翼地处理每个细节，以确保代码的正确性和可维护性）</span></span></span></p><div><span>1.</span><span><span><span><span>把握好重构时机：当我发现售后退款、金额计算等业务模块代码存在质量问题、可读性差、可维护性差或存在坏味道时，并且在项目需求排期并不紧张的情况下，是进行重构的好时机；</span></span></span></span></div><div><span>2.</span><span><span><span><span>前期梳理很重要，先找到痛点 ；不宜长线作战，不宜和业务并行</span></span></span></span></div><div><span>3.</span><span><span><span><span>明确出目标和价值：售后退款、金额计算重构后能提高开发效率、降低维护、开发成本等</span></span></span></span></div><div><span>4.</span><span><span><span><span>确定重构的目标：首先要明确需要进行重构的代码块或功能，并明确重构的目标是什么。例如，可能需要提高代码的可读性、可维护性或性能。</span></span></span></span></div><div><span>5.</span><span><span><span><span>分析代码坏味道：使用代码静态分析工具或手动检查代码，识别出可能存在的</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qinglite.cn%2Fdoc%2F87036476d565d55f9" target="_blank" rel="nofollow"><span><span><span>代码坏味道</span></span></span></a><span><span><span>；例如退款业务中存在 1000 多行的类、600 多行的方法，过多的变量参数、诸多重复代码等</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qinglite.cn%2Fdoc%2F87036476d565d55f9" target="_blank" rel="nofollow"><span><span><span>代码坏味道</span></span></span></a><span><span><span>。</span></span></span></span></div><div><span>6.</span><span><span><span><span>选择适当的重构技术：根据售后</span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qinglite.cn%2Fdoc%2F87036476d565d55f9" target="_blank" rel="nofollow"><span><span><span>代码坏味道</span></span></span></a><span><span><span>的种类和重构的目标，选择适当的重构技术。我采用的重构手法是：</span></span></span><span><span><strong><span>小规模重构--&gt;大规模重构--&gt;顶层设计模式；</span></strong></span></span><span><span><span>采用</span></span></span><span><span><strong><span>先小后大，从大到全</span></strong></span></span><span><span><span>的思路进行重构设计</span></span></span><span><span><strong><span>。小规模重构</span></strong></span></span><span><span><span>：提取方法、消除超大类或函数方法、提取类、重命名、合并重复代码等方法；</span></span></span><span><span><strong><span>大规模重构：</span></strong></span></span><span><span><span>采用的是</span></span></span><span><span><span style="background-color:#ffffff; color:#121212">分层、模块化、解耦、抽象可复用性等手法；</span></span></span><span><span><strong><span>设计模式</span></strong></span></span><span><span><span>：退款业务采用策略模式+抽象工厂；金额计算业务采用策略模式+抽象工厂+责任链模式</span></span></span></span></div><div><span>7.</span><span><span><span><span>编写测试用例：在进行重构之前，编写适当的测试用例来验证重构后的代码的正确性。测试用例应该覆盖重构的代码块或功能的各种情况。</span></span></span></span></div><div><span>8.</span><span><span><span><span>执行重构：根据选择的重构技术，逐步修改代码。确保每次修改后的代码仍然通过之前编写的测试用例。</span></span></span></span></div><div><span>9.</span><span><span><span><span>运行测试用例：在每次重构之后，运行之前编写的测试用例，确保重构后的代码仍然正确。</span></span></span></span></div><div><span>10.</span><span><span><span><span>重构后的代码评估：评估重构后的代码是否达到了预期的目标，例如是否提高了代码的可读性、可维护性或性能。</span></span></span></span></div><span id="OSC_h3_7"></span><h3><span><span><span>2.2、重构方案</span></span></span></h3><span id="OSC_h4_8"></span><h4><span><span><span>2.2.1、重构前系统交互图</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-26-11-376gFGFKNu12gfcLVl.jpg" referrerpolicy="no-referrer"></div><span id="OSC_h4_9"></span><h4><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>2.2.2、重构后系统交互图</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-14-36ObaevqtLBg9cVzc.jpg" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span><span><span><span>退款业务强耦合到售后系统中，并且业务代码分散到各个业务层，严重缺乏系统的领域边界和分层设计，重构后退款业务逻辑不强依赖售后核心业务逻辑，做到可以独立部署。</span></span></span></p><span id="OSC_h4_10"></span><h4><span><span><span>2.2.3、重构前金额计算流程图</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-14-36iGWAfxWUQyTZ36p7.jpg" referrerpolicy="no-referrer"></div><span id="OSC_h4_11"></span><h4><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span><span><span><span>2.2.4、重构后金额计算流程图</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>﻿</span></span></span><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-14-36j10tVMXAKR9byPI10.jpg" referrerpolicy="no-referrer"></p><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span><span><span><span>将 2 套金额计算业务逻辑利用设计模式将其合并为 1 套金额计算业务逻辑，打造防腐层</span></span></span></p><span id="OSC_h3_12"></span><h3><span><span><span>2.3、重构设计类图</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>依据上述制定的设计方案流程图，我进行了 UML 类图的绘制，以下是关于金额计算业务模块的类图</span></span></span></p><span id="OSC_h4_13"></span><h4><span><span><span>2.3.1、抽象工厂+策略模式类图</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-26-20-06MV8CDpmNrSRORvC.jpg" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span></p><span id="OSC_h4_14"></span><h4><span><span><span>2.3.2、责任链模式类图</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-19-53VbsjALJmOdmrz24d.jpg" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span></p><span id="OSC_h1_15"></span><h1><span><span><span>三、系统稳定性保障</span></span></span></h1><span id="OSC_h3_16"></span><h3><span><span><span>3.1、小步重构</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>将售后重构分成退款、金额计算、逆向账三个步骤，并在每个步骤之后运行测试用例。这样可以及时发现并修复引入的错误，避免错误在整个系统中蔓延</span></span></span></p><span id="OSC_h3_17"></span><h3><span><span><span>3.2、逐步验证</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在每个重构步骤之后，进行系统的逐步验证。分批次进行上线灰度，灰度配置绝对隔离，不能复用。确保系统的各个部分在重构过程中都能正常运行，并与其他部分协调良好。</span></span></span></p><span id="OSC_h3_18"></span><h3><span><span><span>3.3、监控和性能测试</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在重构完成后，进行系统的监控和性能测试，确保重构没有引入性能问题或影响系统的稳定性。如果发现问题，及时进行修复和优化。</span></span></span></p><span id="OSC_h3_19"></span><h3><span><span><span>3.4、团队代码审查和测试</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>在进行重构时，与团队成员进行合作，并进行代码审查。多个人的视角和经验可以帮助发现潜在的问题，并提供改进的建议；针对重构代码进行深度解刨，能更有效地保障重构的安全性。</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>重构业务及时通知测试人员，使测试人员能够评估到测试点，更加完善测试用例</span></span></span></p><span id="OSC_h3_20"></span><h3><span><span><span>3.5、灰度步骤</span></span></span></h3><span id="OSC_h4_21"></span><h4><span><span><span>3.5.1、bcp 持续比对校验</span></span></span></h4><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-18-21kccs6qUAZpiH6EU.jpg" referrerpolicy="no-referrer"></div><span id="OSC_h4_22"></span><h4><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span>﻿</span></span></span><span><span><span>3.5.2、按照商家灰度</span></span></span></h4><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>依据售后单量 </span></span></span><span><span><span style="color:#c41d7f">小-&gt;中-&gt;大 </span></span></span><span><span><span>的顺序逐步进行灰度切量，观察其退款、金额计算等售后单数据是否异常</span></span></span></p><span id="OSC_h1_23"></span><h1><span><span><span>四、重构成果</span></span></span></h1><div><span>1.</span><span><span><span><span>降低开发、维护成本</span></span></span></span></div><div><span>2.</span><span><span><span><span>提升代码质量、系统稳定性</span></span></span></span></div><div><span>3.</span><span><span><span><span>系统扩展性和灵活性的加强；</span></span></span></span></div><div><span>4.</span><span><span><span><span>系统应用、业务边界定位更加清晰</span></span></span></span></div><div><span>5.</span><span><span><span><span>统一和规范售后核心业务脉络，降低业务学习成本，提升开发效率</span></span></span></span></div><div><span>6.</span><span><span><span><span>提升自己的技术能力、代码质量意识、问题解决能力、团队合作和沟通能力；经典著作《重构》这本书中有这么一段话：</span></span></span></span></div><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span style="color:#e13c39">一开始，我所做的重构都停留在细枝末节上。随着代码趋向简洁，我发现自己可以看到一些设计层面的东西了，这些是我以前理解不到的，如果没有重构，我达不到这种高度</span></span></span></p><span id="OSC_h1_24"></span><h1><span><span><span>五、code show</span></span></span></h1><span id="OSC_h3_25"></span><h3><span><span><span>5.1、重构前金额计算</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>到家售后单金额计算 service 方法</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-17-21suiEaSppoaot524r.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span> 京东售后单金额计算 service 方法 </span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>一个大的金额计算 class 类就有 1000 多行代码，每个方法中都有几百行代码，以下是到家售后单金额计算部分代码</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-17-24SIMdGahcCnlwMft.png" referrerpolicy="no-referrer"></div><span id="OSC_h3_26"></span><h3><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span><span><span><span>5.2、重构后金额计算</span></span></span></h3><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>到家和京东售后单金额计算用同一个接口才承接业务实现，并且使用策略+抽象工厂模式实现到家、小时购、天选业务的金额计算</span></span></span></p><div><img alt="" height="485" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-16-06zo6Ussx10DiTM9aZ.png" width="949" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span></p><p><span><span><span>策略模式获取金额拆分结果集</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-16-197BtKUjnliCO0tWL.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span></p><p><span><span><span>金额计算核心方法只有 4 步骤</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-16-07Hh7lMDbD24dz710Z8.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span></p><p><span><span><span>其中金额计算的核心则采用的是责任链业务进行计算</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-16-18tYPt18htIb24Wqq18K.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span><span><span><span></span></span></span></p><p><span><span><span>在件维度、sku 维度针对不同的业务又采用了责任链模式进行金额计算</span></span></span></p><div><img alt="" src="https://s3.cn-north-1.jdcloud-oss.com/shendengbucket1/2023-10-24-16-20yiO6J10jVGmJJdK.png" referrerpolicy="no-referrer"></div><p><span style="color:transparent"><span><span><span>﻿</span></span></span></span></p><span id="OSC_h1_27"></span><h1><span><span><span>六、参考文献</span></span></span></h1><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>代码的坏味道： </span></span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.qinglite.cn%2Fdoc%2F87036476d565d55f9" target="_blank" rel="nofollow"><span><span><span>https://www.qinglite.cn/doc/87036476d565d55f9</span></span></span></a><span><span><span>﻿</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span style="background-color:#ffffff; color:#202124">《重构改善既有代码的设计》：[美]MartinFowler</span></span></span></p><p style="color:#393c5a; margin-left:0; margin-right:0; text-align:start"><span><span><span>《敏捷软件开发》：[美]RobertC.Martin</span></span></span></p><blockquote><p>作者：京东零售，高凯</p><p>来源：京东云开发者社区，转载请注明来源</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 03:11:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4090830/blog/10140342</guid>
            <link>https://my.oschina.net/u/4090830/blog/10140342</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[中国信通院杜刘通等：全球 6G 技术产业发展态势]]>
            </title>
            <description>
                <![CDATA[<div class="content"><h4><strong>0&nbsp; 引言</strong></h4><p>当前，以移动通信技术为代表的信息通信技术蓬勃发展，已成为加速数字经济与实体经济融合的重要推动力，在推动全球经济社会发展、产业结构变革和技术迭代创新方面持续发挥关键作用。纵观全球，5G 已进入规模化商用阶段。据全球移动供应商协会统计，截至 2023 年 5 月，全球已有 99 个国家和地区的 254 家运营商推出了商用 5G 网络服务[1]。我国已建成规模较大、技术较先进的 5G 网络。与此同时，随着移动通信技术的持续演进，6G 逐渐成为全球科技创新的重点领域。本文将从国际标准研究进展、全球发展态势、国内相关研究工作三个角度梳理全球 6G 发展现状，提出推动 6G 发展建议，为开展 6G 研究提供有益参考。</p><h4><strong>1&nbsp; 6G 发展概述</strong></h4><p>按照移动通信技术「十年一代」的发展规律，6G 最早将于 2030 年进入商用阶段。2022 年 3 月，国际电信联盟（International Telecommunication Union，ITU）正式启动 6G 研究，明确了 6G 国际标准工作计划。2022 年 6 月，ITU 发布了面向 2030 及未来国际移动通信（International Mobile Telecommunications，IMT）技术趋势的报告[2]，其中指出，未来移动通信的关键使能技术将包括增强型无线空口技术（如超大规模天线、新型调制编码技术与多址接入技术等）、感知与通信融合、人工智能与通信融合、新维度无线通信（如智能超表面等）、高频段（如太赫兹等）通信以及新型无线网络架构等，6G 总体技术框架逐步形成。2023 年 6 月 12 日至 22 日，ITU 完成《IMT 面向 2030 及未来发展的框架和总体目标建议书》（简称《建议书》）[3]，明确了 6G 发展目标、典型场景、能力指标等内容，对后续 6G 技术和标准研究有重要指导作用[4]。</p><p>在发展目标方面，6G 将推动实现包容性、泛在连接、可持续性、创新、安全性/隐私性/韧性、标准化和互操作、互通性七大目标，成为更好连接物理世界和虚拟世界、承载新用户、赋能新应用的新型数字基础设施；在典型场景方面，6G 将在 5G 三大典型场景的基础上持续增强和扩展，包含沉浸式通信、超大规模连接、极高可靠低时延、人工智能与通信融合、感知与通信融合、泛在连接六大场景；在性能指标方面，《建议书》明确了 6G 的 15 个关键能力指标，除传统移动通信的峰值速率、体验速率、频谱效率、区域流量密度、连接密度、覆盖、移动性、时延、可靠性等指标外，6G 还将在安全性/隐私/韧性、定位、感知、智能、可持续发展、互操作等维度新增性能指标。</p><p>笔者根据移动通信国际标准制定的经验发现，ITU 作为国际移动通信标准的评估及认定机构，将在 2024—2026 年进一步细化和完善 6G 性能指标要求，制定相应评估方法；2027 年将针对制定的指标开展候选技术方案征集，预计在 2029 年完成 6G 基础版本标准，2030 年左右启动 6G 商用部署。作为目前影响力较大的移动通信国际标准制定组织，第三代合作伙伴计划（The 3rd Generation Partnership Project，3GPP）在 2022 年 6 月宣布正式冻结 5G 移动通信国际标准 Release 17，并正式启动了 Release 18 版 5G 国际标准研制工作，5G 标准制定进入 5G 增强（5G-Advanced，5G-A）发展阶段，感知与通信融合、人工智能与通信融合的部分功能将在此阶段逐步实现，为后续 6G 标准制定奠定有力基础。根据 3GPP 已公布的标准制定计划，最早将于 2025 年启动 6G 有关国际标准研制工作，并预计 2029 年左右完成 6G 国际标准基础版本。</p><h4><strong>2&nbsp; 全球主要国家和地区 6G 发展情况</strong></h4><p><strong>2.1&nbsp; 美国</strong></p><p>美国在产业组织和政府等层面积极推动 6G 研发合作。在产业组织层面，美国由电信行业解决方案联盟（Alliance for Telecommunications Industry Solutions，ATIS）牵头成立了 Next G 联盟，旨在加强 6G 技术、网络、应用等领域的合作。除传统通信设备商及运营商外，还积极吸纳微软、谷歌、英特尔等信息技术领域软/硬件企业，实现从 6G 研发、测试到商用的全流程合作。2022 年 8 月 11 日，ATIS 与欧洲 6G 智慧网络和业务产业协会（6G Smart Networks and Services Industry Association，6G-IA）签署了一份 6G 合作谅解备忘录。双方将在 6G 通信系统和网络领域强化交流合作，开展 6G 研讨会、试验等多项活动，并计划共同推动全球 6G 统一标准的相关合作。2021 年 12 月，Next G 联盟和韩国 5G 论坛宣布签署谅解备忘录，共同促进下一代移动通信方面的合作。在政府层面，2021 年 12 月，美国通过《未来网络法案》，要求美国联邦通信委员会（Federal Communications Commission，FCC）建立 6G 工作组，6G 工作组由政府、通信设备商、运营商等组成，负责向美国国会提交与 6G 国际标准、建设部署、产业链、供应链等相关的报告。2022 年 1 月，FCC 成立了技术咨询委员会（Technical Advisory Council，TAC），领导人工智能和 6G 等技术的研究，重点关注新型频谱共享和新型无线通信等技术。2023 年 4 月，美国政府召集学术界、工业界、社会组织、政府部门、参众两院等代表在白宫召开 6G 研讨会，并以美国国家安全委员会（National Security Council，NSC）名义发布关于 6G 设计原则的报告，在技术可信及国家安全、开放及互操作、安全及隐私保护、成本可控及可持续发展、频率及制造、标准及国际合作 6 个方面阐述了对 6G 设计原则的考虑，强调 6G 应建立在与美国及其盟友价值观相符的技术标准之上。2023 年 5 月，Next G 联盟发布「6G——创新和投资的下一个前沿」倡议书（简称「倡议书」），指出 6G 作为下一代移动通信技术将定义 2030 年以后的国际经济格局。倡议书认为，当前是强化政府、行业和学术界合作以保持美国未来领先优势的关键时刻，呼吁国会和政府充分资助已有的 6G 法案，并启动 6G 立法新进程，强化美国在无线技术创新领域的领导者地位。2023 年 6 月，美国和英国联合发布《二十一世纪美英经济伙伴关系大西洋宣言》，宣布将在 6G 等关键和新兴技术领域加强合作，包括共同制定愿景，深化在 5G 及 6G 解决方案领域的技术创新合作，推进联合研发项目。</p><p><strong>2.2&nbsp; 欧盟</strong></p><p>欧盟设立 6G 相关研发项目，加大资金投入，积极推进 6G 研发。2017 年，欧盟便启动了包括纠错码、信道编码、调制技术在内的 6G 基础技术研究项目。2018 年，芬兰国家技术研究中心联合奥卢大学、诺基亚公司等实施为期 8 年的 6G 旗舰项目，计划总投资 2.9 亿美元，研究内容为包含 6G 愿景、挑战、应用和技术方案在内的完整 6G 生态系统[5]。2020 年，欧盟推出了 2021—2027 年的科研资助框架「欧洲地平线」，开展包括下一代移动通信网络在内的六大关键技术研究，并于 2021 年 1 月正式启动 6G 旗舰项目 Hexa-X，该项目为期两年半，项目整体由诺基亚负责，爱立信为技术负责单位，此外西门子、英特尔、法国电信 Orange、芬兰阿尔托大学等在内的多家设备商、运营商及科研机构也参与其中。Hexa-X 项目包括智能连接、多网聚合、可持续性、全球服务覆盖、极致体验和安全性六大研究方向。2021 年 2 月，欧盟通过立法提案，由欧盟联合私营企业资助设立「智能网络和服务联合伙伴」（Smart Network and Services Joint Undertaking，SNS-JU）项目，用于构建服务全欧洲的 6G 试验性基础设施。目前，该计划已分别于 2022 年 10 月和 2023 年 1 月启动了两批次项目。此外，欧盟成立了 6G-IA 作为欧洲下一代移动通信网络与业务研究的重要平台，6G-IA 在 5G 基础设施公私合作伙伴关系（5G Infrastructure Public Private Partnership，5G-PPP）和 SNS-JU 中代表私营企业，欧盟则代表公共部门。6G-IA 汇聚了欧洲运营商、制造商、研究机构、垂直行业等多方参与者，组织开展面向超五代移动通信（Beyond 5G，B5G）及 6G 的技术研发、试验验证、标准研制、频谱规划等研究。</p><p><strong>2.3&nbsp; 日本</strong></p><p>日本政府通过推出相关政策和设立研究项目，立足产业优势推动 6G 发展。2020 年 6 月，日本总务省发布《Beyond 5G 推进战略》，明确 6G 发展目标及研究开发、知识产权和标准化推进战略。2020 年底，成立 B5G 推进联盟以实现 B5G 标准和知识产权战略及进一步增强日本在 B5G 领域的国际竞争力。2021 年 10 月，日本政府宣布拟放宽 6G 频段试验牌照，简化申请手续，缩短审批时间，并进一步放宽试验频段范围，提升日本本土制造商国际竞争力。2023 年 3 月，日本总务省宣布在情报通信研究机构（National Institute of Information and Communications Technology，NICT）设立信息通信研究开发基金，用于实施创新信息通信技术（Beyond 5G（6G））基金项目。该基金以成功开发下一代信息通信基础设施、实现 30% 国际市场份额为目标，重点支持以下三类项目：一是对于具有技术优势、有明确海外扩张战略及计划并且技术相对成熟（即在假设场景下已开发出初步原型样机用于性能测试）的研发项目，基金最多可支持此类项目一半的总研发成本，即每个项目每年可获数十亿日元（原则上不超过 100 亿日元）资金支持；二是对于处在研发早期阶段（即技术处在概念形成及应用探索阶段），需较长时间才能落地的项目，每年可支持 1 亿日元（原则上不超过 10 亿日元）；三是对于提升无线电频谱效率的研发项目，每年资助资金则取决于项目规模[6]。</p><p><strong>2.4&nbsp; 韩国</strong></p><p>韩国以实现全球最早 6G 商用为目标，强化政府引导和产业带动模式加速 6G 创新。韩国政府成立了由科学和信息通信技术部、运营商、设备企业、研究机构等组成的 6G 研发战略委员会，该委员会将负责制定韩国 6G 相关研究项目，定期组织召开研讨会以评估审查现有 6G 研发战略中各子项计划的进度，以及基于实际情况调整后续策略。2021 年 6 月，韩国科学和信息通信技术部宣布将于 2025 年前投入 2 200 亿韩元（约合人民币 12.6 亿元）用于加强韩国在未来的技术竞争力，研究领域包括研发 6G 关键技术、研制国际标准、夯实产业基础三大战略领域[7]。2022 年 11 月，韩国宣布设立面向 6G 服务应用的商业化研究项目，计划于 2026 年进行 6G 技术的早期商业化展示，并于 2027 年启动 6G 早期商用网络部署。2023 年 2 月，韩国发布「K-Network 2030」战略，将原计划 2026 年启动的 6G 商业化项目提前至 2024 年，并投入 6 253 亿韩元用于技术研发、产业基础、人才培养等方面，推动韩国 6G 商用从 2030 年提前到 2028 年[8]。</p><h4><strong>3&nbsp; 我国 6G 发展情况</strong></h4><p>我国前瞻启动 6G 研究，在政策文件、技术研究、标准推进、技术试验等多方面采取有力举措，扎实推动 6G 发展。在政策文件方面，2021 年 3 月至 12 月，我国先后发布了《中华人民共和国国民经济和社会发展第十四个五年规划和 2035 年远景目标纲要》《「十四五」信息通信行业发展规划》《「十四五」数字经济发展规划》《「十四五」国家信息化规划》[9-11]，提出要「前瞻布局 6G 网络技术储备」「开展 6G 基础理论及关键技术研发，构建 6G 愿景、典型应用场景和关键能力指标体系，鼓励企业深入开展 6G 潜在技术研究」「积极参与 6G 标准研究，形成一批 6G 核心研究成果」「前瞻布局第六代移动通信（6G）网络技术储备，加大 6G 技术研发支持力度，积极参与推动 6G 国际标准化工作」「加强新型网络基础架构和 6G 研究，加快地面无线与衞星通信融合、太赫兹通信等关键技术研发」。</p><p>2019 年 6 月，我国工业和信息化部会同国家发展和改革委员会、科学技术部指导产业界成立了 IMT-2030（6G）推进组（简称「6G 推进组」），作为我国推进 6G 发展的主要产业平台，联合产、学、研、用各方力量在 6G 愿景需求、技术研发、试验验证、国际合作等方面持续推动 6G 发展。在愿景需求研究方面，6G 推进组先后发布《6G 总体愿景与潜在关键技术白皮书》等[12-13]，提出 6G 总体愿景、典型场景、关键能力指标，展现产业界对 6G 发展目标如何发展的阶段性思考，凝聚业界关于 6G 发展的广泛共识。ITU 于 2023 年 6 月召开第 44 次会议，完成《IMT 面向 2030 及未来发展的框架和总体目标建议书》，我国提出的 5 类典型场景和 14 项关键能力指标等核心研究成果成功纳入其中[2]。技术研究方面，6G 推进组联合产业界开展系统整体架构、新型无线技术、新型网络技术等 6G 潜在关键技术研究，持续发布系列研究报告，有力推动形成 6G 创新发展共识。2022 年 8 月，6G 推进组启动 6G 技术试验，针对太赫兹通信、通信感知一体化、智能超表面 3 项无线关键技术和算力网络、分布式自治网络 2 项网络关键技术开展测试。2022 年 11 月，启动面向 6G 的关键技术全球征集，针对技术跨域融合发展趋势带来的 6G 技术创新难度大、更新速度快等挑战，面向全球高等院校、科研院所、科技企业、推进组织等开展 6G 潜在关键技术征集。同时，积极参与 ITU 相关研讨会,输出我国 6G 研究成果，支撑 ITU 完成面向 2030 及未来 IMT 技术趋势的报告，推动我国技术研究纳入 6G 总体框架，助力全球 6G 技术产业发展。在国际交流合作方面，6G 推进组已与欧洲 6G-IA 和韩国 5G 论坛等产业组织签署了合作意向，在 6G 愿景需求、技术研究等领域开展合作，共同发布研究成果。2022 年 6 月，6G 推进组与 6G-IA 签署 6G 合作备忘录。2023 年 5 月，6G 推进组与 6G-IA 共同举办线上 6G 主题研讨会，双方代表就 6G 愿景需求、技术趋势等热点议题进行了深入交流。</p><h4><strong>4&nbsp; 结束语</strong></h4><p>当前，移动通信产业发展如火如荼，有助于全球经济和社会可持续发展。未来，可以从以下几方面加强技术研究和产业研发。</p><p>一是立足 5G 基础推动 6G 发展。移动通信产业发展代际演进明显，6G 的发展离不开 5G 的坚实基础。当前正处在 5G 规模应用和 5G-A 标准制定的关键时期，一方面，要进一步凝聚产业力量，特别是垂直行业的力量，深挖产业需求，加快推动 5G 在生产生活关键领域的深入融合应用；另一方面，要继续强化 5G-A 关键技术研究和标准推进，持续打造良好产业生态，为 6G 发展筑牢基础。</p><p>二是强化 6G 潜在关键技术研究。产业代际演进的核心动力是关键技术的突破，面临跨域融合的技术发展趋势。要积极发挥产业推进平台作用，持续开展面向 6G 的关键技术征集活动，汇聚产、学、研、用各方面力量，从基础技术、原创技术、应用技术等多个角度推动 6G 理论创新和工程实现取得突破；同时，要注重发挥技术试验承担「研」与「产」之间桥梁的作用，用好横向对比和纵向突破，推动技术不断迭代成熟，加速技术产业化。</p><p>三是深化国际交流合作。历经数十年发展，移动通信的蓬勃健康发展离不开全球产业界的共同努力。要不断深化 6G 技术、标准、市场等领域交流合作与协同创新。一方面鼓励与国际产业组织、科研院所等共同开展 6G 研究项目，互相参与试验验证，积极参与 ITU、3GPP 等国际标准化组织的技术和标准化交流活动，深化全球 6G 创新共识；另一方面积极召开全球 6G 发展大会等活动，邀请国内外专家分享最新研究成果，推动技术研究和产业发展不断取得更广泛共识。</p><h4><strong>作者简介</strong></h4><blockquote><p style="margin-left:0; margin-right:0"><strong><span style="color:#3e3e3e">杜刘通</span></strong><strong><span style="color:#3e3e3e">&nbsp;&nbsp;</span></strong></p><p>中国信息通信研究院移动通信创新中心工程师，博士，主要从事 5G、6G 技术产业研究等方面的研究工作。</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#3e3e3e">徐晓燕&nbsp; &nbsp;</span></strong></p><p>通信作者。中国信息通信研究院移动通信创新中心高级工程师，博士，主要从事面向 6G 的技术预研、ITU 相关标准化活动等方面的研究工作。</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#3e3e3e">杜滢&nbsp;&nbsp;</span></strong></p><p>中国信息通信研究院移动通信创新中心副主任，教授级高级工程师，主要从事无线移动通信技术和标准等方面的研究工作。</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#3e3e3e">魏克军&nbsp; &nbsp;</span></strong></p><p>中国信息通信研究院移动通信创新中心副总工程师，教授级高级工程师，主要从事无线移动通信技术等方面的研究工作。</p><p style="margin-left:0; margin-right:0"><strong><span style="color:#3e3e3e">金弯弯&nbsp; &nbsp;</span></strong></p><p>中国人民大学经济学院本科生在读，主要从事信息通信行业产业经济政策等方面的研究工作。</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 03:06:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264732</guid>
            <link>https://www.oschina.net/news/264732</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Visual Studio Code 1.84 发布]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="background-color:#ffffff; color:#333333">Visual Studio Code 1.84 现已发布，具体更新内容如下：</span></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_accessibility" target="_blank">更多音频提示</a>&nbsp;</strong>- 新的音频提示可指示清除、保存和格式化活动。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_workbench" target="_blank">自定义活动栏位置</a>&nbsp;</strong>- 将活动栏移至顶部以紧凑显示。</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a02489be8fd5595d8dc82350d192b5472a2.gif" width="400" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_hide-editor-tabs" target="_blank">隐藏编辑器选项卡</a>&nbsp;</strong>- 显示多个、单个或不显示编辑器选项卡。</li></ul><p><img alt="" height="207" src="https://oscimg.oschina.net/oscnet/up-398420c769b24caa7db39e15dfc6428ae6b.gif" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_maximize-editor-group" target="_blank">最大化 Editor Groups</a>&nbsp;</strong>- 快速展开活动的 Editor Group。</li></ul><p><img alt="" height="318" src="https://oscimg.oschina.net/oscnet/up-f7316c4fd42416ea0211da2c2149213e46f.gif" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_python" target="_blank">Python 改进</a>&nbsp;</strong>- 更好地在终端中运行代码，更轻松地创建虚拟环境。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_fastapi-tutorial" target="_blank">FastAPI 教程</a>&nbsp;</strong>- 了解如何使用 VS Code 开发 Python FastAPI 应用程序。</li><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_gradle-for-java" target="_blank">Gradle for Java</a></strong>&nbsp;- 改进了对 Java Gradle 项目的支持。</li></ul><p><img height="104" src="https://oscimg.oschina.net/oscnet/up-239bfee4e76f665ff20e9fda7fc279bbaea.png" width="500" referrerpolicy="no-referrer"></p><ul><li><strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84%23_github-copilot" target="_blank">Preview：GitHub Copilot</a></strong>&nbsp;- 聊天「代理」，生成 commit 消息，终端支持。</li></ul><p>更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcode.visualstudio.com%2Fupdates%2Fv1_84" target="_blank">查看官方公告</a>。&nbsp;</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 02:48:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264731/vs-code-1-84-released</guid>
            <link>https://www.oschina.net/news/264731/vs-code-1-84-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[商城系统平台端更新登录、经营状况、平台管理模块]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div><div><div><div><p style="margin-left:0; margin-right:0"><strong>登录功能模块</strong></p></div><div><ul><li><span>密码登录：输入框提示语调整为【请输入手机号，或 账号】</span></li><li><strong><span style="color:#df2a3f">账号、密码</span></strong><span> 位数：限定为 11 位</span></li><li><span>在线时长：token 有效期 30 天 ，避免频繁登录</span></li><li><span>重复登录：处于登录状态打开后直接进入系统即可，目前操作用户名和密码没有错误但登录提示【用户名或密码错误】需要清缓存才行</span></li><li><span>店铺名称：需将店铺名称显示全</span></li><li><span>重置：</span><strong><span style="color:#df2a3f">所有搜索功能模块中都加上【重置】功能</span></strong></li></ul><p style="margin-left:0; margin-right:0"><strong><span>修改密码</span></strong></p><ul><li><span>将待修改用户的手机号显示出来，取消脱敏展示样式</span></li><li><span>验证码：改为与登录操作一致滑动图片将验证码填入框内</span></li></ul></div><p><strong>经营概况模块</strong></p><div><span>日注册用户数：将【今日访客数】改为【今日注册用户数】，即今日注册成功的总用户数</span></div><p>&nbsp;</p><p><strong>平台管理模块</strong></p></div><div><ul><li><span>菜单顺序：店铺管理、供应商管理、门店管理</span></li><li><span>删除：当删除【店铺、供应商】时，需同步将【签约类目、自己的商品】一并删除</span></li></ul><p style="margin-left:0; margin-right:0"><strong><span>店铺管理</span></strong></p><ul><li><span>店铺评分：将【商品评分】改为【店铺评分】，店铺评分是指本店已售评价商品的平均分</span></li><li><span>店铺 ID：将【ID】改为【店铺 ID】</span></li><li><span>添加类目：添加类目中需增加百分比符号显示</span></li></ul></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Wed, 01 Nov 2023 01:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264722</guid>
            <link>https://www.oschina.net/news/264722</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌宣布「移动优先索引」工作已完成]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Google 搜索的博客<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdevelopers.google.com%2Fsearch%2Fblog%2F2023%2F10%2Fmobile-first-is-here" target="_blank">近日更新的文章称</a></u>，<span style="background-color:rgba(255, 255, 255, 0.65); color:#000000">七年前开始的<strong>移动优先索引&nbsp;</strong></span><strong>(Mobile-FirstIndexing) </strong>工作<span style="background-color:rgba(255, 255, 255, 0.65); color:#000000">现已完成。</span></p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1102/184543_fsMq_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>Google 在 6 年半前就开始采用移动优先索引，在发布了一个又一个截止日期后，Google 最终取消了截止日期。</p><p>2016 年 11 月，Google 首次推出了移动优先索引。到 2018 年 12 月，Google 搜索结果中的一半网站都来自移动优先索引。简单地说，移动优先索引就是 Google 将从移动浏览器的视角抓取你的网站，并使用该移动版本进行索引和排名。</p><p>Google 在 2020 年 3 月初，宣布所有网站切换到移动优先索引的截止日期为 2020 年 9 月。当时 Google 表示："为了简化，我们将从 2020 年 9 月开始对所有网站切换到移动优先索引。随后在 2020 年 7 月，Google 再次将最后期限推迟到 2021 年 3 月。"</p><p>但在今年 5 月份，Google 事实上已经完成了网站移动索引的切换，但直到现在才正式宣布。Google 将减少传统桌面 Googlebot 的抓取次数。</p><p>Google 解释说，「有一小部分网站根本无法在移动设备上运行，这些网站主要是页面向所有移动用户显示错误，移动版网站被 robots.txt 屏蔽，而桌面版网站允许抓取，或者移动网站上的所有页面都重定向到主页。」</p><p>Google 表示，这类问题是搜索引擎无法解决的，目前将继续尝试用我们传统的桌面版 Googlebot 爬虫抓取这些网站，并将每年对名单进行几次重新评估。</p><p>Search Console 的变化方面，Google 宣布将关闭 Google 搜索控制枱设置页面中的索引爬虫信息。Google 解释说："由于所有在移动设备上运行的网站现在都主要由我们的移动爬虫抓取，因此不再需要这些信息。"</p><p>由于移动优先索引现在已经真正完成，这意味着 Google 很快将完全停止通过其传统的桌面爬虫进行抓取。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 10:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264670/mobile-first-is-here</guid>
            <link>https://www.oschina.net/news/264670/mobile-first-is-here</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[谷歌：正在完善 Android 中的 RISC-V 支持]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><span style="color:#000000">谷歌曾在 2022 年 11 月的 RISC-V 峰会上宣布已开始接受 RISC-V 补丁。一年后的现在，该公司则表示其正在完善 Android 中对 RISC-V 的支持。「我们的最新更新是，现在我们不仅接受补丁，而且还开始在 Android 中成熟地支持 RISC-V。」</span></p><p><span style="color:#000000">负责 Android 平台编程语言的 Lars Bergstrom 和负责低级操作系统的 Greg Simon <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopensource.googleblog.com%2F2023%2F10%2Fandroid-and-risc-v-what-you-need-to-know.html" target="_blank">在博客中表示</a>，他们已经确定了一组关键的扩展（包括 rva22 配置文件和矢量/加密扩展），以确保运行 RISC-V 的 CPU 具有高性能。</span></p><p><span style="color:#000000">开发人员现在可以在自己的计算机上构建、测试和运行对 RISC-V 的 Android 支持。可以使用 Cuttlefish 虚拟设备支持：</span></p><pre><code>$ lunch aosp_cf_riscv64_phone-userdebug
$ m -j
$ launch_cvd -cpus=8 -memory_mb=8192</code></pre><p><span style="color:#000000">然后可以使用 vncviewer 连接到正在运行的设备并进行交互。</span></p><p><span style="color:#000000"><img alt="" height="278" src="https://oscimg.oschina.net/oscnet/up-f4e707629f0afb6b046e5c2c412f90a99fd.gif" width="500" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">目前，这些补丁将支持构建和运行基本的 Android 开源项目体验，但尚未完全优化。例如，针对 Android Runtime (ART) 的完全优化后端工作仍在进行中。此外，AOSP、外部项目和编译器还没有生成经过全面优化的精简代码，这些代码也没有利用最新批准的扩展（如向量扩展）。但谷歌方面表示，他们相信<span style="background-color:#ffffff">该平台已经为实验和协作做好了准备。</span></span></p><p><span style="color:#000000">展望未来，<span style="background-color:#ffffff">该公司的目标是在今年年底最终确定 NDK ABI，以及在 Android 的公共 CI 上提供金丝雀构建；同时提供 x86-64 和 ARM64 上的 RISC-V，以便在主机上更轻松地测试 riscv64 Android 应用程序。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">到 2024 年，他们则计划推出公开可用的模拟器</span><span style="background-color:#ffffff">；</span><span style="background-color:#ffffff">具有完整的功能集，可以测试各种设备外形尺寸的应用程序。</span>「<span style="background-color:#ffffff">正如我们最近与高通公司合作宣布的那样，我们预计可穿戴设备将成为第一个可用的形式因素</span>」。本月早些时候，高通曾宣布正在与谷歌合作开发&nbsp;RISC-V Wear OS 芯片。</span></p><p><span style="color:#000000">不仅限于 <span style="background-color:#ffffff">Android 操作系统</span>，谷歌方面还透露其正在与社区和 RISE（RISC-V 软件生态系统）积极合作。并表示，接下来将继续并扩大对 RISC-V International 的投资。「Android 对 RISC-V 的支持依赖于从工具链到基本支持库的广泛贡献。我们非常感谢无数项目为支持 RISC-V 构建配置和高质量实施所做的不懈努力。」</span></p><p><span style="color:#000000">RISE 项目的成立旨在为运行高级操作系统的高性能、高能效 RISC-V 处理器内核提供一种加速软件可用性的方法，不仅包括 Android，还包括 Linux 和其他操作系统，涉及高性能计算等多个应用领域。RISE 项目的成员包括 Andes、谷歌、英特尔、Imagination Technologies、联发科、英伟达、高通技术、红帽、Rivos、三星、SiFive、T-Head 和 Ventana。</span></p><p><span style="color:#000000">有兴趣为 Android 中的 RISC-V 支持做出贡献的开发人员可以</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fgoogle%2Fandroid-riscv64" target="_blank">在 GitHub 上</a><span style="color:#000000">找到有关构建和测试的详细信息。谷歌鼓励开发者社区的参与，以进一步增强该平台。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 10:35:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264668/android-and-risc-v</guid>
            <link>https://www.oschina.net/news/264668/android-and-risc-v</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[DoltgreSQL 发布，基于 Git 的 PostgreSQL]]>
            </title>
            <description>
                <![CDATA[<div class="content"><blockquote><p>DoltSQL 的工作原理是模拟 PostgreSQL 服务器，并将接收到的命令转换为交给底层 Dolt 服务器的 AST。</p></blockquote><p>Dolt 是一个基于 Git 协议的开源 SQL 数据库，「版本控制的数据库」，使用 Golang 语言编写。首先它和 MySQL 关系型数据库一样，用于存储和管理数据，具有表、视图等概念，支持数据的增删改查等操作。它还提供了一个命令行工具，完美支持所有的 Git 命令，允许用户像使用一个 git 仓库一样对数据进行 fork、clone、branch、merge、push 和 pull 等操作。</p><p>Dolt 可以替代 MySQL，因为它实现了 MySQL 的语法和线协议，但它并不包含任何 MySQL 的代码，因为解决数据库版本控制问题的复杂性和挑战需要定制的解决方案。目前 Dolt 也已经准备好投入生产。</p><p><img height="920" src="https://static.oschina.net/uploads/space/2023/1102/183217_nsBr_3820517.png" width="1636" referrerpolicy="no-referrer"></p><p>而当前发布的 DoltSQL 是对 PostgreSQL 的支持。DoltSQL 的工作原理是模拟 PostgreSQL 服务器，并将接收到的命令转换为交给底层 Dolt 服务器的 AST。这使得能够快速启动并运行，同时利用 Dolt 已经提供的特性。DoltSQL 团队解决，在采取这种方法之前，考察了很多其它方法，从编写外部数据包装器，到为 PostgreSQL 构建新的存储后端，甚至是分叉 PostgreSQL 本身。但许多方法都无法完全支持版本控制功能，而其它方法（如分叉 PostgreSQL）可能需要数年的开发时间。</p><p>使用方式：</p><ol><li><p>Download the <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fdolthub%2Fdoltgresql%2Freleases" target="_blank"><strong>latest release</strong></a></p></li><li><p>Put the binary on your PATH.</p></li><li><p>Navigate to a directory you want your database data stored (eg. <code>~/doltgresql</code>).</p></li><li><p>Run <code>doltgres</code>. This will create a <code>doltgres</code> user and a <code>doltgres</code> database.</p></li><li><p>Open a new terminal. Connect with the following command: <code>psql -h localhost -U doltgres</code>. This will connect to the <code>doltgres</code> database with the <code>doltgres</code> user.</p></li><li><p>Run <code>CREATE TABLE example (pk INT8 PRIMARY KEY);</code>&nbsp;运行 <code>CREATE TABLE example (pk INT8 PRIMARY KEY);</code></p></li></ol><p>详情查看：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.dolthub.com%2Fblog%2F2023-11-01-announcing-doltgresql%2F" target="_blank">https://www.dolthub.com/blog/2023-11-01-announcing-doltgresql</a></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 10:30:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264666/announcing-doltgresql</guid>
            <link>https://www.oschina.net/news/264666/announcing-doltgresql</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[macOS Sonoma 中的 grep 命令被损坏]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>苹果开发者论坛上的一则帖子<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fforums%2Fthread%2F738862" target="_blank">写道</a>：</p><blockquote><p>macOS Sonoma 中的 grep 命令遭到了损坏，具体情况是出现<strong>断言失败 (Assertion Fails) 问题</strong>。</p><p>目前在新版系统中，macOS 上最新的<code>grep</code><strong>会索引到当前字符串超出的范围</strong>，由于<code>grep</code>终止了当前行缓冲区带有一个额外的空字符（不是原始输入文件的一部分），所以它恰好触发了<code>assert</code>来检查当前字符（在字符串之外）有多少字节宽。</p><p><img src="https://static.oschina.net/uploads/space/2023/1102/180554_3aG1_2720166.png" referrerpolicy="no-referrer"></p><p><em><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.apple.com%2Fforums%2Fthread%2F738862" target="_blank">https://developer.apple.com/forums/thread/738862</a></em></p></blockquote><p>这名发帖者表示，macOS 工程师原本是试图修复一个错误，没想到却破坏了另一个正常的功能 —— grep 命令。</p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 10:17:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264665</guid>
            <link>https://www.oschina.net/news/264665</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Transformers.js 2.7.0 发布，新增文本转语音]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p>Transformers.js 支持在浏览器中实现最先进的机器学习——无需服务器。它提供预训练模型和熟悉的 API，支持自然语言处理、计算机视觉、音频和多模态领域的任务。</p><p>借助 Transformers.js，开发者可以直接在浏览器中运行文本分类、图像分类、语音识别等任务，这使其成为 ML 从业者和研究人员的强大工具。</p><p>最近发布的<strong><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxenova%2Ftransformers.js%2Freleases%2Ftag%2F2.7.0" target="_blank"> Transformers.js 2.7.0 </a></u></strong>添加了一项重要功能：文本转语音。</p><p>下面是演示视频：</p><div class="ckeditor-html5-video" style="text-align:center"><video controls="controls" src="https://user-images.githubusercontent.com/26504141/277378666-9fa5131d-0e07-47fa-9a13-122c1b69d233.mp4">
  &nbsp;
 </video></div><p>&nbsp;</p><p>开发者表示目前只支持 speecht5 的文本转语音，将来会添加其他模型，如 bark 和 MMS。</p><p>为了展示在浏览器中文本转语音的强大功能，开发者还发布了一个简单的示例应用：</p><ul><li>演示：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fhuggingface.co%2Fspaces%2FXenova%2Ftext-to-speech-client" target="_blank">https://huggingface.co/spaces/Xenova/text-to-speech-client</a></li><li>代码：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Fxenova%2Ftransformers.js%2Ftree%2Fmain%2Fexamples%2Ftext-to-speech-client" target="_blank">https://github.com/xenova/transformers.js/tree/main/examples/text-to-speech-client</a></li></ul></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 06:38:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/264606/transformers-js-2-7-0-released</guid>
            <link>https://www.oschina.net/news/264606/transformers-js-2-7-0-released</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenFunction 1.2.0 发布：集成 KEDA http-addon 作为同步函数运行时]]>
            </title>
            <description>
                <![CDATA[<div class="content"><p><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenFunction%2FOpenFunction" target="_blank">OpenFunction</a> 是一个开源的云原生 FaaS（Function as a Service，函数即服务）平台，旨在帮助开发者专注于业务逻辑的研发。我们非常高兴地宣布 OpenFunction 又迎来了一次重要的更新，即 v1.2.0 版本的发布！</p><p>本次更新中，我们继续致力于为开发者们提供更加灵活和强大的工具，并在此基础上加入了一些新的功能点。该版本集成了 KEDA http-addon 作为同步函数运行时；支持在启用 SkyWalking 跟踪时添加环境变量；支持记录构建时间等。此外，还升级了部分组件及修复了多项 bug。</p><p>以下是该版本更新的主要内容：</p><h2>集成 KEDA http-addon 作为同步函数运行时</h2><p>KEDA http-addon 是一个 KEDA 的附加组件，它可以根据 HTTP 流量的变化自动地调整 HTTP 服务器的规模（包括从零开始扩容和缩容到零）。</p><p>KEDA http-addon 的工作原理是，它会在 Kubernetes 集群中创建一个名为 Interceptor 的组件，用来接收所有的 HTTP 请求，并将请求转发给目标应用。同时，它会将请求队列的长度报告给一个名为 External Scaler 的组件，用来触发 KEDA 的自动扩缩容机制。这样，你的 HTTP 应用就可以根据实际的流量需求动态地调整副本数。</p><p>在 OpenFunction v1.2.0 版本中，我们集成了 KEDA http-addon 作为同步函数运行时的一种选择。这意味着，你可以使用 OpenFunction 来创建和管理基于 HTTP 的函数，并利用 KEDA http-addon 的能力来实现高效且灵活的弹性伸缩。你只需在创建 Function 资源时指定 <code>serving.triggers[*].http.engine</code> 的值为 keda ，并且在 <code>serving.scaleOptions</code> 中配置 <code>keda.httpScaledObject</code> 相关参数，就可以部署和运行你的 HTTP 函数了。</p><h2>支持在启用 SkyWalking 跟踪时添加环境变量</h2><p>SkyWalking 是一个开源的应用性能监控（APM）系统，它可以帮助你观察和分析你的应用在不同环境中的运行状况。OpenFunction 支持在部署函数时启用 SkyWalking 跟踪，以便你可以更好地理解和优化你的函数性能。</p><p>在 OpenFunction v1.2.0 版本中，我们增加了一个新的功能，即支持在启用 SkyWalking 跟踪时添加环境变量。这样，你可以在创建 Function 资源时指定一些自定义的环境变量来控制 SkyWalking 的一些配置参数。这些环境变量会被传递给函数容器，并影响 SkyWalking 的采集和上报行为。</p><h2>当 Function、Builder 和 Serving 状态变化时支持记录事件</h2><p>事件（Event）是 Kubernetes 中一种重要的资源类型，它可以记录集群中发生的一些重要或者有趣的事情。事件可以帮助用户和开发者了解集群中资源的状态变化和异常情况，并采取相应的措施。</p><p>在 OpenFunction v1.2.0 版本中，我们支持当 Function、Builder 和 Serving 状态变化时记录事件。这样，你可以通过查看事件来获取更多关于函数构建和运行过程中发生的事情的信息。例如，你可以看到函数构建开始、结束、失败等事件；函数运行时创建、更新、删除等事件。</p><h2>其他的改进和优化</h2><p>除了上述的主要变化，该版本还有以下更改和增强：</p><ul><li>升级了 KEDA 到 v2.10.1 ，HPA（自动伸缩）API 版本到 v2 ，提高了稳定性和兼容性</li><li>支持记录构建时间，以便你可以了解函数构建的耗时情况</li><li>调整了 CI 流程，修复了一些小问题</li><li>修复了一个在 keda http-addon 运行时中的 bug ，该 bug 会导致函数无法正常运行</li><li>升级了 charts 中的一些组件，包括 keda ，dapr 和 contour ，以保持最新的版本和功能</li></ul><p>以上就是 OpenFunction v1.2.0 的主要功能变化，在此十分感谢各位贡献者的参与和贡献。</p><p>了解更多关于 OpenFunction 和本次版本更新的信息，欢迎访问我们的官方网站和 Github 页面。</p><ul><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenfunction.dev%2F" target="_blank">官网</a>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenfunction.dev%2F" target="_blank">https://openfunction.dev/</a></li><li><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenFunction%2FOpenFunction%2Freleases%2Ftag%2Fv1.2.0" target="_blank">Github</a>：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FOpenFunction%2FOpenFunction%2Freleases%2Ftag%2Fv1.2.0" target="_blank">https://github.com/OpenFunction/OpenFunction/releases/tag/v1.2.0</a></li></ul><blockquote><p>本文由博客一文多发平台 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenwrite.cn%3Ffrom%3Darticle_bottom" target="_blank">OpenWrite</a> 发布！</p></blockquote></div>
                                    ]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 06:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/4197945/blog/10140452</guid>
            <link>https://my.oschina.net/u/4197945/blog/10140452</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[计算流体力学 (CFD) 开源软件精选合集]]>
            </title>
            <description>
                <![CDATA[计算流体力学 (CFD) 开源软件精选合集]]>
            </description>
            <pubDate>Tue, 31 Oct 2023 04:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/project/awesome?columnId=17</guid>
            <link>https://www.oschina.net/project/awesome?columnId=17</link>
        </item>
    </channel>
</rss>
