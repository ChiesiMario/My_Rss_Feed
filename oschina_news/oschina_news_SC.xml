<?xml version="1.0" encoding="UTF-8"?>
<rss
    xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"


>
    <channel>
        <title>
            <![CDATA[开源中国-最新资讯]]>
        </title>
        <link>https://www.oschina.net/news/project</link>
        <atom:link href="https://rsshub.app/oschina/news" rel="self" type="application/rss+xml" />
        <description>
            <![CDATA[开源中国-最新资讯 - Made with love by RSSHub(https://github.com/DIYgod/RSSHub)]]>
        </description>
        <generator>RSSHub</generator>
        <webMaster>i@diygod.me (DIYgod)</webMaster>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 26 Oct 2023 11:19:48 GMT</lastBuildDate>
        <ttl>120</ttl>
        <item>
            <title>
                <![CDATA[no-GIL Python，启动！]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>CPython 核心开发者 Thomas Wouters 代表 Python 指导委员会宣布：<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscuss.python.org%2Ft%2Fpep-703-making-the-global-interpreter-lock-optional-in-cpython-acceptance%2F37075" target="_blank"><strong>正式接受 PEP 703 提案</strong></a></u>。</p><blockquote><p>PEP 703（Making the Global Interpreter Lock Optional，让全局解释器锁成为可选），简称<strong> no-GIL</strong>，也被称为自由线程 (free-threaded)。</p></blockquote><blockquote><p><img src="https://oscimg.oschina.net/oscnet/up-c596a475dbbae0dd91e3f3072a9b309f794.png" referrerpolicy="no-referrer"></p></blockquote><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">根据提案的描述，CPython 的全局解释器锁 (GIL) 阻止了同时多线程执行代码，成为了在多核 CPU 上提高 Python 代码运行效率的一大障碍。PEP 703 提案建议向 CPython 添加构建配置 (<code>--disable-gil</code>)，使其在没有全局解释器锁的情况下运行 Python 代码，并进行必要的更改以保证解释器线程安全。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">Thomas Wouters 表示，Python 指导委员会当然很清楚 no-GIL 意味着什么，社区普遍也是秉承支持的态度，毕竟它为 Python 带来巨大好处。</p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left">但与此同时，<span><span><span>委员会担心移除 GIL 会破坏目前的所有扩展模块，或者显着降低 CPython 的性能或可维护性。</span></span></span><span><span><span>此外，</span></span><span><span>第三方 PyPI 软件包生态系是 Python 的一大优势，与 C 语言库的紧密、高效集成则是 CPython 的优势之一。</span></span><span><span>它们使得存在多种软件包选择成为可能，这是 Python 的独特卖点。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span><span><span>因此他们需要谨慎实现 no-GIL，避免破坏这些优势，或者导致其他开发者放弃数十年的软件包开发。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span><span><span>由于还没有实现 no-GIL，评估实际影响以及让第三方软件包适应新的自由线程的实用性是很困难的。尤其是</span></span><span><span>与线程相关的问题的不可预测性更是让难度升级，</span></span></span><span><span><span>因为有些问题只有在显着负载下才会暴露。</span></span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span><span><span>目前</span></span></span> Python 指导委员针对 no-GIL 的实现计划分成三个阶段：</p><ol><li style="text-align:left"><strong>实验阶段</strong>。通过提供 build-time 选项，让开发者在构建时选择启用自由线程 (free-threaded)。在此阶段对外明确告知<span><span><span>是实验性的，不支持用于生产环境。</span></span></span></li><li style="text-align:left"><strong>支持但不默认阶段</strong>。<span><span><span>该阶段将在 API 和 ABI 变更充分解决，并且有足够的社区支持时开始启动。</span></span></span></li><li style="text-align:left"><strong>默认阶段</strong>。此时默认启用自由线程（初期仍支持禁用），但此阶段确切的标准很难确定，目标是使开发者尽可能无缝且无痛地进行升级和兼容。</li></ol><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdiscuss.python.org%2Ft%2Fpep-703-making-the-global-interpreter-lock-optional-in-cpython-acceptance%2F37075" target="_blank">点此查看详情</a>。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 10:36:42 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263570/pep-703-acceptance</guid>
            <link>https://www.oschina.net/news/263570/pep-703-acceptance</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Yarn 4.0 正式发布，现代化的软件包管理器]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>Yarn 正式发布了<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyarnpkg.com%2Fblog%2Frelease%2F4.0" target="_blank"><u>4.0 稳定版</u></a>。</p><blockquote><p>Yarn 不仅是现代化的 JavaScript 软件包管理器，还可以作为项目管理工具。无论你是小型项目还是大型单体仓库（monorepos），无论是业余爱好者还是企业用户，Yarn 都能满足你的需求。</p></blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1026/150659_rdd3_2720166.png" referrerpolicy="no-referrer"></p><p>与 3.x 相比，Yarn 4.0 引入了不少破坏性变化：</p><ul><li>要求 Node.js 18 及更高版本</li><li>使用<code>yarn init</code>创建的新项目将不再默认启用 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyarnpkg.com%2Ffeatures%2Fcaching%23zero-installs" target="_blank">Zero-Install</a></li><li>使用<code>yarn init</code>创建的新项目将使用 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fnodejs.org%2Fapi%2Fcorepack.html" target="_blank">Corepack</a> 而非<code><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fyarnpkg.com%2Fconfiguration%2Fyarnrc%23yarnPath" target="_blank">yarnPath</a></code></li><li>默认引入所有官方插件 (<code>typescript</code>, <code>interactive-tools</code>, ...)</li><li><code>yarn workspaces foreach</code>命令的语法略有改动</li></ul><p>其他值得关注的变化：</p><ul><li>新增 Hardened 模式</li><li>实现约束引擎 (JavaScript Constraints)</li><li>集成 TypeScript、交互工具</li><li>优化 UI</li><li>……</li></ul><p>此外，4.0 性能方面有了显著提升，其安装速度明显快于 3.6。例如，以下是从冷缓存安装 Gatsby 及其 ~350MiB 依赖树所需时间的差异。</p><p>团队表示，性能提升 3 倍的原因是新的<strong>软件包元数据缓存</strong>大大提高了重复安装的性能：</p><pre><code>hyperfine -L v stable,canary --prepare 'rm -rf ~/.yarn/berry/cache' 'cd $(mktemp -d) &amp;&amp; yarn init -2 &amp;&amp; yarn set version {v} &amp;&amp; yarn &amp;&amp; yarn add gatsby --mode=skip-build'</code></pre><pre><code>Benchmark 1: 3.6.0
  Time (mean ± σ):     65.599 s ±  2.214 s    [User: 82.952 s, System: 8.638 s]
  Range (min … max):   62.167 s … 68.277 s    10 runs

Benchmark 2: 4.0.0
  Time (mean ± σ):     16.724 s ±  0.928 s    [User: 14.622 s, System: 5.743 s]
  Range (min … max):   15.318 s … 18.110 s    10 runs

Summary
  4.0.0 ran 3.92 ± 0.25 times faster than 3.6.0</code></pre><p>团队还提到，从 Yarn 3 到 Yarn 4 经历了多达 53 个候选版本，而迭代新版本的目的是降低 Yarn 的学习曲线，改进用户体验，降低迁移带来的心智影响。</p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 07:18:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263539/yarnpkg-4-0</guid>
            <link>https://www.oschina.net/news/263539/yarnpkg-4-0</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[MySQL 8.2.0 GA]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>MySQL 新的进化版 8.2.0 于 2023 年 10 月 25 日发行，该版本的一些主要变化包括：</p><p><strong>审计日志</strong></p><ul><li><p>添加了新的「audit_log_filter_uninstall.sql」脚本，简化删除「MySQL Enterprise Audit」的过程。认证 * 「mysql_native_password」插件已弃用，用户可以在服务器启动时将其禁用。如果服务器端「mysql_native_password」认证方法被禁用，使用该方法的旧的客户端插件将无法连接服务器，并在错误日志中写入「Access denied」消息。</p></li><li><p>MySQL 企业版现在支持 MySQL 服务器使用智能卡、安全设备等方法进行身份验证。该身份验证方法基于 FIDO 和 FIDO2 标准。它使用服务器端的「authentication_webauthn」和客户端的「authentication_webauthn_client」实现 C API。</p></li><li><p>客户端库现在支持使用查询预处理语句的属性，并引入一个新的 C API 声明函数「mysql_stmt_bind_named_param()」，用以替换现已弃用的「mysql_stmt_bind_param()」函数。与 「mysql_stmt_bind_param() 」不同，「mysql_stmt_bind_named_param()」 允许绑定预处理语句的未命名和命名参数。</p></li><li><p>mysql_ssl_set() C API 函数已弃用，并且在未来的 MySQL 版本中删除。与其等效的函数为「mysql_options()」 TLS 选项。</p></li></ul><p><strong>弃用和删除</strong></p><ul><li><p>兼容性的变化：「WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS()」 SQL 函数，在 MySQL 8.0 中已弃用，现已被删除。用户可以使用「WAIT_FOR_EXECUTED_GTID_SET()」替代。</p></li><li><p>复制：「binlog_transaction_dependency_tracking」服务器系统变量现已弃用，并将在 MySQL 的未来版本中删除。设置或检索该变量的值会触发警告。</p></li><li><p>「expire_logs_days」服务器系统变量，在 MySQL 8.0 中已弃用，现已删除。用户可以使用「binlog_expire_logs_seconds」替代。</p></li><li><p>在 MySQL 8.0 中已弃用的服务器启动选项「--abort-slave-event-count」和「--disconnect-slave-event-count」，现已删除。</p></li><li><p>服务器系统变量「old」和「new」现在已弃用，将在 MySQL 的未来版本中删除。</p></li><li><p>「--character-set-client-handshake」服务器选项，现已弃用，并将在 MySQL 的未来版本中删除。</p></li><li><p>使用字符 「%」 和 「_」 作为通配符，对数据库进行授权功能现已弃用，未来将删除通配符功能。另外，服务器将「%」视为「localhost」的同义词，检查权限时（即授予 'myuser'@'%' 的权限也予'myuser'@'localhost') 也从 MySQL 8.2.0 开始被弃用，未来版本删除。</p></li><li><p>「INFORMATION_SCHEMA.PROCESSLIST」已弃用，未来版本删除。因此，使用该表实现的「SHOW PROCESSLIST」也已弃用。推荐使用 Performance_schema。</p></li><li><p>SET_USER_ID 权限已弃用，未来版本删除。它现在已被这些新的权限替代： SET_ANY_DEFINER 用于创建定义者对象。 ALLOW_NONEXISTENT_DEFINER 用于孤立对象，保护。</p></li><li><p>「TLS_AES_128_CCM_8_SHA256」密码套件已弃用，未来版本删除。</p></li></ul><p><strong>防火墙</strong></p><ul><li><p>MySQL Enterprise Firewall 允许其内存缓存定期重新加载防火墙中存储的数据表。以往仅在服务器启动时或服务器端插件启动时重新加载缓存。新的「mysql_firewall_reload_interval_seconds」系统变量可以设置用于重新加载表数据的日程表。</p></li><li><p>MySQL Enterprise Firewall 以往仅能在 mysql 系统数据库中存储所需的表、函数和存储过程。新的 「mysql_firewall_database」服务器系统变量允许用户在服务器启动时，指定自定义的库。此外，新的脚本「uninstall_firewall.sql」简化了删除防火墙的工作。</p></li></ul><p><strong>SQL 语法</strong></p><ul><li><p>复制：此版本继续发布与 MySQL 复制相关功能中使用的术语 。MySQL 8.2 弃用了一些 SQL 语句，包括 「RESET MASTER」（使用 「RESET BINARY LOGS AND GTIDS」 代替），「SHOW MASTER STATUS」（「使用 SHOW BINARY LOG STATUS」），「SHOW MASTER LOGS」（使用 「SHOW BINARY LOGS」）和 「PURGE MASTER LOGS」（使用「BINARY LOGS」）。</p> 此外，「DISABLE ON SLAVE」 选项在「CREATE EVENT」 和 「ALTER EVENT」上已弃用。相关变更包括以下内容： 
  <ul><li>&nbsp;mysqldump 添加了一个选项 「--output-as-version」定义转储中使用的术语级别对于与副本和事件相关的声明，使得创建转储成为可能与以前版本的 MySQL 兼容，仅接受现已弃用的术语。此选项的有效值为 「SERVER」、 「BEFORE_8_0_23」 和 「BEFORE_8_2_0」 。默认是 「SERVER」，这会令 「mysqldump」 获取服务器版本并输出命令与该版本兼容。</li><li>「terminology_use_previous」 服务器系统变量添加了一个新值 「BEFORE_8_2_0」。</li><li>SLAVESIDE_DISABLED 现已弃用。</li><li>Com_show_master_status 系统状态变量重新命名为 「Com_show_binary_log_status」。以前的名称已弃用，但仍支持向后兼容性。</li></ul></li><li><p>EXPLAIN 现在支持 「FOR SCHEMA」 或 「FOR DATABASE」 选项。该选项将假设语句已经已在选项指定的数据库中运行。</p></li></ul><p><strong>添加或更改的功能</strong></p><ul><li><p>非兼容更改：升级绑定的 libfido2 v1.13.0 库。该 libfido2 版本需要 OpenSSL 1.1.1 或更高版本。</p></li><li><p>重要更改：适用于支持绑定 OpenSSL 的平台，用于 MySQL 服务器链接的 OpenSSL 库已更新至版本 3.0.10。</p></li><li><p>重要更改：添加了对 Debian 12、Fedora 39、 macOS 14 和 Ubuntu 23.10 的支持。</p></li><li><p>mysqldump：添加了 「--ignore-views」 选项以跳过，生成的转储文件中的表视图。* mysqldump：添加了 「--init-command」 和 「--init-command-add」 选项以允许连接或重新连接 MySQL 后执行 SQL 语句。</p></li><li><p>mysql：添加了 「--init-command-add」 选项，该选项添加连接或重新连接到 MySQL 服务器后要执行的附加 SQL 语句。它类似于「--init」命令选项。</p></li><li><p>添加了新的 「--no-login-paths」 命令行选项，禁止处理登录路径。已添加至每个具有 「--login-path」 选项的 MySQL 客户端。</p></li></ul><p><span style="background-color:#ffffff; color:#222222">以上内容是 8.2.0 版本的一个快速浏览，详细信息可访问<span>&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblogs.oracle.com%2Fmysql%2Fcategory%2Fmsq-announcements" target="_blank">MySQL 官网</a><span style="background-color:#ffffff; color:#222222">。</span><span style="background-color:#ffffff; color:#333333">&nbsp;</span></p><p><span style="background-color:#ffffff; color:#222222">稿源：</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F1_HnviolGvbM8hPsZeMttQ" target="_blank">https://mp.weixin.qq.com/s/1_HnviolGvbM8hPsZeMttQ</a></p></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 02:32:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263481/mysql-8-2-0-ga</guid>
            <link>https://www.oschina.net/news/263481/mysql-8-2-0-ga</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[【ssh 客户端】tssh 发布 v0.1.12 支持自动重连]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>【ssh 客户端】tssh 发布 v0.1.12，支持 --reconnect 自动重连；记住密码的功能支持加密密码，防止被窥屏；支持更多功能，详见文档。</p><p><span style="background-color:#ffffff; color:#40485b">GitHub：<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh" target="_blank">https://github.com/trzsz/trzsz-ssh</a></span></p><hr><div><div><div><div><div><h2>tssh 简介</h2><p style="color:#606c71; margin-left:0; margin-right:0; text-align:start">你喜欢的 ssh 终端是否有好用的服务器管理功能？是否支持记住密码？是否有好用的文件传输工具？</p><p style="color:#606c71; margin-left:0; margin-right:0; text-align:start">tssh 支持选择或搜索<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中配置的服务器，支持 vim 操作习惯，解决 ssh 终端的服务器管理问题。</p><p style="color:#606c71; margin-left:0; margin-right:0; text-align:start">tssh 支持一次选择多台服务器，批量登录，并支持批量执行预先指定的命令，方便快速完成批量服务器操作。</p><p style="color:#606c71; margin-left:0; margin-right:0; text-align:start">tssh 支持配置服务器登录密码，解决每次手工输入密码的麻烦（ 在自己能控制的服务器，推荐使用公私钥登录 ）。</p><p style="color:#606c71; margin-left:0; margin-right:0; text-align:start">tssh 内置支持<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F" target="_blank">trzsz</a><span>&nbsp;</span>(trz /tsz) 文件传输工具，一并解决了 Windows 中使用<span>&nbsp;</span><code>trzsz ssh</code><span>&nbsp;</span>上传速度很慢的问题。</p><p style="color:#606c71; margin-left:0; margin-right:0; text-align:start"><em>在作者的 MacOS 上，使用<span>&nbsp;</span><code>trzsz ssh</code><span>&nbsp;</span>的上传速度在 10 MB/s 左右，而使用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>可以到 80 MB/s 以上。</em></p><h2>安装方法</h2><p style="color:#606c71; margin-left:0; margin-right:0; text-align:start"><strong><em>客户端安装<span>&nbsp;</span><code>trzsz-ssh ( tssh )</code><span>&nbsp;</span>的方法如下（ 任选其一 ）：</em></strong></p><ul><li><p style="margin-left:0; margin-right:0">Windows 可用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fscoop.sh%2F" target="_blank">scoop</a><span>&nbsp;</span>/<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flearn.microsoft.com%2Fzh-cn%2Fwindows%2Fpackage-manager%2Fwinget%2F" target="_blank">winget</a><span>&nbsp;</span>/<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fcommunity.chocolatey.org%2F" target="_blank">choco</a><span>&nbsp;</span>安装</p><code>scoop install tssh</code><span>&nbsp;</span>/<span>&nbsp;</span><code>winget install tssh</code><span>&nbsp;</span>/<span>&nbsp;</span><code>choco install tssh</code><div><div><pre><code><span style="color:#6f42c1">scoop</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></code></pre></div></div><div><div><pre><code><span style="color:#6f42c1">winget</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></code></pre></div></div><div><div><pre><code><span style="color:#6f42c1">choco</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">MacOS 可用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fbrew.sh%2F" target="_blank">homebrew</a><span>&nbsp;</span>安装</p><code>brew install trzsz-ssh</code><div><div><pre><code><span style="color:#6f42c1">brew</span><span style="color:#032f62">update</span><span style="color:#6f42c1">brew</span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">trzsz-ssh</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">Ubuntu 可用 apt 安装</p><code>sudo apt install tssh</code><div><div><pre><code><span style="color:#0086b3">sudo </span>apt <span style="color:#d73a49">update</span><strong>&amp;&amp;</strong><span style="color:#0086b3">sudo </span>apt <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>software-properties-common
<span style="color:#0086b3">sudo </span><span style="color:#d73a49">add</span>-apt-repository ppa:trzsz/ppa <strong>&amp;&amp;</strong><span style="color:#0086b3">sudo </span>apt <span style="color:#d73a49">update</span><span style="color:#0086b3">sudo </span>apt <span style="color:#0086b3"><span style="color:#d73a49">install</span></span>tssh
</code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">Debian 可用 apt 安装</p><code>sudo apt install tssh</code><div><div><pre><code><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">curl gpg</span><span style="color:#6f42c1">curl</span><span style="color:#000080"><span style="color:#032f62">-s</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">'https://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x7074ce75da7cc691c1ae1a7c7e51d1ad956055ca'</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">\</span></span><span style="color:#032f62">
  | gpg </span><span style="color:#000080"><span style="color:#032f62">--dearmor</span></span><span style="color:#032f62"></span><span style="color:#000080"><span style="color:#032f62">-o</span></span><span style="color:#032f62"> /usr/share/keyrings/trzsz.gpg</span><span style="color:#0086b3"><span style="color:#6f42c1">echo</span></span><span style="color:#dd1144"><span style="color:#032f62">'deb [signed-by=/usr/share/keyrings/trzsz.gpg] https://ppa.launchpadcontent.net/trzsz/ppa/ubuntu jammy main'</span></span><span style="color:#032f62"></span><span style="color:#dd1144"><span style="color:#032f62">\</span></span><span style="color:#032f62">
  | </span><span style="color:#0086b3"><span style="color:#032f62">sudo tee</span></span><span style="color:#032f62"> /etc/apt/sources.list.d/trzsz.list</span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt update</span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">apt </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">Linux 可用 yum 安装</p><code>sudo yum install tssh</code><ul><li><p style="margin-left:0; margin-right:0">国内推荐使用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.wlnmp.com%2Finstall" target="_blank">wlnmp</a><span>&nbsp;</span>源，安装 tssh 只需要添加 wlnmp 源（ 配置 epel 源不是必须的 ），以 CentOS 为例：</p><div><div><pre><code><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">rpm </span><span style="color:#000080"><span style="color:#032f62">-ivh</span></span><span style="color:#032f62"> https://mirrors.wlnmp.com/centos/wlnmp-release-centos.noarch.rpm</span><span style="color:#0086b3"><span style="color:#6f42c1">sudo</span></span><span style="color:#032f62">yum </span><span style="color:#0086b3"><span style="color:#032f62">install </span></span><span style="color:#032f62">tssh</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">也可使用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgemfury.com%2F" target="_blank">gemfury</a><span>&nbsp;</span>源（ 只要网络通，所有操作系统通用 ）</p><div><div><pre><code><span style="color:#0086b3">echo</span><span style="color:#dd1144">'[trzsz]
name=Trzsz Repo
baseurl=https://yum.fury.io/trzsz/
enabled=1
gpgcheck=0'</span> | <span style="color:#0086b3">sudo tee</span> /etc/yum.repos.d/trzsz.repo

<span style="color:#0086b3">sudo </span>yum <span style="color:#0086b3">install </span>tssh
</code></pre></div></div></li></ul></li><li><p style="margin-left:0; margin-right:0">ArchLinux 可用<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2FJguer%2Fyay" target="_blank">yay</a><span>&nbsp;</span>安装</p><code>yay -S tssh</code><div><div><pre><code><span style="color:#6f42c1">yay</span><span style="color:#000080"><span style="color:#032f62">-Syu</span></span><span style="color:#6f42c1">yay</span><span style="color:#000080"><span style="color:#032f62">-S</span></span><span style="color:#032f62"> tssh</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">用 Go 直接安装（ 要求 go 1.20 以上 ）</p><code>go install github.com/trzsz/trzsz-ssh/cmd/tssh@latest</code><div><div><pre><code><span style="color:#005cc5">go</span><span style="color:#0086b3">install </span>github.com/trzsz/trzsz-ssh/cmd/tssh<span style="color:#032f62">@latest</span></code></pre></div></div><p style="margin-left:0; margin-right:0">安装后，<code>tssh</code><span>&nbsp;</span>程序一般位于<span>&nbsp;</span><code>~/go/bin/</code><span>&nbsp;</span>目录下（ Windows 一般在<span>&nbsp;</span><code>C:\Users\your_name\go\bin\</code><span>&nbsp;</span>）。</p></li><li><p style="margin-left:0; margin-right:0">可从<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgithub.com%2Ftrzsz%2Ftrzsz-ssh%2Freleases" target="_blank">Releases</a><span>&nbsp;</span>中直接下载适用的版本</p><code>或者用 Go 编译（ 要求 go 1.20 以上 ）</code><div><div><pre><code><span style="color:#6f42c1">git</span><span style="color:#032f62">clone https://github.com/trzsz/trzsz-ssh.git</span><span style="color:#0086b3"><span style="color:#6f42c1">cd</span></span><span style="color:#032f62">trzsz-ssh</span><span style="color:#6f42c1">go</span><span style="color:#032f62">build ./cmd/tssh</span></code></pre></div></div></li></ul><p style="color:#606c71; margin-left:0; margin-right:0; text-align:start"><strong><em>服务器上要安装<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F" target="_blank">trzsz</a><span>&nbsp;</span>才能使用<span>&nbsp;</span><code>trz / tsz</code><span>&nbsp;</span>上传和下载，可任选其一安装：<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fgo" target="_blank">Go 版</a>（ ⭐ 推荐 ）、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F" target="_blank">Py 版</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrzsz.github.io%2Fcn%2Fjs" target="_blank">Js 版</a>。</em></strong></p><p style="color:#606c71; margin-left:0; margin-right:0; text-align:start"><em>如果服务器不安装<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftrzsz.github.io%2Fcn%2F" target="_blank">trzsz</a>，也能用<span>&nbsp;</span><code>tssh</code>，只是不使用<span>&nbsp;</span><code>trz / tsz</code><span>&nbsp;</span>上传和下载而已。</em></p><h2>使用方法</h2><p style="color:#606c71; margin-left:0; margin-right:0; text-align:start"><em><code>~/</code><span>&nbsp;</span>代表 HOME 目录。在 Windows 中，请将下文的<span>&nbsp;</span><code>~/</code><span>&nbsp;</span>替换成<span>&nbsp;</span><code>C:\Users\your_name\</code>。</em></p><ul><li><p style="margin-left:0; margin-right:0">在客户端生成密钥对，一般存放在<span>&nbsp;</span><code>~/.ssh/</code><span>&nbsp;</span>下：</p><ul><li><code>ssh-keygen -t rsa -b 4096</code><span>&nbsp;</span>生成 RSA 的，私钥<span>&nbsp;</span><code>~/.ssh/id_rsa</code>，公钥<span>&nbsp;</span><code>~/.ssh/id_rsa.pub</code>。</li></ul></li><li><p style="margin-left:0; margin-right:0">登录服务器，将公钥（ 即前面生成密钥对时<span>&nbsp;</span><code>.pub</code><span>&nbsp;</span>后缀的文件内容 ）追加写入服务器上的<span>&nbsp;</span><code>~/.ssh/authorized_keys</code><span>&nbsp;</span>文件中。</p><p style="margin-left:0; margin-right:0">一行代表一个客户端的公钥，注意<span>&nbsp;</span><code>~/.ssh/authorized_keys</code><span>&nbsp;</span>要设置正确的权限：</p><div><div><pre><code><span style="color:#0086b3"><span style="color:#032f62">chmod</span></span><span>700</span><span style="color:#032f62">~/.ssh</span><strong><span style="color:#032f62">&amp;&amp;</span></strong><span style="color:#0086b3"><span style="color:#032f62">chmod</span></span><span>600</span><span style="color:#032f62">~/.ssh/authorized_keys</span></code></pre></div></div></li><li><p style="margin-left:0; margin-right:0">在客户端配置好<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>文件，举例：</p><pre><code><span style="color:#6f42c1">Host</span><span style="color:#032f62">alias1</span><span style="color:#6f42c1">HostName</span><span style="color:#032f62">192.168.0.1</span><span style="color:#6f42c1">Port</span><span style="color:#032f62">22</span><span style="color:#6f42c1">User</span><span style="color:#032f62">your_name</span><span style="color:#6f42c1">Host</span><span style="color:#032f62">alias2</span><span style="color:#6f42c1">HostName</span><span style="color:#032f62">192.168.0.2</span><span style="color:#6f42c1">Port</span><span style="color:#032f62">22</span><span style="color:#6f42c1">User</span><span style="color:#032f62">your_name</span></code></pre></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>命令登录服务器，<code>tssh alias1</code><span>&nbsp;</span>命令登录在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中<span>&nbsp;</span><code>alias1</code><span>&nbsp;</span>对应的服务器。</p></li><li><p style="margin-left:0; margin-right:0">直接执行<span>&nbsp;</span><code>tssh</code><span>&nbsp;</span>命令（ 不带参数 ），可以选择（ 搜索 ）<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中配置好的服务器并登录。</p></li></ul><h2>批量登录</h2><ul><li><p style="margin-left:0; margin-right:0">支持在<span>&nbsp;</span><code>iTerm2</code>（ 要开启<span>&nbsp;</span><a href="https://gitee.com/link?target=https%3A%2F%2Fiterm2.com%2Fpython-api-auth.html">Python API</a>，但不需要<span>&nbsp;</span><code>Allow all apps to connect</code><span>&nbsp;</span>），<code>tmux</code><span>&nbsp;</span>和<span>&nbsp;</span><code>Windows Terminal</code><span>&nbsp;</span>中一次选择多台服务器，批量登录，并支持批量执行预先指定的命令。</p></li><li><p style="margin-left:0; margin-right:0">按下<span>&nbsp;</span><code>Space</code>、<code>Ctrl+X</code><span>&nbsp;</span>等可以选中或取消当前服务器，若不能选中说明还不支持当前终端，请先运行<span>&nbsp;</span><code>tmux</code>。</p></li><li><p style="margin-left:0; margin-right:0">按下<span>&nbsp;</span><code>Ctrl+P</code><span>&nbsp;</span>会以分屏的方式批量登录，<code>Ctrl+W</code><span>&nbsp;</span>会打开新窗口批量登录，<code>Ctrl+T</code><span>&nbsp;</span>会打开新 tab 批量登录。</p></li><li><p style="margin-left:0; margin-right:0"><code>tssh</code><span>&nbsp;</span>不带参数启动可以批量登录服务器，若带<span>&nbsp;</span><code>-o RemoteCommand</code><span>&nbsp;</span>参数启动则可以批量执行指定的命令。支持执行指定命令之后进入交互式 shell，但<span>&nbsp;</span><code>Windows Terminal</code><span>&nbsp;</span>不支持分号<span>&nbsp;</span><code>;</code>，可以用<span>&nbsp;</span><code>|cat&amp;&amp;</code><span>&nbsp;</span>代替。举例：</p><div><div><pre><code><span style="color:#005cc5">tssh</span><span style="color:#000080">-t</span><span style="color:#000080">-o</span><span style="color:#008080">RemoteCommand</span><strong>=</strong><span style="color:#dd1144"><span style="color:#032f62">'ping -c3 trzsz.github.io ; bash'</span></span>
tssh <span style="color:#000080">-t</span><span style="color:#000080">-o</span><span style="color:#008080">RemoteCommand</span><strong>=</strong><span style="color:#dd1144"><span style="color:#032f62">"ping -c3 trzsz.github.io |cat&amp;&amp; bash"</span></span></code></pre></div></div></li></ul><h2>记住密码</h2><ul><li><p style="margin-left:0; margin-right:0">为了兼容标准 ssh ，密码配置项独立放在<span>&nbsp;</span><code>~/.ssh/password</code><span>&nbsp;</span>中，其他配置项依然放在<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中。</p></li><li><p style="margin-left:0; margin-right:0">推荐使用前面密钥认证的方式，密码的安全性弱一些。如果必须要用，建议设置好<span>&nbsp;</span><code>~/.ssh/password</code><span>&nbsp;</span>的权限：</p><div><div><pre><span><span style="color:#0086b3"><span style="color:#032f62">chmod</span></span><span>700</span><span style="color:#032f62">~/.ssh</span><span><span style="color:#032f62">&amp;&amp;</span></span><span style="color:#0086b3"><span style="color:#032f62">chmod</span></span><span>600</span><span style="color:#032f62">~/.ssh/password</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">下面<span>&nbsp;</span><code>~/.ssh/password</code><span>&nbsp;</span>配置<span>&nbsp;</span><code>test2</code><span>&nbsp;</span>的密码是<span>&nbsp;</span><code>123456</code>，其他以<span>&nbsp;</span><code>test</code><span>&nbsp;</span>开头的密码是<span>&nbsp;</span><code>111111</code>：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test2</span></span><span><span style="color:#6f42c1">Password</span><span style="color:#032f62">123456</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># ~/.ssh/config 和 ~/.ssh/password 是支持通配符的，tssh 会使用第一个匹配到的值。</span></span><span><span style="color:#6a737d"># 这里希望 test2 使用区别于其他 test* 的密码，所以将 test* 放在了 test2 的后面。</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test*</span></span><span><span style="color:#6f42c1">Password</span><span style="color:#032f62">111111</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">支持记住私钥的<span>&nbsp;</span><code>Passphrase</code>。如果<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中配置了<span>&nbsp;</span><code>IdentityFile</code>, 则使用相同的 Host 别名，在<span>&nbsp;</span><code>~/.ssh/password</code><span>&nbsp;</span>中配置对应的<span>&nbsp;</span><code>Passphrase</code>。如果<span>&nbsp;</span><code>~/.ssh/config</code><span>&nbsp;</span>中没有配置<span>&nbsp;</span><code>IdentityFile</code>，通用的私钥则使用私钥文件名代替 Host 别名。举例：</p><div><div><pre><span><span style="color:#6a737d"># ~/.ssh/config 中 test1 配置了 IdentityFile</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6f42c1">IdentityFile</span><span style="color:#032f62">/path/to/id_rsa</span></span></pre><div>
          &nbsp;
         </div></div></div><div><div><pre><span><span style="color:#6a737d"># ~/.ssh/password 中配置 test1 私钥对应的 Passphrase</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span></span><span><span style="color:#6f42c1">Passphrase</span><span style="color:#032f62">123456</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># ~/.ssh/password 中配置通用私钥 ~/.ssh/id_rsa 对应的 Passphrase</span></span><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">id_rsa</span></span><span><span style="color:#6f42c1">Passphrase</span><span style="color:#032f62">111111</span></span></pre></div></div></li></ul><h2>记住答案</h2><ul><li><p style="margin-left:0; margin-right:0">除了私钥和密码，还有一种登录方式，英文叫 keyboard interactive ，是服务器返回一些问题，客户端提供正确的答案就能登录，很多自定义的一次性密码就是利用这种方式实现的。</p></li><li><p style="margin-left:0; margin-right:0">如果答案是固定不变的，<code>tssh</code><span>&nbsp;</span>支持 「记住答案」，也是在<span>&nbsp;</span><code>~/.ssh/password</code><span>&nbsp;</span>中进行配置。大部分都是只有一个问题，只要配置<span>&nbsp;</span><code>QuestionAnswer1</code><span>&nbsp;</span>即可。对于有多个问题的，每个问题答案可按序号进行配置，也可以按问题的 hex 编码进行配置。</p></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>tssh --debug</code><span>&nbsp;</span>登录，会输出问题的 hex 编码，从而知道该如何使用 hex 编码进行配置。配置举例：</p><pre><code><span style="color:#6f42c1">Host</span><span style="color:#032f62">test1</span><span style="color:#6f42c1">QuestionAnswer1</span><span style="color:#032f62">答案一</span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test2</span><span style="color:#6f42c1">QuestionAnswer1</span><span style="color:#032f62">答案一</span><span style="color:#6f42c1">QuestionAnswer2</span><span style="color:#032f62">答案二</span><span style="color:#6f42c1">QuestionAnswer3</span><span style="color:#032f62">答案三</span><span style="color:#6f42c1">Host</span><span style="color:#032f62">test3</span><span style="color:#6f42c1">6e616d653a20</span><span style="color:#032f62">my_name  # 其中 `6e616d653a20` 是问题 `name: ` 的 hex 编码</span><span style="color:#6f42c1">636f64653a20</span><span style="color:#032f62">my_code  # 其中 `636f64653a20` 是问题 `code: ` 的 hex 编码</span></code></pre></li></ul><h2>可选配置</h2><ul><li><p style="margin-left:0; margin-right:0">支持在<span>&nbsp;</span><code>~/.tssh.conf</code>（ Windows 是<span>&nbsp;</span><code>C:\Users\your_name\.tssh.conf</code><span>&nbsp;</span>）中进行以下自定义配置：</p><div><div><pre><span><span style="color:#6a737d"># SSH 配置路径，默认为 ~/.ssh/config</span></span><span>ConfigPath = ~/.ssh/config</span><span><span style="color:#6a737d"># 扩展配置路径，默认为 ~/.ssh/password</span></span><span>ExConfigPath = ~/.ssh/password</span><span><span style="color:#6a737d"># trz 上传时，对话框打开的路径，为空时打开上次的路径， 默认为空</span></span><span>DefaultUploadPath = ~/Downloads</span><span><span style="color:#6a737d"># tsz 下载时，自动保存的路径，为空时弹出对话框手工选择，默认为空</span></span><span>DefaultDownloadPath = ~/Downloads</span></pre></div></div></li></ul><h2>其他功能</h2><ul><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>-f</code><span>&nbsp;</span>后台运行时，可以一并加上<span>&nbsp;</span><code>--reconnect</code><span>&nbsp;</span>参数，这样在后台进程因连接断开等而退出时，会自动重新连接。</p></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>--dragfile</code><span>&nbsp;</span>启用拖拽上传功能，想默认启用则可以在<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>配置的文件（ 默认是<span>&nbsp;</span><code>~/.ssh/password</code><span>&nbsp;</span>）中配置：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">*</span></span><span><span style="color:#6f42c1">EnableDragFile</span><span style="color:#032f62">Yes</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">使用<span>&nbsp;</span><code>-oEnableTrzsz=No</code><span>&nbsp;</span>禁用 trzsz 功能，想默认禁用则可以在<span>&nbsp;</span><code>ExConfigPath</code><span>&nbsp;</span>配置的文件（ 默认是<span>&nbsp;</span><code>~/.ssh/password</code><span>&nbsp;</span>）中配置：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">server1</span></span><span><span style="color:#6f42c1">EnableTrzsz</span><span style="color:#032f62">No</span></span></pre><div>
          &nbsp;
         </div></div></div></li><li><p style="margin-left:0; margin-right:0">上文说的 「记住密码」 和 「记住答案」，只要在配置项前面加上<span>&nbsp;</span><code>enc</code><span>&nbsp;</span>则可以配置密文，防止被人窥屏。密文可以解决密码含有<code>#</code>的问题。</p><p style="margin-left:0; margin-right:0">运行<span>&nbsp;</span><code>tssh --enc-secret</code>，输入密码或答案的明文（ 不会回显 ），可得到用于配置的密文（ 相同密码每次加密的结果不同 ）：</p><div><div><pre><span><span style="color:#6f42c1">Host</span><span style="color:#032f62">server2</span></span><span><span style="color:#6f42c1">encPassword</span><span style="color:#032f62">de88c4dbdc95d85303682734e2397c4d8dd29bfff09ec53580f31dd40291fc8c7755</span></span><span><span style="color:#6f42c1">encQuestionAnswer1</span><span style="color:#032f62">93956f6e7e9f2aef3af7d6a61f7046dddf14aa4bbd9845dbb836fe3782b62ac0d89f</span></span></pre></div></div></li></ul><h2>快捷键</h2><table cellspacing="0" style="-webkit-text-stroke-width:0px; border-collapse:collapse; border-spacing:0px; border:none; box-sizing:border-box; color:#606c71; display:block; font-family:&quot;Open Sans&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif; font-size:17.6px; font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:400; letter-spacing:normal; line-height:inherit; margin:0px 0px 20px; max-width:100%; orphans:2; overflow:auto; text-align:start; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; white-space:normal; widows:2; width:928px; word-break:keep-all; word-spacing:0px"><tbody><tr><th>操作</th><th>全局快捷键</th><th>非搜索快捷键</th><th>快捷键描述</th></tr></tbody><tbody><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Confirm</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Enter</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">确认并登录</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Quit/Exit</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Ctrl+C Ctrl+Q</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">q Q</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">取消并退出</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Move Prev</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Ctrl+K Shift+Tab ↑</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">k K</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">往上移光标</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Move Next</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Ctrl+J Tab ↓</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">j J</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">往下移光标</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Page Up</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Ctrl+H Ctrl+U Ctrl+B PageUp ←</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">h H u U b B</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">往上翻一页</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Page Down</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Ctrl+L Ctrl+D Ctrl+F PageDown →</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">l L d D f F</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">往下翻一页</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Goto Home</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Home</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">g</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">跳到第一行</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Goto End</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">End</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">G</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">跳到最尾行</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">EraseKeys</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Ctrl+E</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">e E</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">擦除搜索关键字</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">TglSearch</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">/</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">切换搜索功能</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Tgl Help</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">?</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">&nbsp;</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">切换帮助信息</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">TglSelect</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Ctrl+X Ctrl+Space Alt+Space</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Space x X</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">切换选中状态</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">SelectAll</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Ctrl+A</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">a A</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">全选当前页</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">SelectOpp</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Ctrl+O</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">o O</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">反选当前页</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Open Wins</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Ctrl+W</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">w W</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">新窗口批量登录</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Open Tabs</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Ctrl+T</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">t T</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">新 Tab 批量登录</td></tr><tr><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Open Pane</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">Ctrl+P</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">p P</td><td style="border-color:#e9ebec; border-style:solid; border-width:1px">分屏批量登录</td></tr></tbody></table><h2>故障排除</h2><ul><li><p style="margin-left:0; margin-right:0">如果你在使用 Windows7 或者旧版本的 Windows10 等，遇到<span>&nbsp;</span><code>enable virtual terminal failed</code><span>&nbsp;</span>的错误。</p><ul><li>可以尝试在<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.cygwin.com%2F" target="_blank">Cygwin</a>、<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.msys2.org%2F" target="_blank">MSYS2</a><span>&nbsp;</span>或<span>&nbsp;</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.atlassian.com%2Fgit%2Ftutorials%2Fgit-bash" target="_blank">Git Bash</a><span>&nbsp;</span>内使用<span>&nbsp;</span><code>tssh</code>。</li></ul></li></ul><h2>录屏演示</h2><p style="margin-left:0; margin-right:0"><img alt="" src="https://oscimg.oschina.net/oscnet/up-54f8b9038c71ec6266ed9ea132201d719a2.gif" referrerpolicy="no-referrer"></p><p style="margin-left:0; margin-right:0"><img height="500" src="https://oscimg.oschina.net/oscnet/up-8d4a7807c70fece1f4ad71aafa38e7ca261.gif" width="800" referrerpolicy="no-referrer"></p></div></div></div></div></div></div>
                                    ]]>
            </description>
            <pubDate>Thu, 26 Oct 2023 00:24:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263466/tssh-0-1-12</guid>
            <link>https://www.oschina.net/news/263466/tssh-0-1-12</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[百灵快传（B0Pass）大文件传输工具 v2.0.3 - 手机遥控演示 PPT 还不错哦]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><strong>新版本说明</strong>：应网友建议，给百灵快传开发一个「电脑遥控器」，刚开始我也很疑惑为什么需要电脑键盘远程遥控器。</p><p>后来了解场景可能是这样的：一个团队的大屏电脑安装百灵快传，开会的时候一群人围上来（技术探讨、晨会...），然后：</p><p>1. 每个人可以上传一个 PPT 或一批截图，然后潇洒的用手机遥控打开 PPT 或者截图，一步步翻页，想想还是挺爽的 :) ...</p><p>2. 包括 PPT、图片、视频、pdf 文档等等都可以这样远程操控。</p><p>所以更新 v2.0.3 版本，欢迎试用，欢迎大家大开脑洞，创造更多有意思的应用场景，让百灵快传更好用。</p><h2>1. 百灵快传 v2.0.3 更新日志</h2><ul><li>优化一些列功能体验和界面显示</li><li>支持向主电脑发送键盘和鼠标指令（主电脑为 windows 系统）</li></ul><table border="1" cellpadding="1" cellspacing="1" style="width:90%"><tbody><tr><td>专用手机 App</td><td>手机界面</td><td>电脑遥控器</td><td>按键反馈</td></tr><tr><td><p><img height="2400" src="https://oscimg.oschina.net/oscnet/up-5dcdb86e5ed09aa933843213f6690f12232.jpg" width="1080" referrerpolicy="no-referrer"></p></td><td><img height="2400" src="https://oscimg.oschina.net/oscnet/up-40ead9a62ae9e025be0de958af54b803d26.jpg" width="1080" referrerpolicy="no-referrer"></td><td><img height="2400" src="https://oscimg.oschina.net/oscnet/up-175f445c77d0be509a311a6ef78eba55111.jpg" width="1080" referrerpolicy="no-referrer"></td><td><img height="2400" src="https://oscimg.oschina.net/oscnet/up-2e80e4402ba1d26f69eeee21c603fb3257c.jpg" width="1080" referrerpolicy="no-referrer"></td></tr></tbody></table><h2><span>2.&nbsp;</span>发行版下载使用</h2><h3>下载前请阅读</h3><ul><li>已编译好<em><strong><span>&nbsp;</span>Windows、MacOS、Linux、Android</strong></em><span>&nbsp;</span>等平台的可执行文件</li><li>只需下载到电脑，双击开启即可使用</li><li>注意 1：建议不要安装到 「C:\Program Files (x86)」 等系统目录，否则需要右键 「以管理员身份运行」</li><li>注意 2：如果要自定义端口等配置，请修改<span>&nbsp;</span><code>config.ini</code><span>&nbsp;</span>文件</li></ul><div><div><pre><span><span style="color:#22863a">[gateway]</span></span><span><span style="color:#6f42c1">ListenAddr</span> = <span style="color:#032f62">":8888"</span><span style="color:#6a737d"># 配置 IP 和端口</span></span><span><span style="color:#6f42c1">Domain</span> = <span style="color:#032f62">"test.com:8888"</span><span style="color:#6a737d"># 可选配置，配置访问域名（若使用 80 端口或 nginx 代理，可忽略端口）</span></span><span><span style="color:#22863a">[pass]</span></span><span><span style="color:#6f42c1">Path</span> = <span style="color:#032f62">"files"</span><span style="color:#6a737d"># 文件管理根目录</span></span></pre></div></div><h3>最新版下载地址</h3><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2F4bit.cn%2Fp%2Fb0pass">https://4bit.cn/p/b0pass</a><span>&nbsp;</span><span style="color:#e74c3c">(项目官网，电脑端和安卓 App 直接下载)</span></li></ul><h2>3. 代码仓库</h2><ul><li><a href="https://gitee.com/link?target=https%3A%2F%2Fgithub.com%2Fbitepeng%2Fb0pass">https://github.com/bitepeng/b0pass</a><span>&nbsp;</span>GitHub（主库） 欢迎 star 支持</li><li><a href="https://gitee.com/b0cloud/b0pass">https://gitee.com/b0cloud/b0pass</a><span>&nbsp;</span>GitEE（国内同步） 欢迎 star 支持</li></ul><h2>4. 使用场景</h2><ul><li><p style="margin-left:0; margin-right:0"><em><strong>手机电脑共享文件</strong></em></p><p style="margin-left:0; margin-right:0">电脑上双击执行 -&gt; 手机扫码 -&gt; 手机、电脑文件可以互传。</p></li><li><p style="margin-left:0; margin-right:0"><em><strong>电脑之间共享文件</strong></em></p><p style="margin-left:0; margin-right:0">电脑 A 上双击执行 -&gt; 电脑 B 上浏览器输入 A 的地址 -&gt; 电脑 A、电脑 B 文件可以互传。</p></li><li><p style="margin-left:0; margin-right:0"><em><strong>虚拟机和电脑之间共享文件</strong></em></p><p style="margin-left:0; margin-right:0">电脑上双击执行 -&gt; 虚拟机上浏览器输入电脑的地址 -&gt; 虚拟机、电脑文件可以互传。</p></li><li><p style="margin-left:0; margin-right:0"><em><strong>更多使用场景</strong></em></p><p style="margin-left:0; margin-right:0">也可以用作 「家庭影音中心」、「办公室文件共享」、「产品原型服务器」 等。走局域网 HTTP 协议，Windows、MacOS、虚拟机、安卓、iPhone 等都可以跨平台共享文件。</p></li></ul><h2>5. 源码编译</h2><div><div><pre><span><span style="color:#6a737d"># 下载代码</span></span><span><span style="color:#6f42c1">git</span><span style="color:#032f62">clone https://github.com/bitepeng/b0pass.git</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 使用 go mod 更新依赖</span></span><span><span style="color:#6f42c1">go</span><span style="color:#032f62">mod tidy</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 开发运行</span></span><span><span style="color:#6f42c1">cd</span><span style="color:#032f62">main &amp;&amp; go run ./main.go</span></span><span style="color:#6a737d"></span><span><span style="color:#6a737d"># 编译运行开发版本</span></span><span><span style="color:#6f42c1">cd</span><span style="color:#032f62">main &amp;&amp; ./build.bat</span></span></pre></div></div></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 10:15:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263565/b0pass-2-0-3</guid>
            <link>https://www.oschina.net/news/263565/b0pass-2-0-3</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[OpenAI、谷歌微软等设立 1000 万美元 AI 安全基金]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">谷歌、微软、OpenAI 和 Anthropic <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fopenai.com%2Fblog%2Ffrontier-model-forum-updates" target="_blank">发布联合声明</a>，任命美国智库学会高管 Chris Meserole 为前沿模型论坛 (Frontier Model Forum) 首任执行董事。并宣布设立 1000 万美元的 AI 安全基金，「以推动正在进行的工具开发研究，帮助社会能够有效地测试和评估最有能力的 AI 模型。」</span></p><p><span style="color:#000000">前沿模型论坛由微软、OpenAI、谷歌和 Anthropic 在今年 7 月联合创立而成，是一个专注于确保安全和负责任地开发前沿人工智能模型的行业机构。该论坛旨在帮助：</span></p><ul><li><span style="color:#000000">推动人工智能安全研究，促进负责任地开发前沿模型并最大限度地降低潜在风险；</span></li><li><span style="color:#000000">确定前沿模型的安全最佳实践；</span></li><li><span style="color:#000000">与政策制定者、学术界、民间社会和其他方面分享知识，推动负责任的人工智能发展；</span></li><li><span style="color:#000000">以及<span style="background-color:#ffffff">大力支持开发有助于应对社会挑战的 AI 应用程序</span>。</span></li></ul><p><img height="243" src="https://oscimg.oschina.net/oscnet/up-08b8848cddef1c10504a853bad39c129725.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">公告指出，AI 安全基金<span style="background-color:#ffffff">将支持来自世界各地附属于学术机构、研究机构和初创公司的独立研究人员。初始资金来自 Anthropic、谷歌、微软和 OpenAI，以及其他慈善合作伙伴。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">基金的主要重点将在于，</span><span style="background-color:#ffffff">支持开发新的模型评估技术，以帮助开发和测试前沿系统潜在危险能力的评估技术。「我们相信，增加该领域的资金将有助于提高安全标准，并为行业、政府和民间社会应对 AI 系统带来的挑战所需的缓解和控制提供见解。&nbsp;」</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">该基金将在未来几个月内征集提案。</span>前沿模型论坛还计划<span style="background-color:#ffffff">成立一个顾问委员会，以帮助指导其战略和优先事项。</span></span></p><hr><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">1000 万美元不算小数目，但在 AI 安全研究的背景下以及与前沿模式论坛成员在商业活动上的花费相比，这一数目就「显得相当保守了」。科技媒体&nbsp;<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Ftechcrunch.com%2F2023%2F10%2F25%2Fai-titans-throw-a-tiny-bone-to-ai-safety-researchers%2F" target="_blank">TechCrunch</a> 指出，仅今年一年，Anthropic 就从亚马逊筹集了数十亿美元，用于开发下一代 AI 助手，此前谷歌也向其投资了 300 美元。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">且与其他 AI 安全基金相比，该基金的规模也很小。根据博客 Less Wrong 的</span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.lesswrong.com%2Fposts%2FWGpFFJo2uFe5ssgEb%2Fan-overview-of-the-ai-safety-funding-situation" target="_blank">分析</a><span style="color:#000000">，由 Facebook 创始人 (Dustin Moskovitz 联合创办的资助和研究基金会 Open Philanthropy 已为 AI 安全捐赠了约 3.07 亿美元。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">公益公司「The Survival and Flourishing Fund」也已向 AI 安全项目捐赠了约 3000 万美元。美国国家科学基金会表示，未来两年将斥资 2000 万美元用于 AI 安全研究，部分资金由 Open Philanthropy 资助。</span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000">「</span><span style="color:#000000">前沿模型论坛暗示下一步将成立一个规模更大的基金。如果这一目标实现，它可能有机会推动 AI 安全研究 —— 前提是我们相信该基金的明确营利性支持者不会对研究施加不当影响。但无论你如何划分，<strong>首批资金似乎都过于有限，无法取得多大成就。</strong></span><span style="color:#000000">」</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 08:40:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263552/frontier-model-forum-ai-safety</guid>
            <link>https://www.oschina.net/news/263552/frontier-model-forum-ai-safety</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Java 11 和 Java 17 使用率均超 Java 8]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">Java 软件供应商&nbsp;Azul <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.azul.com%2Fnewsroom%2Fazul-state-of-java-survey-report-2023-businesses-exploring-java-alternatives%2F" target="_blank">发布</a>了首份年度 Java 现状调查报告，基于对全球 2062 名 Java 专业人士和基于 Java 的应用程序用户进行的调查。调查探讨的领域包括 Java 采用趋势、Oracle 最新 Java 定价变化的影响、Java 应用程序向云的迁移以及公司如何优化云成本，以及常见漏洞和暴露 (CVE) 的安全注意事项。</span></p><p><span style="color:#000000"><img alt="" height="340" src="https://oscimg.oschina.net/oscnet/up-ae384b843fd1f2008ed4e7affed0c1bd24a.png" width="300" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">结果表明，<strong>Java 的采用依然强劲</strong>，98% 的受访者表示在他们的软件应用程序或基础架构中使用了 Java。其中 57% 的受访者表示，他们至少 60% 的应用程序是基于 Java 的；有&nbsp;<span style="background-color:#ffffff">66% 的公司为 Java 支持付费。</span></span></p><p><span style="color:#000000">2018 年 9 月发布的 Java 11 和 2020 年 9 月发布的 Java 17 是使用最广泛的 Java 版本，使用率分别为 48% 和 45%。其次是 2014 年 3 月发布的 Java&nbsp;8，使用率为 40%。<span style="background-color:#ffffff">85% 的受访者使用的是 LTS 版本的 Java，64% 的受访者使用了多个 Java 版本。</span></span></p><p><span style="color:#000000"><strong>Oracle 的 Java 市场份额正在下降</strong>。在使用 Oracle Java 的受访者中，82% 的人表示对 1 月份推出的新 Java SE 通用订阅定价模式感到担忧。受 Oracle 最新的定价政策影响，72% 的受访者表示他们正在考虑使用 OpenJDK 等开源替代品；而在没有考虑采用开源替代方案的受访者中，有 14% 的人表示，是因为他们没有想到可以这样做。</span></p><p><span style="color:#000000">但仅管如此，Oracle 仍然是 Java 市场的强大参与者。42% 的受访者表示他们仍然使用至少一个 Oracle Java 实例，不过其中 74% 的组织表示他们还使用至少一个 OpenJDK 供应商的 JDK。大约 60% 的公司选择了 OpenJDK 发行版而不是 Oracle Java SE。</span></p><p><span style="color:#000000"><strong>90% 的受访者在云环境中使用 Java</strong>：公有 (48%)、私有 (47%) 或混合 (40%)。云格局正在迅速转变，组织不断向云迈进，以实现可扩展性、灵活性、生产力和敏捷性，但成本和安全性仍然是两个主要挑战。</span></p><p><span style="color:#000000">近 70% 的公司表示，他们正在为至少 20% 的未使用云容量付费，「这是过度配置云资源的明显迹象」。<span style="background-color:#ffffff">95% 的公司在过去一年中采取了降低云成本的措施</span>，46% 的企业正在利用高性能 Java 平台更有效地使用云资源。</span></p><p><span style="color:#000000"><strong>Log4Shell 漏洞对组织产生了广泛的安全影响。</strong>近 80% 的受访者表示受到了 2021 年 Log4J 库漏洞的影响。近一半的公司在该漏洞出现后不得不分配额外的工程时间，30% 的公司受到尝试利用此漏洞的影响。</span></p><p><span style="color:#000000">近三分之二的调查受访者明确表示，第三方和开源应用程序及库是最令人担忧的 CVE 来源。其中 57% 的受访者将开源库和应用程序列为最令人担忧的 CVE 来源，51% 的受访者认为第三方库和应用程序是最令人担忧的 CVE 来源。</span></p><p><span style="color:#000000">更多详情可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.azul.com%2Freport%2F2023-state-of-java%2F" target="_blank">查看完整报告</a>。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 07:51:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263544/azul-state-of-java-survey-report-2023</guid>
            <link>https://www.oschina.net/news/263544/azul-state-of-java-survey-report-2023</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[腾讯混元大模型正式开放「文生图」功能、代码能力提升 20%]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.75)">今天上午，腾讯混元大模型迎来全新升级，<strong>并正式对外开放「文生图」功能</strong>。</span></p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1026/153337_LfTH_2720166.jpg" referrerpolicy="no-referrer"></p></blockquote><p>进入「腾讯混元助手」小程序即可使用腾讯混元大模型：</p><p><img height="754" src="https://static.oschina.net/uploads/space/2023/1026/165557_Bc0Q_2720166.png" width="400" referrerpolicy="no-referrer"></p><p><span style="background-color:#ffffff; color:rgba(0, 0, 0, 0.75)"><u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2Fu0AGtpwm_LmgnDY7OQhKGg" target="_blank">官方公告称</a></u>，升级后的腾讯混元中文效果整体超过 GPT-3.5，<strong>代码能力大幅提升 20%</strong>，达到业界领先水平。</span></p><p>据介绍，经过对 32 种主流语言代码文件、各类计算机书籍和博客的学习增训，腾讯混元代码处理水平提升超过 20%，代码处理效果胜出 ChatGPT 6.34%，在 HumanEval 公开测试集指标上全面超过 Starcoder、Codellama 等业界头部开源代码大模型。</p><p>只需输入简单的指令如「帮我用前端语言实现一个贪吃蛇」，腾讯混元便能自动生成可运行的代码，快速制作出一个贪吃蛇小游戏。此外，腾讯混元还支持 Python、C++、Java、JavaScript 等多种语言的指令生成，比如输入「用 Python 画红色的心形线」，腾讯混元会提供代码库选择、安装命令、绘制代码等具体操作步骤的指引。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-74216bf9be5ab9c4baadcbe9551410b8953.png" referrerpolicy="no-referrer"></p><p>对于大模型文生图功能，腾讯称其难点体现在<strong>对提示词的语义理解，生成内容的合理性以及生成图片的效果</strong>。针对这三个技术难点，腾讯进行了专项的技术研究，提出了一系列原创算法，来保证生成图片的可用性和画质。</p><p>1、<strong>在语义理解方面，腾讯混元采用了中英文双语细粒度的模型</strong>，模型同时建模中英文实现双语理解，而不是通过翻译，通过优化算法提升了模型对细节的感知能力与生成效果，有效避免多文化差异下的理解错误。</p><p>2、<strong>在内容合理性方面</strong>，AI 生成人体结构和手部经常容易变形。<strong>混元文生图通过增强算法模型的图像二维空间位置感知能力</strong>，并讲人体骨架和人手结构等先验信息引入到生成过程中，让生成的图像结构更合理，减少错误率。</p><p>3、<strong>在画面质感方面，混元文生图基于多模型融合的方法，提升生成质感</strong>。经过模型算法的优化之后，混元文生图的人像模型，包含发丝、皱纹等细节的效果提升了 30%，场景模型，包含草木、波纹等细节的效果提升了 25%。</p><hr><p>下面是官方提供的「腾讯混元文生图」使用案例。</p><ul><li>生成一幅照片：亚洲女子，魅力，中短发，戴墨镜，站在长城上，背景有红叶</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-68d0953d2980101a5d24fe95c964a701946.png" referrerpolicy="no-referrer"></p><ul><li>生成一张长城的照片，摄影风，真实感</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3d745e8069507f0664da26f405ccddc4bc5.png" referrerpolicy="no-referrer"></p><ul><li>帮我画一个拿着奶茶的甄嬛，扁平插画，可爱 Q 版</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-b61d22330c53d477f4669f355753becd266.png" referrerpolicy="no-referrer"></p><ul><li>生成 3D 游戏军事场景动漫，城市战区，废墟瓦砾，焦黑的建筑，空气中弥漫硝烟</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-f900d701ddb927a9b2fdb40caa870f9d736.png" referrerpolicy="no-referrer"></p><ul><li>画一幅渔舟唱晚的画</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-58f36165a591c6630cd605fb7afb63f5e47.png" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 07:46:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263543</guid>
            <link>https://www.oschina.net/news/263543</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[ChatGPT 更新「知识」数据，截至 2023 年 4 月]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>ChatGPT 刚刚宣布，其「知识」数据已进行更新，当前的知识截止日期是 2023 年 4 月。</p><p><img height="786" src="https://static.oschina.net/uploads/space/2023/1026/143656_e72e_2720166.png" width="1651" referrerpolicy="no-referrer"></p><p>注意，此次知识数据更新仅面向 GPT-4 版本提供。</p><p>ChatGPT 官方提供了如下示例。</p><p>提问：<strong>请列出最近发生的 10 次灾难，以及在您的知识截止日期前的伤亡人数。灾难至少应始于 2022 年之后。</strong></p><blockquote><p>Here are 10 significant catastrophes that occurred after 2022, up to my knowledge cutoff in April 2023, along with their associated casualties:</p><ol><li><p><strong>Earthquake in Turkey and Syria (February 6, 2023):</strong> This devastating earthquake, with a magnitude of 7.8, struck southeastern Turkey and northern Syria, leading to widespread destruction. The death toll exceeded 47,000 people, making it one of the deadliest earthquakes in recent history.</p></li><li><p><strong>Floods in Brazil (January 2023):</strong> Severe floods and landslides hit the state of São Paulo in Brazil, resulting in over 50 deaths. Several cities, including São Sebastião and Ubatuba, were significantly impacted.</p></li><li><p><strong>Train Derailment in Greece (March 1, 2023):</strong> A passenger train and a freight train collided in central Greece, near the city of Larissa, causing the death of at least 57 people.</p></li><li><p><strong>Earthquake in Afghanistan (June 22, 2022):</strong> A powerful earthquake with a magnitude of 5.9 struck eastern Afghanistan, particularly affecting the Paktika and Khost provinces. The catastrophe resulted in the death of over 1,000 people.</p></li><li><p><strong>Floods in Pakistan (Mid-2022):</strong> Monsoon floods in Pakistan, particularly severe in the Sindh and Balochistan provinces, led to the deaths of over 1,000 people and displaced millions.</p></li><li><p><strong>Tornado Outbreak in the United States (March 2023):</strong> A series of tornadoes swept across several states in the U.S., including Mississippi, Alabama, and Georgia. The outbreak caused at least 25 fatalities.</p></li><li><p><strong>Ferry Fire in the Philippines (March 28, 2023):</strong> A fire broke out on a ferry in the Philippines, leading to at least 31 deaths. The incident occurred near the island of Basilan.</p></li><li><p><strong>Typhoon Noru in the Philippines (September 2022):</strong> This powerful typhoon, also known as Karding, caused widespread destruction in the Philippines, resulting in the deaths of at least 8 people.</p></li><li><p><strong>Landslides in Peru (January 2023):</strong> Heavy rains triggered landslides in the Cusco region of Peru, leading to at least 36 deaths. The town of Santa Teresa, near the tourist attraction Machu Picchu, was particularly affected.</p></li><li><p><strong>Cyclone Gabrielle in New Zealand (February 2023):</strong> This powerful cyclone caused significant flooding and landslides in New Zealand's North Island, leading to at least 11 deaths.</p></li></ol><p>Please note that the number of casualties and the impact of these catastrophes might have changed after my last update in April 2023.</p></blockquote><p>via <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fchat.openai.com%2Fshare%2F3b088460-86f8-4fa6-afd1-802b7f9a5e9f" target="_blank">https://chat.openai.com/share/3b088460-86f8-4fa6-afd1-802b7f9a5e9f</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 06:39:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263533</guid>
            <link>https://www.oschina.net/news/263533</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Vercel 为]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>一个多月前，Vercel <a href="https://www.oschina.net/news/258259/v0-dev-by-vercel">推出</a>根据文本生成 UI 界面代码的新产品：v0，官方称其为<strong>「生成式 UI」 (Generative UI)</strong>。</p><p><img alt="https://static.oschina.net/uploads/space/2023/0915/154136_ygaU_2720166.png" src="https://static.oschina.net/uploads/space/2023/0915/154136_ygaU_2720166.png" referrerpolicy="no-referrer"></p><p>只需要输入文字提示，v0 即可生成需要的 UI 组件界面，而且可以直接复制代码粘贴到需要使用的任何地方。</p><p><strong>主要特性</strong></p><ul><li>即时生成：可以根据用户的文本提示即时生成 UI 组件，这为用户提供了快速的实时反馈和迭代能力。</li><li>支持实时修改：通过提供更具体和详细的提示来获得更精确的结果。</li><li>简单易用：用户只需提供简单的文本提示，无需复杂的设计或编程知识。</li><li>集成多种组件：提供了多种 UI 组件的示例，如音乐播放器、发票表格等，这为用户提供了丰富的选择。</li></ul><p><img alt="" src="https://static.oschina.net/uploads/space/2023/0915/153904_iXi8_2720166.png" referrerpolicy="no-referrer"></p><p>Vercel 近日<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fvercel.com%2Fblog%2Fannouncing-v0-generative-ui" target="_blank">宣布</a></u> v0 已从 Alpha 过渡到 Beta，向 5000 名用户开放了访问权限，并为想要解锁 v0 完整功能集的用户推出订阅计划——包含 4 档级别：</p><ul><li><strong>Free</strong>: $0 per month includes 200 credits</li><li><strong>Basic</strong>: $10/month includes 1,500 credits</li><li><strong>Standard</strong>: $30/month includes 5,000 credits</li><li><strong>Premium</strong>: $50/month includes 10,000 credits</li></ul></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 06:28:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263528/v0-generative-ui</guid>
            <link>https://www.oschina.net/news/263528/v0-generative-ui</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Ubuntu 24.04 发布日期定为 2024 年 4 月 25 日]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">Ubuntu 的下一个长期支持 (LTS) 版本 Ubuntu 24.04 的最终发布日期已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Flaunchpad.net%2Fubuntu%2Fnoble" target="_blank">确定</a>，计划于 2024 年 4 月 25 日发布。</span></p><p><span style="color:#000000">除此之外，Ubuntu 24.04 的功能冻结阶段定于 2024 年 2 月 29 日；Ubuntu 24.04 beta 计划于 2024 年 4 月 4 日发布。</span></p><p><span style="color:#000000">目前尚未知晓 Ubuntu 24.04 版本的具体代号，<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.omgubuntu.co.uk%2F2023%2F10%2Fubuntu-24-04-release-date-set-for-april-25-2024" target="_blank">OMG! Ubuntu</a> 认为，其可能会在 11 月初于拉脱维亚里加举行的 2023 年 Ubuntu 峰会上正式宣布。但已知的是，其代号的前半部分为「Noble」。</span></p><p><img height="303" src="https://oscimg.oschina.net/oscnet/up-3ba65917ba444a9427e968bdf7618fbc210.png" width="700" referrerpolicy="no-referrer"></p><p><span style="color:#000000">Ubuntu 的 LTS 版本将获得 5 年的安全更新、错误修复和精选应用程序更新。Ubuntu Pro 则会在此基础上额外增加 5 年的安全保障，为现代的 LTS 版本提供了长达十年的支持。</span></p><p><span style="color:#000000">Ubuntu 24.04 将是 Ubuntu 自 2006 年以来的第 10 个 LTS 版本，不过迄今为止对 Ubuntu 24.04 中将包含的新功能和改进知之甚少。但 Noble 大概率会采用 GNOME 46，并且会提供一个新的 Linux 内核。此外，我们还将看到首个正式发布的全 Snap 不可变 Ubuntu 桌面镜像。</span></p><p><span style="color:#000000">有关 Ubuntu 24.04 LTS 的更多信息，可关注未来几个月的后续更新。</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 06:25:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263525/ubuntu-24-04-release-date-april-25-2024</guid>
            <link>https://www.oschina.net/news/263525/ubuntu-24-04-release-date-april-25-2024</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[每日一博 | POSIX 真的不适合对象存储吗？]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="news_comment_top_ad" data-tracepid="news_comment_top" style="text-align: center;"><a style="color:#A00;font-weight:bold;" href="https://www.oschina.net/event/2331193" target="_blank">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p>最近，留意到 MinIO 官方博客的一篇题为「<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fblog.min.io%2Ffilesystem-on-object-store-is-a-bad-idea%2F" target="_blank">在对象存储上实现 POSIX 访问接口是坏主意</a>」的文章，作者以 S3FS-FUSE 为例分享了通过 POSIX 方式访问 MinIO 中的数据时碰到了性能方面的困难，性能远不如直接访问 MinIO。在对结果进行分析时，作者认为是 POSIX 本身存在的缺陷导致的性能问题。这个结论与我们既有经验有一定出入。</p><p>我们知道 POSIX 是一个有用而且广泛应用的标准，遵循它而开发的程序可以保证不同操作系统之间的兼容性和可移植性。各行各业中常用的业务系统和应用程序，大多遵循 POSIX 标准。</p><p>随着云计算、大数据、人工智能等技术的发展和数据存储量的攀升，本地化应用也逐渐产生对对象存储等弹性存储的需求，MinIO 等对象存储虽然提供了各种语言的 SDK，但许多传统应用很难甚至无法修改代码去适配对象存储的访问接口，这促使很多存储产品在对象存储的基础上去实现 POSIX 接口来满足这样的刚性需求。</p><p>业内在对象存储上实现 POSIX 接口的产品有很多，比如 Ceph、JuiceFS、Weka 等，它们都有广泛的用户群和大量的成功案例，在性能方面也都有不错的表现。</p><p>诚然，我们认可 POSIX 存在较大的复杂性，需要付出很大的努力才能解决好相关的问题，但这些问题并不是无法解决。抱着尊重和求证的态度，我搭建了测试环境，采用相同的样本和测试方法，进行了一番验证。</p><h2>测试项目</h2><p>为了得到更为全面的测试结果，我将 JuiceFS 引入了对比。</p><p>JuiceFS 是开源的云原生分布式文件系统，它采用对象存储作为数据存储层，采用独立的数据库存储元数据。提供了包括 POSIX API、S3 API、CSI Driver、HDFS API、WebDAV 在内的多种访问方式，具有独特的数据分块、缓存和并发读写机制。JuiceFS 是文件系统，与 s3fs-fuse 等只提供简单的从对象存储到 POSIX 协议转换的工具有着本质的不同。</p><p>通过将 JuiceFS 引入对比，可以更为客观地求证以对象存储为底层实现 POSIX 等协议的利弊。</p><p>在本文中，我会对 MinIO、JuiceFS 和 s3fs-fuse 进行以下两项测试：</p><ol><li><p>10GB 大文件的写入测试</p></li><li><p>Pandas 小文件覆盖写测试</p></li></ol><p>在底层存储方面，它们均使用部署在独立服务器上的 MinIO 实例；在测试样本方面，10GB 文件会采用那篇文章中使用的 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdata.cityofnewyork.us%2Fapi%2Fviews%2Ft29m-gskq%2Frows.csv%3FaccessType%3DDOWNLOAD" target="_blank">csv</a> 文件。</p><blockquote><p>本文所提及的环境、软件、脚本、样本数据等均提供完整的代码和说明，确保读者可以复现环境和测试结果。</p></blockquote><h2>服务器及测试环境准备</h2><p>两台配置相同的云服务器：</p><ul><li>System: Ubuntu 22.04 x64</li><li>CPU: 8 cores</li><li>RAM: 16GB</li><li>SSD: 500GB</li><li>Network: VPC</li></ul><p>每台服务器的信息如下：</p><table><thead><tr><th align="left">Server</th><th>IP</th><th>For</th></tr></thead><tbody><tr><td align="left">Server A</td><td>172.16.254.18</td><td>MinIO Instance</td></tr><tr><td align="left">Server B</td><td>172.16.254.19</td><td>Test Environment</td></tr></tbody></table><h3>Server A 的准备工作</h3><p>1.我在 Server A 上通过 Docker 部署了 MinIO，命令如下：</p><pre><code class="language-bash"># 创建并进入专用目录
mkdir minio &amp;&amp; cd minio

# 创建配置文件
mkdir config
touch config/minio
</code></pre><p><code>config/minio</code> 文件中写入以下信息：</p><pre><code class="language-bash">MINIO_ROOT_USER=admin
MINIO_ROOT_PASSWORD=abc123abc
MINIO_VOLUMES="/mnt/data"
</code></pre><p>2.创建 MinIO 容器：</p><pre><code class="language-bahs">sudo docker run -d --name minio \
  -p 9000:9000 \
  -p 9090:9090 \
  -v /mnt/minio-data:/mnt/data \
  -v ./config/minio:/etc/config.env \
  -e "MINIO_CONFIG_ENV_FILE=/etc/config.env" \
  --restart unless-stopped \
  minio/minio server --console-address ":9090"
</code></pre><p>3.在 MinIO 的 Web Console 中预先创建三个 buckets：</p><table><thead><tr><th align="left">Bucket Name</th><th align="left">目的</th></tr></thead><tbody><tr><td align="left">test-minio</td><td align="left">用于测试 MinIO</td></tr><tr><td align="left">test-juicefs</td><td align="left">用于测试 JuiceFS</td></tr><tr><td align="left">test-s3fs</td><td align="left">用于测试 s3fs-fuse</td></tr></tbody></table><h3>Server B 的准备工作</h3><p>下载 10GB 测试样本文件</p><pre><code class="language-bash">curl -LO https://data.cityofnewyork.us/api/views/t29m-gskq/rows.csv?accessType=DOWNLOAD
</code></pre><p>2.安装 mc 客户端</p><p>mc 是 MinIO 项目开发的命令行文件管理器，可以在 Linux 命令行读写本地以及 S3 兼容的对象存储。mc 的 cp 命令可以实时显示数据拷贝的进度和速度，便于观察各项测试。</p><blockquote><p>注：为了保持测试的公平性，三种方案均采用 mc 进行写测试。</p></blockquote><pre><code class="language-bash"># 下载 mc
wget https://dl.min.io/client/mc/release/linux-amd64/mc

# 检查版本
mc -v
mc version RELEASE.2023-09-20T15-22-31Z (commit-id=38b8665e9e8649f98e6162bdb5163172e6ecc187)
Runtime: go1.21.1 linux/amd64

# 安装 mc
sudo install mc /usr/bin

# 为 MinIO 添加别名
mc alias set my http://172.16.254.18:9000 admin abc123abc
</code></pre><p>3.安装 s3fs-fuse</p><pre><code class="language-bash">sudo apt install s3fs

# 检查版本
s3fs --version
Amazon Simple Storage Service File System V1.93 (commit:unknown) with OpenSSL

# 设置对象存储访问密钥
echo admin:abc123abc &gt;  ~/.passwd-s3fs

# 修改密钥文件权限
chmod 600  ~/.passwd-s3fs

# 创建挂载目录
mkdir mnt-s3fs

# 挂载对象存储
s3fs test-s3fs:/ /root/mnt-s3fs -o url=http://172.16.254.18:9000 -o use_path_request_style
</code></pre><p>4.安装 JuiceFS</p><p>这里使用官方提供的脚本安装最新的 JuiceFS 社区版</p><pre><code class="language-bash"># 一键安装脚本
curl -sSL https://d.juicefs.com/install | sh -

# 检查版本
juicefs version
juicefs version 1.1.0+2023-09-04.08c4ae6
</code></pre><p>JuiceFS 是文件系统，需要先创建才能使用。除了对象存储，还需要一个数据库作为元数据引擎，支持多种数据库，这里使用较常用的 Redis 作为元数据引擎。</p><blockquote><p>注：我在这里将 Redis 安装在 Server A，通过 172.16.254.18:6379 进行访问，无密码，安装过程略，详情参考 Redis 官方文档。</p></blockquote><pre><code class="language-bash"># 创建文件系统
juicefs format --storage minio \
--bucket http://172.16.254.18:9000/test-juicefs \
--access-key admin \
--secret-key abc123abc \
--trash-days 0 \
redis://172.16.254.18/1 \
myjfs
</code></pre><p>5.另外，我会同时以较为常用的 POSIX 和 S3 API 两种方式访问 JuiceFS 并分别测试它们的性能。</p><pre><code class="language-bash"># 创建挂载目录
mkdir ~/mnt-juicefs

# 以 POSIX 方式挂载文件系统
juicefs mount redis://172.16.254.18/1 /root/mnt-juicefs

# 以 S3 API 方式访问文件系统
export MINIO_ROOT_USER=admin
export MINIO_ROOT_PASSWORD=abc123abc
juicefs gateway redis://172.16.254.18/1 0.0.0.0:9000

# 在 mc 中为 JuiceFS S3 API 添加别名
mc alias set juicefs http://172.16.254.18:9000 admin abc123abc
</code></pre><blockquote><p>注：JuiceFS Gateway 也可以部署在 Server A 或其他任何可联网服务器上，因为它开放的是基于网络访问的 S3 API。</p></blockquote><h2>测试及结果</h2><h3>测试一：10GB 文件写入测试</h3><p>这项测试用来评估写大文件的性能，耗时越短性能越好。这里会使用 time 命令统计写入耗时，结果会包含三个指标：</p><ul><li><p><strong>real</strong>：从命令开始到结束的实际时间。它包括了所有的等待时间，例如等待 I/O 操作完成、等待进程切换、等待资源等。</p></li><li><p><strong>user</strong>：在用户态（用户模式）执行的时间，也就是 CPU 用于执行用户代码的时间。它通常表示命令的计算工作量。</p></li><li><p><strong>sys</strong>：在内核态（系统模式）执行的时间，也就是 CPU 用于执行内核代码的时间。它通常表示命令与系统调用（如文件 I/O、进程管理等）相关的工作量。</p></li></ul><h4>MinIO</h4><pre><code class="language-bash"># 执行拷贝测试
time mc cp ./2018_Yellow_Taxi_Trip_Data.csv  my/test-minio/
</code></pre><p>MinIO 直写 10 GB 文件的测试结果：</p><pre><code class="language-bahs">
real 0m27.651s
user 0m10.767s
sys 0m5.439s
</code></pre><h4>s3fs-fuse</h4><pre><code class="language-bash"># 执行拷贝测试
time mc cp ./2018_Yellow_Taxi_Trip_Data.csv /root/mnt-s3fs/
</code></pre><p>s3fs-fuse 写 10 GB 文件的测试结果：</p><pre><code class="language-bash">
real 3m6.380s
user 0m0.012s
sys 0m5.459s
</code></pre><blockquote><p>注：虽然写入耗时 3 分零 6 秒，但并没有出现那篇文章所谓写入失败的情况。</p></blockquote><h4>JuiceFS POSIX 和 S3 API</h4><p>分别测试 JuiceFS 的 POSIX 和 S3 API 的大文件写性能：</p><pre><code class="language-bash"># POSIX 写测试
time mc cp ./2018_Yellow_Taxi_Trip_Data.csv /root/mnt-juicefs/

# S3 API 写测试
time mc cp ./2018_Yellow_Taxi_Trip_Data.csv  juicefs/myjfs/

</code></pre><p>JuiceFS POSIX 写 10 GB 文件的测试结果：</p><pre><code class="language-bash">
real 0m28.107s
user 0m0.292s
sys 0m6.930s
</code></pre><p>JuiceFS S3 API 写 10GB 文件的测试结果：</p><pre><code class="language-bash">real 0m28.091s
user 0m13.643s
sys 0m4.142s
</code></pre><h4>大文件写结果总结</h4><p><img src="https://oscimg.oschina.net/oscnet/up-173c5df31eb67e8ef11190f6d753f102a5e.png" alt="" referrerpolicy="no-referrer"></p><p>从测试结果来看，直接写 MinIO 和 JuiceFS 的性能相当，均可在 30s 内完成，而 s3fs-fuse 写入 10GB 文件耗时 3 分钟以上，平均比前两者慢了 6 倍左右。</p><p>在写入大文件时，mc 会使用 Multipart API 来将文件分块上传到 S3 接口，而只能单线程写入到 POSIX。JuiceFS 在大文件的顺序写也会自动将文件分块并并发写入到 MinIO 中，因此与直接写 MinIO 性能相当。而 S3FS 默认先是单线程写入到缓存盘，然后再分块写入到 MinIO 中，这会耗费更多写入时间。</p><p>按照写 10GB 文件耗时 30 秒计算，平均速度为 333 MB/s，这是云服务器 SSD 的带宽限制，测试结果表明，MinIO 和 JuiceFS 都能打满本地 SSD 的带宽，它们的性能会随着服务器云盘和网络带宽的提升而提升。</p><h3>测试二：Pandas 小文件覆盖写</h3><p>这项测试主要用来评估对象存储在小文件覆盖写方面的性能，各个软件的测试脚本略有不同，你可以在<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fgist.github.com%2Fyuhr123%2F7acb7e6bb42fb0ff12f3ba64d2cdd7da" target="_blank">这里</a>找到所有脚本代码。</p><pre><code class="language-bash">
# 获取测试脚本
curl -LO https://gist.githubusercontent.com/yuhr123/7acb7e6bb42fb0ff12f3ba64d2cdd7da/raw/30c748e20b56dec642a58f9cccd7ea6e213dab3c/pandas-minio.py

# 执行测试
python3 pandas-minio.py
</code></pre><p>测试结果：</p><pre><code class="language-bash">
Execution time: 0.83 seconds
</code></pre><h4>s3fs-fuse</h4><pre><code class="language-bash">
# 获取测试脚本
curl -LO gist.githubusercontent.com/yuhr123/7acb7e6bb42fb0ff12f3ba64d2cdd7da/raw/30c748e20b56dec642a58f9cccd7ea6e213dab3c/pandas-s3fs.py

# 执行测试
python3 pandas-s3fs.py
</code></pre><p>测试结果：</p><pre><code class="language-bash">Execution time: 0.78 seconds
</code></pre><h4>JuiceFS POSIX</h4><pre><code class="language-bash"># 获取测试脚本
curl -LO gist.githubusercontent.com/yuhr123/7acb7e6bb42fb0ff12f3ba64d2cdd7da/raw/30c748e20b56dec642a58f9cccd7ea6e213dab3c/pandas-juicefs-posix.py

# 执行测试
python3 pandas-juicefs-posix.py
</code></pre><p>测试结果：</p><pre><code class="language-bash">Execution time: 0.43 seconds
</code></pre><h4>JuiceFS S3 API</h4><pre><code class="language-bash"># 获取测试脚本
curl -LO https://gist.githubusercontent.com/yuhr123/7acb7e6bb42fb0ff12f3ba64d2cdd7da/raw/30c748e20b56dec642a58f9cccd7ea6e213dab3c/pandas-juicefs-s3api.py

# 执行测试
python3 pandas-juicefs-s3api.py
</code></pre><p>测试结果：</p><pre><code class="language-bash">Execution time: 0.86 seconds
</code></pre><h4>Pandas 小文件覆盖写结果总结</h4><p><img src="https://oscimg.oschina.net/oscnet/up-5b3aa52d25367600d2ed77d28758cccf647.png" alt="" referrerpolicy="no-referrer"></p><p>在这项测试中，JuiceFS FUSE-POSIX 的速度最快，几乎是其他方案的 2 倍。MinIO、s3fs-fuse、JuiceFS S3 Gateway 的速度相当。从小文件覆盖写的角度来看，POSIX 接口效率更高，比对象存储接口有更好的性能表现。</p><h3>测试结果</h3><table><thead><tr><th align="left"></th><th align="right">MinIO</th><th align="right">S3FS-FUSE</th><th align="right">JuiceFS (FUSE)</th><th align="right">JuiceFS (s3 gateway)</th></tr></thead><tbody><tr><td align="left">10GB 大文件写</td><td align="right">0m27.651s</td><td align="right">3m6.380s</td><td align="right">0m28.107s</td><td align="right">0m28.091s</td></tr><tr><td align="left">Pandas 小文件覆盖写</td><td align="right">0.83s</td><td align="right">0.78s</td><td align="right">0.46s</td><td align="right">0.96s</td></tr></tbody></table><h2>分析和总结</h2><p><strong>问题一：S3FS 为什么这么慢？</strong></p><p>从测试数据可以清楚地看到，写入同样的 10GB 大文件，S3FS 需要 3 分钟，而 MinIO 和 JuiceFS 只需要 30 秒左右，速度相差近 6 倍，这主要是由于不同的技术实现导致的。</p><p>s3fs-fuse 在写入文件时，会优先写入本地临时文件，然后以分片方式上传对象存储。如果本地磁盘空间不足，则会以同步的方式上传。因为它需要在本地磁盘和 S3 存储之间进行数据复制，在处理大文件或大量文件时就会导致性能下降。</p><p>再者，S3FS 依赖底层对象存储的元数据管理能力，当需要读写大量文件时，频繁地与对象存储交互获取元数据也会对性能产生很大的影响。</p><p>简单来说，写入 S3FS 的文件体积和总量越大，相应的性能开销也会成比例地放大。</p><p><strong>问题二：JuiceFS 为什么更快？</strong></p><p>同样是通过 FUSE 进行读写，为什么 JuiceFS 可以与 MinIO 一样打满磁盘带宽，而没有像 S3FS 那样出现性能问题呢？这同样也是由技术架构决定的。</p><p>在写入文件时，数据虽然也经由 FUSE 层处理，但 JuiceFS 通过高并发、缓存、数据分块等技术降低了与底层对象存储之间的通信开销，一次性处理更多文件的读写请求，从而减少了等待时间和传输延迟。</p><p>另外，JuiceFS 采用独立的数据库（在本文中使用了 Redis）管理元数据，当文件量特别大时，独立的元数据引擎能有效释放压力，可以更快地定位文件位置。</p><h3>结论</h3><p>以上数据表明，把对象存储作为底层，在其上实现 POSIX 接口不一定会损失性能，不论是写大文件还是小文件，JuiceFS 的性能与直接写 MinIO 是相当的，并没有因为访问 POSIX 而损失底层对象存储的性能。而在 Pandas 表格覆盖写方面，JuiceFS FUSE-POSIX 的性能不降反升，超过 MinIO 近两倍。</p><p>从测试结果不难发现，某些软件（例如 s3fs-fuse）将 S3 API 与 POSIX 接口相互转换可能会导致对象存储的性能损失，但它不失为一款还算方便的临时访问 S3 的小工具，但要想长期稳定的高性能使用，需要通过更为审慎的调研和验证来选择其他更适的方案。</p><p>简单的非结构化文件归档存储，直接使用 MinIO 或云上对象存储是不错的选择。而对于需要进行大规模数据存储和处理，如 AI 模型训练、大数据分析和 Kubernetes 数据持久化等频繁读写的场景，JuiceFS 的独立元数据管理、并发读写和缓存机制会带来更好的性能表现，是更值得尝试的高性能文件系统解决方案。</p><p>希望这篇内容能够对你有一些帮助，如果有其他疑问欢迎加入 <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjuicefs.com%2F" target="_blank">JuiceFS 社区</a>与大家共同交流。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 06:16:00 GMT</pubDate>
            <guid isPermaLink="false">https://my.oschina.net/u/5389802/blog/10123104</guid>
            <link>https://my.oschina.net/u/5389802/blog/10123104</link>
            <author>
                <![CDATA[原创]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[香橙派 Orange Pi OS (OH) 即将发布，开源鸿蒙 PC 端]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>香橙派官方<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FhcrF9uYR8yHQX6bpM1K0qg" target="_blank">发文称</a></u>，基于 OpenHarmony 定制研发的 Orange Pi OS（OH）即将发布！</p><p>日前，迅龙开源鸿蒙的工程师团队已经在搭载 RK3566 的开发板 Orange Pi 3B 上完成了 Orange Pi OS(OH) 对 PC 的初步适配，<strong>这是国内首次将开源鸿蒙操作系统运行在 PC 设备上</strong>，意味着迅龙软件将领先于华为、深开鸿等，在业内率先推出 PC 端的开源鸿蒙系统。</p><h3><strong><strong><strong>完成</strong></strong>OpenHarmony<strong><strong>对</strong></strong>PC 的适配</strong></h3><p>Orange Pi OS(OH) 已经完成了 HDMI 适配、5 寸 LCD 显示屏适配、触摸功能适配、定制化的系统应用、开机动画、主题、壁纸、设置、文件管理器等，支持十几种 hap 应用。</p><p>从相关演示可见，此次适配已经支持设备的正常开关机，原创应用包括任务栏、控制中心、设置、文件管理器、输入法、浏览器、播放器、应用商城等，具备运行热门 App 等基础功能，可以满足基本的办公、娱乐需求。</p><ul><li>控制中心</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-ad5a2e133c95acf0ea0b468fead31a679ac.png" referrerpolicy="no-referrer"></p><ul><li>文件管理器</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-0e48dc6012686d69b04cca4c32efd239067.png" referrerpolicy="no-referrer"></p><ul><li>应用展示</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3f71537b302f1b7b495b56a2fd8c2c36bd1.png" referrerpolicy="no-referrer"></p><ul><li>应用市场</li></ul><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-a872248edc51ee489418d3878731c181e91.png" referrerpolicy="no-referrer"></p><h3><strong>首先适配<strong><strong>Orange Pi 3B</strong></strong>、Orange Pi</strong><strong>5/5 Plus</strong></h3><p>按照计划，Orange Pi OS(OH) 将首先适配三款设备：</p><ul><li>搭载 RK3566 的开发板 Orange Pi 3B</li><li>搭载 RK3588S 的开发板 Orange Pi 5</li><li>搭载 RK3588 的开发板 Orange Pi 5 Plus</li></ul><p>三款设备均采用 ARM 架构的 CPU。</p><p>而最先适配的是 Orange Pi 3B。Orange Pi 3B 采用了瑞芯微 RK3566 四核 64 位处理器，22nm 先进工艺，主频最高可达 1.8GHz，集成 ARM Mali G52 2EE 图形处理器，内置 0.8Tops 算力的 AI 加速器 NPU，拥有 2GB/4GB/8GB（LPDDR4/4X），支持 16GB /32GB/ 64GB/128GB /256GB 的 eMMC 模块、支持 16MB/32MB SPI Flash，具有 Wi-Fi5、BT5.0，支持 BLE。</p><p>Orange Pi 3B 引用了相当丰富的接口，包括 HDMI 输出、M.2 M-KEY（可选）、TF 卡槽、千兆网口、USB2.0、USB3.0、3.5mm 耳机插孔、MIPI DSI 接口、eDP 接口、MIPI CSI 摄像头接口、多功能 40 Pin 扩展接口等，可广泛适用于电视盒子、高端平板、边缘计算、人脸识别、智能安防、智能家居等领域，赋能丰富的 AI 应用和物联网场景。</p><p>在操作系统上，Orange Pi 3B 支持 Android11、Ubuntu22.04、Ubuntu20.04、Debian11、Debian12、开源鸿蒙 4.0 Beta1、Orange Pi OS（Arch）、基于开源鸿蒙的 Orange Pi OS（OH）等操作系统。</p><p><img alt="" src="https://oscimg.oschina.net/oscnet/up-3037395f6b7e5a710e08660d7d5b340aa29.png" referrerpolicy="no-referrer"></p><h3><strong>下一步将适配 X86 架构的 PC</strong></h3><p>鸿蒙系统已经应用在了手机、汽车、手表、电视、物联网等设备上，但在个人电脑领域，由于适配的技术难度较高，鸿蒙尚未实现全面适配。但迅龙软件一直在积极推进开源鸿蒙操作系统在 PC 领域的发展。</p><p>开发一个全新的电脑操作系统，难度非常之大，不但要基于新内核打造一个新系统，还要召集无数的开发者为其做应用方面的适配。为此，迅龙软件成立了一个专注于开源鸿蒙的研发和商业化落地的团队。</p><p>Orange Pi OS(OH) 目前只适配支持 ARM 架构的 PC，而迅龙的下一步计划是适配 X86 架构的 PC。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 06:08:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263519</guid>
            <link>https://www.oschina.net/news/263519</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[Jina AI 发布全球首个开源 8K 文本嵌入模型，超越 OpenAI]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">人工智能公司 Jina AI 宣布<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fjina.ai%2Fnews%2Fjina-ai-launches-worlds-first-open-source-8k-text-embedding-rivaling-openai%2F" target="_blank">推出其第二代文本嵌入模型</a>：&nbsp;<code>jina-embeddings-v2</code>&nbsp;。这款模型现在是唯一支持 8K（8192 个 token）上下文长度的开源产品。在能力和性能上与 OpenAI 的&nbsp;<code>text-embedding-ada-002</code>&nbsp;相当。</span></p><p><span style="color:#000000">与 OpenAI 的 8K 模型&nbsp;<code>text-embedding-ada-002</code>&nbsp;进行比较，</span><code>jina-embedding-v2</code><span style="color:#000000">&nbsp;在分类平均值、重排平均值、检索平均值和摘要平均值方面超越了 OpenAI 的 <code>text-embedding-ada-002</code>。</span></p><table style="-webkit-tap-highlight-color:transparent; -webkit-text-stroke-width:0px; background-attachment:scroll, scroll; background-color:#1e1e1e; background-repeat:no-repeat; background-size:10px 100%, 10px 100%; border-radius:8px; border-spacing:1px; box-sizing:inherit; color:#c0c4cc; display:block; font-family:poppins; font-size:clamp(0.7em, 0.7vw, 1em); font-style:normal; font-variant-caps:normal; font-variant-ligatures:normal; font-weight:300; letter-spacing:normal; margin:max(3.2vmin, 24px) auto 0px; max-width:100%; orphans:2; overflow-x:scroll; text-align:left; text-decoration-color:initial; text-decoration-style:initial; text-decoration-thickness:initial; text-transform:none; vertical-align:top; white-space:nowrap; widows:2; width:auto; word-spacing:0px"><thead><tr><th style="background-color:var(--color-primary)"><span style="color:#000000">Rank</span></th><th style="background-color:var(--color-primary)"><span style="color:#000000">Model</span></th><th style="background-color:var(--color-primary)"><span style="color:#000000">Model Size (GB)</span></th><th style="background-color:var(--color-primary)"><span style="color:#000000">Embedding Dimensions</span></th><th style="background-color:var(--color-primary)"><span style="color:#000000">Sequence Length</span></th><th style="background-color:var(--color-primary)"><span style="color:#000000">Average (56 datasets)</span></th><th style="background-color:var(--color-primary)"><span style="color:#000000">Classification Average (12 datasets)</span></th><th style="background-color:var(--color-primary)"><span style="color:#000000">Reranking Average (4 datasets)</span></th><th style="background-color:var(--color-primary)"><span style="color:#000000">Retrieval Average (15 datasets)</span></th><th style="background-color:var(--color-primary)"><span style="color:#000000">Summarization Average (1 dataset)</span></th></tr></thead><tbody><tr><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">15</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">text-embedding-ada-002</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">Unknown</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">1536</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">8191</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">60.99</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">70.93</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">84.89</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">56.32</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">30.8</span></td></tr><tr><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">17</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">jina-embeddings-v2-base-en</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">0.27</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">768</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">8192</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">60.38</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">73.45</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">85.38</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">56.98</span></td><td style="background-color:rgba(255, 255, 255, 0.2)"><span style="color:#000000">31.6</span></td></tr></tbody></table><p><span style="color:#000000; font-family:-apple-system,BlinkMacSystemFont,&quot;Apple Color Emoji&quot;,&quot;Segoe UI Emoji&quot;,&quot;Segoe UI Symbol&quot;,&quot;Segoe UI&quot;,&quot;PingFang SC&quot;,&quot;Hiragino Sans GB&quot;,&quot;Microsoft YaHei&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif">&nbsp;</span></p><p><span style="color:#000000"><code>text-embedding-ada-002&nbsp;</code></span>的特点：</p><ul><li><span style="color:#000000">从零到卓越：这个&nbsp;<code>jina-embeddings-v2</code>&nbsp;是从头开始构建的。在过去的三个月里，Jina AI 的团队进行了密集的研发、数据收集和调整。</span></li><li><span style="color:#000000">利用 8K 解锁扩展上下文潜力：&nbsp;<code>jina-embeddings-v2</code>&nbsp;8K 的上下文长度为新的行业应用开启了大门：</span><ul><li><span style="color:#000000">法律文件分析：确保对大量法律文本中的每一个细节进行捕捉和分析。</span></li><li><span style="color:#000000">医学研究：为了进行高级分析和发现，全面地嵌入科学论文。</span></li><li><span style="color:#000000">文学分析：深入研究长篇内容，捕捉微妙的主题元素。</span></li><li><span style="color:#000000">财务预测：通过详细的财务报告获得卓越的洞察力。</span></li><li><span style="color:#000000">会话式 AI：提升聊天机器人对复杂用户查询的响应能力。</span></li></ul></li></ul><p>同时，基准测试显示，在多个数据集中，这种 8K 上下文长度的扩展使得 jina-embeddings-v2 超越了其它领先的嵌入模型：</p><p><img height="1026" src="https://static.oschina.net/uploads/space/2023/1026/122725_U99l_3820517.png" width="3186" referrerpolicy="no-referrer"></p><p>接下来，Jina 将会有一篇相关的学术洞察文章发表。同时团队正在开发类似 OpenAI 的嵌入式 API 平台的产品；语言方面，正在进入多语种嵌入领域，目标是推出德英模型。</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 05:42:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263517/jina-ai-launches-worlds-first-open-source-8k-text-embedding</guid>
            <link>https://www.oschina.net/news/263517/jina-ai-launches-worlds-first-open-source-8k-text-embedding</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[SuperCLUE 10 月榜单：vivo 自研大模型位列国内第一]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p><span style="color:#000000">SuperCLUE <a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FVEqF1RriFpP2pOO_cvHo8Q" target="_blank">发布</a>了中文大模型 10 月榜单。其中，vivo 自研大模型以 70.74 的总分位列总排行榜第四，在国内大模型中排行第一；排在其后的分别是 Moonshot、文心一言 4.0 和 SenseChat 3.0。</span></p><p><span style="color:#000000">SuperCLUE 是中文通用大模型多层次的综合性测评基准，包括多轮开放问题测评 SuperCLUE-OPEN 和三大能力客观题测评 SuperCLUE-OPT。主要考察模型在中文能力上的表现，包括专业知识技能、语言理解与生成、AI 智能体和安全四大能力维度的上百个任务。</span></p><p><span style="color:#000000">本次评测选取了目前国内外最具代表性的 20 个通用大语言模型。与 9 月相比，新增了月之暗面的 Moonshot、百度的文心一言 4.0、科大讯飞的星火 V3.0、vivo 的 vivoLM 和阿里云的 Qwen-14B。</span></p><p><span style="color:#000000"><img alt="" height="387" src="https://oscimg.oschina.net/oscnet/up-888da32dd07eb885b7523790e04c2ba5d59.png" width="400" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">评测发现，国内第一梯队大模型格局已基本形成，在过去 11 个月的成绩令人振奋，头部几个中文大模型已经与 GPT3.5 极为接近。但与 GPT4 的距离依然遥远，尚未发现有对标和媲美 GPT4 的迹象。</span></p><p><span style="color:#000000"><img alt="" height="330" src="https://oscimg.oschina.net/oscnet/up-de85cfac6d99f493822220d7125e5f6a072.png" width="300" referrerpolicy="no-referrer"></span></p><p><span style="color:#000000">10 月评测数据集为全新的 3754 道测试题，其中包括 606 道多轮简答题和 3148 道客观选择题。</span></p><p><span style="color:#000000"><strong>总排行榜</strong></span></p><p><span style="color:#000000"><strong><img alt="" height="384" src="https://oscimg.oschina.net/oscnet/up-6f6d739e88a023ebf8dd36f8dcffa0f3232.png" width="300" referrerpolicy="no-referrer"></strong></span></p><p><span style="color:#000000">注：本次评测的 GPT3.5 版本为 gpt-3.5-turbo-16k；文心一言 4.0 和 SenseChat3.0 由于分数非常接近（在 0.05 分以内）认定为并列。</span></p><p><strong><span style="color:#000000">多轮开放问题 OPEN 排行榜</span></strong></p><p><img alt="" height="317" src="https://oscimg.oschina.net/oscnet/up-b88628f6ee5e93fd8b0b14a9424c200f852.png" width="300" referrerpolicy="no-referrer"></p><p><strong><span style="color:#000000">三大能力客观题 OPT 排行榜</span></strong></p><p><img alt="" height="322" src="https://oscimg.oschina.net/oscnet/up-92174a429ffc75918fd5fafe5a2a88ca814.png" width="300" referrerpolicy="no-referrer"></p><p><strong><span style="color:#000000">十大基础能力榜单</span></strong></p><p><img alt="" height="417" src="https://oscimg.oschina.net/oscnet/up-6a0c7eaab5ab0b4da9dcf89c3784747dbdf.png" width="500" referrerpolicy="no-referrer"></p><p><strong><span style="color:#000000">开源模型排行榜</span></strong></p><p><strong><span style="color:#000000"><img alt="" height="318" src="https://oscimg.oschina.net/oscnet/up-f39e0e579251fd4416fc3703af0fc769c61.png" width="500" referrerpolicy="no-referrer"></span></strong></p><p><strong><span style="color:#000000">SuperCLUE 观点</span></strong></p><ul><li><span style="color:#000000">国内第一梯队大模型经过 11 个月的努力，已经与 GPT3.5 极为接近。但与 GPT4 的距离依然巨大，尚未发现有对标和媲美 GPT4 的迹象。</span></li><li><span style="color:#000000">国内大模型多数擅长做选择题，在三大能力客观题 OPT 分数上有不少已经超过 GPT3.5。SuperCLUE 认为，客观题相对主观题更容易通过题库形式进行训练和提升；同时也由于客观题中包含中文特性问题，中文模型自然有一定的优势。</span></li><li><span style="color:#000000">国内大模型厂商从算力、数据、人才层面上做了很多努力，SuperCLUE 预计在接下来一个季度内将会出现全面超越 GPT3.5 的通用大模型。但如何赶超 GPT4，又会成为摆在所有中文模型研发机构面前新的难题。</span></li><li><span style="color:#000000">SuperCLUE 国内大模型能力成熟度：在语言理解与生成能力、大模型安全性防护能力上，国内一线模型已经相对成熟、表现优异；在专业技能与知识上，已能满足一些应用需求；在 Agent 智能体能力上，还相对落后、成熟度低。</span></li></ul><p><strong><span style="color:#000000"><span style="background-color:#ffffff">榜单地址：</span></span></strong><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.superclueai.com%2F" target="_blank">https://www.superclueai.com/</a></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 03:29:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263504</guid>
            <link>https://www.oschina.net/news/263504</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[微软 CEO 纳德拉：放弃 Windows Phone 和移动业务是错误决策]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>微软 CEO 纳德拉 (Satya Nadella) 近日在接受媒体访问时<u><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.theverge.com%2F2023%2F10%2F24%2F23930478%2Fmicrosoft-ceo-satya-nadella-mobile-windows-phone" target="_blank">表示</a></u>，<strong>微软放弃 Windows Phone 和移动业务是错误决策</strong>。</p><blockquote><p><img src="https://static.oschina.net/uploads/space/2023/1026/104708_aov4_2720166.png" referrerpolicy="no-referrer"></p></blockquote><p>纳德拉在 2014 年接替鲍尔默 (Steve Ballmer) 担任 CEO，仅仅一年之后就宣布裁撤了鲍尔默任内斥资 76 亿美元收购的诺基亚手机业务。此后 Windows Phone 事实上就退出了移动市场。</p><p>在接受 Business Insider 采访时，纳德拉坦言微软在「退出」手机业务上处理得不够恰当。在被问及他可能后悔的战略错误或错误决定时，纳德拉回答道：</p><blockquote><p>「这项决定（退出手机业务）时常被人拿出来讨论，也是我出任首席执行官之后做出的最困难决定——退出「当时定义下的手机」。</p><p>现在回想起来，我认为我们可以通过重新发明个人电脑、平板电脑和手机之间的计算类别，来重振手机业务。」</p></blockquote><p>在诺基亚手机业务被放弃多年后，微软才最终确认 Windows Phone 已经消亡。此后，微软推出了基于 Android 的 Surface Duo 和 Surface Duo 2 手机，但由于没有后续产品，也缺乏软件更新，因此 Surface Duo 手机品牌的未来悬而未决。</p><p>纳德拉是微软历史上第三位对移动领域的巨大失误进行反思的首席执行官。至于前两位，相信大家都不会陌生——</p><p>第一位比尔・盖茨：未收购安卓</p><p>微软联合创始人兼前首席执行官比尔・盖茨表示，他「有史以来最大的错误」是微软输给了 Android。</p><p>谷歌于 2005 年以 5000 万美元收购了 Android，前首席执行官埃里克・施密特 (Eric Schmidt) 在 2012 年承认，谷歌最初的重点是击败微软早期的 Windows Mobile 努力。</p><p>第二位鲍尔默：对 Android 和 iOS 威胁反应迟缓</p><p>微软前首席执行官史蒂夫・鲍尔默（Steve Ballmer）对 Android 和 iPhone 的威胁也反应迟缓，他将公司的精力集中在 Windows Mobile 上，同时还嘲笑 iPhone，称其为「世界上最昂贵的手机，对商业客户没有吸引力」。因为它没有键盘。」</p><p>鲍尔默在 2013 年承认，他后悔没有早点关注手机。「我很遗憾在 2000 年代初的一段时期，我们过于专注于 Windows [Vista] 周围的工作，以至于无法将人才重新部署到称为手机的新设备上」，鲍尔默解释道，「这是我最后悔的事情。」</p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 02:57:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263488/ms-ceo-satya-nadella-mobile-windows-phone</guid>
            <link>https://www.oschina.net/news/263488/ms-ceo-satya-nadella-mobile-windows-phone</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[openKylin 在 2023 CCF 中国开源大会发布「开明软件包格式」!]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span>10 月 21-22 日，以「开源联合，聚力共赢」为主题的 2023 CCF 中国开源大会在长沙北辰国际会议中心隆重召开。<strong>openKylin（开放麒麟）社区与麒麟软件作为本届 CCF 中国开源大会的重要合作伙伴，受邀参与本届大会，共见中国开源新征程，共筑中国开源新未来。</strong></span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-2c25e685ce2bb8b679685fd86c5ea089d96.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong>10 月 21 日上午，大会主会场「发布仪式」环节，openKylin 社区技术委员会副主任、麒麟软件有限公司高级副总经理魏立峰带来 openKylin 开源社区「开明软件包格式」发布。</strong>与传统软件包管理方式相比，开明软件包使应用隔离更兼容，支持一次打包，多处发布；支持 Linux 存量应用、AppImage 和 Flatpak 等多种格式应用的导入，统一管理；支持应用间隔离和更细粒度的权限管控，提高安全性，保护用户在每个应用中的隐私。</span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-f236e9c826fcd669bc5761c98de95e68807.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong>10 月 22 日上午，麒麟软件有限公司高级副总经理兰雨晴受邀出席中国电子开源高峰论坛</strong>，与飞腾信息技术有限公司首席科学家窦强，华为首席开源联络官、CNCF 基金会董事任旭东，阿里云数据库产品事业部负责人李飞飞，中国科学院计算技术研究所副所长、研究员包云岗和中国长城科技集团高级副总裁兼长城研究院院长李璇等众专家，结合自身实践与洞察，对计算产业的开源发展之路进行多维度的探讨与交流。</span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-1d79775d24cc7c41e1361a3c5541a43b7ba.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:left"><span><strong>10 月 22 日下午，openKylin 社区技术委员会委员、麒麟软件有限公司版本平台部副经理毛周受邀出席开源供应链安全技术分论坛</strong>，以<strong>《openKylin 开源社区安全体系建设》</strong>为题，介绍了开源安全风险现状以及 openKylin 社区为应对开源安全风险采取的举措。当前，开源安全风险已成为全球化挑战，openKylin 社区为更好的开展安全体系建设，组建了社区安全治理 SIG 组，引入 SDL 安全开发流程，并建设维护了 OKSRC（ 开放麒麟安全应急响应中心）、openKylin 漏洞感知大脑项目、openKylin 漏洞动态检测框架等一系列安全漏洞响应处理平台项目，为社区开发的全链路保驾护航。</span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-ab7e93745984ad2cbca48239d13d3de289f.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span><strong>10 月 22 日下午，麒麟软件云事业部研发总监，银河麒麟云原生操作系统技术负责人李俊良受邀出席开源社区建设与技术发展分论坛，</strong>以<strong>《操作系统与云原生开源技术体系的融合探索》</strong>为题，回顾云原生开源技术体系发展历程，前瞻云原生操作系统未来的发展趋势，为大家讲解介绍了银河麒麟云原生操作系统架构方案。</span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-0783ca15b4303ee1de5879aa6efa6ea469e.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0; margin-right:0; text-align:justify"><span>同时，大会期间，openKylin 社区在二楼北辰厅南侧序厅设置展台，众多与会来宾围聚展台前进行交流，打造一场身临其境的沉浸式开源互动体验。</span></p><div><p style="text-align:center"><img alt="" src="https://oscimg.oschina.net/oscnet/up-e28f266aeb2be6485d5aa850758b9b8148c.jpg" referrerpolicy="no-referrer"></p><p style="margin-left:0px; margin-right:0px">&nbsp;</p></div><p style="color:#222222; margin-left:0px; margin-right:0px; text-align:justify"><span>聚开源各界群智，于湘江之滨论道。2023 CCF 中国开源大会已结束！openKylin 作为我国桌面操作系统根社区，未来，也将持续在开源生态、人才培养、核心技术研究等领域努力，携手社区合作伙伴和开发者，为中国开源建设做出贡献，共同推动我国开源技术创新和生态完善，共创开源美好未来！</span></p></div>
                                    ]]>
            </description>
            <pubDate>Wed, 25 Oct 2023 01:33:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263472</guid>
            <link>https://www.oschina.net/news/263472</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[mysqlstat - MySQL 命令行监控工具]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><div data-traceid="project_detail_above_text_link_1" data-tracepid="project_detail_above_text_link"><a style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" target="_blank">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代 <img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div></div><p style="margin-left:0px; margin-right:0px; text-align:start">mysqlstat 是一个命令行工具，用于实时监控和分析 MySQL 服务器的性能指标和相关信息。</p><p style="text-align:start">它可以帮助 DBA（数据库管理员）和开发人员定位和解决数据库性能问题。</p><p style="text-align:start">以下是 mysqlstat 工具的主要功能：</p><ul><li>实时监控：mysqlstat 可以实时监控 MySQL 服务器的 QPS（每秒查询数）、TPS（每秒事务数）以及网络带宽使用情况等指标。</li><li>查询分析：它可以展示执行次数最频繁的前 N 条 SQL 语句，帮助定位查询效率低下的问题，以便进行优化。</li><li>表文件分析：mysqlstat 可以列出访问次数最频繁的前 N 张表文件（.ibd），这有助于查找热点表和磁盘使用情况。</li><li>锁阻塞：工具可以显示当前被锁阻塞的 SQL 语句，帮助识别并解决锁相关的问题。</li><li>死锁信息：mysqlstat 可以提供关于死锁的信息，帮助 DBA 了解并解决死锁问题。</li><li>索引分析：它可以查找重复或冗余的索引，帮助优化索引使用和减少存储空间的占用。</li><li>连接数统计：工具可以统计应用端 IP 的连接数总和，有助于了解数据库的连接负载情况。</li><li>表大小统计：mysqlstat 可以提供库中每个表的大小统计信息，有助于了解表的存储占用情况。</li><li>Binlog 分析：它可以在高峰期分析哪些表的 TPS 较高，帮助定位性能瓶颈或优化热点表。</li><li>查看主从复制信息：工具可以提供主从复制状态和延迟情况，方便监控和管理主从复制环境。</li></ul><pre><code class="language-bash">MySQL 命令行监控工具 - mysqlstat

options:
  -h, --help            show this help message and exit
  -H MYSQL_IP, --mysql_ip MYSQL_IP
                        Mysql IP
  -P MYSQL_PORT, --mysql_port MYSQL_PORT
                        Mysql Port
  -u MYSQL_USER, --mysql_user MYSQL_USER
                        Mysql User
  -p MYSQL_PASSWORD, --mysql_password MYSQL_PASSWORD
                        Mysql Password
  --top  N              需要提供一个整数类型的参数值，该参数值表示执行次数最频繁的前 N 条 SQL 语句
  --io  N               需要提供一个整数类型的参数值，该参数值表示访问次数最频繁的前 N 张表文件 ibd
  --lock                查看当前锁阻塞的 SQL
  --dead                查看死锁信息
  --index               查看重复或冗余的索引
  --conn                查看应用端 IP 连接数总和
  --tinfo               统计库里每个表的大小
  --binlog              Binlog 分析-高峰期排查哪些表 TPS 比较高
  --repl                查看主从复制信息
  -v, --version         show program's version number and exit</code></pre><h1 style="margin-left:0; margin-right:0; text-align:start">使用</h1><ul><li>实时监控 mysql 服务器的 QPS、TPS、网络带宽指标（默认不加参数选项）</li></ul><div style="text-align:start"><pre><code>shell&gt; chmod 755 mysqlstat  
shell&gt; ./mysqlstat -H 192.168.198.239 -P 6666 -u admin -p 'hechunyang'
</code></pre></div><p style="color:#1f2328; text-align:start"><a href="https://user-images.githubusercontent.com/19261879/274128415-a35ca689-3cc0-4ec9-8b5f-6682a1986511.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/19261879/274128415-a35ca689-3cc0-4ec9-8b5f-6682a1986511.png" referrerpolicy="no-referrer"></a></p><ul><li>执行次数最频繁的前 10 条 SQL 语句</li></ul><div style="text-align:start"><pre><code>shell&gt; ./mysqlstat -H 192.168.198.239 -P 6666 -u admin -p 'hechunyang' --top 10
</code></pre></div><p style="color:#1f2328; text-align:start"><a href="https://user-images.githubusercontent.com/19261879/273813598-11437da2-40c2-4ccf-8f9f-79d9d6f52d3d.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/19261879/273813598-11437da2-40c2-4ccf-8f9f-79d9d6f52d3d.png" referrerpolicy="no-referrer"></a></p><ul><li>访问次数最频繁的前 10 张表文件 ibd</li></ul><div style="text-align:start"><pre><code>shell&gt; ./mysqlstat -H 192.168.198.239 -P 6666 -u admin -p 'hechunyang' --io 10
</code></pre></div><p style="color:#1f2328; text-align:start"><a href="https://user-images.githubusercontent.com/19261879/273924296-025cc1d2-0548-464b-8e1a-1011ae06b6f2.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/19261879/273924296-025cc1d2-0548-464b-8e1a-1011ae06b6f2.png" referrerpolicy="no-referrer"></a></p><ul><li>查看当前锁阻塞的 SQL</li></ul><div style="text-align:start"><pre><code>shell&gt; ./mysqlstat -H 192.168.198.239 -P 6666 -u admin -p 'hechunyang' --lock
</code></pre></div><p style="color:#1f2328; text-align:start"><a href="https://user-images.githubusercontent.com/19261879/274178002-2482a30a-84e9-4b04-b811-6cef5f14e196.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/19261879/274178002-2482a30a-84e9-4b04-b811-6cef5f14e196.png" referrerpolicy="no-referrer"></a></p><ul><li>查看重复或冗余的索引</li></ul><div style="text-align:start"><pre><code>shell&gt; ./mysqlstat -H 192.168.198.239 -P 6666 -u admin -p 'hechunyang' --index
</code></pre></div><p style="color:#1f2328; text-align:start"><a href="https://user-images.githubusercontent.com/19261879/274191153-aebb781f-fcf0-4d41-8364-d381795913df.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/19261879/274191153-aebb781f-fcf0-4d41-8364-d381795913df.png" referrerpolicy="no-referrer"></a></p><ul><li>查看应用端 IP 连接数总和</li></ul><div style="text-align:start"><pre><code>shell&gt; ./mysqlstat -H 192.168.198.239 -P 6666 -u admin -p 'hechunyang' --conn
</code></pre></div><p style="color:#1f2328; text-align:start"><a href="https://user-images.githubusercontent.com/19261879/273929855-cf0c1e44-7ab9-4aa0-9461-e4e927a51da7.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/19261879/273929855-cf0c1e44-7ab9-4aa0-9461-e4e927a51da7.png" referrerpolicy="no-referrer"></a></p><ul><li>统计库里每个表的大小</li></ul><div style="text-align:start"><pre><code>shell&gt; ./mysqlstat -H 192.168.198.239 -P 6666 -u admin -p 'hechunyang' --tinfo
</code></pre></div><p style="color:#1f2328; text-align:start"><a href="https://user-images.githubusercontent.com/19261879/273930586-9b500c54-2db0-4f43-8d42-ca24f7a12223.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/19261879/273930586-9b500c54-2db0-4f43-8d42-ca24f7a12223.png" referrerpolicy="no-referrer"></a></p><ul><li>查看死锁信息</li></ul><div style="text-align:start"><pre><code>shell&gt; ./mysqlstat -H 192.168.198.239 -P 6666 -u admin -p 'hechunyang' --dead
</code></pre></div><p style="color:#1f2328; text-align:start"><a href="https://user-images.githubusercontent.com/19261879/273931418-2fb154d3-9d44-4eb1-9580-e43a22173dc0.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/19261879/273931418-2fb154d3-9d44-4eb1-9580-e43a22173dc0.png" referrerpolicy="no-referrer"></a></p><ul><li>Binlog 分析-高峰期排查哪些表 TPS 比较高</li></ul><div style="text-align:start"><pre><code>shell&gt; ./mysqlstat -H 192.168.198.239 -P 6666 -u admin -p 'hechunyang' --binlog mysql-bin.000003
</code></pre></div><p style="color:#1f2328; text-align:start"><a href="https://user-images.githubusercontent.com/19261879/274125842-14ec7453-c5f1-4964-abef-69e04015abf8.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/19261879/274125842-14ec7453-c5f1-4964-abef-69e04015abf8.png" referrerpolicy="no-referrer"></a></p><ul><li>查看主从复制信息</li></ul><div style="text-align:start"><pre><code>shell&gt; ./mysqlstat -H 192.168.198.239 -P 6666 -u admin -p 'hechunyang' --repl
</code></pre></div><p style="color:#1f2328; text-align:start"><a href="https://user-images.githubusercontent.com/19261879/274172613-367617bd-983c-4625-970c-ef5f59f9dec0.png" target="_blank"><img alt="image" src="https://user-images.githubusercontent.com/19261879/274172613-367617bd-983c-4625-970c-ef5f59f9dec0.png" referrerpolicy="no-referrer"></a></p><p style="text-align:start">支持 MySQL5.7/8.0，工具适用于 Centos7 系统。</p><p style="text-align:start">8.0 默认是 caching_sha2_password 用户认证，需要更改为 mysql_native_password</p><div style="text-align:start"><pre><code>mysql&gt; CREATE USER 'rd'@'%' IDENTIFIED WITH mysql_native_password BY '123456';
Query OK, 0 rows affected (0.00 sec)</code></pre></div></div>
                                                                ]]>
            </description>
            <pubDate>Tue, 24 Oct 2023 09:47:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/p/mysqlstat</guid>
            <link>https://www.oschina.net/p/mysqlstat</link>
        </item>
        <item>
            <title>
                <![CDATA[InfoWorld 公布 2023 年最佳开源软件]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">InfoWorld 公布了 2023 年最佳开源软件榜单，<span style="background-color:#ffffff">旨在表彰年度领先的软件开发、数据管理、分析、人工智能和机器学习开源工具。</span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">InfoWorld 是致力于引领 IT 决策者走在科技前沿的国际科技媒体品牌，每年 InfoWorld 都会根据软件对开源界的贡献，以及在业界的影响力评选出当年的 「最佳开源软件」 (InfoWorld's Best of Open Source Software Awards, Bossies)，该奖项评选已经延续了十多年。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><img height="328" src="https://oscimg.oschina.net/oscnet/up-7bcc961f98e1b6cd416e92f9b7a4def7253.png" width="500" referrerpolicy="no-referrer"></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">此次上榜的 25 个软件涵盖<span style="background-color:#ffffff">编程语言、运行时、应用程序框架、数据库、分析引擎、机器学习库、大型语言模型 (LLM)、用于部署 LLM 的工具等领域，具体如下</span><span style="background-color:#ffffff">（点击每个项目名可跳转进入项目介绍页面）：</span></span></p><h4><span style="color:#000000"><a href="https://www.oschina.net/p/hudi"><strong>Apache Hudi</strong></a></span></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">在构建开放式数据湖或<span style="background-color:#ffffff">湖仓一体</span>时，许多行业都需要一个更可发展和可变化的平台。以出版商、广告商和媒体买家的广告平台为例，仅有快速分析是不够的。<span style="background-color:#ffffff">InfoWorld 认为，</span>Apache Hudi 不仅提供了快速的数据格式、表格和 SQL，还使它们能够进行低延迟的实时分析。它与 Apache Spark、Apache Flink 以及 Presto、StarRocks 和 Amazon Athena 等工具集成。简而言之，如果你想在数据湖上进行实时分析，Hudi 是一个非常不错的选择。</span></p><h4><a href="https://www.oschina.net/p/iceberg"><span style="color:#2980b9"><strong>Apache Iceberg</strong></span></a></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">「<span style="background-color:#ffffff">HDFS 和 Hive 太慢了</span>」<span style="background-color:#ffffff">。Apache Iceberg 不仅能与 Hive 协同工作，还能直接与 Apache Spark 和 Apache Flink 以及 ClickHouse、Dremio 和 StarRocks 等其他系统协同工作。Iceberg 可为所有这些系统提供高性能的表格式，同时支持完整的模式演进、数据压缩和版本回滚。Iceberg 是许多现代开放数据湖的关键组成部分。</span></span></p><h4><a href="https://www.oschina.net/p/caravel"><span style="color:#2980b9"><strong><span style="background-color:#ffffff">Apache Superset</span></strong></span></a></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">多年来，Apache Superset 一直是数据可视化领域的佼佼者。对于想要大规模部署自助服务、面向客户或面向用户的分析工具的人来说，Superset 几乎是唯一的选择。Superset 几乎可以为任何分析场景提供可视化功能，包括从饼状图到复杂的地理空间图表。它适用于大多数 SQL 数据库，并提供 drag-and-drop builder&nbsp; 和 SQL IDE。如果你要对数据进行可视化，Superset 值得一试。</span></span></p><h4><span style="color:#000000"><a href="https://www.oschina.net/p/bun"><strong><span style="background-color:#ffffff">Bun</span></strong></a></span></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">Bun&nbsp;是采用&nbsp;Zig 语言编写的高性能 「全家桶」 JavaScript 运行时，官方称其为 "<strong>all-in-one</strong>&nbsp;JavaScript runtime"。<span style="background-color:#ffffff">Bun 提供了打包、转译、安装和运行 JavaScript &amp; TypeScript 项目的功能，内置原生打包器 (native bundler)、转译器、task runner、npm 客户端，以及&nbsp;</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FAPI%2Ffetch" target="_blank"><span style="color:#000000"><code>fetch</code></span></a><span style="color:#000000"><span style="background-color:#ffffff">、</span></span><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FAPI%2FWebSocket" target="_blank"><span style="color:#000000"><code>WebSocket</code></span></a><span style="color:#000000"><span style="background-color:#ffffff">等 Web API。</span></span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000"><span style="background-color:#ffffff">InfoWorld </span>评价称，当你以为 JavaScript 已经进入可预见的 routine 时，Bun 出现了。这个「轻佻」的名字掩盖了它严肃的目标：将服务器端 JS--运行时、捆绑程序、包管理器--所需的一切都集成到一个工具中。让它成为 Node.js 和 NPM 的直接替代品，但速度要快得多。这个简单的主张似乎让 Bun 成为了自 Node 颠覆 applecart 以来最具颠覆性的 JavaScript 工具。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">Bun 的速度部分归功于 Zig，其余则归功于创始人 Jared Sumner 对性能的执着追求。除了性能之外，将所有工具集成在一个软件包中，也让 Bun 成为 Node 和 Deno 的有力替代品。</span></p><h4><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.anthropic.com%2Findex%2Fclaude-2" target="_blank"><span style="color:#2980b9"><strong>Claude 2</strong></span></a></h4><p><span style="color:#000000">Anthropic 的 Claude 2 在单个提示中最多可接受 100K tokens（约 7 万字），并可生成多达数千个 tokens 的故事。Claude 可以编辑、改写、总结、分类、提取结构化数据、根据内容进行问答等。它在英语方面的训练最多，但在其他一系列常用语言方面也表现出色。Claude 还掌握了大量常用编程语言的知识。</span></p><p><span style="color:#000000">Claude 从一开始就被训练成&nbsp;<span style="background-color:#ffffff">helpful、honest 以及 harmless&nbsp;</span>的机器人，并经过广泛的重新训练，变得更加无害，更难产生攻击性或危险的输出。它不会根据你的数据进行训练，也不会在互联网上查询答案。</span></p><h4><a href="https://www.oschina.net/p/cockroach"><span style="color:#2980b9"><strong>CockroachDB</strong></span></a></h4><p><span style="color:#000000">CockroachDB 是一种分布式 SQL 数据库，可实现强一致性 ACID 事务，通过实现数据库读写的水平扩展性，解决了高性能、事务繁重型应用程序的关键扩展性问题。CockroachDB 还支持多区域和多云部署，以减少延迟并遵守数据法规。部署实例包括 Netflix 的数据平台，该平台拥有 100 多个 CockroachDB 生产集群，支持媒体应用和设备管理。主要客户包括 Hard Rock Sportsbook、摩根大通、桑坦德银行和 DoorDash。</span></p><h4><a href="https://www.oschina.net/p/cpython"><strong>CPython</strong></a></h4><p><span style="color:#000000">在 Python 3.11 和 Python 3.12 这两个版本中，Python 核心开发团队对 Python 解释器的参考实现 CPython 进行了一系列变革性升级。其结果是，Python 运行时性能对所有人来说都实现了大幅提升，而不仅限于那些选择使用新库或 cutting-edge 语法的少数人。</span></p><p><span style="color:#000000"><span style="background-color:#ffffff">InfoWorld 认为，</span>全局解释器锁（Global Interpreter Lock）是阻碍 Python 真正实现多线程并行的一个长期障碍。</span></p><h4><a href="https://www.oschina.net/p/duckdb"><strong>DuckDB</strong></a></h4><p><span style="color:#000000">DuckDB 是一种分析数据库，它秉承了 SQLite 等小型但功能强大的项目的精神。DuckDB 提供所有熟悉的 RDBMS 功能--SQL 查询、ACID 事务、二级索引--但增加了分析功能，如大型数据集的连接和聚合。它还可以摄取和直接查询常见的大数据格式，如 Parquet。</span></p><h4><span style="color:#000000"><strong><a href="https://www.oschina.net/p/htmx">HTMX</a> 和 </strong></span><a href="https://www.oschina.net/p/hyperscript"><strong>Hyperscript</strong><span>&nbsp;</span></a></h4><p><span style="color:#000000">HTMX 采用了大众所熟悉和喜爱的 HTML，并通过增强功能对其进行了扩展，使编写现代网络应用程序变得更加容易。HTMX 消除了用于连接网络前端和后端的大量模板 JavaScript。相反，它使用直观的 HTML 属性来执行任务，如发出 AJAX 请求和用数据填充元素。</span></p><p><span style="color:#000000">同类项目 Hyperscript 引入了类似于 HyperCard 的语法，简化了许多 JavaScript 任务，包括异步操作和 DOM 操作。总之，HTMX 和 Hyperscript 为当前的反应式框架趋势提供了一个大胆的替代方案。</span></p><h4><a href="https://www.oschina.net/p/istio"><strong>Istio</strong></a></h4><p><span style="color:#000000">Istio 是一个服务网格，可为基于容器的微服务简化网络和通信，提供流量路由、监控、日志记录和可观测性，同时通过加密、身份验证和授权功能增强安全性。</span></p><p><span style="color:#000000">Istio 将通信及其安全功能与应用程序和基础架构分离开来，从而实现了更安全、更一致的配置。该架构由部署在 Kubernetes 集群中的控制平面和用于控制通信策略的数据平面组成。2023 年，Istio 从 CNCF 孵化项目中毕业，在云原生社区中获得包括谷歌、IBM、红帽、Solo.io 等公司在内的支持和贡献。</span></p><h4><a href="https://www.oschina.net/p/kata-containers"><strong>Kata Containers</strong></a></h4><p><span style="color:#000000">Kata Containers 结合了容器的速度和虚拟机的隔离性，是一种安全的容器运行时，使用了英特尔 Clear Containers 和 Hyper.sh runV。Kata Containers 可与 Kubernetes 和 Docker 协同工作，同时支持多种硬件架构，包括 x86_64、AMD64、Arm、IBM p 系列和 IBM z 系列。</span></p><p><span style="color:#000000">获得了谷歌云、微软、AWS、阿里云、思科、戴尔、英特尔、红帽、SUSE 和 Ubuntu 等企业的赞助。</span></p><h4><a href="https://www.oschina.net/p/langchain"><strong>LangChain</strong></a></h4><p><span style="color:#000000">LangChain 是一个模块化框架，可简化由语言模型驱动的应用程序的开发。LangChain 使语言模型能够连接到数据源并与其环境交互。LangChain 组件是模块化抽象和抽象实现的集合。</span></p><p><span style="color:#000000">LangChain off-the-shelf chains 是组件的结构化组合，用于完成特定的高级任务。你可以使用组件定制现有的链，也可以构建新的链。LangChain 目前有三个版本： 一个是 Python 版本，一个是 TypeScript/JavaScript 版本，还有一个是 Go 版本。截至目前，已有大约 160 个 LangChain 集成。</span></p><h4><span style="color:#000000"><strong>Language Model Evaluation Harness</strong></span></h4><p><span style="color:#000000">当一个新的大语言模型（LLM）发布时，通常都会被进行评估，将该模型与 ChatGPT 在某个基准上进行比较，很多公司可能会使用 lm-eval-harness 来生成评估分数。lm-eval-harness 由分布式人工智能研究所 EleutherAI 创建，包含 200 多个基准，而且很容易扩展。该工具甚至被用来发现现有基准中的不足，以及为 Hugging Face 的开放式 LLM 排行榜提供支持。</span></p><h4><span style="color:#000000"><a href="https://www.oschina.net/p/llama"><strong>Llama 2</strong></a></span></h4><p><span style="color:#000000">Llama 2 是 Meta AI 的下一代大型语言模型，与 Llama 1 相比，其训练数据量增加了 40%（来自公开来源的 2 万亿个 tokens），上下文长度增加了一倍（4096）。</span></p><p><span style="color:#000000">Llama 2 是一个<span style="background-color:#ffffff">使用优化的 Transformer 架构的</span> auto-regressive 语言模型。调整后的版本使用了监督微调（SFT）和人类反馈强化学习（RLHF），以符合人类对有用性和安全性的偏好。Code Llama 是通过在代码特定数据集上对 Llama 2 进行微调而训练出来的，它可以根据代码或自然语言提示生成代码和有关代码的自然语言。</span></p><h4 style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/p/ollama"><strong>Ollama</strong></a></h4><p><span style="color:#000000">Ollama 是一款命令行工具，可在 macOS 和 Linux 上本地运行 Llama 2、Code Llama 和其他模型，并计划支持 Windows。Ollama 目前支持近二十多个语言模型系列，每个模型系列都有许多可用的"tags"。Tags&nbsp;是模型的变体，这些模型使用不同的微调方法以不同的规模进行训练，并以不同的级别进行量化，以便在本地良好运行。量化级别越高，模型越精确，但运行速度越慢，所需的内存也越大。</span></p><h4><a href="https://www.oschina.net/p/polars"><strong>Polars</strong></a></h4><p><span style="color:#000000">Pandas 能做到的 Polars 不一定能做到，但它能做到的事情都能以极快的速度完成--比 Pandas 快 10 倍，使用的内存只有 Pandas 的一半。来自 PySpark 的开发人员会觉得 Polars API 比 Pandas 中的更易上手。如果你正在处理大量数据，Polars 会让你的工作速度更快。</span></p><h4><a href="https://www.oschina.net/p/postgresql"><strong>PostgreSQL</strong></a></h4><p><span style="color:#000000">PostgreSQL 已经有 35 年的历史，有 700 多位贡献者参与其中，在关系数据库管理系统中估计占有 16.4% 的市场份额。最近的一项调查显示，在 9 万名开发人员中，45% 的人首选 PostgreSQL。</span></p><p><span style="color:#000000">9 月份发布的 PostgreSQL 16 提升了聚合和选择不同查询的性能，增加了查询并行性，带来了新的 I/O 监控功能，并增加了更细粒度的安全访问控制。同样在 2023 年，Amazon Aurora PostgreSQL 增加了 pgvector，以支持生成式 AI 嵌入，谷歌云也为 AlloyDB PostgreSQL 发布了类似的功能。</span></p><h4><a href="https://www.oschina.net/p/qlora"><strong>QLoRA</strong></a></h4><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">QLoRA 是华盛顿大学提出的一种有效的微调方法，可以减少内存使用量，足以在单个 48GB GPU 上微调 65B 参数模型，同时保留完整的 16 位微调任务性能。QLoRA 通过冻结的 4 位量化预训练语言模型将梯度反向传播到低阶适配器 (LoRA)。</span></p><p style="color:#333333; margin-left:0; margin-right:0; text-align:left"><span style="color:#000000">使用 QLoRA 意味着你可以在台式机上微调 30B 以上的庞大参数模型，与在多个 GPU 上进行全面调整相比，精度损失很小。事实上，QLoRA 有时甚至做得更好。InfoWorld 评价称，「低位推理和训练意味着更多的人可以使用 LLM--这不正是开源的意义所在吗？」</span></p><h4><a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Frapids.ai%2F" target="_blank"><span style="color:#2980b9"><strong>RAPIDS</strong></span></a></h4><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">RAPIDS&nbsp;是用于常见数据科学和分析任务的 GPU 加速库的集合。每个库处理特定的任务，例如用于数据帧处理的 cuDF、用于图形分析的 cuGraph 和用于机器学习的 cuML 。</span></span></p><p style="margin-left:0; margin-right:0; text-align:start"><span style="color:#000000"><span style="background-color:#ffffff">其他库涵盖图像处理、信号处理和空间分析，而集成则将 RAPIDS 引入 Apache Spark、SQL 和其他工作负载。如果现有的库都不符合要求，RAPIDS 还包括 RAFT，这是用于构建自己的解决方案的 GPU-accelerated primitives 的集合。RRAPIDS 还可与 Dask 携手跨多个节点进行扩展，并与 Slurm 一起在高性能计算环境中运行。</span></span></p><h4 style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/p/spark-nlp"><strong>Spark NLP</strong></a></h4><p><span style="color:#000000"><span style="background-color:#ffffff">Spark NLP 是一个自然语言处理库，可在 Apache Spark 上运行，支持 Python、Scala 和 Java。该库可帮助开发人员和数据科学家尝试使用大型语言模型，</span><span style="background-color:#ffffff">包括来自 Google、Meta、OpenAI 等的 Transformer 模型。</span></span></p><p><span style="color:#000000"><span style="background-color:#ffffff">Spark NLP 的模型中心有 2 万多个模型和管道可供下载，用于语言翻译、命名实体识别、文本分类、问题解答、情感分析和其他用例。2023 年，Spark NLP 发布了许多 LLM 集成、新的图像到文本注释器、对所有主要公共云存储系统的支持以及对 ONNX（开放神经网络交换）的支持。</span></span></p><h4><a href="https://www.oschina.net/p/starrocks"><strong>StarRocks</strong></a></h4><p><span style="color:#000000">分析技术已经发生了变化。如今的公司经常要向数百万并发用户实时提供复杂的数据，即使是 PB 级的查询也必须在数秒内完成。StarRocks 是一个查询引擎，它结合了 native code（C++）、高效的基于成本的优化器、使用 SIMD 指令集的矢量处理、缓存和物化视图，可高效处理大规模连接。</span></p><p><span style="color:#000000">StarRocks 甚至能在直接查询数据湖和湖仓一体（包括 Apache Hudi 和 Apache Iceberg）时提供接近原生的性能。InfoWorld 认为，无论你是在追求实时分析、提供面向客户的分析服务，还是只是想在不移动数据的情况下查询数据湖，StarRocks 都值得一试。</span></p><h4><a href="https://www.oschina.net/p/tensorflow-js"><strong>TensorFlow.js</strong></a></h4><p><span style="color:#000000">TensorFlow.js 将谷歌 TensorFlow 机器学习框架的强大功能打包到 JavaScript 软件包中，以最低的学习成本为 JavaScript 开发人员带来非凡的功能。你可以在浏览器、带有 WebGL 加速功能的纯 JavaScript 栈或服务器上的 tfjs-node 库中运行 TensorFlow.js。Node 库为你提供了相同的 JavaScript API，但运行于 C 二进制程序之上，可最大限度地提高速度和 CPU/GPU 使用率。</span></p><p><span style="color:#000000">「就对机器学习感兴趣的 JS 开发人员而言，TensorFlow.js 显然是是一个不错的选择。它为 JS 生态系统做出了值得欢迎的贡献，让广大开发者更容易接触到人工智能。」</span></p><h4 style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/p/vllm"><strong>vLLM</strong></a></h4><p><span style="color:#000000">由于急于在生产中部署大语言模型，导致出现了大量专注于尽可能快地进行推理的框架。vLLM 是最有前途的框架之一，它支持 Hugging Face 模型、兼容 OpenAI 的 API 和 PagedAttention 算法。</span></p><p><span style="color:#000000">目前，它是在生产中为 LLM 提供服务的不二之选，并且 FlashAttention 2 支持等新功能也在快速添加中。</span></p><h4 style="margin-left:0px; margin-right:0px; text-align:start"><a href="https://www.oschina.net/p/weaviate"><strong>Weaviate</strong></a></h4><p><span style="color:#000000">生成式 AI 的蓬勃发展激发了对新型数据库的需求，这种数据库可以支持海量复杂的非结构化数据。向量数据库应运而生。</span></p><p><span style="color:#000000">Weaviate 在部署模式、生态系统集成和数据隐私方面为开发人员提供了大量灵活性。Weaviate 将关键词搜索与向量搜索相结合，可快速、可扩展地发现多模态数据（文本、图像、音频、视频）。它还有用于检索增强生成（RAG）的开箱即用模块，可为聊天机器人和其他生成式 AI 应用程序提供特定领域的数据，使其更加有用。</span></p><h4><a href="https://www.oschina.net/p/zig"><strong>Zig</strong></a></h4><p><span style="color:#000000">InfoWorld 称，Zig 可能是当今所有的开源项目中最重要的一个。</span></p><p><span style="color:#000000">Zig 致力于创建一种具有程序级内存控制功能的通用编程语言，其性能优于 C 语言，同时提供更强大、更不易出错的语法。其目标是取代 C 语言，成为编程生态系统中的基准语言。由于 C 语言无处不在（即系统和设备中最常见的组件），Zig 的成功可能意味着性能和稳定性的广泛提升。</span></p><p><span style="color:#000000">「这是我们都应该期待的。另外，Zig 是一个优秀的、老式的草根项目，拥有着巨大的抱负和开源精神。」</span></p><hr><p><span style="color:#000000"><span style="background-color:#ffffff">以上就是 2023 年度&nbsp;InfoWorld Bossie Awards 项目，关于每个项目具体的入选评语等详细信息，可<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fwww.infoworld.com%2Farticle%2F3709196%2Fthe-best-open-source-software-of-2023.html" target="_blank">查看网站原文</a>。</span></span></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 24 Oct 2023 08:21:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263384/2023-infoworld-bossie-awards</guid>
            <link>https://www.oschina.net/news/263384/2023-infoworld-bossie-awards</link>
            <author>
                <![CDATA[来源: OSCHINA]]>
            </author>
        </item>
        <item>
            <title>
                <![CDATA[前三季度我国软件业务收入 87610 亿元，同比增长 13.5%]]>
            </title>
            <description>
                <![CDATA[<div class="content"><div class="ad-wrap" style="margin-bottom: 8px;"><a data-traceid="news_detail_above_text_link_1" data-tracepid="news_detail_above_text_link" style="color:#A00; font-weight:bold;" href="https://www.oschina.net/event/2331193" _blank"="">OSC 请你来轰趴啦！1028 苏州源创会，一起寻宝 AI 时代<img src="https://www.oschina.net/img/hot3.png" align="absmiddle" style="max-height: 32px;max-width: 32px;margin-top: -4px;" referrerpolicy="no-referrer"></a></div><p>2023 年前三季度软件业经济运行情况已<a href="https://www.oschina.net/action/GoToLink?url=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2F3BssaWqag8KSIDrsqTMn1A" target="_blank">发布</a>。前三季度，我国软件和信息技术服务业（以下简称「软件业」）运行态势平稳，软件业务收入两位数增长，利润总额保持较快增长，软件业务出口降幅收窄。</p><h4><strong>一、总体运行情况</strong></h4><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong><span>软件业务收入两位数增长。</span></strong><span>前三季度，我国软件业务收入 87610 亿元，同比增长 13.5%。</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img height="245" src="https://oscimg.oschina.net/oscnet/up-712e70a3953fc0c2cfa1aa152a13d323821.png" width="500" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>利润总额保持较快增长</strong>。前三季度，软件业利润总额 10090 亿元，同比增长 18.3%。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img height="243" src="https://oscimg.oschina.net/oscnet/up-b79b774cb8b76c5ec4ddb7c143ff73da71e.png" width="500" referrerpolicy="no-referrer"></p><p><strong>软件业务出口降幅收窄。</strong>前三季度，软件业务出口 364 亿美元，同比下降 4.4%。</p><p><img height="242" src="https://oscimg.oschina.net/oscnet/up-3f2b6b02eec4d9fa46d8b7dea207795ab3c.png" width="500" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px"><strong><span>二、分领域运行情况</span></strong></h4><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>软件产品收入平稳增长。</strong>前三季度，软件产品收入 20465 亿元，同比增长 10.3%，占全行业收入的比重为 23.4%。其中，工业软件产品收入 1976 亿元，同比增长 11.8%。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>信息技术服务收入较快增长</strong>。前三季度，信息技术服务收入 58335 亿元，同比增长 15%，占全行业收入的比重为 66.6%。其中，云计算、大数据服务共实现收入 8750 亿元，同比增长 15.8%，占信息技术服务收入的比重为 15%；集成电路设计收入 2236 亿元，同比增长 6.8%；电子商务平台技术服务收入 7990 亿元，同比增长 9.4%。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>信息安全收入增速稳步增长</strong>。前三季度，信息安全产品和服务收入 1421 亿元，同比增长 9.3%。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>嵌入式系统软件收入增速较快增长</strong>。前三季度，嵌入式系统软件收入 7389 亿元，同比增长 12%。<span>&nbsp;</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img height="244" src="https://oscimg.oschina.net/oscnet/up-dbd4d30fbf582bc5c9ff7620d57956be56e.png" width="500" referrerpolicy="no-referrer"></p><h4 style="margin-left:0px; margin-right:0px"><strong><span>三、分地区运行情况</span></strong></h4><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>中、西部地区软件业务收入小幅回落，东部地区增势突出</strong>。前三季度，东部地区完成软件业务收入 72555 亿元，同比增长 14.1%，增速较 1—8 月份提高 0.1 个百分点；中部地区完成软件业务收入 4317 亿元，同比增长 12.1%，增速较 1—8 月份回落 1 个百分点；西部地区完成软件业务收入 8816 亿元，同比增长 9.9%，增速较 1—8 月份回落 0.2 个百分点；东北地区完成软件业务收入 1922 亿元，同比增长 13.6%，增速较 1—8 月份提高 0.3 个百分点。四个地区软件业务收入占全国比重分别为 82.8%、4.9%、10.1% 和 2.2%。</p><p><img height="246" src="https://oscimg.oschina.net/oscnet/up-fd5b0b7172cab689c7ca7da5f680b18a7c4.png" width="500" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>京津冀地区增势突出，长三角地区稳中有升</strong>。前三季度，京津冀地区完成软件业务收入 21577 亿元，同比增长 17.4%，增速较 1—8 月份回落 0.4 个百分点；长三角地区完成软件业务收入 25446 亿元，同比增长 10.8%，增速较 1—8 月份提高 0.5 个百分点。两个地区软件业务收入占全国比重分别为 24.6%、29.0%。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>主要软件大省收入占比持续提升</strong>。前三季度，软件业务收入居前 5 名的省份中，北京市、广东省、江苏省、山东省、上海市软件收入分别为 18962 亿元、14887 亿元、10182 亿元、9425 亿元和 8104 亿元，分别增长 17.6%、14.2%、8.7%、16.6% 和 19.1%，五省（市）合计软件业务收入 61560 亿元，占全国比重为 70.3%，占比较去年同期提高 1.1 个百分点。</p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img height="241" src="https://oscimg.oschina.net/oscnet/up-c03d086cb65a0cc5fff1393298364228ff1.png" width="500" referrerpolicy="no-referrer"></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><strong>中心城市软件业务收入平稳增长</strong>。前三季度，全国 15 个副省级中心城市实现软件业务收入 42538 亿元，同比增长 11%，增速较 1—8 月份提高 0.2 个百分点，占全国比重为 48.6%，占比较去年同期回落 1 个百分点。其中，大连、济南、青岛、深圳、厦门、沈阳和成都软件业务收入增速超过全行业整体增速。<span>&nbsp;</span></p><p style="color:rgba(0, 0, 0, 0.9); margin-left:0; margin-right:0; text-align:justify"><img height="244" src="https://oscimg.oschina.net/oscnet/up-fd2d211fdebc504db32988a98ecc224dc98.png" width="500" referrerpolicy="no-referrer"></p></div>
                                    ]]>
            </description>
            <pubDate>Tue, 24 Oct 2023 08:01:00 GMT</pubDate>
            <guid isPermaLink="false">https://www.oschina.net/news/263380</guid>
            <link>https://www.oschina.net/news/263380</link>
            <author>
                <![CDATA[来源: 投稿]]>
            </author>
        </item>
    </channel>
</rss>
